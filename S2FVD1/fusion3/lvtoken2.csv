,gadget,val1,val2,val3,val4,val5
0,"['Parse_Env_Var', '(', 'void', ')', '{', 'char', '*', 'p', '=', 'getenv', '(', '""""', ')', ';', 'if', '(', 'p', '==', 'NULL', ')', 'return', ';', 'if', '(', 'strstr', '(', 'p', ',', '""""', ')', '!=', 'NULL', ')', 'use_gui', '=', '0', ';', 'if', '(', 'strstr', '(', 'p', ',', '""""', ')', '!=', 'NULL', ')', 'use_ansi', '=', '0', ';', 'if', '(', '(', 'p', '=', 'strstr', '(', 'p', ',', '""""', ')', ')', '!=', 'NULL', ')', '{', 'p', '+=', '4', ';', 'if', '(', 'isdigit', '(', '*', 'p', ')', ')', 'fd_out', '=', 'strtol', '(', 'p', ',', 'NULL', ',', '10', ')', ';', '{', 'char', 'buff', '[', '1024', ']', ';', 'char', '*', 'q', '=', 'buff', ';', 'while', '(', '*', 'p', '&&', 'isprint', '(', '*', 'p', ')', '&&', '!isspace', '(', '*', 'p', ')', ')', '*', 'q', '++', '=', '*', 'p', '++', ';', '*', 'q', '=', ""''"", ';', '}', '}', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1,"['img_filename', '(', 'const', 'char', '*', 'mapimgfile', ',', 'enum', 'imageformat', 'format', ',', 'char', '*', 'filename', ',', 'size_t', 'filename_len', ')', '{', 'fc_assert_ret_val', '(', 'imageformat_is_valid', '(', 'format', ')', ',', 'FALSE', ')', ';', 'fc_snprintf', '(', 'filename', ',', 'filename_len', ',', '""""', ',', 'mapimgfile', ',', 'imageformat_name', '(', 'format', ')', ')', ';', 'return', 'TRUE', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
2,"['sigar_net_interface_list_get', '(', 'sigar_t', '*', 'sigar', ',', 'sigar_net_interface_list_t', '*', 'iflist', ')', '{', 'int', 'n', ',', 'lastlen', '=', '0', ';', 'struct', 'ifreq', '*', 'ifr', ';', 'struct', 'ifconf', 'ifc', ';', 'int', 'sock', '=', 'socket', '(', 'AF_INET', ',', 'SOCK_DGRAM', ',', '0', ')', ';', 'if', '(', 'sock', '<', '0', ')', '{', 'return', 'errno', ';', '}', 'for', '(', ';', ';', ')', '{', 'if', '(', '!sigar', '->', 'ifconf_buf', '||', 'lastlen', ')', '{', 'sigar', '->', 'ifconf_len', '+=', 'sizeof', '(', 'struct', 'ifreq', ')', '*', 'SIGAR_NET_IFLIST_MAX', ';', 'sigar', '->', 'ifconf_buf', '=', 'realloc', '(', 'sigar', '->', 'ifconf_buf', ',', 'sigar', '->', 'ifconf_len', ')', ';', '}', 'ifc', '.', 'ifc_len', '=', 'sigar', '->', 'ifconf_len', ';', 'ifc', '.', 'ifc_buf', '=', 'sigar', '->', 'ifconf_buf', ';', 'if', '(', 'ioctl', '(', 'sock', ',', 'MY_SIOCGIFCONF', ',', '&', 'ifc', ')', '<', '0', ')', '{', 'if', '(', '(', 'errno', '!=', 'EINVAL', ')', '||', '(', 'lastlen', '==', 'ifc', '.', 'ifc_len', ')', ')', '{', 'free', '(', 'ifc', '.', 'ifc_buf', ')', ';', 'return', 'errno', ';', '}', '}', 'if', '(', 'ifc', '.', 'ifc_len', '<', 'sigar', '->', 'ifconf_len', ')', '{', '}', 'if', '(', 'ifc', '.', 'ifc_len', '!=', 'lastlen', ')', '{', 'lastlen', '=', 'ifc', '.', 'ifc_len', ';', 'continue', ';', '}', 'break', ';', '}', 'close', '(', 'sock', ')', ';', 'iflist', '->', 'number', '=', '0', ';', 'iflist', '->', 'size', '=', 'ifc', '.', 'ifc_len', ';', 'iflist', '->', 'data', '=', 'malloc', '(', 'sizeof', '(', '*', '(', 'iflist', '->', 'data', ')', ')', '*', 'iflist', '->', 'size', ')', ';', 'ifr', '=', 'ifc', '.', 'ifc_req', ';', 'for', '(', 'n', '=', '0', ';', 'n', '<', 'ifc', '.', 'ifc_len', ';', 'n', '+=', 'sizeof', '(', 'struct', 'ifreq', ')', ',', 'ifr', '++', ')', '{', 'if', '(', 'ifr', '->', 'ifr_addr', '.', 'sa_family', '!=', 'AF_LINK', ')', '{', '/', '*', 'XXX', ':', 'dunno', 'if', 'this', 'is', 'right', '.', '*', 'otherwise', 'end', 'up', 'with', 'two', ""''"", 'and', 'three', '*', 'with', 'the', 'same', 'ip', 'address', '.', 'continue', ';', '}', '#', 'ifdef', 'if', '(', '!sigar_netif_configured', '(', 'sigar', ',', 'ifr', '->', 'ifr_name', ')', ')', '{', 'continue', ';', '}', '#', 'iflist', '->', 'data', '[', 'iflist', '->', 'number', '++', ']', '=', 'sigar_strdup', '(', 'ifr', '->', 'ifr_name', ')', ';', '}', '#ifdef', 'proc_net_interface_list_get', '(', 'sigar', ',', 'iflist', ')', ';', 'return', 'SIGAR_OK', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
3,"['OperandsComplete', '(', ')', 'const', '{', 'unsigned', 'short', 'NumOperands', '=', 'TID', '->', 'getNumOperands', '(', ')', ';', 'if', '(', '!TID', '->', 'isVariadic', '(', ')', '&&', 'getNumOperands', '(', ')', '-', 'NumImplicitOps', '>=', 'NumOperands', ')', 'return', 'true', ';', '/', '/', 'Broken', ':', 'we', 'have', 'all', 'the', 'operands', 'of', 'this', 'return', 'false', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
4,"['maybe_adjust_types_for_deduction', '(', 'unification_kind_t', 'strict', ',', 'tree', '*', 'parm', ',', 'tree', '*', 'arg', ',', 'tree', 'arg_expr', ')', '{', 'int', 'result', '=', '0', ';', 'switch', '(', 'strict', ')', '{', 'case', 'DEDUCE_CALL', ':', 'break', ';', 'case', 'DEDUCE_CONV', ':', '{', '/', '*', 'Swap', 'PARM', 'and', 'ARG', 'throughout', 'the', 'remainder', 'of', 'function', ';', 'the', 'handling', 'is', 'precisely', 'symmetric', 'since', 'tree', '*', 'temp', '=', 'parm', ';', 'parm', '=', 'arg', ';', 'arg', '=', 'temp', ';', 'break', ';', '}', 'case', 'DEDUCE_EXACT', ':', '/', '*', 'Core', 'issue', '#873', ':', 'Do', 'the', 'DR606', 'thing', '(', 'see', 'below', ')', 'for', 'these', 'cases', ',', 'too', ',', 'but', 'here', 'handle', 'it', 'by', 'stripping', 'the', 'reference', 'from', 'if', '(', 'TREE_CODE', '(', '*', 'parm', ')', '==', '&&', 'TYPE_REF_IS_RVALUE', '(', '*', 'parm', ')', '&&', 'TREE_CODE', '(', 'TREE_TYPE', '(', '*', 'parm', ')', ')', '==', '&&', 'cp_type_quals', '(', 'TREE_TYPE', '(', '*', 'parm', ')', ')', '==', '&&', 'TREE_CODE', '(', '*', 'arg', ')', '==', '&&', '!TYPE_REF_IS_RVALUE', '(', '*', 'arg', ')', ')', '*', 'parm', '=', 'TREE_TYPE', '(', '*', 'parm', ')', ';', 'return', '0', ';', 'default', ':', 'gcc_unreachable', '(', ')', ';', '}', 'if', '(', 'TREE_CODE', '(', '*', 'parm', ')', '!=', 'REFERENCE_TYPE', ')', '{', '/', '*', '[', 'temp', '.', 'deduct', '.', 'call', ']', 'If', 'P', 'is', 'not', 'a', 'reference', 'type', ':', '--', 'If', 'A', 'is', 'an', 'array', 'type', ',', 'the', 'pointer', 'type', 'produced', 'by', 'array', '-', 'to', '-', 'pointer', 'standard', 'conversion', '(', '_conv', '.', 'array_', ')', 'used', 'in', 'place', 'of', 'A', 'for', 'type', 'deduction', ';', 'otherwise', ',', '--', 'If', 'A', 'is', 'a', 'function', 'type', ',', 'the', 'pointer', 'type', 'produced', 'the', 'function', '-', 'to', '-', 'pointer', 'standard', '(', '_conv', '.', 'func_', ')', 'is', 'used', 'in', 'place', 'of', 'A', 'for', 'type', 'deduction', ';', 'otherwise', ',', '--', 'If', 'A', 'is', 'a', 'cv', '-', 'qualified', 'type', ',', 'the', 'top', 'cv', '-', 'qualifiers', 'of', ""A's"", 'type', 'are', 'ignored', 'for', 'if', '(', 'TREE_CODE', '(', '*', 'arg', ')', '==', 'ARRAY_TYPE', ')', '*', 'arg', '=', 'build_pointer_type', '(', 'TREE_TYPE', '(', '*', 'arg', ')', ')', ';', 'else', 'if', '(', 'TREE_CODE', '(', '*', 'arg', ')', '==', 'FUNCTION_TYPE', ')', '*', 'arg', '=', 'build_pointer_type', '(', '*', 'arg', ')', ';', '*', 'arg', '=', 'TYPE_MAIN_VARIANT', '(', '*', 'arg', ')', ';', '}', '/', '*', 'From', 'C', '++', '0x', '[', '14', '.', '8', '.', '2', '.', '1', '/', '3', 'temp', '.', 'deduct', '.', 'call', ']', '(', 'after', 'DR606', ')', ',', '""If', 'P', 'of', 'the', 'form', 'T', '&&', ',', 'where', 'T', 'is', 'a', 'template', 'parameter', ',', 'and', 'the', 'if', '(', 'TREE_CODE', '(', '*', 'parm', ')', '==', '&&', 'TYPE_REF_IS_RVALUE', '(', '*', 'parm', ')', '&&', 'TREE_CODE', '(', 'TREE_TYPE', '(', '*', 'parm', ')', ')', '==', '&&', 'cp_type_quals', '(', 'TREE_TYPE', '(', '*', 'parm', ')', ')', '==', '&&', '(', 'arg_expr', '?', 'real_lvalue_p', '(', 'arg_expr', ')', '/', '*', 'try_one_overload', ""doesn't"", 'provide', 'an', 'arg_expr', ',', ':', 'TREE_CODE', '(', '*', 'arg', ')', '==', 'FUNCTION_TYPE', ')', ')', '*', 'arg', '=', 'build_reference_type', '(', '*', 'arg', ')', ';', '/', '*', '[', 'temp', '.', 'deduct', '.', 'call', ']', 'If', 'P', 'is', 'a', 'cv', '-', 'qualified', 'type', ',', 'the', 'top', 'level', 'cv', '-', 'of', ""P's"", 'type', 'are', 'ignored', 'for', 'type', 'deduction', '.', 'If', 'P', 'is', 'reference', 'type', ',', 'the', 'type', 'referred', 'to', 'by', 'P', 'is', 'used', '*', 'parm', '=', 'TYPE_MAIN_VARIANT', '(', '*', 'parm', ')', ';', 'if', '(', 'TREE_CODE', '(', '*', 'parm', ')', '==', 'REFERENCE_TYPE', ')', '{', '*', 'parm', '=', 'TREE_TYPE', '(', '*', 'parm', ')', ';', 'result', '|=', 'UNIFY_ALLOW_OUTER_MORE_CV_QUAL', ';', '}', '/', '*', 'DR', '322', '.', 'For', 'conversion', 'deduction', ',', 'remove', 'a', 'reference', 'type', 'on', 'if', '(', 'strict', '==', 'DEDUCE_CONV', '&&', 'TREE_CODE', '(', '*', 'arg', ')', '==', 'REFERENCE_TYPE', ')', '*', 'arg', '=', 'TREE_TYPE', '(', '*', 'arg', ')', ';', 'return', 'result', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
5,"['GaussianSetHistogram', '(', 'struct', 'histogram_s', '*', 'h', ',', 'float', 'mean', ',', 'float', 'sd', ')', '{', 'int', 'sc', ';', 'int', 'hsize', ',', 'idx', ';', 'int', 'nbins', ';', 'float', 'delta', ';', 'UnfitHistogram', '(', 'h', ')', ';', 'h', '->', 'fit_type', '=', 'HISTFIT_GAUSSIAN', ';', 'h', '->', 'param', '[', 'GAUSS_MEAN', ']', '=', 'mean', ';', 'h', '->', 'param', '[', 'GAUSS_SD', ']', '=', 'sd', ';', '/', '*', 'Calculate', 'the', 'expected', 'values', 'for', 'the', 'histogram', '.', 'hsize', '=', 'h', '->', 'max', '-', 'h', '->', 'min', '+', '1', ';', 'h', '->', 'expect', '=', '(', 'float', '*', ')', 'MallocOrDie', '(', 'sizeof', '(', 'float', ')', '*', 'hsize', ')', ';', 'for', '(', 'idx', '=', '0', ';', 'idx', '<', 'hsize', ';', 'idx', '++', ')', 'h', '->', 'expect', '[', 'idx', ']', '=', '0', '.', ';', '/', '*', 'Note', ':', 'ideally', ""we'd"", 'use', 'the', 'Gaussian', 'distribution', '*', 'to', 'find', 'the', 'histogram', 'occupancy', 'in', 'the', 'window', 'sc', '.', '.', 'sc', '+', '1', '.', '*', 'However', ',', 'the', 'distribution', 'function', 'is', 'hard', 'to', 'calculate', '.', '*', 'Instead', ',', 'estimate', 'the', 'histogram', 'by', 'taking', 'the', 'density', 'at', 'sc', '+', '0', '.', '5', '.', 'for', '(', 'sc', '=', 'h', '->', 'min', ';', 'sc', '<=', 'h', '->', 'max', ';', 'sc', '++', ')', '{', 'delta', '=', '(', '(', 'float', ')', 'sc', '+', '0', '.', '5', ')', '-', 'h', '->', 'param', '[', 'GAUSS_MEAN', ']', ';', 'h', '->', 'expect', '[', 'sc', '-', 'h', '->', 'min', ']', '=', '(', 'float', ')', 'h', '->', 'total', '*', '(', '(', '1', '.', '/', '(', 'h', '->', 'param', '[', 'GAUSS_SD', ']', '*', 'sqrt', '(', '2', '.', '*', '3', '.', '14159', ')', ')', ')', '*', '(', 'exp', '(', '-', '1', '.', '*', 'delta', '*', 'delta', '/', '(', '2', '.', '*', 'h', '->', 'param', '[', 'GAUSS_SD', ']', '*', 'h', '->', 'param', '[', 'GAUSS_SD', ']', ')', ')', ')', ')', ';', '}', '/', '*', 'Calculate', 'the', 'goodness', '-', 'of', '-', 'fit', '(', 'within', 'whole', 'region', ')', 'h', '->', 'chisq', '=', '0', '.', ';', 'nbins', '=', '0', ';', 'for', '(', 'sc', '=', 'h', '->', 'lowscore', ';', 'sc', '<=', 'h', '->', 'highscore', ';', 'sc', '++', ')', 'if', '(', 'h', '->', 'expect', '[', 'sc', '-', 'h', '->', 'min', ']', '>=', '5', '.', '&&', 'h', '->', 'histogram', '[', 'sc', '-', 'h', '->', 'min', ']', '>=', '5', ')', '{', 'delta', '=', '(', 'float', ')', 'h', '->', 'histogram', '[', 'sc', '-', 'h', '->', 'min', ']', '-', 'h', '->', 'expect', '[', 'sc', '-', 'h', '->', 'min', ']', ';', 'h', '->', 'chisq', '+=', 'delta', '*', 'delta', '/', 'h', '->', 'expect', '[', 'sc', '-', 'h', '->', 'min', ']', ';', 'nbins', '++', ';', '}', 'if', '(', 'nbins', '>', '1', ')', 'h', '->', 'chip', '=', '(', 'float', ')', 'IncompleteGamma', '(', '(', 'double', ')', '(', 'nbins', '-', '1', ')', '/', '2', '.', ',', '(', 'double', ')', 'h', '->', 'chisq', '/', '2', '.', ')', ';', 'h', '->', 'chip', '=', '0', '.', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
6,"['xdr_gfs3_xattrop_rsp', '(', 'XDR', '*', 'xdrs', ',', 'gfs3_xattrop_rsp', '*', 'objp', ')', '{', 'register', 'int32_t', '*', 'buf', ';', 'buf', '=', 'NULL', ';', 'if', '(', '!xdr_int', '(', 'xdrs', ',', '&', 'objp', '->', 'op_ret', ')', ')', 'return', 'FALSE', ';', 'if', '(', '!xdr_int', '(', 'xdrs', ',', '&', 'objp', '->', 'op_errno', ')', ')', 'return', 'FALSE', ';', 'if', '(', '!xdr_bytes', '(', 'xdrs', ',', '(', 'char', '*', '*', ')', '&', 'objp', '->', 'dict', '.', 'dict_val', ',', '(', 'u_int', '*', ')', '&', 'objp', '->', 'dict', '.', 'dict_len', ',', '~0', ')', ')', 'return', 'FALSE', ';', 'if', '(', '!xdr_bytes', '(', 'xdrs', ',', '(', 'char', '*', '*', ')', '&', 'objp', '->', 'xdata', '.', 'xdata_val', ',', '(', 'u_int', '*', ')', '&', 'objp', '->', 'xdata', '.', 'xdata_len', ',', '~0', ')', ')', 'return', 'FALSE', ';', 'return', 'TRUE', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
7,"['snd_pcm_route_convert', '(', 'const', 'snd_pcm_channel_area_t', '*', 'dst_areas', ',', 'snd_pcm_uframes_t', 'dst_offset', ',', 'const', 'snd_pcm_channel_area_t', '*', 'src_areas', ',', 'snd_pcm_uframes_t', 'src_offset', ',', 'unsigned', 'int', 'src_channels', ',', 'unsigned', 'int', 'dst_channels', ',', 'snd_pcm_uframes_t', 'frames', ',', 'snd_pcm_route_params_t', '*', 'params', ')', '{', 'unsigned', 'int', 'dst_channel', ';', 'snd_pcm_route_ttable_dst_t', '*', 'dstp', ';', 'const', 'snd_pcm_channel_area_t', '*', 'dst_area', ';', 'dstp', '=', 'params', '->', 'dsts', ';', 'dst_area', '=', 'dst_areas', ';', 'for', '(', 'dst_channel', '=', '0', ';', 'dst_channel', '<', 'dst_channels', ';', '++', 'dst_channel', ')', '{', 'if', '(', 'dst_channel', '>=', 'params', '->', 'ndsts', ')', 'snd_pcm_route_convert1_zero', '(', 'dst_area', ',', 'dst_offset', ',', 'src_areas', ',', 'src_offset', ',', 'src_channels', ',', 'frames', ',', 'dstp', ',', 'params', ')', ';', 'dstp', '->', 'func', '(', 'dst_area', ',', 'dst_offset', ',', 'src_areas', ',', 'src_offset', ',', 'src_channels', ',', 'frames', ',', 'dstp', ',', 'params', ')', ';', 'dstp', '++', ';', 'dst_area', '++', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
8,"['repaint_point', '(', 'EMap', '*', 'map', ',', 'EMapPoint', '*', 'point', ')', '{', 'gdouble', 'px', ',', 'py', ';', 'if', '(', '!gtk_widget_is_drawable', '(', 'GTK_WIDGET', '(', 'map', ')', ')', ')', 'return', ';', 'e_map_world_to_window', '(', 'map', ',', 'point', '->', 'longitude', ',', 'point', '->', 'latitude', ',', '&', 'px', ',', '&', 'py', ')', ';', 'gtk_widget_queue_draw_area', '(', 'GTK_WIDGET', '(', 'map', ')', ',', '(', 'gint', ')', 'px', '-', '2', ',', '(', 'gint', ')', 'py', '-', '2', ',', '5', ',', '5', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
9,"['load_modules', '(', 'const', 'char', '*', 'name', ')', '{', 'struct', 'conf_sect_t', '*', 'sect', ';', 'struct', 'conf_option_t', '*', 'opt', ';', 'char', '*', 'fname', ';', 'char', '*', 'path', '=', 'MODULE_PATH', ';', 'char', '*', 'ptr1', ',', '*', 'ptr2', ';', 'struct', 'module_t', '*', 'm', ';', 'void', '*', 'h', ';', 'sect', '=', 'conf_get_section', '(', 'name', ')', ';', 'if', '(', '!sect', ')', '{', 'fprintf', '(', 'stderr', ',', '""""', ',', 'name', ')', ';', 'return', '-', '1', ';', '}', 'fname', '=', '_malloc', '(', 'PATH_MAX', ')', ';', 'list_for_each_entry', '(', 'opt', ',', '&', 'sect', '->', 'items', ',', 'entry', ')', '{', 'if', '(', '!strcmp', '(', 'opt', '->', 'name', ',', '""""', ')', '&&', 'opt', '->', 'val', ')', '{', 'path', '=', 'opt', '->', 'val', ';', 'continue', ';', '}', 'strcpy', '(', 'fname', ',', 'path', ')', ';', 'strcat', '(', 'fname', ',', '""""', ')', ';', 'strcat', '(', 'fname', ',', 'opt', '->', 'name', ')', ';', 'if', '(', 'access', '(', 'fname', ',', 'F_OK', ')', ')', '{', 'strcpy', '(', 'fname', ',', 'path', ')', ';', 'strcat', '(', 'fname', ',', '""""', ')', ';', 'strcat', '(', 'fname', ',', 'opt', '->', 'name', ')', ';', 'strcat', '(', 'fname', ',', '""""', ')', ';', 'if', '(', 'access', '(', 'fname', ',', 'F_OK', ')', ')', '{', 'strcpy', '(', 'fname', ',', 'opt', '->', 'name', ')', ';', 'if', '(', 'access', '(', 'opt', '->', 'name', ',', 'F_OK', ')', ')', '{', 'triton_log_error', '(', '""""', ',', 'opt', '->', 'name', ')', ';', 'continue', ';', '}', '}', '}', 'h', '=', 'dlopen', '(', 'fname', ',', 'RTLD_LAZY', '|', 'RTLD_GLOBAL', ')', ';', 'if', '(', '!h', ')', '{', 'triton_log_error', '(', '""""', ',', 'opt', '->', 'name', ',', 'dlerror', '(', ')', ')', ';', '_free', '(', 'fname', ')', ';', 'return', '-', '1', ';', '}', 'ptr1', '=', 'fname', ';', 'while', '(', '1', ')', '{', 'ptr2', '=', 'strchr', '(', 'ptr1', ',', ""''"", ')', ';', 'if', '(', '!ptr2', ')', 'break', ';', 'ptr1', '=', 'ptr2', '+', '1', ';', '}', 'if', '(', '!strncmp', '(', 'ptr1', ',', '""""', ',', '3', ')', ')', 'ptr1', '+=', '3', ';', 'ptr2', '=', 'strstr', '(', 'ptr1', ',', '""""', ')', ';', 'if', '(', 'ptr2', ')', '*', 'ptr2', '=', '0', ';', 'm', '=', '_malloc', '(', 'sizeof', '(', '*', 'm', ')', ')', ';', 'm', '->', 'name', '=', '_strdup', '(', 'ptr1', ')', ';', 'm', '->', 'handle', '=', 'h', ';', 'list_add_tail', '(', '&', 'm', '->', 'entry', ',', '&', 'modules', ')', ';', '}', '_free', '(', 'fname', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
10,"['savefile_handle_unknown', '(', 'CdlInterpreter', 'interp', ',', 'int', 'argc', ',', 'const', 'char', '*', 'argv', '[', ']', ')', '{', 'CYG_REPORT_FUNCNAME', '(', '""""', ')', ';', 'CYG_REPORT_FUNCARG2XV', '(', 'interp', ',', 'argc', ')', ';', 'CYG_PRECONDITION_CLASSC', '(', 'interp', ')', ';', 'CdlParse', ':', ':', 'report_error', '(', 'interp', ',', '""""', ',', 'std', ':', ':', 'string', '(', '""""', ')', '+', 'argv', '[', '1', ']', '+', '""""', ')', ';', 'CYG_UNUSED_PARAM', '(', 'int', ',', 'argc', ')', ';', 'return', 'TCL_OK', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
11,"['__repmgr_check_listener', '(', 'env', ')', 'ENV', '*', 'env', ';', '{', 'DB_REP', '*', 'db_rep', ';', 'REP', '*', 'rep', ';', 'SITEINFO', '*', 'sites', ';', 'db_timespec', 't', ';', 'int', 'ret', ';', 'db_rep', '=', 'env', '->', 'rep_handle', ';', 'rep', '=', 'db_rep', '->', 'region', ';', 'ret', '=', '0', ';', '/', '*', '*', 'Only', 'subordinate', 'rep', '-', 'aware', 'process', 'can', 'take', 'over', 'listener', 'role', ',', '*', 'no', 'need', 'to', 'check', 'listener', 'in', 'listener', 'process', 'or', 'rep', 'unaware', 'process', '.', 'if', '(', '!IS_LISTENER_CAND', '(', 'db_rep', ')', ')', 'return', '(', '0', ')', ';', '/', '*', '*', 'If', 'the', 'listener', 'quits', 'due', 'to', 'site', 'removal', ',', 'no', 'subordinate', '*', 'should', 'take', 'over', 'as', 'listener', 'as', 'the', 'current', 'site', 'is', 'not', '*', 'to', 'be', 'active', 'in', 'the', 'group', '.', 'Check', 'the', 'status', 'from', 'the', 'site', '*', 'in', 'the', 'shared', 'region', 'instead', 'of', 'that', 'in', 'the', 'GMDB', '.', 'We', 'do', '*', 'because', 'the', 'GMDB', ""doesn't"", 'apply', 'the', 'change', 'yet', 'when', '*', 'is', 'stopped', 'on', 'the', 'removed', 'site', '.', 'sites', '=', 'R_ADDR', '(', 'env', '->', 'reginfo', ',', 'rep', '->', 'siteinfo_off', ')', ';', 'if', '(', 'sites', '[', 'rep', '->', 'self_eid', ']', '.', 'status', '==', 'SITE_DELETING', ')', 'return', '(', '0', ')', ';', '/', '*', '*', 'Check', 'the', 'listener', 'after', 'timeout', '.', 'If', 'there', 'is', 'no', 'listener', ',', '*', 'take', 'over', '.', 'During', 'takeover', ',', 'we', 'will', 'refresh', 'all', 'connections', '.', '*', 'A', 'subordinate', 'process', 'does', 'not', 'have', 'an', 'up', '-', 'to', '-', 'date', 'site', 'list', ',', 'so', '*', 'up', 'addresses', 'from', 'the', 'in', '-', 'memory', 'site', 'array', 'before', 'takeover', '.', '__os_gettime', '(', 'env', ',', '&', 't', ',', '1', ')', ';', 'if', '(', 'timespeccmp', '(', '&', 't', ',', '&', 'db_rep', '->', 'l_listener_chk', ',', '>=', ')', ')', '{', 'TIMESPEC_ADD_DB_TIMEOUT', '(', '&', 't', ',', 'db_rep', '->', 'l_listener_wait', ')', ';', 'db_rep', '->', 'l_listener_chk', '=', 't', ';', 'if', '(', '(', 'rep', '->', 'siteinfo_seq', '>', 'db_rep', '->', 'siteinfo_seq', ')', '&&', '(', 'ret', '=', '__repmgr_sync_siteaddr', '(', 'env', ')', ')', '!=', '0', ')', 'return', '(', 'ret', ')', ';', 'if', '(', 'rep', '->', 'listener', '==', '0', ')', 'ret', '=', '__repmgr_start_takeover', '(', 'env', ')', ';', '}', 'return', '(', 'ret', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
12,"['ap_mpm_rewrite_args', '(', 'process_rec', '*', 'process', ')', '{', 'apr_array_header_t', '*', 'mpm_new_argv', ';', 'apr_status_t', 'rv', ';', 'apr_getopt_t', '*', 'opt', ';', 'char', 'optbuf', '[', '3', ']', ';', 'const', 'char', '*', 'optarg', ';', 'mpm_new_argv', '=', 'apr_array_make', '(', 'process', '->', 'pool', ',', 'process', '->', 'argc', ',', 'sizeof', '(', 'const', 'char', '*', '*', ')', ')', ';', '*', '(', 'const', 'char', '*', '*', ')', 'apr_array_push', '(', 'mpm_new_argv', ')', '=', 'process', '->', 'argv', '[', '0', ']', ';', 'apr_getopt_init', '(', '&', 'opt', ',', 'process', '->', 'pool', ',', 'process', '->', 'argc', ',', 'process', '->', 'argv', ')', ';', 'opt', '->', 'errfn', '=', 'NULL', ';', 'optbuf', '[', '0', ']', '=', ""''"", ';', 'optbuf', '[', '2', ']', '=', ""''"", ';', 'while', '(', '(', 'rv', '=', 'apr_getopt', '(', 'opt', ',', '""""', 'AP_SERVER_BASEARGS', ',', 'optbuf', '+', '1', ',', '&', 'optarg', ')', ')', '==', 'APR_SUCCESS', ')', '{', 'switch', '(', 'optbuf', '[', '1', ']', ')', '{', 'case', ""''"", ':', 'if', '(', '!dash_k_arg', ')', '{', 'if', '(', '!strcmp', '(', 'optarg', ',', '""""', ')', '||', '!strcmp', '(', 'optarg', ',', '""""', ')', '||', '!strcmp', '(', 'optarg', ',', '""""', ')', '||', '!strcmp', '(', 'optarg', ',', '""""', ')', '||', '!strcmp', '(', 'optarg', ',', '""""', ')', ')', '{', 'dash_k_arg', '=', 'optarg', ';', 'break', ';', '}', '}', 'default', ':', '*', '(', 'const', 'char', '*', '*', ')', 'apr_array_push', '(', 'mpm_new_argv', ')', '=', 'apr_pstrdup', '(', 'process', '->', 'pool', ',', 'optbuf', ')', ';', 'if', '(', 'optarg', ')', '{', '*', '(', 'const', 'char', '*', '*', ')', 'apr_array_push', '(', 'mpm_new_argv', ')', '=', 'optarg', ';', '}', '}', '}', 'if', '(', 'rv', '==', 'APR_BADCH', '||', 'rv', '==', 'APR_BADARG', ')', '{', 'opt', '->', 'ind', '--', ';', '}', 'while', '(', 'opt', '->', 'ind', '<', 'opt', '->', 'argc', ')', '{', '*', '(', 'const', 'char', '*', '*', ')', 'apr_array_push', '(', 'mpm_new_argv', ')', '=', 'apr_pstrdup', '(', 'process', '->', 'pool', ',', 'opt', '->', 'argv', '[', 'opt', '->', 'ind', '++', ']', ')', ';', '}', 'process', '->', 'argc', '=', 'mpm_new_argv', '->', 'nelts', ';', 'process', '->', 'argv', '=', '(', 'const', 'char', '*', 'const', '*', ')', 'mpm_new_argv', '->', 'elts', ';', 'if', '(', 'NULL', '==', 'dash_k_arg', ')', '{', 'dash_k_arg', '=', 'dash_k_arg_noarg', ';', '}', 'APR_REGISTER_OPTIONAL_FN', '(', 'ap_signal_server', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  True,CWE-476  False,CWE-other  False
13,"['gettheta', '(', 'sex_', ',', 'LINK', ')', 'thetavalues', '*', '*', 'sex_', ';', 'struct', 'LOC_readloci', '*', 'LINK', ';', '{', 'thetarray', 'oldtheta', ';', 'long', 'i', ';', 'thetavalues', '*', 'WITH', ';', 'long', 'FORLIM', ';', '#if', '*', 'sex_', '=', '(', 'thetavalues', '*', ')', 'Malloc', '(', 'sizeof', '(', 'thetavalues', ')', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'maxlocus', ';', 'i', '++', ')', '(', '*', 'sex_', ')', '->', 'theta', '[', 'i', ']', '=', '0', '.', '0', ';', 'nuneed', '=', '7', ';', 'for', '(', 'i', '=', '2', ';', 'i', '<', 'mlocus', ';', 'i', '++', ')', 'nuneed', '=', '5', '*', 'nuneed', '-', '3', ';', 'if', '(', '*', 'sex_', '==', 'NULL', ')', 'malloc_err', '(', '""""', ')', ';', '(', '*', 'sex_', ')', '->', 'segprob', '=', '(', 'double', '*', ')', 'malloc', '(', 'nuneed', '*', 'sizeof', '(', 'double', ')', ')', ';', 'if', '(', '(', '*', 'sex_', ')', '->', 'segprob', '==', 'NULL', ')', 'malloc_err', '(', '""""', ')', ';', 'WITH', '=', '*', 'sex_', ';', 'if', '(', '*', 'sex_', '==', 'maletheta', '||', 'readfemale', ')', '{', 'FORLIM', '=', 'mlocus', '-', '2', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<=', 'FORLIM', ';', 'i', '++', ')', 'fscanf', '(', 'datafile', ',', '""""', ',', '&', '(', '*', 'sex_', ')', '->', 'theta', '[', 'i', ']', ')', ';', 'if', '(', 'interfer', '&&', '!mapping', ')', 'fscanf', '(', 'datafile', ',', '""""', ',', '&', '(', '*', 'sex_', ')', '->', 'theta', '[', 'mlocus', '-', '1', ']', ')', ';', 'fscanf', '(', 'datafile', ',', '""""', ')', ';', 'getc', '(', 'datafile', ')', ';', '}', 'else', '{', 'fscanf', '(', 'datafile', ',', '""""', ',', '&', 'distratio', ')', ';', 'getc', '(', 'datafile', ')', ';', '}', 'if', '(', '!interfer', '||', 'mapping', ')', 'return', ';', 'memcpy', '(', 'oldtheta', ',', 'WITH', '->', 'theta', ',', 'sizeof', '(', 'thetarray', ')', ')', ';', 'WITH', '->', 'theta', '[', '0', ']', '=', '(', 'oldtheta', '[', '0', ']', '+', 'oldtheta', '[', 'mlocus', '-', '1', ']', '-', 'oldtheta', '[', 'mlocus', '-', '2', ']', ')', '/', '2', '.', '0', ';', 'WITH', '->', 'theta', '[', 'mlocus', '-', '2', ']', '=', '(', 'oldtheta', '[', 'mlocus', '-', '2', ']', '+', 'oldtheta', '[', 'mlocus', '-', '1', ']', '-', 'oldtheta', '[', '0', ']', ')', '/', '2', '.', '0', ';', 'WITH', '->', 'theta', '[', 'mlocus', '-', '1', ']', '=', '(', 'oldtheta', '[', '0', ']', '+', 'oldtheta', '[', 'mlocus', '-', '2', ']', '-', 'oldtheta', '[', 'mlocus', '-', '1', ']', ')', '/', '2', '.', '0', ';', 'if', '(', 'WITH', '->', 'theta', '[', 'i', ']', '>', '0', '.', '0', ')', '{', 'if', '(', 'WITH', '->', 'theta', '[', 'i', ']', '<', '0', '.', '999', ')', 'WITH', '->', 'theta', '[', 'i', ']', '=', 'log', '(', '1', '.', '0', '/', 'WITH', '->', 'theta', '[', 'i', ']', '-', '1', '.', '0', ')', ';', '}', 'WITH', '->', 'theta', '[', 'i', ']', '=', '9', '.', '21', ';', '}', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
14,"['Done', '(', 'int', 'restart', ',', 'char', '*', 'command', ')', '{', 'cleanupDone', '=', '1', ';', '#ifdef', 'if', '(', 'm4_enable', ')', '{', 'extern', 'char', '*', 'fvwm_file', ';', '/', '*', 'With', 'm4', 'processing', ',', 'a', 'temporary', 'file', 'was', 'created', 'to', 'hold', 'processed', 'file', '.', 'Delete', 'the', 'file', 'now', 'because', 'we', ""don't"", 'need', 'unlink', '(', 'fvwm_file', ')', ';', '}', '#ifndef', 'MoveViewport', '(', '0', ',', '0', ',', 'False', ')', ';', 'ClosePipes', '(', ')', ';', 'Reborder', '(', ')', ';', 'if', '(', 'restart', ')', '{', 'XSelectInput', '(', 'dpy', ',', 'Scr', '.', 'Root', ',', '0', ')', ';', 'XSync', '(', 'dpy', ',', '0', ')', ';', 'XCloseDisplay', '(', 'dpy', ')', ';', '{', 'char', '*', 'my_argv', '[', '10', ']', ';', 'int', 'i', ',', 'done', ',', 'j', ';', 'i', '=', '0', ';', 'j', '=', '0', ';', 'done', '=', '0', ';', 'while', '(', '(', 'g_argv', '[', 'j', ']', '!=', 'NULL', ')', '&&', '(', 'i', '<', '8', ')', ')', '{', 'if', '(', 'strcmp', '(', 'g_argv', '[', 'j', ']', ',', '""""', ')', '!=', '0', ')', '{', 'my_argv', '[', 'i', ']', '=', 'g_argv', '[', 'j', ']', ';', 'i', '++', ';', 'j', '++', ';', '}', 'j', '++', ';', '}', 'if', '(', 'strstr', '(', 'command', ',', '""""', ')', '!=', 'NULL', ')', 'my_argv', '[', 'i', '++', ']', '=', '""""', ';', 'while', '(', 'i', '<', '10', ')', 'my_argv', '[', 'i', '++', ']', '=', 'NULL', ';', '/', '*', 'really', 'need', 'to', 'destroy', 'all', 'windows', ',', 'explicitly', ',', 'sleep', '(', '1', ')', ';', 'ReapChildren', '(', ')', ';', 'execvp', '(', 'command', ',', 'my_argv', ')', ';', '}', 'fprintf', '(', 'stderr', ',', '""""', ',', 'command', ')', ';', 'fprintf', '(', 'stderr', ',', '""""', ',', 'g_argv', '[', '0', ']', ')', ';', '}', '{', 'XCloseDisplay', '(', 'dpy', ')', ';', 'exit', '(', '0', ')', ';', '}', '}']",CWE-119  True,CWE-120  True,CWE-469  True,CWE-476  False,CWE-other  False
15,"['__GEOIP_PREPARE_TEREDO', '(', 'geoipv6_t', '*', 'v6', ')', '{', 'int', 'i', ';', 'if', '(', '(', 'v6', '->', 's6_addr', '[', '0', ']', ')', '!=', '0x20', ')', '{', 'return', ';', '}', 'if', '(', '(', 'v6', '->', 's6_addr', '[', '1', ']', ')', '!=', '0x01', ')', '{', 'return', ';', '}', 'if', '(', '(', 'v6', '->', 's6_addr', '[', '2', ']', ')', '!=', '0x00', ')', '{', 'return', ';', '}', 'if', '(', '(', 'v6', '->', 's6_addr', '[', '3', ']', ')', '!=', '0x00', ')', '{', 'return', ';', '}', 'for', '(', 'i', '=', '0', ';', 'i', '<', '12', ';', 'i', '++', ')', '{', 'v6', '->', 's6_addr', '[', 'i', ']', '=', '0', ';', '}', 'for', '(', ';', 'i', '<', '16', ';', 'i', '++', ')', '{', 'v6', '->', 's6_addr', '[', 'i', ']', '^=', '0xff', ';', '}', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
16,"['create_access', '(', 'tree', 'expr', ',', 'gimple', 'stmt', ',', 'bool', 'write', ')', '{', 'struct', 'access', '*', 'access', ';', 'HOST_WIDE_INT', 'offset', ',', 'size', ',', 'max_size', ';', 'tree', 'base', '=', 'expr', ';', 'bool', 'ptr', ',', 'unscalarizable_region', '=', 'false', ';', 'base', '=', 'get_ref_base_and_extent', '(', 'expr', ',', '&', 'offset', ',', '&', 'size', ',', '&', 'max_size', ')', ';', 'if', '(', 'sra_mode', '==', '&&', 'TREE_CODE', '(', 'base', ')', '==', 'MEM_REF', ')', '{', 'base', '=', 'get_ssa_base_param', '(', 'TREE_OPERAND', '(', 'base', ',', '0', ')', ')', ';', 'if', '(', '!base', ')', 'return', 'NULL', ';', 'ptr', '=', 'true', ';', '}', 'ptr', '=', 'false', ';', 'if', '(', '!DECL_P', '(', 'base', ')', '||', '!bitmap_bit_p', '(', 'candidate_bitmap', ',', 'DECL_UID', '(', 'base', ')', ')', ')', 'return', 'NULL', ';', 'if', '(', 'sra_mode', '==', 'SRA_MODE_EARLY_IPA', ')', '{', 'if', '(', 'size', '<', '0', '||', 'size', '!=', 'max_size', ')', '{', 'disqualify_candidate', '(', 'base', ',', '""""', ')', ';', 'return', 'NULL', ';', '}', 'if', '(', 'TREE_CODE', '(', 'expr', ')', '==', '&&', 'DECL_BIT_FIELD', '(', 'TREE_OPERAND', '(', 'expr', ',', '1', ')', ')', ')', '{', 'disqualify_candidate', '(', 'base', ',', '""""', ')', ';', 'return', 'NULL', ';', '}', 'gcc_checking_assert', '(', '(', 'offset', '%', 'BITS_PER_UNIT', ')', '==', '0', ')', ';', 'if', '(', 'ptr', ')', 'mark_parm_dereference', '(', 'base', ',', 'offset', '+', 'size', ',', 'stmt', ')', ';', '}', '{', 'if', '(', 'size', '!=', 'max_size', ')', '{', 'size', '=', 'max_size', ';', 'unscalarizable_region', '=', 'true', ';', '}', 'if', '(', 'size', '<', '0', ')', '{', 'disqualify_candidate', '(', 'base', ',', '""""', ')', ';', 'return', 'NULL', ';', '}', '}', 'access', '=', 'create_access_1', '(', 'base', ',', 'offset', ',', 'size', ')', ';', 'access', '->', 'expr', '=', 'expr', ';', 'access', '->', 'type', '=', 'TREE_TYPE', '(', 'expr', ')', ';', 'access', '->', 'write', '=', 'write', ';', 'access', '->', 'grp_unscalarizable_region', '=', 'unscalarizable_region', ';', 'access', '->', 'stmt', '=', 'stmt', ';', 'if', '(', 'TREE_CODE', '(', 'expr', ')', '==', '&&', 'DECL_NONADDRESSABLE_P', '(', 'TREE_OPERAND', '(', 'expr', ',', '1', ')', ')', ')', 'access', '->', 'non_addressable', '=', '1', ';', 'return', 'access', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
17,"['draw_keys', '(', 'int', 'draw', ')', '{', 'char', 's', '[', '20', ']', ';', 'static', 'char', '*', 'key', '[', '4', ']', '=', '{', '""""', ',', '""""', ',', '""""', ',', '""""', '}', ';', 'static', 'char', '*', 'rkey', '[', '3', ']', '=', '{', '""""', ',', '""""', ',', '""""', '}', ';', 'if', '(', '!draw', ')', 'return', ';', 'nmenu', '=', '2', ';', 'sprintf', '(', 's', ',', '""""', ',', 'player', '+', '1', ')', ';', 'DrawWhiteMaskedText', '(', '(', 'int', ')', '(', 'MAPWIDTH', '/', '2', '-', '4', '*', 'strlen', '(', 's', ')', ')', ',', '(', 'int', ')', 'YPOSITION', '(', '0', ')', ',', 's', ')', ';', 'if', '(', 'rotation', '[', 'player', ']', ')', 'sprintf', '(', 's', ',', '""""', ',', 'rkey', '[', 'keynum', ']', ')', ';', 'sprintf', '(', 's', ',', '""""', ',', 'key', '[', 'keynum', ']', ')', ';', 'DrawWhiteMaskedText', '(', '(', 'int', ')', '(', 'MAPWIDTH', '/', '2', '-', '4', '*', 'strlen', '(', 's', ')', ')', ',', '(', 'int', ')', 'YPOSITION', '(', '1', ')', ',', 's', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
18,"['da9150_fg_read_attr', '(', 'struct', 'da9150_fg', '*', 'fg', ',', 'u8', 'code', ',', 'u8', 'size', ')', '{', 'u8', 'buf', '[', 'size', ']', ';', 'u8', 'read_addr', ';', 'u32', 'res', '=', '0', ';', 'int', 'i', ';', 'read_addr', '=', '(', 'code', '&', 'DA9150_QIF_CODE_MASK', ')', '|', 'DA9150_QIF_READ', ';', 'da9150_read_qif', '(', 'fg', '->', 'da9150', ',', 'read_addr', ',', 'size', ',', 'buf', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'size', ';', '++', 'i', ')', 'res', '|=', '(', 'buf', '[', 'i', ']', '<<', '(', 'i', '*', 'DA9150_QIF_BYTE_SIZE', ')', ')', ';', 'return', 'res', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
19,"['save_weblist', '(', ')', '{', 'char', 'filename', '[', '512', ']', ';', 'xmlDoc', '*', 'doc', ';', 'xmlNode', '*', 'xsearchengine', ';', 'xmlNode', '*', 'xgroup', ';', 'xmlNode', '*', 'xengine', ';', 'gint', 'type', ';', 'gchar', '*', 'title', '=', 'NULL', ';', 'gchar', '*', 'home', '=', 'NULL', ';', 'gchar', '*', 'pre', '=', 'NULL', ';', 'gchar', '*', 'post', '=', 'NULL', ';', 'gchar', '*', 'glue', '=', 'NULL', ';', 'gchar', '*', 'code', '=', 'NULL', ';', 'GtkTreeIter', 'parent_iter', ';', 'GtkTreeIter', 'child_iter', ';', 'LOG', '(', 'LOG_DEBUG', ',', '""""', ')', ';', 'sprintf', '(', 'filename', ',', '""""', ',', 'user_dir', ',', 'DIR_DELIMITER', ',', 'FILENAME_WEBLIST', ')', ';', 'doc', '=', 'xml_doc_new', '(', ')', ';', 'doc', '->', 'encoding', '=', 'strdup', '(', '""""', ')', ';', 'doc', '->', 'version', '=', 'strdup', '(', '""""', ')', ';', 'xsearchengine', '=', 'xml_add_child', '(', 'doc', '->', 'root', ',', '""""', ',', 'NULL', ')', ';', 'if', '(', 'gtk_tree_model_get_iter_first', '(', 'GTK_TREE_MODEL', '(', 'web_store', ')', ',', '&', 'parent_iter', ')', '==', 'TRUE', ')', '{', 'do', '{', 'gtk_tree_model_get', '(', 'GTK_TREE_MODEL', '(', 'web_store', ')', ',', '&', 'parent_iter', ',', 'WEB_TYPE_COLUMN', ',', '&', 'type', ',', 'WEB_TITLE_COLUMN', ',', '&', 'title', ',', '-', '1', ')', ';', 'xgroup', '=', 'xml_add_child', '(', 'xsearchengine', ',', '""""', ',', 'NULL', ')', ';', 'xml_set_attr', '(', 'xgroup', ',', '""""', ',', 'title', ')', ';', 'g_free', '(', 'title', ')', ';', 'if', '(', 'gtk_tree_model_iter_children', '(', 'GTK_TREE_MODEL', '(', 'web_store', ')', ',', '&', 'child_iter', ',', '&', 'parent_iter', ')', '==', 'TRUE', ')', '{', 'do', '{', 'title', '=', 'NULL', ';', 'home', '=', 'NULL', ';', 'pre', '=', 'NULL', ';', 'post', '=', 'NULL', ';', 'glue', '=', 'NULL', ';', 'code', '=', 'NULL', ';', 'gtk_tree_model_get', '(', 'GTK_TREE_MODEL', '(', 'web_store', ')', ',', '&', 'child_iter', ',', 'WEB_TYPE_COLUMN', ',', '&', 'type', ',', 'WEB_TITLE_COLUMN', ',', '&', 'title', ',', 'WEB_HOME_COLUMN', ',', '&', 'home', ',', 'WEB_PRE_COLUMN', ',', '&', 'pre', ',', 'WEB_POST_COLUMN', ',', '&', 'post', ',', 'WEB_GLUE_COLUMN', ',', '&', 'glue', ',', 'WEB_CODE_COLUMN', ',', '&', 'code', ',', '-', '1', ')', ';', 'xengine', '=', 'xml_add_child', '(', 'xgroup', ',', '""""', ',', 'NULL', ')', ';', 'xml_add_child', '(', 'xengine', ',', '""""', ',', 'title', ')', ';', 'xml_add_child', '(', 'xengine', ',', '""""', ',', 'home', ')', ';', 'xml_add_child', '(', 'xengine', ',', '""""', ',', 'pre', ')', ';', 'xml_add_child', '(', 'xengine', ',', '""""', ',', 'post', ')', ';', 'xml_add_child', '(', 'xengine', ',', '""""', ',', 'glue', ')', ';', 'xml_add_child', '(', 'xengine', ',', '""""', ',', 'code', ')', ';', 'g_free', '(', 'title', ')', ';', 'g_free', '(', 'home', ')', ';', 'g_free', '(', 'pre', ')', ';', 'g_free', '(', 'post', ')', ';', 'g_free', '(', 'glue', ')', ';', 'g_free', '(', 'code', ')', ';', '}', 'while', '(', 'gtk_tree_model_iter_next', '(', 'GTK_TREE_MODEL', '(', 'web_store', ')', ',', '&', 'child_iter', ')', '==', 'TRUE', ')', ';', '}', '}', 'while', '(', 'gtk_tree_model_iter_next', '(', 'GTK_TREE_MODEL', '(', 'web_store', ')', ',', '&', 'parent_iter', ')', '==', 'TRUE', ')', ';', '}', 'xml_save_file', '(', 'filename', ',', 'doc', ')', ';', 'xml_destroy_document', '(', 'doc', ')', ';', 'LOG', '(', 'LOG_DEBUG', ',', '""""', ')', ';', 'return', '(', 'TRUE', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  True,CWE-476  False,CWE-other  False
20,"['airEndsWith', '(', 'const', 'char', '*', 's', ',', 'const', 'char', '*', 'suff', ')', '{', 'if', '(', '!', '(', 's', '&&', 'suff', ')', ')', 'return', '0', ';', 'if', '(', '!', '(', 'strlen', '(', 's', ')', '>=', 'strlen', '(', 'suff', ')', ')', ')', 'return', '0', ';', 'if', '(', '!strncmp', '(', 's', '+', 'strlen', '(', 's', ')', '-', 'strlen', '(', 'suff', ')', ',', 'suff', ',', 'strlen', '(', 'suff', ')', ')', ')', 'return', '1', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
21,"['memory_ass_sub', '(', 'PyMemoryViewObject', '*', 'self', ',', 'PyObject', '*', 'key', ',', 'PyObject', '*', 'value', ')', '{', 'Py_ssize_t', 'start', ',', 'len', ',', 'bytelen', ';', 'Py_buffer', 'srcview', ';', 'Py_buffer', '*', 'view', '=', '&', '(', 'self', '->', 'view', ')', ';', 'char', '*', 'srcbuf', ',', '*', 'destbuf', ';', 'if', '(', 'view', '->', 'readonly', ')', '{', 'PyErr_SetString', '(', 'PyExc_TypeError', ',', '""""', ')', ';', 'return', '-', '1', ';', '}', 'if', '(', 'value', '==', 'NULL', ')', '{', 'PyErr_SetString', '(', 'PyExc_TypeError', ',', '""""', ')', ';', 'return', '-', '1', ';', '}', 'if', '(', 'view', '->', 'ndim', '!=', '1', ')', '{', 'PyErr_SetNone', '(', 'PyExc_NotImplementedError', ')', ';', 'return', '-', '1', ';', '}', 'if', '(', 'PyIndex_Check', '(', 'key', ')', ')', '{', 'start', '=', 'PyNumber_AsSsize_t', '(', 'key', ',', 'NULL', ')', ';', 'if', '(', 'start', '==', '-', '1', '&&', 'PyErr_Occurred', '(', ')', ')', 'return', '-', '1', ';', 'if', '(', 'start', '<', '0', ')', '{', 'start', '+=', 'get_shape0', '(', 'view', ')', ';', '}', 'if', '(', '(', 'start', '<', '0', ')', '||', '(', 'start', '>=', 'get_shape0', '(', 'view', ')', ')', ')', '{', 'PyErr_SetString', '(', 'PyExc_IndexError', ',', '""""', ')', ';', 'return', '-', '1', ';', '}', 'len', '=', '1', ';', '}', 'else', 'if', '(', 'PySlice_Check', '(', 'key', ')', ')', '{', 'Py_ssize_t', 'stop', ',', 'step', ';', 'if', '(', 'PySlice_GetIndicesEx', '(', '(', 'PySliceObject', '*', ')', 'key', ',', 'get_shape0', '(', 'view', ')', ',', '&', 'start', ',', '&', 'stop', ',', '&', 'step', ',', '&', 'len', ')', '<', '0', ')', '{', 'return', '-', '1', ';', '}', 'if', '(', 'step', '!=', '1', ')', '{', 'PyErr_SetNone', '(', 'PyExc_NotImplementedError', ')', ';', 'return', '-', '1', ';', '}', '}', 'else', '{', 'PyErr_Format', '(', 'PyExc_TypeError', ',', '""""', '%', '.', '200s\\""""', ',', 'key', '->', 'ob_type', '->', 'tp_name', ')', ';', 'return', '-', '1', ';', '}', 'if', '(', 'PyObject_GetBuffer', '(', 'value', ',', '&', 'srcview', ',', 'PyBUF_CONTIG_RO', ')', '==', '-', '1', ')', '{', 'return', '-', '1', ';', '}', '/', '*', 'XXX', 'should', 'we', 'allow', 'assignment', 'of', 'different', 'item', 'as', 'long', 'as', 'the', 'byte', 'length', 'is', 'the', 'same', '?', 'if', '(', 'srcview', '.', 'itemsize', '!=', 'view', '->', 'itemsize', ')', '{', 'PyErr_Format', '(', 'PyExc_TypeError', ',', '""""', '%', '.', '200s\\""""', '%', '.', '200s\\""""', ',', 'view', '->', 'obj', '->', 'ob_type', '->', 'tp_name', ',', 'srcview', '.', 'obj', '->', 'ob_type', '->', 'tp_name', ')', ';', 'goto', '_error', ';', '}', 'bytelen', '=', 'len', '*', 'view', '->', 'itemsize', ';', 'if', '(', 'bytelen', '!=', 'srcview', '.', 'len', ')', '{', 'PyErr_SetString', '(', 'PyExc_ValueError', ',', '""""', ')', ';', 'goto', '_error', ';', '}', 'destbuf', '=', '(', 'char', '*', ')', 'view', '->', 'buf', '+', 'start', '*', 'view', '->', 'itemsize', ';', 'srcbuf', '=', '(', 'char', '*', ')', 'srcview', '.', 'buf', ';', 'if', '(', 'destbuf', '+', 'bytelen', '<', 'srcbuf', '||', 'srcbuf', '+', 'bytelen', '<', 'destbuf', ')', 'memcpy', '(', 'destbuf', ',', 'srcbuf', ',', 'bytelen', ')', ';', 'memmove', '(', 'destbuf', ',', 'srcbuf', ',', 'bytelen', ')', ';', 'PyBuffer_Release', '(', '&', 'srcview', ')', ';', 'return', '0', ';', '_error', ':', 'PyBuffer_Release', '(', '&', 'srcview', ')', ';', 'return', '-', '1', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
22,"['find_neighbors_LL', '(', 'EW', '*', 'ewptr', ',', 'NEIGHBOR', '*', 'nbr_head', ',', 'SHORT', 'row', ',', 'SHORT', 'col', ',', 'int', 'npoints', ',', 'SHORT', '*', 'neighbors', ')', '{', 'double', 'distance', ';', 'do', '{', 'if', '(', '*', 'active', ')', '{', 'distance', '=', 'distance_LL', '(', 'row', ',', 'col', ',', '*', 'Mptr', ')', ';', 'if', '(', '*', 'neighbors', '<', 'npoints', ')', 'add_neighbor', '(', 'Mptr', ',', 'nbr_head', ',', 'distance', ',', '++', '(', '*', 'neighbors', ')', ')', ';', 'else', 'if', '(', '!replace_neighbor', '(', 'Mptr', ',', 'nbr_head', ',', 'distance', ')', ')', 'if', '(', '*', 'active', ')', 'if', '(', 'westward', ')', 'extend_west', '(', 'ewptr', ')', ';', 'extend_east', '(', 'ewptr', ')', ';', '}', 'active', '=', '&', 'ewptr', '->', 'ealive', ';', 'Mptr', '=', '&', 'ewptr', '->', 'east', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
23,"['_fm_folder_model_add_file', '(', 'FmFolderModel', '*', 'model', ',', 'FmFileInfo', '*', 'file', ')', '{', 'if', '(', '!file_can_show', '(', 'model', ',', 'file', ')', ')', 'g_sequence_append', '(', 'model', '->', 'hidden', ',', 'fm_folder_item_new', '(', 'file', ')', ')', ';', 'fm_folder_model_file_created', '(', 'model', ',', 'file', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
24,"['GetLength', '(', ')', '{', 'double', 'result', ',', 'l', '=', '0', '.', '0', ';', 'int', 'i', ';', 'this', '->', 'ComputeBounds', '(', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', '3', ';', 'i', '++', ')', '{', 'result', '=', 'this', '->', 'Bounds', '[', '2', '*', 'i', '+', '1', ']', '-', 'this', '->', 'Bounds', '[', '2', '*', 'i', ']', ';', 'l', '+=', 'result', '*', 'result', ';', '}', 'result', '=', 'sqrt', '(', 'l', ')', ';', 'assert', '(', '""""', '&&', 'result', '>=', '0', ')', ';', 'return', 'result', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
25,"['eb_finalize_appendix_subbooks', '(', 'EB_Appendix', '*', 'appendix', ')', '{', 'EB_Appendix_Subbook', '*', 'subbook', ';', 'int', 'i', ';', 'LOG', '(', '(', '""""', ',', '(', 'int', ')', 'appendix', '->', 'code', ')', ')', ';', 'for', '(', 'i', '=', '0', ',', 'subbook', '=', 'appendix', '->', 'subbooks', ';', 'i', '<', 'appendix', '->', 'subbook_count', ';', 'i', '++', ',', 'subbook', '++', ')', '{', 'zio_finalize', '(', '&', 'appendix', '->', 'subbooks', '[', 'i', ']', '.', 'zio', ')', ';', '}', 'LOG', '(', '(', '""""', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
26,"['LongestAxisLength', '(', 'void', ')', '{', '/', '/', 'Return', 'longest', 'axis', 'RNLength', 'dx', '=', 'this', '->', 'XLength', '(', ')', ';', 'RNLength', 'dy', '=', 'this', '->', 'YLength', '(', ')', ';', 'return', '(', 'dx', '>', 'dy', ')', '?', 'dx', ':', 'dy', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
27,"['write_metadata_block_data_streaminfo_cb_', '(', 'FLAC__IOHandle', 'handle', ',', 'FLAC__IOCallback_Write', 'write_cb', ',', 'const', 'FLAC__StreamMetadata_StreamInfo', '*', 'block', ')', '{', 'FLAC__byte', 'buffer', '[', 'FLAC__STREAM_METADATA_STREAMINFO_LENGTH', ']', ';', 'const', 'unsigned', 'channels1', '=', 'block', '->', 'channels', '-', '1', ';', 'const', 'unsigned', 'bps1', '=', 'block', '->', 'bits_per_sample', '-', '1', ';', '/', '*', 'we', 'are', 'using', 'hardcoded', 'numbers', 'for', 'simplicity', 'but', 'we', '*', 'probably', 'eventually', 'write', 'a', 'bit', '-', 'level', 'packer', 'and', 'use', '*', '_STREAMINFO_', 'constants', '.', 'pack_uint32_', '(', 'block', '->', 'min_blocksize', ',', 'buffer', ',', '2', ')', ';', 'pack_uint32_', '(', 'block', '->', 'max_blocksize', ',', 'buffer', '+', '2', ',', '2', ')', ';', 'pack_uint32_', '(', 'block', '->', 'min_framesize', ',', 'buffer', '+', '4', ',', '3', ')', ';', 'pack_uint32_', '(', 'block', '->', 'max_framesize', ',', 'buffer', '+', '7', ',', '3', ')', ';', 'buffer', '[', '10', ']', '=', '(', 'block', '->', 'sample_rate', '>>', '12', ')', '&', '0xff', ';', 'buffer', '[', '11', ']', '=', '(', 'block', '->', 'sample_rate', '>>', '4', ')', '&', '0xff', ';', 'buffer', '[', '12', ']', '=', '(', '(', 'block', '->', 'sample_rate', '&', '0x0f', ')', '<<', '4', ')', '|', '(', 'channels1', '<<', '1', ')', '|', '(', 'bps1', '>>', '4', ')', ';', 'buffer', '[', '13', ']', '=', '(', 'FLAC__byte', ')', '(', '(', '(', 'bps1', '&', '0x0f', ')', '<<', '4', ')', '|', '(', '(', 'block', '->', 'total_samples', '>>', '32', ')', '&', '0x0f', ')', ')', ';', 'pack_uint32_', '(', '(', 'FLAC__uint32', ')', 'block', '->', 'total_samples', ',', 'buffer', '+', '14', ',', '4', ')', ';', 'memcpy', '(', 'buffer', '+', '18', ',', 'block', '->', 'md5sum', ',', '16', ')', ';', 'if', '(', 'write_cb', '(', 'buffer', ',', '1', ',', 'FLAC__STREAM_METADATA_STREAMINFO_LENGTH', ',', 'handle', ')', '!=', 'FLAC__STREAM_METADATA_STREAMINFO_LENGTH', ')', 'return', 'false', ';', 'return', 'true', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
28,"['set_member_ringinuse_help_members', '(', 'struct', 'call_queue', '*', 'q', ',', 'const', 'char', '*', 'interface', ',', 'int', 'ringinuse', ')', '{', 'struct', 'member', '*', 'mem', ';', 'int', 'foundinterface', '=', '0', ';', 'char', 'rtringinuse', '[', '80', ']', ';', 'ao2_lock', '(', 'q', ')', ';', 'if', '(', '(', 'mem', '=', 'interface_exists', '(', 'q', ',', 'interface', ')', ')', ')', '{', 'foundinterface', '++', ';', 'if', '(', '!mem', '->', 'realtime', ')', '{', 'mem', '->', 'ringinuse', '=', 'ringinuse', ';', '}', 'else', '{', 'sprintf', '(', 'rtringinuse', ',', '""""', ',', 'ringinuse', ')', ';', 'update_realtime_member_field', '(', 'mem', ',', 'q', '->', 'name', ',', 'realtime_ringinuse_field', ',', 'rtringinuse', ')', ';', '}', 'ast_queue_log', '(', 'q', '->', 'name', ',', '""""', ',', 'interface', ',', '""""', ',', '""""', ',', 'ringinuse', ')', ';', '/', '*', '*', '*', '<', 'managerEventInstance', '>', '<', 'synopsis', '>', 'Raised', 'when', 'a', ""member's"", 'ringinuse', 'setting', 'is', 'changed', '.', '<', '/', 'synopsis', '>', '<', 'syntax', '>', '<', 'xi', ':', 'include', 'xpointer', '=', '""""', '/', '>', '<', 'xi', ':', 'include', 'xpointer', '=', '""""', '/', '>', '<', 'parameter', 'name', '=', '""""', '>', '<', 'enumlist', '>', '<', 'enum', 'name', '=', '""""', '/', '>', '<', 'enum', 'name', '=', '""""', '/', '>', '<', '/', 'enumlist', '>', '<', '/', 'parameter', '>', '<', '/', 'syntax', '>', '<', 'see', '-', 'also', '>', '<', 'ref', 'type', '=', '""""', '>', 'QUEUE_MEMBER', '<', '/', 'ref', '>', '<', '/', 'see', '-', 'also', '>', '<', '/', 'managerEventInstance', '>', 'manager_event', '(', 'EVENT_FLAG_AGENT', ',', '""""', ',', '""""', ',', 'q', '->', 'name', ',', 'mem', '->', 'interface', ',', 'ringinuse', ')', ';', 'ao2_ref', '(', 'mem', ',', '-', '1', ')', ';', '}', 'ao2_unlock', '(', 'q', ')', ';', 'return', 'foundinterface', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
29,"['cx_fw_version', '(', 'struct', 'ipmi_intf', '*', 'intf', ',', 'char', '*', 'version', ')', '{', 'struct', 'ipmi_rs', '*', 'rsp', ';', 'struct', 'ipmi_rq', 'req', ';', 'uint8_t', 'msg_data', '[', '64', ']', ';', 'int', 'i', ';', 'memset', '(', '&', 'req', ',', '0', ',', 'sizeof', '(', 'req', ')', ')', ';', 'memset', '(', 'msg_data', ',', '0', ',', 'sizeof', '(', 'msg_data', ')', ')', ';', 'req', '.', 'msg', '.', 'netfn', '=', 'IPMI_NETFN_OEM_SS', ';', 'req', '.', 'msg', '.', 'cmd', '=', 'IPMI_CMD_OEM_FW_SET_STATUS', ';', 'msg_data', '[', '0', ']', '=', '0', ';', '\t', '/', '/', 'msg_data', '[', '1', ']', '=', '4', ';', '\t', '/', '/', 'param', '=', '4', '=', 'strncpy', '(', '&', 'msg_data', '[', '2', ']', ',', 'version', ',', '32', ')', ';', 'req', '.', 'msg', '.', 'data', '=', 'msg_data', ';', 'req', '.', 'msg', '.', 'data_len', '=', '34', ';', 'rsp', '=', 'intf', '->', 'sendrecv', '(', 'intf', ',', '&', 'req', ')', ';', 'if', '(', 'rsp', '==', 'NULL', ')', '{', 'lprintf', '(', 'LOG_ERR', ',', '""""', ')', ';', 'return', '-', '1', ';', '}', 'if', '(', 'rsp', '->', 'ccode', '>', '0', ')', '{', 'lprintf', '(', 'LOG_ERR', ',', '""""', ',', 'val2str', '(', 'rsp', '->', 'ccode', ',', 'completion_code_vals', ')', ')', ';', 'return', '-', '1', ';', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
30,"['dcc_request', '(', 'DCC_REC', '*', 'dcc', ')', '{', 'char', '*', 'service', ';', 'g_return_if_fail', '(', 'dcc', '!=', 'NULL', ')', ';', 'if', '(', 'dcc', '->', 'port', '<', '1024', ')', '{', 'service', '=', 'net_getservbyport', '(', 'dcc', '->', 'port', ')', ';', 'printformat', '(', 'dcc', '->', 'server', ',', 'NULL', ',', 'MSGLEVEL_DCC', ',', 'IRCTXT_DCC_LOWPORT', ',', 'dcc', '->', 'port', ',', 'service', '!=', 'NULL', '?', 'service', ':', '""""', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
31,"['der_put_general_string', '(', 'unsigned', 'char', '*', 'p', ',', 'size_t', 'len', ',', 'const', 'general_string', '*', 'str', ',', 'size_t', '*', 'size', ')', '{', 'size_t', 'slen', '=', 'strlen', '(', '*', 'str', ')', ';', 'if', '(', 'len', '<', 'slen', ')', 'return', 'ASN1_OVERFLOW', ';', 'p', '-=', 'slen', ';', 'len', '-=', 'slen', ';', 'memcpy', '(', 'p', '+', '1', ',', '*', 'str', ',', 'slen', ')', ';', '*', 'size', '=', 'slen', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
32,"['znotify', '(', 'i_ctx_t', '*', 'i_ctx_p', ')', '{', 'os_ptr', 'op', '=', 'osp', ';', 'gs_context_t', '*', 'current', '=', '(', 'gs_context_t', '*', ')', 'i_ctx_p', ';', 'gs_condition_t', '*', 'pcond', ';', 'check_stype', '(', '*', 'op', ',', 'st_condition', ')', ';', 'pcond', '=', 'r_ptr', '(', 'op', ',', 'gs_condition_t', ')', ';', 'if_debug1', '(', '\'""""', '[', '\\""""', ',', '(', 'ulong', ')', 'pcond', ')', ';', 'pop', '(', '1', ')', ';', 'op', '--', ';', 'return', '0', ';', 'activate_waiting', '(', 'current', '->', 'scheduler', ',', '&', 'pcond', '->', 'waiting', ')', ';', 'return', 'zyield', '(', 'i_ctx_p', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
33,"['closeout', '(', ')', '{', 'char', '*', 'saveoutptr', ';', 'if', '(', 'outstage', '==', '3', ')', '{', 'saveoutptr', '=', 'outbufptr', ';', 'outbufptr', '=', 'saveoutptr', ';', '}', 'flushout', '(', ')', ';', 'close', '(', 'output', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
34,"['samsung_sysfs_is_visible', '(', 'struct', 'kobject', '*', 'kobj', ',', 'struct', 'attribute', '*', 'attr', ',', 'int', 'idx', ')', '{', 'struct', 'device', '*', 'dev', '=', 'container_of', '(', 'kobj', ',', 'struct', 'device', ',', 'kobj', ')', ';', 'struct', 'platform_device', '*', 'pdev', '=', 'to_platform_device', '(', 'dev', ')', ';', 'struct', 'samsung_laptop', '*', 'samsung', '=', 'platform_get_drvdata', '(', 'pdev', ')', ';', 'bool', 'ok', '=', 'true', ';', 'if', '(', 'attr', '==', '&', 'dev_attr_performance_level', '.', 'attr', ')', 'ok', '=', '!!samsung', '->', 'config', '->', 'performance_levels', '[', '0', ']', '.', 'name', ';', 'if', '(', 'attr', '==', '&', 'dev_attr_battery_life_extender', '.', 'attr', ')', 'ok', '=', '!!', '(', 'read_battery_life_extender', '(', 'samsung', ')', '>=', '0', ')', ';', 'if', '(', 'attr', '==', '&', 'dev_attr_usb_charge', '.', 'attr', ')', 'ok', '=', '!!', '(', 'read_usb_charge', '(', 'samsung', ')', '>=', '0', ')', ';', 'if', '(', 'attr', '==', '&', 'dev_attr_lid_handling', '.', 'attr', ')', 'ok', '=', '!!', '(', 'read_lid_handling', '(', 'samsung', ')', '>=', '0', ')', ';', 'return', 'ok', '?', 'attr', '->', 'mode', ':', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
35,"['znzputc', '(', 'int', 'c', ',', 'znzFile', 'file', ')', '{', 'if', '(', 'file', '==', 'NULL', ')', '{', 'return', '0', ';', '}', '#ifdef', 'if', '(', 'file', '->', 'zfptr', '!=', 'NULL', ')', 'return', 'gzputc', '(', 'file', '->', 'zfptr', ',', 'c', ')', ';', 'return', 'fputc', '(', 'c', ',', 'file', '->', 'nzfptr', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
36,"['libgnac_converter_eos_cb', '(', 'GstBus', '*', 'bus', ',', 'GstMessage', '*', 'message', ',', 'gpointer', 'data', ')', '{', 'LibgnacConverter', '*', 'converter', '=', '(', 'LibgnacConverter', '*', ')', 'data', ';', 'g_return_if_fail', '(', 'LIBGNAC_IS_CONVERTER', '(', 'converter', ')', ')', ';', 'LibgnacMediaItem', '*', 'item', '=', 'converter', '->', 'priv', '->', 'current', ';', 'gchar', '*', 'uri', '=', 'g_file_get_uri', '(', 'item', '->', 'source', ')', ';', 'g_signal_emit', '(', 'converter', ',', 'signals', '[', 'FILE_COMPLETED', ']', ',', '0', ',', 'uri', ')', ';', 'g_free', '(', 'uri', ')', ';', 'if', '(', '!libgnac_converter_start_next', '(', 'converter', ')', ')', '{', 'converter', '->', 'priv', '->', 'n_converted', '=', '-', '1', ';', 'g_signal_emit', '(', 'converter', ',', 'signals', '[', 'COMPLETION', ']', ',', '0', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
37,"['Perl_mro_get_linear_isa', '(', 'pTHX_', 'HV', '*', 'stash', ')', '{', 'struct', 'mro_meta', '*', 'meta', ';', 'AV', '*', 'isa', ';', 'PERL_ARGS_ASSERT_MRO_GET_LINEAR_ISA', ';', 'if', '(', '!SvOOK', '(', 'stash', ')', ')', 'Perl_croak', '(', 'aTHX_', '""""', ')', ';', 'meta', '=', 'HvMROMETA', '(', 'stash', ')', ';', 'if', '(', '!meta', '->', 'mro_which', ')', 'Perl_croak', '(', 'aTHX_', '""""', ')', ';', 'isa', '=', 'meta', '->', 'mro_which', '->', 'resolve', '(', 'aTHX_', 'stash', ',', '0', ')', ';', 'SV', '*', 'const', 'namesv', '=', '(', 'HvENAME', '(', 'stash', ')', '||', 'HvNAME', '(', 'stash', ')', ')', '?', 'newSVhek', '(', 'HvENAME_HEK', '(', 'stash', ')', '?', 'HvENAME_HEK', '(', 'stash', ')', ':', 'HvNAME_HEK', '(', 'stash', ')', ')', ':', 'NULL', ';', 'if', '(', 'namesv', '&&', '(', 'AvFILLp', '(', 'isa', ')', '==', '-', '1', '||', '!sv_eq', '(', '*', 'AvARRAY', '(', 'isa', ')', ',', 'namesv', ')', ')', ')', '{', 'AV', '*', 'const', 'old', '=', 'isa', ';', 'SV', '*', '*', 'svp', ';', 'SV', '*', '*', 'ovp', '=', 'AvARRAY', '(', 'old', ')', ';', 'SV', '*', 'const', '*', 'const', 'oend', '=', 'ovp', '+', 'AvFILLp', '(', 'old', ')', '+', '1', ';', 'isa', '=', '(', 'AV', '*', ')', 'sv_2mortal', '(', '(', 'SV', '*', ')', 'newAV', '(', ')', ')', ';', 'av_extend', '(', 'isa', ',', 'AvFILLp', '(', 'isa', ')', '=', 'AvFILLp', '(', 'old', ')', '+', '1', ')', ';', '*', 'AvARRAY', '(', 'isa', ')', '=', 'namesv', ';', 'svp', '=', 'AvARRAY', '(', 'isa', ')', '+', '1', ';', 'while', '(', 'ovp', '<', 'oend', ')', '*', 'svp', '++', '=', 'SvREFCNT_inc', '(', '*', 'ovp', '++', ')', ';', '}', 'else', 'SvREFCNT_dec', '(', 'namesv', ')', ';', '}', 'if', '(', '!meta', '->', 'isa', ')', '{', 'HV', '*', 'const', 'isa_hash', '=', 'newHV', '(', ')', ';', 'SV', '*', 'const', '*', 'svp', '=', 'AvARRAY', '(', 'isa', ')', ';', 'SV', '*', 'const', '*', 'const', 'svp_end', '=', 'svp', '+', 'AvFILLp', '(', 'isa', ')', '+', '1', ';', 'const', 'HEK', '*', 'canon_name', '=', 'HvENAME_HEK', '(', 'stash', ')', ';', 'if', '(', '!canon_name', ')', 'canon_name', '=', 'HvNAME_HEK', '(', 'stash', ')', ';', 'while', '(', 'svp', '<', 'svp_end', ')', '{', '(', 'void', ')', 'hv_store_ent', '(', 'isa_hash', ',', '*', 'svp', '++', ',', '&', 'PL_sv_undef', ',', '0', ')', ';', '}', '(', 'void', ')', 'hv_common', '(', 'isa_hash', ',', 'NULL', ',', 'HEK_KEY', '(', 'canon_name', ')', ',', 'HEK_LEN', '(', 'canon_name', ')', ',', 'HEK_FLAGS', '(', 'canon_name', ')', ',', 'HV_FETCH_ISSTORE', ',', '&', 'PL_sv_undef', ',', 'HEK_HASH', '(', 'canon_name', ')', ')', ';', '(', 'void', ')', 'hv_store', '(', 'isa_hash', ',', '""""', ',', '9', ',', '&', 'PL_sv_undef', ',', '0', ')', ';', 'SvREADONLY_on', '(', 'isa_hash', ')', ';', 'meta', '->', 'isa', '=', 'isa_hash', ';', '}', 'return', 'isa', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
38,"['strip_path_suffix', '(', 'const', 'char', '*', 'path', ',', 'const', 'char', '*', 'suffix', ')', '{', 'int', 'path_len', '=', 'strlen', '(', 'path', ')', ',', 'suffix_len', '=', 'strlen', '(', 'suffix', ')', ';', 'while', '(', 'suffix_len', ')', '{', 'if', '(', '!path_len', ')', 'return', 'NULL', ';', 'if', '(', 'is_dir_sep', '(', 'path', '[', 'path_len', '-', '1', ']', ')', ')', '{', 'if', '(', '!is_dir_sep', '(', 'suffix', '[', 'suffix_len', '-', '1', ']', ')', ')', 'return', 'NULL', ';', 'path_len', '=', 'chomp_trailing_dir_sep', '(', 'path', ',', 'path_len', ')', ';', 'suffix_len', '=', 'chomp_trailing_dir_sep', '(', 'suffix', ',', 'suffix_len', ')', ';', '}', 'else', 'if', '(', 'path', '[', '--', 'path_len', ']', '!=', 'suffix', '[', '--', 'suffix_len', ']', ')', 'return', 'NULL', ';', '}', 'if', '(', 'path_len', '&&', '!is_dir_sep', '(', 'path', '[', 'path_len', '-', '1', ']', ')', ')', 'return', 'NULL', ';', 'return', 'xstrndup', '(', 'path', ',', 'chomp_trailing_dir_sep', '(', 'path', ',', 'path_len', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
39,"['WXMPUtils_ComposeArrayItemPath_1', '(', 'XMP_StringPtr', 'schemaNS', ',', 'XMP_StringPtr', 'arrayName', ',', 'XMP_Index\t', 'itemIndex', ',', 'void', '*', 'itemPath', ',', 'SetClientStringProc', 'SetClientString', ',', 'WXMP_Result', '*', 'wResult', ')', '{', 'XMP_ENTER_Static', '(', '""""', ')', 'if', '(', '(', 'schemaNS', '==', '0', ')', '||', '(', '*', 'schemaNS', '==', '0', ')', ')', 'XMP_Throw', '(', '""""', ',', 'kXMPErr_BadSchema', ')', ';', 'if', '(', '(', 'arrayName', '==', '0', ')', '||', '(', '*', 'arrayName', '==', '0', ')', ')', 'XMP_Throw', '(', '""""', ',', 'kXMPErr_BadXPath', ')', ';', 'XMP_VarString', 'localStr', ';', 'XMPUtils', ':', ':', 'ComposeArrayItemPath', '(', 'schemaNS', ',', 'arrayName', ',', 'itemIndex', ',', '&', 'localStr', ')', ';', 'if', '(', 'itemPath', '!=', '0', ')', '(', '*', 'SetClientString', ')', '(', 'itemPath', ',', 'localStr', '.', 'c_str', '(', ')', ',', 'localStr', '.', 'size', '(', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
40,"['updateState', '(', 'const', 'QPaintEngineState', '&', 'state', ')', '{', 'if', '(', 'state', '.', 'state', '(', ')', '&', 'QPaintEngine', ':', ':', 'DirtyPen', ')', '{', 'd_pen', '=', 'state', '.', 'pen', '(', ')', ';', '}', 'if', '(', 'state', '.', 'state', '(', ')', '&', 'QPaintEngine', ':', ':', 'DirtyBrush', ')', '{', 'd_brush', '=', 'state', '.', 'brush', '(', ')', ';', '}', 'if', '(', 'state', '.', 'state', '(', ')', '&', 'QPaintEngine', ':', ':', 'DirtyBrushOrigin', ')', '{', 'd_origin', '=', 'state', '.', 'brushOrigin', '(', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
41,"['mprGrowBuf', '(', 'MprBuf', '*', 'bp', ',', 'ssize', 'need', ')', '{', 'char', '*', 'newbuf', ';', 'ssize', 'growBy', ';', 'if', '(', 'bp', '->', 'maxsize', '>', '0', '&&', 'bp', '->', 'buflen', '>=', 'bp', '->', 'maxsize', ')', '{', 'return', 'MPR_ERR_TOO_MANY', ';', '}', 'if', '(', 'bp', '->', 'start', '>', 'bp', '->', 'end', ')', '{', 'mprCompactBuf', '(', 'bp', ')', ';', '}', 'if', '(', 'need', '>', '0', ')', '{', 'growBy', '=', 'max', '(', 'bp', '->', 'growBy', ',', 'need', ')', ';', '}', 'else', '{', 'growBy', '=', 'bp', '->', 'growBy', ';', '}', 'if', '(', '(', 'newbuf', '=', 'mprAlloc', '(', 'bp', '->', 'buflen', '+', 'growBy', ')', ')', '==', '0', ')', '{', 'mprAssert', '(', '!MPR_ERR_MEMORY', ')', ';', 'return', 'MPR_ERR_MEMORY', ';', '}', 'if', '(', 'bp', '->', 'data', ')', '{', 'memcpy', '(', 'newbuf', ',', 'bp', '->', 'data', ',', 'bp', '->', 'buflen', ')', ';', '}', 'bp', '->', 'buflen', '+=', 'growBy', ';', 'bp', '->', 'end', '=', 'newbuf', '+', '(', 'bp', '->', 'end', '-', 'bp', '->', 'data', ')', ';', 'bp', '->', 'start', '=', 'newbuf', '+', '(', 'bp', '->', 'start', '-', 'bp', '->', 'data', ')', ';', 'bp', '->', 'data', '=', 'newbuf', ';', 'bp', '->', 'endbuf', '=', '&', 'bp', '->', 'data', '[', 'bp', '->', 'buflen', ']', ';', '/', '*', 'Increase', 'growBy', 'to', 'reduce', 'if', '(', 'bp', '->', 'maxsize', '>', '0', ')', '{', 'if', '(', '(', 'bp', '->', 'buflen', '+', '(', 'bp', '->', 'growBy', '*', '2', ')', ')', '>', 'bp', '->', 'maxsize', ')', '{', 'bp', '->', 'growBy', '=', 'min', '(', 'bp', '->', 'maxsize', '-', 'bp', '->', 'buflen', ',', 'bp', '->', 'growBy', '*', '2', ')', ';', '}', '}', 'else', '{', 'if', '(', '(', 'bp', '->', 'buflen', '+', '(', 'bp', '->', 'growBy', '*', '2', ')', ')', '>', 'bp', '->', 'maxsize', ')', '{', 'bp', '->', 'growBy', '=', 'min', '(', 'bp', '->', 'buflen', ',', 'bp', '->', 'growBy', '*', '2', ')', ';', '}', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
42,"['init_ic_make_global_vars', '(', 'void', ')', '{', 'tree', 'gcov_type_ptr', ';', 'ptr_void', '=', 'build_pointer_type', '(', 'void_type_node', ')', ';', '=', 'build_decl', '(', 'UNKNOWN_LOCATION', ',', 'VAR_DECL', ',', 'get_identifier', '(', '""""', ')', ',', 'ptr_void', ')', ';', 'TREE_STATIC', '(', 'ic_void_ptr_var', ')', '=', '1', ';', 'TREE_PUBLIC', '(', 'ic_void_ptr_var', ')', '=', '0', ';', 'DECL_ARTIFICIAL', '(', 'ic_void_ptr_var', ')', '=', '1', ';', 'DECL_INITIAL', '(', 'ic_void_ptr_var', ')', '=', 'NULL', ';', 'if', '(', 'targetm', '.', 'have_tls', ')', 'DECL_TLS_MODEL', '(', 'ic_void_ptr_var', ')', '=', 'decl_default_tls_model', '(', 'ic_void_ptr_var', ')', ';', 'varpool_finalize_decl', '(', 'ic_void_ptr_var', ')', ';', 'gcov_type_ptr', '=', 'build_pointer_type', '(', 'get_gcov_type', '(', ')', ')', ';', '=', 'build_decl', '(', 'UNKNOWN_LOCATION', ',', 'VAR_DECL', ',', 'get_identifier', '(', '""""', ')', ',', 'gcov_type_ptr', ')', ';', 'TREE_STATIC', '(', 'ic_gcov_type_ptr_var', ')', '=', '1', ';', 'TREE_PUBLIC', '(', 'ic_gcov_type_ptr_var', ')', '=', '0', ';', 'DECL_ARTIFICIAL', '(', 'ic_gcov_type_ptr_var', ')', '=', '1', ';', 'DECL_INITIAL', '(', 'ic_gcov_type_ptr_var', ')', '=', 'NULL', ';', 'if', '(', 'targetm', '.', 'have_tls', ')', 'DECL_TLS_MODEL', '(', 'ic_gcov_type_ptr_var', ')', '=', 'decl_default_tls_model', '(', 'ic_gcov_type_ptr_var', ')', ';', 'varpool_finalize_decl', '(', 'ic_gcov_type_ptr_var', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
43,"['cpl_table_sort', '(', 'cpl_table', '*', 'table', ',', 'const', 'cpl_propertylist', '*', 'reflist', ')', '{', 'cpl_size', '*', 'sort_pattern', ',', '*', 'sort_null_pattern', ';', 'cpl_error_code', 'ec', ';', 'if', '(', 'table', '==', 'NULL', '||', 'reflist', '==', 'NULL', ')', 'return', 'cpl_error_set_', '(', 'CPL_ERROR_NULL_INPUT', ')', ';', 'if', '(', 'cpl_propertylist_get_size', '(', 'reflist', ')', '==', '0', ')', 'return', 'cpl_error_set_', '(', 'CPL_ERROR_ILLEGAL_INPUT', ')', ';', 'if', '(', 'table', '->', 'nr', '<', '2', ')', 'return', 'CPL_ERROR_NONE', ';', 'sort_pattern', '=', 'cpl_malloc', '(', 'table', '->', 'nr', '*', 'sizeof', '(', 'cpl_size', ')', ')', ';', 'sort_null_pattern', '=', 'cpl_malloc', '(', 'table', '->', 'nr', '*', 'sizeof', '(', 'cpl_size', ')', ')', ';', 'ec', '=', 'table_sort', '(', 'table', ',', 'reflist', ',', 'cpl_propertylist_get_size', '(', 'reflist', ')', ',', 'sort_pattern', ',', 'sort_null_pattern', ')', ';', 'cpl_free', '(', 'sort_pattern', ')', ';', 'cpl_free', '(', 'sort_null_pattern', ')', ';', 'return', 'ec', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
44,"['dp83867_config_init', '(', 'struct', 'phy_device', '*', 'phydev', ')', '{', 'struct', 'dp83867_private', '*', 'dp83867', ';', 'int', 'ret', ';', 'u16', 'val', ',', 'delay', ';', 'if', '(', '!phydev', '->', 'priv', ')', '{', 'dp83867', '=', 'devm_kzalloc', '(', '&', 'phydev', '->', 'dev', ',', 'sizeof', '(', '*', 'dp83867', ')', ',', 'GFP_KERNEL', ')', ';', 'if', '(', '!dp83867', ')', 'return', '-', 'ENOMEM', ';', 'phydev', '->', 'priv', '=', 'dp83867', ';', 'ret', '=', 'dp83867_of_init', '(', 'phydev', ')', ';', 'if', '(', 'ret', ')', 'return', 'ret', ';', '}', 'else', '{', 'dp83867', '=', '(', 'struct', 'dp83867_private', '*', ')', 'phydev', '->', 'priv', ';', '}', 'if', '(', 'phy_interface_is_rgmii', '(', 'phydev', ')', ')', '{', 'ret', '=', 'phy_write', '(', 'phydev', ',', 'MII_DP83867_PHYCTRL', ',', '(', 'dp83867', '->', 'fifo_depth', '<<', 'DP83867_PHYCR_FIFO_DEPTH_SHIFT', ')', ')', ';', 'if', '(', 'ret', ')', 'return', 'ret', ';', '}', 'if', '(', '(', 'phydev', '->', 'interface', '>=', 'PHY_INTERFACE_MODE_RGMII_ID', ')', '&&', '(', 'phydev', '->', 'interface', '<=', 'PHY_INTERFACE_MODE_RGMII_RXID', ')', ')', '{', 'val', '=', 'phy_read_mmd_indirect', '(', 'phydev', ',', 'DP83867_RGMIICTL', ',', 'DP83867_DEVADDR', ',', 'phydev', '->', 'addr', ')', ';', 'if', '(', 'phydev', '->', 'interface', '==', 'PHY_INTERFACE_MODE_RGMII_ID', ')', 'val', '|=', '(', 'DP83867_RGMII_TX_CLK_DELAY_EN', '|', 'DP83867_RGMII_RX_CLK_DELAY_EN', ')', ';', 'if', '(', 'phydev', '->', 'interface', '==', 'PHY_INTERFACE_MODE_RGMII_TXID', ')', 'val', '|=', 'DP83867_RGMII_TX_CLK_DELAY_EN', ';', 'if', '(', 'phydev', '->', 'interface', '==', 'PHY_INTERFACE_MODE_RGMII_RXID', ')', 'val', '|=', 'DP83867_RGMII_RX_CLK_DELAY_EN', ';', 'phy_write_mmd_indirect', '(', 'phydev', ',', 'DP83867_RGMIICTL', ',', 'DP83867_DEVADDR', ',', 'phydev', '->', 'addr', ',', 'val', ')', ';', 'delay', '=', '(', 'dp83867', '->', 'rx_id_delay', '|', '(', 'dp83867', '->', 'tx_id_delay', '<<', 'DP83867_RGMII_TX_CLK_DELAY_SHIFT', ')', ')', ';', 'phy_write_mmd_indirect', '(', 'phydev', ',', 'DP83867_RGMIIDCTL', ',', 'DP83867_DEVADDR', ',', 'phydev', '->', 'addr', ',', 'delay', ')', ';', '}', 'if', '(', 'phy_interrupt_is_valid', '(', 'phydev', ')', ')', '{', 'val', '=', 'phy_read', '(', 'phydev', ',', 'DP83867_CFG3', ')', ';', 'val', '|=', 'BIT', '(', '7', ')', ';', 'phy_write', '(', 'phydev', ',', 'DP83867_CFG3', ',', 'val', ')', ';', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
45,"['_wapi_handle_ops_isowned', '(', 'gpointer', 'handle', ')', '{', 'guint32', 'idx', '=', 'GPOINTER_TO_UINT', '(', 'handle', ')', ';', 'WapiHandleType', 'type', ';', 'if', '(', '!_WAPI_PRIVATE_VALID_SLOT', '(', 'idx', ')', ')', '{', 'return', '(', 'FALSE', ')', ';', '}', 'type', '=', '_WAPI_PRIVATE_HANDLES', '(', 'idx', ')', '.', 'type', ';', 'if', '(', 'handle_ops', '[', 'type', ']', '!=', 'NULL', '&&', 'handle_ops', '[', 'type', ']', '->', 'is_owned', '!=', 'NULL', ')', '{', 'return', '(', 'handle_ops', '[', 'type', ']', '->', 'is_owned', '(', 'handle', ')', ')', ';', '}', 'else', '{', 'return', '(', 'FALSE', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
46,"['ndmp_sxa_mover_set_window', '(', 'struct', 'ndm_session', '*', 'sess', ',', 'struct', 'ndmp_xa_buf', '*', 'xa', ',', 'struct', 'ndmconn', '*', 'ref_conn', ')', '{', 'struct', 'ndm_tape_agent', '*', '\tta', '=', '&', 'sess', '->', 'tape_acb', ';', 'struct', 'ndmp9_mover_get_state_reply', '*', 'ms', '=', '&', 'ta', '->', 'mover_state', ';', 'unsigned', 'long', 'long\tmax_len', ';', 'unsigned', 'long', 'long\tend_win', ';', 'NDMS_WITH', '(', 'ndmp9_mover_set_window', ')', 'ndmta_mover_sync_state', '(', 'sess', ')', ';', 'if', '(', 'ref_conn', '->', 'protocol_version', '<', 'NDMP4VER', ')', '{', '/', '*', '*', 'NDMP', '[', '23', ']', 'require', 'the', 'Mover', 'be', 'in', 'LISTEN', 'state', '.', '*', 'Unclear', 'sequence', 'for', 'MOVER_CONNECT', '.', 'if', '(', 'ms', '->', 'state', '!=', '&&', 'ms', '->', 'state', '!=', 'NDMP9_MOVER_STATE_PAUSED', ')', '{', 'NDMADR_RAISE_ILLEGAL_STATE', '(', '""""', ')', ';', '}', '}', 'else', '{', '/', '*', '*', 'NDMP4', 'require', 'the', 'Mover', 'be', 'in', 'IDLE', 'state', '.', '*', 'This', 'always', 'preceeds', 'both', 'MOVER_LISTEN', '*', 'MOVER_CONNECT', '.', 'if', '(', 'ms', '->', 'state', '!=', '&&', 'ms', '->', 'state', '!=', 'NDMP9_MOVER_STATE_PAUSED', ')', '{', 'NDMADR_RAISE_ILLEGAL_STATE', '(', '""""', ')', ';', '}', '}', 'if', '(', 'request', '->', 'offset', '%', 'ms', '->', 'record_size', '!=', '0', ')', '{', 'NDMADR_RAISE_ILLEGAL_ARGS', '(', '""""', ')', ';', '}', '/', '*', 'If', 'a', 'maximum', 'length', 'window', 'is', 'required', 'following', 'a', 'mover', '*', 'to', 'the', 'PAUSED', 'state', ',', 'a', 'window', 'length', 'of', 'all', 'ones', '(', 'binary', ')', 'minus', '*', 'current', 'window', 'offset', 'MUST', 'be', 'specified', '.', '""', '(', 'NDMPv4', 'RFC', ',', 'if', '(', 'request', '->', 'length', '!=', '&&', 'request', '->', 'length', '+', 'request', '->', 'offset', '!=', 'NDMP_LENGTH_INFINITY', ')', '{', 'if', '(', 'request', '->', 'length', '%', 'ms', '->', 'record_size', '!=', '0', ')', '{', 'NDMADR_RAISE_ILLEGAL_ARGS', '(', '""""', ')', ';', '}', '#if', 'if', '(', 'request', '->', 'length', '==', '0', ')', '{', 'NDMADR_RAISE_ILLEGAL_ARGS', '(', '""""', ')', ';', '}', 'max_len', '=', 'NDMP_LENGTH_INFINITY', '-', 'request', '->', 'offset', ';', 'max_len', '-=', 'max_len', '%', 'ms', '->', 'record_size', ';', 'NDMADR_RAISE_ILLEGAL_ARGS', '(', '""""', ')', ';', '}', 'end_win', '=', 'request', '->', 'offset', '+', 'request', '->', 'length', ';', '}', 'else', '{', 'end_win', '=', 'NDMP_LENGTH_INFINITY', ';', '}', 'ms', '->', 'window_offset', '=', 'request', '->', 'offset', ';', '/', '*', 'record_num', 'should', 'probably', 'be', 'one', 'less', 'than', 'this', 'value', ',', 'but', 'the', 'ms', '->', 'record_num', '=', 'request', '->', 'offset', '/', 'ms', '->', 'record_size', ';', 'ms', '->', 'window_length', '=', 'request', '->', 'length', ';', 'ta', '->', 'mover_window_end', '=', 'end_win', ';', 'ta', '->', 'mover_window_first_blockno', '=', 'ta', '->', 'tape_state', '.', 'blockno', '.', 'value', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
47,"['scsifront_put_rqid', '(', 'struct', 'vscsifrnt_info', '*', 'info', ',', 'uint32_t', 'id', ')', '{', 'unsigned', 'long', 'flags', ';', 'int', 'kick', ';', 'spin_lock_irqsave', '(', '&', 'info', '->', 'shadow_lock', ',', 'flags', ')', ';', 'kick', '=', '_scsifront_put_rqid', '(', 'info', ',', 'id', ')', ';', 'spin_unlock_irqrestore', '(', '&', 'info', '->', 'shadow_lock', ',', 'flags', ')', ';', 'if', '(', 'kick', ')', 'scsifront_wake_up', '(', 'info', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
48,"['getVectors', '(', 'std', ':', ':', 'vector', '<', 'aiVector3D', '>', '&', 'vecs', ')', '{', 'vecs', '.', 'resize', '(', 'vecMap', '.', 'size', '(', ')', ')', ';', 'for', '(', 'vecIndexMap', ':', ':', 'dataType', ':', ':', 'iterator', 'it', '=', 'vecMap', '.', 'begin', '(', ')', ';', 'it', '!=', 'vecMap', '.', 'end', '(', ')', ';', 'it', '++', ')', '{', 'vecs', '[', 'it', '->', 'second', '-', '1', ']', '=', 'it', '->', 'first', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
49,"['printheader', '(', 'struct', 'fetchheaderinfo', '*', 'fi', ',', 'const', 'char', '*', 'p', ',', 'size_t', 's', ')', '{', 'size_t', 'i', ';', 'if', '(', 'fi', '->', 'skipping', ')', '{', 'if', '(', 'fi', '->', 'skipping', '>', 's', ')', '{', 'fi', '->', 'skipping', '-=', 's', ';', 'return', ';', '}', 'p', '+=', 'fi', '->', 'skipping', ';', 's', '-=', 'fi', '->', 'skipping', ';', 'fi', '->', 'skipping', '=', '0', ';', '}', 'if', '(', 's', '>', 'fi', '->', 'cnt', ')', '\ts', '=', 'fi', '->', 'cnt', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<=', 's', ';', 'i', '++', ')', 'if', '(', 'p', '[', 'i', ']', '!=', ""''"", ')', '++', 'header_count', ';', 'writemem', '(', 'p', ',', 's', ')', ';', 'fi', '->', 'cnt', '-=', 's', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
50,"['simpleSplit', '(', 'const', 'UT_String', '&', 'str', ',', 'char', 'separator', ',', 'size_t', 'max', ')', '{', 'UT_GenericVector', '<', 'UT_String', '*', '>', '*', 'utvResult', '=', 'new', 'UT_GenericVector', '<', 'UT_String', '*', '>', '(', ')', ';', 'UT_String', '*', 'utsEntry', ';', 'UT_uint32', 'start', '=', '0', ';', 'for', '(', 'size_t', 'j', '=', '0', ';', '(', 'max', '==', '0', '||', 'j', '<', 'max', ')', '&&', 'start', '<', 'str', '.', 'size', '(', ')', ';', 'j', '++', ')', '{', 'utsEntry', '=', 'new', 'UT_String', ';', 'for', '(', ';', '(', 'str', '[', 'start', ']', '!=', 'separator', '||', 'j', '==', 'max', '-', '1', ')', '&&', 'start', '<', 'str', '.', 'size', '(', ')', ';', 'start', '++', ')', '*', 'utsEntry', '+=', 'str', '[', 'start', ']', ';', 'start', '++', ';', '\t\t\t\t\t\t', '/', '/', 'skipping', 'over', 'the', 'separator', '/', '/', 'if', '(', 'utsEntry', '->', 'empty', '(', ')', ')', 'delete', 'utsEntry', ';', 'utvResult', '->', 'addItem', '(', 'utsEntry', ')', ';', '}', 'return', 'utvResult', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
51,"['get_genomic_range', '(', 'const', 'void', '*', 'sa', ')', '{', 'GtSSplicedAlignment', '*', 'alignment', '=', '*', '(', 'GtSSplicedAlignment', '*', '*', ')', 'sa', ';', 'gt_assert', '(', 'alignment', ')', ';', 'return', 'gt_sspliced_alignment_genomic_range', '(', 'alignment', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
52,"['_mesa_remove_dead_code_local', '(', 'struct', 'gl_program', '*', 'prog', ')', '{', 'GLboolean', '*', 'removeInst', ';', 'GLuint', 'i', ',', 'arg', ',', 'rem', '=', '0', ';', 'removeInst', '=', 'calloc', '(', '1', ',', 'prog', '->', 'NumInstructions', '*', 'sizeof', '(', 'GLboolean', ')', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'prog', '->', 'NumInstructions', ';', 'i', '++', ')', '{', 'const', 'struct', 'prog_instruction', '*', 'inst', '=', 'prog', '->', 'Instructions', '+', 'i', ';', 'const', 'GLuint', 'index', '=', 'inst', '->', 'DstReg', '.', 'Index', ';', 'const', 'GLuint', 'mask', '=', 'inst', '->', 'DstReg', '.', 'WriteMask', ';', 'enum', 'inst_use', 'use', ';', 'if', '(', 'inst', '->', 'DstReg', '.', 'RelAddr', ')', 'goto', 'done', ';', 'for', '(', 'arg', '=', '0', ';', 'arg', '<', '_mesa_num_inst_src_regs', '(', 'inst', '->', 'Opcode', ')', ';', 'arg', '++', ')', 'if', '(', 'inst', '->', 'SrcReg', '[', 'arg', ']', '.', 'RelAddr', ')', 'goto', 'done', ';', 'if', '(', '_mesa_is_flow_control_opcode', '(', 'inst', '->', 'Opcode', ')', '||', '_mesa_num_inst_dst_regs', '(', 'inst', '->', 'Opcode', ')', '==', '0', '||', 'inst', '->', 'DstReg', '.', 'File', '!=', 'PROGRAM_TEMPORARY', '||', 'inst', '->', 'DstReg', '.', 'RelAddr', ')', 'continue', ';', 'use', '=', 'find_next_use', '(', 'prog', ',', 'i', '+', '1', ',', 'index', ',', 'mask', ')', ';', 'if', '(', 'use', '==', 'WRITE', '||', 'use', '==', 'END', ')', 'removeInst', '[', 'i', ']', '=', 'GL_TRUE', ';', '}', 'rem', '=', 'remove_instructions', '(', 'prog', ',', 'removeInst', ')', ';', 'done', ':', 'free', '(', 'removeInst', ')', ';', 'return', 'rem', '!=', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
53,"['set_mode', '(', 'struct', 'device', '*', 'dev', ',', 'struct', 'device_attribute', '*', 'attr', ',', 'const', 'char', '*', 'buf', ',', 'size_t', 'count', ')', '{', 'struct', 'virtual_consumer_data', '*', 'data', '=', 'dev_get_drvdata', '(', 'dev', ')', ';', 'unsigned', 'int', 'mode', ';', 'int', 'ret', ';', '/', '*', '*', 'sysfs_streq', '(', ')', ""doesn''s"", ',', 'but', 'we', 'add', 'them', 'so', 'the', '*', 'will', 'be', 'shared', 'with', 'show_mode', '(', ')', ',', 'above', '.', 'if', '(', 'sysfs_streq', '(', 'buf', ',', '""""', ')', ')', 'mode', '=', 'REGULATOR_MODE_FAST', ';', 'else', 'if', '(', 'sysfs_streq', '(', 'buf', ',', '""""', ')', ')', 'mode', '=', 'REGULATOR_MODE_NORMAL', ';', 'else', 'if', '(', 'sysfs_streq', '(', 'buf', ',', '""""', ')', ')', 'mode', '=', 'REGULATOR_MODE_IDLE', ';', 'else', 'if', '(', 'sysfs_streq', '(', 'buf', ',', '""""', ')', ')', 'mode', '=', 'REGULATOR_MODE_STANDBY', ';', 'else', '{', 'dev_err', '(', 'dev', ',', '""""', ')', ';', 'return', 'count', ';', '}', 'mutex_lock', '(', '&', 'data', '->', 'lock', ')', ';', 'ret', '=', 'regulator_set_mode', '(', 'data', '->', 'regulator', ',', 'mode', ')', ';', 'if', '(', 'ret', '==', '0', ')', 'data', '->', 'mode', '=', 'mode', ';', 'dev_err', '(', 'dev', ',', '""""', ',', 'ret', ')', ';', 'mutex_unlock', '(', '&', 'data', '->', 'lock', ')', ';', 'return', 'count', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
54,"['readFData', '(', 'FILE', '*', 'fp', ',', 'fData', '*', 't', ',', 'const', 'fDataType', '*', 'types', ')', '{', 'char', '*', '*', 'currentRow', ';', 'char', '*', 'rowPtr', ';', 'int', 'rowCount', '=', '0', ';', 'int', 'i', ';', 'int', 'errFlag', '=', '0', ';', '/', '/', 'not', 'used', ',', 'but', 'possibly', 'for', 'future', 'usage', '.', 'set', 'when', 'data', 'types', '/', '/', 'allocate', 'the', 'datatypes', 'table', ',', 'and', 'set', 'the', 'default', 't', '->', 'types', '=', '(', 'fDataType', '*', ')', 'malloc', '(', 'sizeof', '(', 'fDataType', ')', '*', 't', '->', 'numCols', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 't', '->', 'numCols', ';', 'i', '++', ')', '{', 't', '->', 'types', '[', 'i', ']', '.', 'type', '=', 'INT', ';', 't', '->', 'types', '[', 'i', ']', '.', 'sigDigits', '=', '0', ';', 't', '->', 'types', '[', 'i', ']', '.', 'inSigDigits', '=', '0', ';', '}', '/', '/', 'allocate', 'the', 'first', 'row', 'of', 't', '->', 'data', '=', '(', 'char', '*', '*', '*', ')', 'malloc', '(', '(', 'sizeof', '(', 'char', '*', '*', ')', ')', ')', ';', 'while', '(', '!EOFDETECTED', ')', '{', '/', '/', 'read', 'in', 'a', 'if', '(', '(', 'rowPtr', '=', 'getRow', '(', 'fp', ')', ')', '==', 'NULL', ')', 'break', ';', '/', '/', 'this', 'is', 'not', 'really', 'an', '/', '/', 'parse', 'the', 'currentRow', '=', 'readRow', '(', 'rowPtr', ',', 't', '->', 'numCols', ')', ';', 'if', '(', 'types', '!=', 'NULL', ')', '/', '/', 'check', 'to', 'see', 'if', 'the', 'dataTypes', 'in', 'TYPES', 'are', 'OK', 'with', 'the', 'data', 'read', '.', '{', 'if', '(', '!verifyRow', '(', 'currentRow', ',', 'types', ',', 't', '->', 'numCols', ')', ')', '{', 'fprintf', '(', 'stderr', ',', '""""', ',', 'rowCount', ')', ';', 'errFlag', '=', '1', ';', '}', '}', 'if', '(', 'EOFDETECTED', ')', 'break', ';', 'if', '(', '!', 'currentRow', ')', '{', 'fprintf', '(', 'stderr', ',', '""""', ',', 'rowCount', ')', ';', 't', '->', 'data', '=', 'NULL', ';', 'return', '1', ';', ';', '}', '/', '/', 'make', 'space', 'for', 'another', 't', '->', 'data', '=', '(', 'char', '*', '*', '*', ')', 'realloc', '(', 't', '->', 'data', ',', '(', 'sizeof', '(', 'char', '*', '*', ')', '*', '(', 'rowCount', '+', '1', ')', ')', ')', ';', '/', '/', 'set', 'the', 'values', 'for', 'the', 'row', ',', 'and', 'increment', 't', '->', 'data', '[', 'rowCount', '++', ']', '=', 'currentRow', ';', 'getDataTypes', '(', 't', '->', 'numCols', ',', 't', '->', 'types', ',', 'currentRow', ')', ';', 'free', '(', 'rowPtr', ')', ';', '}', 't', '->', 'numRows', '=', 'rowCount', ';', 'return', 'errFlag', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
55,"['stk3310_read_raw', '(', 'struct', 'iio_dev', '*', 'indio_dev', ',', 'struct', 'iio_chan_spec', 'const', '*', 'chan', ',', 'int', '*', 'val', ',', 'int', '*', 'val2', ',', 'long', 'mask', ')', '{', 'u8', 'reg', ';', '__be16', 'buf', ';', 'int', 'ret', ';', 'unsigned', 'int', 'index', ';', 'struct', 'stk3310_data', '*', 'data', '=', 'iio_priv', '(', 'indio_dev', ')', ';', 'struct', 'i2c_client', '*', 'client', '=', 'data', '->', 'client', ';', 'if', '(', 'chan', '->', 'type', '!=', 'IIO_LIGHT', '&&', 'chan', '->', 'type', '!=', 'IIO_PROXIMITY', ')', 'return', '-', 'EINVAL', ';', 'switch', '(', 'mask', ')', '{', 'case', 'IIO_CHAN_INFO_RAW', ':', 'if', '(', 'chan', '->', 'type', '==', 'IIO_LIGHT', ')', 'reg', '=', 'STK3310_REG_ALS_DATA_MSB', ';', 'reg', '=', 'STK3310_REG_PS_DATA_MSB', ';', 'mutex_lock', '(', '&', 'data', '->', 'lock', ')', ';', 'ret', '=', 'regmap_bulk_read', '(', 'data', '->', 'regmap', ',', 'reg', ',', '&', 'buf', ',', '2', ')', ';', 'if', '(', 'ret', '<', '0', ')', '{', 'dev_err', '(', '&', 'client', '->', 'dev', ',', '""""', ')', ';', 'mutex_unlock', '(', '&', 'data', '->', 'lock', ')', ';', 'return', 'ret', ';', '}', '*', 'val', '=', 'be16_to_cpu', '(', 'buf', ')', ';', 'mutex_unlock', '(', '&', 'data', '->', 'lock', ')', ';', 'return', 'IIO_VAL_INT', ';', 'case', 'IIO_CHAN_INFO_INT_TIME', ':', 'if', '(', 'chan', '->', 'type', '==', 'IIO_LIGHT', ')', 'ret', '=', 'regmap_field_read', '(', 'data', '->', 'reg_als_it', ',', '&', 'index', ')', ';', 'ret', '=', 'regmap_field_read', '(', 'data', '->', 'reg_ps_it', ',', '&', 'index', ')', ';', 'if', '(', 'ret', '<', '0', ')', 'return', 'ret', ';', '*', 'val', '=', 'stk3310_it_table', '[', 'index', ']', '[', '0', ']', ';', '*', 'val2', '=', 'stk3310_it_table', '[', 'index', ']', '[', '1', ']', ';', 'return', 'IIO_VAL_INT_PLUS_MICRO', ';', 'case', 'IIO_CHAN_INFO_SCALE', ':', 'if', '(', 'chan', '->', 'type', '==', 'IIO_LIGHT', ')', 'ret', '=', 'regmap_field_read', '(', 'data', '->', 'reg_als_gain', ',', '&', 'index', ')', ';', 'ret', '=', 'regmap_field_read', '(', 'data', '->', 'reg_ps_gain', ',', '&', 'index', ')', ';', 'if', '(', 'ret', '<', '0', ')', 'return', 'ret', ';', '*', 'val', '=', 'stk3310_scale_table', '[', 'index', ']', '[', '0', ']', ';', '*', 'val2', '=', 'stk3310_scale_table', '[', 'index', ']', '[', '1', ']', ';', 'return', 'IIO_VAL_INT_PLUS_MICRO', ';', '}', 'return', '-', 'EINVAL', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
56,"['arma_model_get_x_coeffs', '(', 'const', 'MODEL', '*', 'pmod', ')', '{', 'const', 'double', '*', 'xc', '=', 'NULL', ';', 'if', '(', 'pmod', '->', 'ci', '==', 'ARMA', '&&', 'gretl_model_get_int', '(', 'pmod', ',', '""""', ')', ')', '{', 'xc', '=', 'pmod', '->', 'coeff', ';', 'xc', '+=', 'pmod', '->', 'ifc', ';', 'xc', '+=', 'arma_AR_lags', '(', 'pmod', ')', ';', 'xc', '+=', 'arma_MA_lags', '(', 'pmod', ')', ';', 'xc', '+=', 'gretl_model_get_int', '(', 'pmod', ',', '""""', ')', ';', 'xc', '+=', 'gretl_model_get_int', '(', 'pmod', ',', '""""', ')', ';', '}', 'return', 'xc', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
57,"['Sop_a8_to_Dacc', '(', 'GenefxState', '*', 'gfxs', ')', '{', 'int', 'w', '=', 'gfxs', '->', 'length', ';', 'GenefxAccumulator', '*', 'D', '=', 'gfxs', '->', 'Dacc', ';', 'u8', '*', 'S', '=', 'gfxs', '->', 'Sop', '[', '0', ']', ';', 'while', '(', 'w', '--', ')', '{', 'D', '->', 'RGB', '.', 'a', '=', '*', 'S', '++', ';', 'D', '->', 'RGB', '.', 'r', '=', '0xFF', ';', 'D', '->', 'RGB', '.', 'g', '=', '0xFF', ';', 'D', '->', 'RGB', '.', 'b', '=', '0xFF', ';', 'D', '++', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
58,"['getCopyStart', '(', 'PGconn', '*', 'conn', ',', 'ExecStatusType', 'copytype', ')', '{', 'PGresult', '*', 'result', ';', 'int\t\t\tnfields', ';', 'int\t\t\ti', ';', 'result', '=', 'PQmakeEmptyPGresult', '(', 'conn', ',', 'copytype', ')', ';', 'if', '(', '!result', ')', 'goto', 'failure', ';', 'if', '(', 'pqGetc', '(', '&', 'conn', '->', 'copy_is_binary', ',', 'conn', ')', ')', 'goto', 'failure', ';', 'result', '->', 'binary', '=', 'conn', '->', 'copy_is_binary', ';', 'if', '(', 'pqGetInt', '(', '&', '(', 'result', '->', 'numAttributes', ')', ',', '2', ',', 'conn', ')', ')', 'goto', 'failure', ';', 'nfields', '=', 'result', '->', 'numAttributes', ';', 'if', '(', 'nfields', '>', '0', ')', '{', 'result', '->', 'attDescs', '=', '(', 'PGresAttDesc', '*', ')', 'pqResultAlloc', '(', 'result', ',', 'nfields', '*', 'sizeof', '(', 'PGresAttDesc', ')', ',', 'TRUE', ')', ';', 'if', '(', '!result', '->', 'attDescs', ')', 'goto', 'failure', ';', 'MemSet', '(', 'result', '->', 'attDescs', ',', '0', ',', 'nfields', '*', 'sizeof', '(', 'PGresAttDesc', ')', ')', ';', '}', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'nfields', ';', 'i', '++', ')', '{', 'int\t\t\tformat', ';', 'if', '(', 'pqGetInt', '(', '&', 'format', ',', '2', ',', 'conn', ')', ')', 'goto', 'failure', ';', '/', '*', '*', 'Since', 'pqGetInt', 'treats', '2', '-', 'byte', 'integers', 'as', 'unsigned', ',', 'we', 'need', '*', 'coerce', 'these', 'results', 'to', 'signed', 'form', '.', 'format', '=', '(', 'int', ')', '(', '(', 'int16', ')', 'format', ')', ';', 'result', '->', 'attDescs', '[', 'i', ']', '.', 'format', '=', 'format', ';', '}', 'conn', '->', 'result', '=', 'result', ';', 'return', '0', ';', 'failure', ':', 'PQclear', '(', 'result', ')', ';', 'return', 'EOF', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
59,"['MV_Mix16BitStereo16Stereo', '(', 'unsigned', 'int', 'position', ',', 'unsigned', 'int', 'rate', ',', 'char', '*', 'start', ',', 'unsigned', 'int', 'length', ')', '{', 'unsigned', 'short', '*', 'source', '=', '(', 'unsigned', 'short', '*', ')', 'start', ';', 'short', '*', 'dest', '=', '(', 'short', '*', ')', 'MV_MixDestination', ';', 'int', 'sample0l', ',', 'sample0h', ',', 'sample0', ';', 'int', 'sample1l', ',', 'sample1h', ',', 'sample1', ';', 'while', '(', 'length', '--', ')', '{', 'sample0', '=', 'source', '[', '(', 'position', '>>', '16', ')', '<<', '1', ']', ';', 'sample1', '=', 'source', '[', '(', '(', 'position', '>>', '16', ')', '<<', '1', ')', '+', '1', ']', ';', '#ifdef', 'sample0l', '=', 'sample0', '>>', '8', ';', 'sample0h', '=', '(', 'sample0', '&', '255', ')', '^', '128', ';', 'sample1l', '=', 'sample1', '>>', '8', ';', 'sample1h', '=', '(', 'sample1', '&', '255', ')', '^', '128', ';', 'sample0l', '=', 'sample0', '&', '255', ';', 'sample0h', '=', '(', 'sample0', '>>', '8', ')', '^', '128', ';', 'sample1l', '=', 'sample1', '&', '255', ';', 'sample1h', '=', '(', 'sample1', '>>', '8', ')', '^', '128', ';', 'position', '+=', 'rate', ';', 'sample0l', '=', 'MV_LeftVolume', '[', 'sample0l', ']', '>>', '8', ';', 'sample0h', '=', 'MV_LeftVolume', '[', 'sample0h', ']', ';', 'sample1l', '=', 'MV_RightVolume', '[', 'sample1l', ']', '>>', '8', ';', 'sample1h', '=', 'MV_RightVolume', '[', 'sample1h', ']', ';', 'sample0', '=', 'sample0l', '+', 'sample0h', '+', '128', '+', '*', 'dest', ';', 'sample1', '=', 'sample1l', '+', 'sample1h', '+', '128', '+', '*', '(', 'dest', '+', 'MV_RightChannelOffset', '/', '2', ')', ';', 'if', '(', 'sample0', '<', '-', '32768', ')', 'sample0', '=', '-', '32768', ';', 'else', 'if', '(', 'sample0', '>', '32767', ')', 'sample0', '=', '32767', ';', 'if', '(', 'sample1', '<', '-', '32768', ')', 'sample1', '=', '-', '32768', ';', 'else', 'if', '(', 'sample1', '>', '32767', ')', 'sample1', '=', '32767', ';', '*', 'dest', '=', '(', 'short', ')', 'sample0', ';', '*', '(', 'dest', '+', 'MV_RightChannelOffset', '/', '2', ')', '=', '(', 'short', ')', 'sample1', ';', 'dest', '+=', 'MV_SampleSize', '/', '2', ';', '}', 'MV_MixPosition', '=', 'position', ';', 'MV_MixDestination', '=', '(', 'char', '*', ')', 'dest', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
60,"['scld_dock_exrom_from_snapshot', '(', 'memory_page', '*', 'dest', ',', 'int', 'page_num', ',', 'int', 'writable', ',', 'void', '*', 'source', ')', '{', 'int', 'i', ';', 'libspectrum_byte', '*', 'data', '=', 'memory_pool_allocate', '(', '0x2000', ')', ';', 'memcpy', '(', 'data', ',', 'source', ',', '0x2000', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'MEMORY_PAGES_IN_8K', ';', 'i', '++', ')', '{', 'memory_page', '*', 'page', '=', '&', 'dest', '[', 'page_num', '*', 'MEMORY_PAGES_IN_8K', '+', 'i', ']', ';', 'page', '->', 'offset', '=', 'i', '*', 'MEMORY_PAGE_SIZE', ';', 'page', '->', 'page_num', '=', 'page_num', ';', 'page', '->', 'writable', '=', 'writable', ';', 'page', '->', 'page', '=', 'data', '+', 'page', '->', 'offset', ';', 'page', '->', 'save_to_snapshot', '=', '1', ';', '}', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
61,"['kook_ASSURE_asm', '(', 'CTX', 'ctx', ',', 'kStmtExpr', '*', 'stmt', ')', '{', 'kStmtExpr', '*', 'stmt0', '=', 'stmtNN', '(', 'stmt', ',', '0', ')', ';', 'kStmtExpr', '*', 'stmt1', '=', 'stmtNN', '(', 'stmt', ',', '1', ')', ';', 'CALL', '(', 'ctx', ',', 'COMPILER_API', '.', 'ASSURE', ',', '3', ',', 'stmt', ',', 'stmt0', ',', 'stmt1', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
62,"['define_attr_by_hp', '(', 'HSCPRC', '*', 'hp', ',', 'STRPTR', 'default_value', ',', 'ULONG', 'unmasked_flags', ')', '{', 'HSCATTR', '*', 'attr', '=', 'define_var', '(', 'hp', ',', 'hp', '->', 'defattr', ',', '0', ')', ';', 'if', '(', 'attr', ')', '{', 'attr', '->', 'macro_id', '=', '(', '(', 'attr', '->', 'varflag', '&', 'VF_GLOBAL', ')', '?', 'MCI_GLOBAL', ':', 'get_current_mci', '(', 'hp', ')', ')', ';', 'attr', '->', 'varflag', '|=', 'VF_MACRO', ';', 'if', '(', 'get_vardeftext', '(', 'attr', ')', ')', '{', 'if', '(', 'default_value', ')', 'panic', '(', '""""', ')', ';', 'clr_vartext', '(', 'attr', ')', ';', '}', 'if', '(', 'default_value', ')', 'set_vartext', '(', 'attr', ',', 'default_value', ')', ';', 'clr_attrdef', '(', 'attr', ')', ';', '}', 'return', '(', 'attr', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
63,"['getQuaternaries', '(', 'uint32_t', 'variableTop', ',', 'uint32_t', 'pair', ')', '{', '/', '/', 'Return', 'the', 'primary', 'weight', 'of', 'a', 'variable', 'CE', ',', '/', '/', 'or', 'the', 'maximum', 'primary', 'weight', 'for', 'a', 'non', '-', 'variable', ',', 'not', '-', 'completely', '-', 'ignorable', 'CE', '.', 'if', '(', 'pair', '<=', '0xffff', ')', '{', '/', '/', 'one', 'mini', 'if', '(', 'pair', '>=', 'MIN_SHORT', ')', '{', '/', '/', 'A', 'high', 'secondary', 'weight', 'means', 'we', 'really', 'have', 'two', 'CEs', ',', '/', '/', 'a', 'primary', 'CE', 'and', 'a', 'secondary', 'CE', '.', 'if', '(', '(', 'pair', '&', 'SECONDARY_MASK', ')', '>=', 'MIN_SEC_HIGH', ')', '{', 'pair', '=', 'TWO_SHORT_PRIMARIES_MASK', ';', '}', 'else', '{', 'pair', '=', 'SHORT_PRIMARY_MASK', ';', '}', '}', 'else', 'if', '(', 'pair', '>', 'variableTop', ')', '{', 'pair', '=', 'SHORT_PRIMARY_MASK', ';', '}', 'else', 'if', '(', 'pair', '>=', 'MIN_LONG', ')', '{', 'pair', '&=', 'LONG_PRIMARY_MASK', ';', '/', '/', '}', '/', '/', 'else', 'special', 'mini', '}', 'else', '{', '/', '/', 'two', 'mini', 'CEs', ',', 'same', 'primary', 'groups', ',', 'neither', 'expands', 'like', 'uint32_t', 'ce', '=', 'pair', '&', '0xffff', ';', 'if', '(', 'ce', '>', 'variableTop', ')', '{', 'pair', '=', 'TWO_SHORT_PRIMARIES_MASK', ';', '}', 'else', '{', 'U_ASSERT', '(', 'ce', '>=', 'MIN_LONG', ')', ';', 'pair', '&=', 'TWO_LONG_PRIMARIES_MASK', ';', '/', '/', '}', '}', 'return', 'pair', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
64,"['(', 'JNIEnv', '*', 'env', ',', 'jclass', 'clss', ',', 'jint', 'sds_id', ',', 'jdouble', 'cal', ',', 'jdouble', 'cal_err', ',', 'jdouble', 'offset', ',', 'jdouble', 'offset_err', ',', 'jint', 'number_type', ')', '{', 'intn', 'rval', ';', 'rval', '=', 'SDsetcal', '(', '(', 'int32', ')', 'sds_id', ',', '(', 'float64', ')', 'cal', ',', '(', 'float64', ')', 'cal_err', ',', '(', 'float64', ')', 'offset', ',', '(', 'float64', ')', 'offset_err', ',', '(', 'int32', ')', 'number_type', ')', ';', 'if', '(', 'rval', '==', 'FAIL', ')', '{', 'return', 'JNI_FALSE', ';', '}', 'else', '{', 'return', 'JNI_TRUE', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
65,"['cmd_objects_delete_undo', '(', 'GnmCommand', '*', 'cmd', ',', 'G_GNUC_UNUSED', 'WorkbookControl', '*', 'wbc', ')', '{', 'CmdObjectsDelete', '*', 'me', '=', 'CMD_OBJECTS_DELETE', '(', 'cmd', ')', ';', 'GSList', '*', 'l', ';', 'gint', 'i', ';', 'g_slist_foreach', '(', 'me', '->', 'objects', ',', '(', 'GFunc', ')', 'sheet_object_set_sheet', ',', 'me', '->', 'cmd', '.', 'sheet', ')', ';', 'for', '(', 'l', '=', 'me', '->', 'objects', ',', 'i', '=', '0', ';', 'l', ';', 'l', '=', 'l', '->', 'next', ',', 'i', '++', ')', 'cmd_objects_restore_location', '(', 'SHEET_OBJECT', '(', 'l', '->', 'data', ')', ',', 'g_array_index', '(', 'me', '->', 'location', ',', 'gint', ',', 'i', ')', ')', ';', 'return', 'FALSE', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
66,"['retrieveModelPart', '(', 'const', 'QString', '&', 'moduleID', ')', '{', 'ModelPart', '*', 'modelPart', '=', 'm_partHash', '.', 'value', '(', 'moduleID', ',', 'NULL', ')', ';', 'if', '(', 'modelPart', '!=', 'NULL', ')', 'return', 'modelPart', ';', 'if', '(', 'm_referenceModel', '!=', 'NULL', ')', '{', 'return', 'm_referenceModel', '->', 'retrieveModelPart', '(', 'moduleID', ')', ';', '}', 'return', 'NULL', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
67,"['HENQueueScanner', '(', 'Display', '*', 'dpy', ',', 'XEvent', '*', 'ev', ',', 'char', '*', 'args', ')', '{', 'if', '(', 'ev', '->', 'type', '==', 'LeaveNotify', ')', '{', 'if', '(', 'ev', '->', 'xcrossing', '.', 'window', '==', '(', '(', 'HENScanArgs', '*', ')', 'args', ')', '->', 'w', '&&', 'ev', '->', 'xcrossing', '.', 'mode', '==', 'NotifyNormal', ')', '{', '(', '(', 'HENScanArgs', '*', ')', 'args', ')', '->', 'leaves', '=', 'True', ';', '/', '*', '*', 'Only', 'the', 'last', 'event', 'found', 'matters', 'for', 'the', 'Inferior', 'field', '.', '(', '(', 'HENScanArgs', '*', ')', 'args', ')', '->', 'inferior', '=', '(', 'ev', '->', 'xcrossing', '.', 'detail', '==', 'NotifyInferior', ')', ';', '}', '}', 'else', 'if', '(', 'ev', '->', 'type', '==', 'EnterNotify', ')', '{', 'if', '(', 'ev', '->', 'xcrossing', '.', 'mode', '==', 'NotifyUngrab', ')', '(', '(', 'HENScanArgs', '*', ')', 'args', ')', '->', 'enters', '=', 'True', ';', '}', 'return', '(', 'False', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
68,"['ghw_read_lsleb128', '(', 'struct', 'ghw_handler', '*', 'h', ',', 'int64_t', '*', 'res', ')', '{', 'static', 'const', 'int64_t', 'r_mask', '=', '-', '1', ';', 'int64_t', 'r', '=', '0', ';', 'unsigned', 'int', 'off', '=', '0', ';', 'while', '(', '1', ')', '{', 'int', 'v', '=', 'fgetc', '(', 'h', '->', 'stream', ')', ';', 'if', '(', 'v', '==', 'EOF', ')', 'return', '-', '1', ';', 'r', '|=', '(', '(', 'int64_t', ')', '(', 'v', '&', '0x7f', ')', ')', '<<', 'off', ';', 'off', '+=', '7', ';', 'if', '(', '(', 'v', '&', '0x80', ')', '==', '0', ')', '{', 'if', '(', '(', 'v', '&', '0x40', ')', '&&', 'off', '<', '64', ')', 'r', '|=', 'r_mask', '<<', 'off', ';', 'break', ';', '}', '}', '*', 'res', '=', 'r', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
69,"['sha256d', '(', 'unsigned', 'char', '*', 'hash', ',', 'const', 'unsigned', 'char', '*', 'data', ',', 'int', 'len', ')', '{', 'uint32_t', 'S', '[', '16', ']', ',', 'T', '[', '16', ']', ';', 'int', 'i', ',', 'r', ';', 'sha256_init', '(', 'S', ')', ';', 'for', '(', 'r', '=', 'len', ';', 'r', '>', '-', '9', ';', 'r', '-=', '64', ')', '{', 'if', '(', 'r', '<', '64', ')', 'memset', '(', 'T', ',', '0', ',', '64', ')', ';', 'memcpy', '(', 'T', ',', 'data', '+', 'len', '-', 'r', ',', 'r', '>', '64', '?', '64', ':', '(', 'r', '<', '0', '?', '0', ':', 'r', ')', ')', ';', 'if', '(', 'r', '>=', '0', '&&', 'r', '<', '64', ')', '(', '(', 'unsigned', 'char', '*', ')', 'T', ')', '[', 'r', ']', '=', '0x80', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', '16', ';', 'i', '++', ')', 'T', '[', 'i', ']', '=', 'be32dec', '(', 'T', '+', 'i', ')', ';', 'if', '(', 'r', '<', '56', ')', 'T', '[', '15', ']', '=', '8', '*', 'len', ';', 'sha256_transform', '(', 'S', ',', 'T', ',', '0', ')', ';', '}', 'memcpy', '(', 'S', '+', '8', ',', 'sha256d_hash1', '+', '8', ',', '32', ')', ';', 'sha256_init', '(', 'T', ')', ';', 'sha256_transform', '(', 'T', ',', 'S', ',', '0', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', '8', ';', 'i', '++', ')', 'be32enc', '(', '(', 'uint32_t', '*', ')', 'hash', '+', 'i', ',', 'T', '[', 'i', ']', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
70,"['jd_s_channel_read', '(', 'mud_channel', '*', 'pc', ',', 'void', '*', 'buf', ',', 'int', 'length', ',', 'int', 'sec_timeout', ',', 'int', '*', 'bytes_read', ')', '{', 'mud_device', '*', 'pd', '=', '&', 'msp', '->', 'device', '[', 'pc', '->', 'dindex', ']', ';', 'int', 'len', '=', '0', ';', 'struct', 'timeval', 'tmo', ';', 'fd_set', 'master', ';', 'fd_set', 'readfd', ';', 'int', 'maxfd', ',', 'ret', ';', 'enum', 'HPMUD_RESULT', 'stat', '=', 'HPMUD_R_IO_ERROR', ';', '*', 'bytes_read', '=', '0', ';', 'if', '(', 'pc', '->', 'socket', '<', '0', ')', '{', 'stat', '=', 'HPMUD_R_INVALID_STATE', ';', 'BUG', '(', '""""', ',', 'pc', '->', 'socket', ',', 'pd', '->', 'uri', ')', ';', 'goto', 'bugout', ';', '}', 'FD_ZERO', '(', '&', 'master', ')', ';', 'FD_SET', '(', 'pc', '->', 'socket', ',', '&', 'master', ')', ';', 'maxfd', '=', 'pc', '->', 'socket', ';', 'tmo', '.', 'tv_sec', '=', 'sec_timeout', ';', 'tmo', '.', 'tv_usec', '=', '0', ';', 'readfd', '=', 'master', ';', 'ret', '=', 'select', '(', 'maxfd', '+', '1', ',', '&', 'readfd', ',', 'NULL', ',', 'NULL', ',', '&', 'tmo', ')', ';', 'if', '(', 'ret', '<', '0', ')', '{', 'BUG', '(', '""""', ',', 'pd', '->', 'uri', ')', ';', 'goto', 'bugout', ';', '}', 'if', '(', 'ret', '==', '0', ')', '{', 'stat', '=', 'HPMUD_R_IO_TIMEOUT', ';', '/', '/', 'if', '(', 'sec_timeout', '>=', 'HPMUD_EXCEPTION_SEC_TIMEOUT', ')', 'BUG', '(', '""""', ',', 'sec_timeout', ',', 'pd', '->', 'uri', ')', ';', 'goto', 'bugout', ';', '}', '{', 'if', '(', '(', 'len', '=', 'recv', '(', 'pc', '->', 'socket', ',', 'buf', ',', 'length', ',', '0', ')', ')', '<', '0', ')', '{', 'BUG', '(', '""""', ',', 'pd', '->', 'uri', ')', ';', 'goto', 'bugout', ';', '}', '}', 'DBG', '(', '""""', ',', 'pc', '->', 'socket', ',', 'len', ',', 'length', ')', ';', 'DBG_DUMP', '(', 'buf', ',', 'len', '<', '32', '?', 'len', ':', '32', ')', ';', '*', 'bytes_read', '=', 'len', ';', 'stat', '=', 'HPMUD_R_OK', ';', 'bugout', ':', 'return', 'stat', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
71,"['escp2_set_printhead_speed', '(', 'stp_vars_t', '*', 'v', ')', '{', 'escp2_privdata_t', '*', 'pd', '=', 'get_privdata', '(', 'v', ')', ';', 'const', 'char', '*', 'direction', '=', 'stp_get_string_parameter', '(', 'v', ',', '""""', ')', ';', 'int', 'unidirectional', '=', '-', '1', ';', 'if', '(', 'direction', '&&', 'strcmp', '(', 'direction', ',', '""""', ')', '==', '0', ')', 'unidirectional', '=', '1', ';', 'else', 'if', '(', 'direction', '&&', 'strcmp', '(', 'direction', ',', '""""', ')', '==', '0', ')', 'unidirectional', '=', '0', ';', 'else', 'if', '(', 'pd', '->', 'bidirectional_upper_limit', '>=', '0', '&&', 'pd', '->', 'res', '->', 'printed_hres', '*', 'pd', '->', 'res', '->', 'printed_vres', '*', 'pd', '->', 'res', '->', 'vertical_passes', '>=', 'pd', '->', 'bidirectional_upper_limit', ')', '{', 'stp_dprintf', '(', 'STP_DBG_ESCP2', ',', 'v', ',', '""""', ',', 'pd', '->', 'res', '->', 'printed_hres', ',', 'pd', '->', 'res', '->', 'printed_vres', ',', 'pd', '->', 'res', '->', 'vertical_passes', ',', '(', 'pd', '->', 'res', '->', 'printed_hres', '*', 'pd', '->', 'res', '->', 'printed_vres', '*', 'pd', '->', 'res', '->', 'vertical_passes', ')', ',', 'pd', '->', 'bidirectional_upper_limit', ')', ';', 'unidirectional', '=', '1', ';', '}', 'else', 'if', '(', 'pd', '->', 'bidirectional_upper_limit', '>=', '0', ')', '{', 'stp_dprintf', '(', 'STP_DBG_ESCP2', ',', 'v', ',', '""""', ',', 'pd', '->', 'res', '->', 'printed_hres', ',', 'pd', '->', 'res', '->', 'printed_vres', ',', 'pd', '->', 'res', '->', 'vertical_passes', ',', '(', 'pd', '->', 'res', '->', 'printed_hres', '*', 'pd', '->', 'res', '->', 'printed_vres', '*', 'pd', '->', 'res', '->', 'vertical_passes', ')', ',', 'pd', '->', 'bidirectional_upper_limit', ')', ';', 'unidirectional', '=', '0', ';', '}', 'if', '(', 'unidirectional', '==', '1', ')', '{', 'stp_send_command', '(', 'v', ',', '""""', ',', '""""', ',', '1', ')', ';', 'if', '(', 'pd', '->', 'res', '->', 'hres', '>', 'pd', '->', 'physical_xdpi', ')', 'stp_send_command', '(', 'v', ',', '""""', ',', '""""', ',', '2', ')', ';', '}', 'else', 'if', '(', 'unidirectional', '==', '0', ')', 'stp_send_command', '(', 'v', ',', '""""', ',', '""""', ',', '0', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
72,"['Problem_11', '(', 'const', 'MATRIX', '&', 'matrix', ')', '{', 'unsigned', 'matrixSize', '=', 'matrix', '.', 'size', '(', ')', ';', 'vector', '<', 'vector', '<', 'pair', '<', 'int', ',', 'int', '>', '>', '>', 'matrixPreknowledge', '(', 'matrixSize', ',', 'vector', '<', 'pair', '<', 'int', ',', 'int', '>', '>', '(', 'matrixSize', ')', ')', ';', 'preprocessMatrix', '(', 'matrix', ',', 'matrixPreknowledge', ')', ';', 'for', '(', 'size_t', 'i', '=', 'matrixSize', ';', 'i', '!=', '0', ';', '--', 'i', ')', '{', 'bool', 'temp', '=', 'findSubsquares', '(', 'matrixPreknowledge', ',', 'i', ')', ';', 'if', '(', 'temp', ')', 'return', 'i', ';', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
73,"['WalkLanguageTableElement', '(', 'RefAST', 'ast', ')', '{', 'RefAST', 'astLabel', '=', 'ast', '->', 'getFirstChild', '(', ')', ';', 'std', ':', ':', 'string', 'staLabel', '(', 'astLabel', '->', 'getText', '(', ')', '.', 'c_str', '(', ')', ')', ';', 'RefAST', 'astItem', '=', 'astLabel', '->', 'getNextSibling', '(', ')', ';', '/', '/', 'Find', 'or', 'create', 'the', 'language', 'class', 'with', 'that', 'name', ':', 'GdlLangClass', '*', 'plcls', ';', 'size_t', 'ilcls', ';', 'for', '(', 'ilcls', '=', '0', ';', 'ilcls', '<', 'm_vplcls', '.', 'size', '(', ')', ';', 'ilcls', '++', ')', '{', 'if', '(', 'strcmp', '(', 'm_vplcls', '[', 'ilcls', ']', '->', 'm_staLabel', '.', 'c_str', '(', ')', ',', 'staLabel', '.', 'c_str', '(', ')', ')', '==', '0', ')', '{', 'plcls', '=', 'm_vplcls', '[', 'ilcls', ']', ';', 'break', ';', '}', '}', 'if', '(', 'ilcls', '>=', 'm_vplcls', '.', 'size', '(', ')', ')', '{', 'plcls', '=', 'new', 'GdlLangClass', '(', 'staLabel', ')', ';', 'm_vplcls', '.', 'push_back', '(', 'plcls', ')', ';', '}', 'WalkLanguageItem', '(', 'astItem', ',', 'plcls', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
74,"['_callbacks_unregister', '(', 'Evas_Object', '*', 'obj', ')', '{', 'ELM_GESTURE_LAYER_DATA_GET', '(', 'obj', ',', 'sd', ')', ';', 'if', '(', '!sd', '->', 'target', ')', 'return', ';', '(', 'sd', '->', 'target', ',', 'EVAS_CALLBACK_MOUSE_DOWN', ',', '_mouse_down_cb', ')', ';', '(', 'sd', '->', 'target', ',', 'EVAS_CALLBACK_MOUSE_MOVE', ',', '_mouse_move_cb', ')', ';', '(', 'sd', '->', 'target', ',', 'EVAS_CALLBACK_MOUSE_UP', ',', '_mouse_up_cb', ')', ';', '(', 'sd', '->', 'target', ',', 'EVAS_CALLBACK_MOUSE_WHEEL', ',', '_mouse_wheel_cb', ')', ';', '(', 'sd', '->', 'target', ',', 'EVAS_CALLBACK_MULTI_DOWN', ',', '_multi_down_cb', ')', ';', '(', 'sd', '->', 'target', ',', 'EVAS_CALLBACK_MULTI_MOVE', ',', '_multi_move_cb', ')', ';', '(', 'sd', '->', 'target', ',', 'EVAS_CALLBACK_MULTI_UP', ',', '_multi_up_cb', ')', ';', '(', 'sd', '->', 'target', ',', 'EVAS_CALLBACK_KEY_DOWN', ',', '_key_down_cb', ')', ';', '(', 'sd', '->', 'target', ',', 'EVAS_CALLBACK_KEY_UP', ',', '_key_up_cb', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
75,"['git_remote_is_valid_name', '(', 'const', 'char', '*', 'remote_name', ')', '{', 'git_buf', 'buf', '=', 'GIT_BUF_INIT', ';', 'git_refspec', 'refspec', ';', 'int', 'error', '=', '-', '1', ';', 'if', '(', '!remote_name', '||', '*', 'remote_name', '==', ""''"", ')', 'return', '0', ';', 'git_buf_printf', '(', '&', 'buf', ',', '""""', ',', 'remote_name', ')', ';', 'error', '=', 'git_refspec__parse', '(', '&', 'refspec', ',', 'git_buf_cstr', '(', '&', 'buf', ')', ',', 'true', ')', ';', 'git_buf_free', '(', '&', 'buf', ')', ';', 'git_refspec__free', '(', '&', 'refspec', ')', ';', 'giterr_clear', '(', ')', ';', 'return', 'error', '==', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
76,"['clipRectangles', '(', 'XRectangle', '*', 'rects_', ',', 'int', 'n_', ',', 'int', 'ordering_', ')', '{', 'if', '(', 'data', '(', ')', '->', 'shared', '(', ')', '==', 'MSTrue', ')', '{', 'MSMessageLog', ':', ':', 'warningMessage', '(', '""""', ')', ';', '}', 'XSetClipRectangles', '(', 'display', '(', ')', ',', 'gc', '(', ')', ',', 'clipXOrigin', '(', ')', ',', 'clipYOrigin', '(', ')', ',', 'rects_', ',', 'n_', ',', 'ordering_', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
77,"['generateLookupTable', '(', 'void', ')', '{', '/', '/', 'Declare', 'int', 'i', ',', 'j', ';', '/', '/', 'Allocate', 'memory', 'for', 'lookup', 'table', 'w', '=', 'new', 'double', '*', '[', 'kp', ']', ';', '/', '/', 'Traverse', 'through', 'kernel', 'generating', 'weight', '/', '/', 'lookup', 'table', '/', '/', 'Assume', 'kernel', 'is', 'uniformKernel', '=', 'true', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'kp', ';', 'i', '++', ')', '{', 'switch', '(', 'kernel', '[', 'i', ']', ')', '{', '/', '/', '*', 'Uniform', 'Kernel', '*', 'has', 'weight', 'funciton', 'w', '(', 'u', ')', '=', '/', '/', 'therefore', ',', 'a', 'weight', 'funciton', 'lookup', 'table', '/', '/', 'not', 'needed', 'for', 'this', 'kernel', '--', '>', 'w', '[', 'i', ']', '=', 'NULL', '/', '/', 'case', 'Uniform', ':', 'w', '[', 'i', ']', '=', 'NULL', ';', '/', '/', 'weight', 'function', 'not', 'needed', 'for', 'this', 'offset', '[', 'i', ']', '=', '1', ';', '/', '/', 'uniform', 'kernel', 'has', 'u', '<', '1', '.', 'increment', '[', 'i', ']', '=', '1', ';', '/', '/', 'has', 'no', 'break', ';', '/', '/', '*', 'Gaussian', 'Kernel', '*', 'has', 'weight', 'function', 'w', '(', 'u', ')', '=', 'constant', '*', 'exp', '(', '-', 'u', '^', '2', '/', '[', '2h', '[', 'i', ']', '^', '2', ']', ')', 'case', 'Gaussian', ':', '/', '/', 'Set', 'uniformKernel', 'to', 'uniformKernel', '=', 'false', ';', '/', '/', 'generate', 'weight', 'function', 'using', 'expression', ',', '/', '/', 'exp', '(', '-', 'u', '/', '2', ')', ',', 'where', 'u', '=', 'norm', '(', 'xi', '-', 'x', ')', '^', '2', '/', 'h', '^', '/', '/', 'Allocate', 'memory', 'for', 'weight', 'w', '[', 'i', ']', '=', 'new', 'double', '[', 'GAUSS_NUM_ELS', '+', '1', ']', ';', 'for', '(', 'j', '=', '0', ';', 'j', '<=', 'GAUSS_NUM_ELS', ';', 'j', '++', ')', 'w', '[', 'i', ']', '[', 'j', ']', '=', 'exp', '(', '-', 'j', '*', 'GAUSS_INCREMENT', '/', '2', ')', ';', '/', '/', 'Set', 'offset', '=', 'offset', '^', '2', ',', 'and', 'set', 'offset', '[', 'i', ']', '=', '(', 'float', ')', '(', 'GAUSS_LIMIT', '*', 'GAUSS_LIMIT', ')', ';', 'increment', '[', 'i', ']', '=', 'GAUSS_INCREMENT', ';', '/', '/', 'break', ';', '/', '/', '*', 'User', 'Define', 'Kernel', '*', 'uses', 'the', 'weight', 'function', 'wf', '(', 'u', ')', 'case', 'UserDefined', ':', '/', '/', 'Set', 'uniformKernel', 'to', 'uniformKernel', '=', 'false', ';', '/', '/', 'Search', 'for', 'user', 'defined', 'weight', '/', '/', 'defined', 'for', 'subspace', '(', 'i', '+', '1', ')', 'cur', '=', 'head', ';', 'while', '(', '(', 'cur', ')', '&&', '(', 'cur', '->', 'subspace', '!=', '(', 'i', '+', '1', ')', ')', ')', 'cur', '=', 'cur', '->', 'next', ';', '/', '/', 'If', 'a', 'user', 'defined', 'subspace', 'has', 'not', 'been', '/', '/', 'for', 'this', 'subspace', ',', 'flag', 'an', 'if', '(', 'cur', '==', 'NULL', ')', '{', 'fprintf', '(', 'stderr', ',', '""""', ',', 'i', '+', '1', ')', ';', 'exit', '(', '1', ')', ';', '}', '/', '/', 'Otherwise', ',', 'copy', 'weight', 'function', 'lookup', 'table', 'to', 'w', '[', 'i', ']', 'w', '[', 'i', ']', '=', 'new', 'double', '[', 'cur', '->', 'sampleNumber', '+', '1', ']', ';', 'for', '(', 'j', '=', '0', ';', 'j', '<=', 'cur', '->', 'sampleNumber', ';', 'j', '++', ')', 'w', '[', 'i', ']', '[', 'j', ']', '=', 'cur', '->', 'w', '[', 'j', ']', ';', '/', '/', 'Set', 'offset', 'and', 'increment', 'offset', '[', 'i', ']', '=', '(', 'float', ')', '(', 'cur', '->', 'halfWindow', ')', ';', 'increment', '[', 'i', ']', '=', 'cur', '->', 'halfWindow', '/', '(', 'float', ')', '(', 'cur', '->', 'sampleNumber', ')', ';', '/', '/', 'break', ';', 'default', ':', 'ErrorHandler', '(', '""""', ',', '""""', ',', '""""', ')', ';', '}', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
78,"['polynomialToFraction', '(', 'Polynomial', 'const', '&', 'p', ')', '{', 'FieldRationalFunctions2Implementation', '*', 'imp', '=', 'dynamic_cast', '<', 'FieldRationalFunctions2Implementation', '*', '>', '(', 'implementingObject', ')', ';', 'Polynomial', 'q', '=', 'Term', '(', 'imp', '->', 'getPolynomialRing', '(', ')', '.', 'getField', '(', ')', '.', 'zHomomorphism', '(', '1', ')', ',', 'Monomial', '(', 'imp', '->', 'getPolynomialRing', '(', ')', ')', ')', ';', 'return', 'new', 'FieldElementRationalFunction2', '(', '*', 'imp', ',', 'p', ',', 'q', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
79,"['w4_str', '(', 'int', 'fd', ',', 'char', '*', 'str', ')', '{', 'char', 'buf', '[', '40', ']', ';', 'unsigned', 'len', '=', '0', ';', 'int', 'r', ';', 'while', '(', '1', ')', '{', 'r', '=', 'read', '(', 'fd', ',', 'buf', '+', 'len', ',', 'sizeof', '(', 'buf', ')', '-', 'len', '-', '1', ')', ';', 'if', '(', 'r', '<', '0', ')', '{', 'if', '(', 'errno', '==', 'EINTR', '||', 'errno', '==', 'EAGAIN', ')', 'continue', ';', 'break', ';', '}', 'if', '(', '!r', ')', 'break', ';', 'len', '+=', 'r', ';', 'if', '(', 'len', '<', 'strlen', '(', 'str', ')', ')', 'continue', ';', 'buf', '[', 'len', ']', '=', '0', ';', 'if', '(', 'strstr', '(', 'buf', ',', 'str', ')', ')', 'return', 'MS_SUCCESS', ';', 'if', '(', 'strchr', '(', 'buf', ',', ""''"", ')', ')', 'return', 'MS_PPP', ';', '}', 'return', 'MS_FAILED', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
80,"['get_text_align_max_fill_size', '(', 'int', 'align_pow', ',', 'bfd_boolean', 'use_nops', ',', 'bfd_boolean', 'use_no_density', ')', '{', 'if', '(', '!use_nops', ')', 'return', '(', '1', '<<', 'align_pow', ')', ';', 'if', '(', 'use_no_density', ')', 'return', '3', '*', '(', '1', '<<', 'align_pow', ')', ';', 'return', '1', '+', '(', '1', '<<', 'align_pow', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
81,"['xsh_verify_2dmap_poly_input', '(', 'cpl_frame', '*', 'order_tab_edges_frame', ',', 'cpl_frame', '*', 'spectralformat_frame', ',', 'cpl_frame', '*', 'theo_tab_frame', ')', '{', 'cpl_table', '*', 'tab_edges', '=', 'NULL', ';', 'cpl_table', '*', 'tab_spectral_format', '=', 'NULL', ';', 'cpl_table', '*', 'theo_tab', '=', 'NULL', ';', 'const', 'char', '*', 'name', '=', 'NULL', ';', 'int', 'ord_min_ref', '=', '0', ';', 'int', 'ord_max_ref', '=', '0', ';', 'int', 'ord_min', '=', '0', ';', 'int', 'ord_max', '=', '0', ';', 'check', '(', 'name', '=', 'cpl_frame_get_filename', '(', 'order_tab_edges_frame', ')', ')', ';', 'check', '(', 'tab_edges', '=', 'cpl_table_load', '(', 'name', ',', '1', ',', '0', ')', ')', ';', 'check', '(', 'ord_min_ref', '=', 'cpl_table_get_column_min', '(', 'tab_edges', ',', '""""', ')', ')', ';', 'check', '(', 'ord_max_ref', '=', 'cpl_table_get_column_max', '(', 'tab_edges', ',', '""""', ')', ')', ';', 'check', '(', 'name', '=', 'cpl_frame_get_filename', '(', 'spectralformat_frame', ')', ')', ';', 'check', '(', 'tab_spectral_format', '=', 'cpl_table_load', '(', 'name', ',', '1', ',', '0', ')', ')', ';', 'check', '(', 'ord_min', '=', 'cpl_table_get_column_min', '(', 'tab_spectral_format', ',', '""""', ')', ')', ';', 'check', '(', 'ord_max', '=', 'cpl_table_get_column_max', '(', 'tab_spectral_format', ',', '""""', ')', ')', ';', 'if', '(', 'ord_min', '!=', 'ord_min_ref', ')', '{', 'xsh_msg_error', '(', '""""', ')', ';', 'return', 'CPL_ERROR_INCOMPATIBLE_INPUT', ';', '}', 'if', '(', 'ord_max', '!=', 'ord_max_ref', ')', '{', 'xsh_msg_error', '(', '""""', ')', ';', 'return', 'CPL_ERROR_INCOMPATIBLE_INPUT', ';', '}', 'if', '(', 'theo_tab_frame', '!=', 'NULL', ')', '{', 'check', '(', 'name', '=', 'cpl_frame_get_filename', '(', 'theo_tab_frame', ')', ')', ';', 'check', '(', 'theo_tab', '=', 'cpl_table_load', '(', 'name', ',', '1', ',', '0', ')', ')', ';', 'check', '(', 'ord_min', '=', 'cpl_table_get_column_min', '(', 'theo_tab', ',', '""""', ')', ')', ';', 'check', '(', 'ord_max', '=', 'cpl_table_get_column_max', '(', 'theo_tab', ',', '""""', ')', ')', ';', 'if', '(', 'ord_min', '!=', 'ord_min_ref', ')', '{', 'xsh_msg_error', '(', '""""', ')', ';', 'return', 'CPL_ERROR_INCOMPATIBLE_INPUT', ';', '}', 'if', '(', 'ord_max', '!=', 'ord_max_ref', ')', '{', 'xsh_msg_error', '(', '""""', ')', ';', 'return', 'CPL_ERROR_INCOMPATIBLE_INPUT', ';', '}', '}', 'cleanup', ':', 'xsh_free_table', '(', '&', 'tab_edges', ')', ';', 'xsh_free_table', '(', '&', 'tab_spectral_format', ')', ';', 'xsh_free_table', '(', '&', 'theo_tab', ')', ';', 'return', 'cpl_error_get_code', '(', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
82,"['doelectricity', '(', 'void', ')', '{', 'int', 'leftelectrax', ';', 'int', 'rightelectrax', ';', 'int', 'temp', ';', 'int', 'n', ';', 'if', '(', 'levelinfo', '.', 'electrasflag', '&&', 'levelinfo', '.', 'electraoffset', '==', '0', ')', '/', '/', 'When', 'electra', 'enemies', 'ride', 'over', 'the', 'main', 'lightning', '.', '.', '.', '{', 'for', '(', 'n', '=', '0', ';', 'n', '<', 'MAX_ENEMIES', ';', 'n', '++', ')', '{', 'if', '(', 'enemy', '[', 'n', ']', '.', 'exists', '&&', 'enemy', '[', 'n', ']', '.', 'type', '==', 'ELECTRA', '&&', 'enemy', '[', 'enemy', '[', 'n', ']', '.', 'intvar', ']', '.', 'exists', ')', '/', '/', 'If', 'both', 'electras', 'exist', '.', '.', '.', '{', 'leftelectrax', '=', 'enemy', '[', 'n', ']', '.', 'x', ';', 'rightelectrax', '=', 'enemy', '[', 'enemy', '[', 'n', ']', '.', 'intvar', ']', '.', 'x', ';', 'if', '(', 'rightelectrax', '<', 'leftelectrax', ')', '{', 'temp', '=', 'leftelectrax', ';', 'leftelectrax', '=', 'rightelectrax', ';', 'rightelectrax', '=', 'temp', ';', '}', 'drawelectricity', '(', 'LIGHTNINGADJUST', ',', 'lightningy', ',', 'leftelectrax', ',', 'NO', ')', ';', 'drawelectricity', '(', 'rightelectrax', ',', 'lightningy', ',', 'WIDTH', '-', 'LIGHTNINGADJUST', ',', 'NO', ')', ';', 'return', ';', '}', '}', '}', 'drawelectricity', '(', 'LIGHTNINGADJUST', ',', 'lightningy', ',', 'WIDTH', '-', 'LIGHTNINGADJUST', ',', 'NO', ')', ';', 'return', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
83,"['cont_scroll', '(', 'Widget\t', 'gw', ',', 'XEvent\t', '*', 'event', ',', 'String\t', '*', 'params', ',', 'Cardinal', '*', 'no_params', ')', '{', 'ScrBarWidget\tw', '=', '(', 'ScrBarWidget', ')', 'gw', ';', 'int\t\t\tx', ',', 'y', ',', 'dc', ',', 'length', ';', 'if', '(', 'w', '->', 'scrbar', '.', 'mode', '!=', 'ScrBarModeContinuous', ')', 'return', ';', 'if', '(', '!get_event_xy', '(', 'event', ',', '&', 'x', ',', '&', 'y', ')', ')', '{', 'XBell', '(', 'XtDisplay', '(', 'w', ')', ',', '0', ')', ';', 'return', ';', '}', 'length', '=', 'w', '->', 'scrbar', '.', 'c4', '-', 'w', '->', 'scrbar', '.', 'c1', ';', 'if', '(', 'length', '<=', '0', ')', 'return', ';', 'dc', '=', '(', 'w', '->', 'scrbar', '.', 'vertical', '?', 'y', ':', 'x', ')', '-', 'w', '->', 'scrbar', '.', 'init_ptr_pos', ';', 'w', '->', 'scrbar', '.', 'slider_position', '=', 'w', '->', 'scrbar', '.', 'init_slider_pos', '+', 'dc', '*', 'w', '->', 'scrbar', '.', 'canvas_length', '/', 'length', ';', 'fit_scrbar', '(', 'w', ')', ';', 'calc_scrbar_coords', '(', 'w', ')', ';', 'draw_thumb', '(', 'w', ',', 'NULL', ')', ';', 'send_scroll_report', '(', 'w', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
84,"['hash_find_entry', '(', 'Hash_table', '*', 'table', ',', 'const', 'void', '*', 'entry', ',', 'struct', 'hash_entry', '*', '*', 'bucket_head', ',', 'bool', 'delete', ')', '{', 'struct', 'hash_entry', '*', '=', 'table', '->', 'bucket', '+', 'table', '->', 'hasher', '(', 'entry', ',', 'table', '->', 'n_buckets', ')', ';', 'struct', 'hash_entry', '*', 'cursor', ';', 'assert', '(', 'bucket', '<', 'table', '->', 'bucket_limit', ')', ';', '*', 'bucket_head', '=', 'bucket', ';', 'if', '(', 'bucket', '->', 'data', '==', 'NULL', ')', 'return', 'NULL', ';', 'if', '(', '(', '*', 'table', '->', 'comparator', ')', '(', 'entry', ',', 'bucket', '->', 'data', ')', ')', '{', 'void', '*', 'data', '=', 'bucket', '->', 'data', ';', 'if', '(', 'delete', ')', '{', 'if', '(', 'bucket', '->', 'next', ')', '{', 'struct', 'hash_entry', '*', 'next', '=', 'bucket', '->', 'next', ';', '/', '*', 'Bump', 'the', 'first', 'overflow', 'entry', 'into', 'the', 'bucket', 'head', ',', 'then', '*', 'bucket', '=', '*', 'next', ';', 'free_entry', '(', 'table', ',', 'next', ')', ';', '}', '{', 'bucket', '->', 'data', '=', 'NULL', ';', '}', '}', 'return', 'data', ';', '}', 'for', '(', 'cursor', '=', 'bucket', ';', 'cursor', '->', 'next', ';', 'cursor', '=', 'cursor', '->', 'next', ')', '{', 'if', '(', '(', '*', 'table', '->', 'comparator', ')', '(', 'entry', ',', 'cursor', '->', 'next', '->', 'data', ')', ')', '{', 'void', '*', 'data', '=', 'cursor', '->', 'next', '->', 'data', ';', 'if', '(', 'delete', ')', '{', 'struct', 'hash_entry', '*', 'next', '=', 'cursor', '->', 'next', ';', '/', '*', 'Unlink', 'the', 'entry', 'to', 'delete', ',', 'then', 'save', 'the', 'freed', 'entry', 'for', 'cursor', '->', 'next', '=', 'next', '->', 'next', ';', 'free_entry', '(', 'table', ',', 'next', ')', ';', '}', 'return', 'data', ';', '}', '}', 'return', 'NULL', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
85,"['thread_name', '(', 'MonoProfiler', '*', 'prof', ',', 'uintptr_t', 'tid', ',', 'const', 'char', '*', 'name', ')', '{', 'int', 'len', '=', 'strlen', '(', 'name', ')', '+', '1', ';', 'uint64_t', 'now', ';', 'LogBuffer', '*', 'logbuffer', ';', 'logbuffer', '=', 'ensure_logbuf', '(', 'EVENT_SIZE', '/', '*', 'event', '*', '/', '+', 'LEB128_SIZE', '/', '*', 'time', '*', '/', '+', 'EVENT_SIZE', '/', '*', 'type', '*', '/', '+', 'LEB128_SIZE', '/', '*', 'tid', '*', '/', '+', 'LEB128_SIZE', '/', '*', 'flags', '*', '/', '+', ')', ';', 'now', '=', 'current_time', '(', ')', ';', 'ENTER_LOG', '(', 'logbuffer', ',', '""""', ')', ';', 'emit_byte', '(', 'logbuffer', ',', 'TYPE_METADATA', ')', ';', 'emit_time', '(', 'logbuffer', ',', 'now', ')', ';', 'emit_byte', '(', 'logbuffer', ',', 'TYPE_THREAD', ')', ';', 'emit_ptr', '(', 'logbuffer', ',', '(', 'void', '*', ')', 'tid', ')', ';', 'memcpy', '(', 'logbuffer', '->', 'data', ',', 'name', ',', 'len', ')', ';', 'logbuffer', '->', 'data', '+=', 'len', ';', 'EXIT_LOG', '(', 'logbuffer', ')', ';', 'if', '(', 'logbuffer', '->', 'next', ')', 'safe_send', '(', 'prof', ',', 'logbuffer', ')', ';', 'process_requests', '(', 'prof', ')', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
86,"['handlePRERET', '(', 'FlowInstruction', '*', 'pre', ')', '{', 'BasicBlock', '*', 'bbE', '=', 'pre', '->', 'bb', ';', 'BasicBlock', '*', 'bbT', '=', 'pre', '->', 'target', '.', 'bb', ';', 'pre', '->', 'subOp', '=', 'NV50_IR_SUBOP_EMU_PRERET', '+', '0', ';', 'bbE', '->', 'remove', '(', 'pre', ')', ';', 'bbE', '->', 'insertHead', '(', 'pre', ')', ';', 'Instruction', '*', 'skip', '=', 'new_FlowInstruction', '(', 'func', ',', 'OP_PRERET', ',', 'bbT', ')', ';', 'Instruction', '*', 'call', '=', 'new_FlowInstruction', '(', 'func', ',', 'OP_PRERET', ',', 'bbE', ')', ';', 'bbT', '->', 'insertHead', '(', 'call', ')', ';', 'bbT', '->', 'insertHead', '(', 'skip', ')', ';', '/', '/', 'NOTE', ':', 'maybe', 'split', 'blocks', 'to', 'prevent', 'the', 'instructions', 'from', 'moving', '?', 'skip', '->', 'subOp', '=', 'NV50_IR_SUBOP_EMU_PRERET', '+', '1', ';', 'call', '->', 'subOp', '=', 'NV50_IR_SUBOP_EMU_PRERET', '+', '2', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
87,"['EmitSignal', '(', 'SignalId', 'Signal', ')', '{', 'Object', '*', 'obj', '=', 'NULL', ';', 'Object', '*', 'ancestor', '=', 'this', ';', 'while', '(', 'ancestor', '&&', '!ancestor', '->', 'IsLocked', '(', ')', '&&', 'ancestor', '->', 'OnSignal', '(', 'Signal', ',', 'obj', ')', ')', '{', 'obj', '=', 'ancestor', ';', 'ancestor', '=', 'obj', '->', 'm_Parent', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
88,"['xfs_mru_cache_create', '(', 'struct', 'xfs_mru_cache\t', '*', '*', 'mrup', ',', 'unsigned', 'int\t\tlifetime_ms', ',', 'unsigned', 'int\t\tgrp_count', ',', 'xfs_mru_cache_free_func_t', 'free_func', ')', '{', 'struct', 'xfs_mru_cache\t', '*', 'mru', '=', 'NULL', ';', 'int\t\t\terr', '=', '0', ',', 'grp', ';', 'unsigned', 'int\t\tgrp_time', ';', 'if', '(', 'mrup', ')', '*', 'mrup', '=', 'NULL', ';', 'if', '(', '!mrup', '||', '!grp_count', '||', '!lifetime_ms', '||', '!free_func', ')', 'return', '-', 'EINVAL', ';', 'if', '(', '!', '(', 'grp_time', '=', 'msecs_to_jiffies', '(', 'lifetime_ms', ')', '/', 'grp_count', ')', ')', 'return', '-', 'EINVAL', ';', 'if', '(', '!', '(', 'mru', '=', 'kmem_zalloc', '(', 'sizeof', '(', '*', 'mru', ')', ',', 'KM_SLEEP', ')', ')', ')', 'return', '-', 'ENOMEM', ';', 'mru', '->', 'grp_count', '=', 'grp_count', '+', '1', ';', 'mru', '->', 'lists', '=', 'kmem_zalloc', '(', 'mru', '->', 'grp_count', '*', 'sizeof', '(', '*', 'mru', '->', 'lists', ')', ',', 'KM_SLEEP', ')', ';', 'if', '(', '!mru', '->', 'lists', ')', '{', 'err', '=', '-', 'ENOMEM', ';', 'goto', 'exit', ';', '}', 'for', '(', 'grp', '=', '0', ';', 'grp', '<', 'mru', '->', 'grp_count', ';', 'grp', '++', ')', 'INIT_LIST_HEAD', '(', 'mru', '->', 'lists', '+', 'grp', ')', ';', '/', '*', '*', 'We', 'use', 'GFP_KERNEL', 'radix', 'tree', 'preload', 'and', 'do', 'inserts', 'under', '*', 'spinlock', 'so', 'GFP_ATOMIC', 'is', 'appropriate', 'for', 'the', 'radix', 'tree', 'itself', '.', 'INIT_RADIX_TREE', '(', '&', 'mru', '->', 'store', ',', 'GFP_ATOMIC', ')', ';', 'INIT_LIST_HEAD', '(', '&', 'mru', '->', 'reap_list', ')', ';', 'spin_lock_init', '(', '&', 'mru', '->', 'lock', ')', ';', 'INIT_DELAYED_WORK', '(', '&', 'mru', '->', 'work', ',', '_xfs_mru_cache_reap', ')', ';', 'mru', '->', 'grp_time', '=', 'grp_time', ';', 'mru', '->', 'free_func', '=', 'free_func', ';', '*', 'mrup', '=', 'mru', ';', 'exit', ':', 'if', '(', 'err', '&&', 'mru', '&&', 'mru', '->', 'lists', ')', 'kmem_free', '(', 'mru', '->', 'lists', ')', ';', 'if', '(', 'err', '&&', 'mru', ')', 'kmem_free', '(', 'mru', ')', ';', 'return', 'err', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
89,"['gas_fire', '(', 'edict_t', '*', 'ent', ')', '{', 'vec3_t', 'offset', ';', 'vec3_t', 'forward', ',', 'right', ';', 'vec3_t', 'start', ';', 'int', 'damage', '=', 'GRENADE_DAMRAD', ';', 'float', 'timer', ';', 'int', 'speed', ';', '/', '/', 'Reset', 'Grenade', 'Damage', 'to', '1', '.', '52', 'when', 'requested', ':', 'if', '(', 'use_classic', '->', 'value', ')', 'damage', '=', '170', ';', 'damage', '=', 'GRENADE_DAMRAD', ';', 'if', '(', 'is_quad', ')', 'damage', '*=', '1', '.', '5f', ';', 'VectorSet', '(', 'offset', ',', '8', ',', '8', ',', 'ent', '->', 'viewheight', '-', '8', ')', ';', 'AngleVectors', '(', 'ent', '->', 'client', '->', 'v_angle', ',', 'forward', ',', 'right', ',', 'NULL', ')', ';', 'P_ProjectSource', '(', 'ent', '->', 'client', ',', 'ent', '->', 's', '.', 'origin', ',', 'offset', ',', 'forward', ',', 'right', ',', 'start', ')', ';', 'timer', '=', '2', '.', '0', ';', 'if', '(', 'ent', '->', 'client', '->', 'resp', '.', 'grenade_mode', '==', '0', ')', 'speed', '=', '400', ';', 'else', 'if', '(', 'ent', '->', 'client', '->', 'resp', '.', 'grenade_mode', '==', '1', ')', 'speed', '=', '720', ';', 'speed', '=', '920', ';', 'fire_grenade2', '(', 'ent', ',', 'start', ',', 'forward', ',', 'damage', ',', 'speed', ',', 'timer', ',', 'damage', '*', '2', ',', 'false', ')', ';', 'INV_AMMO', '(', 'ent', ',', 'GRENADE_NUM', ')', '--', ';', 'if', '(', 'INV_AMMO', '(', 'ent', ',', 'GRENADE_NUM', ')', '<=', '0', ')', '{', 'ent', '->', 'client', '->', 'newweapon', '=', 'GET_ITEM', '(', 'MK23_NUM', ')', ';', 'ChangeWeapon', '(', 'ent', ')', ';', 'return', ';', '}', '{', 'ent', '->', 'client', '->', 'weaponstate', '=', 'WEAPON_RELOADING', ';', 'ent', '->', 'client', '->', 'ps', '.', 'gunframe', '=', '0', ';', '}', '/', '/', 'ent', '->', 'client', '->', 'grenade_time', '=', 'level', '.', 'time', '+', '1', '.', '0', ';', 'ent', '->', 'client', '->', 'ps', '.', 'gunframe', '++', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
90,"['_wapi_handle_check_share', '(', 'struct', '_WapiFileShare', '*', 'share_info', ',', 'int', 'fd', ')', '{', 'gboolean', 'found', '=', 'FALSE', ',', 'proc_fds', '=', 'FALSE', ';', 'pid_t', 'self', '=', '_wapi_getpid', '(', ')', ';', 'int', 'pid', ';', 'int', 'thr_ret', ',', 'i', ';', '/', '*', 'Prevents', 'entries', 'from', 'expiring', 'under', 'us', 'if', 'we', 'remove', '*', 'thr_ret', '=', '_wapi_handle_lock_shared_handles', '(', ')', ';', 'g_assert', '(', 'thr_ret', '==', '0', ')', ';', 'thr_ret', '=', '_wapi_shm_sem_lock', '(', '_WAPI_SHARED_SEM_FILESHARE', ')', ';', 'g_assert', '(', 'thr_ret', '==', '0', ')', ';', 'if', '(', 'access', '(', '""""', ',', 'F_OK', ')', '==', '-', '1', ')', '{', '_wapi_handle_check_share_by_pid', '(', 'share_info', ')', ';', 'goto', 'done', ';', '}', '/', '*', 'If', ""there's"", 'another', 'handle', 'that', 'thinks', 'it', 'owns', 'this', 'fd', ',', 'then', '*', 'if', 'the', 'fd', 'has', 'been', 'closed', 'behind', 'our', 'back', 'consider', 'it', 'still', 'owned', '.', '*', 'See', 'bugs', '75764', 'and', 'for', '(', 'i', '=', '0', ';', 'i', '<', '_wapi_fd_reserve', ';', 'i', '++', ')', '{', 'if', '(', '_wapi_private_handles', '[', 'SLOT_INDEX', '(', 'i', ')', ']', ')', '{', 'struct', '_WapiHandleUnshared', '*', 'handle', '=', '&', '_WAPI_PRIVATE_HANDLES', '(', 'i', ')', ';', 'if', '(', 'i', '!=', 'fd', '&&', 'handle', '->', 'type', '==', 'WAPI_HANDLE_FILE', ')', '{', 'struct', '_WapiHandle_file', '*', 'file_handle', '=', '&', 'handle', '->', 'u', '.', 'file', ';', 'if', '(', 'file_handle', '->', 'share_info', '==', 'share_info', ')', '{', 'DEBUG', '(', '""""', ',', '__func__', ',', 'i', ')', ';', 'goto', 'done', ';', '}', '}', '}', '}', 'for', '(', 'i', '=', '0', ';', 'i', '<', '_WAPI_HANDLE_INITIAL_COUNT', ';', 'i', '++', ')', '{', 'struct', '_WapiHandleShared', '*', 'shared', ';', 'struct', '_WapiHandle_process', '*', 'process_handle', ';', 'shared', '=', '&', '_wapi_shared_layout', '->', 'handles', '[', 'i', ']', ';', 'if', '(', 'shared', '->', 'type', '==', 'WAPI_HANDLE_PROCESS', ')', '{', 'DIR', '*', 'fd_dir', ';', 'struct', 'dirent', '*', 'fd_entry', ';', 'char', 'subdir', '[', '_POSIX_PATH_MAX', ']', ';', 'process_handle', '=', '&', 'shared', '->', 'u', '.', 'process', ';', 'pid', '=', 'process_handle', '->', 'id', ';', '/', '*', 'Look', 'in', '/', 'proc', '/', '<', 'pid', '>', '/', 'fd', '/', 'but', '*', '/', 'proc', '/', '<', 'our', 'pid', '>', '/', 'fd', '/', '<', 'fd', '>', ',', 'as', 'we', 'have', '*', 'file', 'open', 'g_snprintf', '(', 'subdir', ',', '_POSIX_PATH_MAX', ',', '""""', ',', 'pid', ')', ';', 'fd_dir', '=', 'opendir', '(', 'subdir', ')', ';', 'if', '(', 'fd_dir', '==', 'NULL', ')', '{', 'continue', ';', '}', 'DEBUG', '(', '""""', ',', '__func__', ',', 'subdir', ')', ';', 'proc_fds', '=', 'TRUE', ';', 'while', '(', '(', 'fd_entry', '=', 'readdir', '(', 'fd_dir', ')', ')', '!=', 'NULL', ')', '{', 'char', 'path', '[', '_POSIX_PATH_MAX', ']', ';', 'struct', 'stat', 'link_stat', ';', 'if', '(', '!strcmp', '(', 'fd_entry', '->', 'd_name', ',', '""""', ')', '||', '!strcmp', '(', 'fd_entry', '->', 'd_name', ',', '""""', ')', '||', '(', 'pid', '==', 'self', '&&', 'fd', '==', 'atoi', '(', 'fd_entry', '->', 'd_name', ')', ')', ')', '{', 'continue', ';', '}', 'g_snprintf', '(', 'path', ',', '_POSIX_PATH_MAX', ',', '""""', ',', 'pid', ',', 'fd_entry', '->', 'd_name', ')', ';', 'stat', '(', 'path', ',', '&', 'link_stat', ')', ';', 'if', '(', 'link_stat', '.', 'st_dev', '==', 'share_info', '->', 'device', '&&', 'link_stat', '.', 'st_ino', '==', 'share_info', '->', 'inode', ')', '{', 'DEBUG', '(', '""""', ',', '__func__', ',', 'path', ')', ';', 'found', '=', 'TRUE', ';', '}', '}', 'closedir', '(', 'fd_dir', ')', ';', '}', '}', 'if', '(', 'proc_fds', '==', 'FALSE', ')', '{', '_wapi_handle_check_share_by_pid', '(', 'share_info', ')', ';', '}', 'else', 'if', '(', 'found', '==', 'FALSE', ')', '{', 'DEBUG', '(', '""""', ',', '__func__', ')', ';', '_wapi_free_share_info', '(', 'share_info', ')', ';', '}', 'done', ':', 'thr_ret', '=', '_wapi_shm_sem_unlock', '(', '_WAPI_SHARED_SEM_FILESHARE', ')', ';', '_wapi_handle_unlock_shared_handles', '(', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  True,CWE-476  False,CWE-other  False
91,"['ao_hex_record_set_checksum', '(', 'struct', 'ao_hex_record', '*', 'record', ')', '{', 'uint8_t\tcksum', '=', '0', ';', 'int', 'i', ';', 'cksum', '+=', 'record', '->', 'length', ';', 'cksum', '+=', 'record', '->', 'address', '>>', '8', ';', 'cksum', '+=', 'record', '->', 'address', ';', 'cksum', '+=', 'record', '->', 'type', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'record', '->', 'length', ';', 'i', '++', ')', 'cksum', '+=', 'record', '->', 'data', '[', 'i', ']', ';', 'record', '->', 'checksum', '=', '-', 'cksum', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
92,"['defragmentPage', '(', 'Btree', '*', 'pBt', ',', 'MemPage', '*', 'pPage', ')', '{', 'int', 'pc', ',', 'i', ',', 'n', ';', 'FreeBlk', '*', 'pFBlk', ';', 'char', 'newPage', '[', 'SQLITE_USABLE_SIZE', ']', ';', 'assert', '(', 'sqlitepager_iswriteable', '(', 'pPage', ')', ')', ';', 'assert', '(', 'pPage', '->', 'isInit', ')', ';', 'pc', '=', 'sizeof', '(', 'PageHdr', ')', ';', 'pPage', '->', 'u', '.', 'hdr', '.', 'firstCell', '=', 'SWAB16', '(', 'pBt', ',', 'pc', ')', ';', 'memcpy', '(', 'newPage', ',', 'pPage', '->', 'u', '.', 'aDisk', ',', 'pc', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'pPage', '->', 'nCell', ';', 'i', '++', ')', '{', 'Cell', '*', 'pCell', '=', 'pPage', '->', 'apCell', '[', 'i', ']', ';', '/', '*', 'This', 'routine', 'should', 'never', 'be', 'called', 'on', 'an', 'overfull', 'page', '.', 'assert', '(', 'Addr', '(', 'pCell', ')', '>', 'Addr', '(', 'pPage', ')', ')', ';', 'assert', '(', 'Addr', '(', 'pCell', ')', '<', 'Addr', '(', 'pPage', ')', '+', 'SQLITE_USABLE_SIZE', ')', ';', 'n', '=', 'cellSize', '(', 'pBt', ',', 'pCell', ')', ';', 'pCell', '->', 'h', '.', 'iNext', '=', 'SWAB16', '(', 'pBt', ',', 'pc', '+', 'n', ')', ';', 'memcpy', '(', '&', 'newPage', '[', 'pc', ']', ',', 'pCell', ',', 'n', ')', ';', 'pPage', '->', 'apCell', '[', 'i', ']', '=', '(', 'Cell', '*', ')', '&', 'pPage', '->', 'u', '.', 'aDisk', '[', 'pc', ']', ';', 'pc', '+=', 'n', ';', '}', 'assert', '(', 'pPage', '->', 'nFree', '==', 'SQLITE_USABLE_SIZE', '-', 'pc', ')', ';', 'memcpy', '(', 'pPage', '->', 'u', '.', 'aDisk', ',', 'newPage', ',', 'pc', ')', ';', 'if', '(', 'pPage', '->', 'nCell', '>', '0', ')', '{', 'pPage', '->', 'apCell', '[', 'pPage', '->', 'nCell', '-', '1', ']', '->', 'h', '.', 'iNext', '=', '0', ';', '}', 'pFBlk', '=', '(', 'FreeBlk', '*', ')', '&', 'pPage', '->', 'u', '.', 'aDisk', '[', 'pc', ']', ';', 'pFBlk', '->', 'iSize', '=', 'SWAB16', '(', 'pBt', ',', 'SQLITE_USABLE_SIZE', '-', 'pc', ')', ';', 'pFBlk', '->', 'iNext', '=', '0', ';', 'pPage', '->', 'u', '.', 'hdr', '.', 'firstFree', '=', 'SWAB16', '(', 'pBt', ',', 'pc', ')', ';', 'memset', '(', '&', 'pFBlk', '[', '1', ']', ',', '0', ',', 'SQLITE_USABLE_SIZE', '-', 'pc', '-', 'sizeof', '(', 'FreeBlk', ')', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
93,"['lvalue_error', '(', 'location_t', 'loc', ',', 'enum', 'lvalue_use', 'use', ')', '{', 'switch', '(', 'use', ')', '{', 'case', 'lv_assign', ':', 'error_at', '(', 'loc', ',', '""""', ')', ';', 'break', ';', 'case', 'lv_increment', ':', 'error_at', '(', 'loc', ',', '""""', ')', ';', 'break', ';', 'case', 'lv_decrement', ':', 'error_at', '(', 'loc', ',', '""""', ')', ';', 'break', ';', 'case', 'lv_addressof', ':', 'error_at', '(', 'loc', ',', '""""', ')', ';', 'break', ';', 'case', 'lv_asm', ':', 'error_at', '(', 'loc', ',', '""""', ')', ';', 'break', ';', 'default', ':', 'gcc_unreachable', '(', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
94,"['add_label', '(', 'void', ')', '{', 'int', 'i', ';', 'if', '(', 'token', '[', 'strlen', '(', 'token', ')', '-', '1', ']', '==', ""''"", ')', 'token', '[', 'strlen', '(', 'token', ')', '-', '1', ']', '=', '0', ';', 'if', '(', 'lindex', '>=', 'MAX_LABELS', ')', '{', 'printf', '(', '""""', ')', ';', 'exit', '(', '0', ')', ';', '}', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'lindex', ';', 'i', '++', ')', '{', 'if', '(', '!strcasecmp', '(', 'token', ',', 'labels', '[', 'i', ']', ')', ')', '{', 'printf', '(', '""""', ',', 'token', ')', ';', 'return', ';', '}', '}', 'strcpy', '(', 'labels', '[', 'lindex', ']', ',', 'token', ')', ';', 'offsets', '[', 'lindex', '++', ']', '=', 'offset', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
95,"['set_db_type', '(', 'const', 'char', '*', 'name', ')', '{', 'if', '(', 'catalog_db', '!=', 'NULL', ')', '{', 'free', '(', 'catalog_db', ')', ';', '}', 'catalog_db', '=', 'bstrdup', '(', 'name', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
96,"['net_write', '(', 'UPSCONN_t', '*', 'ups', ',', 'const', 'char', '*', 'buf', ',', 'size_t', 'buflen', ')', '{', 'int\tret', ';', '#ifdef', 'if', '(', 'ups', '->', 'ssl', ')', '{', '#ifdef', 'ret', '=', 'SSL_write', '(', 'ups', '->', 'ssl', ',', 'buf', ',', 'buflen', ')', ';', 'ret', '=', 'PR_Write', '(', 'ups', '->', 'ssl', ',', 'buf', ',', 'buflen', ')', ';', 'if', '(', 'ret', '<', '1', ')', '{', 'ups', '->', 'upserror', '=', 'UPSCLI_ERR_SSLERR', ';', '}', 'return', 'ret', ';', '}', 'ret', '=', 'upscli_select_write', '(', 'ups', '->', 'fd', ',', 'buf', ',', 'buflen', ',', '0', ',', '0', ')', ';', 'if', '(', 'ret', '<', '0', ')', '{', 'ups', '->', 'upserror', '=', 'UPSCLI_ERR_WRITE', ';', 'ups', '->', 'syserrno', '=', 'errno', ';', '}', 'if', '(', 'ret', '==', '0', ')', '{', 'ups', '->', 'upserror', '=', 'UPSCLI_ERR_SRVDISC', ';', '}', 'return', 'ret', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
97,"['_non_existent', '(', ')', '{', 'if', '(', '_NP_is_nil', '(', ')', ')', '_CORBA_invoked_nil_pseudo_ref', '(', ')', ';', 'omni_tracedmutex_lock', 'sync', '(', 'pd_lock', ')', ';', 'return', 'pd_destroyed', '?', '1', ':', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
98,"['init_mem', '(', 'compress_io', '*', 'cio', ',', 'FILE', '*', 'in_fp', ',', 'int', 'in_size', ',', 'FILE', '*', 'out_fp', ',', 'int', 'out_size', ')', '{', 'cio', '->', 'in', '=', '(', 'mem_mgr', '*', ')', 'malloc', '(', 'sizeof', '(', 'mem_mgr', ')', ')', ';', 'if', '(', '!cio', '->', 'in', ')', 'err_exit', '(', 'BUFFER_ALLOC_ERR', ')', ';', 'cio', '->', 'in', '->', 'set', '=', '(', 'UINT8', '*', ')', 'malloc', '(', 'sizeof', '(', 'UINT8', ')', '*', 'in_size', ')', ';', 'if', '(', '!cio', '->', 'in', '->', 'set', ')', 'err_exit', '(', 'BUFFER_ALLOC_ERR', ')', ';', 'cio', '->', 'in', '->', 'pos', '=', 'cio', '->', 'in', '->', 'set', ';', 'cio', '->', 'in', '->', 'end', '=', 'cio', '->', 'in', '->', 'set', '+', 'in_size', ';', 'cio', '->', 'in', '->', 'flush_buffer', '=', 'flush_cin_buffer', ';', 'cio', '->', 'in', '->', 'fp', '=', 'in_fp', ';', 'cio', '->', 'out', '=', '(', 'mem_mgr', '*', ')', 'malloc', '(', 'sizeof', '(', 'mem_mgr', ')', ')', ';', 'if', '(', '!cio', '->', 'out', ')', 'err_exit', '(', 'BUFFER_ALLOC_ERR', ')', ';', 'cio', '->', 'out', '->', 'set', '=', '(', 'UINT8', '*', ')', 'malloc', '(', 'sizeof', '(', 'UINT8', ')', '*', 'out_size', ')', ';', 'if', '(', '!cio', '->', 'out', '->', 'set', ')', 'err_exit', '(', 'BUFFER_ALLOC_ERR', ')', ';', 'cio', '->', 'out', '->', 'pos', '=', 'cio', '->', 'out', '->', 'set', ';', 'cio', '->', 'out', '->', 'end', '=', 'cio', '->', 'out', '->', 'set', '+', 'out_size', ';', 'cio', '->', 'out', '->', 'flush_buffer', '=', 'flush_cout_buffer', ';', 'cio', '->', 'out', '->', 'fp', '=', 'out_fp', ';', 'cio', '->', 'temp_bits', '.', 'len', '=', '0', ';', 'cio', '->', 'temp_bits', '.', 'val', '=', '0', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  True,CWE-other  True
99,"['realloc', '(', 'CVmVarHeapHybrid_hdr', '*', 'mem', ',', 'size_t', 'siz', ',', 'CVmObject', '*', 'obj', ')', '{', 'void', '*', 'new_mem', ';', '/', '*', '*', 'if', 'the', 'new', 'block', 'fits', 'in', 'our', 'cell', 'size', ',', 'return', 'the', '*', 'memory', 'unchanged', ';', 'note', 'that', 'we', 'must', 'adjust', 'the', 'pointer', 'so', 'that', '*', 'return', 'the', 'client', '-', 'visible', 'if', '(', 'siz', '<=', 'cell_size_', ')', 'return', '(', 'void', '*', ')', '(', 'mem', '+', '1', ')', ';', '/', '*', '*', 'The', 'memory', ""won''t"", '*', 're', '-', 'use', 'the', 'existing', 'cell', ',', 'but', 'we', ""can't"", 'allocate', 'the', 'memory', '*', 'our', 'own', 'sub', '-', 'block', 'at', 'all', '.', 'Allocate', 'an', 'entirely', 'new', 'block', '*', 'the', 'heap', 'manager', '.', 'new_mem', '=', 'mem_mgr_', '->', 'alloc_mem', '(', 'siz', ',', 'obj', ')', ';', '/', '*', '*', 'Copy', 'the', 'old', ""cell's"", 'contents', 'to', 'the', 'new', 'memory', '.', 'Note', 'that', '*', 'user', '-', 'visible', 'portion', 'of', 'the', 'old', 'cell', 'starts', 'immediately', 'after', '*', 'header', ';', ""don''s"", 'not', 'applicable', '*', 'the', 'new', 'object', '.', 'Note', 'also', 'that', 'we', 'got', 'a', 'pointer', 'directly', 'to', '*', 'user', '-', 'visible', 'portion', 'of', 'the', 'new', 'object', ',', 'so', 'we', ""don't"", 'need', 'to', '*', 'any', 'adjustments', 'to', 'the', 'new', 'pointer', '.', 'memcpy', '(', 'new_mem', ',', '(', 'void', '*', ')', '(', 'mem', '+', '1', ')', ',', 'cell_size_', ')', ';', 'free', '(', 'mem', ')', ';', 'return', 'new_mem', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
100,"['GetInetAddr', '(', 'char', '*', 'host', ')', '{', 'struct', 'in_addr', 'addr', ';', 'struct', 'hostent', '*', 'hp', ';', 'addr', '.', 's_addr', '=', 'inet_addr', '(', 'host', ')', ';', 'if', '(', '(', 'addr', '.', 's_addr', '==', 'INADDR_NONE', ')', '||', '(', 'addr', '.', 's_addr', '==', '0', ')', ')', '{', 'if', '(', '(', 'hp', '=', 'gethostbyname', '(', 'host', ')', ')', '==', '0', ')', '{', 'snprintf', '(', 'OUTPUT', ',', 'CF_BUFSIZE', ',', '""""', ',', 'host', ')', ';', 'FatalError', '(', 'OUTPUT', ')', ';', '}', 'if', '(', 'hp', '->', 'h_addrtype', '!=', 'AF_INET', ')', '{', 'snprintf', '(', 'OUTPUT', ',', 'CF_BUFSIZE', ',', '""""', ',', 'hp', '->', 'h_addrtype', ')', ';', 'FatalError', '(', 'OUTPUT', ')', ';', '}', 'if', '(', 'hp', '->', 'h_length', '!=', 'sizeof', '(', 'addr', ')', ')', '{', 'snprintf', '(', 'OUTPUT', ',', 'CF_BUFSIZE', ',', '""""', ',', 'hp', '->', 'h_length', ')', ';', 'FatalError', '(', 'OUTPUT', ')', ';', '}', 'memcpy', '(', '(', 'char', '*', ')', '&', 'addr', ',', 'hp', '->', 'h_addr', ',', 'hp', '->', 'h_length', ')', ';', '}', 'return', '(', 'addr', '.', 's_addr', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
101,"['_chm_parse_UTF8', '(', 'UChar', '*', '*', 'pEntry', ',', 'UInt64', 'count', ',', 'char', '*', 'path', ')', '{', '/', '*', 'XXX', ':', 'implement', 'UTF', '-', '8', 'support', ',', 'including', 'a', 'real', 'mapping', '*', 'ISO', '-', '8859', '-', '1', '?', 'probably', 'there', 'is', 'a', 'library', 'to', 'do', 'this', '?', 'As', '*', 'immediately', 'apparent', 'from', 'the', 'below', 'code', ',', ""I'm"", 'presently', 'not', '*', 'any', 'special', 'handling', 'for', 'files', 'in', 'which', 'none', 'of', 'the', 'strings', '*', 'UTF', '-', '8', 'multi', '-', 'byte', 'characters', '.', 'while', '(', 'count', '!=', '0', ')', '{', '*', 'path', '++', '=', '(', 'char', ')', '(', '*', '(', '*', 'pEntry', ')', '++', ')', ';', '--', 'count', ';', '}', '*', 'path', '=', ""''"", ';', 'return', '1', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
102,"['make_option_str_with_ver', '(', 'char', '*', '*', 'argv', ',', 'int', 'argc', ',', 'char', '*', 'version', ')', '{', 'char', '*', 'op_str', ';', 'int', 'len', '=', '0', ';', 'int', 'i', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'argc', ';', 'i', '++', ')', '{', 'len', '+=', 'strlen', '(', 'argv', '[', 'i', ']', ')', ';', '}', 'len', '+=', '(', 'strlen', '(', 'version', ')', '+', '2', ')', ';', 'len', '+=', 'argc', '-', '1', ';', 'op_str', '=', '(', 'char', '*', ')', 'malloc', '(', 'sizeof', '(', 'char', ')', '*', '(', 'len', '+', '1', ')', ')', ';', 'if', '(', 'op_str', '==', 'NULL', ')', '{', 'fatal', '(', '""""', ')', ';', '}', 'op_str', '[', '0', ']', '=', ""''"", ';', 'sprintf', '(', 'op_str', ',', '""""', ',', 'argv', '[', '0', ']', ',', 'version', ')', ';', 'for', '(', 'i', '=', '1', ';', 'i', '<', 'argc', ';', 'i', '++', ')', '{', 'strcat', '(', 'op_str', ',', 'argv', '[', 'i', ']', ')', ';', 'if', '(', 'argc', '>', 'i', '+', '1', ')', '{', 'strcat', '(', 'op_str', ',', '""""', ')', ';', '}', '}', 'return', 'op_str', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
103,"['options_add_filter', '(', 'obj_list_t', '*', 'obj_list', ',', 'int', 'n_objs', ',', 'filter_info_t', 'filt', ',', 'pack_opttbl_t', '*', 'table', ')', '{', 'unsigned', 'int', 'i', ',', 'I', ';', 'int', 'j', ',', 'added', '=', '0', ',', 'found', '=', '0', ';', 'if', '(', 'table', '->', 'nelems', '+', 'n_objs', '>=', 'table', '->', 'size', ')', '{', 'if', '(', 'aux_inctable', '(', 'table', ',', 'n_objs', ')', '<', '0', ')', 'return', '-', '1', ';', '}', 'if', '(', 'table', '->', 'nelems', '>', '0', ')', '{', 'for', '(', 'j', '=', '0', ';', 'j', '<', 'n_objs', ';', 'j', '++', ')', '{', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'table', '->', 'nelems', ';', 'i', '++', ')', '{', 'if', '(', 'HDstrcmp', '(', 'obj_list', '[', 'j', ']', '.', 'obj', ',', 'table', '->', 'objs', '[', 'i', ']', '.', 'path', ')', '==', '0', ')', '{', 'aux_tblinsert_filter', '(', 'table', ',', 'i', ',', 'filt', ')', ';', 'found', '=', '1', ';', 'break', ';', 'if', '(', 'found', '==', '0', ')', '{', 'I', '=', 'table', '->', 'nelems', '+', 'added', ';', 'added', '++', ';', 'HDstrcpy', '(', 'table', '->', 'objs', '[', 'I', ']', '.', 'path', ',', 'obj_list', '[', 'j', ']', '.', 'obj', ')', ';', 'aux_tblinsert_filter', '(', 'table', ',', 'I', ',', 'filt', ')', ';', '}', '/', '*', 'cases', 'where', 'we', 'have', 'an', 'already', 'inserted', 'name', 'but', 'there', 'is', 'a', 'new', 'name', 'example', ':', '-', 'l', 'dset1', ':', 'CHUNK', '=', '20x20', '-', 'f', 'dset1', ',', 'dset2', ':', 'GZIP', '=', 'dset1', 'is', 'already', 'inserted', ',', 'but', 'dset2', 'must', 'also', 'else', 'if', '(', 'found', '==', '1', '&&', 'HDstrcmp', '(', 'obj_list', '[', 'j', ']', '.', 'obj', ',', 'table', '->', 'objs', '[', 'i', ']', '.', 'path', ')', '!=', '0', ')', '{', 'I', '=', 'table', '->', 'nelems', '+', 'added', ';', 'added', '++', ';', 'HDstrcpy', '(', 'table', '->', 'objs', '[', 'I', ']', '.', 'path', ',', 'obj_list', '[', 'j', ']', '.', 'obj', ')', ';', 'aux_tblinsert_filter', '(', 'table', ',', 'I', ',', 'filt', ')', ';', '}', '}', '{', 'for', '(', 'j', '=', '0', ';', 'j', '<', 'n_objs', ';', 'j', '++', ')', '{', 'I', '=', 'table', '->', 'nelems', '+', 'added', ';', 'added', '++', ';', 'HDstrcpy', '(', 'table', '->', 'objs', '[', 'I', ']', '.', 'path', ',', 'obj_list', '[', 'j', ']', '.', 'obj', ')', ';', 'aux_tblinsert_filter', '(', 'table', ',', 'I', ',', 'filt', ')', ';', '}', '}', 'table', '->', 'nelems', '+=', 'added', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
104,"['PR_FreeAddrInfo', '(', 'PRAddrInfo', '*', 'ai', ')', '{', '#if', 'defined', '(', '_PR_HAVE_GETADDRINFO', ')', '#if', 'defined', '(', '_PR_INET6_PROBE', ')', 'if', '(', '!_pr_ipv6_is_present', '(', ')', ')', 'PR_Free', '(', '(', 'PRAddrInfoFB', '*', ')', 'ai', ')', ';', 'FREEADDRINFO', '(', '(', 'PRADDRINFO', '*', ')', 'ai', ')', ';', 'PR_Free', '(', '(', 'PRAddrInfoFB', '*', ')', 'ai', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
105,"['b43legacy_write_initvals', '(', 'struct', 'b43legacy_wldev', '*', 'dev', ',', 'const', 'struct', 'b43legacy_iv', '*', 'ivals', ',', 'size_t', 'count', ',', 'size_t', 'array_size', ')', '{', 'const', 'struct', 'b43legacy_iv', '*', 'iv', ';', 'u16', 'offset', ';', 'size_t', 'i', ';', 'bool', 'bit32', ';', 'BUILD_BUG_ON', '(', 'sizeof', '(', 'struct', 'b43legacy_iv', ')', '!=', '6', ')', ';', 'iv', '=', 'ivals', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'count', ';', 'i', '++', ')', '{', 'if', '(', 'array_size', '<', 'sizeof', '(', 'iv', '->', 'offset_size', ')', ')', 'goto', 'err_format', ';', 'array_size', '-=', 'sizeof', '(', 'iv', '->', 'offset_size', ')', ';', 'offset', '=', 'be16_to_cpu', '(', 'iv', '->', 'offset_size', ')', ';', 'bit32', '=', '!!', '(', 'offset', '&', 'B43legacy_IV_32BIT', ')', ';', 'offset', '&=', 'B43legacy_IV_OFFSET_MASK', ';', 'if', '(', 'offset', '>=', '0x1000', ')', 'goto', 'err_format', ';', 'if', '(', 'bit32', ')', '{', 'u32', 'value', ';', 'if', '(', 'array_size', '<', 'sizeof', '(', 'iv', '->', 'data', '.', 'd32', ')', ')', 'goto', 'err_format', ';', 'array_size', '-=', 'sizeof', '(', 'iv', '->', 'data', '.', 'd32', ')', ';', 'value', '=', 'get_unaligned_be32', '(', '&', 'iv', '->', 'data', '.', 'd32', ')', ';', 'b43legacy_write32', '(', 'dev', ',', 'offset', ',', 'value', ')', ';', 'iv', '=', '(', 'const', 'struct', 'b43legacy_iv', '*', ')', '(', '(', 'const', 'uint8_t', '*', ')', 'iv', '+', 'sizeof', '(', '__be16', ')', '+', 'sizeof', '(', '__be32', ')', ')', ';', '}', 'else', '{', 'u16', 'value', ';', 'if', '(', 'array_size', '<', 'sizeof', '(', 'iv', '->', 'data', '.', 'd16', ')', ')', 'goto', 'err_format', ';', 'array_size', '-=', 'sizeof', '(', 'iv', '->', 'data', '.', 'd16', ')', ';', 'value', '=', 'be16_to_cpu', '(', 'iv', '->', 'data', '.', 'd16', ')', ';', 'b43legacy_write16', '(', 'dev', ',', 'offset', ',', 'value', ')', ';', 'iv', '=', '(', 'const', 'struct', 'b43legacy_iv', '*', ')', '(', '(', 'const', 'uint8_t', '*', ')', 'iv', '+', 'sizeof', '(', '__be16', ')', '+', 'sizeof', '(', '__be16', ')', ')', ';', '}', '}', 'if', '(', 'array_size', ')', 'goto', 'err_format', ';', 'return', '0', ';', 'err_format', ':', 'b43legacyerr', '(', 'dev', '->', 'wl', ',', '""""', ')', ';', 'b43legacy_print_fw_helptext', '(', 'dev', '->', 'wl', ')', ';', 'return', '-', 'EPROTO', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
106,"['canvas_properties', '(', 't_glist', '*', 'x', ')', '{', 't_gobj', '*', 'y', ';', 'char', 'graphbuf', '[', '200', ']', ';', 'if', '(', 'glist_isgraph', '(', 'x', ')', '!=', '0', ')', 'sprintf', '(', 'graphbuf', ',', '""""', ',', '0', '.', ',', '0', '.', ',', 'glist_isgraph', '(', 'x', ')', ',', '/', '/', '1', ',', 'x', '->', 'gl_x1', ',', 'x', '->', 'gl_y1', ',', 'x', '->', 'gl_x2', ',', 'x', '->', 'gl_y2', ',', '(', 'int', ')', 'x', '->', 'gl_pixwidth', ',', '(', 'int', ')', 'x', '->', 'gl_pixheight', ',', '(', 'int', ')', 'x', '->', 'gl_xmargin', ',', '(', 'int', ')', 'x', '->', 'gl_ymargin', ')', ';', 'else', 'sprintf', '(', 'graphbuf', ',', '""""', ',', 'glist_dpixtodx', '(', 'x', ',', '1', ')', ',', '-', 'glist_dpixtody', '(', 'x', ',', '1', ')', ',', '0', ',', '0', '.', ',', '-', '1', '.', ',', '1', '.', ',', '1', '.', ',', '(', 'int', ')', 'x', '->', 'gl_pixwidth', ',', '(', 'int', ')', 'x', '->', 'gl_pixheight', ',', '(', 'int', ')', 'x', '->', 'gl_xmargin', ',', '(', 'int', ')', 'x', '->', 'gl_ymargin', ')', ';', 'gfxstub_new', '(', '&', 'x', '->', 'gl_pd', ',', 'x', ',', 'graphbuf', ')', ';', 'for', '(', 'y', '=', 'x', '->', 'gl_list', ';', 'y', ';', 'y', '=', 'y', '->', 'g_next', ')', 'if', '(', 'pd_class', '(', '&', 'y', '->', 'g_pd', ')', '==', 'garray_class', ')', 'garray_properties', '(', '(', 't_garray', '*', ')', 'y', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
107,"['oc_enc_fdct8x8_c', '(', 'ogg_int16_t', '_y', '[', '64', ']', ',', 'const', 'ogg_int16_t', '_x', '[', '64', ']', ')', '{', 'const', 'ogg_int16_t', '*', 'in', ';', 'ogg_int16_t', '*', 'end', ';', 'ogg_int16_t', '*', 'out', ';', 'ogg_int16_t', 'w', '[', '64', ']', ';', 'int', 'i', ';', '/', '*', 'Add', 'two', 'extra', 'bits', 'of', 'working', 'precision', 'to', 'improve', 'accuracy', ';', 'any', 'more', 'for', '(', 'i', '=', '0', ';', 'i', '<', '64', ';', 'i', '++', ')', 'w', '[', 'i', ']', '=', '_x', '[', 'i', ']', '<<', '2', ';', '/', '*', 'These', 'biases', 'correct', 'for', 'some', 'systematic', 'error', 'that', 'remains', 'in', 'the', 'w', '[', '0', ']', '+=', '(', 'w', '[', '0', ']', '!=', '0', ')', '+', '1', ';', 'w', '[', '1', ']', '++', ';', 'w', '[', '8', ']', '--', ';', 'for', '(', 'in', '=', 'w', ',', 'out', '=', '_y', ',', 'end', '=', 'out', '+', '64', ';', 'out', '<', 'end', ';', 'in', '++', ',', 'out', '+=', '8', ')', 'oc_fdct8', '(', 'out', ',', 'in', ')', ';', 'for', '(', 'in', '=', '_y', ',', 'out', '=', 'w', ',', 'end', '=', 'out', '+', '64', ';', 'out', '<', 'end', ';', 'in', '++', ',', 'out', '+=', '8', ')', 'oc_fdct8', '(', 'out', ',', 'in', ')', ';', '/', '*', 'Round', 'the', 'result', 'back', 'to', 'the', 'external', 'working', 'precision', '(', 'which', 'is', 'scaled', 'by', 'four', 'relative', 'to', 'the', 'orthogonal', 'result', ')', '.', 'for', '(', 'i', '=', '0', ';', 'i', '<', '64', ';', 'i', '++', ')', '_y', '[', 'i', ']', '=', 'w', '[', 'i', ']', '+', '2', '>>', '2', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
108,"['_dxfinit_convert', '(', 'double', 'gamma', ')', '{', 'union', 'hl', 'f', ';', 'int', 'c', ',', 'i', ';', 'return', ';', 'DXMarkTimeLocal', '(', '""""', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
109,"['main', '(', 'int', 'argc', ',', 'char', '*', '*', 'argv', ')', '{', 'char', '*', 'temp', ',', '*', 's', ';', 'temp', '=', 'argv', '[', '0', ']', ';', 's', '=', 'strrchr', '(', 'argv', '[', '0', ']', ',', ""''"", ')', ';', 'if', '(', 's', '!=', 'NULL', ')', 'temp', '=', 's', '+', '1', ';', 'MyName', '=', 'safemalloc', '(', 'strlen', '(', 'temp', ')', '+', '2', ')', ';', 'strcpy', '(', 'MyName', ',', '""""', ')', ';', 'strcat', '(', 'MyName', ',', 'temp', ')', ';', 'if', '(', '(', 'argc', '!=', '6', ')', '&&', '(', 'argc', '!=', '7', ')', ')', '{', 'fprintf', '(', 'stderr', ',', '""""', ',', 'MyName', ',', 'VERSION', ')', ';', 'exit', '(', '1', ')', ';', '}', 'signal', '(', 'SIGPIPE', ',', 'DeadPipe', ')', ';', 'fd', '[', '0', ']', '=', 'atoi', '(', 'argv', '[', '1', ']', ')', ';', 'fd', '[', '1', ']', '=', 'atoi', '(', 'argv', '[', '2', ']', ')', ';', 'fprintf', '(', 'stderr', ',', '""""', ',', 'argv', '[', '4', ']', ')', ';', 'fprintf', '(', 'stderr', ',', '""""', ',', 'argv', '[', '5', ']', ')', ';', 'fd_width', '=', 'GetFdWidth', '(', ')', ';', '/', '*', 'Request', 'a', 'list', 'of', 'all', 'windows', ',', 'SendInfo', '(', 'fd', ',', '""""', ',', '0', ')', ';', 'Loop', '(', 'fd', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
110,"['_GD_OldTypeName', '(', 'DIRFILE', '*', 'D', ',', 'gd_type_t', 'data_type', ')', '{', 'const', 'char', '*', 'ptr', ';', 'dtrace', '(', '""""', ',', 'D', ',', 'data_type', ')', ';', 'switch', '(', 'data_type', ')', '{', 'case', 'GD_UINT8', ':', 'ptr', '=', '""""', ';', 'break', ';', 'case', 'GD_UINT16', ':', 'ptr', '=', '""""', ';', 'break', ';', 'case', 'GD_INT16', ':', 'ptr', '=', '""""', ';', 'break', ';', 'case', 'GD_UINT32', ':', 'ptr', '=', '""""', ';', 'break', ';', 'case', 'GD_INT32', ':', 'ptr', '=', '""""', ';', 'break', ';', 'case', 'GD_FLOAT32', ':', 'ptr', '=', '""""', ';', 'break', ';', 'case', 'GD_FLOAT64', ':', 'ptr', '=', '""""', ';', 'break', ';', 'default', ':', '_GD_InternalError', '(', 'D', ')', ';', 'ptr', '=', '""""', ';', 'break', ';', '}', 'dreturn', '(', '""""', '%', 's\\""""', ',', 'ptr', ')', ';', 'return', 'ptr', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
111,"['dm_raid0', '(', 'struct', 'lib_context', '*', 'lc', ',', 'char', '*', '*', 'table', ',', 'struct', 'raid_set', '*', 'rs', ')', '{', 'unsigned', 'int', 'stripes', '=', '0', ';', 'uint64_t', 'min', ',', 'last_min', '=', '0', ';', 'for', '(', ';', '(', 'min', '=', '_smallest', '(', 'lc', ',', 'rs', ',', 'last_min', ')', ')', ';', 'last_min', '=', 'min', ')', '{', 'if', '(', 'last_min', '&&', '!p_fmt', '(', 'lc', ',', 'table', ',', '""""', ')', ')', 'goto', 'err', ';', 'if', '(', '!_dm_raid0_bol', '(', 'lc', ',', 'table', ',', 'round_down', '(', 'min', ',', 'rs', '->', 'stride', ')', ',', 'last_min', ',', '_dm_raid_devs', '(', 'lc', ',', 'rs', ',', 'last_min', ')', ',', 'rs', '->', 'stride', ')', '||', '!_dm_raid0_eol', '(', 'lc', ',', 'table', ',', 'rs', ',', '&', 'stripes', ',', 'last_min', ')', ')', 'goto', 'err', ';', 'if', '(', '!F_MAXIMIZE', '(', 'rs', ')', ')', 'break', ';', '}', 'return', 'stripes', '?', '1', ':', '0', ';', 'err', ':', 'return', 'log_alloc_err', '(', 'lc', ',', '__func__', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
112,"['commitLanguages', '(', 'const', 'CI18nTranslator', '&', 'inTranslator', ')', '{', 'for', '(', 'CLanguageList', ':', ':', 'const_iterator', 'i', '=', 'mLanguages', '.', 'begin', '(', ')', ';', 'i', '!=', 'mLanguages', '.', 'end', '(', ')', ';', 'i', '++', ')', '{', 'if', '(', 'inTranslator', '.', 'hasLanguage', '(', '*', 'i', ')', ')', '{', 'mPreferredLanguage', '=', '*', 'i', ';', 'break', ';', '}', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
113,"['carl9170_debugfs_write', '(', 'struct', 'file', '*', 'file', ',', 'const', 'char', '__user', '*', 'userbuf', ',', 'size_t', 'count', ',', 'loff_t', '*', 'ppos', ')', '{', 'struct', 'carl9170_debugfs_fops', '*', 'dfops', ';', 'struct', 'ar9170', '*', 'ar', ';', 'char', '*', 'buf', '=', 'NULL', ';', 'int', 'err', '=', '0', ';', 'if', '(', '!count', ')', 'return', '0', ';', 'if', '(', 'count', '>', 'PAGE_SIZE', ')', 'return', '-', 'E2BIG', ';', 'ar', '=', 'file', '->', 'private_data', ';', 'if', '(', '!ar', ')', 'return', '-', 'ENODEV', ';', 'dfops', '=', 'container_of', '(', 'file', '->', 'f_op', ',', 'struct', 'carl9170_debugfs_fops', ',', 'fops', ')', ';', 'if', '(', '!dfops', '->', 'write', ')', 'return', '-', 'ENOSYS', ';', 'buf', '=', 'vmalloc', '(', 'count', ')', ';', 'if', '(', '!buf', ')', 'return', '-', 'ENOMEM', ';', 'if', '(', 'copy_from_user', '(', 'buf', ',', 'userbuf', ',', 'count', ')', ')', '{', 'err', '=', '-', 'EFAULT', ';', 'goto', 'out_free', ';', '}', 'if', '(', 'mutex_trylock', '(', '&', 'ar', '->', 'mutex', ')', '==', '0', ')', '{', 'err', '=', '-', 'EAGAIN', ';', 'goto', 'out_free', ';', '}', 'if', '(', '!CHK_DEV_STATE', '(', 'ar', ',', 'dfops', '->', 'req_dev_state', ')', ')', '{', 'err', '=', '-', 'ENODEV', ';', 'goto', 'out_unlock', ';', '}', 'err', '=', 'dfops', '->', 'write', '(', 'ar', ',', 'buf', ',', 'count', ')', ';', 'if', '(', 'err', ')', 'goto', 'out_unlock', ';', 'out_unlock', ':', 'mutex_unlock', '(', '&', 'ar', '->', 'mutex', ')', ';', 'out_free', ':', 'vfree', '(', 'buf', ')', ';', 'return', 'err', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
114,"['orte_plm_base_vm_ready', '(', 'int', 'fd', ',', 'short', 'args', ',', 'void', '*', 'cbdata', ')', '{', 'orte_state_caddy_t', '*', 'caddy', '=', '(', 'orte_state_caddy_t', '*', ')', 'cbdata', ';', 'caddy', '->', 'jdata', '->', 'state', '=', 'ORTE_JOB_STATE_VM_READY', ';', 'if', '(', 'ORTE_SUCCESS', '!=', 'orte_filem', '.', 'preposition_files', '(', 'caddy', '->', 'jdata', ',', 'files_ready', ',', 'caddy', '->', 'jdata', ')', ')', '{', 'ORTE_FORCED_TERMINATE', '(', 'ORTE_ERROR_DEFAULT_EXIT_CODE', ')', ';', '}', 'OBJ_RELEASE', '(', 'caddy', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
115,"['gst_element_factory_list_filter', '(', 'GList', '*', 'list', ',', 'const', 'GstCaps', '*', 'caps', ',', 'GstPadDirection', 'direction', ',', 'gboolean', 'subsetonly', ')', '{', 'GQueue', 'results', '=', 'G_QUEUE_INIT', ';', 'GST_DEBUG', '(', '""""', ')', ';', 'for', '(', ';', 'list', ';', 'list', '=', 'list', '->', 'next', ')', '{', 'GstElementFactory', '*', 'factory', ';', 'const', 'GList', '*', 'templates', ';', 'GList', '*', 'walk', ';', 'factory', '=', '(', 'GstElementFactory', '*', ')', 'list', '->', 'data', ';', 'GST_DEBUG', '(', '""""', ',', 'gst_plugin_feature_get_name', '(', '(', 'GstPluginFeature', '*', ')', 'factory', ')', ')', ';', 'templates', '=', 'gst_element_factory_get_static_pad_templates', '(', 'factory', ')', ';', 'for', '(', 'walk', '=', '(', 'GList', '*', ')', 'templates', ';', 'walk', ';', 'walk', '=', 'g_list_next', '(', 'walk', ')', ')', '{', 'GstStaticPadTemplate', '*', 'templ', '=', 'walk', '->', 'data', ';', 'if', '(', 'templ', '->', 'direction', '==', 'direction', ')', '{', 'GstCaps', '*', 'tmpl_caps', ';', 'tmpl_caps', '=', 'gst_static_caps_get', '(', '&', 'templ', '->', 'static_caps', ')', ';', '/', '*', 'FIXME', ',', 'intersect', 'is', 'not', 'the', 'right', 'method', ',', 'we', 'ideally', 'want', 'to', 'if', '(', '(', 'subsetonly', '&&', 'gst_caps_is_subset', '(', 'caps', ',', 'tmpl_caps', ')', ')', '||', '(', '!subsetonly', '&&', 'gst_caps_can_intersect', '(', 'caps', ',', 'tmpl_caps', ')', ')', ')', '{', 'g_queue_push_tail', '(', '&', 'results', ',', 'gst_object_ref', '(', 'factory', ')', ')', ';', 'gst_caps_unref', '(', 'tmpl_caps', ')', ';', 'break', ';', '}', 'gst_caps_unref', '(', 'tmpl_caps', ')', ';', '}', '}', '}', 'return', 'results', '.', 'head', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
116,"['bch_bbio_count_io_errors', '(', 'struct', 'cache_set', '*', 'c', ',', 'struct', 'bio', '*', 'bio', ',', 'int', 'error', ',', 'const', 'char', '*', 'm', ')', '{', 'struct', 'bbio', '*', 'b', '=', 'container_of', '(', 'bio', ',', 'struct', 'bbio', ',', 'bio', ')', ';', 'struct', 'cache', '*', 'ca', '=', 'PTR_CACHE', '(', 'c', ',', '&', 'b', '->', 'key', ',', '0', ')', ';', 'unsigned', 'threshold', '=', 'bio', '->', 'bi_rw', '&', '?', 'c', '->', ':', 'c', '->', 'congested_read_threshold_us', ';', 'if', '(', 'threshold', ')', '{', 'unsigned', 't', '=', 'local_clock_us', '(', ')', ';', 'int', 'us', '=', 't', '-', 'b', '->', 'submit_time_us', ';', 'int', 'congested', '=', 'atomic_read', '(', '&', 'c', '->', 'congested', ')', ';', 'if', '(', 'us', '>', '(', 'int', ')', 'threshold', ')', '{', 'int', 'ms', '=', 'us', '/', '1024', ';', 'c', '->', 'congested_last_us', '=', 't', ';', 'ms', '=', 'min', '(', 'ms', ',', 'CONGESTED_MAX', '+', 'congested', ')', ';', 'atomic_sub', '(', 'ms', ',', '&', 'c', '->', 'congested', ')', ';', '}', 'else', 'if', '(', 'congested', '<', '0', ')', 'atomic_inc', '(', '&', 'c', '->', 'congested', ')', ';', '}', 'bch_count_io_errors', '(', 'ca', ',', 'error', ',', 'm', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
117,"['dns_config_find_zone', '(', 'char', '*', 'name', ',', 'int', 'class', ')', '{', 'int', 'len', ',', 'buflen', ',', 'match_len', '=', '-', '1', ';', 'char', 'buf', '[', 'DNS_NAME_MAX', ']', ';', 'dns_config_root_t', '*', 'root', ';', 'dns_config_zone_t', '*', 'zone', ',', '*', 'candidate', '=', 'NULL', ';', 'if', '(', '(', 'root', '=', 'ConfigRoot', ')', '==', 'NULL', ')', 'return', 'NULL', ';', 'STRLCPY', '(', 'buf', ',', 'name', ',', 'sizeof', '(', 'buf', ')', ')', ';', 'STRLOWER', '(', 'buf', ')', ';', 'buflen', '=', 'strlen', '(', 'buf', ')', ';', 'zone', '=', '(', 'dns_config_zone_t', '*', ')', 'dns_list_head', '(', '&', 'root', '->', 'r_zone', ')', ';', 'while', '(', 'zone', '!=', 'NULL', ')', '{', 'if', '(', 'zone', '->', 'z_class', '==', 'class', '||', 'class', '==', 'DNS_CLASS_ANY', ')', '{', 'len', '=', 'strlen', '(', 'zone', '->', 'z_name', ')', ';', 'if', '(', 'buflen', '>=', 'len', '&&', 'len', '>', 'match_len', ')', '{', 'if', '(', 'buflen', '==', 'len', '||', 'buf', '[', 'buflen', '-', 'len', '-', '1', ']', '==', ""''"", '||', 'len', '==', '0', ')', '{', 'if', '(', 'strcmp', '(', '&', 'buf', '[', 'buflen', '-', 'len', ']', ',', 'zone', '->', 'z_name', ')', '==', '0', ')', '{', 'candidate', '=', 'zone', ';', 'match_len', '=', 'len', ';', '}', '}', '}', '}', 'zone', '=', '(', 'dns_config_zone_t', '*', ')', 'dns_list_next', '(', '&', 'root', '->', 'r_zone', ',', '&', 'zone', '->', 'z_elem', ')', ';', '}', 'if', '(', 'candidate', '==', 'NULL', ')', 'plog', '(', 'LOG_DEBUG', ',', '""""', ',', 'MODULE', ')', ';', 'plog', '(', 'LOG_DEBUG', ',', '""""', '%', 's\\""""', ',', 'MODULE', ',', 'candidate', '->', 'z_name', ')', ';', 'return', 'candidate', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
118,"['autosave', '(', ')', '{', 'statusBar', '->', 'clearstatus', '(', ')', ';', 'statusBar', '->', 'status', '(', '_', '(', '""""', ')', ')', ';', 'autosave_int', '(', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
119,"['RandomRotorSearchInitialize', '(', 'unsigned', 'int', 'conformers', ',', 'unsigned', 'int', 'geomSteps', ')', '{', 'if', '(', '!_validSetup', ')', 'return', ';', 'OBRotorList', 'rl', ';', 'OBRotamerList', 'rotamers', ';', 'OBRotorIterator', 'ri', ';', 'OBRotor', '*', 'rotor', ';', 'OBRandom', 'generator', ';', 'generator', '.', 'TimeSeed', '(', ')', ';', '_origLogLevel', '=', '_loglvl', ';', 'if', '(', '_mol', '.', 'GetCoordinates', '(', ')', '==', 'NULL', ')', 'return', ';', 'OBBitVec', 'fixed', '=', '_constraints', '.', 'GetFixedBitVec', '(', ')', ';', 'rl', '.', 'SetFixAtoms', '(', 'fixed', ')', ';', 'rl', '.', 'Setup', '(', '_mol', ')', ';', 'rotamers', '.', 'SetBaseCoordinateSets', '(', '_mol', ')', ';', 'rotamers', '.', 'Setup', '(', '_mol', ',', 'rl', ')', ';', 'IF_OBFF_LOGLVL_LOW', '{', 'OBFFLog', '(', '""""', ')', ';', 'snprintf', '(', '_logbuf', ',', 'BUFF_SIZE', ',', '""""', ',', '(', 'unsigned', 'long', ')', 'rl', '.', 'Size', '(', ')', ')', ';', 'OBFFLog', '(', '_logbuf', ')', ';', 'unsigned', 'long', 'int', 'combinations', '=', '1', ';', 'for', '(', 'rotor', '=', 'rl', '.', 'BeginRotor', '(', 'ri', ')', ';', 'rotor', ';', 'rotor', '=', 'rl', '.', 'NextRotor', '(', 'ri', ')', ')', '{', 'combinations', '*=', 'rotor', '->', 'GetResolution', '(', ')', '.', 'size', '(', ')', ';', '}', 'snprintf', '(', '_logbuf', ',', 'BUFF_SIZE', ',', '""""', ',', 'combinations', ')', ';', 'OBFFLog', '(', '_logbuf', ')', ';', '}', 'if', '(', '!rl', '.', 'Size', '(', ')', ')', '{', '/', '/', 'only', 'one', 'OBFFLog', '(', '""""', ')', ';', '_loglvl', '=', 'OBFF_LOGLVL_NONE', ';', 'ConjugateGradients', '(', 'geomSteps', ')', ';', '/', '/', 'energy', 'minimization', 'for', '_loglvl', '=', '_origLogLevel', ';', 'return', ';', '}', 'std', ':', ':', 'vector', '<', 'int', '>', 'rotorKey', '(', 'rl', '.', 'Size', '(', ')', '+', '1', ',', '0', ')', ';', '/', '/', 'indexed', 'from', 'for', '(', 'int', 'c', '=', '0', ';', 'c', '<', 'conformers', ';', '++', 'c', ')', '{', 'rotor', '=', 'rl', '.', 'BeginRotor', '(', 'ri', ')', ';', 'for', '(', 'int', 'i', '=', '1', ';', 'i', '<', 'rl', '.', 'Size', '(', ')', '+', '1', ';', '++', 'i', ',', 'rotor', '=', 'rl', '.', 'NextRotor', '(', 'ri', ')', ')', '{', '/', '/', 'foreach', 'rotorKey', '[', 'i', ']', '=', 'generator', '.', 'NextInt', '(', ')', '%', 'rotor', '->', 'GetResolution', '(', ')', '.', 'size', '(', ')', ';', '}', 'rotamers', '.', 'AddRotamer', '(', 'rotorKey', ')', ';', '}', 'rotamers', '.', 'ExpandConformerList', '(', '_mol', ',', '_mol', '.', 'GetConformers', '(', ')', ')', ';', 'IF_OBFF_LOGLVL_LOW', '{', 'snprintf', '(', '_logbuf', ',', 'BUFF_SIZE', ',', '""""', ',', '_mol', '.', 'NumConformers', '(', ')', ')', ';', 'OBFFLog', '(', '_logbuf', ')', ';', 'OBFFLog', '(', '""""', ')', ';', 'OBFFLog', '(', '""""', ')', ';', '}', '_current_conformer', '=', '0', ';', '_energies', '.', 'clear', '(', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
120,"['gd_header_button_set_symbolic_icon_name', '(', 'GdHeaderButton', '*', 'self', ',', 'const', 'gchar', '*', 'symbolic_icon_name', ')', '{', 'if', '(', 'symbolic_icon_name', '!=', 'NULL', '&&', '!g_str_has_suffix', '(', 'symbolic_icon_name', ',', '""""', ')', ')', '{', 'g_warning', '(', '""""', ')', ';', 'return', ';', '}', 'g_object_set', '(', 'self', ',', '""""', ',', 'symbolic_icon_name', ',', 'NULL', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
121,"['mailimap_section_text_send', '(', 'mailstream', '*', 'fd', ',', 'struct', 'mailimap_section_text', '*', 'section_text', ')', '{', 'switch', '(', 'section_text', '->', 'sec_type', ')', '{', 'case', 'MAILIMAP_SECTION_TEXT_SECTION_MSGTEXT', ':', 'return', 'mailimap_section_msgtext_send', '(', 'fd', ',', 'section_text', '->', 'sec_msgtext', ')', ';', 'case', 'MAILIMAP_SECTION_TEXT_MIME', ':', 'return', 'mailimap_token_send', '(', 'fd', ',', '""""', ')', ';', 'default', ':', 'return', 'MAILIMAP_NO_ERROR', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
122,"['send_next_ecm_frame', '(', 't30_state_t', '*', 's', ')', '{', 'int', 'i', ';', 'uint8_t', 'frame', '[', '3', ']', ';', 'if', '(', 's', '->', 'ecm_current_tx_frame', '<', 's', '->', 'ecm_frames', ')', '{', '/', '*', 'Search', 'for', 'the', 'next', 'frame', ',', 'within', 'the', 'current', 'partial', 'page', ',', 'which', 'for', '(', 'i', '=', 's', '->', 'ecm_current_tx_frame', ';', 'i', '<', 's', '->', 'ecm_frames', ';', 'i', '++', ')', '{', 'if', '(', 's', '->', 'ecm_len', '[', 'i', ']', '>=', '0', ')', '{', 'send_frame', '(', 's', ',', 's', '->', 'ecm_data', '[', 'i', ']', ',', 's', '->', 'ecm_len', '[', 'i', ']', ')', ';', 's', '->', 'ecm_current_tx_frame', '=', 'i', '+', '1', ';', 's', '->', 'ecm_frames_this_tx_burst', '++', ';', 'return', '0', ';', '}', '}', 's', '->', 'ecm_current_tx_frame', '=', 's', '->', 'ecm_frames', ';', '}', 'if', '(', 's', '->', 'ecm_current_tx_frame', '<=', 's', '->', 'ecm_frames', '+', '3', ')', '{', '/', '*', 'We', 'have', 'sent', 'all', 'the', 'FCD', 'frames', '.', 'Send', 'some', 'RCP', 'frames', '.', 'Three', 'seems', 'to', 'a', 'popular', 'number', ',', 'to', 'minimise', 'the', 'risk', 'of', 'a', 'bit', 'error', 'stopping', 'the', 's', '->', 'ecm_current_tx_frame', '++', ';', '/', '*', 'The', 'RCP', 'frame', 'is', 'an', 'odd', 'man', 'out', ',', 'as', 'its', 'a', 'simple', '1', 'byte', 'frame', ',', 'but', 'is', 'specified', 'to', 'not', 'have', 'the', 'final', 'bit', 'set', '.', 'It', 'frame', '[', '0', ']', '=', '0xFF', ';', 'frame', '[', '1', ']', '=', '0x03', ';', 'frame', '[', '2', ']', '=', 'T4_RCP', ';', 'send_frame', '(', 's', ',', 'frame', ',', '3', ')', ';', 's', '->', 'short_train', '=', 'TRUE', ';', 'return', '0', ';', '}', 'return', '-', '1', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
123,"['ParseSwallow', '(', 'char', '*', '*', 'ss', ',', 'unsigned', 'int', '*', 'flags', ',', 'unsigned', 'int', '*', 'mask', ',', 'button_info', '*', 'b', ')', '{', 'char', '*', 'swallowopts', '[', ']', '=', '{', '""""', ',', '""""', ',', '""""', ',', '""""', ',', '""""', ',', '""""', ',', '""""', ',', '""""', ',', '""""', ',', '""""', ',', '""""', ',', '""""', ',', '""""', ',', '""""', ',', '""""', ',', '}', ';', 'char', '*', 't', ',', '*', 's', '=', '*', 'ss', ';', 'while', '(', '*', 's', '&&', '*', 's', '!=', ""''"", ')', '{', 's', '=', 'trimleft', '(', 's', ')', ';', 'if', '(', '*', 's', '==', ""''"", ')', '{', 's', '++', ';', 'continue', ';', '}', 'switch', '(', 'GetTokenIndex', '(', 's', ',', 'swallowopts', ',', '-', '1', ',', '&', 's', ')', ')', '{', '*', 'flags', '|=', 'b_NoHints', ';', '*', 'mask', '|=', 'b_NoHints', ';', 'break', ';', '*', 'flags', '&=', '~b_NoHints', ';', '*', 'mask', '|=', 'b_NoHints', ';', 'break', ';', '*', 'flags', '&=', '~b_Kill', ';', '*', 'mask', '|=', 'b_Kill', ';', 'break', ';', '*', 'flags', '|=', 'b_Kill', ';', '*', 'mask', '|=', 'b_Kill', ';', 'break', ';', '*', 'flags', '|=', 'b_NoClose', ';', '*', 'mask', '|=', 'b_NoClose', ';', 'break', ';', '*', 'flags', '&=', '~b_NoClose', ';', '*', 'mask', '|=', 'b_NoClose', ';', 'break', ';', '*', 'flags', '|=', 'b_Respawn', ';', '*', 'mask', '|=', 'b_Respawn', ';', 'b', '->', 'newflags', '.', 'do_swallow_new', '=', '0', ';', 'break', ';', '*', 'flags', '&=', '~b_Respawn', ';', '*', 'mask', '|=', 'b_Respawn', ';', 'b', '->', 'newflags', '.', 'do_swallow_new', '=', '0', ';', 'break', ';', '*', 'flags', '|=', 'b_UseOld', ';', '*', 'mask', '|=', 'b_UseOld', ';', 'break', ';', '*', 'flags', '&=', '~b_UseOld', ';', '*', 'mask', '|=', 'b_UseOld', ';', 'break', ';', '*', 'flags', '|=', 'b_UseTitle', ';', '*', 'mask', '|=', 'b_UseTitle', ';', 'break', ';', '*', 'flags', '&=', '~b_UseTitle', ';', '*', 'mask', '|=', 'b_UseTitle', ';', 'break', ';', '*', 'flags', '|=', 'b_FvwmModule', ';', '*', 'mask', '|=', 'b_FvwmModule', ';', 'break', ';', '*', 'flags', '&=', '~b_FvwmModule', ';', '*', 'mask', '|=', 'b_FvwmModule', ';', 'break', ';', '*', 'flags', '&=', '~b_Respawn', ';', '*', 'mask', '|=', 'b_Respawn', ';', 'b', '->', 'newflags', '.', 'do_swallow_new', '=', '1', ';', 'break', ';', 'default', ':', 't', '=', 'seekright', '(', '&', 's', ')', ';', 'fprintf', '(', 'stderr', ',', '""""', '%', 's\\""""', ',', 'MyName', ',', '(', 't', ')', '?', 't', ':', '""""', ')', ';', 'if', '(', 't', ')', '{', 'free', '(', 't', ')', ';', '}', '}', '}', 'if', '(', '*', 's', ')', '{', 's', '++', ';', '}', '*', 'ss', '=', 's', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
124,"['do_redirect', '(', 'action_list_t', '*', 'a', ',', 'const', 'char', '*', 'addr', ',', 'int', 'cancel_keep', ')', '{', 'action_list_t', '*', 'b', '=', 'NULL', ';', 'while', '(', 'a', '!=', 'NULL', ')', '{', 'b', '=', 'a', ';', 'if', '(', 'a', '->', 'a', '==', 'ACTION_REJECT', ')', 'return', 'SIEVE_RUN_ERROR', ';', 'a', '=', 'a', '->', 'next', ';', '}', 'a', '=', '(', 'action_list_t', '*', ')', 'xmalloc', '(', 'sizeof', '(', 'action_list_t', ')', ')', ';', 'if', '(', 'a', '==', 'NULL', ')', 'return', 'SIEVE_NOMEM', ';', 'a', '->', 'a', '=', 'ACTION_REDIRECT', ';', 'a', '->', 'cancel_keep', '=', 'cancel_keep', ';', 'a', '->', 'u', '.', 'red', '.', 'addr', '=', 'addr', ';', 'a', '->', 'next', '=', 'NULL', ';', 'b', '->', 'next', '=', 'a', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
125,"['free_server', '(', 'aServer', '*', 'serv', ')', '{', 'aClient', '*', 'cptr', '=', 'serv', '->', 'bcptr', ';', 'if', '(', '--', 'serv', '->', 'refcnt', '<=', '0', ')', '{', 'if', '(', 'serv', '->', 'refcnt', '==', '-', '211001', ')', '{', '/', '*', 'Loop', 'detected', ',', 'break', 'it', '.', 'sendto_flag', '(', 'SCH_DEBUG', ',', '""""', ',', 'serv', ',', 'serv', '->', 'namebuf', ')', ';', 'return', ';', '}', '/', '*', 'Decrease', '(', 'and', 'possibly', 'free', ')', 'refcnt', 'of', 'the', 'user', '*', 'of', 'who', 'connected', 'this', 'server', '.', 'if', '(', 'serv', '->', 'user', ')', '{', 'int', 'cnt', '=', 'serv', '->', 'refcnt', ';', 'free_user', '(', 'serv', '->', 'user', ')', ';', 'serv', '->', 'user', '=', 'NULL', ';', 'serv', '->', 'refcnt', '=', 'cnt', ';', '}', 'if', '(', 'serv', '->', 'refcnt', '<', '0', '||', '\tserv', '->', 'prevs', '||', 'serv', '->', 'nexts', '||', 'serv', '->', 'bcptr', '||', 'serv', '->', 'user', ')', '{', 'char', 'buf', '[', '512', ']', ';', 'sprintf', '(', 'buf', ',', '""""', ',', 'serv', '->', 'refcnt', ',', '(', 'void', '*', ')', 'serv', '->', 'prevs', ',', '(', 'void', '*', ')', 'serv', '->', 'nexts', ',', '(', 'void', '*', ')', 'serv', '->', 'user', ',', '(', 'void', '*', ')', 'serv', '->', 'bcptr', ',', '(', 'serv', '->', 'bcptr', ')', '?', 'serv', '->', 'bcptr', '->', 'name', ':', '""""', ')', ';', '#ifdef', 'dumpcore', '(', '""""', ',', 'cptr', ',', 'cptr', '?', 'cptr', '->', 'name', ':', '""""', ',', 'buf', ')', ';', 'servs', '.', 'inuse', '--', ';', 'sendto_flag', '(', 'SCH_ERROR', ',', '""""', ',', 'cptr', ',', 'cptr', '?', 'cptr', '->', 'name', ':', '""""', ',', 'buf', ')', ';', '}', 'MyFree', '(', 'serv', ')', ';', '}', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
126,"['e_bindings_shutdown', '(', 'void', ')', '{', 'E_FREE_LIST', '(', 'mouse_bindings', ',', '_e_bindings_mouse_free', ')', ';', 'E_FREE_LIST', '(', 'key_bindings', ',', '_e_bindings_key_free', ')', ';', 'E_FREE_LIST', '(', 'edge_bindings', ',', '_e_bindings_edge_free', ')', ';', 'E_FREE_LIST', '(', 'signal_bindings', ',', '_e_bindings_signal_free', ')', ';', 'E_FREE_LIST', '(', 'wheel_bindings', ',', '_e_bindings_wheel_free', ')', ';', 'E_FREE_LIST', '(', 'acpi_bindings', ',', '_e_bindings_acpi_free', ')', ';', 'if', '(', 'mapping_handler', ')', '{', 'ecore_event_handler_del', '(', 'mapping_handler', ')', ';', 'mapping_handler', '=', 'NULL', ';', '}', 'return', '1', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
127,"['parse_quota', '(', 'const', 'char', '*', 's', ',', 'uint64_t', '*', 'quota', ')', '{', '*', 'quota', '=', 'strtoull', '(', 's', ',', 'NULL', ',', '10', ')', ';', '#ifdef', 'printf', '(', '""""', ',', '*', 'quota', ')', ';', 'if', '(', '*', 'quota', '==', 'UINT64_MAX', ')', 'xtables_error', '(', 'PARAMETER_PROBLEM', ',', '""""', ',', 's', ')', ';', 'return', '1', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
128,"['iwl_mvm_add_int_sta_common', '(', 'struct', 'iwl_mvm', '*', 'mvm', ',', 'struct', 'iwl_mvm_int_sta', '*', 'sta', ',', 'const', 'u8', '*', 'addr', ',', 'u16', 'mac_id', ',', 'u16', 'color', ')', '{', 'struct', 'iwl_mvm_add_sta_cmd', 'cmd', ';', 'int', 'ret', ';', 'u32', 'status', ';', 'lockdep_assert_held', '(', '&', 'mvm', '->', 'mutex', ')', ';', 'memset', '(', '&', 'cmd', ',', '0', ',', 'sizeof', '(', 'cmd', ')', ')', ';', 'cmd', '.', 'sta_id', '=', 'sta', '->', 'sta_id', ';', 'cmd', '.', 'mac_id_n_color', '=', 'cpu_to_le32', '(', 'FW_CMD_ID_AND_COLOR', '(', 'mac_id', ',', 'color', ')', ')', ';', 'cmd', '.', 'tfd_queue_msk', '=', 'cpu_to_le32', '(', 'sta', '->', 'tfd_queue_msk', ')', ';', 'if', '(', 'addr', ')', 'memcpy', '(', 'cmd', '.', 'addr', ',', 'addr', ',', 'ETH_ALEN', ')', ';', 'ret', '=', 'iwl_mvm_send_cmd_pdu_status', '(', 'mvm', ',', 'ADD_STA', ',', 'sizeof', '(', 'cmd', ')', ',', '&', 'cmd', ',', '&', 'status', ')', ';', 'if', '(', 'ret', ')', 'return', 'ret', ';', 'switch', '(', 'status', ')', '{', 'case', 'ADD_STA_SUCCESS', ':', 'IWL_DEBUG_INFO', '(', 'mvm', ',', '""""', ')', ';', 'return', '0', ';', 'default', ':', 'ret', '=', '-', 'EIO', ';', 'IWL_ERR', '(', 'mvm', ',', '""""', ',', 'status', ')', ';', 'break', ';', '}', 'return', 'ret', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
129,"['matroska_aac_profile', '(', 'char', '*', 'codec_id', ')', '{', 'static', 'const', 'char', '*', 'const', 'aac_profiles', '[', ']', '=', '{', '""""', ',', '""""', ',', '""""', '}', ';', 'int', 'profile', ';', 'for', '(', 'profile', '=', '0', ';', 'profile', '<', 'FF_ARRAY_ELEMS', '(', 'aac_profiles', ')', ';', 'profile', '++', ')', 'if', '(', 'strstr', '(', 'codec_id', ',', 'aac_profiles', '[', 'profile', ']', ')', ')', 'break', ';', 'return', 'profile', '+', '1', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
130,"['ds_strcat', '(', 'struct', 'dstring', '*', 's', ',', 'char', '*', 't', ')', '{', 'size_t', 'len', '=', 's', '->', 'len', ';', 's', '->', 'len', '+=', 'strlen', '(', 't', ')', ';', 'if', '(', 'ds_is_full', '(', 's', ')', ')', 'ds_grow', '(', 's', ')', ';', 'strcpy', '(', 's', '->', 'content', '+', 'len', ',', 't', ')', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
131,"['mystrdup', '(', 'char', '*', 's', ')', '{', 'char', '*', 'dup', ';', 'if', '(', '!s', ')', 'return', '0', ';', 'if', '(', '(', 'dup', '=', 'MALLOC', '(', 'strlen', '(', 's', ')', '+', '1', ')', ')', '==', 'NULL', ')', 'syserr', '(', '""""', ')', ';', 'strcpy', '(', 'dup', ',', 's', ')', ';', 'return', 'dup', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
132,"['dfs_file_write', '(', 'struct', 'file', '*', 'file', ',', 'const', 'char', '__user', '*', 'user_buf', ',', 'size_t', 'count', ',', 'loff_t', '*', 'ppos', ')', '{', 'unsigned', 'long', 'ubi_num', '=', '(', 'unsigned', 'long', ')', 'file', '->', 'private_data', ';', 'struct', 'dentry', '*', 'dent', '=', 'file', '->', 'f_path', '.', 'dentry', ';', 'struct', 'ubi_device', '*', 'ubi', ';', 'struct', 'ubi_debug_info', '*', 'd', ';', 'size_t', 'buf_size', ';', 'char', 'buf', '[', '8', ']', '=', '{', '0', '}', ';', 'int', 'val', ';', 'ubi', '=', 'ubi_get_device', '(', 'ubi_num', ')', ';', 'if', '(', '!ubi', ')', 'return', '-', 'ENODEV', ';', 'd', '=', '&', 'ubi', '->', 'dbg', ';', 'buf_size', '=', 'min_t', '(', 'size_t', ',', 'count', ',', '(', 'sizeof', '(', 'buf', ')', '-', '1', ')', ')', ';', 'if', '(', 'copy_from_user', '(', 'buf', ',', 'user_buf', ',', 'buf_size', ')', ')', '{', 'count', '=', '-', 'EFAULT', ';', 'goto', 'out', ';', '}', 'if', '(', 'dent', '==', 'd', '->', 'dfs_power_cut_min', ')', '{', 'if', '(', 'kstrtouint', '(', 'buf', ',', '0', ',', '&', 'd', '->', 'power_cut_min', ')', '!=', '0', ')', 'count', '=', '-', 'EINVAL', ';', 'goto', 'out', ';', '}', 'else', 'if', '(', 'dent', '==', 'd', '->', 'dfs_power_cut_max', ')', '{', 'if', '(', 'kstrtouint', '(', 'buf', ',', '0', ',', '&', 'd', '->', 'power_cut_max', ')', '!=', '0', ')', 'count', '=', '-', 'EINVAL', ';', 'goto', 'out', ';', '}', 'else', 'if', '(', 'dent', '==', 'd', '->', 'dfs_emulate_power_cut', ')', '{', 'if', '(', 'kstrtoint', '(', 'buf', ',', '0', ',', '&', 'val', ')', '!=', '0', ')', 'count', '=', '-', 'EINVAL', ';', 'd', '->', 'emulate_power_cut', '=', 'val', ';', 'goto', 'out', ';', '}', 'if', '(', 'buf', '[', '0', ']', '==', ""''"", ')', 'val', '=', '1', ';', 'else', 'if', '(', 'buf', '[', '0', ']', '==', ""''"", ')', 'val', '=', '0', ';', 'else', '{', 'count', '=', '-', 'EINVAL', ';', 'goto', 'out', ';', '}', 'if', '(', 'dent', '==', 'd', '->', 'dfs_chk_gen', ')', 'd', '->', 'chk_gen', '=', 'val', ';', 'else', 'if', '(', 'dent', '==', 'd', '->', 'dfs_chk_io', ')', 'd', '->', 'chk_io', '=', 'val', ';', 'else', 'if', '(', 'dent', '==', 'd', '->', 'dfs_chk_fastmap', ')', 'd', '->', 'chk_fastmap', '=', 'val', ';', 'else', 'if', '(', 'dent', '==', 'd', '->', 'dfs_disable_bgt', ')', 'd', '->', 'disable_bgt', '=', 'val', ';', 'else', 'if', '(', 'dent', '==', 'd', '->', 'dfs_emulate_bitflips', ')', 'd', '->', 'emulate_bitflips', '=', 'val', ';', 'else', 'if', '(', 'dent', '==', 'd', '->', 'dfs_emulate_io_failures', ')', 'd', '->', 'emulate_io_failures', '=', 'val', ';', 'count', '=', '-', 'EINVAL', ';', 'out', ':', 'ubi_put_device', '(', 'ubi', ')', ';', 'return', 'count', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
133,"['get_filename', '(', 'char', '*', 'vfilename', ',', 'char', '*', 'filename', ',', 'char', '*', 'directive', ',', 'char', '*', 'tag', ',', 'char', '*', 'val', ',', 'char', '*', 'fn', ',', 'int', 'fnsize', ')', '{', 'int', 'vl', ',', 'fl', ';', 'char', '*', 'cp', ';', '/', '*', 'Used', 'for', 'the', 'various', 'commands', 'that', 'accept', 'a', 'file', 'name', '.', '*', '*', 'These', 'commands', 'accept', 'two', 'tags', ':', '*', '*', '*', '*', 'Gives', 'a', 'virtual', 'path', 'to', 'a', 'document', 'on', 'the', 'server', '.', '*', '*', '*', '*', 'Gives', 'a', 'pathname', 'relative', 'to', 'the', 'current', 'directory', '.', '.', '.', '/', '*', '*', 'be', 'used', 'in', 'this', 'pathname', ',', 'nor', 'can', 'absolute', 'paths', 'be', 'used', '.', 'vl', '=', 'strlen', '(', 'vfilename', ')', ';', 'fl', '=', 'strlen', '(', 'filename', ')', ';', 'if', '(', 'strcmp', '(', 'tag', ',', '""""', ')', '==', '0', ')', '{', 'if', '(', 'strstr', '(', 'val', ',', '""""', ')', '!=', '(', 'char', '*', ')', '0', ')', '{', 'not_permitted', '(', 'directive', ',', 'tag', ',', 'val', ')', ';', 'return', '-', '1', ';', '}', 'if', '(', 'vl', '>', 'fl', '||', 'strcmp', '(', 'vfilename', ',', '&', 'filename', '[', 'fl', '-', 'vl', ']', ')', '!=', '0', ')', 'return', '-', '1', ';', 'if', '(', 'fl', '-', 'vl', '+', 'strlen', '(', 'val', ')', '>=', 'fnsize', ')', 'return', '-', '1', ';', '(', 'void', ')', 'strncpy', '(', 'fn', ',', 'filename', ',', 'fl', '-', 'vl', ')', ';', '(', 'void', ')', 'strcpy', '(', '&', 'fn', '[', 'fl', '-', 'vl', ']', ',', 'val', ')', ';', '}', 'else', 'if', '(', 'strcmp', '(', 'tag', ',', '""""', ')', '==', '0', ')', '{', 'if', '(', 'val', '[', '0', ']', '==', ""''"", '||', 'strstr', '(', 'val', ',', '""""', ')', '!=', '(', 'char', '*', ')', '0', ')', '{', 'not_permitted', '(', 'directive', ',', 'tag', ',', 'val', ')', ';', 'return', '-', '1', ';', '}', 'if', '(', 'fl', '+', '1', '+', 'strlen', '(', 'val', ')', '>=', 'fnsize', ')', 'return', '-', '1', ';', '(', 'void', ')', 'strcpy', '(', 'fn', ',', 'filename', ')', ';', 'cp', '=', 'strrchr', '(', 'fn', ',', ""''"", ')', ';', 'if', '(', 'cp', '==', '(', 'char', '*', ')', '0', ')', '{', 'cp', '=', '&', 'fn', '[', 'strlen', '(', 'fn', ')', ']', ';', '*', 'cp', '=', ""''"", ';', '}', '(', 'void', ')', 'strcpy', '(', '++', 'cp', ',', 'val', ')', ';', '}', '{', 'unknown_tag', '(', 'filename', ',', 'directive', ',', 'tag', ')', ';', 'return', '-', '1', ';', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
134,"['suspend_nvs_alloc', '(', 'void', ')', '{', 'struct', 'nvs_page', '*', 'entry', ';', 'list_for_each_entry', '(', 'entry', ',', '&', 'nvs_list', ',', 'node', ')', '{', 'entry', '->', 'data', '=', '(', 'void', '*', ')', '__get_free_page', '(', 'GFP_KERNEL', ')', ';', 'if', '(', '!entry', '->', 'data', ')', '{', 'suspend_nvs_free', '(', ')', ';', 'return', '-', 'ENOMEM', ';', '}', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
135,"['drbd_bm_init', '(', 'struct', 'drbd_device', '*', 'device', ')', '{', 'struct', 'drbd_bitmap', '*', 'b', '=', 'device', '->', 'bitmap', ';', 'WARN_ON', '(', 'b', '!=', 'NULL', ')', ';', 'b', '=', 'kzalloc', '(', 'sizeof', '(', 'struct', 'drbd_bitmap', ')', ',', 'GFP_KERNEL', ')', ';', 'if', '(', '!b', ')', 'return', '-', 'ENOMEM', ';', 'spin_lock_init', '(', '&', 'b', '->', 'bm_lock', ')', ';', 'mutex_init', '(', '&', 'b', '->', 'bm_change', ')', ';', 'init_waitqueue_head', '(', '&', 'b', '->', 'bm_io_wait', ')', ';', 'device', '->', 'bitmap', '=', 'b', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
136,"['mcontour', '(', 'header', '*', 'hd', ')', '/', '*', '*', '*', '*', '*', 'contour', 'plot', 'with', 'matrix', 'and', 'vector', 'intput', '.', '{', '\theader', '*', 'st', '=', 'hd', ',', '*', 'result', ',', '*', 'hd1', ';', 'double', '*', 'm', ',', '*', 'mv', ',', 'x', '[', '5', ']', ';', 'int', 'r', ',', 'c', ',', 'cv', ',', 'dummy', ',', 'i', ',', 'j', ';', 'hd', '=', 'getvalue', '(', 'hd', ')', ';', 'if', '(', 'error', ')', 'return', ';', 'if', '(', 'hd', '->', 'type', '!=', 's_matrix', '||', 'dimsof', '(', 'hd', ')', '->', 'c', '<', '2', '||', 'dimsof', '(', 'hd', ')', '->', 'r', '<', '2', ')', '{', '\toutput', '(', '""""', ')', ';', 'error', '=', '81', ';', 'return', ';', '}', 'hd1', '=', 'next_param', '(', 'st', ')', ';', 'if', '(', 'error', ')', 'return', ';', 'hd1', '=', 'getvalue', '(', 'hd1', ')', ';', 'if', '(', 'error', ')', 'return', ';', 'if', '(', 'hd1', '->', 'type', '!=', 's_real', ')', 'if', '(', 'hd1', '->', 'type', '!=', 's_matrix', '||', 'dimsof', '(', 'hd1', ')', '->', 'r', '!=', '1', ')', '{', '\toutput', '(', '""""', ')', ';', 'error', '=', '82', ';', 'return', ';', '}', 'getmatrix', '(', 'hd', ',', '&', 'r', ',', '&', 'c', ',', '&', 'm', ')', ';', 'getmatrix', '(', 'hd1', ',', '&', 'dummy', ',', '&', 'cv', ',', '&', 'mv', ')', ';', 'graphic_mode', '(', ')', ';', 'if', '(', '!holding', ')', 'gclear', '(', ')', ';', 'frame', '(', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'r', '-', '1', ';', 'i', '++', ')', '{', '\tfor', '(', 'j', '=', '0', ';', 'j', '<', 'c', '-', '1', ';', 'j', '++', ')', '{', '\tx', '[', '0', ']', '=', '*', 'mat', '(', 'm', ',', 'c', ',', 'i', ',', 'j', ')', ';', 'x', '[', '1', ']', '=', '*', 'mat', '(', 'm', ',', 'c', ',', 'i', '+', '1', ',', 'j', ')', ';', 'x', '[', '2', ']', '=', '*', 'mat', '(', 'm', ',', 'c', ',', 'i', '+', '1', ',', 'j', '+', '1', ')', ';', 'x', '[', '3', ']', '=', '*', 'mat', '(', 'm', ',', 'c', ',', 'i', ',', 'j', '+', '1', ')', ';', 'x', '[', '4', ']', '=', 'x', '[', '0', ']', ';', 'contour', '(', 'x', ',', 'i', ',', 'j', ',', 'c', '-', '1', ',', 'r', '-', '1', ',', 'mv', ',', 'cv', ')', ';', '}', 'if', '(', 'test_key', '(', ')', '==', 'escape', ')', '{', '\toutput', '(', '""""', ')', ';', 'error', '=', '1', ';', 'gflush', '(', ')', ';', 'return', ';', '}', '}', 'result', '=', 'new_real', '(', 'cv', ',', '""""', ')', ';', 'moveresult', '(', 'st', ',', 'result', ')', ';', 'gflush', '(', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
137,"['iosf_mbi_pci_write_mdr', '(', 'u32', 'mcrx', ',', 'u32', 'mcr', ',', 'u32', 'mdr', ')', '{', 'int', 'result', ';', 'if', '(', '!mbi_pdev', ')', 'return', '-', 'ENODEV', ';', 'result', '=', 'pci_write_config_dword', '(', 'mbi_pdev', ',', 'MBI_MDR_OFFSET', ',', 'mdr', ')', ';', 'if', '(', 'result', '<', '0', ')', 'goto', 'fail_write', ';', 'if', '(', 'mcrx', ')', '{', 'result', '=', 'pci_write_config_dword', '(', 'mbi_pdev', ',', 'MBI_MCRX_OFFSET', ',', 'mcrx', ')', ';', 'if', '(', 'result', '<', '0', ')', 'goto', 'fail_write', ';', '}', 'result', '=', 'pci_write_config_dword', '(', 'mbi_pdev', ',', 'MBI_MCR_OFFSET', ',', 'mcr', ')', ';', 'if', '(', 'result', '<', '0', ')', 'goto', 'fail_write', ';', 'return', '0', ';', 'fail_write', ':', 'dev_err', '(', '&', 'mbi_pdev', '->', 'dev', ',', '""""', ',', 'result', ')', ';', 'return', 'result', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
138,"['log_message_level', '(', 'int', 'level', ',', 'const', 'char', '*', 'fmt', ',', '.', '.', '.', ')', '{', 'int', 'log_level', '=', 'global', '.', 'logLevel', ';', 'if', '(', '(', 'level', '&', 'log_level', ')', '&&', 'level', '!=', '0', ')', '{', 'va_list', 'ap', ';', 'char', 'buf', '[', '1024', ']', ';', 'int', 'len', ';', 'char', '*', 'msg', ';', 'snprintf', '(', 'buf', '+', '4', ',', 'sizeof', '(', 'buf', ')', '-', '4', ',', '""""', ',', 'global', '.', 'serverName', ')', ';', 'len', '=', 'strlen', '(', 'buf', '+', '4', ')', ';', 'msg', '=', 'buf', '+', 'len', '+', '4', ';', 'va_start', '(', 'ap', ',', 'fmt', ')', ';', 'vsnprintf', '(', 'buf', '+', '4', '+', 'len', ',', 'sizeof', '(', 'buf', ')', '-', '4', '-', 'len', ',', 'fmt', ',', 'ap', ')', ';', 'va_end', '(', 'ap', ')', ';', '#if', 'if', '(', '!Logging', ')', '{', 'len', '+=', 'strlen', '(', 'buf', '+', '4', '+', 'len', ')', ';', 'set_tag', '(', 'buf', ',', 'MSG_SERVER_PUBLIC', ')', ';', 'set_len', '(', 'buf', ',', 'len', ')', ';', 'Logging', '=', '1', ';', '(', 'void', ')', 'send_to_channel', '(', '""""', ',', 'buf', ',', 'len', '+', '4', ')', ';', 'Logging', '=', '0', ';', '}', 'if', '(', 'option', '(', 'ON_LOG_STDOUT', ')', ')', '{', 'char', 'timebuf', '[', '64', ']', ';', 'time_t', 'curtime', ';', 'struct', 'tm', '*', 'loctime', ';', 'curtime', '=', 'time', '(', 'NULL', ')', ';', 'loctime', '=', 'localtime', '(', '&', 'curtime', ')', ';', 'strftime', '(', 'timebuf', ',', '64', ',', '""""', ',', 'loctime', ')', ';', 'fputs', '(', 'timebuf', ',', 'stdout', ')', ';', 'fputs', '(', 'msg', ',', 'stdout', ')', ';', 'fputc', '(', ""''"", ',', 'stdout', ')', ';', 'fflush', '(', 'stdout', ')', ';', '}', '}', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
139,"['gf_af_new', '(', 'GF_Compositor', '*', 'compositor', ',', 'GF_AudioInterface', '*', 'src', ',', 'char', '*', 'filter_name', ')', '{', 'GF_AudioFilterItem', '*', 'filter', ';', 'if', '(', '!src', '||', '!filter_name', ')', 'return', 'NULL', ';', 'GF_SAFEALLOC', '(', 'filter', ',', 'GF_AudioFilterItem', ')', ';', 'filter', '->', 'src', '=', 'src', ';', 'filter', '->', 'input', '.', 'FetchFrame', '=', 'gf_af_fetch_frame', ';', 'filter', '->', 'input', '.', 'ReleaseFrame', '=', 'gf_af_release_frame', ';', 'filter', '->', 'input', '.', 'GetSpeed', '=', 'gf_af_get_speed', ';', 'filter', '->', 'input', '.', 'GetChannelVolume', '=', 'gf_af_get_channel_volume', ';', 'filter', '->', 'input', '.', 'IsMuted', '=', 'gf_af_is_muted', ';', 'filter', '->', 'input', '.', 'GetConfig', '=', 'gf_af_get_config', ';', 'filter', '->', 'input', '.', 'callback', '=', 'filter', ';', 'gf_afc_load', '(', '&', 'filter', '->', 'filter_chain', ',', 'compositor', '->', 'user', ',', 'filter_name', ')', ';', 'return', 'filter', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
140,"['ExtractInternalReferences', '(', 'JSObject', '*', 'js_obj', ',', 'HeapEntry', '*', 'entry', ')', '{', 'int', 'length', '=', 'js_obj', '->', 'GetInternalFieldCount', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'length', ';', '++', 'i', ')', '{', 'Object', '*', 'o', '=', 'js_obj', '->', 'GetInternalField', '(', 'i', ')', ';', 'SetInternalReference', '(', 'js_obj', ',', 'entry', ',', 'i', ',', 'o', ',', 'js_obj', '->', 'GetInternalFieldOffset', '(', 'i', ')', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
141,"['enterprise_add_realm', '(', 'UmAccountDialog', '*', 'self', ',', 'UmRealmObject', '*', 'realm', ')', '{', 'GtkTreeModel', '*', 'model', ';', 'GtkTreeIter', 'iter', ';', 'UmRealmCommon', '*', 'common', ';', 'const', 'gchar', '*', 'realm_name', ';', 'gboolean', 'match', ';', 'gboolean', 'ret', ';', 'gchar', '*', 'name', ';', 'common', '=', 'um_realm_object_get_common', '(', 'realm', ')', ';', 'realm_name', '=', 'um_realm_common_get_name', '(', 'common', ')', ';', '/', '*', '*', ""Don't"", 'add', 'a', 'second', 'realm', 'if', 'we', 'already', 'have', 'one', 'with', 'this', 'name', '.', '*', 'Sometimes', 'realmd', 'returns', 'to', 'realms', 'for', 'the', 'same', 'name', ',', 'if', 'it', '*', 'different', 'ways', 'to', 'use', 'that', 'realm', '.', 'The', 'first', 'one', 'that', '*', 'returns', 'is', 'the', 'one', 'it', 'prefers', '.', 'model', '=', 'GTK_TREE_MODEL', '(', 'self', '->', 'enterprise_realms', ')', ';', 'ret', '=', 'gtk_tree_model_get_iter_first', '(', 'model', ',', '&', 'iter', ')', ';', 'while', '(', 'ret', ')', '{', 'gtk_tree_model_get', '(', 'model', ',', '&', 'iter', ',', '0', ',', '&', 'name', ',', '-', '1', ')', ';', 'match', '=', '(', 'g_strcmp0', '(', 'name', ',', 'realm_name', ')', '==', '0', ')', ';', 'g_free', '(', 'name', ')', ';', 'if', '(', 'match', ')', '{', 'g_debug', '(', '""""', ',', 'realm_name', ')', ';', 'return', ';', '}', 'ret', '=', 'gtk_tree_model_iter_next', '(', 'model', ',', '&', 'iter', ')', ';', '}', 'gtk_list_store_append', '(', 'self', '->', 'enterprise_realms', ',', '&', 'iter', ')', ';', 'gtk_list_store_set', '(', 'self', '->', 'enterprise_realms', ',', '&', 'iter', ',', '0', ',', 'realm_name', ',', '1', ',', 'realm', ',', '-', '1', ')', ';', 'g_debug', '(', '""""', ',', 'realm_name', ',', 'g_dbus_object_get_object_path', '(', 'G_DBUS_OBJECT', '(', 'realm', ')', ')', ')', ';', 'if', '(', '!self', '->', 'enterprise_domain_chosen', '&&', 'um_realm_is_configured', '(', 'realm', ')', ')', 'gtk_combo_box_set_active_iter', '(', 'self', '->', 'enterprise_domain', ',', '&', 'iter', ')', ';', 'g_object_unref', '(', 'common', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
142,"['stripe_mkdir', '(', 'call_frame_t', '*', 'frame', ',', 'xlator_t', '*', 'this', ',', 'loc_t', '*', 'loc', ',', 'mode_t', 'mode', ',', 'dict_t', '*', 'params', ')', '{', 'stripe_private_t', '*', 'priv', '=', 'NULL', ';', 'stripe_local_t', '*', 'local', '=', 'NULL', ';', 'xlator_list_t', '*', 'trav', '=', 'NULL', ';', 'int32_t', 'op_errno', '=', '1', ';', 'VALIDATE_OR_GOTO', '(', 'frame', ',', 'err', ')', ';', 'VALIDATE_OR_GOTO', '(', 'this', ',', 'err', ')', ';', 'VALIDATE_OR_GOTO', '(', 'loc', ',', 'err', ')', ';', 'VALIDATE_OR_GOTO', '(', 'loc', '->', 'path', ',', 'err', ')', ';', 'VALIDATE_OR_GOTO', '(', 'loc', '->', 'inode', ',', 'err', ')', ';', 'priv', '=', 'this', '->', 'private', ';', 'trav', '=', 'this', '->', 'children', ';', 'if', '(', 'priv', '->', 'first_child_down', ')', '{', 'op_errno', '=', 'ENOTCONN', ';', 'goto', 'err', ';', '}', 'local', '=', 'GF_CALLOC', '(', '1', ',', 'sizeof', '(', 'stripe_local_t', ')', ',', 'gf_stripe_mt_stripe_local_t', ')', ';', 'if', '(', '!local', ')', '{', 'op_errno', '=', 'ENOMEM', ';', 'goto', 'err', ';', '}', 'local', '->', 'op_ret', '=', '-', '1', ';', 'local', '->', 'call_count', '=', 'priv', '->', 'child_count', ';', 'local', '->', 'dict', '=', 'dict_ref', '(', 'params', ')', ';', 'local', '->', 'mode', '=', 'mode', ';', 'loc_copy', '(', '&', 'local', '->', 'loc', ',', 'loc', ')', ';', 'frame', '->', 'local', '=', 'local', ';', 'STACK_WIND', '(', 'frame', ',', 'stripe_first_mkdir_cbk', ',', 'trav', '->', 'xlator', ',', 'trav', '->', 'xlator', '->', 'fops', '->', 'mkdir', ',', 'loc', ',', 'mode', ',', 'params', ')', ';', 'return', '0', ';', 'err', ':', 'STRIPE_STACK_UNWIND', '(', 'mkdir', ',', 'frame', ',', '-', '1', ',', 'op_errno', ',', 'NULL', ',', 'NULL', ',', 'NULL', ',', 'NULL', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
143,"['nfs_iob_get_fh', '(', 'struct', 'io_buffer', '*', 'io_buf', ',', 'struct', 'nfs_fh', '*', 'fh', ')', '{', 'fh', '->', 'size', '=', 'oncrpc_iob_get_int', '(', 'io_buf', ')', ';', 'if', '(', 'fh', '->', 'size', '>', '64', ')', 'return', 'sizeof', '(', 'uint32_t', ')', ';', 'memcpy', '(', 'fh', '->', 'fh', ',', 'io_buf', '->', 'data', ',', 'fh', '->', 'size', ')', ';', 'iob_pull', '(', 'io_buf', ',', 'fh', '->', 'size', ')', ';', 'return', 'fh', '->', 'size', '+', 'sizeof', '(', 'uint32_t', ')', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
144,"['mxl111sf_i2c_stop', '(', 'struct', 'mxl111sf_state', '*', 'state', ')', '{', 'int', 'ret', ';', 'mxl_i2c', '(', '""""', ')', ';', 'ret', '=', 'mxl111sf_write_reg', '(', 'state', ',', 'SW_I2C_ADDR', ',', 'if', '(', 'mxl_fail', '(', 'ret', ')', ')', 'goto', 'fail', ';', 'ret', '=', 'mxl111sf_write_reg', '(', 'state', ',', 'SW_I2C_ADDR', ',', '0x10', '|', 'SW_I2C_EN', '|', 'SW_SCL_OUT', ')', ';', 'if', '(', 'mxl_fail', '(', 'ret', ')', ')', 'goto', 'fail', ';', 'ret', '=', 'mxl111sf_write_reg', '(', 'state', ',', 'SW_I2C_ADDR', ',', '0x10', '|', 'SW_I2C_EN', '|', 'SW_SCL_OUT', '|', 'SW_SDA_OUT', ')', ';', 'if', '(', 'mxl_fail', '(', 'ret', ')', ')', 'goto', 'fail', ';', 'ret', '=', 'mxl111sf_write_reg', '(', 'state', ',', 'SW_I2C_ADDR', ',', '0x10', '|', 'SW_SCL_OUT', '|', 'SW_SDA_OUT', ')', ';', 'mxl_fail', '(', 'ret', ')', ';', 'fail', ':', 'return', 'ret', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
145,"['oppositeBorderPositionWithPoints', '(', 'const', 'int', 'borderPosition', ',', 'QList', '<', 'int', '>', '&', 'points', ')', '{', '/', '/', '1', '.', 'Conversion', 'int', 'position', '[', 'DIM_MAX', ']', ';', 'borderPositionToAbsolutePosition', '(', 'borderPosition', ',', 'position', ')', ';', '/', '/', '2', '.', 'Get', 'start', 'int', 'direction', '[', 'DIM_MAX', ']', ';', 'if', '(', 'borderPosition', '<', 'm_columns', ')', '{', 'direction', '[', 'DIM_X', ']', '=', '0', ';', 'direction', '[', 'DIM_Y', ']', '=', '1', ';', '}', 'else', 'if', '(', '(', 'borderPosition', '>=', 'm_columns', ')', '&&', '(', 'borderPosition', '<', 'm_columns', '+', 'm_rows', ')', ')', '{', 'direction', '[', 'DIM_X', ']', '=', '-', '1', ';', 'direction', '[', 'DIM_Y', ']', '=', '0', ';', '}', 'else', 'if', '(', '(', 'borderPosition', '>=', 'm_columns', '+', 'm_rows', ')', '&&', '(', 'borderPosition', '<', '2', '*', 'm_columns', '+', 'm_rows', ')', ')', '{', 'direction', '[', 'DIM_X', ']', '=', '0', ';', 'direction', '[', 'DIM_Y', ']', '=', '-', '1', ';', '}', 'else', 'if', '(', 'borderPosition', '>=', '2', '*', 'm_columns', '+', 'm_rows', ')', '{', 'direction', '[', 'DIM_X', ']', '=', '1', ';', 'direction', '[', 'DIM_Y', ']', '=', '0', ';', '}', '/', '/', '3', '.', 'Get', 'the', 'outgoing', '(', 'absolute', ')', 'getOutgoingPosition', '(', 'position', ',', 'direction', ',', 'points', ')', ';', '/', '/', '4', '.', 'Conversion', 'return', 'absolutePositionToBorderPosition', '(', 'position', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
146,"['gst_ring_buffer_delay', '(', 'GstRingBuffer', '*', 'buf', ')', '{', 'GstRingBufferClass', '*', 'rclass', ';', 'guint', 'res', ';', 'g_return_val_if_fail', '(', 'GST_IS_RING_BUFFER', '(', 'buf', ')', ',', '0', ')', ';', 'if', '(', 'G_UNLIKELY', '(', '!gst_ring_buffer_is_acquired', '(', 'buf', ')', ')', ')', 'goto', 'not_acquired', ';', 'rclass', '=', 'GST_RING_BUFFER_GET_CLASS', '(', 'buf', ')', ';', 'if', '(', 'G_LIKELY', '(', 'rclass', '->', 'delay', ')', ')', 'res', '=', 'rclass', '->', 'delay', '(', 'buf', ')', ';', 'res', '=', '0', ';', 'return', 'res', ';', 'not_acquired', ':', '{', 'GST_DEBUG_OBJECT', '(', 'buf', ',', '""""', ')', ';', 'return', '0', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
147,"['sftk_newPinCheck', '(', 'CK_CHAR_PTR', 'pPin', ',', 'CK_ULONG', 'ulPinLen', ')', '{', 'unsigned', 'int', 'i', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'ulPinLen', ';', 'i', '++', ')', '{', 'unsigned', 'int', 'byte', '=', 'pPin', '[', 'i', ']', ';', 'if', '(', 'ntrail', ')', '{', 'if', '(', '(', 'byte', '&', '0xc0', ')', '!=', '0x80', ')', '{', 'nchar', '=', '-', '1', ';', 'break', ';', '}', 'if', '(', '--', 'ntrail', '==', '0', ')', '{', 'nchar', '++', ';', 'nnonascii', '++', ';', '}', 'continue', ';', '}', 'if', '(', '(', 'byte', '&', '0x80', ')', '==', '0x00', ')', '{', 'nchar', '++', ';', 'if', '(', 'isdigit', '(', 'byte', ')', ')', '{', 'if', '(', 'i', '<', 'ulPinLen', '-', '1', ')', '{', 'ndigit', '++', ';', '}', '}', 'else', 'if', '(', 'islower', '(', 'byte', ')', ')', '{', 'nlower', '++', ';', '}', 'else', 'if', '(', 'isupper', '(', 'byte', ')', ')', '{', 'if', '(', 'i', '>', '0', ')', '{', 'nupper', '++', ';', '}', '}', 'else', '{', 'nnonalnum', '++', ';', '}', '}', 'else', 'if', '(', '(', 'byte', '&', '0xe0', ')', '==', '0xc0', ')', '{', 'ntrail', '=', '1', ';', '}', 'else', 'if', '(', '(', 'byte', '&', '0xf0', ')', '==', '0xe0', ')', '{', 'ntrail', '=', '2', ';', '}', 'else', 'if', '(', '(', 'byte', '&', '0xf8', ')', '==', '0xf0', ')', '{', 'ntrail', '=', '3', ';', '}', 'else', '{', 'nchar', '=', '-', '1', ';', 'break', ';', '}', '}', 'if', '(', 'nchar', '==', '-', '1', ')', '{', 'return', 'CKR_PIN_INVALID', ';', '}', 'if', '(', 'nchar', '<', 'FIPS_MIN_PIN', ')', '{', 'return', 'CKR_PIN_LEN_RANGE', ';', '}', 'nclass', '=', '(', 'ndigit', '!=', '0', ')', '+', '(', 'nlower', '!=', '0', ')', '+', '(', 'nupper', '!=', '0', ')', '+', '(', 'nnonalnum', '!=', '0', ')', '+', '(', 'nnonascii', '!=', '0', ')', ';', 'if', '(', 'nclass', '<', '3', ')', '{', 'return', 'CKR_PIN_LEN_RANGE', ';', '}', 'return', 'CKR_OK', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
148,"['SaveDefmethodsForDefgeneric', '(', 'void', '*', 'theEnv', ',', 'struct', 'constructHeader', '*', 'theDefgeneric', ',', 'void', '*', 'userBuffer', ')', '{', 'DEFGENERIC', '*', 'gfunc', '=', '(', 'DEFGENERIC', '*', ')', 'theDefgeneric', ';', 'char', '*', 'logName', '=', '(', 'char', '*', ')', 'userBuffer', ';', 'register', 'unsigned', 'i', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'gfunc', '->', 'mcnt', ';', 'i', '++', ')', '{', 'if', '(', 'gfunc', '->', 'methods', '[', 'i', ']', '.', 'ppForm', '!=', 'NULL', ')', '{', 'PrintInChunks', '(', 'theEnv', ',', 'logName', ',', 'gfunc', '->', 'methods', '[', 'i', ']', '.', 'ppForm', ')', ';', 'EnvPrintRouter', '(', 'theEnv', ',', 'logName', ',', '""""', ')', ';', '}', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
149,"['ath5k_hw_channel', '(', 'struct', 'ath5k_hw', '*', 'ah', ',', 'struct', 'net80211_channel', '*', 'channel', ')', '{', 'int', 'ret', ';', '/', '*', '*', 'Check', 'bounds', 'supported', 'by', 'the', 'PHY', '(', 'we', ""don't"", 'care', 'about', '*', 'restrictions', 'at', 'this', 'point', ')', '.', 'Note', ':', 'hw_value', 'already', 'has', 'the', '*', '(', 'CHANNEL_2GHZ', ',', 'or', 'CHANNEL_5GHZ', ')', 'so', 'we', 'inform', 'ath5k_channel_ok', '(', ')', 'if', '(', '!ath5k_channel_ok', '(', 'ah', ',', 'channel', '->', 'center_freq', ',', 'channel', '->', 'hw_value', ')', ')', '{', 'DBG', '(', '""""', ',', 'channel', '->', 'center_freq', ')', ';', 'return', '-', 'EINVAL', ';', '}', '/', '*', '*', 'Set', 'the', 'channel', 'and', 'switch', '(', 'ah', '->', 'ah_radio', ')', '{', 'case', 'AR5K_RF5110', ':', 'ret', '=', 'ath5k_hw_rf5110_channel', '(', 'ah', ',', 'channel', ')', ';', 'break', ';', 'case', 'AR5K_RF5111', ':', 'ret', '=', 'ath5k_hw_rf5111_channel', '(', 'ah', ',', 'channel', ')', ';', 'break', ';', 'case', 'AR5K_RF2425', ':', 'ret', '=', 'ath5k_hw_rf2425_channel', '(', 'ah', ',', 'channel', ')', ';', 'break', ';', 'default', ':', 'ret', '=', 'ath5k_hw_rf5112_channel', '(', 'ah', ',', 'channel', ')', ';', 'break', ';', '}', 'if', '(', 'ret', ')', '{', 'DBG', '(', '""""', ',', 'strerror', '(', 'ret', ')', ')', ';', 'return', 'ret', ';', '}', 'if', '(', 'channel', '->', 'center_freq', '==', '2484', ')', '{', 'AR5K_REG_ENABLE_BITS', '(', 'ah', ',', 'AR5K_PHY_CCKTXCTL', ',', 'AR5K_PHY_CCKTXCTL_JAPAN', ')', ';', '}', 'else', '{', 'AR5K_REG_ENABLE_BITS', '(', 'ah', ',', 'AR5K_PHY_CCKTXCTL', ',', 'AR5K_PHY_CCKTXCTL_WORLD', ')', ';', '}', 'ah', '->', 'ah_current_channel', '=', 'channel', ';', 'ah', '->', 'ah_turbo', '=', '(', 'channel', '->', 'hw_value', '==', 'CHANNEL_T', '?', '1', ':', '0', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
150,"['Send_NR', '(', 'char', '*', 'reason', ')', '{', 'char', 'buffer', '[', '257', ']', ';', 'int', 'length', ';', 'if', '(', '(', 'length', '=', 'strlen', '(', 'reason', ')', ')', '>', '255', ')', 'length', '=', '255', ';', 'buffer', '[', '0', ']', '=', 'NAK', ';', 'buffer', '[', '1', ']', '=', 'length', ';', 'memcpy', '(', 'buffer', '+', '2', ',', 'reason', ',', 'length', ')', ';', 'write', '(', 'fd', ',', 'buffer', ',', 'length', '+', '2', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
151,"['register_stat2', '(', 'char', '*', 'module', ',', 'char', '*', 'name', ',', 'stat_var', '*', '*', 'pvar', ',', 'unsigned', 'short', 'flags', ',', 'void', '*', 'ctx', ')', '{', 'module_stats', '*', 'mods', ';', 'stat_var', '*', 'stat', ';', 'stat_var', '*', 'it', ';', 'str', 'smodule', ';', 'int', 'hash', ';', 'if', '(', 'module', '==', '0', '||', 'name', '==', '0', '||', 'pvar', '==', '0', ')', '{', 'LM_ERR', '(', '""""', ',', 'module', ',', 'name', ',', 'pvar', ')', ';', 'goto', 'error', ';', '}', 'stat', '=', '(', 'stat_var', '*', ')', 'shm_malloc', '(', 'sizeof', '(', 'stat_var', ')', ')', ';', 'if', '(', 'stat', '==', '0', ')', '{', 'LM_ERR', '(', '""""', ')', ';', 'goto', 'error', ';', '}', 'memset', '(', 'stat', ',', '0', ',', 'sizeof', '(', 'stat_var', ')', ')', ';', 'if', '(', '(', 'flags', '&', 'STAT_IS_FUNC', ')', '==', '0', ')', '{', 'stat', '->', 'u', '.', 'val', '=', '(', 'stat_val', '*', ')', 'shm_malloc', '(', 'sizeof', '(', 'stat_val', ')', ')', ';', 'if', '(', 'stat', '->', 'u', '.', 'val', '==', '0', ')', '{', 'LM_ERR', '(', '""""', ')', ';', 'goto', 'error1', ';', '}', '#ifdef', '*', '(', 'stat', '->', 'u', '.', 'val', ')', '=', '0', ';', 'atomic_set', '(', 'stat', '->', 'u', '.', 'val', ',', '0', ')', ';', '*', 'pvar', '=', 'stat', ';', '}', 'else', '{', 'stat', '->', 'u', '.', 'f', '=', '(', 'stat_function', ')', '(', 'pvar', ')', ';', '}', 'smodule', '.', 's', '=', 'module', ';', 'smodule', '.', 'len', '=', 'strlen', '(', 'module', ')', ';', 'mods', '=', 'get_stat_module', '(', '&', 'smodule', ')', ';', 'if', '(', 'mods', '==', '0', ')', '{', 'mods', '=', 'add_stat_module', '(', 'module', ')', ';', 'if', '(', 'mods', '==', '0', ')', '{', 'LM_ERR', '(', '""""', ')', ';', 'goto', 'error2', ';', '}', '}', 'stat', '->', 'mod_idx', '=', 'collector', '->', 'mod_no', '-', '1', ';', 'stat', '->', 'name', '.', 's', '=', 'name', ';', 'stat', '->', 'name', '.', 'len', '=', 'strlen', '(', 'name', ')', ';', 'stat', '->', 'flags', '=', 'flags', ';', 'stat', '->', 'context', '=', 'ctx', ';', 'hash', '=', 'stat_hash', '(', '&', 'stat', '->', 'name', ')', ';', 'if', '(', 'collector', '->', 'hstats', '[', 'hash', ']', '==', '0', ')', '{', 'collector', '->', 'hstats', '[', 'hash', ']', '=', 'stat', ';', '}', 'else', '{', 'it', '=', 'collector', '->', 'hstats', '[', 'hash', ']', ';', 'while', '(', 'it', '->', 'hnext', ')', 'it', '=', 'it', '->', 'hnext', ';', 'it', '->', 'hnext', '=', 'stat', ';', '}', 'collector', '->', 'stats_no', '++', ';', 'if', '(', 'mods', '->', 'tail', ')', '{', 'mods', '->', 'tail', '->', 'lnext', '=', 'stat', ';', '}', 'else', '{', 'mods', '->', 'head', '=', 'stat', ';', '}', 'mods', '->', 'tail', '=', 'stat', ';', 'mods', '->', 'no', '++', ';', 'return', '0', ';', 'error2', ':', 'if', '(', '(', 'flags', '&', 'STAT_IS_FUNC', ')', '==', '0', ')', '{', 'shm_free', '(', '*', 'pvar', ')', ';', '*', 'pvar', '=', '0', ';', '}', 'error1', ':', 'shm_free', '(', 'stat', ')', ';', 'error', ':', '*', 'pvar', '=', '0', ';', 'return', '-', '1', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
152,"['nxt_psp_get_buttons', '(', 'nxt_t', '*', 'nxt', ',', 'int', 'port', ',', 'struct', 'nxt_psp_buttons', '*', 'buttons', ')', '{', 'uint16_t', 'buf', ';', 'int', 'ret', '=', 'nxt_i2c_read', '(', 'nxt', ',', 'port', ',', 'nxt_psp_i2c_addr', ',', 'NXT_PSP_REG_BUTTONS', ',', '2', ',', '&', 'buf', ')', ';', 'if', '(', 'ret', '==', '2', ')', '{', 'buf', '=', '~buf', ';', 'if', '(', 'buttons', '!=', 'NULL', ')', '{', 'buttons', '->', 'left', '=', 'buf', '&', 'NXT_PSP_BTN_LEFT', ';', 'buttons', '->', 'down', '=', 'buf', '&', 'NXT_PSP_BTN_DOWN', ';', 'buttons', '->', 'up', '=', 'buf', '&', 'NXT_PSP_BTN_UP', ';', 'buttons', '->', 'right', '=', 'buf', '&', 'NXT_PSP_BTN_RIGHT', ';', 'buttons', '->', 'r3', '=', 'buf', '&', 'NXT_PSP_BTN_R3', ';', 'buttons', '->', 'l3', '=', 'buf', '&', 'NXT_PSP_BTN_L3', ';', 'buttons', '->', 'square', '=', 'buf', '&', 'NXT_PSP_BTN_SQUARE', ';', 'buttons', '->', 'x', '=', 'buf', '&', 'NXT_PSP_BTN_X', ';', 'buttons', '->', 'o', '=', 'buf', '&', 'NXT_PSP_BTN_O', ';', 'buttons', '->', 'triangle', '=', 'buf', '&', 'NXT_PSP_BTN_TRIANGLE', ';', 'buttons', '->', 'r1', '=', 'buf', '&', 'NXT_PSP_BTN_R1', ';', 'buttons', '->', 'l1', '=', 'buf', '&', 'NXT_PSP_BTN_L1', ';', 'buttons', '->', 'r2', '=', 'buf', '&', 'NXT_PSP_BTN_R2', ';', 'buttons', '->', 'l2', '=', 'buf', '&', 'NXT_PSP_BTN_L2', ';', '}', 'return', '0', ';', '}', 'else', '{', 'return', '-', '1', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
153,"['set_new_fixed_colormap', '(', 'const', 'char', '*', 'name', ')', '{', 'int', 'i', ';', 'if', '(', 'name', '&&', 'strcmp', '(', 'name', ',', '""""', ')', '==', '0', ')', '{', 'Gif_Colormap', '*', 'cm', '=', 'Gif_NewFullColormap', '(', '216', ',', '256', ')', ';', 'Gif_Color', '*', 'col', '=', 'cm', '->', 'col', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', '216', ';', 'i', '++', ')', '{', 'col', '[', 'i', ']', '.', 'gfc_red', '=', '(', 'i', '/', '36', ')', '*', '0x33', ';', 'col', '[', 'i', ']', '.', 'gfc_green', '=', '(', '(', 'i', '/', '6', ')', '%', '6', ')', '*', '0x33', ';', 'col', '[', 'i', ']', '.', 'gfc_blue', '=', '(', 'i', '%', '6', ')', '*', '0x33', ';', '}', 'def_output_data', '.', 'colormap_fixed', '=', 'cm', ';', '}', 'else', 'if', '(', 'name', '&&', '(', 'strcmp', '(', 'name', ',', '""""', ')', '==', '||', 'strcmp', '(', 'name', ',', '""""', ')', '==', '0', ')', ')', '{', 'Gif_Colormap', '*', 'cm', '=', 'Gif_NewFullColormap', '(', '256', ',', '256', ')', ';', 'Gif_Color', '*', 'col', '=', 'cm', '->', 'col', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', '256', ';', 'i', '++', ')', 'col', '[', 'i', ']', '.', 'gfc_red', '=', 'col', '[', 'i', ']', '.', 'gfc_green', '=', 'col', '[', 'i', ']', '.', 'gfc_blue', '=', 'i', ';', 'def_output_data', '.', 'colormap_fixed', '=', 'cm', ';', '}', 'else', 'if', '(', 'name', '&&', 'strcmp', '(', 'name', ',', '""""', ')', '==', '0', ')', '{', 'Gif_Colormap', '*', 'cm', '=', 'Gif_NewFullColormap', '(', '2', ',', '256', ')', ';', 'cm', '->', 'col', '[', '0', ']', '.', 'gfc_red', '=', 'cm', '->', 'col', '[', '0', ']', '.', 'gfc_green', '=', 'cm', '->', 'col', '[', '0', ']', '.', 'gfc_blue', '=', '0', ';', 'cm', '->', 'col', '[', '1', ']', '.', 'gfc_red', '=', 'cm', '->', 'col', '[', '1', ']', '.', 'gfc_green', '=', 'cm', '->', 'col', '[', '1', ']', '.', 'gfc_blue', '=', '255', ';', 'def_output_data', '.', 'colormap_fixed', '=', 'cm', ';', '}', 'def_output_data', '.', 'colormap_fixed', '=', 'read_colormap_file', '(', 'name', ',', '0', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
154,"['setInstanceUpdatesBlocked', '(', 'bool', 'blockUpdates', ')', '{', 'if', '(', 'blockUpdates', ')', '{', 'if', '(', '!gElementsWithInstanceUpdatesBlocked', ')', 'gElementsWithInstanceUpdatesBlocked', '=', 'new', 'HashSet', '<', 'const', 'SVGStyledElement', '*', '>', ';', 'gElementsWithInstanceUpdatesBlocked', '->', 'add', '(', 'this', ')', ';', '}', 'else', '{', 'ASSERT', '(', 'gElementsWithInstanceUpdatesBlocked', ')', ';', 'ASSERT', '(', 'gElementsWithInstanceUpdatesBlocked', '->', 'contains', '(', 'this', ')', ')', ';', 'gElementsWithInstanceUpdatesBlocked', '->', 'remove', '(', 'this', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
155,"['addIsotopeToAtom', '(', 'gchar', '*', 'symbol', ',', 'gint', 'atomicNumber', ',', 'gint', 'iMass', ',', 'gdouble', 'rMass', ',', 'gdouble', 'abundance', ')', '{', 'gint', 'i', '=', '(', 'gint', ')', 'atomicNumber', '-', '1', ';', 'gint', 'j', '=', '0', ';', 'if', '(', 'i', '>=', 'NATOMS', ')', 'return', ';', 'if', '(', 'i', '<', '0', ')', 'return', ';', 'if', '(', 'strcmp', '(', 'symbol', ',', '""""', ')', '==', '0', ')', 'return', ';', 'if', '(', 'strcmp', '(', 'symbol', ',', '""""', ')', '==', '0', ')', 'return', ';', 'if', '(', 'i', '>=', '109', ')', 'return', ';', 'if', '(', 'AtomsProp', '[', 'i', ']', '.', 'nIsotopes', '>=', 'MAXISOTOP', ')', 'return', ';', 'j', '=', 'AtomsProp', '[', 'i', ']', '.', 'nIsotopes', ';', 'AtomsProp', '[', 'i', ']', '.', 'nIsotopes', '++', ';', 'AtomsProp', '[', 'i', ']', '.', 'iMass', '[', 'j', ']', '=', 'iMass', ';', 'AtomsProp', '[', 'i', ']', '.', 'rMass', '[', 'j', ']', '=', 'rMass', ';', 'AtomsProp', '[', 'i', ']', '.', 'abundances', '[', 'j', ']', '=', 'abundance', ';', 'if', '(', 'j', '==', '0', ')', 'AtomsProp', '[', 'i', ']', '.', 'masse', '=', 'rMass', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
156,"['btrfs_alloc_from_cluster', '(', 'struct', 'btrfs_block_group_cache', '*', 'block_group', ',', 'struct', 'btrfs_free_cluster', '*', 'cluster', ',', 'u64', 'bytes', ',', 'u64', 'min_start', ',', 'u64', '*', 'max_extent_size', ')', '{', 'struct', 'btrfs_free_space_ctl', '*', 'ctl', '=', 'block_group', '->', 'free_space_ctl', ';', 'struct', 'btrfs_free_space', '*', 'entry', '=', 'NULL', ';', 'struct', 'rb_node', '*', 'node', ';', 'u64', 'ret', '=', '0', ';', 'spin_lock', '(', '&', 'cluster', '->', 'lock', ')', ';', 'if', '(', 'bytes', '>', 'cluster', '->', 'max_size', ')', 'goto', 'out', ';', 'if', '(', 'cluster', '->', 'block_group', '!=', 'block_group', ')', 'goto', 'out', ';', 'node', '=', 'rb_first', '(', '&', 'cluster', '->', 'root', ')', ';', 'if', '(', '!node', ')', 'goto', 'out', ';', 'entry', '=', 'rb_entry', '(', 'node', ',', 'struct', 'btrfs_free_space', ',', 'offset_index', ')', ';', 'while', '(', '1', ')', '{', 'if', '(', 'entry', '->', 'bytes', '<', 'bytes', '&&', 'entry', '->', 'bytes', '>', '*', 'max_extent_size', ')', '*', 'max_extent_size', '=', 'entry', '->', 'bytes', ';', 'if', '(', 'entry', '->', 'bytes', '<', 'bytes', '||', '(', '!entry', '->', 'bitmap', '&&', 'entry', '->', 'offset', '<', 'min_start', ')', ')', '{', 'node', '=', 'rb_next', '(', '&', 'entry', '->', 'offset_index', ')', ';', 'if', '(', '!node', ')', 'break', ';', 'entry', '=', 'rb_entry', '(', 'node', ',', 'struct', 'btrfs_free_space', ',', 'offset_index', ')', ';', 'continue', ';', '}', 'if', '(', 'entry', '->', 'bitmap', ')', '{', 'ret', '=', 'btrfs_alloc_from_bitmap', '(', 'block_group', ',', 'cluster', ',', 'entry', ',', 'bytes', ',', 'cluster', '->', 'window_start', ',', 'max_extent_size', ')', ';', 'if', '(', 'ret', '==', '0', ')', '{', 'node', '=', 'rb_next', '(', '&', 'entry', '->', 'offset_index', ')', ';', 'if', '(', '!node', ')', 'break', ';', 'entry', '=', 'rb_entry', '(', 'node', ',', 'struct', 'btrfs_free_space', ',', 'offset_index', ')', ';', 'continue', ';', '}', 'cluster', '->', 'window_start', '+=', 'bytes', ';', '}', 'else', '{', 'ret', '=', 'entry', '->', 'offset', ';', 'entry', '->', 'offset', '+=', 'bytes', ';', 'entry', '->', 'bytes', '-=', 'bytes', ';', '}', 'if', '(', 'entry', '->', 'bytes', '==', '0', ')', 'rb_erase', '(', '&', 'entry', '->', 'offset_index', ',', '&', 'cluster', '->', 'root', ')', ';', 'break', ';', '}', 'out', ':', 'spin_unlock', '(', '&', 'cluster', '->', 'lock', ')', ';', 'if', '(', '!ret', ')', 'return', '0', ';', 'spin_lock', '(', '&', 'ctl', '->', 'tree_lock', ')', ';', 'ctl', '->', 'free_space', '-=', 'bytes', ';', 'if', '(', 'entry', '->', 'bytes', '==', '0', ')', '{', 'ctl', '->', 'free_extents', '--', ';', 'if', '(', 'entry', '->', 'bitmap', ')', '{', 'kfree', '(', 'entry', '->', 'bitmap', ')', ';', 'ctl', '->', 'total_bitmaps', '--', ';', 'ctl', '->', 'op', '->', 'recalc_thresholds', '(', 'ctl', ')', ';', '}', 'kmem_cache_free', '(', 'btrfs_free_space_cachep', ',', 'entry', ')', ';', '}', 'spin_unlock', '(', '&', 'ctl', '->', 'tree_lock', ')', ';', 'return', 'ret', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
157,"['decode', '(', 'const', 'std', ':', ':', 'string', '&', 'input', ',', 'unsigned', 'char', '*', 'output', ',', 'size_t', '&', 'sz', ')', '{', 'size_t', 'i', '=', '0', ';', 'size_t', 'l', '=', 'input', '.', 'size', '(', ')', ';', 'size_t', 'j', '=', '0', ';', 'while', '(', 'i', '<', 'l', ')', '{', 'while', '(', 'i', '<', 'l', '&&', '(', 'input', '[', 'i', ']', '==', '13', '||', 'input', '[', 'i', ']', '==', '10', ')', ')', 'i', '++', ';', 'if', '(', 'i', '<', 'l', ')', '{', 'unsigned', 'char', 'b1', '=', '(', 'unsigned', 'char', ')', '(', '(', 'rstr', '[', '(', 'int', ')', 'input', '[', 'i', ']', ']', '<<', '2', '&', '0xfc', ')', '+', '(', 'rstr', '[', '(', 'int', ')', 'input', '[', 'i', '+', '1', ']', ']', '>>', '4', '&', '0x03', ')', ')', ';', 'if', '(', 'output', ')', '{', 'output', '[', 'j', ']', '=', 'b1', ';', '}', 'j', '++', ';', 'if', '(', 'input', '[', 'i', '+', '2', ']', '!=', ""''"", ')', '{', 'unsigned', 'char', 'b2', '=', '(', 'unsigned', 'char', ')', '(', '(', 'rstr', '[', '(', 'int', ')', 'input', '[', 'i', '+', '1', ']', ']', '<<', '4', '&', '0xf0', ')', '+', '(', 'rstr', '[', '(', 'int', ')', 'input', '[', 'i', '+', '2', ']', ']', '>>', '2', '&', '0x0f', ')', ')', ';', 'if', '(', 'output', ')', '{', 'output', '[', 'j', ']', '=', 'b2', ';', '}', 'j', '++', ';', '}', 'if', '(', 'input', '[', 'i', '+', '3', ']', '!=', ""''"", ')', '{', 'unsigned', 'char', 'b3', '=', '(', 'unsigned', 'char', ')', '(', '(', 'rstr', '[', '(', 'int', ')', 'input', '[', 'i', '+', '2', ']', ']', '<<', '6', '&', '0xc0', ')', '+', 'rstr', '[', '(', 'int', ')', 'input', '[', 'i', '+', '3', ']', ']', ')', ';', 'if', '(', 'output', ')', '{', 'output', '[', 'j', ']', '=', 'b3', ';', '}', 'j', '++', ';', '}', 'i', '+=', '4', ';', '}', '}', 'sz', '=', 'j', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
158,"['g3d_stream_open_zip', '(', 'const', 'gchar', '*', 'filename', ',', 'const', 'gchar', '*', 'subfile', ')', '{', 'GsfInput', '*', 'input', ';', 'GError', '*', 'error', '=', 'NULL', ';', 'input', '=', 'gsf_input_stdio_new', '(', 'filename', ',', '&', 'error', ')', ';', 'if', '(', 'error', '!=', 'NULL', ')', '{', 'g_warning', '(', '""""', ',', 'filename', ',', 'error', '->', 'message', ')', ';', 'g_error_free', '(', 'error', ')', ';', 'return', 'NULL', ';', '}', 'return', 'g3d_stream_open_zip_from_input', '(', 'input', ',', 'subfile', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
159,"['print_los', '(', 'object', '*', 'op', ')', '{', 'int', 'x', ',', 'y', ';', 'char', 'buf', '[', 'MAP_CLIENT_X', '*', '2', '+', '20', ']', ',', 'buf2', '[', '10', ']', ';', 'snprintf', '(', 'buf', ',', 'sizeof', '(', 'buf', ')', ',', '""""', ')', ';', 'for', '(', 'x', '=', '0', ';', 'x', '<', 'op', '->', 'contr', '->', 'socket', '.', 'mapx', ';', 'x', '++', ')', '{', 'snprintf', '(', 'buf2', ',', 'sizeof', '(', 'buf2', ')', ',', '""""', ',', 'x', ')', ';', 'strncat', '(', 'buf', ',', 'buf2', ',', 'sizeof', '(', 'buf', ')', '-', 'strlen', '(', 'buf', ')', '-', '1', ')', ';', '}', 'draw_ext_info', '(', 'NDI_UNIQUE', ',', '0', ',', 'op', ',', 'MSG_TYPE_COMMAND', ',', 'MSG_TYPE_COMMAND_DEBUG', ',', 'buf', ')', ';', 'for', '(', 'y', '=', '0', ';', 'y', '<', 'op', '->', 'contr', '->', 'socket', '.', 'mapy', ';', 'y', '++', ')', '{', 'snprintf', '(', 'buf', ',', 'sizeof', '(', 'buf', ')', ',', '""""', ',', 'y', ')', ';', 'for', '(', 'x', '=', '0', ';', 'x', '<', 'op', '->', 'contr', '->', 'socket', '.', 'mapx', ';', 'x', '++', ')', '{', 'snprintf', '(', 'buf2', ',', 'sizeof', '(', 'buf2', ')', ',', '""""', ',', 'op', '->', 'contr', '->', 'blocked_los', '[', 'x', ']', '[', 'y', ']', '==', '100', '?', '1', ':', '0', ')', ';', 'strncat', '(', 'buf', ',', 'buf2', ',', 'sizeof', '(', 'buf', ')', '-', 'strlen', '(', 'buf', ')', '-', '1', ')', ';', '}', 'draw_ext_info', '(', 'NDI_UNIQUE', ',', '0', ',', 'op', ',', 'MSG_TYPE_COMMAND', ',', 'MSG_TYPE_COMMAND_DEBUG', ',', 'buf', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
160,"['find_nested_options', '(', 'struct', 'isl_args', '*', 'args', ',', 'void', '*', 'opt', ',', 'struct', 'isl_args', '*', 'wanted', ')', '{', 'int', 'i', ';', 'struct', 'isl_options', '*', 'options', ';', 'if', '(', 'args', '==', 'wanted', ')', 'return', 'opt', ';', 'for', '(', 'i', '=', '0', ';', 'args', '->', 'args', '[', 'i', ']', '.', 'type', '!=', 'isl_arg_end', ';', '++', 'i', ')', '{', 'struct', 'isl_arg', '*', 'arg', '=', '&', 'args', '->', 'args', '[', 'i', ']', ';', 'void', '*', 'child', ';', 'if', '(', 'arg', '->', 'type', '!=', 'isl_arg_child', ')', 'continue', ';', 'if', '(', 'arg', '->', 'offset', '==', '(', 'size_t', ')', '-', '1', ')', 'child', '=', 'opt', ';', 'child', '=', '*', '(', 'void', '*', '*', ')', '(', '(', '(', 'char', '*', ')', 'opt', ')', '+', 'arg', '->', 'offset', ')', ';', 'options', '=', 'find_nested_options', '(', 'arg', '->', 'u', '.', 'child', '.', 'child', ',', 'child', ',', 'wanted', ')', ';', 'if', '(', 'options', ')', 'return', 'options', ';', '}', 'return', 'NULL', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
161,"['console_init', '(', 'void', ')', '{', '#ifdef', 'int', 'vtno', ';', 'char', '*', 's', ';', 's', '=', 'getenv', '(', '""""', ')', ';', 'if', '(', '!s', ')', 's', '=', 'getenv', '(', '""""', ')', ';', 'if', '(', 's', ')', '{', 'int', 'fd', '=', 'open', '(', 's', ',', 'O_RDWR', '|', 'O_NONBLOCK', '|', 'O_NOCTTY', ')', ';', 'if', '(', 'fd', '>=', '0', ')', '{', 'dup2', '(', 'fd', ',', 'STDIN_FILENO', ')', ';', 'dup2', '(', 'fd', ',', 'STDOUT_FILENO', ')', ';', 'xmove_fd', '(', 'fd', ',', 'STDERR_FILENO', ')', ';', '}', 'dbg_message', '(', 'L_LOG', ',', '""""', ',', 's', ')', ';', '}', 'else', '{', '/', '*', 'Make', 'sure', 'fd', '0', ',', '1', ',', '2', 'are', 'not', 'bb_sanitize_stdio', '(', ')', ';', '/', '/', 'Users', 'report', '/', '/', '\t\tfcntl', '(', 'STDERR_FILENO', ',', 'F_SETFL', ',', 'fcntl', '(', 'STDERR_FILENO', ',', 'F_GETFL', ')', '|', 'O_NONBLOCK', ')', ';', '}', 's', '=', 'getenv', '(', '""""', ')', ';', '#ifdef', 'if', '(', 'ioctl', '(', 'STDIN_FILENO', ',', 'VT_OPENQRY', ',', '&', 'vtno', ')', '!=', '0', ')', '{', '/', '*', 'Not', 'a', 'linux', 'terminal', ',', 'probably', 'serial', 'console', '.', '*', 'Force', 'the', 'TERM', 'setting', 'to', 'if', '(', '!s', '||', 'strcmp', '(', 's', ',', '""""', ')', '==', '0', ')', 'putenv', '(', '(', 'char', '*', ')', '""""', ')', ';', 'if', '(', '!ENABLE_FEATURE_INIT_SYSLOG', ')', 'log_console', '=', 'NULL', ';', '}', 'if', '(', '!s', ')', 'putenv', '(', '(', 'char', '*', ')', '""""', 'CONFIG_INIT_TERMINAL_TYPE', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
162,"['ompi_io_ompio_full_print_queue', '(', 'int', 'queue_type', ')', '{', 'int', 'ret', '=', 'OMPI_SUCCESS', ';', 'print_queue', '*', 'q', '=', 'NULL', ';', 'ret', '=', 'ompi_io_ompio_set_print_queue', '(', '&', 'q', ',', 'queue_type', ')', ';', 'assert', '(', 'ret', '!=', 'OMPI_ERROR', ')', ';', 'if', '(', 'q', '->', 'count', '<', 'QUEUESIZE', ')', 'return', '0', ';', 'return', '1', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
163,"['gt_bsPrint', '(', 'FILE', '*', 'fp', ',', 'constBitString', 'str', ',', 'BitOffset', 'offset', ',', 'BitOffset', 'numBits', ')', '{', 'uint32_t', 'accum', '=', '0', ';', 'unsigned', 'bitsLeft', '=', 'numBits', ',', 'bitTop', '=', 'offset', '%', 'bitElemBits', ',', 'bitsInAccum', '=', '0', ';', 'size_t', 'elemStart', '=', 'offset', '/', 'bitElemBits', ';', 'const', 'BitElem', '*', 'p', '=', 'str', '+', 'elemStart', ';', 'char', 'buf', '[', 'sizeof', '(', 'accum', ')', '*', 'CHAR_BIT', ']', ';', 'int', 'ioGtError', '=', '0', ';', 'gt_assert', '(', 'str', ')', ';', 'do', '{', 'if', '(', 'bitTop', ')', '{', 'uint32_t', 'mask', ';', 'unsigned', 'bits2Read', '=', 'MIN', '(', 'bitElemBits', '-', 'bitTop', ',', 'bitsLeft', ')', ';', 'unsigned', 'unreadRightBits', '=', '(', 'bitElemBits', '-', 'bitTop', '-', 'bits2Read', ')', ';', 'mask', '=', '(', '~', '(', '(', '~', '(', 'uint32_t', ')', '0', ')', '<<', 'bits2Read', ')', ')', '<<', 'unreadRightBits', ';', 'ACCUM2FP', '(', '(', '(', '*', 'p', '++', ')', '&', 'mask', ')', '>>', 'unreadRightBits', ',', 'bits2Read', ')', ';', 'bitsLeft', '-=', 'bits2Read', ';', '}', 'while', '(', 'bitsLeft', '>=', 'bitElemBits', '&&', '!ioGtError', ')', '{', 'while', '(', 'bitsLeft', '>=', '&&', 'sizeof', '(', 'accum', ')', '*', 'CHAR_BIT', '-', 'bitElemBits', '>=', 'bitsInAccum', ')', '{', 'accum', '=', 'accum', '<<', 'bitElemBits', '|', '(', '*', 'p', '++', ')', ';', 'bitsLeft', '-=', 'bitElemBits', ';', 'bitsInAccum', '+=', 'bitElemBits', ';', '}', 'ACCUM2FP', '(', 'accum', ',', 'bitsInAccum', ')', ';', 'accum', '=', '0', ';', 'bitsInAccum', '=', '0', ';', '}', 'if', '(', 'ioGtError', ')', 'break', ';', 'if', '(', 'bitsLeft', ')', '{', 'accum', '=', '(', '(', '*', 'p', ')', '&', '(', '(', '~', '(', 'uint32_t', ')', '0', ')', '<<', '(', 'bitElemBits', '-', 'bitsLeft', ')', ')', ')', '>>', '(', 'bitElemBits', '-', 'bitsLeft', ')', ';', 'ACCUM2FP', '(', 'accum', ',', 'bitsLeft', ')', ';', '}', '}', 'while', '(', '0', ')', ';', 'return', 'ioGtError', '?', '-', '1', ':', '0', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
164,"['isakmp_attr_print', '(', 'const', 'u_char', '*', 'p', ',', 'const', 'u_char', '*', 'ep', ')', '{', 'u_int16_t', '*', 'q', ';', 'int', 'totlen', ';', 'u_int32_t', 't', ';', 'q', '=', '(', 'u_int16_t', '*', ')', 'p', ';', 'if', '(', 'p', '[', '0', ']', '&', '0x80', ')', 'totlen', '=', '4', ';', 'totlen', '=', '4', '+', 'EXTRACT_16BITS', '(', '&', 'q', '[', '1', ']', ')', ';', 'if', '(', 'ep', '<', 'p', '+', 'totlen', ')', '{', 'printf', '(', '""""', ')', ';', 'return', 'ep', '+', '1', ';', '}', 'printf', '(', '""""', ')', ';', 't', '=', 'EXTRACT_16BITS', '(', '&', 'q', '[', '0', ']', ')', '&', '0x7fff', ';', 'printf', '(', '""""', ',', 't', ')', ';', 'if', '(', 'p', '[', '0', ']', '&', '0x80', ')', '{', 'printf', '(', '""""', ')', ';', 't', '=', 'q', '[', '1', ']', ';', 'rawprint', '(', '(', 'caddr_t', ')', '&', 'q', '[', '1', ']', ',', '2', ')', ';', '}', 'else', '{', 'printf', '(', '""""', ',', 'EXTRACT_16BITS', '(', '&', 'q', '[', '1', ']', ')', ')', ';', 'rawprint', '(', '(', 'caddr_t', ')', '&', 'p', '[', '2', ']', ',', 'EXTRACT_16BITS', '(', '&', 'q', '[', '1', ']', ')', ')', ';', '}', 'printf', '(', '""""', ')', ';', 'return', 'p', '+', 'totlen', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
165,"['pm8001_set_phy_profile_single', '(', 'struct', 'pm8001_hba_info', '*', 'pm8001_ha', ',', 'u32', 'phy', ',', 'u32', 'length', ',', 'u32', '*', 'buf', ')', '{', 'u32', 'tag', ',', 'opc', ';', 'int', 'rc', ',', 'i', ';', 'struct', 'set_phy_profile_req', 'payload', ';', 'struct', 'inbound_queue_table', '*', 'circularQ', ';', 'memset', '(', '&', 'payload', ',', '0', ',', 'sizeof', '(', 'payload', ')', ')', ';', 'rc', '=', 'pm8001_tag_alloc', '(', 'pm8001_ha', ',', '&', 'tag', ')', ';', 'if', '(', 'rc', ')', 'PM8001_INIT_DBG', '(', 'pm8001_ha', ',', 'pm8001_printk', '(', '""""', ')', ')', ';', 'circularQ', '=', '&', 'pm8001_ha', '->', 'inbnd_q_tbl', '[', '0', ']', ';', 'opc', '=', 'OPC_INB_SET_PHY_PROFILE', ';', 'payload', '.', 'tag', '=', 'cpu_to_le32', '(', 'tag', ')', ';', 'payload', '.', 'ppc_phyid', '=', '(', '(', '(', 'SAS_PHY_ANALOG_SETTINGS_PAGE', '&', '0xF', ')', '<<', '8', ')', '|', '(', 'phy', '&', '0xFF', ')', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'length', ';', 'i', '++', ')', 'payload', '.', 'reserved', '[', 'i', ']', '=', 'cpu_to_le32', '(', '*', '(', 'buf', '+', 'i', ')', ')', ';', 'rc', '=', 'pm8001_mpi_build_cmd', '(', 'pm8001_ha', ',', 'circularQ', ',', 'opc', ',', '&', 'payload', ',', '0', ')', ';', 'if', '(', 'rc', ')', 'pm8001_tag_free', '(', 'pm8001_ha', ',', 'tag', ')', ';', 'PM8001_INIT_DBG', '(', 'pm8001_ha', ',', 'pm8001_printk', '(', '""""', ',', 'phy', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
166,"['check_printable', '(', 'char', '*', 'id', ',', 'int', 'maxlen', ')', '{', 'static', 'char', 'buffer', '[', 'MAX_IDLEN', ']', ';', 'char', '*', 'idval', ',', '*', 'bufval', ';', 'int', 'i', '=', '0', ';', 'memset', '(', 'buffer', ',', ""''"", ',', 'MAX_IDLEN', ')', ';', 'if', '(', 'maxlen', '>', 'MAX_IDLEN', ')', 'maxlen', '=', 'MAX_IDLEN', ';', 'bufval', '=', 'buffer', ';', 'for', '(', 'idval', '=', 'id', ';', 'idval', '&&', '(', 'i', '<', 'maxlen', '-', '1', ')', ';', '++', 'idval', ',', '++', 'bufval', ',', '++', 'i', ')', 'if', '(', '!isprint', '(', '*', 'idval', ')', ')', '{', '*', 'bufval', '=', ""''"", ';', 'break', ';', '}', '*', 'bufval', '=', '*', 'idval', ';', 'return', '(', 'buffer', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
167,"['restore_node_features', '(', 'int', 'recover', ')', '{', 'int', 'i', ';', 'struct', 'node_record', '*', 'node_ptr', ';', 'for', '(', 'i', '=', '0', ',', 'node_ptr', '=', 'node_record_table_ptr', ';', 'i', '<', 'node_record_count', ';', 'i', '++', ',', 'node_ptr', '++', ')', '{', 'if', '(', 'node_ptr', '->', 'weight', '!=', 'node_ptr', '->', 'config_ptr', '->', 'weight', ')', '{', 'error', '(', '""""', ',', 'node_ptr', '->', 'name', ',', 'node_ptr', '->', 'weight', ')', ';', 'if', '(', 'recover', '==', '2', ')', '{', '_update_node_weight', '(', 'node_ptr', '->', 'name', ',', 'node_ptr', '->', 'weight', ')', ';', '}', 'else', '{', 'node_ptr', '->', 'weight', '=', 'node_ptr', '->', 'config_ptr', '->', 'weight', ';', '}', '}', 'if', '(', '_strcmp', '(', 'node_ptr', '->', 'config_ptr', '->', 'feature', ',', 'node_ptr', '->', 'features', ')', ')', '{', 'error', '(', '""""', ',', 'node_ptr', '->', 'name', ',', 'node_ptr', '->', 'features', ')', ';', 'if', '(', 'recover', '==', '2', ')', '{', '_update_node_features', '(', 'node_ptr', '->', 'name', ',', 'node_ptr', '->', 'features', ')', ';', '}', 'else', '{', 'xfree', '(', 'node_ptr', '->', 'features', ')', ';', 'node_ptr', '->', 'features', '=', 'xstrdup', '(', 'node_ptr', '->', 'config_ptr', '->', 'feature', ')', ';', '}', '}', '/', '*', 'We', 'lose', 'the', 'gres', 'information', 'updated', 'manually', 'and', '(', 'void', ')', 'gres_plugin_node_reconfig', '(', 'node_ptr', '->', 'name', ',', 'node_ptr', '->', 'config_ptr', '->', 'gres', ',', '&', 'node_ptr', '->', 'gres', ',', '&', 'node_ptr', '->', 'gres_list', ',', 'slurmctld_conf', '.', 'fast_schedule', ')', ';', 'gres_plugin_node_state_log', '(', 'node_ptr', '->', 'gres_list', ',', 'node_ptr', '->', 'name', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
168,"['handle_print_numeric', '(', 'const', 'char', '*', 'token', ',', 'char', '*', 'line', ')', '{', 'const', 'char', '*', 'value', ';', 'char', '*', 'st', ';', 'value', '=', 'strtok_r', '(', 'line', ',', '""""', ',', '&', 'st', ')', ';', 'if', '(', 'value', '&&', '(', '(', 'strcasecmp', '(', 'value', ',', '""""', ')', '==', '0', ')', '||', '(', 'strcasecmp', '(', 'value', ',', '""""', ')', '==', '0', ')', '||', '(', '*', 'value', '==', ""''"", ')', ')', ')', '{', 'netsnmp_ds_set_int', '(', 'NETSNMP_DS_LIBRARY_ID', ',', 'NETSNMP_DS_LIB_OID_OUTPUT_FORMAT', ',', 'NETSNMP_OID_OUTPUT_NUMERIC', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
169,"['_tenEMBimodalIterate', '(', 'tenEMBimodalParm', '*', 'biparm', ')', '{', 'static', 'const', 'char', 'me', '[', ']', '=', '""""', ';', 'double', 'om1', ',', 'os1', ',', 'om2', ',', 'os2', ',', 'of1', ',', 'm1', ',', 's1', ',', 'm2', ',', 's2', ',', 'f1', ';', 'om1', '=', 'biparm', '->', 'mean1', ';', 'os1', '=', 'biparm', '->', 'stdv1', ';', 'of1', '=', 'biparm', '->', 'fraction1', ';', 'om2', '=', 'biparm', '->', 'mean2', ';', 'os2', '=', 'biparm', '->', 'stdv2', ';', '_tenEMBimodalPP', '(', 'biparm', ')', ';', 'f1', '=', '_tenEMBimodalNewFraction1', '(', 'biparm', ')', ';', '_tenEMBimodalNewMean', '(', '&', 'm1', ',', '&', 'm2', ',', 'biparm', ')', ';', '_tenEMBimodalNewSigma', '(', '&', 's1', ',', '&', 's2', ',', 'm1', ',', 'm2', ',', 'biparm', ')', ';', 'biparm', '->', 'delta', '=', '(', '(', 'fabs', '(', 'm1', '-', 'om1', ')', '+', 'fabs', '(', 'm2', '-', 'om2', ')', '+', 'fabs', '(', 's1', '-', 'os1', ')', '+', 'fabs', '(', 's2', '-', 'os2', ')', ')', '/', 'biparm', '->', '+', 'fabs', '(', 'f1', '-', 'of1', ')', ')', ';', 'biparm', '->', 'mean1', '=', 'm1', ';', 'biparm', '->', 'stdv1', '=', 's1', ';', 'biparm', '->', 'fraction1', '=', 'f1', ';', 'biparm', '->', 'mean2', '=', 'm2', ';', 'biparm', '->', 'stdv2', '=', 's2', ';', 'if', '(', 'biparm', '->', 'verbose', ')', '{', 'fprintf', '(', 'stderr', ',', '""""', ',', 'me', ',', 'biparm', '->', 'stage', ',', 'biparm', '->', 'iteration', ')', ';', 'fprintf', '(', 'stderr', ',', '""""', ',', 'm1', ',', 's1', ')', ';', 'fprintf', '(', 'stderr', ',', '""""', ',', 'm2', ',', 's2', ')', ';', 'fprintf', '(', 'stderr', ',', '""""', ',', 'f1', ',', 'biparm', '->', 'delta', ')', ';', '}', 'if', '(', 'biparm', '->', 'verbose', '>', '1', ')', '{', '_tenEMBimodalSaveImage', '(', 'biparm', ')', ';', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
170,"['bfa_cb_sfp_show', '(', 'struct', 'bfa_sfp_s', '*', 'sfp', ')', '{', 'bfa_trc', '(', 'sfp', ',', 'sfp', '->', 'lock', ')', ';', 'if', '(', 'sfp', '->', 'cbfn', ')', 'sfp', '->', 'cbfn', '(', 'sfp', '->', 'cbarg', ',', 'sfp', '->', 'status', ')', ';', 'sfp', '->', 'lock', '=', '0', ';', 'sfp', '->', 'cbfn', '=', 'NULL', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
171,"['putString', '(', 'const', 'char', '*', 'stringVal', ')', '{', 'errorFlag', '=', 'EC_Normal', ';', 'if', '(', '(', 'stringVal', '!=', 'NULL', ')', '&&', '(', 'strlen', '(', 'stringVal', ')', '>', '0', ')', ')', 'putValue', '(', 'stringVal', ',', 'strlen', '(', 'stringVal', ')', ')', ';', 'putValue', '(', 'NULL', ',', '0', ')', ';', 'fStringMode', '=', 'DCM_UnknownString', ';', 'makeMachineByteString', '(', ')', ';', 'return', 'errorFlag', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
172,"['convertseries', '(', 'StackInfo', '*', 'si', ')', '{', 'Series', 'newtop', '=', 'NULL', ';', 'Object', 'subo', ';', 'int', 'i', ';', 'double', 'seriespos', '=', '0', '.', '0', ';', 'newtop', '=', 'DXNewSeries', '(', ')', ';', 'if', '(', '!newtop', ')', 'goto', 'error', ';', 'for', '(', 'i', '=', '0', ',', 'seriespos', '=', '0', '.', '0', ';', '(', 'subo', '=', 'DXGetEnumeratedMember', '(', '(', 'Group', ')', 'si', '->', 'thisobj', ',', 'i', ',', 'NULL', ')', ')', ';', 'i', '++', ',', 'seriespos', '+=', '1', '.', '0', ')', 'if', '(', '!DXSetSeriesMember', '(', 'newtop', ',', 'i', ',', 'seriespos', ',', 'subo', ')', ')', 'goto', 'error', ';', 'return', '(', 'Object', ')', 'newtop', ';', 'error', ':', 'DXDelete', '(', '(', 'Object', ')', 'newtop', ')', ';', 'return', 'NULL', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
173,"['drbg_hash_df', '(', 'struct', 'drbg_state', '*', 'drbg', ',', 'unsigned', 'char', '*', 'outval', ',', 'size_t', 'outlen', ',', 'struct', 'list_head', '*', 'entropylist', ')', '{', 'int', 'ret', '=', '0', ';', 'size_t', 'len', '=', '0', ';', 'unsigned', 'char', 'input', '[', '5', ']', ';', 'unsigned', 'char', '*', 'tmp', '=', 'drbg', '->', 'scratchpad', '+', 'drbg_statelen', '(', 'drbg', ')', ';', 'struct', 'drbg_string', 'data', ';', 'input', '[', '0', ']', '=', '1', ';', 'drbg_cpu_to_be32', '(', '(', 'outlen', '*', '8', ')', ',', '&', 'input', '[', '1', ']', ')', ';', 'drbg_string_fill', '(', '&', 'data', ',', 'input', ',', '5', ')', ';', 'list_add', '(', '&', 'data', '.', 'list', ',', 'entropylist', ')', ';', 'while', '(', 'len', '<', 'outlen', ')', '{', 'short', 'blocklen', '=', '0', ';', 'ret', '=', 'drbg_kcapi_hash', '(', 'drbg', ',', 'NULL', ',', 'tmp', ',', 'entropylist', ')', ';', 'if', '(', 'ret', ')', 'goto', 'out', ';', 'input', '[', '0', ']', '++', ';', 'blocklen', '=', '(', 'drbg_blocklen', '(', 'drbg', ')', '<', '(', 'outlen', '-', 'len', ')', ')', '?', 'drbg_blocklen', '(', 'drbg', ')', ':', '(', 'outlen', '-', 'len', ')', ';', 'memcpy', '(', 'outval', '+', 'len', ',', 'tmp', ',', 'blocklen', ')', ';', 'len', '+=', 'blocklen', ';', '}', 'out', ':', 'memset', '(', 'tmp', ',', '0', ',', 'drbg_blocklen', '(', 'drbg', ')', ')', ';', 'return', 'ret', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
174,"['snd_ice1712_ews88mt_input_sense_put', '(', 'struct', 'snd_kcontrol', '*', 'kcontrol', ',', 'struct', 'snd_ctl_elem_value', '*', 'ucontrol', ')', '{', 'struct', 'snd_ice1712', '*', 'ice', '=', 'snd_kcontrol_chip', '(', 'kcontrol', ')', ';', 'struct', 'ews_spec', '*', 'spec', '=', 'ice', '->', 'spec', ';', 'int', 'channel', '=', 'snd_ctl_get_ioffidx', '(', 'kcontrol', ',', '&', 'ucontrol', '->', 'id', ')', ';', 'unsigned', 'char', 'data', ',', 'ndata', ';', 'if', '(', 'snd_BUG_ON', '(', 'channel', '<', '0', '||', 'channel', '>', '7', ')', ')', 'return', '0', ';', 'snd_i2c_lock', '(', 'ice', '->', 'i2c', ')', ';', 'if', '(', 'snd_i2c_readbytes', '(', 'spec', '->', 'i2cdevs', '[', 'EWS_I2C_PCF1', ']', ',', '&', 'data', ',', '1', ')', '!=', '1', ')', '{', 'snd_i2c_unlock', '(', 'ice', '->', 'i2c', ')', ';', 'return', '-', 'EIO', ';', '}', 'ndata', '=', '(', 'data', '&', '~', '(', '1', '<<', 'channel', ')', ')', '|', '(', 'ucontrol', '->', 'value', '.', 'enumerated', '.', 'item', '[', '0', ']', '?', '0', ':', '(', '1', '<<', 'channel', ')', ')', ';', 'if', '(', 'ndata', '!=', 'data', '&&', 'snd_i2c_sendbytes', '(', 'spec', '->', 'i2cdevs', '[', 'EWS_I2C_PCF1', ']', ',', '&', 'ndata', ',', '1', ')', '!=', '1', ')', '{', 'snd_i2c_unlock', '(', 'ice', '->', 'i2c', ')', ';', 'return', '-', 'EIO', ';', '}', 'snd_i2c_unlock', '(', 'ice', '->', 'i2c', ')', ';', 'return', 'ndata', '!=', 'data', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
175,"['gst_collect_pads2_set_flushing', '(', 'GstCollectPads2', '*', 'pads', ',', 'gboolean', 'flushing', ')', '{', 'g_return_if_fail', '(', 'pads', '!=', 'NULL', ')', ';', 'g_return_if_fail', '(', 'GST_IS_COLLECT_PADS2', '(', 'pads', ')', ')', ';', 'GST_COLLECT_PADS2_STREAM_LOCK', '(', 'pads', ')', ';', 'gst_collect_pads2_set_flushing_unlocked', '(', 'pads', ',', 'flushing', ')', ';', 'GST_COLLECT_PADS2_STREAM_UNLOCK', '(', 'pads', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
176,"['get_udp_in_errors', '(', ')', '{', 'FILE', '*', 'f', '=', 'NULL', ';', 'u_int64_t', 'errs', '=', '0', ';', 'char', 'buf', '[', '512', ']', ',', '*', 'p', ';', 'int', 'len', ',', 'i', ';', 'f', '=', 'fopen', '(', '""""', ',', '""""', ')', ';', 'if', '(', '!f', ')', '{', '/', '/', 'warn', '(', '""""', ')', ';', 'return', '0', ';', '}', 'while', '(', '!feof', '(', 'f', ')', ')', '{', 'if', '(', '!fgets', '(', 'buf', ',', 'sizeof', '(', 'buf', ')', '-', '1', ',', 'f', ')', ')', 'break', ';', 'if', '(', 'strstr', '(', 'buf', ',', '""""', ')', '&&', 'strstr', '(', 'buf', ',', '""""', ')', '&&', '!feof', '(', 'f', ')', ')', '{', 'if', '(', '!fgets', '(', 'buf', ',', 'sizeof', '(', 'buf', ')', '-', '1', ',', 'f', ')', ')', 'break', ';', 'len', '=', 'strlen', '(', 'buf', ')', ';', '/', '*', 'Udp', ':', 'InDatagrams', 'NoPorts', 'InErrors', 'p', '=', 'buf', ';', 'for', '(', 'i', '=', '0', ';', '(', 'i', '<', '3', ')', '&&', '(', 'p', '!=', 'NULL', ')', '&&', '(', 'p', '<', 'buf', '+', 'len', '-', '1', ')', ';', 'i', '++', ',', 'p', '++', ')', '{', 'p', '=', 'strchr', '(', 'p', ',', ""''"", ')', ';', '}', 'if', '(', '(', 'p', '!=', 'NULL', ')', '&&', '(', 'p', '<', 'buf', '+', 'len', '-', '1', ')', ')', '{', 'errs', '=', 'atol', '(', 'p', '--', ')', ';', '}', 'else', '{', 'errs', '=', '0', ';', '}', 'break', ';', '}', '}', 'fclose', '(', 'f', ')', ';', 'return', 'errs', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
177,"['xkobo_shot', '(', ')', '{', 'int', 'i', ',', 'j', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'game', '.', 'bolts', '&&', 'boltst', '[', 'i', ']', ';', 'i', '++', ')', ';', 'for', '(', 'j', '=', 'i', '+', '1', ';', 'j', '<', 'game', '.', 'bolts', '&&', 'boltst', '[', 'j', ']', ';', 'j', '++', ')', ';', 'if', '(', 'j', '>=', 'game', '.', 'bolts', ')', '{', 'sound', '.', 'g_player_overheat', '(', '1', ')', ';', 'return', '1', ';', '}', 'shot_single', '(', 'i', ',', 'di', ',', '0', ')', ';', 'shot_single', '(', 'j', ',', '(', 'di', '>', '4', ')', '?', '(', 'di', '-', '4', ')', ':', '(', 'di', '+', '4', ')', ',', '0', ')', ';', 'sound', '.', 'g_player_fire', '(', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
178,"['SetOutputFormat', '(', 'int', 'format', ')', '{', 'if', '(', 'format', '==', 'this', '->', 'OutputFormat', ')', '{', 'return', ';', '}', 'this', '->', 'OutputFormat', '=', 'format', ';', '/', '/', 'convert', 'color', 'format', 'to', 'number', 'of', 'scalar', 'int', 'numComponents', '=', '1', ';', 'switch', '(', 'this', '->', 'OutputFormat', ')', '{', 'case', 'VTK_RGBA', ':', 'numComponents', '=', '4', ';', 'break', ';', 'case', 'VTK_RGB', ':', 'numComponents', '=', '3', ';', 'break', ';', 'case', 'VTK_LUMINANCE_ALPHA', ':', 'numComponents', '=', '2', ';', 'break', ';', 'case', 'VTK_LUMINANCE', ':', 'numComponents', '=', '1', ';', 'break', ';', 'default', ':', 'vtkErrorMacro', '(', '<<', '""""', ')', ';', 'break', ';', '}', 'this', '->', 'NumberOfScalarComponents', '=', 'numComponents', ';', 'if', '(', 'this', '->', 'FrameBufferBitsPerPixel', '!=', 'numComponents', '*', '8', ')', '{', 'this', '->', 'FrameBufferMutex', '->', 'Lock', '(', ')', ';', 'this', '->', 'FrameBufferBitsPerPixel', '=', 'numComponents', '*', '8', ';', 'if', '(', 'this', '->', 'Initialized', ')', '{', 'this', '->', 'UpdateFrameBuffer', '(', ')', ';', '}', 'this', '->', 'FrameBufferMutex', '->', 'Unlock', '(', ')', ';', '}', 'this', '->', 'Modified', '(', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
179,"['hx509_ca_sign', '(', 'hx509_context', 'context', ',', 'hx509_ca_tbs', 'tbs', ',', 'hx509_cert', 'signer', ',', 'hx509_cert', '*', 'certificate', ')', '{', 'const', 'Certificate', '*', 'signer_cert', ';', 'AuthorityKeyIdentifier', 'ai', ';', 'int', 'ret', ';', 'memset', '(', '&', 'ai', ',', '0', ',', 'sizeof', '(', 'ai', ')', ')', ';', 'signer_cert', '=', '_hx509_get_cert', '(', 'signer', ')', ';', 'ret', '=', 'get_AuthorityKeyIdentifier', '(', 'context', ',', 'signer_cert', ',', '&', 'ai', ')', ';', 'if', '(', 'ret', ')', 'goto', 'out', ';', 'ret', '=', 'ca_sign', '(', 'context', ',', 'tbs', ',', '_hx509_cert_private_key', '(', 'signer', ')', ',', '&', 'ai', ',', '&', 'signer_cert', '->', 'tbsCertificate', '.', 'subject', ',', 'certificate', ')', ';', 'out', ':', 'free_AuthorityKeyIdentifier', '(', '&', 'ai', ')', ';', 'return', 'ret', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
180,"['get_fields_for_table', '(', 'const', 'Document', '*', 'document', ',', 'const', 'Glib', ':', ':', 'ustring', '&', 'table_name', ',', 'bool', '/', '*', 'including_system_fields', '*', '/', ')', '{', '/', '/', 'We', 'could', 'also', 'get', 'the', 'field', 'definitions', 'from', 'the', 'database', ':', '/', '/', 'But', 'that', 'is', 'inefficient', 'because', 'this', 'method', 'is', 'called', 'so', 'often', ',', '/', '/', 'and', 'that', 'meta', 'information', 'is', 'not', 'even', 'available', 'if', 'the', 'user', 'does', 'not', 'have', 'SELECT', 'rights', '.', '/', '/', 'Therefore', 'we', 'just', 'assume', 'that', 'the', 'Document', 'has', 'been', 'updated', 'from', 'the', 'database', 'already', '.', '/', '/', 'type_vec_fields', 'fieldsDatabase', '=', 'get_fields_for_table_from_database', '(', 'table_name', ',', 'including_system_fields', ')', ';', 'if', '(', '!document', ')', '{', 'std', ':', ':', 'cerr', '<<', 'G_STRFUNC', '<<', '""""', '<<', 'std', ':', ':', 'endl', ';', 'return', 'type_vec_fields', '(', ')', ';', '/', '/', 'This', 'should', 'never', 'happen', '.', '}', 'type_vec_fields', 'result', '=', 'document', '->', 'get_table_fields', '(', 'table_name', ')', ';', '/', '/', 'Look', 'at', 'each', 'field', 'in', 'the', 'database', ':', '/', '*', 'for', '(', 'type_vec_fields', ':', ':', 'iterator', 'iter', '=', 'fieldsDocument', '.', 'begin', '(', ')', ';', 'iter', '!=', 'fieldsDocument', '.', 'end', '(', ')', ';', '++', 'iter', ')', '{', 'sharedptr', '<', 'Field', '>', 'field', '=', '*', 'iter', ';', 'const', 'Glib', ':', ':', 'ustring', 'field_name', '=', 'field', '->', 'get_name', '(', ')', ';', '/', '/', 'Get', 'the', 'field', 'info', 'from', 'the', 'database', ':', '/', '/', 'This', 'is', 'in', 'the', 'document', 'as', 'well', ',', 'but', 'it', '_might_', 'have', 'changed', '.', 'type_vec_fields', ':', ':', 'const_iterator', 'iterFindDatabase', '=', 'std', ':', ':', 'find_if', '(', 'fieldsDatabase', '.', 'begin', '(', ')', ',', 'fieldsDatabase', '.', 'end', '(', ')', ',', 'predicate_FieldHasName', '<', 'Field', '>', '(', 'field_name', ')', ')', ';', 'if', '(', 'iterFindDatabase', '!=', 'fieldsDatabase', '.', 'end', '(', ')', ')', '/', '/', 'Ignore', 'fields', 'that', ""don't"", 'exist', 'in', 'the', 'database', 'anymore', '.', '{', 'Glib', ':', ':', 'RefPtr', '<', 'Gnome', ':', ':', 'Gda', ':', ':', 'Column', '>', 'field_info_document', '=', 'field', '->', 'get_field_info', '(', ')', ';', '/', '/', 'Update', 'the', 'Field', 'information', 'that', '_might_', 'have', 'changed', 'in', 'the', 'database', '.', 'Glib', ':', ':', 'RefPtr', '<', 'Gnome', ':', ':', 'Gda', ':', ':', 'Column', '>', 'field_info', '=', '(', '*', 'iterFindDatabase', ')', '->', 'get_field_info', '(', ')', ';', '/', '/', 'libgda', 'does', 'not', 'tell', 'us', 'whether', 'the', 'field', 'is', 'auto_incremented', ',', 'so', 'we', 'need', 'to', 'get', 'that', 'from', 'the', 'document', '.', 'field_info', '->', 'set_auto_increment', '(', 'field_info_document', '->', 'get_auto_increment', '(', ')', ')', ';', '/', '/', 'libgda', 'does', 'not', 'tell', 'us', 'whether', 'the', 'field', 'is', 'auto_incremented', ',', 'so', 'we', 'need', 'to', 'get', 'that', 'from', 'the', 'document', '.', '/', '/', 'TODO_gda', ':', 'field_info', '->', 'set_primary_key', '(', 'field_info_document', '->', 'get_primary_key', '(', ')', ')', ';', '/', '/', 'libgda', 'does', 'yet', 'tell', 'us', 'correct', 'default_value', 'information', 'so', 'we', 'need', 'to', 'get', 'that', 'from', 'the', 'document', '.', 'field_info', '->', 'set_default_value', '(', 'field_info_document', '->', 'get_default_value', '(', ')', ')', ';', 'field', '->', 'set_field_info', '(', 'field_info', ')', ';', 'result', '.', 'push_back', '(', '*', 'iter', ')', ';', '}', '}', '/', '/', 'Add', 'any', 'fields', 'that', 'are', 'in', 'the', 'database', ',', 'but', 'not', 'in', 'the', 'document', ':', 'for', '(', 'type_vec_fields', ':', ':', 'iterator', 'iter', '=', 'fieldsDatabase', '.', 'begin', '(', ')', ';', 'iter', '!=', 'fieldsDatabase', '.', 'end', '(', ')', ';', '++', 'iter', ')', '{', 'const', 'Glib', ':', ':', 'ustring', 'field_name', '=', '(', '*', 'iter', ')', '->', 'get_name', '(', ')', ';', '/', '/', 'Look', 'in', 'the', 'result', 'so', 'far', ':', 'type_vec_fields', ':', ':', 'const_iterator', 'iterFind', '=', 'std', ':', ':', 'find_if', '(', 'result', '.', 'begin', '(', ')', ',', 'result', '.', 'end', '(', ')', ',', 'predicate_FieldHasName', '<', 'Field', '>', '(', 'field_name', ')', ')', ';', '/', '/', 'Add', 'it', 'if', 'it', 'is', 'not', 'there', ':', 'if', '(', 'iterFind', '==', 'result', '.', 'end', '(', ')', ')', 'result', '.', 'push_back', '(', '*', 'iter', ')', ';', '}', 'return', 'result', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
181,"['variantSet', '(', 'enum', 'VariantType', 'type', ',', 'void', '*', 'value', ',', 'unsigned', 'long', 'valueSize', ',', 'void', '*', 'userParam', ',', 'void', '(', '*', 'setter', ')', '(', 'void', '*', 'userParam', ',', 'const', 'char', '*', 'string', ')', ')', '{', 'switch', '(', 'type', ')', '{', 'case', 'VARIANT_TYPE_STRING', ':', 'setter', '(', 'userParam', ',', 'value', ')', ';', 'break', ';', 'case', 'VARIANT_TYPE_SIGNED_INTEGER', ':', 'if', '(', 'valueSize', '>=', 'sizeof', '(', 'signed', 'long', ')', ')', '{', 'char', 'trans', '[', '32', ']', ';', 'snprintf', '(', 'trans', ',', 'sizeof', '(', 'trans', ')', '-', '1', ',', '""""', ',', '*', '(', 'signed', 'long', '*', ')', 'value', ')', ';', 'setter', '(', 'userParam', ',', 'trans', ')', ';', '}', 'break', ';', 'case', 'VARIANT_TYPE_UNSIGNED_INTEGER', ':', 'if', '(', 'valueSize', '>=', 'sizeof', '(', 'unsigned', 'long', ')', ')', '{', 'char', 'trans', '[', '32', ']', ';', 'snprintf', '(', 'trans', ',', 'sizeof', '(', 'trans', ')', '-', '1', ',', '""""', ',', '*', '(', 'unsigned', 'long', '*', ')', 'value', ')', ';', 'setter', '(', 'userParam', ',', 'trans', ')', ';', '}', 'break', ';', 'case', 'VARIANT_TYPE_SIGNED_SHORT', ':', 'if', '(', 'valueSize', '>=', 'sizeof', '(', 'signed', 'short', ')', ')', '{', 'char', 'trans', '[', '16', ']', ';', 'snprintf', '(', 'trans', ',', 'sizeof', '(', 'trans', ')', '-', '1', ',', '""""', ',', '*', '(', 'signed', 'short', '*', ')', 'value', ')', ';', 'setter', '(', 'userParam', ',', 'trans', ')', ';', '}', 'break', ';', 'case', 'VARIANT_TYPE_UNSIGNED_SHORT', ':', 'if', '(', 'valueSize', '>=', 'sizeof', '(', 'signed', 'short', ')', ')', '{', 'char', 'trans', '[', '16', ']', ';', 'snprintf', '(', 'trans', ',', 'sizeof', '(', 'trans', ')', '-', '1', ',', '""""', ',', '*', '(', 'unsigned', 'short', '*', ')', 'value', ')', ';', 'setter', '(', 'userParam', ',', 'trans', ')', ';', '}', 'break', ';', 'case', 'VARIANT_TYPE_FLOAT', ':', 'case', 'VARIANT_TYPE_DOUBLE', ':', 'if', '(', '(', 'valueSize', '>=', 'sizeof', '(', 'float', ')', ')', '||', '(', 'valueSize', '>=', 'sizeof', '(', 'double', ')', ')', ')', '{', 'char', 'trans', '[', '128', ']', ';', 'snprintf', '(', 'trans', ',', 'sizeof', '(', 'trans', ')', '-', '1', ',', '""""', ',', '*', '(', 'float', '*', ')', 'value', ')', ';', 'setter', '(', 'userParam', ',', 'trans', ')', ';', '}', 'break', ';', 'case', 'VARIANT_TYPE_CHAR', ':', 'if', '(', 'valueSize', '>=', 'sizeof', '(', 'char', ')', ')', '{', 'char', 'actual', '[', '2', ']', '=', '{', '*', '(', 'char', '*', ')', 'value', ',', '0', '}', ';', 'setter', '(', 'userParam', ',', 'actual', ')', ';', '}', 'break', ';', 'case', 'VARIANT_TYPE_BINARY_B64', ':', '{', 'char', '*', 'ret', '=', '_variantBase64Encode', '(', 'value', ',', 'valueSize', ')', ';', 'setter', '(', 'userParam', ',', 'ret', ')', ';', 'free', '(', 'ret', ')', ';', '}', 'break', ';', 'default', ':', 'break', ';', '}', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
182,"['rpz_get_zbits', '(', 'ns_client_t', '*', 'client', ',', 'dns_rdatatype_t', 'ip_type', ',', 'dns_rpz_type_t', 'rpz_type', ')', '{', 'dns_rpz_zones_t', '*', 'rpzs', ';', 'dns_rpz_st_t', '*', 'st', ';', 'dns_rpz_zbits_t', 'zbits', ';', 'rpzs', '=', 'client', '->', 'view', '->', 'rpzs', ';', 'switch', '(', 'rpz_type', ')', '{', 'case', 'DNS_RPZ_TYPE_CLIENT_IP', ':', 'zbits', '=', 'rpzs', '->', 'have', '.', 'client_ip', ';', 'break', ';', 'case', 'DNS_RPZ_TYPE_QNAME', ':', 'zbits', '=', 'rpzs', '->', 'have', '.', 'qname', ';', 'break', ';', 'case', 'DNS_RPZ_TYPE_IP', ':', 'if', '(', 'ip_type', '==', 'dns_rdatatype_a', ')', '{', 'zbits', '=', 'rpzs', '->', 'have', '.', 'ipv4', ';', '}', 'else', 'if', '(', 'ip_type', '==', 'dns_rdatatype_aaaa', ')', '{', 'zbits', '=', 'rpzs', '->', 'have', '.', 'ipv6', ';', '}', 'else', '{', 'zbits', '=', 'rpzs', '->', 'have', '.', 'ip', ';', '}', 'break', ';', 'case', 'DNS_RPZ_TYPE_NSDNAME', ':', 'zbits', '=', 'rpzs', '->', 'have', '.', 'nsdname', ';', 'break', ';', 'case', 'DNS_RPZ_TYPE_NSIP', ':', 'if', '(', 'ip_type', '==', 'dns_rdatatype_a', ')', '{', 'zbits', '=', 'rpzs', '->', 'have', '.', 'nsipv4', ';', '}', 'else', 'if', '(', 'ip_type', '==', 'dns_rdatatype_aaaa', ')', '{', 'zbits', '=', 'rpzs', '->', 'have', '.', 'nsipv6', ';', '}', 'else', '{', 'zbits', '=', 'rpzs', '->', 'have', '.', 'nsip', ';', '}', 'break', ';', 'default', ':', 'INSIST', '(', '0', ')', ';', 'break', ';', '}', 'st', '=', 'client', '->', 'query', '.', 'rpz_st', ';', '/', '*', '*', '*', '\tthe', 'earliest', 'configured', 'policy', 'zone', '(', 'rpz', '->', 'num', ')', '*', '\tQNAME', 'over', 'IP', 'over', 'NSDNAME', 'over', 'NSIP', '(', 'rpz_type', ')', '*', '\tthe', 'smallest', 'name', ',', '*', '\tthe', 'longest', 'IP', 'address', 'prefix', ',', '*', '\tthe', 'lexically', 'smallest', 'address', '.', 'if', '(', 'st', '->', 'm', '.', 'policy', '!=', 'DNS_RPZ_POLICY_MISS', ')', '{', 'if', '(', 'st', '->', 'm', '.', 'type', '>=', 'rpz_type', ')', '{', 'zbits', '&=', 'DNS_RPZ_ZMASK', '(', 'st', '->', 'm', '.', 'rpz', '->', 'num', ')', ';', '}', 'else', '{', 'zbits', '&=', 'DNS_RPZ_ZMASK', '(', 'st', '->', 'm', '.', 'rpz', '->', 'num', ')', '>>', '1', ';', '}', '}', '/', '*', '*', 'If', 'the', 'client', 'wants', 'recursion', ',', 'allow', 'only', 'compatible', 'policies', '.', 'if', '(', '!RECURSIONOK', '(', 'client', ')', ')', 'zbits', '&=', 'rpzs', '->', 'p', '.', 'no_rd_ok', ';', 'return', '(', 'zbits', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
183,"['openpgp_s2k', '(', 'const', 'void', '*', 'passphrase', ',', 'size_t', 'passphraselen', ',', 'int', 'algo', ',', 'int', 'hashalgo', ',', 'const', 'void', '*', 'salt', ',', 'size_t', 'saltlen', ',', 'unsigned', 'long', 'iterations', ',', 'size_t', 'keysize', ',', 'void', '*', 'keybuffer', ')', '{', 'gpg_err_code_t', 'ec', ';', 'gcry_md_hd_t', 'md', ';', 'char', '*', 'key', '=', 'keybuffer', ';', 'int', 'pass', ',', 'i', ';', 'int', 'used', '=', '0', ';', 'int', 'secmode', ';', 'if', '(', '(', 'algo', '==', 'GCRY_KDF_SALTED_S2K', '||', 'algo', '==', 'GCRY_KDF_ITERSALTED_S2K', ')', '&&', '(', '!salt', '||', 'saltlen', '!=', '8', ')', ')', 'return', 'GPG_ERR_INV_VALUE', ';', 'secmode', '=', 'gcry_is_secure', '(', 'passphrase', ')', '||', 'gcry_is_secure', '(', 'keybuffer', ')', ';', 'ec', '=', 'gpg_err_code', '(', 'gcry_md_open', '(', '&', 'md', ',', 'hashalgo', ',', 'secmode', '?', 'GCRY_MD_FLAG_SECURE', ':', '0', ')', ')', ';', 'if', '(', 'ec', ')', 'return', 'ec', ';', 'for', '(', 'pass', '=', '0', ';', 'used', '<', 'keysize', ';', 'pass', '++', ')', '{', 'if', '(', 'pass', ')', '{', 'gcry_md_reset', '(', 'md', ')', ';', 'gcry_md_putc', '(', 'md', ',', '0', ')', ';', '}', 'if', '(', 'algo', '==', 'GCRY_KDF_SALTED_S2K', '||', 'algo', '==', 'GCRY_KDF_ITERSALTED_S2K', ')', '{', 'int', 'len2', '=', 'passphraselen', '+', '8', ';', 'unsigned', 'long', 'count', '=', 'len2', ';', 'if', '(', 'algo', '==', 'GCRY_KDF_ITERSALTED_S2K', ')', '{', 'count', '=', 'iterations', ';', 'if', '(', 'count', '<', 'len2', ')', 'count', '=', 'len2', ';', '}', 'while', '(', 'count', '>', 'len2', ')', '{', 'gcry_md_write', '(', 'md', ',', 'salt', ',', 'saltlen', ')', ';', 'gcry_md_write', '(', 'md', ',', 'passphrase', ',', 'passphraselen', ')', ';', 'count', '-=', 'len2', ';', '}', 'if', '(', 'count', '<', 'saltlen', ')', 'gcry_md_write', '(', 'md', ',', 'salt', ',', 'count', ')', ';', '{', 'gcry_md_write', '(', 'md', ',', 'salt', ',', 'saltlen', ')', ';', 'count', '-=', 'saltlen', ';', 'gcry_md_write', '(', 'md', ',', 'passphrase', ',', 'count', ')', ';', '}', '}', 'gcry_md_write', '(', 'md', ',', 'passphrase', ',', 'passphraselen', ')', ';', 'gcry_md_final', '(', 'md', ')', ';', 'i', '=', 'gcry_md_get_algo_dlen', '(', 'hashalgo', ')', ';', 'if', '(', 'i', '>', 'keysize', '-', 'used', ')', 'i', '=', 'keysize', '-', 'used', ';', 'memcpy', '(', 'key', '+', 'used', ',', 'gcry_md_read', '(', 'md', ',', 'hashalgo', ')', ',', 'i', ')', ';', 'used', '+=', 'i', ';', '}', 'gcry_md_close', '(', 'md', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
184,"['DXDelete', '(', 'Object', 'o', ')', '{', 'int', 'rc', '=', '0', ',', 'i', ',', 'n', ';', 'Class', 'class', ';', 'if', '(', '!o', ')', 'return', 'OK', ';', 'if', '(', 'o', '->', 'count', '==', 'PERMANENT', ')', 'return', 'OK', ';', 'if', '(', 'o', '->', 'count', '<', '0', ')', 'DXErrorReturn', '(', 'ERROR_DATA_INVALID', ',', '""""', ')', ';', 'class', '=', 'DXGetObjectClass', '(', 'o', ')', ';', 'if', '(', '(', 'int', ')', 'class', '<=', '(', 'int', ')', 'CLASS_MIN', '||', '(', 'int', ')', 'class', '>=', '(', 'int', ')', 'CLASS_MAX', ')', '{', 'DXSetError', '(', 'ERROR_DATA_INVALID', ',', '""""', ',', 'class', ')', ';', 'return', 'ERROR', ';', '}', 'if', '(', 'DXfetch_and_add', '(', '&', 'o', '->', 'count', ',', '-', '1', ',', '&', 'o', '->', 'lock', ',', 'ID', ')', '>', '1', ')', 'return', 'OK', ';', '#if', 'if', '(', 'trace', '>=', '2', ')', 'DXDebug', '(', '""""', ',', '""""', ',', 'CLASS_NAME', '(', 'o', '->', 'class', ')', ',', 'o', ')', ';', 'if', '(', 'trace', '>=', '1', ')', '{', 'int', 'n', '=', '(', 'int', ')', 'CLASS_CLASS', '(', 'o', '->', 'class', ')', ';', 'DXlock', '(', '&', 'table', '->', 'lock', ',', '0', ')', ';', 'table', '->', 'counts', '[', 'n', ']', '.', 'deleted', '+=', '1', ';', 'DXunlock', '(', '&', 'table', '->', 'lock', ',', '0', ')', ';', '}', '/', '*', '*', 'delete', '*', 'XXX', '-', 'this', 'should', 'by', 'in', 'an', '_DeleteObject', 'to', 'be', 'called', 'by', '*', 'i', '.', 'e', '.', '_Delete', 'should', 'be', 'handled', 'like', 'New', 'and', 'for', '(', 'i', '=', '0', ',', 'n', '=', 'o', '->', 'nattributes', ';', 'i', '<', 'n', ';', 'i', '++', ')', 'if', '(', 'o', '->', 'count', '!=', 'PERMANENT', ')', 'DXDelete', '(', 'o', '->', 'attributes', '[', 'i', ']', '.', 'value', ')', ';', 'if', '(', 'o', '->', 'attributes', '!=', 'o', '->', 'local', ')', 'DXFree', '(', '(', 'Pointer', ')', 'o', '->', 'attributes', ')', ';', 'rc', '=', '_dxfDelete', '(', 'o', ')', ';', '/', '*', 'in', 'case', 'we', 'mistakenly', 'delete', 'this', 'object', 'again', '-', 'same', 'as', 'above', ';', '*', 'was', 'only', 'if', 'DEBUGGED', 'up', 'through', 'dx', '2', '.', '1', '.', 'o', '->', 'class_id', '=', 'CLASS_DELETED', ';', 'o', '->', 'count', '=', '-', '1', ';', 'o', '->', 'class', '=', 'NULL', ';', 'DXdestroy_lock', '(', '&', 'o', '->', 'lock', ')', ';', 'DXFree', '(', '(', 'Pointer', ')', 'o', ')', ';', 'return', 'rc', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
185,"['changeKomi', '(', 'But', '*', 'but', ')', '{', 'CliMatch', '*', 'm', '=', 'but_packet', '(', 'but', ')', ';', 'char', 'komiStr', '[', '10', ']', ';', 'assert', '(', 'MAGIC', '(', 'm', ')', ')', ';', 'if', '(', 'newKomi', '(', 'm', '->', 'komiIn', ',', 'butTextin_get', '(', 'm', '->', 'komiIn', ')', ')', '&', 'BUTOUT_ERR', ')', 'return', '(', 'BUTOUT_ERR', ')', ';', 'if', '(', 'but', '==', 'm', '->', 'komiUp', ')', '{', 'm', '->', 'komi', '+=', '1', '.', '0', ';', 'if', '(', 'm', '->', 'komi', '>', '99', '.', '5', ')', 'm', '->', 'komi', '=', '99', '.', '5', ';', '}', 'else', '{', 'assert', '(', 'but', '==', 'm', '->', 'komiDown', ')', ';', 'm', '->', 'komi', '-=', '1', '.', '0', ';', 'if', '(', 'm', '->', 'komi', '<', '-', '99', '.', '5', ')', 'm', '->', 'komi', '=', '-', '99', '.', '5', ';', '}', 'sprintf', '(', 'komiStr', ',', '""""', ',', 'm', '->', 'komi', ')', ';', 'butTextin_set', '(', 'm', '->', 'komiIn', ',', 'komiStr', ',', 'TRUE', ')', ';', 'return', '(', '0', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
186,"['expand_acl', '(', 'struct', 'proc_acl', '*', 'proc', ',', 'struct', 'role_acl', '*', 'role', ')', '{', 'char', '*', 'tmpproc', ';', 'struct', 'proc_acl', '*', 'tmpp', ';', 'tmpproc', '=', '(', 'char', '*', ')', 'alloca', '(', 'strlen', '(', 'proc', '->', 'filename', ')', '+', '1', ')', ';', 'strcpy', '(', 'tmpproc', ',', 'proc', '->', 'filename', ')', ';', 'while', '(', 'parent_dir', '(', 'proc', '->', 'filename', ',', '&', 'tmpproc', ')', ')', '{', 'tmpp', '=', 'lookup_acl_subject_by_name', '(', 'role', ',', 'tmpproc', ')', ';', 'if', '(', 'tmpp', ')', '{', 'proc', '->', 'parent_subject', '=', 'tmpp', ';', 'return', ';', '}', '}', 'return', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
187,"['png_colorspace_check_xy', '(', 'png_XYZ', '*', 'XYZ', ',', 'const', 'png_xy', '*', 'xy', ')', '{', 'int', 'result', ';', 'png_xy', 'xy_test', ';', 'result', '=', 'png_XYZ_from_xy', '(', 'XYZ', ',', 'xy', ')', ';', 'if', '(', 'result', ')', 'return', 'result', ';', 'result', '=', 'png_xy_from_XYZ', '(', '&', 'xy_test', ',', 'XYZ', ')', ';', 'if', '(', 'result', ')', 'return', 'result', ';', 'if', '(', 'png_colorspace_endpoints_match', '(', 'xy', ',', '&', 'xy_test', ',', '5', '/', '*', 'actually', ',', 'the', 'math', 'is', 'pretty', 'accurate', '*', '/', ')', ')', 'return', '0', ';', 'return', '1', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
188,"['setContent', '(', 'GooString', '*', 'new_content', ')', '{', 'if', '(', 'isReadOnly', '(', ')', ')', '{', 'error', '(', '-', '1', ',', '""""', ')', ';', 'return', ';', '}', 'modified', '=', 'gTrue', ';', 'if', '(', 'new_content', '==', 'NULL', ')', '{', 'parent', '->', 'setContentCopy', '(', 'NULL', ')', ';', '}', 'else', '{', '/', '/', 'append', 'the', 'unicode', 'marker', '<', 'FE', 'FF', '>', 'if', 'if', '(', '!new_content', '->', 'hasUnicodeMarker', '(', ')', ')', '{', 'new_content', '->', 'insert', '(', '0', ',', '0xff', ')', ';', 'new_content', '->', 'insert', '(', '0', ',', '0xfe', ')', ';', '}', 'GooString', '*', 'cont', '=', 'new', 'GooString', '(', 'new_content', ')', ';', 'parent', '->', 'setContentCopy', '(', 'cont', ')', ';', 'Object', 'obj1', ';', 'obj1', '.', 'initString', '(', 'cont', ')', ';', 'updateField', '(', '""""', ',', '&', 'obj1', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
189,"['tp_base_contact_list_channel_dispose', '(', 'GObject', '*', 'object', ')', '{', 'TpBaseContactListChannel', '*', 'self', '=', 'TP_BASE_CONTACT_LIST_CHANNEL', '(', 'object', ')', ';', 'void', '(', '*', 'dispose', ')', '(', 'GObject', '*', ')', '=', 'G_OBJECT_CLASS', '(', '_tp_base_contact_list_channel_parent_class', ')', '->', 'dispose', ';', '_tp_base_contact_list_channel_close', '(', 'self', ')', ';', 'if', '(', 'dispose', '!=', 'NULL', ')', 'dispose', '(', 'object', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
190,"['gnac_profiles_utils_init_raw_audioconvert', '(', 'XMLDoc', '*', 'doc', ')', '{', 'if', '(', 'G_UNLIKELY', '(', '!raw', ')', ')', '{', 'raw', '=', 'gnac_profiles_xml_engine_get_text_node', '(', 'doc', ',', '""""', ')', ';', '}', 'if', '(', 'G_UNLIKELY', '(', '!audioconvert', ')', ')', '{', 'audioconvert', '=', 'gnac_profiles_xml_engine_get_text_node', '(', 'doc', ',', '""""', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
191,"['glmLinearTexture', '(', 'GLMmodel', '*', 'model', ',', 'float', 'h', ',', 'float', 'w', ')', '{', 'GLMgroup', '*', 'group', ';', 'GLfloat', 'dimensions', '[', '3', ']', ';', 'GLfloat', 'x', ',', 'y', ',', 'scalefactor', ';', 'GLuint', 'i', ';', 'if', '(', '!', '(', 'model', ')', ')', 'return', ';', 'if', '(', 'model', '->', 'texcoords', ')', 'free', '(', 'model', '->', 'texcoords', ')', ';', 'model', '->', 'numtexcoords', '=', 'model', '->', 'numvertices', ';', 'model', '->', 'texcoords', '=', '(', 'GLfloat', '*', ')', 'malloc', '(', 'sizeof', '(', 'GLfloat', ')', '*', '2', '*', '(', 'model', '->', 'numtexcoords', '+', '1', ')', ')', ';', 'glmDimensions', '(', 'model', ',', 'dimensions', ')', ';', 'scalefactor', '=', '2', '.', '0f', '/', '_glmAbs', '(', '_glmMax', '(', '_glmMax', '(', 'dimensions', '[', '0', ']', ',', 'dimensions', '[', '1', ']', ')', ',', 'dimensions', '[', '2', ']', ')', ')', ';', 'for', '(', 'i', '=', '1', ';', 'i', '<=', 'model', '->', 'numvertices', ';', 'i', '++', ')', '{', 'x', '=', 'model', '->', 'vertices', '[', '3', '*', 'i', '+', '0', ']', '*', 'scalefactor', ';', 'y', '=', 'model', '->', 'vertices', '[', '3', '*', 'i', '+', '2', ']', '*', 'scalefactor', ';', 'model', '->', 'texcoords', '[', '2', '*', 'i', '+', '0', ']', '=', '(', '(', 'x', '+', '1', '.', '0f', ')', '/', '2', '.', '0f', ')', '*', 'w', ';', 'model', '->', 'texcoords', '[', '2', '*', 'i', '+', '1', ']', '=', '(', '(', 'y', '+', '1', '.', '0f', ')', '/', '2', '.', '0f', ')', '*', 'h', ';', '}', 'group', '=', 'model', '->', 'groups', ';', 'while', '(', 'group', ')', '{', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'group', '->', 'numtriangles', ';', 'i', '++', ')', '{', 'T', '(', 'group', '->', 'triangles', '[', 'i', ']', ')', '.', 'tindices', '[', '0', ']', '=', 'T', '(', 'group', '->', 'triangles', '[', 'i', ']', ')', '.', 'vindices', '[', '0', ']', ';', 'T', '(', 'group', '->', 'triangles', '[', 'i', ']', ')', '.', 'tindices', '[', '1', ']', '=', 'T', '(', 'group', '->', 'triangles', '[', 'i', ']', ')', '.', 'vindices', '[', '1', ']', ';', 'T', '(', 'group', '->', 'triangles', '[', 'i', ']', ')', '.', 'tindices', '[', '2', ']', '=', 'T', '(', 'group', '->', 'triangles', '[', 'i', ']', ')', '.', 'vindices', '[', '2', ']', ';', '}', 'group', '=', 'group', '->', 'next', ';', '}', 'verbose', '(', '1', ',', '""""', ',', 'model', '->', 'numtexcoords', ')', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
192,"['ndmca_tape_read_partial', '(', 'struct', 'ndm_session', '*', 'sess', ',', 'char', '*', 'buf', ',', 'unsigned', 'count', ',', 'int', '*', 'read_count', ')', '{', 'struct', 'ndmconn', '*', '\tconn', '=', 'sess', '->', 'plumb', '.', 'tape', ';', 'int\t\t\trc', ';', 'NDMC_WITH', '(', 'ndmp9_tape_read', ',', 'NDMP9VER', ')', 'request', '->', 'count', '=', 'count', ';', 'rc', '=', 'NDMC_CALL', '(', 'conn', ')', ';', 'if', '(', 'rc', '==', '0', ')', '{', '*', 'read_count', '=', 'reply', '->', 'data_in', '.', 'data_in_len', ';', 'bcopy', '(', 'reply', '->', 'data_in', '.', 'data_in_val', ',', 'buf', ',', '*', 'read_count', ')', ';', '}', 'else', '{', 'rc', '=', 'reply', '->', 'error', ';', '}', 'NDMC_FREE_REPLY', '(', ')', ';', 'return', 'rc', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
193,"['isc_sockaddr_fromnetaddr', '(', 'isc_sockaddr_t', '*', 'sockaddr', ',', 'const', 'isc_netaddr_t', '*', 'na', ',', 'in_port_t', 'port', ')', '{', 'memset', '(', 'sockaddr', ',', '0', ',', 'sizeof', '(', '*', 'sockaddr', ')', ')', ';', 'sockaddr', '->', 'type', '.', 'sin', '.', 'sin_family', '=', 'na', '->', 'family', ';', 'switch', '(', 'na', '->', 'family', ')', '{', 'case', 'AF_INET', ':', 'sockaddr', '->', 'length', '=', 'sizeof', '(', 'sockaddr', '->', 'type', '.', 'sin', ')', ';', '#ifdef', 'sockaddr', '->', 'type', '.', 'sin', '.', 'sin_len', '=', 'sizeof', '(', 'sockaddr', '->', 'type', '.', 'sin', ')', ';', 'sockaddr', '->', 'type', '.', 'sin', '.', 'sin_addr', '=', 'na', '->', 'type', '.', 'in', ';', 'sockaddr', '->', 'type', '.', 'sin', '.', 'sin_port', '=', 'htons', '(', 'port', ')', ';', 'break', ';', 'case', 'AF_INET6', ':', 'sockaddr', '->', 'length', '=', 'sizeof', '(', 'sockaddr', '->', 'type', '.', 'sin6', ')', ';', '#ifdef', 'sockaddr', '->', 'type', '.', 'sin6', '.', 'sin6_len', '=', 'sizeof', '(', 'sockaddr', '->', 'type', '.', 'sin6', ')', ';', 'memcpy', '(', '&', 'sockaddr', '->', 'type', '.', 'sin6', '.', 'sin6_addr', ',', '&', 'na', '->', 'type', '.', 'in6', ',', '16', ')', ';', '#ifdef', 'sockaddr', '->', 'type', '.', 'sin6', '.', 'sin6_scope_id', '=', 'isc_netaddr_getzone', '(', 'na', ')', ';', 'sockaddr', '->', 'type', '.', 'sin6', '.', 'sin6_port', '=', 'htons', '(', 'port', ')', ';', 'break', ';', 'default', ':', 'INSIST', '(', '0', ')', ';', '}', 'ISC_LINK_INIT', '(', 'sockaddr', ',', 'link', ')', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
194,"['init_base', '(', ')', '{', 'DBUG_ASSERT', '(', 'inited', '==', '0', ')', ';', 'inited', '=', '1', ';', '/', '*', 'Here', 'we', 'create', 'file', 'log', 'handler', '.', 'We', ""don't"", 'do', 'it', 'for', 'the', 'table', 'log', 'here', 'as', 'it', 'cannot', 'be', 'created', 'so', 'early', '.', 'The', 'reason', 'is', 'THD', 'initialization', ',', 'which', 'depends', 'on', 'the', 'system', 'variables', '(', 'parsed', 'later', ')', '.', 'if', '(', '!file_log_handler', ')', 'file_log_handler', '=', 'new', 'Log_to_file_event_handler', ';', 'init_error_log', '(', 'LOG_FILE', ')', ';', 'file_log_handler', '->', 'init_pthread_objects', '(', ')', ';', 'mysql_rwlock_init', '(', 'key_rwlock_LOCK_logger', ',', '&', 'LOCK_logger', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
195,"['dewarpaDestroy', '(', 'L_DEWARPA', '*', '*', 'pdewa', ')', '{', 'l_int32', 'i', ';', 'L_DEWARP', '*', 'dew', ';', 'L_DEWARPA', '*', 'dewa', ';', 'PROCNAME', '(', '""""', ')', ';', 'if', '(', 'pdewa', '==', 'NULL', ')', '{', 'L_WARNING', '(', '""""', ',', 'procName', ')', ';', 'return', ';', '}', 'if', '(', '(', 'dewa', '=', '*', 'pdewa', ')', '==', 'NULL', ')', 'return', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'dewa', '->', 'nalloc', ';', 'i', '++', ')', '{', 'if', '(', '(', 'dew', '=', 'dewa', '->', 'dewarp', '[', 'i', ']', ')', '!=', 'NULL', ')', 'dewarpDestroy', '(', '&', 'dew', ')', ';', 'if', '(', '(', 'dew', '=', 'dewa', '->', 'dewarpcache', '[', 'i', ']', ')', '!=', 'NULL', ')', 'dewarpDestroy', '(', '&', 'dew', ')', ';', '}', 'numaDestroy', '(', '&', 'dewa', '->', 'namodels', ')', ';', 'numaDestroy', '(', '&', 'dewa', '->', 'napages', ')', ';', 'FREE', '(', 'dewa', '->', 'dewarp', ')', ';', 'FREE', '(', 'dewa', '->', 'dewarpcache', ')', ';', 'FREE', '(', 'dewa', ')', ';', '*', 'pdewa', '=', 'NULL', ';', 'return', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
196,"['sizeHint', '(', ')', '{', 'return', 'fontMetrics', '(', ')', '.', 'size', '(', '0', ',', 'd', '->', 'm_Text', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
197,"['amdlibGetOiTargetFromRawData', '(', 'amdlibRAW_DATA', '*', 'rawData', ',', 'amdlibOI_TARGET', '*', 'target', ')', '{', 'int', 'i', ';', 'int', 'cIndex', '=', '0', ';', 'char', 'targVal', '[', 'amdlibKEYW_VAL_LEN', ']', ';', 'amdlibLogTrace', '(', '""""', ')', ';', 'target', '->', 'element', '[', 'cIndex', ']', '.', 'targetId', '=', '1', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'rawData', '->', 'insCfg', '.', 'nbKeywords', ';', 'i', '++', ')', '{', 'if', '(', 'strstr', '(', 'rawData', '->', 'insCfg', '.', 'keywords', '[', 'i', ']', '.', 'name', ',', '""""', ')', '!=', 'NULL', ')', '{', 'strncpy', '(', 'targVal', ',', 'rawData', '->', 'insCfg', '.', 'keywords', '[', 'i', ']', '.', 'value', ',', 'amdlibKEYW_VAL_LEN', ')', ';', 'amdlibStripQuotes', '(', 'targVal', ')', ';', 'strncpy', '(', 'target', '->', 'element', '[', 'cIndex', ']', '.', 'targetName', ',', 'targVal', ',', '16', ')', ';', '}', 'if', '(', 'strncmp', '(', 'rawData', '->', 'insCfg', '.', 'keywords', '[', 'i', ']', '.', 'name', ',', '""""', ',', '8', ')', '==', '0', ')', '{', 'sscanf', '(', 'rawData', '->', 'insCfg', '.', 'keywords', '[', 'i', ']', '.', 'value', ',', '""""', ',', '&', 'target', '->', 'element', '[', 'cIndex', ']', '.', 'raEp0', ')', ';', '}', 'if', '(', 'strncmp', '(', 'rawData', '->', 'insCfg', '.', 'keywords', '[', 'i', ']', '.', 'name', ',', '""""', ',', '8', ')', '==', '0', ')', '{', 'sscanf', '(', 'rawData', '->', 'insCfg', '.', 'keywords', '[', 'i', ']', '.', 'value', ',', '""""', ',', '&', 'target', '->', 'element', '[', 'cIndex', ']', '.', 'decEp0', ')', ';', '}', 'if', '(', 'strncmp', '(', 'rawData', '->', 'insCfg', '.', 'keywords', '[', 'i', ']', '.', 'name', ',', '""""', ',', '8', ')', '==', '0', ')', '{', 'sscanf', '(', 'rawData', '->', 'insCfg', '.', 'keywords', '[', 'i', ']', '.', 'value', ',', '""""', ',', '&', 'target', '->', 'element', '[', 'cIndex', ']', '.', 'equinox', ')', ';', '}', '/', '*', 'the', 'following', 'values', 'are', 'fixed', 'until', ""ESO's"", 'VLTICS', 'writes', 'a', 'strncpy', '(', 'target', '->', 'element', '[', 'cIndex', ']', '.', 'velTyp', ',', '""""', ',', '8', ')', ';', 'strncpy', '(', 'target', '->', 'element', '[', 'cIndex', ']', '.', 'velDef', ',', '""""', ',', '8', ')', ';', 'strncpy', '(', 'target', '->', 'element', '[', 'cIndex', ']', '.', 'specTyp', ',', '""""', ',', '16', ')', ';', '}', 'return', 'amdlibSUCCESS', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
198,"['gretl_model_set_full_vcv_info', '(', 'MODEL', '*', 'pmod', ',', 'int', 'vmaj', ',', 'int', 'vmin', ',', 'int', 'order', ',', 'int', 'flags', ',', 'double', 'bw', ')', '{', 'VCVInfo', '*', 'vi', ';', 'int', 'prev', '=', '0', ';', 'int', 'err', '=', '0', ';', 'vi', '=', 'gretl_model_get_data', '(', 'pmod', ',', '""""', ')', ';', 'if', '(', 'vi', '==', 'NULL', ')', '{', 'vi', '=', 'vcv_info_new', '(', ')', ';', 'if', '(', 'vi', '==', 'NULL', ')', '{', 'return', 'E_ALLOC', ';', '}', '}', 'else', '{', 'prev', '=', '1', ';', '}', 'vi', '->', 'vmaj', '=', 'vmaj', ';', 'vi', '->', 'vmin', '=', 'vmin', ';', 'vi', '->', 'order', '=', 'order', ';', 'vi', '->', 'flags', '=', 'flags', ';', 'vi', '->', 'bw', '=', 'bw', ';', 'if', '(', '!prev', ')', '{', 'err', '=', 'gretl_model_set_data', '(', 'pmod', ',', '""""', ',', 'vi', ',', 'GRETL_TYPE_STRUCT', ',', 'sizeof', '*', 'vi', ')', ';', '}', 'return', 'err', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
199,"['list_backups', '(', 'ext2_filsys', 'fs', ',', 'unsigned', 'int', '*', 'three', ',', 'unsigned', 'int', '*', 'five', ',', 'unsigned', 'int', '*', 'seven', ')', '{', 'unsigned', 'int', '*', 'min', '=', 'three', ';', 'int', 'mult', '=', '3', ';', 'unsigned', 'int', 'ret', ';', 'if', '(', '!', '(', 'fs', '->', 'super', '->', 's_feature_ro_compat', '&', 'EXT2_FEATURE_RO_COMPAT_SPARSE_SUPER', ')', ')', '{', 'ret', '=', '*', 'min', ';', '*', 'min', '+=', '1', ';', 'return', 'ret', ';', '}', 'if', '(', '*', 'five', '<', '*', 'min', ')', '{', 'min', '=', 'five', ';', 'mult', '=', '5', ';', '}', 'if', '(', '*', 'seven', '<', '*', 'min', ')', '{', 'min', '=', 'seven', ';', 'mult', '=', '7', ';', '}', 'ret', '=', '*', 'min', ';', '*', 'min', '*=', 'mult', ';', 'return', 'ret', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
200,"['lowestEndPoint', '(', 'const', 'IntervalInfo', '&', 'I1', ',', 'const', 'IntervalInfo', '&', 'I2', ')', '{', 'SlotIndex', 'E1', '=', 'getEndPoint', '(', 'I1', ')', ';', 'SlotIndex', 'E2', '=', 'getEndPoint', '(', 'I2', ')', ';', 'if', '(', 'E1', '<', 'E2', ')', 'return', 'true', ';', 'if', '(', 'E1', '>', 'E2', ')', 'return', 'false', ';', '/', '/', 'If', 'two', 'intervals', 'end', 'at', 'the', 'same', 'point', ',', 'we', 'need', 'a', 'way', 'to', 'break', 'the', 'tie', '/', '/', 'the', 'set', 'will', 'assume', ""they're"", 'actually', 'equal', 'and', 'refuse', 'to', 'insert', '/', '/', '""""', '.', 'Just', 'compare', 'the', 'vregs', '-', 'fast', 'and', 'guaranteed', 'unique', '.', 'return', 'std', ':', ':', 'get', '<', '0', '>', '(', 'I1', ')', '->', 'reg', '<', 'std', ':', ':', 'get', '<', '0', '>', '(', 'I2', ')', '->', 'reg', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
201,"['findsubquery', '(', 'QTNode', '*', 'root', ',', 'QTNode', '*', 'ex', ',', 'QTNode', '*', 'subs', ',', 'bool', '*', 'isfind', ')', '{', 'bool\t\tDidFind', '=', 'false', ';', 'root', '=', 'dofindsubquery', '(', 'root', ',', 'ex', ',', 'subs', ',', '&', 'DidFind', ')', ';', 'if', '(', '!subs', '&&', 'DidFind', ')', 'root', '=', 'dropvoidsubtree', '(', 'root', ')', ';', 'if', '(', 'isfind', ')', '*', 'isfind', '=', 'DidFind', ';', 'return', 'root', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
202,"['ResearchGraph', '(', 'PG_Widget', '*', 'parent', ',', 'const', 'PG_Rect', '&', 'rect', ',', 'ContainerBase', '*', 'container', ')', ':', 'GraphWidget', '(', 'parent', ',', 'rect', ')', ',', 'cont', '(', 'container', ')', '{', 'setRange', '(', 'cont', '->', 'maxresearchpoints', '+', '1', ',', 'returnResourcenUseForResearch', '(', 'cont', ',', 'cont', '->', 'maxresearchpoints', ')', '.', 'energy', ')', ';', 'addCurve', '(', '0x00ff00', ')', ';', 'recalc', '(', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
203,"['changeActivation', '(', 'bool', 'activate', ',', 'QWidget', '*', 'originator', ')', '{', 'if', '(', '!activate', ')', 'return', ';', '/', '/', 'DebugDialog', ':', ':', 'debug', '(', 'QString', '(', '""""', ')', '.', 'arg', '(', 'activate', ')', '.', 'arg', '(', 'originator', '->', 'metaObject', '(', ')', '->', 'className', '(', ')', ')', ')', ';', 'FritzingWindow', '*', 'fritzingWindow', '=', 'qobject_cast', '<', 'FritzingWindow', '*', '>', '(', 'originator', ')', ';', 'if', '(', 'fritzingWindow', '==', 'NULL', ')', '{', 'fritzingWindow', '=', 'qobject_cast', '<', 'FritzingWindow', '*', '>', '(', 'originator', '->', 'parent', '(', ')', ')', ';', '}', 'if', '(', 'fritzingWindow', '==', 'NULL', ')', 'return', ';', 'm_orderedTopLevelWidgets', '.', 'removeOne', '(', 'fritzingWindow', ')', ';', 'm_orderedTopLevelWidgets', '.', 'push_front', '(', 'fritzingWindow', ')', ';', 'm_activationTimer', '.', 'stop', '(', ')', ';', 'm_activationTimer', '.', 'start', '(', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
204,"['isbinarystream', '(', 'fz_buffer', '*', 'buf', ')', '{', 'int', 'i', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'buf', '->', 'len', ';', 'i', '++', ')', 'if', '(', 'isbinary', '(', 'buf', '->', 'data', '[', 'i', ']', ')', ')', 'return', '1', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
205,"['gth_contact_sheet_theme_unref', '(', 'GthContactSheetTheme', '*', 'theme', ')', '{', 'if', '(', 'theme', '==', 'NULL', ')', 'return', ';', 'theme', '->', 'ref', '--', ';', 'if', '(', 'theme', '->', 'ref', '>', '0', ')', 'return', ';', '_g_object_unref', '(', 'theme', '->', 'file', ')', ';', 'g_free', '(', 'theme', '->', 'display_name', ')', ';', 'g_free', '(', 'theme', '->', 'header_font_name', ')', ';', 'g_free', '(', 'theme', '->', 'footer_font_name', ')', ';', 'g_free', '(', 'theme', '->', 'caption_font_name', ')', ';', 'g_free', '(', 'theme', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
206,"['interpret_date_string', '(', 'const', 'char', '*', 'date_opt', ',', 'time_t', '*', 'const', 'time_p', ')', '{', 'FILE', '*', 'date_child_fp', ';', 'char', 'date_resp', '[', '100', ']', ';', 'const', 'char', 'magic', '[', ']', '=', '""""', ';', 'char', 'date_command', '[', '100', ']', ';', 'if', '(', 'date_opt', '==', 'NULL', ')', '{', 'warnx', '(', '_', '(', '""""', ')', ')', ';', 'return', '14', ';', '}', 'if', '(', 'strlen', '(', 'date_opt', ')', '>', 'sizeof', '(', 'date_command', ')', '-', '50', ')', '{', 'warnx', '(', '_', '(', '""""', ')', ')', ';', 'return', '13', ';', '}', 'if', '(', 'strchr', '(', 'date_opt', ',', ""''"", ')', '!=', 'NULL', ')', '{', 'warnx', '(', '(', '""""', ')', ')', ';', 'return', '12', ';', '}', 'sprintf', '(', 'date_command', ',', '""""', '%', 's\\""""', ',', 'date_opt', ')', ';', 'if', '(', 'debug', ')', 'printf', '(', '_', '(', '""""', ')', ',', 'date_command', ')', ';', 'date_child_fp', '=', 'popen', '(', 'date_command', ',', '""""', ')', ';', 'if', '(', 'date_child_fp', '==', 'NULL', ')', '{', 'warn', '(', '_', '(', '""""', ')', ')', ';', 'return', '10', ';', '}', 'if', '(', '!fgets', '(', 'date_resp', ',', 'sizeof', '(', 'date_resp', ')', ',', 'date_child_fp', ')', ')', 'if', '(', 'debug', ')', 'printf', '(', '_', '(', '""""', ')', ',', 'date_resp', ')', ';', 'if', '(', 'strncmp', '(', 'date_resp', ',', 'magic', ',', 'sizeof', '(', 'magic', ')', '-', '1', ')', '!=', '0', ')', '{', 'warnx', '(', '_', '(', '""""', ')', ',', 'program_invocation_short_name', ',', 'date_command', ',', 'date_resp', ')', ';', 'retcode', '=', '8', ';', '}', 'else', '{', 'long', 'seconds_since_epoch', ';', 'rc', '=', 'sscanf', '(', 'date_resp', '+', 'sizeof', '(', 'magic', ')', '-', '1', ',', '""""', ',', '&', 'seconds_since_epoch', ')', ';', 'if', '(', 'rc', '<', '1', ')', '{', 'warnx', '(', '_', '(', '""""', ')', ',', 'program_invocation_short_name', ',', 'date_command', ',', 'date_resp', ')', ';', 'retcode', '=', '6', ';', '}', 'else', '{', 'retcode', '=', '0', ';', '*', 'time_p', '=', 'seconds_since_epoch', ';', 'if', '(', 'debug', ')', 'printf', '(', '_', '(', '""""', ')', ',', 'date_opt', ',', '(', 'long', ')', '*', 'time_p', ')', ';', '}', '}', 'pclose', '(', 'date_child_fp', ')', ';', 'return', 'retcode', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
207,"['print_range', '(', 'const', 'struct', 'nf_nat_ipv4_range', '*', 'r', ')', '{', 'if', '(', 'r', '->', 'flags', '&', 'NF_NAT_RANGE_MAP_IPS', ')', '{', 'struct', 'in_addr', 'a', ';', 'a', '.', 's_addr', '=', 'r', '->', 'min_ip', ';', 'printf', '(', '""""', ',', 'xtables_ipaddr_to_numeric', '(', '&', 'a', ')', ')', ';', 'if', '(', 'r', '->', 'max_ip', '!=', 'r', '->', 'min_ip', ')', '{', 'a', '.', 's_addr', '=', 'r', '->', 'max_ip', ';', 'printf', '(', '""""', ',', 'xtables_ipaddr_to_numeric', '(', '&', 'a', ')', ')', ';', '}', '}', 'if', '(', 'r', '->', 'flags', '&', 'NF_NAT_RANGE_PROTO_SPECIFIED', ')', '{', 'printf', '(', '""""', ')', ';', 'printf', '(', '""""', ',', 'ntohs', '(', 'r', '->', 'min', '.', 'tcp', '.', 'port', ')', ')', ';', 'if', '(', 'r', '->', 'max', '.', 'tcp', '.', 'port', '!=', 'r', '->', 'min', '.', 'tcp', '.', 'port', ')', 'printf', '(', '""""', ',', 'ntohs', '(', 'r', '->', 'max', '.', 'tcp', '.', 'port', ')', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
208,"['shiftAttribute', '(', 'QDomElement', '&', 'element', ',', 'const', 'char', '*', 'attributeName', ',', 'double', 'd', ')', '{', 'double', 'n', '=', 'element', '.', 'attribute', '(', 'attributeName', ')', '.', 'toDouble', '(', ')', '+', 'd', ';', 'element', '.', 'setAttribute', '(', 'attributeName', ',', 'QString', ':', ':', 'number', '(', 'n', ')', ')', ';', 'return', 'true', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
209,"['appendChart', '(', 'GcWinID', 'id', ')', '{', '/', '/', 'GcWindowDialog', 'is', 'delete', 'on', 'close', ',', 'so', 'no', 'need', 'to', 'GcWindowDialog', '*', 'f', '=', 'new', 'GcWindowDialog', '(', 'id', ',', 'mainWindow', ')', ';', 'GcWindow', '*', 'newone', '=', 'f', '->', 'exec', '(', ')', ';', '/', '/', 'returns', 'null', 'if', 'cancelled', 'or', 'if', '(', 'newone', ')', '{', 'addChart', '(', 'newone', ')', ';', 'newone', '->', 'show', '(', ')', ';', '}', '/', '/', 'now', 'wipe', 'delete', 'f', ';', '/', '/', 'before', 'we', 'return', 'lets', 'turn', 'the', 'cursor', 'chartCursor', '=', '-', '2', ';', 'winWidget', '->', 'repaint', '(', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
210,"['Validate', '(', 'FreeImageIO', '*', 'io', ',', 'fi_handle', 'handle', ')', '{', 'char', 'buf', '[', '6', ']', ';', 'if', '(', 'io', '->', 'read_proc', '(', 'buf', ',', '6', ',', '1', ',', 'handle', ')', '<', '1', ')', '{', 'return', 'FALSE', ';', '}', 'BOOL', 'bResult', '=', 'FALSE', ';', 'if', '(', '!strncmp', '(', 'buf', ',', '""""', ',', '3', ')', ')', '{', 'if', '(', 'buf', '[', '3', ']', '>=', ""''"", '&&', 'buf', '[', '3', ']', '<=', ""''"", '&&', 'buf', '[', '4', ']', '>=', ""''"", '&&', 'buf', '[', '4', ']', '<=', ""''"", '&&', 'buf', '[', '5', ']', '>=', ""''"", '&&', 'buf', '[', '5', ']', '<=', ""''"", ')', '{', 'bResult', '=', 'TRUE', ';', '}', '}', 'io', '->', 'seek_proc', '(', 'handle', ',', '-', '6', ',', 'SEEK_CUR', ')', ';', 'return', 'bResult', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
211,"['end_result_backtrace_entry', '(', 'CutStreamParser', '*', 'parser', ',', 'CutStreamParserPrivate', '*', 'priv', ',', 'GMarkupParseContext', '*', 'context', ',', 'const', 'gchar', '*', 'element_name', ',', 'GError', '*', '*', 'error', ')', '{', 'if', '(', '!priv', '->', 'backtrace_entry', ')', 'priv', '->', 'backtrace', '=', 'g_list_prepend', '(', 'priv', '->', 'backtrace', ',', 'priv', '->', 'backtrace_entry', ')', ';', 'priv', '->', 'backtrace_entry', '=', 'NULL', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
212,"['compute_all_net_distances', '(', 'struct', 'Map_info', '*', 'In', ',', 'struct', 'Map_info', '*', 'Net', ',', 'double', 'netmax', ',', 'double', '*', '*', 'dists', ',', 'double', 'dmax', ')', '{', 'int', 'nn', ',', 'kk', ',', 'nalines', ',', 'aline', ';', 'double', 'dist', ';', 'struct', 'line_pnts', '*', 'Points', ';', 'BOUND_BOX', 'box', ';', 'struct', 'ilist', '*', 'List', ';', 'Points', '=', 'Vect_new_line_struct', '(', ')', ';', 'List', '=', 'Vect_new_list', '(', ')', ';', 'nn', '=', 'Vect_get_num_primitives', '(', 'In', ',', 'GV_POINTS', ')', ';', 'nn', '=', 'nn', '*', '(', 'nn', '-', '1', ')', ';', '*', 'dists', '=', '(', 'double', '*', ')', 'G_calloc', '(', 'nn', ',', 'sizeof', '(', 'double', ')', ')', ';', 'kk', '=', '0', ';', 'nalines', '=', 'Vect_get_num_lines', '(', 'In', ')', ';', 'for', '(', 'aline', '=', '1', ';', 'aline', '<=', 'nalines', ';', 'aline', '++', ')', '{', 'int', 'i', ',', 'altype', ';', 'G_debug', '(', '3', ',', '""""', ',', 'aline', ')', ';', 'altype', '=', 'Vect_read_line', '(', 'In', ',', 'Points', ',', 'NULL', ',', 'aline', ')', ';', 'if', '(', '!', '(', 'altype', '&', 'GV_POINTS', ')', ')', 'continue', ';', 'box', '.', 'E', '=', 'Points', '->', 'x', '[', '0', ']', '+', 'dmax', ';', 'box', '.', 'W', '=', 'Points', '->', 'x', '[', '0', ']', '-', 'dmax', ';', 'box', '.', 'N', '=', 'Points', '->', 'y', '[', '0', ']', '+', 'dmax', ';', 'box', '.', 'S', '=', 'Points', '->', 'y', '[', '0', ']', '-', 'dmax', ';', 'box', '.', 'T', '=', 'PORT_DOUBLE_MAX', ';', 'box', '.', 'B', '=', '-', 'PORT_DOUBLE_MAX', ';', 'Vect_select_lines_by_box', '(', 'In', ',', '&', 'box', ',', 'GV_POINT', ',', 'List', ')', ';', 'G_debug', '(', '3', ',', '""""', ',', 'List', '->', 'n_values', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'List', '->', 'n_values', ';', 'i', '++', ')', '{', 'int', 'bline', ',', 'ret', ';', 'bline', '=', 'List', '->', 'value', '[', 'i', ']', ';', 'if', '(', 'bline', '==', 'aline', ')', 'continue', ';', 'G_debug', '(', '3', ',', '""""', ',', 'bline', ')', ';', 'Vect_get_line_box', '(', 'In', ',', 'bline', ',', '&', 'box', ')', ';', 'G_debug', '(', '3', ',', '""""', ',', 'Points', '->', 'x', '[', '0', ']', ',', 'Points', '->', 'y', '[', '0', ']', ',', 'box', '.', 'E', ',', 'box', '.', 'N', ')', ';', 'ret', '=', 'Vect_net_shortest_path_coor', '(', 'Net', ',', 'Points', '->', 'x', '[', '0', ']', ',', 'Points', '->', 'y', '[', '0', ']', ',', '0', '.', '0', ',', 'box', '.', 'E', ',', 'box', '.', 'N', ',', '0', '.', '0', ',', 'netmax', ',', 'netmax', ',', '&', 'dist', ',', 'NULL', ',', 'NULL', ',', 'NULL', ',', 'NULL', ',', 'NULL', ',', 'NULL', ')', ';', 'if', '(', 'ret', '==', '0', ')', '{', 'G_debug', '(', '3', ',', '""""', ')', ';', '}', 'G_debug', '(', '3', ',', '""""', ',', 'dist', ')', ';', 'if', '(', 'dist', '<=', 'dmax', ')', '{', '(', '*', 'dists', ')', '[', 'kk', ']', '=', 'dist', ';', 'kk', '++', ';', '}', 'G_debug', '(', '3', ',', '""""', ',', 'kk', ')', ';', '}', '}', 'return', '(', 'kk', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
213,"['CGUtil_print_header', '(', 'Codegen', '*', 'codegen', ',', 'C4_Model', '*', 'model', ')', '{', 'register', 'gint', 'i', ';', 'Codegen_printf', '(', 'codegen', ',', '""""', ',', 'model', '->', 'name', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'model', '->', 'global_code_list', '->', 'len', ';', 'i', '++', ')', 'Codegen_printf', '(', 'codegen', ',', 'model', '->', 'global_code_list', '->', 'pdata', '[', 'i', ']', ')', ';', 'Codegen_printf', '(', 'codegen', ',', '""""', ')', ';', 'return', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
214,"['grab_one', '(', 'const', 'nstring', '&', 'project_name', ')', '{', '/', '/', '/', '/', 'get', 'details', 'of', 'the', '/', '/', 'to', 'put', 'in', 'the', '/', '/', 'project_ty', '*', 'pp', '=', 'project_alloc', '(', 'project_name', '.', 'get_ref', '(', ')', ')', ';', 'pp', '->', 'bind_existing', '(', ')', ';', 'rpt_value_struct', '*', 'rsp', '=', 'new', 'rpt_value_struct', '(', ')', ';', 'rpt_value', ':', ':', 'pointer', 'result', '(', 'rsp', ')', ';', 'nstring', 'pn', '(', 'project_name_get', '(', 'pp', ')', ')', ';', 'rpt_value', ':', ':', 'pointer', 'value', '=', 'rpt_value_string', ':', ':', 'create', '(', 'pn', ')', ';', 'rsp', '->', 'assign', '(', '""""', ',', 'value', ')', ';', 'int', 'err', '=', 'project_is_readable', '(', 'pp', ')', ';', 'if', '(', 'err', ')', '{', 'rsp', '->', 'assign', '(', '""""', ',', 'rpt_value_string', ':', ':', 'create', '(', 'strerror', '(', 'err', ')', ')', ')', ';', '}', '{', '/', '/', '/', '/', 'The', 'development', 'directory', 'of', 'the', 'project', 'change', '/', '/', 'the', 'one', 'which', 'contains', 'the', 'trunk', 'or', 'branch', 'baseline', '.', '/', '/', 'change', ':', ':', 'pointer', 'cp', '=', 'pp', '->', 'change_get', '(', ')', ';', 'if', '(', 'cp', '->', 'is_being_developed', '(', ')', ')', '{', 'nstring', 'dd', '(', 'change_development_directory_get', '(', 'cp', ',', '0', ')', ')', ';', 'rsp', '->', 'assign', '(', '""""', ',', 'rpt_value_string', ':', ':', 'create', '(', 'dd', ')', ')', ';', '}', 'value', '=', 'rpt_value_pstate', ':', ':', 'create', '(', 'project_name_get', '(', 'pp', ')', ')', ';', 'rsp', '->', 'assign', '(', '""""', ',', 'value', ')', ';', '}', 'project_free', '(', 'pp', ')', ';', '/', '/', '/', '/', 'all', '/', '/', 'return', 'result', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
215,"['bfa_flash_status_read', '(', 'void', '__iomem', '*', 'pci_bar', ')', '{', 'union', 'bfa_flash_dev_status_reg_u\tdev_status', ';', 'int\t\t\t\tstatus', ';', 'u32\t\t\tret_status', ';', 'int\t\t\t\ti', ';', 'status', '=', 'bfa_flash_fifo_flush', '(', 'pci_bar', ')', ';', 'if', '(', 'status', '<', '0', ')', 'return', 'status', ';', 'bfa_flash_set_cmd', '(', 'pci_bar', ',', '0', ',', '4', ',', '0', ',', 'BFA_FLASH_READ_STATUS', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'BFA_FLASH_CHECK_MAX', ';', 'i', '++', ')', '{', 'status', '=', 'bfa_flash_cmd_act_check', '(', 'pci_bar', ')', ';', 'if', '(', '!status', ')', 'break', ';', '}', 'if', '(', 'status', ')', 'return', 'status', ';', 'dev_status', '.', 'i', '=', 'readl', '(', 'pci_bar', '+', 'FLI_DEV_STATUS_REG', ')', ';', 'if', '(', '!dev_status', '.', 'r', '.', 'fifo_cnt', ')', 'return', 'BFA_FLASH_BUSY', ';', 'ret_status', '=', 'readl', '(', 'pci_bar', '+', 'FLI_RDDATA_REG', ')', ';', 'ret_status', '>>=', '24', ';', 'status', '=', 'bfa_flash_fifo_flush', '(', 'pci_bar', ')', ';', 'if', '(', 'status', '<', '0', ')', 'return', 'status', ';', 'return', 'ret_status', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
216,"['cph_iface_mechanism_call_devices_get_sync', '(', 'CphIfaceMechanism', '*', 'proxy', ',', 'gint', 'arg_timeout', ',', 'gint', 'arg_limit', ',', 'const', 'gchar', '*', 'const', '*', 'arg_include_schemes', ',', 'const', 'gchar', '*', 'const', '*', 'arg_exclude_schemes', ',', 'gchar', '*', '*', 'out_error', ',', 'GVariant', '*', '*', 'out_devices', ',', 'GCancellable', '*', 'cancellable', ',', 'GError', '*', '*', 'error', ')', '{', 'GVariant', '*', '_ret', ';', '_ret', '=', 'g_dbus_proxy_call_sync', '(', 'G_DBUS_PROXY', '(', 'proxy', ')', ',', '""""', ',', 'g_variant_new', '(', '""""', ',', 'arg_timeout', ',', 'arg_limit', ',', 'arg_include_schemes', ',', 'arg_exclude_schemes', ')', ',', 'G_DBUS_CALL_FLAGS_NONE', ',', '-', '1', ',', 'cancellable', ',', 'error', ')', ';', 'if', '(', '_ret', '==', 'NULL', ')', 'goto', '_out', ';', 'g_variant_get', '(', '_ret', ',', '""""', ',', 'out_error', ',', 'out_devices', ')', ';', 'g_variant_unref', '(', '_ret', ')', ';', '_out', ':', 'return', '_ret', '!=', 'NULL', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
217,"['GNUNET_DISK_directory_scan', '(', 'const', 'char', '*', 'dirName', ',', 'GNUNET_FileNameCallback', 'callback', ',', 'void', '*', 'callback_cls', ')', '{', 'DIR', '*', 'dinfo', ';', 'struct', 'dirent', '*', 'finfo', ';', 'struct', 'stat', 'istat', ';', 'int', 'count', '=', '0', ';', 'char', '*', 'name', ';', 'char', '*', 'dname', ';', 'unsigned', 'int', 'name_len', ';', 'unsigned', 'int', 'n_size', ';', 'GNUNET_assert', '(', 'dirName', '!=', 'NULL', ')', ';', 'dname', '=', 'GNUNET_STRINGS_filename_expand', '(', 'dirName', ')', ';', 'if', '(', 'dname', '==', 'NULL', ')', 'return', 'GNUNET_SYSERR', ';', 'while', '(', '(', 'strlen', '(', 'dname', ')', '>', '0', ')', '&&', '(', 'dname', '[', 'strlen', '(', 'dname', ')', '-', '1', ']', '==', 'DIR_SEPARATOR', ')', ')', 'dname', '[', 'strlen', '(', 'dname', ')', '-', '1', ']', '=', ""''"", ';', 'if', '(', '0', '!=', 'STAT', '(', 'dname', ',', '&', 'istat', ')', ')', '{', 'LOG_STRERROR_FILE', '(', 'GNUNET_ERROR_TYPE_WARNING', ',', '""""', ',', 'dname', ')', ';', 'GNUNET_free', '(', 'dname', ')', ';', 'return', 'GNUNET_SYSERR', ';', '}', 'if', '(', '!S_ISDIR', '(', 'istat', '.', 'st_mode', ')', ')', '{', 'LOG', '(', 'GNUNET_ERROR_TYPE_WARNING', ',', '_', '(', '""""', ')', ',', 'dirName', ')', ';', 'GNUNET_free', '(', 'dname', ')', ';', 'return', 'GNUNET_SYSERR', ';', '}', 'errno', '=', '0', ';', 'dinfo', '=', 'OPENDIR', '(', 'dname', ')', ';', 'if', '(', '(', 'errno', '==', 'EACCES', ')', '||', '(', 'dinfo', '==', 'NULL', ')', ')', '{', 'LOG_STRERROR_FILE', '(', 'GNUNET_ERROR_TYPE_WARNING', ',', '""""', ',', 'dname', ')', ';', 'if', '(', 'dinfo', '!=', 'NULL', ')', 'CLOSEDIR', '(', 'dinfo', ')', ';', 'GNUNET_free', '(', 'dname', ')', ';', 'return', 'GNUNET_SYSERR', ';', '}', 'name_len', '=', '256', ';', 'n_size', '=', 'strlen', '(', 'dname', ')', '+', 'name_len', '+', '2', ';', 'name', '=', 'GNUNET_malloc', '(', 'n_size', ')', ';', 'while', '(', '(', 'finfo', '=', 'READDIR', '(', 'dinfo', ')', ')', '!=', 'NULL', ')', '{', 'if', '(', '(', '0', '==', 'strcmp', '(', 'finfo', '->', 'd_name', ',', '""""', ')', ')', '||', '(', '0', '==', 'strcmp', '(', 'finfo', '->', 'd_name', ',', '""""', ')', ')', ')', 'continue', ';', 'if', '(', 'callback', '!=', 'NULL', ')', '{', 'if', '(', 'name_len', '<', 'strlen', '(', 'finfo', '->', 'd_name', ')', ')', '{', 'GNUNET_free', '(', 'name', ')', ';', 'name_len', '=', 'strlen', '(', 'finfo', '->', 'd_name', ')', ';', 'n_size', '=', 'strlen', '(', 'dname', ')', '+', 'name_len', '+', '2', ';', 'name', '=', 'GNUNET_malloc', '(', 'n_size', ')', ';', '}', '/', '*', 'dname', 'can', 'end', 'in', '""""', 'only', 'if', 'dname', '==', '""""', ';', '*', 'if', 'dname', 'does', 'not', 'end', 'in', '""""', ',', 'we', 'need', 'to', 'GNUNET_snprintf', '(', 'name', ',', 'n_size', ',', '""""', ',', 'dname', ',', '(', 'strcmp', '(', 'dname', ',', 'DIR_SEPARATOR_STR', ')', '==', '0', ')', '?', '""""', ':', 'DIR_SEPARATOR_STR', ',', 'finfo', '->', 'd_name', ')', ';', 'if', '(', 'GNUNET_OK', '!=', 'callback', '(', 'callback_cls', ',', 'name', ')', ')', '{', 'CLOSEDIR', '(', 'dinfo', ')', ';', 'GNUNET_free', '(', 'name', ')', ';', 'GNUNET_free', '(', 'dname', ')', ';', 'return', 'GNUNET_SYSERR', ';', '}', '}', 'count', '++', ';', '}', 'CLOSEDIR', '(', 'dinfo', ')', ';', 'GNUNET_free', '(', 'name', ')', ';', 'GNUNET_free', '(', 'dname', ')', ';', 'return', 'count', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
218,"['gs_copy_glyph_options', '(', 'gs_font', '*', 'font', ',', 'gs_glyph', 'glyph', ',', 'gs_font', '*', 'copied', ',', 'int', 'options', ')', '{', 'int', 'code', ';', 'gs_glyph', 'glyphs', '[', 'MAX_GLYPH_PIECES', ']', ';', 'uint', 'count', '=', '1', ',', 'i', ';', 'if', '(', 'copied', '->', 'procs', '.', 'font_info', '!=', 'copied_font_info', ')', 'return_error', '(', 'gs_error_rangecheck', ')', ';', 'code', '=', 'cf_data', '(', 'copied', ')', '->', 'procs', '->', 'copy_glyph', '(', 'font', ',', 'glyph', ',', 'copied', ',', 'options', ')', ';', 'if', '(', 'code', '!=', '0', ')', 'return', 'code', ';', 'glyphs', '[', '0', ']', '=', 'glyph', ';', 'code', '=', 'psf_add_subset_pieces', '(', 'glyphs', ',', '&', 'count', ',', 'MAX_GLYPH_PIECES', ',', 'MAX_GLYPH_PIECES', ',', 'font', ')', ';', 'if', '(', 'code', '<', '0', ')', 'return', 'code', ';', 'if', '(', 'count', '>', 'MAX_GLYPH_PIECES', ')', 'return_error', '(', 'gs_error_limitcheck', ')', ';', 'for', '(', 'i', '=', '1', ';', 'i', '<', 'count', ';', '++', 'i', ')', '{', 'code', '=', 'gs_copy_glyph_options', '(', 'font', ',', 'glyphs', '[', 'i', ']', ',', 'copied', ',', '(', 'options', '&', '~COPY_GLYPH_NO_OLD', ')', '|', 'COPY_GLYPH_BY_INDEX', ')', ';', 'if', '(', 'code', '<', '0', ')', 'return', 'code', ';', '/', '*', 'if', 'code', '>', '0', 'then', 'we', 'already', 'have', 'the', 'glyph', ',', 'so', 'no', 'need', 'to', 'process', 'further', '.', '*', 'If', 'the', 'original', 'glyph', 'was', 'not', 'a', 'CID', 'then', 'we', 'are', 'copying', 'by', 'name', ',', 'not', 'by', 'index', '.', '*', 'But', 'the', 'copy', 'above', 'copies', 'by', 'index', 'which', 'means', 'we', ""don't"", 'have', 'an', 'entry', '*', 'the', 'glyp', '-', 'h', 'component', 'in', 'the', 'name', 'table', '.', 'If', 'we', 'are', 'using', 'names', 'then', '*', 'absolutely', '*', 'must', '*', 'have', 'an', 'entry', 'in', 'the', 'name', 'table', ',', 'so', 'go', 'ahead', 'and', '*', 'one', 'here', '.', 'Note', 'that', 'the', 'array', 'returned', 'by', 'psf_add_subset_pieces', 'has', '*', 'GIDs', 'with', 'an', 'offset', 'of', 'GS_MIN_GLYPH_INDEX', 'added', '.', 'Previously', 'we', 'removed', '*', 'offset', ',', 'but', 'if', 'the', 'resulting', 'GID', 'referenced', 'a', 'name', 'already', 'in', 'use', '(', 'or', 'later', 'used', ')', '*', 'then', 'the', 'generated', 'CMAP', 'was', 'incorrect', '.', 'By', 'leaving', 'the', 'offset', 'in', 'place', 'we', '*', 'a', 'name', 'generated', '(', 'numeric', 'name', 'based', 'on', 'GID', ')', 'which', 'gurantees', 'no', 'name', 'collisions', '.', '*', '(', 'Bug', '#693444', ')', '.', 'if', '(', 'code', '==', '0', '&&', 'glyph', '<', 'GS_MIN_CID_GLYPH', '&&', 'glyphs', '[', 'i', ']', '>', 'GS_MIN_GLYPH_INDEX', ')', '{', 'code', '=', 'copy_glyph_name', '(', 'font', ',', 'glyphs', '[', 'i', ']', ',', 'copied', ',', 'glyphs', '[', 'i', ']', ')', ';', 'if', '(', 'code', '<', '0', ')', 'return', 'code', ';', '}', '}', '/', '*', '*', 'Because', ""''"", 'accesses', 'the', 'Encoding', 'of', 'the', 'font', 'as', 'well', 'as', '*', 'glyphs', ',', 'we', 'have', 'to', 'copy', 'the', 'Encoding', 'entries', 'as', 'well', '.', 'if', '(', 'count', '==', '1', ')', 'return', '0', ';', 'switch', '(', 'font', '->', 'FontType', ')', '{', 'case', 'ft_encrypted', ':', 'case', 'ft_encrypted2', ':', 'break', ';', 'default', ':', 'return', '0', ';', '}', '#if', '0', '/', '*', 'No', 'need', 'to', 'add', 'subglyphs', 'to', 'the', 'Encoding', 'because', 'they', 'always', 'taken', 'from', 'StandardEncoding', '(', 'See', 'the', 'Type', '1', 'spec', 'about', ""''"", ')', '.', 'Attempt', 'to', 'add', 'them', 'to', 'the', 'encoding', 'can', 'cause', 'a', 'conflict', ',', 'if', 'the', 'encoding', 'specifies', 'different', 'glyphs', 'for', 'these', 'char', '{', 'gs_copied_glyph_t', '*', 'pcg', ';', 'gs_glyph_data_t', 'gdata', ';', 'gs_char', 'chars', '[', '2', ']', ';', 'gdata', '.', 'memory', '=', 'font', '->', 'memory', ';', 'DISCARD', '(', 'copied_glyph_slot', '(', 'cf_data', '(', 'copied', ')', ',', 'glyph', ',', '&', 'pcg', ')', ')', ';', 'gs_glyph_data_from_string', '(', '&', 'gdata', ',', 'pcg', '->', 'gdata', '.', 'data', ',', 'pcg', '->', 'gdata', '.', 'size', ',', 'NULL', ')', ';', 'code', '=', 'gs_type1_piece_codes', '(', '(', 'gs_font_type1', '*', ')', 'font', ',', '&', 'gdata', ',', 'chars', ')', ';', '(', 'code', '=', 'gs_copied_font_add_encoding', '(', 'copied', ',', 'chars', '[', '0', ']', ',', 'glyphs', '[', '1', ']', ')', ')', '<', '0', '||', '(', 'code', '=', 'gs_copied_font_add_encoding', '(', 'copied', ',', 'chars', '[', '1', ']', ',', 'glyphs', '[', '2', ']', ')', ')', '<', ')', 'return', 'code', ';', '}', 'return', '0', ';', '#undef', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
219,"['translate_page_flags', '(', 'char', '*', 'buffer', ',', 'ulong', 'flags', ')', '{', 'char', 'buf', '[', 'BUFSIZE', ']', ';', 'int', 'i', ',', 'others', ';', 'sprintf', '(', 'buf', ',', '""""', ',', 'flags', ')', ';', 'if', '(', 'flags', ')', '{', 'for', '(', 'i', '=', 'others', '=', '0', ';', 'i', '<', 'vt', '->', 'nr_pageflags', ';', 'i', '++', ')', '{', 'if', '(', 'flags', '&', 'vt', '->', 'pageflags_data', '[', 'i', ']', '.', 'mask', ')', 'sprintf', '(', '&', 'buf', '[', 'strlen', '(', 'buf', ')', ']', ',', '""""', ',', 'others', '++', '?', '""""', ':', '""""', ',', 'vt', '->', 'pageflags_data', '[', 'i', ']', '.', 'name', ')', ';', '}', '}', 'strcat', '(', 'buf', ',', '""""', ')', ';', 'strcpy', '(', 'buffer', ',', 'buf', ')', ';', 'return', '(', 'strlen', '(', 'buf', ')', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
220,"['bnx2x_warpcore_reset_lane', '(', 'struct', 'bnx2x', '*', 'bp', ',', 'struct', 'bnx2x_phy', '*', 'phy', ',', 'u8', 'reset', ')', '{', 'u16', 'val', ';', 'bnx2x_cl45_read', '(', 'bp', ',', 'phy', ',', 'MDIO_WC_DEVAD', ',', 'MDIO_WC_REG_DIGITAL5_MISC6', ',', '&', 'val', ')', ';', 'if', '(', 'reset', ')', 'val', '|=', '0xC000', ';', 'val', '&=', '0x3FFF', ';', 'bnx2x_cl45_write', '(', 'bp', ',', 'phy', ',', 'MDIO_WC_DEVAD', ',', 'MDIO_WC_REG_DIGITAL5_MISC6', ',', 'val', ')', ';', 'bnx2x_cl45_read', '(', 'bp', ',', 'phy', ',', 'MDIO_WC_DEVAD', ',', 'MDIO_WC_REG_DIGITAL5_MISC6', ',', '&', 'val', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
221,"['ptaGetPt', '(', 'PTA', '*', 'pta', ',', 'l_int32', 'index', ',', 'l_float32', '*', 'px', ',', 'l_float32', '*', 'py', ')', '{', 'PROCNAME', '(', '""""', ')', ';', 'if', '(', '!pta', ')', 'return', 'ERROR_INT', '(', '""""', ',', 'procName', ',', '1', ')', ';', '*', 'px', '=', 'pta', '->', 'x', '[', 'index', ']', ';', '*', 'py', '=', 'pta', '->', 'y', '[', 'index', ']', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
222,"['merge_star', '(', 'GList', '*', 'csl', ',', 'struct', 'cat_star', '*', 'new', ')', '{', 'GList', '*', 'sl', ';', 'struct', 'cat_star', '*', 'cats', ';', 'for', '(', 'sl', '=', 'csl', ';', 'sl', '!=', 'NULL', ';', 'sl', '=', 'sl', '->', 'next', ')', '{', 'cats', '=', 'CAT_STAR', '(', 'sl', '->', 'data', ')', ';', 'if', '(', 'cats_is_duplicate', '(', 'cats', ',', 'new', ')', ')', '{', 'if', '(', 'CATS_TYPE', '(', 'cats', ')', '==', 'CAT_STAR_TYPE_SREF', ')', '{', 'cat_star_release', '(', 'cats', ')', ';', 'cat_star_ref', '(', 'new', ')', ';', 'sl', '->', 'data', '=', 'new', ';', '}', 'else', 'if', '(', 'CATS_TYPE', '(', 'cats', ')', '==', 'CAT_STAR_TYPE_ALIGN', ')', '{', 'if', '(', 'CATS_TYPE', '(', 'new', ')', '!=', 'CAT_STAR_TYPE_SREF', ')', '{', 'cat_star_release', '(', 'cats', ')', ';', 'cat_star_ref', '(', 'new', ')', ';', 'sl', '->', 'data', '=', 'new', ';', '}', '}', 'else', 'if', '(', 'CATS_TYPE', '(', 'cats', ')', '==', 'CAT_STAR_TYPE_CAT', ')', '{', 'if', '(', 'CATS_TYPE', '(', 'new', ')', '!=', '&&', 'CATS_TYPE', '(', 'new', ')', '!=', 'CAT_STAR_TYPE_ALIGN', ')', '{', 'cat_star_release', '(', 'cats', ')', ';', 'cat_star_ref', '(', 'new', ')', ';', 'sl', '->', 'data', '=', 'new', ';', '}', '}', 'else', 'if', '(', 'CATS_TYPE', '(', 'cats', ')', '==', '||', 'CATS_TYPE', '(', 'cats', ')', '==', 'CAT_STAR_TYPE_APSTAR', ')', '{', 'if', '(', 'CATS_TYPE', '(', 'new', ')', '==', '||', 'CATS_TYPE', '(', 'new', ')', '==', 'CAT_STAR_TYPE_APSTAR', ')', '{', 'cat_star_release', '(', 'cats', ')', ';', 'cat_star_ref', '(', 'new', ')', ';', 'sl', '->', 'data', '=', 'new', ';', '}', '}', 'break', ';', '}', '}', 'if', '(', 'sl', '==', 'NULL', ')', '{', 'cat_star_ref', '(', 'new', ')', ';', 'csl', '=', 'g_list_prepend', '(', 'csl', ',', 'new', ')', ';', '}', 'return', 'csl', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
223,"['bd_queue_initialize', '(', 'struct', 'ipw2100_priv', '*', 'priv', ',', 'struct', 'ipw2100_bd_queue', '*', 'q', ',', 'u32', 'base', ',', 'u32', 'size', ',', 'u32', 'r', ',', 'u32', 'w', ')', '{', 'IPW_DEBUG_INFO', '(', '""""', ')', ';', 'IPW_DEBUG_INFO', '(', '""""', ',', 'q', '->', 'drv', ',', '(', 'u32', ')', 'q', '->', 'nic', ')', ';', 'write_register', '(', 'priv', '->', 'net_dev', ',', 'base', ',', 'q', '->', 'nic', ')', ';', 'write_register', '(', 'priv', '->', 'net_dev', ',', 'size', ',', 'q', '->', 'entries', ')', ';', 'write_register', '(', 'priv', '->', 'net_dev', ',', 'r', ',', 'q', '->', 'oldest', ')', ';', 'write_register', '(', 'priv', '->', 'net_dev', ',', 'w', ',', 'q', '->', 'next', ')', ';', 'IPW_DEBUG_INFO', '(', '""""', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
224,"['open_config', '(', ')', '{', 'FILE', '*', 'fp', '=', 'NULL', ';', 'char', '*', 'line', ';', 'key_cmd', '*', 'cmd', ';', 'confentry', '*', 'lastnode', '=', 'NULL', ',', '*', 'newnode', '=', 'NULL', ';', 'int', 'lineno', '=', '1', ',', 'ret', '=', '0', ';', 'size_t', 'n', '=', '0', ';', 'if', '(', '!config', ')', 'config', '=', 'CONFIG', ';', 'fp', '=', 'fopen', '(', 'config', ',', '""""', ')', ';', 'if', '(', 'fp', '==', 'NULL', ')', '{', 'lprintf', '(', '""""', ',', 'config', ',', 'strerror', '(', 'errno', ')', ')', ';', 'return', 'OK', ';', '}', 'if', '(', 'verbose', '>', '1', ')', 'lprintf', '(', '""""', ',', 'config', ')', ';', 'while', '(', '!feof', '(', 'fp', ')', '&&', '(', 'ret', '>=', '0', ')', ')', '{', 'line', '=', 'NULL', ';', 'ret', '=', 'getline', '(', '&', 'line', ',', '&', 'n', ',', 'fp', ')', ';', 'if', '(', '(', 'ret', '>', '0', ')', '&&', '(', 'proc_config', '(', 'lineno', ',', 'line', ',', '&', 'cmd', ')', '==', 'OK', ')', ')', '{', 'newnode', '=', '(', 'confentry', '*', ')', '(', 'malloc', '(', 'sizeof', '(', 'confentry', ')', ')', ')', ';', 'if', '(', 'newnode', '==', 'NULL', ')', '{', 'lprintf', '(', '""""', ')', ';', 'close_config', '(', ')', ';', 'free', '(', 'line', ')', ';', 'return', 'MEMERR', ';', '}', 'newnode', '->', 'cmd', '=', 'cmd', ';', 'newnode', '->', 'next', '=', 'NULL', ';', 'if', '(', 'list', '==', 'NULL', ')', '{', 'list', '=', 'newnode', ';', '}', 'else', '{', 'lastnode', '->', 'next', '=', 'newnode', ';', '}', 'lastnode', '=', 'newnode', ';', 'if', '(', 'verbose', '>', '1', ')', '{', 'lprintf', '(', '""""', ')', ';', 'lprint_mask', '(', 'cmd', '->', 'keys', ')', ';', 'lprintf', '(', '""""', ')', ';', 'print_etype', '(', 'cmd', '->', 'type', ')', ';', 'lprintf', '(', '""""', ')', ';', 'print_attrs', '(', 'cmd', ')', ';', 'lprintf', '(', '""""', ',', 'cmd', '->', 'command', ')', ';', '}', '}', 'free', '(', 'line', ')', ';', '++', 'lineno', ';', '}', 'fclose', '(', 'fp', ')', ';', 'return', 'OK', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
225,"['__ioc_wait_on_page', '(', 'ioc_page_t', '*', 'page', ',', 'call_frame_t', '*', 'frame', ',', 'off_t', 'offset', ',', 'size_t', 'size', ')', '{', 'ioc_waitq_t', '*', 'waitq', '=', 'NULL', ';', 'ioc_local_t', '*', 'local', '=', 'NULL', ';', 'GF_VALIDATE_OR_GOTO', '(', '""""', ',', 'frame', ',', 'out', ')', ';', 'local', '=', 'frame', '->', 'local', ';', 'GF_VALIDATE_OR_GOTO', '(', 'frame', '->', 'this', '->', 'name', ',', 'local', ',', 'out', ')', ';', 'if', '(', 'page', '==', 'NULL', ')', '{', 'local', '->', 'op_ret', '=', '-', '1', ';', 'local', '->', 'op_errno', '=', 'ENOMEM', ';', 'gf_log', '(', 'frame', '->', 'this', '->', 'name', ',', 'GF_LOG_WARNING', ',', '""""', ')', ';', '}', 'waitq', '=', 'GF_CALLOC', '(', '1', ',', 'sizeof', '(', '*', 'waitq', ')', ',', 'gf_ioc_mt_ioc_waitq_t', ')', ';', 'if', '(', 'waitq', '==', 'NULL', ')', '{', 'local', '->', 'op_ret', '=', '-', '1', ';', 'local', '->', 'op_errno', '=', 'ENOMEM', ';', 'goto', 'out', ';', '}', 'gf_log', '(', 'frame', '->', 'this', '->', 'name', ',', 'GF_LOG_TRACE', ',', '""""GF_PRI_SIZET""""', ',', 'frame', ',', 'page', ',', 'offset', ',', 'size', ')', ';', 'waitq', '->', 'data', '=', 'frame', ';', 'waitq', '->', 'next', '=', 'page', '->', 'waitq', ';', 'waitq', '->', 'pending_offset', '=', 'offset', ';', 'waitq', '->', 'pending_size', '=', 'size', ';', 'page', '->', 'waitq', '=', 'waitq', ';', '/', '*', 'one', 'frame', 'can', 'wait', 'only', 'once', 'on', 'a', 'given', 'page', ',', 'ioc_local_lock', '(', 'local', ')', ';', '{', 'local', '->', 'wait_count', '++', ';', '}', 'ioc_local_unlock', '(', 'local', ')', ';', 'out', ':', 'return', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
226,"['light_read', '(', 'struct', 'seq_file', '*', 'm', ')', '{', 'int', 'status', ';', 'if', '(', '!tp_features', '.', 'light', ')', '{', 'seq_printf', '(', 'm', ',', '""""', ')', ';', '}', 'else', 'if', '(', '!tp_features', '.', 'light_status', ')', '{', 'seq_printf', '(', 'm', ',', '""""', ')', ';', 'seq_printf', '(', 'm', ',', '""""', ')', ';', '}', 'else', '{', 'status', '=', 'light_get_status', '(', ')', ';', 'if', '(', 'status', '<', '0', ')', 'return', 'status', ';', 'seq_printf', '(', 'm', ',', '""""', ',', 'onoff', '(', 'status', ',', '0', ')', ')', ';', 'seq_printf', '(', 'm', ',', '""""', ')', ';', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
227,"['_dxf_ExReadDXRCFiles', '(', ')', '{', 'struct', 'passwd\t', '*', 'pass', ';', 'char\t\tbuf', '[', '1024', ']', ';', 'int\t\t\tn', ';', 'char\t\t', '*', 'root', ';', '/', '*', '*', 'Since', 'the', 'inputs', 'get', 'stacked', 'we', 'want', 'them', 'in', 'reverse', 'order', '.', '*', '*', 'We', 'use', 'the', 'stat', 'calls', 'to', 'make', 'sure', 'that', 'we', ""don't"", 'include', 'an', '*', 'file', 'twice', '.', 'This', 'could', 'occur', 'previously', 'if', '$HOME', '==', 'current', 'dir', ',', '*', 'etc', '.', '/', '*', 'If', 'we', 'are', 'connected', 'to', 'the', 'UI', 'then', 'this', 'is', 'called', 'from', 'the', '*', 'to', 'get', 'a', 'license', '.', 'The', 'linefeed', 'from', 'the', 'license', 'command', 'gets', '*', 'by', 'the', 'include', 'in', 'the', 'dxrc', 'system', 'file', '.', 'When', 'we', 'return', 'we', ""don't"", '*', 'the', 'linefeed', 'from', 'the', 'license', 'command', 'and', 'our', 'char', 'ptr', 'is', 'not', 'reset', '.', '*', 'this', 'will', 'cause', 'a', 'syntax', 'error', 'if', 'the', 'next', 'command', 'is', 'a', '""""', 'command', '.', 'if', '(', '_dxd_exRemote', ')', 'yycharno', '=', '0', ';', 'curr', '.', 'st_dev', '=', 'curr', '.', 'st_ino', '=', '0', ';', 'home', '.', 'st_dev', '=', 'home', '.', 'st_ino', '=', '0', ';', 'sys', '.', 'st_dev', '=', 'sys', '.', 'st_ino', '=', '0', ';', 'buf', '[', '0', ']', '=', ""''"", ';', 'if', '(', 'getcwd', '(', 'buf', ',', '1022', ')', '==', 'NULL', ')', 'buf', '[', '0', ']', '=', ""''"", ';', 'n', '=', 'strlen', '(', 'buf', ')', ';', 'sprintf', '(', '&', 'buf', '[', 'n', ']', ',', '""""', ',', 'DXRC', ')', ';', 'stat', '(', 'buf', ',', '&', 'curr', ')', ';', '#if', 'sprintf', '(', 'buf', ',', '""""', ',', 'DXRC', ')', ';', 'stat', '(', 'buf', ',', '&', 'home', ')', ';', 'if', '(', 'DIFFERENT_FILES', '(', 'curr', ',', 'home', ')', ')', 'if', '(', '(', 'pass', '=', 'getpwuid', '(', 'geteuid', '(', ')', ')', ')', '!=', 'NULL', ')', '{', 'sprintf', '(', 'buf', ',', '""""', ',', 'pass', '->', 'pw_dir', ',', 'DXRC', ')', ';', 'stat', '(', 'buf', ',', '&', 'home', ')', ';', 'if', '(', 'DIFFERENT_FILES', '(', 'curr', ',', 'home', ')', ')', '}', 'if', '(', '(', 'root', '=', '(', 'char', '*', ')', 'getenv', '(', '""""', ')', ')', '!=', 'NULL', ')', '{', 'sprintf', '(', 'buf', ',', '""""', ',', 'root', ',', 'DXRC', ')', ';', 'stat', '(', 'buf', ',', '&', 'sys', ')', ';', 'if', '(', 'DIFFERENT_FILES', '(', 'curr', ',', 'sys', ')', '&&', 'DIFFERENT_FILES', '(', 'home', ',', 'sys', ')', ')', 'sprintf', '(', 'buf', ',', '""""', ',', 'root', ',', 'SYSDXRC', ')', ';', 'stat', '(', 'buf', ',', '&', 'sys2', ')', ';', 'if', '(', 'DIFFERENT_FILES', '(', 'curr', ',', 'sys2', ')', '&&', 'DIFFERENT_FILES', '(', 'home', ',', 'sys2', ')', '&&', 'DIFFERENT_FILES', '(', 'sys', ',', 'sys2', ')', ')', '}', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
228,"['icmp_load', '(', 'netsnmp_cache', '*', 'cache', ',', 'void', '*', 'vmagic', ')', '{', 'long', 'ret_value', '=', '-', '1', ';', 'ret_value', '=', 'linux_read_icmp_stat', '(', '&', 'icmpstat', ')', ';', 'if', '(', 'ret_value', '<', '0', ')', '{', 'DEBUGMSGTL', '(', '(', '""""', ',', '""""', ')', ')', ';', '}', 'else', '{', 'DEBUGMSGTL', '(', '(', '""""', ',', '""""', ')', ')', ';', '}', 'icmp_stats_load', '(', 'cache', ',', 'vmagic', ')', ';', 'icmp_msg_stats_load', '(', 'cache', ',', 'vmagic', ')', ';', 'return', 'ret_value', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
229,"['RS_isRegis', '(', 'const', 'char', '*', 'str', ')', '{', 'int\t\t\tstate', '=', 'RS_IN_WAIT', ';', 'const', 'char', '*', 'c', '=', 'str', ';', 'while', '(', '*', 'c', ')', '{', 'if', '(', 'state', '==', 'RS_IN_WAIT', ')', '{', 'if', '(', 't_isalpha', '(', 'c', ')', ')', '/', '*', 'okay', '*', '/', ';', 'else', 'if', '(', 't_iseq', '(', 'c', ',', ""''"", ')', ')', 'state', '=', 'RS_IN_ONEOF', ';', 'return', 'false', ';', '}', 'else', 'if', '(', 'state', '==', 'RS_IN_ONEOF', ')', '{', 'if', '(', 't_iseq', '(', 'c', ',', ""''"", ')', ')', 'state', '=', 'RS_IN_NONEOF', ';', 'else', 'if', '(', 't_isalpha', '(', 'c', ')', ')', 'state', '=', 'RS_IN_ONEOF_IN', ';', 'return', 'false', ';', '}', 'else', 'if', '(', 'state', '==', 'RS_IN_ONEOF_IN', '||', 'state', '==', 'RS_IN_NONEOF', ')', '{', 'if', '(', 't_isalpha', '(', 'c', ')', ')', '/', '*', 'okay', '*', '/', ';', 'else', 'if', '(', 't_iseq', '(', 'c', ',', ""''"", ')', ')', 'state', '=', 'RS_IN_WAIT', ';', 'return', 'false', ';', '}', 'elog', '(', 'ERROR', ',', '""""', ',', 'state', ')', ';', 'c', '+=', 'pg_mblen', '(', 'c', ')', ';', '}', 'return', '(', 'state', '==', 'RS_IN_WAIT', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
230,"['rc_proc_getent', '(', 'const', 'char', '*', 'ent', ')', '{', '#ifdef', 'FILE', '*', 'fp', ';', 'char', '*', 'proc', ',', '*', 'p', ',', '*', 'value', '=', 'NULL', ';', 'size_t', 'i', ',', 'len', ';', 'if', '(', '!exists', '(', '""""', ')', ')', 'return', 'NULL', ';', 'if', '(', '!', '(', 'fp', '=', 'fopen', '(', '""""', ',', '""""', ')', ')', ')', 'return', 'NULL', ';', 'proc', '=', 'NULL', ';', 'i', '=', '0', ';', 'if', '(', 'rc_getline', '(', '&', 'proc', ',', '&', 'i', ',', 'fp', ')', '==', '-', '1', '||', 'proc', '==', 'NULL', ')', 'return', 'NULL', ';', 'if', '(', 'proc', '!=', 'NULL', ')', '{', 'len', '=', 'strlen', '(', 'ent', ')', ';', 'while', '(', '(', 'p', '=', 'strsep', '(', '&', 'proc', ',', '""""', ')', ')', ')', '{', 'if', '(', 'strncmp', '(', 'ent', ',', 'p', ',', 'len', ')', '==', '0', '&&', '(', 'p', '[', 'len', ']', '==', ""''"", '||', 'p', '[', 'len', ']', '==', ""''"", '||', 'p', '[', 'len', ']', '==', ""''"", ')', ')', '{', 'p', '+=', 'len', ';', 'if', '(', '*', 'p', '==', ""''"", ')', 'p', '++', ';', 'value', '=', 'xstrdup', '(', 'p', ')', ';', '}', '}', '}', 'if', '(', '!value', ')', 'errno', '=', 'ENOENT', ';', 'fclose', '(', 'fp', ')', ';', 'free', '(', 'proc', ')', ';', 'return', 'value', ';', 'return', 'NULL', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  True,CWE-476  False,CWE-other  False
231,"['canSplitCriticalExits', '(', 'const', 'SplitAnalysis', ':', ':', 'LoopBlocks', '&', 'Blocks', ',', 'BlockPtrSet', '&', 'CriticalExits', ')', '{', '/', '/', 'If', 'we', ""don't"", 'allow', 'critical', 'edge', 'splitting', ',', 'require', 'no', 'critical', 'exits', '.', 'if', '(', '!AllowSplit', ')', 'return', 'CriticalExits', '.', 'empty', '(', ')', ';', 'for', '(', 'BlockPtrSet', ':', ':', 'iterator', 'I', '=', 'CriticalExits', '.', 'begin', '(', ')', ',', 'E', '=', 'CriticalExits', '.', 'end', '(', ')', ';', 'I', '!=', 'E', ';', '++', 'I', ')', '{', 'const', 'MachineBasicBlock', '*', 'Succ', '=', '*', 'I', ';', '/', '/', 'We', 'want', 'to', 'insert', 'a', 'new', 'pre', '-', 'exit', 'MBB', 'before', 'Succ', ',', 'and', 'change', 'all', '/', '/', 'in', '-', 'loop', 'blocks', 'to', 'branch', 'to', 'the', 'pre', '-', 'exit', 'instead', 'of', 'Succ', '.', '/', '/', 'Check', 'that', 'all', 'the', 'in', '-', 'loop', 'predecessors', 'can', 'be', 'changed', '.', 'for', '(', 'MachineBasicBlock', ':', ':', 'const_pred_iterator', 'PI', '=', 'Succ', '->', 'pred_begin', '(', ')', ',', 'PE', '=', 'Succ', '->', 'pred_end', '(', ')', ';', 'PI', '!=', 'PE', ';', '++', 'PI', ')', '{', 'const', 'MachineBasicBlock', '*', 'Pred', '=', '*', 'PI', ';', '/', '/', 'The', 'external', 'predecessors', ""won't"", 'be', 'altered', '.', 'if', '(', '!Blocks', '.', 'Loop', '.', 'count', '(', 'Pred', ')', '&&', '!Blocks', '.', 'Preds', '.', 'count', '(', 'Pred', ')', ')', 'continue', ';', 'if', '(', '!canAnalyzeBranch', '(', 'Pred', ')', ')', 'return', 'false', ';', '}', '/', '/', 'If', ""Succ's"", 'layout', 'predecessor', 'falls', 'through', ',', 'that', 'too', 'must', 'be', 'analyzable', '.', '/', '/', 'We', 'need', 'to', 'insert', 'the', 'pre', '-', 'exit', 'block', 'in', 'the', 'gap', '.', 'MachineFunction', ':', ':', 'const_iterator', 'MFI', '=', 'Succ', ';', 'if', '(', 'MFI', '==', 'mf_', '.', 'begin', '(', ')', ')', 'continue', ';', 'if', '(', '!canAnalyzeBranch', '(', '--', 'MFI', ')', ')', 'return', 'false', ';', '}', '/', '/', 'No', 'problems', 'found', '.', 'return', 'true', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
232,"['render', '(', 'Window', '&', 'srcWindow', ',', 'const', 'ColourRect', '*', 'modcols', ',', 'const', 'Rect', '*', 'clipper', ')', '{', '/', '/', 'TODO', ':', 'Fix', 'layer', 'priority', '/', '/', 'render', 'all', 'layers', 'defined', 'for', 'this', 'for', '(', 'LayersList', ':', ':', 'const_iterator', 'curr', '=', 'd_layers', '.', 'begin', '(', ')', ';', 'curr', '!=', 'd_layers', '.', 'end', '(', ')', ';', '++', 'curr', ')', '(', '*', 'curr', ')', '.', 'render', '(', 'srcWindow', ',', 'modcols', ',', 'clipper', ',', 'd_clipToDisplay', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
233,"['directory_info_has_arrived', '(', 'time_t', 'now', ',', 'int', 'from_cache', ')', '{', 'const', 'or_options_t', '*', 'options', '=', 'get_options', '(', ')', ';', 'if', '(', '!router_have_minimum_dir_info', '(', ')', ')', '{', 'int', 'quiet', '=', 'directory_too_idle_to_fetch_descriptors', '(', 'options', ',', 'now', ')', ';', 'log', '(', 'quiet', '?', 'LOG_INFO', ':', 'LOG_NOTICE', ',', 'LD_DIR', ',', '""""', ',', 'get_dir_info_status_string', '(', ')', ')', ';', 'update_all_descriptor_downloads', '(', 'now', ')', ';', 'return', ';', '}', 'else', '{', 'if', '(', 'directory_fetches_from_authorities', '(', 'options', ')', ')', '{', 'update_all_descriptor_downloads', '(', 'now', ')', ';', '}', '/', '*', 'if', 'we', 'have', 'enough', 'dir', 'info', ',', 'then', 'update', 'our', 'guard', 'status', 'entry_guards_compute_status', '(', 'options', ',', 'now', ')', ';', '/', '*', ""Don't"", 'even', 'bother', 'trying', 'to', 'get', 'extrainfo', 'until', 'the', 'rest', 'of', 'if', '(', 'options', '->', 'DownloadExtraInfo', ')', 'update_extrainfo_downloads', '(', 'now', ')', ';', '}', 'if', '(', 'server_mode', '(', 'options', ')', '&&', '!net_is_disabled', '(', ')', '&&', '!from_cache', '&&', '(', 'can_complete_circuit', '||', '!any_predicted_circuits', '(', 'now', ')', ')', ')', 'consider_testing_reachability', '(', '1', ',', '1', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
234,"['PyFF_Font_get_woffMajor', '(', 'PyFF_Font', '*', 'self', ',', 'void', '*', 'closure', ')', '{', 'int', 'version', '=', 'self', '->', 'fv', '->', 'sf', '->', 'woffMajor', ';', 'if', '(', 'version', '==', 'woffUnset', ')', 'Py_RETURN_NONE', ';', 'return', '(', 'Py_BuildValue', '(', '""""', ',', 'version', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
235,"['add_layer_request', '(', 'struct', 'FlattenSpec', '*', 'spec', ',', 'const', 'char', '*', 'layer', ')', '{', 'spec', '->', 'layers', '=', 'realloc', '(', 'spec', '->', 'layers', ',', 'sizeof', '(', 'struct', 'xcfLayer', ')', '*', '(', '1', '+', 'spec', '->', 'numLayers', ')', ')', ';', 'if', '(', 'spec', '->', 'layers', '==', 'NULL', ')', 'FatalUnexpected', '(', '_', '(', '""""', ')', ')', ';', 'spec', '->', 'layers', '[', 'spec', '->', 'numLayers', ']', '.', 'name', '=', 'layer', ';', 'spec', '->', 'layers', '[', 'spec', '->', 'numLayers', ']', '.', 'mode', '=', '(', 'GimpLayerModeEffects', ')', '-', '1', ';', 'spec', '->', 'layers', '[', 'spec', '->', 'numLayers', ']', '.', 'opacity', '=', '9999', ';', 'spec', '->', 'layers', '[', 'spec', '->', 'numLayers', ']', '.', 'hasMask', '=', '-', '1', ';', 'spec', '->', 'numLayers', '++', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
236,"['DoValAndDictTypesMatch', '(', 'QTYPES\teValType', ',', 'FLMUINT\tuiDictType', ')', '{', 'if', '(', 'uiDictType', '>', 'FLM_CONTEXT_TYPE', ')', '{', 'return', '(', 'FALSE', ')', ';', '}', '{', '/', '/', 'subtract', '1', 'from', 'QTYPES', '-', 'array', ""doesn't"", 'have', 'space', 'for', 'the', 'NO_TYPE', 'return', 'gv_DoValAndDictTypesMatch', '[', '(', '(', 'int', ')', 'eValType', ')', '-', 'FIRST_VALUE', ']', '[', 'uiDictType', ']', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
237,"['ccid_error', '(', 'int', 'error', ',', 'const', 'char', '*', 'file', ',', 'int', 'line', ',', 'const', 'char', '*', 'function', ')', '{', 'const', 'char', '*', 'text', ';', 'char', 'var_text', '[', '30', ']', ';', 'switch', '(', 'error', ')', '{', 'case', '0x00', ':', 'text', '=', '""""', ';', 'break', ';', 'case', '0x01', ':', 'text', '=', '""""', ';', 'break', ';', 'case', '0x05', ':', 'text', '=', '""""', ';', 'break', ';', 'case', '0xA2', ':', 'text', '=', '""""', ';', 'break', ';', 'case', '0xA3', ':', 'text', '=', '""""', ';', 'break', ';', 'case', '0xAB', ':', 'text', '=', '""""', ';', 'break', ';', 'case', '0xB0', ':', 'text', '=', '""""', ';', 'break', ';', 'case', '0xBB', ':', 'text', '=', '""""', ';', 'break', ';', 'case', '0xBD', ':', 'text', '=', '""""', ';', 'break', ';', 'case', '0xBE', ':', 'text', '=', '""""', ';', 'break', ';', 'case', '0xE0', ':', 'text', '=', '""""', ';', 'break', ';', 'case', '0xEF', ':', 'text', '=', '""""', ';', 'break', ';', 'case', '0xF0', ':', 'text', '=', '""""', ';', 'break', ';', 'case', '0xF2', ':', 'text', '=', '""""', ';', 'break', ';', 'case', '0xF3', ':', 'text', '=', '""""', ';', 'break', ';', 'case', '0xF4', ':', 'text', '=', '""""', ';', 'break', ';', 'case', '0xF5', ':', 'text', '=', '""""', ';', 'break', ';', 'case', '0xF6', ':', 'text', '=', '""""', ';', 'break', ';', 'case', '0xF7', ':', 'text', '=', '""""', ';', 'break', ';', 'case', '0xF8', ':', 'text', '=', '""""', ';', 'break', ';', 'case', '0xFB', ':', 'text', '=', '""""', ';', 'break', ';', 'case', '0xFC', ':', 'text', '=', '""""', ';', 'break', ';', 'case', '0xFD', ':', 'text', '=', '""""', ';', 'break', ';', 'case', '0xFE', ':', 'text', '=', '""""', ';', 'break', ';', 'case', '0xFF', ':', 'text', '=', '""""', ';', 'break', ';', 'default', ':', 'if', '(', '(', 'error', '>=', '1', ')', '&&', '(', 'error', '<=', '127', ')', ')', '(', 'void', ')', 'snprintf', '(', 'var_text', ',', 'sizeof', '(', 'var_text', ')', ',', '""""', ',', 'error', ')', ';', '(', 'void', ')', 'snprintf', '(', 'var_text', ',', 'sizeof', '(', 'var_text', ')', ',', '""""', ',', 'error', ')', ';', 'text', '=', 'var_text', ';', 'break', ';', '}', 'log_msg', '(', 'PCSC_LOG_ERROR', ',', '""""', ',', 'file', ',', 'line', ',', 'function', ',', 'text', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
238,"['gst_video_format_from_rgb24_masks', '(', 'int', 'red_mask', ',', 'int', 'green_mask', ',', 'int', 'blue_mask', ')', '{', 'if', '(', 'red_mask', '==', '0xff0000', '&&', 'green_mask', '==', '0x00ff00', '&&', 'blue_mask', '==', '0x0000ff', ')', '{', 'return', 'GST_VIDEO_FORMAT_RGB', ';', '}', 'if', '(', 'red_mask', '==', '0x0000ff', '&&', 'green_mask', '==', '0x00ff00', '&&', 'blue_mask', '==', '0xff0000', ')', '{', 'return', 'GST_VIDEO_FORMAT_BGR', ';', '}', 'return', 'GST_VIDEO_FORMAT_UNKNOWN', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
239,"['gwy_debug_objects_creation_detailed', '(', 'GObject', '*', 'object', ',', 'const', 'gchar', '*', 'details', ')', '{', 'DebugObjectInfo', '*', 'info', ';', 'if', '(', '!G_UNLIKELY', '(', 'debug_objects_enabled', ')', ')', 'return', ';', 'if', '(', '!id', ')', '{', 'g_assert', '(', '!debug_objects_timer', '&&', '!debug_objects', ')', ';', 'debug_objects_timer', '=', 'g_timer_new', '(', ')', ';', '}', 'info', '=', 'g_slice_new', '(', 'DebugObjectInfo', ')', ';', 'info', '->', 'id', '=', '++', 'id', ';', 'info', '->', 'type', '=', 'G_TYPE_FROM_INSTANCE', '(', 'object', ')', ';', 'info', '->', 'address', '=', 'object', ';', 'info', '->', 'details', '=', 'details', ';', 'info', '->', 'create_time', '=', 'g_timer_elapsed', '(', 'debug_objects_timer', ',', 'NULL', ')', ';', 'info', '->', 'destroy_time', '=', '-', '1', ';', 'g_object_weak_ref', '(', 'info', '->', 'address', ',', '&', 'debug_objects_set_time', ',', '&', 'info', '->', 'destroy_time', ')', ';', 'debug_objects', '=', 'g_list_prepend', '(', 'debug_objects', ',', 'info', ')', ';', 'gwy_debug', '(', '""""', ',', 'g_type_name', '(', 'info', '->', 'type', ')', ',', 'info', '->', 'address', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
240,"['get_result', '(', 'char', '*', 'buf', ',', 'RcvMsg', '*', 'rmsg', ')', '{', 'enum', 'ck_msg_type', 'type', ';', 'CheckMsg', 'msg', ';', 'int', 'n', ';', 'n', '=', 'upack', '(', 'buf', ',', '&', 'msg', ',', '&', 'type', ')', ';', 'if', '(', 'n', '==', '-', '1', ')', 'eprintf', '(', '""""', ',', '__FILE__', ',', '__LINE__', '-', '2', ')', ';', 'if', '(', 'type', '==', 'CK_MSG_CTX', ')', '{', 'CtxMsg', '*', 'cmsg', '=', '(', 'CtxMsg', '*', ')', '&', 'msg', ';', 'rcvmsg_update_ctx', '(', 'rmsg', ',', 'cmsg', '->', 'ctx', ')', ';', '}', 'else', 'if', '(', 'type', '==', 'CK_MSG_LOC', ')', '{', 'LocMsg', '*', 'lmsg', '=', '(', 'LocMsg', '*', ')', '&', 'msg', ';', 'if', '(', 'rmsg', '->', 'failctx', '==', 'CK_CTX_INVALID', ')', '{', 'rcvmsg_update_loc', '(', 'rmsg', ',', 'lmsg', '->', 'file', ',', 'lmsg', '->', 'line', ')', ';', '}', 'free', '(', 'lmsg', '->', 'file', ')', ';', '}', 'else', 'if', '(', 'type', '==', 'CK_MSG_FAIL', ')', '{', 'FailMsg', '*', 'fmsg', '=', '(', 'FailMsg', '*', ')', '&', 'msg', ';', 'if', '(', 'rmsg', '->', 'msg', '==', 'NULL', ')', '{', 'rmsg', '->', 'msg', '=', 'emalloc', '(', 'strlen', '(', 'fmsg', '->', 'msg', ')', '+', '1', ')', ';', 'strcpy', '(', 'rmsg', '->', 'msg', ',', 'fmsg', '->', 'msg', ')', ';', 'rmsg', '->', 'failctx', '=', 'rmsg', '->', 'lastctx', ';', '}', 'else', '{', '}', 'free', '(', 'fmsg', '->', 'msg', ')', ';', '}', 'check_type', '(', 'type', ',', '__FILE__', ',', '__LINE__', ')', ';', 'return', 'n', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
241,"['isABalanced', '(', 'scapegoat', '*', 'goat', ',', 'btree', '*', 'run', ',', 'btree', '*', 'parent', ',', 'size_t', '*', 'size', ')', '{', 'size_t', 'a', '=', '0', ',', 'b', '=', '0', ';', 'a', '=', '*', 'size', ';', '/', '/', 'btree_info', '(', 'run', ',', 'NULL', ',', 'NULL', ',', 'NULL', ',', 'NULL', ',', '&', 'a', ',', 'NULL', ',', 'NULL', ')', ';', '/', '/', 'determine', 'which', 'child', 'run', '->', 'data', 'is', '(', 'avoid', 're', '-', 'evaluating', 'the', 'lhs', ')', 'btree_info', '(', 'btree_sibling', '(', 'parent', ',', 'run', ')', ',', 'NULL', ',', 'NULL', ',', 'NULL', ',', 'NULL', ',', '&', 'b', ',', 'NULL', ',', 'NULL', ')', ';', '/', '/', 'wparent', '+=', 'w', '+', '1', ';', '*', 'size', '=', 'a', '+', '1', '+', 'b', ';', '/', '/', 'goes', 'up', 'by', 'at', 'least', 'return', '(', 'a', '<=', '(', 'goat', '->', 'a', '*', '(', 'a', '+', '1', '+', 'b', ')', ')', ')', '&&', '(', 'b', '<=', '(', 'goat', '->', 'a', '*', '(', 'a', '+', '1', '+', 'b', ')', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
242,"['makeconstdata', '(', 'nc_type', 'nctype', ')', '{', 'Constant', 'con', '=', 'nullconstant', ';', 'consttype', '=', 'nctype', ';', 'con', '.', 'nctype', '=', 'nctype', ';', 'con', '.', 'lineno', '=', 'lineno', ';', 'switch', '(', 'nctype', ')', '{', 'case', 'NC_CHAR', ':', 'con', '.', 'value', '.', 'charv', '=', 'char_val', ';', 'break', ';', 'case', 'NC_BYTE', ':', 'con', '.', 'value', '.', 'int8v', '=', 'byte_val', ';', 'break', ';', 'case', 'NC_SHORT', ':', 'con', '.', 'value', '.', 'int16v', '=', 'int16_val', ';', 'break', ';', 'case', 'NC_INT', ':', 'con', '.', 'value', '.', 'int32v', '=', 'int32_val', ';', 'break', ';', 'case', 'NC_FLOAT', ':', 'con', '.', 'value', '.', 'floatv', '=', 'float_val', ';', 'break', ';', 'case', 'NC_DOUBLE', ':', 'con', '.', 'value', '.', 'doublev', '=', 'double_val', ';', 'break', ';', 'int', 'len', ';', 'len', '=', 'strlen', '(', 'lextext', ')', ';', 'con', '.', 'value', '.', 'stringv', '.', 'len', '=', 'len', ';', 'con', '.', 'value', '.', 'stringv', '.', 'stringv', '=', 'nulldup', '(', 'lextext', ')', ';', '}', 'break', ';', 'case', 'NC_UBYTE', ':', 'con', '.', 'value', '.', 'uint8v', '=', 'ubyte_val', ';', 'break', ';', 'case', 'NC_USHORT', ':', 'con', '.', 'value', '.', 'uint16v', '=', 'uint16_val', ';', 'break', ';', 'case', 'NC_UINT', ':', 'con', '.', 'value', '.', 'uint32v', '=', 'uint32_val', ';', 'break', ';', 'case', 'NC_INT64', ':', 'con', '.', 'value', '.', 'int64v', '=', 'int64_val', ';', 'break', ';', 'case', 'NC_UINT64', ':', 'con', '.', 'value', '.', 'uint64v', '=', 'uint64_val', ';', 'break', ';', '#ifdef', 'case', 'NC_OPAQUE', ':', '{', 'char', '*', 's', ';', 'int', 'len', ',', 'padlen', ';', 'len', '=', 'strlen', '(', 'lextext', ')', ';', 'padlen', '=', 'len', ';', 'if', '(', 'padlen', '<', '16', ')', 'padlen', '=', '16', ';', 'if', '(', '(', 'padlen', '%', '2', ')', '==', '1', ')', 'padlen', '++', ';', 's', '=', '(', 'char', '*', ')', 'emalloc', '(', 'padlen', '+', '1', ')', ';', 'memset', '(', '(', 'void', '*', ')', 's', ',', ""''"", ',', 'padlen', ')', ';', 's', '[', 'padlen', ']', '=', ""''"", ';', 'strncpy', '(', 's', ',', 'lextext', ',', 'len', ')', ';', 'con', '.', 'value', '.', 'opaquev', '.', 'stringv', '=', 's', ';', 'con', '.', 'value', '.', 'opaquev', '.', 'len', '=', 'padlen', ';', '}', 'break', ';', 'case', 'NC_FILLVALUE', ':', 'default', ':', 'yyerror', '(', '""""', ',', 'nctypename', '(', 'nctype', ')', ')', ';', 'con', '.', 'value', '.', 'stringv', '.', 'stringv', '=', 'NULL', ';', 'con', '.', 'value', '.', 'stringv', '.', 'len', '=', '0', ';', '}', 'return', 'con', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
243,"['snd_usb_add_audio_stream', '(', 'struct', 'snd_usb_audio', '*', 'chip', ',', 'int', 'stream', ',', 'struct', 'audioformat', '*', 'fp', ')', '{', 'struct', 'snd_usb_stream', '*', 'as', ';', 'struct', 'snd_usb_substream', '*', 'subs', ';', 'struct', 'snd_pcm', '*', 'pcm', ';', 'int', 'err', ';', 'list_for_each_entry', '(', 'as', ',', '&', 'chip', '->', 'pcm_list', ',', 'list', ')', '{', 'if', '(', 'as', '->', 'fmt_type', '!=', 'fp', '->', 'fmt_type', ')', 'continue', ';', 'subs', '=', '&', 'as', '->', 'substream', '[', 'stream', ']', ';', 'if', '(', 'subs', '->', 'ep_num', '==', 'fp', '->', 'endpoint', ')', '{', 'list_add_tail', '(', '&', 'fp', '->', 'list', ',', '&', 'subs', '->', 'fmt_list', ')', ';', 'subs', '->', 'num_formats', '++', ';', 'subs', '->', 'formats', '|=', 'fp', '->', 'formats', ';', 'return', '0', ';', '}', '}', 'list_for_each_entry', '(', 'as', ',', '&', 'chip', '->', 'pcm_list', ',', 'list', ')', '{', 'if', '(', 'as', '->', 'fmt_type', '!=', 'fp', '->', 'fmt_type', ')', 'continue', ';', 'subs', '=', '&', 'as', '->', 'substream', '[', 'stream', ']', ';', 'if', '(', 'subs', '->', 'ep_num', ')', 'continue', ';', 'err', '=', 'snd_pcm_new_stream', '(', 'as', '->', 'pcm', ',', 'stream', ',', '1', ')', ';', 'if', '(', 'err', '<', '0', ')', 'return', 'err', ';', 'snd_usb_init_substream', '(', 'as', ',', 'stream', ',', 'fp', ')', ';', 'return', 'add_chmap', '(', 'as', '->', 'pcm', ',', 'stream', ',', 'subs', ')', ';', '}', 'as', '=', 'kzalloc', '(', 'sizeof', '(', '*', 'as', ')', ',', 'GFP_KERNEL', ')', ';', 'if', '(', '!as', ')', 'return', '-', 'ENOMEM', ';', 'as', '->', 'pcm_index', '=', 'chip', '->', 'pcm_devs', ';', 'as', '->', 'chip', '=', 'chip', ';', 'as', '->', 'fmt_type', '=', 'fp', '->', 'fmt_type', ';', 'err', '=', 'snd_pcm_new', '(', 'chip', '->', 'card', ',', '""""', ',', 'chip', '->', 'pcm_devs', ',', 'stream', '==', 'SNDRV_PCM_STREAM_PLAYBACK', '?', '1', ':', '0', ',', 'stream', '==', 'SNDRV_PCM_STREAM_PLAYBACK', '?', '0', ':', '1', ',', '&', 'pcm', ')', ';', 'if', '(', 'err', '<', '0', ')', '{', 'kfree', '(', 'as', ')', ';', 'return', 'err', ';', '}', 'as', '->', 'pcm', '=', 'pcm', ';', 'pcm', '->', 'private_data', '=', 'as', ';', 'pcm', '->', 'private_free', '=', 'snd_usb_audio_pcm_free', ';', 'pcm', '->', 'info_flags', '=', '0', ';', 'if', '(', 'chip', '->', 'pcm_devs', '>', '0', ')', 'sprintf', '(', 'pcm', '->', 'name', ',', '""""', ',', 'chip', '->', 'pcm_devs', ')', ';', 'strcpy', '(', 'pcm', '->', 'name', ',', '""""', ')', ';', 'snd_usb_init_substream', '(', 'as', ',', 'stream', ',', 'fp', ')', ';', '/', '*', '*', 'Keep', 'using', 'head', 'insertion', 'for', 'M', '-', 'Audio', 'Audiophile', 'USB', '(', 'tm', ')', 'which', 'has', '*', 'fix', 'to', 'swap', 'capture', 'stream', 'order', 'in', 'conf', '/', 'cards', '/', 'USB', '-', 'audio', '.', 'if', '(', 'chip', '->', 'usb_id', '==', 'USB_ID', '(', '0x0763', ',', '0x2003', ')', ')', 'list_add', '(', '&', 'as', '->', 'list', ',', '&', 'chip', '->', 'pcm_list', ')', ';', 'list_add_tail', '(', '&', 'as', '->', 'list', ',', '&', 'chip', '->', 'pcm_list', ')', ';', 'chip', '->', 'pcm_devs', '++', ';', 'snd_usb_proc_pcm_format_add', '(', 'as', ')', ';', 'return', 'add_chmap', '(', 'pcm', ',', 'stream', ',', '&', 'as', '->', 'substream', '[', 'stream', ']', ')', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
244,"['check_vendor_extension', '(', 'u64', 'paddr', ',', 'struct', 'set_error_type_with_address', '*', 'v5param', ')', '{', 'int\toffset', '=', 'v5param', '->', 'vendor_extension', ';', 'struct\tvendor_error_type_extension', '*', 'v', ';', 'u32\tsbdf', ';', 'if', '(', '!offset', ')', 'return', ';', 'v', '=', 'acpi_os_map_iomem', '(', 'paddr', '+', 'offset', ',', 'sizeof', '(', '*', 'v', ')', ')', ';', 'if', '(', '!v', ')', 'return', ';', 'sbdf', '=', 'v', '->', 'pcie_sbdf', ';', 'sprintf', '(', 'vendor_dev', ',', '""""', ',', 'sbdf', '>>', '24', ',', '(', 'sbdf', '>>', '16', ')', '&', '0xff', ',', '(', 'sbdf', '>>', '11', ')', '&', '0x1f', ',', '(', 'sbdf', '>>', '8', ')', '&', '0x7', ',', 'v', '->', 'vendor_id', ',', 'v', '->', 'device_id', ',', 'v', '->', 'rev_id', ')', ';', 'acpi_os_unmap_iomem', '(', 'v', ',', 'sizeof', '(', '*', 'v', ')', ')', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
245,"['bnx2x_update_sge_prod', '(', 'struct', 'bnx2x_fastpath', '*', 'fp', ',', 'u16', 'sge_len', ',', 'struct', 'eth_end_agg_rx_cqe', '*', 'cqe', ')', '{', 'struct', 'bnx2x', '*', 'bp', '=', 'fp', '->', 'bp', ';', 'u16', 'last_max', ',', 'last_elem', ',', 'first_elem', ';', 'u16', 'delta', '=', '0', ';', 'u16', 'i', ';', 'if', '(', '!sge_len', ')', 'return', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'sge_len', ';', 'i', '++', ')', 'BIT_VEC64_CLEAR_BIT', '(', 'fp', '->', 'sge_mask', ',', 'RX_SGE', '(', 'le16_to_cpu', '(', 'cqe', '->', 'sgl_or_raw_data', '.', 'sgl', '[', 'i', ']', ')', ')', ')', ';', 'DP', '(', 'NETIF_MSG_RX_STATUS', ',', '""""', ',', 'sge_len', '-', '1', ',', 'le16_to_cpu', '(', 'cqe', '->', 'sgl_or_raw_data', '.', 'sgl', '[', 'sge_len', '-', '1', ']', ')', ')', ';', 'prefetch', '(', '(', 'void', '*', ')', '(', 'fp', '->', 'sge_mask', ')', ')', ';', 'bnx2x_update_last_max_sge', '(', 'fp', ',', 'le16_to_cpu', '(', 'cqe', '->', 'sgl_or_raw_data', '.', 'sgl', '[', 'sge_len', '-', '1', ']', ')', ')', ';', 'last_max', '=', 'RX_SGE', '(', 'fp', '->', 'last_max_sge', ')', ';', 'last_elem', '=', 'last_max', '>>', 'BIT_VEC64_ELEM_SHIFT', ';', 'first_elem', '=', 'RX_SGE', '(', 'fp', '->', 'rx_sge_prod', ')', '>>', 'BIT_VEC64_ELEM_SHIFT', ';', 'if', '(', 'last_elem', '+', '1', '!=', 'first_elem', ')', 'last_elem', '++', ';', 'for', '(', 'i', '=', 'first_elem', ';', 'i', '!=', 'last_elem', ';', 'i', '=', 'NEXT_SGE_MASK_ELEM', '(', 'i', ')', ')', '{', 'if', '(', 'likely', '(', 'fp', '->', 'sge_mask', '[', 'i', ']', ')', ')', 'break', ';', 'fp', '->', 'sge_mask', '[', 'i', ']', '=', 'BIT_VEC64_ELEM_ONE_MASK', ';', 'delta', '+=', 'BIT_VEC64_ELEM_SZ', ';', '}', 'if', '(', 'delta', '>', '0', ')', '{', 'fp', '->', 'rx_sge_prod', '+=', 'delta', ';', 'bnx2x_clear_sge_mask_next_elems', '(', 'fp', ')', ';', '}', 'DP', '(', 'NETIF_MSG_RX_STATUS', ',', '""""', ',', 'fp', '->', 'last_max_sge', ',', 'fp', '->', 'rx_sge_prod', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
246,"['piix4_get_smb', '(', 'void', ')', '{', 'unsigned', 'long', 'x', ';', 'int', 'result', ';', 'result', '=', 'pci_conf_read', '(', '0', ',', 'smbdev', ',', 'smbfun', ',', '0x08', ',', '1', ',', '&', 'x', ')', ';', 'if', '(', 'x', '<', '0x40', ')', '{', '/', '/', 'SB600', '/', 'result', '=', 'pci_conf_read', '(', '0', ',', 'smbdev', ',', 'smbfun', ',', '0x90', ',', '2', ',', '&', 'x', ')', ';', 'if', '(', 'result', '==', '0', ')', 'smbusbase', '=', '(', 'unsigned', 'short', ')', 'x', '&', '0xFFFE', ';', '}', 'else', '{', '/', '/', 'sb800_get_smb', '(', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
247,"['parse_prefix6', '(', 'struct', 'parse', '*', 'cfile', ',', 'struct', 'group', '*', 'group', ')', '{', 'struct', 'iaddr', 'lo', ',', 'hi', ';', 'int', 'bits', ';', 'enum', 'dhcp_token', 'token', ';', 'const', 'char', '*', 'val', ';', 'struct', 'iaddrcidrnetlist', '*', 'nets', ';', 'struct', 'iaddrcidrnetlist', '*', 'p', ';', 'if', '(', 'local_family', '!=', 'AF_INET6', ')', '{', 'parse_warn', '(', 'cfile', ',', '""""', ')', ';', 'skip_to_semi', '(', 'cfile', ')', ';', 'return', ';', '}', 'if', '(', 'group', '->', 'subnet', '==', 'NULL', ')', 'log_fatal', '(', '""""', ',', 'MDL', ')', ';', '/', '*', '*', 'Read', 'starting', 'and', 'ending', 'address', '.', 'if', '(', '!parse_ip6_addr', '(', 'cfile', ',', '&', 'lo', ')', ')', '{', 'return', ';', '}', 'if', '(', '!parse_ip6_addr', '(', 'cfile', ',', '&', 'hi', ')', ')', '{', 'return', ';', '}', '/', '*', '*', 'Next', 'is', ""''"", 'number', ""''"", '.', 'token', '=', 'next_token', '(', 'NULL', ',', 'NULL', ',', 'cfile', ')', ';', 'if', '(', 'token', '!=', 'SLASH', ')', '{', 'parse_warn', '(', 'cfile', ',', '""""', ')', ';', 'if', '(', 'token', '!=', 'SEMI', ')', 'skip_to_semi', '(', 'cfile', ')', ';', 'return', ';', '}', 'token', '=', 'next_token', '(', '&', 'val', ',', 'NULL', ',', 'cfile', ')', ';', 'if', '(', 'token', '!=', 'NUMBER', ')', '{', 'parse_warn', '(', 'cfile', ',', '""""', ')', ';', 'if', '(', 'token', '!=', 'SEMI', ')', 'skip_to_semi', '(', 'cfile', ')', ';', 'return', ';', '}', 'bits', '=', 'atoi', '(', 'val', ')', ';', 'if', '(', '(', 'bits', '<=', '0', ')', '||', '(', 'bits', '>=', '128', ')', ')', '{', 'parse_warn', '(', 'cfile', ',', '""""', ')', ';', 'return', ';', '}', 'if', '(', '!is_cidr_mask_valid', '(', '&', 'lo', ',', 'bits', ')', '||', '!is_cidr_mask_valid', '(', '&', 'hi', ',', 'bits', ')', ')', '{', 'parse_warn', '(', 'cfile', ',', '""""', ')', ';', 'return', ';', '}', 'token', '=', 'next_token', '(', 'NULL', ',', 'NULL', ',', 'cfile', ')', ';', 'if', '(', 'token', '!=', 'SEMI', ')', '{', 'parse_warn', '(', 'cfile', ',', '""""', ')', ';', 'skip_to_semi', '(', 'cfile', ')', ';', 'return', ';', '}', '/', '*', '*', 'Convert', 'our', 'range', 'to', 'a', 'set', 'of', 'CIDR', 'networks', '.', 'nets', '=', 'NULL', ';', 'if', '(', 'range2cidr', '(', '&', 'nets', ',', '&', 'lo', ',', '&', 'hi', ')', '!=', 'ISC_R_SUCCESS', ')', '{', 'log_fatal', '(', '""""', ')', ';', '}', 'for', '(', 'p', '=', 'nets', ';', 'p', '!=', 'NULL', ';', 'p', '=', 'p', '->', 'next', ')', '{', 'if', '(', 'p', '->', 'cidrnet', '.', 'bits', '==', '128', ')', '{', 'p', '->', 'cidrnet', '.', 'bits', '=', 'bits', ';', '}', 'if', '(', 'p', '->', 'cidrnet', '.', 'bits', '>', 'bits', ')', '{', 'parse_warn', '(', 'cfile', ',', '""""', ')', ';', 'continue', ';', '}', 'add_ipv6_pool_to_subnet', '(', 'group', '->', 'subnet', ',', 'D6O_IA_PD', ',', '&', 'p', '->', 'cidrnet', '.', 'lo_addr', ',', 'p', '->', 'cidrnet', '.', 'bits', ',', 'bits', ')', ';', '}', 'free_iaddrcidrnetlist', '(', '&', 'nets', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
248,"['Iidlerun', '(', 'int', 'argc', ',', 'lvar_t', '*', 'argv', ')', '{', 'Tobj', 'mo', ';', 'char', '*', 'ms', ';', 'int', 'mode', ';', 'if', '(', 'Tgettype', '(', '(', 'mo', '=', 'argv', '[', '0', ']', '.', 'o', ')', ')', '!=', 'T_STRING', ')', 'return', 'L_SUCCESS', ';', 'ms', '=', 'Tgetstring', '(', 'mo', ')', ';', 'if', '(', 'strcmp', '(', 'ms', ',', '""""', ')', '==', '0', ')', 'mode', '=', '1', ';', 'else', 'if', '(', 'strcmp', '(', 'ms', ',', '""""', ')', '==', '0', ')', 'mode', '=', '0', ';', 'return', 'L_FAILURE', ';', 'idlerunmode', '=', 'mode', ';', 'return', 'L_SUCCESS', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  True,CWE-476  False,CWE-other  False
249,"['l2tp_tunnel_start', '(', 'struct', 'l2tp_conn_t', '*', 'conn', ',', 'triton_event_func', 'start_func', ',', 'void', '*', 'start_param', ')', '{', 'if', '(', 'triton_context_register', '(', '&', 'conn', '->', 'ctx', ',', 'NULL', ')', '<', '0', ')', '{', 'log_error', '(', '""""', ')', ';', 'goto', 'err', ';', '}', 'triton_md_register_handler', '(', '&', 'conn', '->', 'ctx', ',', '&', 'conn', '->', 'hnd', ')', ';', 'if', '(', 'triton_md_enable_handler', '(', '&', 'conn', '->', 'hnd', ',', 'MD_MODE_READ', ')', '<', '0', ')', '{', 'log_error', '(', '""""', ')', ';', 'goto', 'err_ctx', ';', '}', 'triton_context_wakeup', '(', '&', 'conn', '->', 'ctx', ')', ';', 'if', '(', 'triton_timer_add', '(', '&', 'conn', '->', 'ctx', ',', '&', 'conn', '->', 'timeout_timer', ',', '0', ')', '<', '0', ')', '{', 'log_error', '(', '""""', ')', ';', 'goto', 'err_ctx_md', ';', '}', 'if', '(', 'triton_context_call', '(', '&', 'conn', '->', 'ctx', ',', 'start_func', ',', 'start_param', ')', '<', '0', ')', '{', 'log_error', '(', '""""', ')', ';', 'goto', 'err_ctx_md_timer', ';', '}', 'return', '0', ';', 'err_ctx_md_timer', ':', 'triton_timer_del', '(', '&', 'conn', '->', 'timeout_timer', ')', ';', 'err_ctx_md', ':', 'triton_md_unregister_handler', '(', '&', 'conn', '->', 'hnd', ',', '0', ')', ';', 'err_ctx', ':', 'triton_context_unregister', '(', '&', 'conn', '->', 'ctx', ')', ';', 'err', ':', 'return', '-', '1', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
250,"['move_repair', '(', 'piece_info_t', '*', 'obj', ')', '{', 'path_map_t', 'path_map', '[', 'MAP_SIZE', ']', ';', 'loc_t', 'loc', ';', 'ASSERT', '(', 'obj', '->', 'type', '>', 'FIGHTER', ')', ';', 'if', '(', 'obj', '->', 'hits', '==', 'piece_attr', '[', 'obj', '->', 'type', ']', '.', 'max_hits', ')', '{', 'obj', '->', 'func', '=', 'NOFUNC', ';', 'return', ';', '}', 'obj', '->', 'moved', '+=', '1', ';', 'return', ';', '}', 'loc', '=', 'vmap_find_wobj', '(', 'path_map', ',', 'user_map', ',', 'obj', '->', 'loc', ',', '&', 'user_ship_repair', ')', ';', 'vmap_mark_path', '(', 'path_map', ',', 'user_map', ',', 'loc', ')', ';', 'loc', '=', 'vmap_find_dir', '(', 'path_map', ',', 'user_map', ',', 'obj', '->', 'loc', ',', '""""', ',', '""""', ')', ';', 'if', '(', 'loc', '!=', 'obj', '->', 'loc', ')', 'move_obj', '(', 'obj', ',', 'loc', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
251,"['dot', '(', 'const', 'double', '*', 'v1', ',', 'unsigned', 's', ',', 'const', 'double', '*', 'v2', ',', 'unsigned', 'n', ')', '{', 'double', 'sum', '=', '0', '.', '0', ';', 'for', '(', 'unsigned', 'i', '=', '0', ';', 'i', '<', 'n', ';', '++', 'i', ',', 'v1', '+=', 's', ')', 'sum', '+=', '(', '*', 'v1', ')', '*', 'v2', '[', 'i', ']', ';', 'return', 'sum', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
252,"['bfusb_load_firmware', '(', 'struct', 'bfusb_data', '*', 'data', ',', 'const', 'unsigned', 'char', '*', 'firmware', ',', 'int', 'count', ')', '{', 'unsigned', 'char', '*', 'buf', ';', 'int', 'err', ',', 'pipe', ',', 'len', ',', 'size', ',', 'sent', '=', '0', ';', 'BT_DBG', '(', '""""', ',', 'data', ',', 'data', '->', 'udev', ')', ';', 'BT_INFO', '(', '""""', ')', ';', 'buf', '=', 'kmalloc', '(', 'BFUSB_MAX_BLOCK_SIZE', '+', '3', ',', 'GFP_KERNEL', ')', ';', 'if', '(', '!buf', ')', '{', 'BT_ERR', '(', '""""', ')', ';', 'return', '-', 'ENOMEM', ';', '}', 'pipe', '=', 'usb_sndctrlpipe', '(', 'data', '->', 'udev', ',', '0', ')', ';', 'if', '(', 'usb_control_msg', '(', 'data', '->', 'udev', ',', 'pipe', ',', 'USB_REQ_SET_CONFIGURATION', ',', '0', ',', '1', ',', '0', ',', 'NULL', ',', '0', ',', 'USB_CTRL_SET_TIMEOUT', ')', '<', '0', ')', '{', 'BT_ERR', '(', '""""', ')', ';', 'kfree', '(', 'buf', ')', ';', 'return', '-', 'EBUSY', ';', '}', 'data', '->', 'udev', '->', 'toggle', '[', '0', ']', '=', 'data', '->', 'udev', '->', 'toggle', '[', '1', ']', '=', '0', ';', 'pipe', '=', 'usb_sndbulkpipe', '(', 'data', '->', 'udev', ',', 'data', '->', 'bulk_out_ep', ')', ';', 'while', '(', 'count', ')', '{', 'size', '=', 'min_t', '(', 'uint', ',', 'count', ',', 'BFUSB_MAX_BLOCK_SIZE', '+', '3', ')', ';', 'memcpy', '(', 'buf', ',', 'firmware', '+', 'sent', ',', 'size', ')', ';', 'err', '=', 'usb_bulk_msg', '(', 'data', '->', 'udev', ',', 'pipe', ',', 'buf', ',', 'size', ',', '&', 'len', ',', 'BFUSB_BLOCK_TIMEOUT', ')', ';', 'if', '(', 'err', '||', '(', 'len', '!=', 'size', ')', ')', '{', 'BT_ERR', '(', '""""', ')', ';', 'goto', 'error', ';', '}', 'sent', '+=', 'size', ';', 'count', '-=', 'size', ';', '}', 'err', '=', 'usb_bulk_msg', '(', 'data', '->', 'udev', ',', 'pipe', ',', 'NULL', ',', '0', ',', '&', 'len', ',', 'BFUSB_BLOCK_TIMEOUT', ')', ';', 'if', '(', 'err', '<', '0', ')', '{', 'BT_ERR', '(', '""""', ')', ';', 'goto', 'error', ';', '}', 'pipe', '=', 'usb_sndctrlpipe', '(', 'data', '->', 'udev', ',', '0', ')', ';', 'err', '=', 'usb_control_msg', '(', 'data', '->', 'udev', ',', 'pipe', ',', 'USB_REQ_SET_CONFIGURATION', ',', '0', ',', '2', ',', '0', ',', 'NULL', ',', '0', ',', 'USB_CTRL_SET_TIMEOUT', ')', ';', 'if', '(', 'err', '<', '0', ')', '{', 'BT_ERR', '(', '""""', ')', ';', 'goto', 'error', ';', '}', 'data', '->', 'udev', '->', 'toggle', '[', '0', ']', '=', 'data', '->', 'udev', '->', 'toggle', '[', '1', ']', '=', '0', ';', 'BT_INFO', '(', '""""', ')', ';', 'kfree', '(', 'buf', ')', ';', 'return', '0', ';', 'error', ':', 'kfree', '(', 'buf', ')', ';', 'pipe', '=', 'usb_sndctrlpipe', '(', 'data', '->', 'udev', ',', '0', ')', ';', 'usb_control_msg', '(', 'data', '->', 'udev', ',', 'pipe', ',', 'USB_REQ_SET_CONFIGURATION', ',', '0', ',', '0', ',', '0', ',', 'NULL', ',', '0', ',', 'USB_CTRL_SET_TIMEOUT', ')', ';', 'return', 'err', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
253,"['load_config', '(', 'gchar', '*', 'path', ')', '{', 'FILE\t\t\t', '*', 'f', ';', 'PluginConfigRec\t', '*', 'cfg', ';', 'gchar\t\t\tbuf', '[', '128', '+', '32', '+', '2', ']', ',', 'config', '[', '32', ']', ',', 'arg', '[', '128', ']', ';', 'gchar\t\t\t', '*', 's', ',', '*', 'plugin_config_block', '=', 'NULL', ';', '/', '/', 'g_print', '(', '""""', ',', 'path', ')', ';', 'f', '=', 'g_fopen', '(', 'path', ',', '""""', ')', ';', 'if', '(', '!f', ')', 'return', ';', 'while', '(', 'fgets', '(', 'buf', ',', 'sizeof', '(', 'buf', ')', ',', 'f', ')', ')', '{', 'if', '(', '!buf', '[', '0', ']', '||', 'buf', '[', '0', ']', '==', ""''"", ')', 'continue', ';', 'if', '(', 'buf', '[', '0', ']', '==', ""''"", '||', 'buf', '[', '0', ']', '==', ""''"", ')', '{', 'if', '(', 'buf', '[', '1', ']', '==', ""''"", ')', '{', 'g_free', '(', 'plugin_config_block', ')', ';', 'plugin_config_block', '=', 'NULL', ';', '}', '{', 'if', '(', '(', 's', '=', 'strchr', '(', 'buf', ',', ""''"", ')', ')', '!=', '||', '(', 's', '=', 'strchr', '(', 'buf', ',', ""''"", ')', ')', '!=', ')', '*', 's', '=', ""''"", ';', 'plugin_config_block', '=', 'g_strdup', '(', '&', 'buf', '[', '1', ']', ')', ';', '}', 'continue', ';', '}', 'if', '(', 'plugin_config_block', ')', '{', 'cfg', '=', 'g_new0', '(', 'PluginConfigRec', ',', '1', ')', ';', 'cfg', '->', 'name', '=', 'g_strdup', '(', 'plugin_config_block', ')', ';', 'if', '(', '(', 's', '=', 'strchr', '(', 'buf', ',', ""''"", ')', ')', '!=', 'NULL', ')', '*', 's', '=', ""''"", ';', 'cfg', '->', 'line', '=', 'g_strdup', '(', 'buf', ')', ';', '=', 'g_list_append', '(', 'gkrellmd_plugin_config_list', ',', 'cfg', ')', ';', '}', '{', 'arg', '[', '0', ']', '=', ""''"", ';', 'sscanf', '(', 'buf', ',', '""""', ',', 'config', ',', 'arg', ')', ';', 'parse_config', '(', 'config', ',', 'arg', ')', ';', '}', '}', 'fclose', '(', 'f', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
254,"['focus_in_event_ModelessOther', '(', 'GtkWidget', '*', 'widget', ',', 'GdkEvent', '*', '/', '*', 'event', '*', '/', ',', 'std', ':', ':', 'pointer_to_unary_function', '<', 'int', ',', 'gboolean', '>', '*', 'other_function', ')', '{', 'XAP_App', '*', 'pApp', '=', 'static_cast', '<', 'XAP_App', '*', '>', '(', 'g_object_get_data', '(', 'G_OBJECT', '(', 'widget', ')', ',', '""""', ')', ')', ';', 'XAP_Frame', '*', 'pFrame', '=', 'pApp', '->', 'getLastFocussedFrame', '(', ')', ';', 'if', '(', 'pFrame', '==', 'static_cast', '<', 'XAP_Frame', '*', '>', '(', 'NULL', ')', ')', '{', 'UT_uint32', 'nframes', '=', 'pApp', '->', 'getFrameCount', '(', ')', ';', 'if', '(', 'nframes', '>', '0', '&&', 'nframes', '<', '10', ')', '{', 'pFrame', '=', 'pApp', '->', 'getFrame', '(', '0', ')', ';', '}', '{', 'return', 'FALSE', ';', '}', '}', 'if', '(', 'pFrame', '==', 'static_cast', '<', 'XAP_Frame', '*', '>', '(', 'NULL', ')', ')', 'return', 'FALSE', ';', 'AV_View', '*', 'pView', '=', 'pFrame', '->', 'getCurrentView', '(', ')', ';', 'if', '(', 'pView', '!=', 'NULL', ')', '{', 'pView', '->', 'focusChange', '(', 'AV_FOCUS_MODELESS', ')', ';', '(', '*', 'other_function', ')', '(', '0', ')', ';', '}', 'return', 'FALSE', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
255,"['page_to_file', '(', 'int', 'page_num', ')', '{', 'GCriticalSectionLock', 'lock', '(', '(', 'GCriticalSection', '*', ')', '&', 'class_lock', ')', ';', 'return', '(', 'page_num', '<', 'page2file', '.', 'size', '(', ')', ')', '?', 'page2file', '[', 'page_num', ']', ':', '(', 'GP', '<', 'DjVmDir', ':', ':', 'File', '>', '(', '0', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
256,"['write_properties_between', '(', 'uchar', '*', 'p', ',', 'int', 'mark', ',', 'int', 'from', ',', 'int', 'to', ')', '{', 'int', 'j', ',', 'k', ',', 'prop_number', ',', 'prop_length', ';', 'for', '(', 'prop_number', '=', 'to', ';', 'prop_number', '>=', 'from', ';', 'prop_number', '--', ')', '{', 'for', '(', 'j', '=', '0', ';', 'j', '<', 'full_object', '.', 'l', ';', 'j', '++', ')', '{', 'if', '(', '(', 'full_object', '.', 'pp', '[', 'j', ']', '.', 'num', '==', 'prop_number', ')', '&&', '(', 'full_object', '.', 'pp', '[', 'j', ']', '.', 'l', '!=', '100', ')', ')', '{', 'prop_length', '=', '2', '*', 'full_object', '.', 'pp', '[', 'j', ']', '.', 'l', ';', 'if', '(', 'mark', '+', '2', '+', 'prop_length', '>=', 'MAX_PROP_TABLE_SIZE', ')', 'memoryerror', '(', '""""', ',', 'MAX_PROP_TABLE_SIZE', ')', ';', 'if', '(', 'version_number', '==', '3', ')', 'p', '[', 'mark', '++', ']', '=', 'prop_number', '+', '(', 'prop_length', '-', '1', ')', '*', '32', ';', '{', 'switch', '(', 'prop_length', ')', '{', 'case', '1', ':', 'p', '[', 'mark', '++', ']', '=', 'prop_number', ';', 'break', ';', 'case', '2', ':', 'p', '[', 'mark', '++', ']', '=', 'prop_number', '+', '0x40', ';', 'break', ';', 'default', ':', 'p', '[', 'mark', '++', ']', '=', 'prop_number', '+', '0x80', ';', 'p', '[', 'mark', '++', ']', '=', 'prop_length', '+', '0x80', ';', 'break', ';', '}', '}', 'for', '(', 'k', '=', '0', ';', 'k', '<', 'full_object', '.', 'pp', '[', 'j', ']', '.', 'l', ';', 'k', '++', ')', '{', 'if', '(', 'full_object', '.', 'pp', '[', 'j', ']', '.', 'ao', '[', 'k', ']', '.', 'marker', '!=', '0', ')', 'backpatch_zmachine', '(', 'full_object', '.', 'pp', '[', 'j', ']', '.', 'ao', '[', 'k', ']', '.', 'marker', ',', 'PROP_ZA', ',', 'mark', ')', ';', 'p', '[', 'mark', '++', ']', '=', 'full_object', '.', 'pp', '[', 'j', ']', '.', 'ao', '[', 'k', ']', '.', 'value', '/', '256', ';', 'p', '[', 'mark', '++', ']', '=', 'full_object', '.', 'pp', '[', 'j', ']', '.', 'ao', '[', 'k', ']', '.', 'value', '%', '256', ';', '}', '}', '}', '}', 'p', '[', 'mark', '++', ']', '=', '0', ';', 'return', '(', 'mark', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
257,"['ecryptfs_process_key_cipher', '(', 'struct', 'crypto_blkcipher', '*', '*', 'key_tfm', ',', 'char', '*', 'cipher_name', ',', 'size_t', '*', 'key_size', ')', '{', 'char', 'dummy_key', '[', 'ECRYPTFS_MAX_KEY_BYTES', ']', ';', 'char', '*', 'full_alg_name', '=', 'NULL', ';', 'int', 'rc', ';', '*', 'key_tfm', '=', 'NULL', ';', 'if', '(', '*', 'key_size', '>', 'ECRYPTFS_MAX_KEY_BYTES', ')', '{', 'rc', '=', '-', 'EINVAL', ';', 'printk', '(', 'KERN_ERR', '""""', ',', '*', 'key_size', ',', 'ECRYPTFS_MAX_KEY_BYTES', ')', ';', 'goto', 'out', ';', '}', 'rc', '=', 'ecryptfs_crypto_api_algify_cipher_name', '(', '&', 'full_alg_name', ',', 'cipher_name', ',', '""""', ')', ';', 'if', '(', 'rc', ')', 'goto', 'out', ';', '*', 'key_tfm', '=', 'crypto_alloc_blkcipher', '(', 'full_alg_name', ',', '0', ',', 'CRYPTO_ALG_ASYNC', ')', ';', 'if', '(', 'IS_ERR', '(', '*', 'key_tfm', ')', ')', '{', 'rc', '=', 'PTR_ERR', '(', '*', 'key_tfm', ')', ';', 'printk', '(', 'KERN_ERR', '""""', ',', 'full_alg_name', ',', 'rc', ')', ';', 'goto', 'out', ';', '}', 'crypto_blkcipher_set_flags', '(', '*', 'key_tfm', ',', 'CRYPTO_TFM_REQ_WEAK_KEY', ')', ';', 'if', '(', '*', 'key_size', '==', '0', ')', '{', 'struct', 'blkcipher_alg', '*', 'alg', '=', 'crypto_blkcipher_alg', '(', '*', 'key_tfm', ')', ';', '*', 'key_size', '=', 'alg', '->', 'max_keysize', ';', '}', 'get_random_bytes', '(', 'dummy_key', ',', '*', 'key_size', ')', ';', 'rc', '=', 'crypto_blkcipher_setkey', '(', '*', 'key_tfm', ',', 'dummy_key', ',', '*', 'key_size', ')', ';', 'if', '(', 'rc', ')', '{', 'printk', '(', 'KERN_ERR', '""""', ',', '*', 'key_size', ',', 'full_alg_name', ',', 'rc', ')', ';', 'rc', '=', '-', 'EINVAL', ';', 'goto', 'out', ';', '}', 'out', ':', 'kfree', '(', 'full_alg_name', ')', ';', 'return', 'rc', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
258,"['change_definition', '(', 'const', 'sharedptr', '<', 'const', 'Field', '>', '&', 'fieldOld', ',', 'const', 'sharedptr', '<', 'const', 'Field', '>', '&', 'field', ')', '{', 'BusyCursor', 'busy_cursor', '(', 'get_app_window', '(', ')', ')', ';', '/', '/', 'DB', 'field', 'definition', ':', 'sharedptr', '<', 'Field', '>', 'result', ';', 'if', '(', '!fieldOld', '||', '!field', ')', 'return', 'result', ';', 'type_vec_const_fields', 'old_fields', ';', 'type_vec_fields', 'new_fields', ';', 'if', '(', 'fieldOld', '->', 'get_primary_key', '(', ')', '!=', 'field', '->', 'get_primary_key', '(', ')', ')', '{', '/', '/', 'Note', ':', 'We', 'have', 'already', 'checked', 'whether', 'this', 'change', 'of', 'primary', 'key', 'is', 'likely', 'to', 'succeed', '.', 'if', '(', 'field', '->', 'get_primary_key', '(', ')', ')', '{', '/', '/', 'Unset', 'the', 'current', 'primary', 'key', ':', '/', '/', '(', 'There', 'should', 'be', 'one', '.', ')', 'sharedptr', '<', 'Field', '>', 'existing_primary_key', '=', 'get_field_primary_key_for_table', '(', 'm_table_name', ')', ';', 'if', '(', 'existing_primary_key', ')', '{', 'sharedptr', '<', 'Field', '>', 'existing_primary_key_unset', '=', 'glom_sharedptr_clone', '(', 'existing_primary_key', ')', ';', 'existing_primary_key_unset', '->', 'set_primary_key', '(', 'false', ')', ';', 'old_fields', '.', 'push_back', '(', 'existing_primary_key', ')', ';', 'new_fields', '.', 'push_back', '(', 'existing_primary_key_unset', ')', ';', '}', '}', '/', '/', 'Forget', 'the', 'remembered', 'currently', '-', 'viewed', 'primary', 'key', 'value', ',', '/', '/', 'because', 'it', 'will', 'be', 'useless', 'with', 'a', 'different', 'field', 'as', 'the', 'primary', 'key', ',', 'or', 'with', 'no', 'field', 'as', 'primary', 'key', ':', 'Document', '*', 'document', '=', 'get_document', '(', ')', ';', 'document', '->', 'forget_layout_record_viewed', '(', 'm_table_name', ')', ';', '}', 'old_fields', '.', 'push_back', '(', 'fieldOld', ')', ';', 'new_fields', '.', 'push_back', '(', 'glom_sharedptr_clone', '(', 'field', ')', ')', ';', '/', '/', 'TODO', ':', 'Warn', 'about', 'a', 'delay', ',', 'and', 'possible', 'loss', 'of', 'precision', ',', 'before', '/', '/', 'changing', 'types', 'or', 'when', 'the', 'backend', 'needs', 'to', 'recreate', 'the', 'whole', 'column', '/', '/', 'table', '.', '/', '/', 'TODO', ':', ""Don't"", 'call', 'change_columns', 'if', 'only', 'the', 'field', 'title', 'has', 'changed', ',', '/', '/', 'since', 'the', 'title', 'is', 'only', 'stored', 'in', 'the', 'document', 'anyway', '.', 'if', '(', 'change_columns', '(', 'm_table_name', ',', 'old_fields', ',', 'new_fields', ',', 'get_app_window', '(', ')', ')', ')', '{', 'result', '=', 'new_fields', '.', 'back', '(', ')', ';', '}', '{', '/', '/', 'Give', 'up', '.', ""Don't"", 'update', 'the', 'document', '.', 'Hope', 'that', 'we', 'can', 'read', 'the', 'current', 'field', 'properties', 'from', 'the', 'database', '.', 'fill_fields', '(', ')', ';', '/', '/', 'fill_from_database', '(', ')', ';', '/', '/', 'We', 'should', 'not', 'change', 'the', 'database', 'definition', 'in', 'a', 'cell', 'renderer', 'signal', 'handler', '.', '/', '/', 'Select', 'the', 'same', 'field', 'again', ':', 'm_AddDel', '.', 'select_item', '(', 'field', '->', 'get_name', '(', ')', ',', 'm_colName', ',', 'false', ')', ';', 'return', 'glom_sharedptr_clone', '(', 'old_fields', '.', 'back', '(', ')', ')', ';', '}', '/', '/', 'Extra', 'Glom', 'field', 'definitions', ':', 'Document', '*', 'pDoc', '=', 'static_cast', '<', 'Document', '*', '>', '(', 'get_document', '(', ')', ')', ';', 'if', '(', 'pDoc', ')', '{', '/', '/', 'Get', ""Table's"", 'fields', ':', 'Document', ':', ':', 'type_vec_fields', 'vecFields', '=', 'pDoc', '->', 'get_table_fields', '(', 'm_table_name', ')', ';', 'for', '(', 'unsigned', 'int', 'i', '=', '0', ';', 'i', '<', 'old_fields', '.', 'size', '(', ')', ';', '++', 'i', ')', '{', '/', '/', 'Find', 'old', 'field', ':', 'const', 'Glib', ':', ':', 'ustring', 'field_name_old', '=', 'old_fields', '[', 'i', ']', '->', 'get_name', '(', ')', ';', 'Document', ':', ':', 'type_vec_fields', ':', ':', 'iterator', 'iterFind', '=', 'std', ':', ':', 'find_if', '(', 'vecFields', '.', 'begin', '(', ')', ',', 'vecFields', '.', 'end', '(', ')', ',', 'predicate_FieldHasName', '<', 'Field', '>', '(', 'field_name_old', ')', ')', ';', 'if', '(', 'iterFind', '!=', 'vecFields', '.', 'end', '(', ')', ')', '/', '/', 'If', 'it', 'was', 'found', ':', '{', '/', '/', 'Change', 'it', 'to', 'the', 'new', ""Fields's"", 'value', ':', '*', 'iterFind', '=', 'glom_sharedptr_clone', '(', 'new_fields', '[', 'i', ']', ')', ';', '}', '{', '/', '/', 'Add', 'it', ',', 'because', ""it's"", 'not', 'there', 'already', ':', 'vecFields', '.', 'push_back', '(', 'glom_sharedptr_clone', '(', 'new_fields', '[', 'i', ']', ')', ')', ';', '}', '/', '/', 'TODO_Performance', ':', 'Can', 'we', 'do', 'this', 'at', 'the', 'end', ',', 'after', 'the', 'loop', '?', 'Or', '/', '/', 'the', 'following', 'operations', 'depend', 'on', 'this', '?', 'pDoc', '->', 'set_table_fields', '(', 'm_table_name', ',', 'vecFields', ')', ';', '/', '/', 'Update', 'field', 'names', 'where', 'they', 'are', 'used', 'in', 'relationships', 'or', 'on', 'layouts', ':', 'if', '(', 'field_name_old', '!=', 'new_fields', '[', 'i', ']', '->', 'get_name', '(', ')', ')', '{', 'pDoc', '->', 'change_field_name', '(', 'm_table_name', ',', 'field_name_old', ',', 'new_fields', '[', 'i', ']', '->', 'get_name', '(', ')', ')', ';', '}', '/', '/', 'TODO_Performance', ':', 'Do', 'we', 'even', 'need', 'to', 'do', 'this', 'if', 'only', 'the', 'primary', '/', '/', 'flag', 'changed', ',', 'such', 'as', 'for', 'the', 'first', 'entry', 'in', 'the', 'new_fields', 'vector', '?', '/', '/', 'Recalculate', 'if', 'necessary', ':', 'if', '(', 'new_fields', '[', 'i', ']', '->', 'get_has_calculation', '(', ')', ')', '{', 'const', 'Glib', ':', ':', 'ustring', 'calculation', '=', 'new_fields', '[', 'i', ']', '->', 'get_calculation', '(', ')', ';', 'if', '(', 'calculation', '!=', 'old_fields', '[', 'i', ']', '->', 'get_calculation', '(', ')', ')', 'calculate_field_in_all_records', '(', 'm_table_name', ',', 'new_fields', '[', 'i', ']', ')', ';', '}', '}', '}', '/', '/', 'Update', 'UI', ':', 'fill_fields', '(', ')', ';', '/', '/', 'fill_from_database', '(', ')', ';', '/', '/', 'We', 'should', 'not', 'change', 'the', 'database', 'definition', 'in', 'a', 'cell', 'renderer', 'signal', 'handler', '.', '/', '/', 'Select', 'the', 'same', 'field', 'again', ':', 'm_AddDel', '.', 'select_item', '(', 'field', '->', 'get_name', '(', ')', ',', 'm_colName', ',', 'false', ')', ';', 'return', 'result', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
259,"['FloodAreaConnections', '(', 'void', ')', '{', 'int\t\ti', ';', 'carea_t\t', '*', 'area', ';', 'int\t\tfloodnum', ';', '/', '/', 'all', 'current', 'floods', 'are', 'now', 'floodvalid', '++', ';', 'floodnum', '=', '0', ';', '/', '/', 'area', '0', 'is', 'not', 'for', '(', 'i', '=', '1', ';', 'i', '<', 'numareas', ';', 'i', '++', ')', '{', 'area', '=', '&', 'map_areas', '[', 'i', ']', ';', 'if', '(', 'area', '->', 'floodvalid', '==', 'floodvalid', ')', 'continue', ';', '\t\t', '/', '/', 'already', 'flooded', 'floodnum', '++', ';', 'FloodArea_r', '(', 'area', ',', 'floodnum', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
260,"['ixgbe_acquire_swfw_sync_X550em', '(', 'struct', 'ixgbe_hw', '*', 'hw', ',', 'u32', 'mask', ')', '{', 's32', 'status', ';', 'status', '=', 'ixgbe_acquire_swfw_sync_X540', '(', 'hw', ',', 'mask', ')', ';', 'if', '(', 'status', ')', 'return', 'status', ';', 'if', '(', 'mask', '&', 'IXGBE_GSSR_I2C_MASK', ')', 'ixgbe_set_mux', '(', 'hw', ',', '1', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
261,"['bna_enet_sm_pause_init_wait', '(', 'struct', 'bna_enet', '*', 'enet', ',', 'enum', 'bna_enet_event', 'event', ')', '{', 'switch', '(', 'event', ')', '{', 'case', 'ENET_E_STOP', ':', 'enet', '->', 'flags', '&=', '~BNA_ENET_F_PAUSE_CHANGED', ';', 'bfa_fsm_set_state', '(', 'enet', ',', 'bna_enet_sm_last_resp_wait', ')', ';', 'break', ';', 'case', 'ENET_E_FAIL', ':', 'enet', '->', 'flags', '&=', '~BNA_ENET_F_PAUSE_CHANGED', ';', 'bfa_fsm_set_state', '(', 'enet', ',', 'bna_enet_sm_stopped', ')', ';', 'break', ';', 'case', 'ENET_E_PAUSE_CFG', ':', 'enet', '->', 'flags', '|=', 'BNA_ENET_F_PAUSE_CHANGED', ';', 'break', ';', 'case', 'ENET_E_MTU_CFG', ':', 'break', ';', 'case', 'ENET_E_FWRESP_PAUSE', ':', 'if', '(', 'enet', '->', 'flags', '&', 'BNA_ENET_F_PAUSE_CHANGED', ')', '{', 'enet', '->', 'flags', '&=', '~BNA_ENET_F_PAUSE_CHANGED', ';', 'bna_bfi_pause_set', '(', 'enet', ')', ';', '}', 'else', '{', 'bfa_fsm_set_state', '(', 'enet', ',', 'bna_enet_sm_started', ')', ';', 'bna_enet_chld_start', '(', 'enet', ')', ';', '}', 'break', ';', 'default', ':', 'bfa_sm_fault', '(', 'event', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
262,"['match_gai_table', '(', 'struct', 'sockaddr', '*', 'sa', ',', 'const', 'struct', 'gai_table', '*', 'tbl', ')', '{', 'struct', 'sockaddr_in', '*', 'sin', '=', '(', 'void', '*', ')', 'sa', ';', 'struct', 'sockaddr_in6', '*', 'sin6', '=', '(', 'void', '*', ')', 'sa', ';', 'void', '*', 'addr', ';', 'if', '(', 'sa', '->', 'sa_family', '==', 'AF_INET', ')', '{', 'addr', '=', 'v4mapped', ';', 'memcpy', '(', 'v4mapped', '+', '12', ',', '&', 'sin', '->', 'sin_addr', ',', 'NS_INADDRSZ', ')', ';', '}', 'addr', '=', '&', 'sin6', '->', 'sin6_addr', ';', 'while', '(', '1', ')', '{', 'if', '(', 'mask_compare', '(', 'addr', ',', 'tbl', '->', 'addr', ',', 'tbl', '->', 'mask', ')', ')', 'return', 'tbl', '->', 'value', ';', 'tbl', '++', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
263,"['cgroup_config_unload_controller', '(', 'const', 'struct', 'cgroup_mount_point', '*', 'mount_info', ')', '{', 'int', 'ret', ',', 'error', ';', 'struct', 'cgroup', '*', 'cgroup', '=', 'NULL', ';', 'struct', 'cgroup_controller', '*', 'cgc', '=', 'NULL', ';', 'char', 'path', '[', 'FILENAME_MAX', ']', ';', 'void', '*', 'handle', ';', 'cgroup', '=', 'cgroup_new_cgroup', '(', '""""', ')', ';', 'if', '(', 'cgroup', '==', 'NULL', ')', 'return', 'ECGFAIL', ';', 'cgc', '=', 'cgroup_add_controller', '(', 'cgroup', ',', 'mount_info', '->', 'name', ')', ';', 'if', '(', 'cgc', '==', 'NULL', ')', '{', 'ret', '=', 'ECGFAIL', ';', 'goto', 'out_error', ';', '}', 'ret', '=', 'cgroup_delete_cgroup_ext', '(', 'cgroup', ',', 'CGFLAG_DELETE_RECURSIVE', ')', ';', 'if', '(', 'ret', '!=', '0', ')', 'goto', 'out_error', ';', 'ret', '=', 'cgroup_get_subsys_mount_point_begin', '(', 'mount_info', '->', 'name', ',', '&', 'handle', ',', 'path', ')', ';', 'while', '(', 'ret', '==', '0', ')', '{', 'error', '=', 'umount', '(', 'path', ')', ';', 'if', '(', 'error', ')', '{', 'last_errno', '=', 'errno', ';', 'ret', '=', 'ECGOTHER', ';', 'goto', 'out_error', ';', '}', 'ret', '=', 'cgroup_get_subsys_mount_point_next', '(', '&', 'handle', ',', 'path', ')', ';', '}', 'cgroup_get_subsys_mount_point_end', '(', '&', 'handle', ')', ';', 'if', '(', 'ret', '==', 'ECGEOF', ')', 'ret', '=', '0', ';', 'out_error', ':', 'if', '(', 'cgroup', ')', 'cgroup_free', '(', '&', 'cgroup', ')', ';', 'return', 'ret', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
264,"['update_arrival_stats', '(', 'RTPSession', '*', 'sess', ',', 'RTPArrivalStats', '*', 'arrival', ',', 'gboolean', 'rtp', ',', 'GstBuffer', '*', 'buffer', ',', 'GstClockTime', 'current_time', ',', 'GstClockTime', 'running_time', ',', 'guint64', 'ntpnstime', ')', '{', 'arrival', '->', 'current_time', '=', 'current_time', ';', 'arrival', '->', 'running_time', '=', 'running_time', ';', 'arrival', '->', 'ntpnstime', '=', 'ntpnstime', ';', 'arrival', '->', 'bytes', '=', 'GST_BUFFER_SIZE', '(', 'buffer', ')', '+', 'sess', '->', 'header_len', ';', 'if', '(', 'rtp', ')', '{', 'arrival', '->', 'payload_len', '=', 'gst_rtp_buffer_get_payload_len', '(', 'buffer', ')', ';', '}', 'else', '{', 'arrival', '->', 'payload_len', '=', '0', ';', '}', 'arrival', '->', 'have_address', '=', 'GST_IS_NETBUFFER', '(', 'buffer', ')', ';', 'if', '(', 'arrival', '->', 'have_address', ')', '{', 'GstNetBuffer', '*', 'netbuf', '=', '(', 'GstNetBuffer', '*', ')', 'buffer', ';', 'memcpy', '(', '&', 'arrival', '->', 'address', ',', '&', 'netbuf', '->', 'from', ',', 'sizeof', '(', 'GstNetAddress', ')', ')', ';', '}', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
265,"['getTracedRays', '(', 'CSetOfLinesPtr', '&', 'res', ')', 'const\t', '{', 'if', '(', '!meshUpToDate', ')', 'updateMesh', '(', ')', ';', 'size_t', 'count', '=', '0', ';', 'for', '(', 'size_t', 'i', '=', '0', ';', 'i', '<', 'validityMatrix', '.', 'getRowCount', '(', ')', ';', 'i', '++', ')', 'for', '(', 'size_t', 'j', '=', '0', ';', 'j', '<', 'validityMatrix', '.', 'getColCount', '(', ')', ';', 'j', '++', ')', 'if', '(', 'validityMatrix', '(', 'i', ',', 'j', ')', ')', 'count', '++', ';', 'res', '->', 'reserve', '(', 'count', ')', ';', 'for', '(', 'size_t', 'i', '=', '0', ';', 'i', '<', 'actualMesh', '.', 'getRowCount', '(', ')', ';', 'i', '++', ')', 'for', '(', 'size_t', 'j', '=', '0', ';', 'j', '<', 'actualMesh', '.', 'getColCount', '(', ')', ';', 'j', '++', ')', 'if', '(', 'validityMatrix', '(', 'i', ',', 'j', ')', ')', 'res', '->', 'appendLine', '(', 'TPose3D', '(', 'scanSet', '[', 'i', ']', '.', 'sensorPose', ')', ',', 'actualMesh', '(', 'i', ',', 'j', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
266,"['enet_protocol_handle_send_unsequenced', '(', 'ENetHost', '*', 'host', ',', 'ENetPeer', '*', 'peer', ',', 'const', 'ENetProtocol', '*', 'command', ',', 'enet_uint8', '*', '*', 'currentData', ')', '{', 'ENetPacket', '*', 'packet', ';', 'enet_uint32', 'unsequencedGroup', ',', 'index', ';', 'size_t', 'dataLength', ';', 'if', '(', 'command', '->', 'header', '.', 'channelID', '>=', 'peer', '->', 'channelCount', '||', '(', 'peer', '->', 'state', '!=', 'ENET_PEER_STATE_CONNECTED', '&&', 'peer', '->', 'state', '!=', 'ENET_PEER_STATE_DISCONNECT_LATER', ')', ')', 'return', '-', '1', ';', 'dataLength', '=', 'ENET_NET_TO_HOST_16', '(', 'command', '->', 'sendUnsequenced', '.', 'dataLength', ')', ';', '*', 'currentData', '+=', 'dataLength', ';', 'if', '(', '*', 'currentData', '>', '&', 'host', '->', 'receivedData', '[', 'host', '->', 'receivedDataLength', ']', ')', 'return', '-', '1', ';', 'unsequencedGroup', '=', 'ENET_NET_TO_HOST_16', '(', 'command', '->', 'sendUnsequenced', '.', 'unsequencedGroup', ')', ';', 'index', '=', 'unsequencedGroup', '%', 'ENET_PEER_UNSEQUENCED_WINDOW_SIZE', ';', 'if', '(', 'unsequencedGroup', '<', 'peer', '->', 'incomingUnsequencedGroup', ')', 'unsequencedGroup', '+=', '0x10000', ';', 'if', '(', 'unsequencedGroup', '>=', '(', 'enet_uint32', ')', 'peer', '->', 'incomingUnsequencedGroup', '+', 'ENET_PEER_FREE_UNSEQUENCED_WINDOWS', '*', 'ENET_PEER_UNSEQUENCED_WINDOW_SIZE', ')', 'return', '0', ';', 'unsequencedGroup', '&=', '0xFFFF', ';', 'if', '(', 'unsequencedGroup', '-', 'index', '!=', 'peer', '->', 'incomingUnsequencedGroup', ')', '{', 'peer', '->', 'incomingUnsequencedGroup', '=', 'unsequencedGroup', '-', 'index', ';', 'memset', '(', 'peer', '->', 'unsequencedWindow', ',', '0', ',', 'sizeof', '(', 'peer', '->', 'unsequencedWindow', ')', ')', ';', '}', 'if', '(', 'peer', '->', 'unsequencedWindow', '[', 'index', '/', '32', ']', '&', '(', '1', '<<', '(', 'index', '%', '32', ')', ')', ')', 'return', '0', ';', 'packet', '=', 'enet_packet_create', '(', '(', 'const', 'enet_uint8', '*', ')', 'command', '+', 'sizeof', '(', 'ENetProtocolSendUnsequenced', ')', ',', 'dataLength', ',', 'ENET_PACKET_FLAG_UNSEQUENCED', ')', ';', 'if', '(', 'packet', '==', 'NULL', '||', 'enet_peer_queue_incoming_command', '(', 'peer', ',', 'command', ',', 'packet', ',', '0', ')', '==', 'NULL', ')', 'return', '-', '1', ';', 'peer', '->', 'unsequencedWindow', '[', 'index', '/', '32', ']', '|=', '1', '<<', '(', 'index', '%', '32', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
267,"['verify_absent_1', '(', 'struct', 'cache_entry', '*', 'ce', ',', 'enum', 'unpack_trees_error_types', 'error_type', ',', 'struct', 'unpack_trees_options', '*', 'o', ')', '{', 'int', 'len', ';', 'struct', 'stat', 'st', ';', 'if', '(', 'o', '->', 'index_only', '||', 'o', '->', 'reset', '||', '!o', '->', 'update', ')', 'return', '0', ';', 'len', '=', 'check_leading_path', '(', 'ce', '->', 'name', ',', 'ce_namelen', '(', 'ce', ')', ')', ';', 'if', '(', '!len', ')', 'return', '0', ';', 'else', 'if', '(', 'len', '>', '0', ')', '{', 'char', 'path', '[', 'PATH_MAX', '+', '1', ']', ';', 'memcpy', '(', 'path', ',', 'ce', '->', 'name', ',', 'len', ')', ';', 'path', '[', 'len', ']', '=', '0', ';', 'if', '(', 'lstat', '(', 'path', ',', '&', 'st', ')', ')', 'return', 'error', '(', '""""', ',', 'path', ',', 'strerror', '(', 'errno', ')', ')', ';', 'return', 'check_ok_to_remove', '(', 'path', ',', 'len', ',', 'DT_UNKNOWN', ',', 'NULL', ',', '&', 'st', ',', 'error_type', ',', 'o', ')', ';', '}', 'else', 'if', '(', 'lstat', '(', 'ce', '->', 'name', ',', '&', 'st', ')', ')', '{', 'if', '(', 'errno', '!=', 'ENOENT', ')', 'return', 'error', '(', '""""', ',', 'ce', '->', 'name', ',', 'strerror', '(', 'errno', ')', ')', ';', 'return', '0', ';', '}', 'else', '{', 'return', 'check_ok_to_remove', '(', 'ce', '->', 'name', ',', 'ce_namelen', '(', 'ce', ')', ',', 'ce_to_dtype', '(', 'ce', ')', ',', 'ce', ',', '&', 'st', ',', 'error_type', ',', 'o', ')', ';', '}', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
268,"['json_print_pwr_wghfreq_stats', '(', 'struct', 'activity', '*', 'a', ',', 'int', 'curr', ',', 'int', 'tab', ',', 'unsigned', 'long', 'long', 'itv', ')', '{', 'int', 'i', ',', 'k', ';', 'struct', 'stats_pwr_wghfreq', '*', 'spc', ',', '*', 'spp', ',', '*', 'spc_k', ',', '*', 'spp_k', ';', 'unsigned', 'long', 'long', 'tis', ',', 'tisfreq', ';', 'int', 'sep', '=', 'FALSE', ';', 'char', 'cpuno', '[', '8', ']', ';', 'if', '(', '!IS_SELECTED', '(', 'a', '->', 'options', ')', '||', '(', 'a', '->', 'nr', '<=', '0', ')', ')', 'goto', 'close_json_markup', ';', 'json_markup_power_management', '(', 'tab', ',', 'OPEN_JSON_MARKUP', ')', ';', 'tab', '++', ';', 'xprintf', '(', 'tab', '++', ',', '""""cpu', '-', 'weighted', '-', 'frequency\\""""', ')', ';', 'for', '(', 'i', '=', '0', ';', '(', 'i', '<', 'a', '->', 'nr', ')', '&&', '(', 'i', '<', 'a', '->', 'bitmap', '->', 'b_size', '+', '1', ')', ';', 'i', '++', ')', '{', 'spc', '=', '(', 'struct', 'stats_pwr_wghfreq', '*', ')', '(', '(', 'char', '*', ')', 'a', '->', 'buf', '[', 'curr', ']', '+', 'i', '*', 'a', '->', 'msize', '*', 'a', '->', 'nr2', ')', ';', 'spp', '=', '(', 'struct', 'stats_pwr_wghfreq', '*', ')', '(', '(', 'char', '*', ')', 'a', '->', 'buf', '[', '!curr', ']', '+', 'i', '*', 'a', '->', 'msize', '*', 'a', '->', 'nr2', ')', ';', 'if', '(', 'a', '->', 'bitmap', '->', 'b_array', '[', 'i', '>>', '3', ']', '&', '(', '1', '<<', '(', 'i', '&', '0x07', ')', ')', ')', '{', 'tisfreq', '=', '0', ';', 'tis', '=', '0', ';', 'for', '(', 'k', '=', '0', ';', 'k', '<', 'a', '->', 'nr2', ';', 'k', '++', ')', '{', 'spc_k', '=', '(', 'struct', 'stats_pwr_wghfreq', '*', ')', '(', '(', 'char', '*', ')', 'spc', '+', 'k', '*', 'a', '->', 'msize', ')', ';', 'if', '(', '!spc_k', '->', 'freq', ')', 'break', ';', 'spp_k', '=', '(', 'struct', 'stats_pwr_wghfreq', '*', ')', '(', '(', 'char', '*', ')', 'spp', '+', 'k', '*', 'a', '->', 'msize', ')', ';', 'tisfreq', '+=', '(', 'spc_k', '->', 'freq', '/', '1000', ')', '*', '(', 'spc_k', '->', 'time_in_state', '-', 'spp_k', '->', 'time_in_state', ')', ';', 'tis', '+=', '(', 'spc_k', '->', 'time_in_state', '-', 'spp_k', '->', 'time_in_state', ')', ';', '}', 'if', '(', '!i', ')', '{', 'strcpy', '(', 'cpuno', ',', '""""', ')', ';', '}', 'else', '{', 'sprintf', '(', 'cpuno', ',', '""""', ',', 'i', '-', '1', ')', ';', '}', 'if', '(', 'sep', ')', '{', 'printf', '(', '""""', ')', ';', '}', 'sep', '=', 'TRUE', ';', 'xprintf0', '(', 'tab', ',', '""""number\\""""', '%', '""""weighted', '-', 'frequency\\""""', ',', 'cpuno', ',', 'tis', '?', '(', '(', 'double', ')', 'tisfreq', ')', '/', 'tis', ':', '0', '.', '0', ')', ';', '}', '}', 'printf', '(', '""""', ')', ';', 'xprintf0', '(', '--', 'tab', ',', '""""', ')', ';', 'tab', '--', ';', 'close_json_markup', ':', 'if', '(', 'CLOSE_MARKUP', '(', 'a', '->', 'options', ')', ')', '{', 'json_markup_power_management', '(', 'tab', ',', 'CLOSE_JSON_MARKUP', ')', ';', '}', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
269,"['test_partial_ipv4_tcp_msg', '(', 'void', ')', '{', 'int', 'sk', ',', 'received', '=', '0', ';', 'sk', '=', 'connect_tcp_socket', '(', '""""', ')', ';', 'g_assert_cmpint', '(', 'sk', ',', '>=', ',', '0', ')', ';', 'change_msg', '(', 'msg', ',', '2', ',', '20', ',', ""''"", ')', ';', 'send_msg', '(', 'sk', ',', 'msg', ',', 'sizeof', '(', 'msg', ')', ',', '1', ')', ';', 'received', '=', 'receive_message', '(', 'sk', ',', '10', ',', 'sizeof', '(', 'msg', ')', ',', 'NULL', ')', ';', 'close', '(', 'sk', ')', ';', 'g_assert_cmpint', '(', 'received', ',', '>=', ',', 'sizeof', '(', 'msg', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
270,"['gameFinished', '(', ')', '{', 'QSettings', 'settings', ';', 'int', 'count', '=', 'settings', '.', 'value', '(', '""""', ')', '.', 'toInt', '(', ')', ';', 'int', 'length', '=', 'settings', '.', 'value', '(', '""""', ')', '.', 'toInt', '(', ')', ';', 'int', 'msecs', '=', 'settings', '.', 'value', '(', '""""', ')', '.', 'toInt', '(', ')', ';', 'm_clock', '->', 'stop', '(', ')', ';', 'm_clock', '->', 'setDisabled', '(', 'true', ')', ';', 'm_pause_action', '->', 'setDisabled', '(', 'true', ')', ';', 'm_success', '->', 'show', '(', ')', ';', 'm_scores', '->', 'addScore', '(', 'qRound', '(', 'msecs', '/', '1000', '.', '0', ')', ',', 'count', ',', 'length', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
271,"['bnxt_free_stats', '(', 'struct', 'bnxt', '*', 'bp', ')', '{', 'u32', 'size', ',', 'i', ';', 'struct', 'pci_dev', '*', 'pdev', '=', 'bp', '->', 'pdev', ';', 'if', '(', '!bp', '->', 'bnapi', ')', 'return', ';', 'size', '=', 'sizeof', '(', 'struct', 'ctx_hw_stats', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'bp', '->', 'cp_nr_rings', ';', 'i', '++', ')', '{', 'struct', 'bnxt_napi', '*', 'bnapi', '=', 'bp', '->', 'bnapi', '[', 'i', ']', ';', 'struct', 'bnxt_cp_ring_info', '*', 'cpr', '=', '&', 'bnapi', '->', 'cp_ring', ';', 'if', '(', 'cpr', '->', 'hw_stats', ')', '{', 'dma_free_coherent', '(', '&', 'pdev', '->', 'dev', ',', 'size', ',', 'cpr', '->', 'hw_stats', ',', 'cpr', '->', 'hw_stats_map', ')', ';', 'cpr', '->', 'hw_stats', '=', 'NULL', ';', '}', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
272,"['allocateCandidatesAndFindBasisForAdd', '(', 'Value', '*', 'LHS', ',', 'Value', '*', 'RHS', ',', 'Instruction', '*', 'I', ')', '{', 'Value', '*', 'S', '=', 'nullptr', ';', 'ConstantInt', '*', 'Idx', '=', 'nullptr', ';', 'if', '(', 'match', '(', 'RHS', ',', 'm_Mul', '(', 'm_Value', '(', 'S', ')', ',', 'm_ConstantInt', '(', 'Idx', ')', ')', ')', ')', '{', '/', '/', 'I', '=', 'LHS', '+', 'RHS', '=', 'LHS', '+', 'Idx', '*', 'allocateCandidatesAndFindBasis', '(', 'Candidate', ':', ':', 'Add', ',', 'SE', '->', 'getSCEV', '(', 'LHS', ')', ',', 'Idx', ',', 'S', ',', 'I', ')', ';', '}', 'else', 'if', '(', 'match', '(', 'RHS', ',', 'm_Shl', '(', 'm_Value', '(', 'S', ')', ',', 'm_ConstantInt', '(', 'Idx', ')', ')', ')', ')', '{', '/', '/', 'I', '=', 'LHS', '+', 'RHS', '=', 'LHS', '+', '(', 'S', '<<', 'Idx', ')', '=', 'LHS', '+', 'S', '*', '(', '1', '<<', 'Idx', ')', 'APInt', 'One', '(', 'Idx', '->', 'getBitWidth', '(', ')', ',', '1', ')', ';', 'Idx', '=', 'ConstantInt', ':', ':', 'get', '(', 'Idx', '->', 'getContext', '(', ')', ',', 'One', '<<', 'Idx', '->', 'getValue', '(', ')', ')', ';', 'allocateCandidatesAndFindBasis', '(', 'Candidate', ':', ':', 'Add', ',', 'SE', '->', 'getSCEV', '(', 'LHS', ')', ',', 'Idx', ',', 'S', ',', 'I', ')', ';', '}', 'else', '{', '/', '/', 'At', 'least', ',', 'I', '=', 'LHS', '+', '1', '*', 'ConstantInt', '*', 'One', '=', 'ConstantInt', ':', ':', 'get', '(', 'cast', '<', 'IntegerType', '>', '(', 'I', '->', 'getType', '(', ')', ')', ',', '1', ')', ';', 'allocateCandidatesAndFindBasis', '(', 'Candidate', ':', ':', 'Add', ',', 'SE', '->', 'getSCEV', '(', 'LHS', ')', ',', 'One', ',', 'RHS', ',', 'I', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
273,"['cd_device_set_enabled', '(', 'CdDevice', '*', 'device', ',', 'gboolean', 'enabled', ',', 'GError', '*', '*', 'error', ')', '{', 'CdDevicePrivate', '*', 'priv', '=', 'device', '->', 'priv', ';', 'gboolean', 'ret', ';', 'GError', '*', 'error_local', '=', 'NULL', ';', 'if', '(', 'priv', '->', 'enabled', '==', 'enabled', ')', '{', 'ret', '=', 'TRUE', ';', 'goto', 'out', ';', '}', 'ret', '=', 'cd_device_db_set_property', '(', 'device', '->', 'priv', '->', 'device_db', ',', 'device', '->', 'priv', '->', 'id', ',', '""""', ',', 'enabled', '?', '""""', ':', '""""', ',', '&', 'error_local', ')', ';', 'if', '(', '!ret', ')', '{', 'g_set_error', '(', 'error', ',', 'CD_DEVICE_ERROR', ',', 'CD_DEVICE_ERROR_INTERNAL', ',', '""""', ',', 'error_local', '->', 'message', ')', ';', 'g_error_free', '(', 'error_local', ')', ';', 'goto', 'out', ';', '}', 'priv', '->', 'enabled', '=', 'enabled', ';', 'cd_device_reset_modified', '(', 'device', ')', ';', 'cd_device_dbus_emit_property_changed', '(', 'device', ',', '""""', ',', 'g_variant_new_boolean', '(', 'enabled', ')', ')', ';', 'cd_device_dbus_emit_device_changed', '(', 'device', ')', ';', 'out', ':', 'return', 'ret', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
274,"['new_g15_screen', '(', 'int', 'screentype', ')', '{', 'struct', 'sigaction', 'new_sigaction', ';', 'int', 'g15screen_fd', ';', 'struct', 'sockaddr_in', 'serv_addr', ';', 'static', 'int', 'sighandler_init', '=', '0', ';', 'int', 'tos', '=', '0x6', ';', 'char', 'buffer', '[', '256', ']', ';', 'if', '(', 'sighandler_init', '==', '0', ')', '{', '#ifdef', 'new_sigaction', '.', 'sa_handler', '=', 'g15_sighandler', ';', 'new_sigaction', '.', 'sa_flags', '=', '0', ';', 'sigaction', '(', 'SIGSEGV', ',', '&', 'new_sigaction', ',', 'NULL', ')', ';', 'sighandler_init', '=', '1', ';', '}', 'g15screen_fd', '=', 'socket', '(', 'AF_INET', ',', 'SOCK_STREAM', ',', '0', ')', ';', 'if', '(', 'g15screen_fd', '<', '0', ')', 'return', '-', '1', ';', 'memset', '(', '&', 'serv_addr', ',', '0', ',', 'sizeof', '(', 'serv_addr', ')', ')', ';', 'serv_addr', '.', 'sin_family', '=', 'AF_INET', ';', 'inet_aton', '(', 'G15SERVER_ADDR', ',', '&', 'serv_addr', '.', 'sin_addr', ')', ';', 'serv_addr', '.', 'sin_port', '=', 'htons', '(', 'G15SERVER_PORT', ')', ';', 'if', '(', 'connect', '(', 'g15screen_fd', ',', '(', 'struct', 'sockaddr', '*', ')', '&', 'serv_addr', ',', 'sizeof', '(', 'serv_addr', ')', ')', '<', '0', ')', 'return', '-', '1', ';', 'setsockopt', '(', 'g15screen_fd', ',', 'SOL_SOCKET', ',', 'SO_PRIORITY', ',', '&', 'tos', ',', 'sizeof', '(', 'tos', ')', ')', ';', 'if', '(', 'fcntl', '(', 'g15screen_fd', ',', 'F_SETFL', ',', 'O_NONBLOCK', ')', '<', '0', ')', '{', '}', 'memset', '(', 'buffer', ',', '0', ',', '256', ')', ';', 'if', '(', 'g15_recv', '(', 'g15screen_fd', ',', 'buffer', ',', '16', ')', '<', '0', ')', 'return', '-', '1', ';', 'if', '(', 'strcmp', '(', 'buffer', ',', '""""', ')', '!=', '0', ')', 'return', '-', '1', ';', 'g15_send', '(', 'g15screen_fd', ',', '""""', ',', '4', ')', ';', 'g15_send', '(', 'g15screen_fd', ',', '""""', ',', '4', ')', ';', 'else', 'if', '(', 'screentype', '==', 'G15_G15RBUF', ')', 'g15_send', '(', 'g15screen_fd', ',', '""""', ',', '4', ')', ';', 'g15_send', '(', 'g15screen_fd', ',', '""""', ',', '4', ')', ';', 'return', 'g15screen_fd', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
275,"['ajp_msg_append_string_ex', '(', 'ajp_msg_t', '*', 'msg', ',', 'const', 'char', '*', 'value', ',', 'int', 'convert', ')', '{', 'apr_size_t', 'len', ';', 'if', '(', 'value', '==', 'NULL', ')', '{', 'return', '(', 'ajp_msg_append_uint16', '(', 'msg', ',', '0xFFFF', ')', ')', ';', '}', 'len', '=', 'strlen', '(', 'value', ')', ';', 'if', '(', '(', 'msg', '->', 'len', '+', 'len', '+', '3', ')', '>', 'msg', '->', 'max_size', ')', '{', 'return', 'ajp_log_overflow', '(', 'msg', ',', '""""', ')', ';', '}', 'ajp_msg_append_uint16', '(', 'msg', ',', '(', 'apr_uint16_t', ')', 'len', ')', ';', 'if', '(', 'convert', ')', '{', 'ap_xlate_proto_to_ascii', '(', '(', 'char', '*', ')', 'msg', '->', 'buf', '+', 'msg', '->', 'len', ',', 'len', '+', '1', ')', ';', '}', 'msg', '->', 'len', '+=', 'len', '+', '1', ';', 'return', 'APR_SUCCESS', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
276,"['msg_puts_long_len_attr', '(', 'longstr', ',', 'len', ',', 'attr', ')', 'char_u\t', '*', 'longstr', ';', 'int\t\tlen', ';', 'int\t\tattr', ';', '{', 'int\t\tslen', '=', 'len', ';', 'int\t\troom', ';', 'room', '=', 'Columns', '-', 'msg_col', ';', 'if', '(', 'len', '>', 'room', '&&', 'room', '>=', '20', ')', '{', 'slen', '=', '(', 'room', '-', '3', ')', '/', '2', ';', 'msg_outtrans_len_attr', '(', 'longstr', ',', 'slen', ',', 'attr', ')', ';', 'msg_puts_attr', '(', '(', 'char_u', '*', ')', '""""', ',', 'hl_attr', '(', 'HLF_8', ')', ')', ';', '}', 'msg_outtrans_len_attr', '(', 'longstr', '+', 'len', '-', 'slen', ',', 'slen', ',', 'attr', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
277,"['is_equal', '(', 'const', 'ExecutionPath', '*', 'e', ')', '{', 'const', 'UninitVar', '*', 'c', '=', 'static_cast', '<', 'const', 'UninitVar', '*', '>', '(', 'e', ')', ';', 'return', '(', 'varname', '==', 'c', '->', 'varname', '&&', 'pointer', '==', 'c', '->', 'pointer', '&&', 'array', '==', 'c', '->', 'array', '&&', 'alloc', '==', 'c', '->', 'alloc', '&&', 'strncpy_', '==', 'c', '->', 'strncpy_', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
278,"['mul_under_dim_size', '(', 'Array_table', '*', 'atbl', ',', 'const', 'int', 'udim', ')', '{', 'int', 'i', ';', 'SemTree', '*', 'ret', '=', 'make_semtree_const_int', '(', '1', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'udim', ';', 'i', '++', ')', '{', 'SemTree', '*', 'dim_size', ';', 'dim_size', '=', 'get_array_table_dim_size', '(', 'atbl', ',', 'i', ')', ';', 'ret', '=', 'concat_semtree', '(', 'OPE_MUL', ',', 'ret', ',', 'dim_size', ')', ';', '}', 'semtree_process', '(', 'ret', ')', ';', 'return', 'ret', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
279,"['string_sequence_new', '(', 'gchar', '*', '*', 'strings', ')', '{', 'GSequence', '*', 'sequence', ';', 'sequence', '=', 'g_sequence_new', '(', 'g_free', ')', ';', 'for', '(', ';', '*', 'strings', ';', 'strings', '++', ')', '{', 'g_sequence_append', '(', 'sequence', ',', 'g_strdup', '(', '*', 'strings', ')', ')', ';', '}', 'return', 'sequence', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
280,"['ufs2_update_inode', '(', 'struct', 'inode', '*', 'inode', ',', 'struct', 'ufs2_inode', '*', 'ufs_inode', ')', '{', 'struct', 'super_block', '*', 'sb', '=', 'inode', '->', 'i_sb', ';', 'struct', 'ufs_inode_info', '*', 'ufsi', '=', 'UFS_I', '(', 'inode', ')', ';', 'UFSD', '(', '""""', ')', ';', 'ufs_inode', '->', 'ui_mode', '=', 'cpu_to_fs16', '(', 'sb', ',', 'inode', '->', 'i_mode', ')', ';', 'ufs_inode', '->', 'ui_nlink', '=', 'cpu_to_fs16', '(', 'sb', ',', 'inode', '->', 'i_nlink', ')', ';', 'ufs_inode', '->', 'ui_uid', '=', 'cpu_to_fs32', '(', 'sb', ',', 'i_uid_read', '(', 'inode', ')', ')', ';', 'ufs_inode', '->', 'ui_gid', '=', 'cpu_to_fs32', '(', 'sb', ',', 'i_gid_read', '(', 'inode', ')', ')', ';', 'ufs_inode', '->', 'ui_size', '=', 'cpu_to_fs64', '(', 'sb', ',', 'inode', '->', 'i_size', ')', ';', 'ufs_inode', '->', 'ui_atime', '=', 'cpu_to_fs64', '(', 'sb', ',', 'inode', '->', 'i_atime', '.', 'tv_sec', ')', ';', 'ufs_inode', '->', 'ui_atimensec', '=', 'cpu_to_fs32', '(', 'sb', ',', 'inode', '->', 'i_atime', '.', 'tv_nsec', ')', ';', 'ufs_inode', '->', 'ui_ctime', '=', 'cpu_to_fs64', '(', 'sb', ',', 'inode', '->', 'i_ctime', '.', 'tv_sec', ')', ';', 'ufs_inode', '->', 'ui_ctimensec', '=', 'cpu_to_fs32', '(', 'sb', ',', 'inode', '->', 'i_ctime', '.', 'tv_nsec', ')', ';', 'ufs_inode', '->', 'ui_mtime', '=', 'cpu_to_fs64', '(', 'sb', ',', 'inode', '->', 'i_mtime', '.', 'tv_sec', ')', ';', 'ufs_inode', '->', 'ui_mtimensec', '=', 'cpu_to_fs32', '(', 'sb', ',', 'inode', '->', 'i_mtime', '.', 'tv_nsec', ')', ';', 'ufs_inode', '->', 'ui_blocks', '=', 'cpu_to_fs64', '(', 'sb', ',', 'inode', '->', 'i_blocks', ')', ';', 'ufs_inode', '->', 'ui_flags', '=', 'cpu_to_fs32', '(', 'sb', ',', 'ufsi', '->', 'i_flags', ')', ';', 'ufs_inode', '->', 'ui_gen', '=', 'cpu_to_fs32', '(', 'sb', ',', 'inode', '->', 'i_generation', ')', ';', 'if', '(', 'S_ISCHR', '(', 'inode', '->', 'i_mode', ')', '||', 'S_ISBLK', '(', 'inode', '->', 'i_mode', ')', ')', '{', 'ufs_inode', '->', 'ui_u2', '.', 'ui_addr', '.', 'ui_db', '[', '0', ']', '=', 'ufsi', '->', 'i_u1', '.', 'u2_i_data', '[', '0', ']', ';', '}', 'else', 'if', '(', 'inode', '->', 'i_blocks', ')', '{', 'memcpy', '(', '&', 'ufs_inode', '->', 'ui_u2', '.', 'ui_addr', ',', 'ufsi', '->', 'i_u1', '.', 'u2_i_data', ',', 'sizeof', '(', 'ufs_inode', '->', 'ui_u2', '.', 'ui_addr', ')', ')', ';', '}', 'else', '{', 'memcpy', '(', '&', 'ufs_inode', '->', 'ui_u2', '.', 'ui_symlink', ',', 'ufsi', '->', 'i_u1', '.', 'i_symlink', ',', 'sizeof', '(', 'ufs_inode', '->', 'ui_u2', '.', 'ui_symlink', ')', ')', ';', '}', 'if', '(', '!inode', '->', 'i_nlink', ')', 'memset', '(', 'ufs_inode', ',', '0', ',', 'sizeof', '(', 'struct', 'ufs2_inode', ')', ')', ';', 'UFSD', '(', '""""', ')', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
281,"['OnHash', '(', 'const', 'unsigned', 'char', '*', 'srcmac', ',', 'const', 'unsigned', 'char', '*', 'dstmac', ',', 'struct', 'evbuffer', '*', 'evb', ')', '{', 'if', '(', 'evbuffer_get_length', '(', 'evb', ')', '<', '4', '+', 'Sha1Hash', ':', ':', 'SIZE', ')', '{', 'eprintf', '(', '""""', ',', 'tintstr', '(', ')', ',', 'my_channel', ')', ';', 'return', ';', '}', 'bin_t', 'range', '=', 'bin_fromUInt32', '(', 'evbuffer_remove_32be', '(', 'evb', ')', ')', ';', 'rec_ranges', '.', 'set', '(', 'range', ')', ';', 'Sha1Hash', 'hash', '=', 'evbuffer_remove_hash', '(', 'evb', ')', ';', 'transfer', '->', 'file', '(', ')', '.', 'OfferHash', '(', 'range', ',', 'hash', ')', ';', 'char', 'bin_name_buf', '[', '32', ']', ';', 'dprintf', '(', '""""', ',', 'tintstr', '(', ')', ',', 'my_channel', ',', 'range', '.', 'str', '(', 'bin_name_buf', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
282,"['ListExpr2', '(', 'Obj', 'list', ',', 'Expr', 'expr', ')', '{', 'Int', 'posshole', ';', '/', '*', 'initially', '0', ',', 'set', 'to', '1', 'first', 'empty', 'position', ',', 'next', 'full', 'position', 'the', 'list', 'to', 'be', 'len', '=', 'SIZE_EXPR', '(', 'expr', ')', '/', 'sizeof', '(', 'Expr', ')', ';', 'posshole', '=', '0', ';', 'for', '(', 'i', '=', '1', ';', 'i', '<=', 'len', ';', 'i', '++', ')', '{', 'if', '(', 'ADDR_EXPR', '(', 'expr', ')', '[', 'i', '-', '1', ']', '==', '0', ')', '{', 'if', '(', '!posshole', ')', 'posshole', '=', '1', ';', 'continue', ';', '}', '{', 'if', '(', 'posshole', '==', '1', ')', '{', 'SET_FILT_LIST', '(', 'list', ',', 'FN_IS_NDENSE', ')', ';', 'posshole', '=', '2', ';', '}', 'if', '(', 'TNUM_EXPR', '(', 'ADDR_EXPR', '(', 'expr', ')', '[', 'i', '-', '1', ']', ')', '==', 'T_LIST_EXPR', ')', '{', 'sub', '=', 'ListExpr1', '(', 'ADDR_EXPR', '(', 'expr', ')', '[', 'i', '-', '1', ']', ')', ';', 'SET_ELM_PLIST', '(', 'list', ',', 'i', ',', 'sub', ')', ';', 'CHANGED_BAG', '(', 'list', ')', ';', 'ListExpr2', '(', 'sub', ',', 'ADDR_EXPR', '(', 'expr', ')', '[', 'i', '-', '1', ']', ')', ';', '}', 'else', 'if', '(', 'TNUM_EXPR', '(', 'ADDR_EXPR', '(', 'expr', ')', '[', 'i', '-', '1', ']', ')', '==', 'T_REC_EXPR', ')', '{', 'sub', '=', 'RecExpr1', '(', 'ADDR_EXPR', '(', 'expr', ')', '[', 'i', '-', '1', ']', ')', ';', 'SET_ELM_PLIST', '(', 'list', ',', 'i', ',', 'sub', ')', ';', 'CHANGED_BAG', '(', 'list', ')', ';', 'RecExpr2', '(', 'sub', ',', 'ADDR_EXPR', '(', 'expr', ')', '[', 'i', '-', '1', ']', ')', ';', '}', 'else', '{', 'sub', '=', 'EVAL_EXPR', '(', 'ADDR_EXPR', '(', 'expr', ')', '[', 'i', '-', '1', ']', ')', ';', 'SET_ELM_PLIST', '(', 'list', ',', 'i', ',', 'sub', ')', ';', 'CHANGED_BAG', '(', 'list', ')', ';', '}', '}', '}', 'if', '(', '!posshole', ')', 'SET_FILT_LIST', '(', 'list', ',', 'FN_IS_DENSE', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
283,"['jt1_i', '(', 'void', ')', '{', 'UINT8', 'adr', '=', 'ROP_ARG', '(', 'PC', ')', ';', 'PC', '+=', '1', ';', 'if', '(', '!', '(', 'ENABLE', '&', 'CNT', ')', ')', '{', 'UINT8', 'level', '=', 'RP', '(', 'I8X41_t1', ')', ';', 'if', '(', 'level', ')', 'CONTROL', '|=', 'TEST1', ';', 'else', 'CONTROL', '&=', '~TEST1', ';', '}', 'if', '(', '(', 'CONTROL', '&', 'TEST1', ')', ')', 'PC', '=', '(', 'PC', '&', '0x700', ')', '|', 'adr', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
284,"['instance_reduce', '(', 'object', 'instance_obj', ')', '{', 'list', 'result', ';', 'object', 'instance_class', '(', 'instance_obj', '.', 'attr', '(', '""""', ')', ')', ';', 'result', '.', 'append', '(', 'instance_class', ')', ';', 'object', 'none', ';', 'if', '(', '!getattr', '(', 'instance_obj', ',', '""""', ',', 'none', ')', ')', '{', 'str', 'type_name', '(', 'getattr', '(', 'instance_class', ',', '""""', ')', ')', ';', 'str', 'module_name', '(', 'getattr', '(', 'instance_class', ',', '""""', ',', 'object', '(', '""""', ')', ')', ')', ';', 'if', '(', 'module_name', ')', 'module_name', '+=', '""""', ';', 'PyErr_SetObject', '(', 'PyExc_RuntimeError', ',', '(', '""""', '%', '%', '(', 'module_name', '+', 'type_name', ')', ')', '.', 'ptr', '(', ')', ')', ';', 'throw_error_already_set', '(', ')', ';', '}', 'object', 'getinitargs', '=', 'getattr', '(', 'instance_obj', ',', '""""', ',', 'none', ')', ';', 'tuple', 'initargs', ';', 'if', '(', '!getinitargs', '.', 'is_none', '(', ')', ')', '{', 'initargs', '=', 'tuple', '(', 'getinitargs', '(', ')', ')', ';', '}', 'result', '.', 'append', '(', 'initargs', ')', ';', 'object', 'getstate', '=', 'getattr', '(', 'instance_obj', ',', '""""', ',', 'none', ')', ';', 'object', 'instance_dict', '=', 'getattr', '(', 'instance_obj', ',', '""""', ',', 'none', ')', ';', 'long', 'len_instance_dict', '=', '0', ';', 'if', '(', '!instance_dict', '.', 'is_none', '(', ')', ')', '{', 'len_instance_dict', '=', 'len', '(', 'instance_dict', ')', ';', '}', 'if', '(', '!getstate', '.', 'is_none', '(', ')', ')', '{', 'if', '(', 'len_instance_dict', '>', '0', ')', '{', 'object', 'getstate_manages_dict', '=', 'getattr', '(', 'instance_obj', ',', '""""', ',', 'none', ')', ';', 'if', '(', 'getstate_manages_dict', '.', 'is_none', '(', ')', ')', '{', 'PyErr_SetString', '(', 'PyExc_RuntimeError', ',', '""""', ')', ';', 'throw_error_already_set', '(', ')', ';', '}', '}', 'result', '.', 'append', '(', 'getstate', '(', ')', ')', ';', '}', 'else', 'if', '(', 'len_instance_dict', '>', '0', ')', '{', 'result', '.', 'append', '(', 'instance_dict', ')', ';', '}', 'return', 'tuple', '(', 'result', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
285,"['get_device', '(', 'int', 'number', ',', 'char', '*', 'device', ',', 'int', 'device_len', ')', '{', 'FILE', '*', 'proc_file', ';', 'char', '*', 'current_device', ';', 'char', '*', 'lineptr', '=', 'NULL', ';', 'char', '*', 'saveptr', '=', 'NULL', ';', 'size_t', 'bufflen', ';', 'int', 'i', ',', 'count', ',', 'counter', ';', 'int', 'return_value', '=', '0', ';', 'proc_file', '=', 'fopen', '(', '""""', ',', '""""', ')', ';', 'if', '(', 'proc_file', '!=', 'NULL', ')', '{', 'do', '{', 'if', '(', 'getline', '(', '&', 'lineptr', ',', '&', 'bufflen', ',', 'proc_file', ')', '<', '0', ')', '{', 'return', '0', ';', '}', '}', 'while', '(', 'strstr', '(', 'lineptr', ',', '""""', ')', '==', 'NULL', ')', ';', 'count', '=', '-', '1', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'strlen', '(', 'lineptr', ')', ';', 'i', '++', ')', '{', 'if', '(', 'lineptr', '[', 'i', ']', '==', ""''"", ')', 'count', '++', ';', '}', 'current_device', '=', 'strtok_r', '(', 'lineptr', ',', '""""', ',', '&', 'saveptr', ')', ';', 'current_device', '=', 'strtok_r', '(', 'NULL', ',', '""""', ',', '&', 'saveptr', ')', ';', 'counter', '=', 'count', ';', 'while', '(', 'current_device', '!=', 'NULL', '&&', 'counter', '>=', 'number', ')', '{', 'if', '(', 'counter', '==', 'number', ')', '{', 'snprintf', '(', 'device', ',', 'device_len', ',', '""""', ',', 'current_device', ')', ';', 'return_value', '=', '1', ';', '}', 'current_device', '=', 'strtok_r', '(', 'NULL', ',', '""""', ',', '&', 'saveptr', ')', ';', 'counter', '--', ';', '}', 'if', '(', 'default_device', '[', 'strlen', '(', 'default_device', ')', '-', '1', ']', '==', ""''"", ')', '{', 'default_device', '[', 'strlen', '(', 'default_device', ')', '-', '1', ']', '=', ""''"", ';', '}', 'free', '(', 'lineptr', ')', ';', 'fclose', '(', 'proc_file', ')', ';', '}', 'return', 'return_value', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  True,CWE-476  False,CWE-other  False
286,"['uwb_rsv_handle_timeout_work', '(', 'struct', 'work_struct', '*', 'work', ')', '{', 'struct', 'uwb_rsv', '*', 'rsv', '=', 'container_of', '(', 'work', ',', 'struct', 'uwb_rsv', ',', 'handle_timeout_work', ')', ';', 'struct', 'uwb_rc', '*', 'rc', '=', 'rsv', '->', 'rc', ';', 'mutex_lock', '(', '&', 'rc', '->', 'rsvs_mutex', ')', ';', 'uwb_rsv_dump', '(', '""""', ',', 'rsv', ')', ';', 'switch', '(', 'rsv', '->', 'state', ')', '{', 'case', 'UWB_RSV_STATE_O_INITIATED', ':', 'if', '(', 'rsv', '->', 'is_multicast', ')', '{', 'uwb_rsv_set_state', '(', 'rsv', ',', 'UWB_RSV_STATE_O_ESTABLISHED', ')', ';', 'goto', 'unlock', ';', '}', 'break', ';', 'case', 'UWB_RSV_STATE_O_MOVE_EXPANDING', ':', 'if', '(', 'rsv', '->', 'is_multicast', ')', '{', 'uwb_rsv_set_state', '(', 'rsv', ',', 'UWB_RSV_STATE_O_MOVE_COMBINING', ')', ';', 'goto', 'unlock', ';', '}', 'break', ';', 'case', 'UWB_RSV_STATE_O_MOVE_COMBINING', ':', 'if', '(', 'rsv', '->', 'is_multicast', ')', '{', 'uwb_rsv_set_state', '(', 'rsv', ',', 'UWB_RSV_STATE_O_MOVE_REDUCING', ')', ';', 'goto', 'unlock', ';', '}', 'break', ';', 'case', 'UWB_RSV_STATE_O_MOVE_REDUCING', ':', 'if', '(', 'rsv', '->', 'is_multicast', ')', '{', 'uwb_rsv_set_state', '(', 'rsv', ',', 'UWB_RSV_STATE_O_ESTABLISHED', ')', ';', 'goto', 'unlock', ';', '}', 'break', ';', 'case', 'UWB_RSV_STATE_O_ESTABLISHED', ':', 'if', '(', 'rsv', '->', 'is_multicast', ')', 'goto', 'unlock', ';', 'break', ';', 'case', 'UWB_RSV_STATE_T_EXPANDING_ACCEPTED', ':', '/', '*', '*', 'The', 'time', 'out', 'could', 'be', 'for', 'the', 'main', 'or', 'of', '*', 'companion', 'DRP', ',', 'assume', ""it's"", 'for', 'the', 'companion', '*', 'drop', 'that', 'first', '.', 'A', 'further', 'time', 'out', 'is', 'required', '*', 'drop', 'the', 'main', '.', 'uwb_rsv_set_state', '(', 'rsv', ',', 'UWB_RSV_STATE_T_ACCEPTED', ')', ';', 'uwb_drp_avail_release', '(', 'rsv', '->', 'rc', ',', '&', 'rsv', '->', 'mv', '.', 'companion_mas', ')', ';', 'goto', 'unlock', ';', 'case', 'UWB_RSV_STATE_NONE', ':', 'goto', 'unlock', ';', 'default', ':', 'break', ';', '}', 'uwb_rsv_remove', '(', 'rsv', ')', ';', 'unlock', ':', 'mutex_unlock', '(', '&', 'rc', '->', 'rsvs_mutex', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
287,"['OpUnmap', '(', ')', '{', 'pmd_unmap_it', 'in', ';', 'pmd_unmap_ot', 'out', ';', 'if', '(', '!readn', '(', 'newsock', ',', '(', 'char', '*', ')', '&', 'in', ',', 'sizeof', '(', 'pmd_unmap_it', ')', ')', ')', 'out', '.', 'count', '=', 'unmapPid', '(', 'ntohl', '(', 'in', '.', 'pid', ')', ')', ';', 'out', '.', 'count', '=', 'unmapMapid', '(', 'in', '.', 'mapid', ',', 'ntohs', '(', 'in', '.', 'protocol', ')', ')', ';', 'if', '(', 'out', '.', 'count', '>', '0', ')', '{', 'out', '.', 'status', '=', 'htons', '(', 'SUCCESS', ')', ';', 'out', '.', 'error', '=', 'htons', '(', 'PMD_ER_NOERROR', ')', ';', '}', '{', 'out', '.', 'status', '=', 'htons', '(', 'FAILURE', ')', ';', 'out', '.', 'error', '=', 'htons', '(', 'PMD_ER_NOENTRY', ')', ';', '}', 'out', '.', 'count', '=', 'htons', '(', 'out', '.', 'count', ')', ';', 'writen', '(', 'newsock', ',', '(', 'char', '*', ')', '&', 'out', ',', 'sizeof', '(', 'pmd_unmap_ot', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
288,"['parse_menuitem', '(', 'char', '*', 'buff', ',', 'void', '*', 'state', ')', '{', 'static', 'menu_t', '*', 'menu', ';', 'menuitem_t', '*', 'curitem', ';', 'ASSERT_RVAL', '(', 'state', '!=', 'NULL', ',', '(', 'void', '*', ')', '(', 'file_skip_to_end', '(', ')', ',', 'NULL', ')', ')', ';', 'if', '(', '*', 'buff', '==', 'SPIFCONF_BEGIN_CHAR', ')', '{', 'menu', '=', '(', 'menu_t', '*', ')', 'state', ';', 'curitem', '=', 'menuitem_create', '(', 'NULL', ')', ';', 'return', '(', '(', 'void', '*', ')', 'curitem', ')', ';', '}', 'curitem', '=', '(', 'menuitem_t', '*', ')', 'state', ';', 'ASSERT_RVAL', '(', 'menu', '!=', 'NULL', ',', 'state', ')', ';', 'if', '(', '*', 'buff', '==', 'SPIFCONF_END_CHAR', ')', '{', 'if', '(', '!', '(', 'curitem', '->', 'text', ')', ')', '{', 'libast_print_error', '(', '""""', ',', 'file_peek_path', '(', ')', ',', 'file_peek_line', '(', ')', ')', ';', 'FREE', '(', 'curitem', ')', ';', '}', 'else', '{', 'menu_add_item', '(', 'menu', ',', 'curitem', ')', ';', '}', 'return', '(', '(', 'void', '*', ')', 'menu', ')', ';', '}', 'if', '(', '!BEG_STRCASECMP', '(', 'buff', ',', '""""', ')', ')', '{', 'char', '*', 'text', '=', 'spiftool_get_word', '(', '2', ',', 'buff', ')', ';', 'if', '(', '!text', ')', '{', 'libast_print_error', '(', '""""', ',', 'file_peek_path', '(', ')', ',', 'file_peek_line', '(', ')', ')', ';', 'return', '(', '(', 'void', '*', ')', 'curitem', ')', ';', '}', 'menuitem_set_text', '(', 'curitem', ',', 'text', ')', ';', 'FREE', '(', 'text', ')', ';', '}', 'else', 'if', '(', '!BEG_STRCASECMP', '(', 'buff', ',', '""""', ')', ')', '{', 'char', '*', 'rtext', '=', 'spiftool_get_word', '(', '2', ',', 'buff', ')', ';', 'if', '(', '!rtext', ')', '{', 'libast_print_error', '(', '""""', ',', 'file_peek_path', '(', ')', ',', 'file_peek_line', '(', ')', ')', ';', 'return', '(', '(', 'void', '*', ')', 'curitem', ')', ';', '}', 'menuitem_set_rtext', '(', 'curitem', ',', 'rtext', ')', ';', 'FREE', '(', 'rtext', ')', ';', '}', 'else', 'if', '(', '!BEG_STRCASECMP', '(', 'buff', ',', '""""', ')', ')', '{', '}', 'else', 'if', '(', '!BEG_STRCASECMP', '(', 'buff', ',', '""""', ')', ')', '{', 'char', '*', 'type', '=', 'spiftool_get_pword', '(', '2', ',', 'buff', ')', ';', 'char', '*', 'action', '=', 'spiftool_get_word', '(', '3', ',', 'buff', ')', ';', 'if', '(', '!BEG_STRCASECMP', '(', 'type', ',', '""""', ')', ')', '{', 'menuitem_set_action', '(', 'curitem', ',', 'MENUITEM_SUBMENU', ',', 'action', ')', ';', '}', 'else', 'if', '(', '!BEG_STRCASECMP', '(', 'type', ',', '""""', ')', ')', '{', 'menuitem_set_action', '(', 'curitem', ',', 'MENUITEM_STRING', ',', 'action', ')', ';', '}', 'else', 'if', '(', '!BEG_STRCASECMP', '(', 'type', ',', '""""', ')', ')', '{', 'menuitem_set_action', '(', 'curitem', ',', 'MENUITEM_SCRIPT', ',', 'action', ')', ';', '}', 'else', 'if', '(', '!BEG_STRCASECMP', '(', 'type', ',', '""""', ')', ')', '{', 'menuitem_set_action', '(', 'curitem', ',', 'MENUITEM_ECHO', ',', 'action', ')', ';', '}', 'else', 'if', '(', '!BEG_STRCASECMP', '(', 'type', ',', '""""', ')', ')', '{', 'menuitem_set_action', '(', 'curitem', ',', 'MENUITEM_SEP', ',', 'action', ')', ';', '}', 'else', '{', 'libast_print_error', '(', '""""', '%', 's\\""""', ',', 'file_peek_path', '(', ')', ',', 'file_peek_line', '(', ')', ',', 'NONULL', '(', 'type', ')', ')', ';', '}', 'FREE', '(', 'action', ')', ';', '}', 'else', '{', 'libast_print_error', '(', '""""', '%', 's\\""""', ',', 'file_peek_path', '(', ')', ',', 'file_peek_line', '(', ')', ',', 'buff', ')', ';', '}', 'return', '(', '(', 'void', '*', ')', 'curitem', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
289,"['sendResults', '(', 'IDB_HANDLE', '*', '*', 'handle', ',', 'FIS_HANDLE', '*', '*', 'fisHandle', ',', 'DMAN_HANDLE', '*', '*', 'dmanHandle', ',', 'const', 'char', '*', 'accessionNumber', ',', 'const', 'char', '*', 'studyInstanceUID', ',', 'char', '*', 'requestingAETitle', ',', 'char', '*', 'remoteAETitle', ')', '{', 'FIS_STUDYRECORD', 'study', ';', 'FIS_RESULTSRECORD', 'results', ';', 'CONDITION', 'cond', '=', '0', ';', 'FIS_INTERPRETATIONRECORD', '*', 'interp', ';', 'memset', '(', '&', 'study', ',', '0', ',', 'sizeof', 'study', ')', ';', 'study', '.', 'Type', '=', 'FIS_K_STUDY', ';', 'findStudy', '(', 'handle', ',', 'fisHandle', ',', 'accessionNumber', ',', 'studyInstanceUID', ',', '&', 'study', ')', ';', 'FIS_DumpRecord', '(', '&', 'study', ',', 'stdout', ')', ';', 'findResults', '(', 'fisHandle', ',', 'study', '.', 'StuInsUID', ',', '&', 'results', ')', ';', 'FIS_DumpRecord', '(', '&', 'results', ',', 'stdout', ')', ';', 'cond', '=', 'FIS_SendEvent', '(', 'fisHandle', ',', 'dmanHandle', ',', 'FIS_K_RESULTS', ',', '&', 'results', ',', 'FIS_K_RESULTS_CREATED', ',', 'requestingAETitle', ',', 'remoteAETitle', ')', ';', 'if', '(', 'cond', '!=', 'FIS_NORMAL', ')', '{', 'COND_DumpConditions', '(', ')', ';', 'THR_Shutdown', '(', ')', ';', 'exit', '(', '1', ')', ';', '}', 'interp', '=', 'LST_Head', '(', '&', 'results', '.', 'InterpretationList', ')', ';', 'LST_Position', '(', '&', 'results', '.', 'InterpretationList', ',', 'interp', ')', ';', 'while', '(', 'interp', '!=', 'NULL', ')', '{', 'FIS_DumpRecord', '(', 'interp', ',', 'stdout', ')', ';', 'cond', '=', 'FIS_SendEvent', '(', 'fisHandle', ',', 'dmanHandle', ',', 'FIS_K_INTERPRETATION', ',', 'interp', ',', 'FIS_K_INTERPRETATION_CREATED', ',', 'requestingAETitle', ',', 'remoteAETitle', ')', ';', 'if', '(', 'cond', '!=', 'FIS_NORMAL', ')', '{', 'COND_DumpConditions', '(', ')', ';', 'THR_Shutdown', '(', ')', ';', 'exit', '(', '1', ')', ';', '}', 'cond', '=', 'FIS_SendEvent', '(', 'fisHandle', ',', 'dmanHandle', ',', 'FIS_K_INTERPRETATION', ',', 'interp', ',', 'FIS_K_INTERPRETATION_APPROVED', ',', 'requestingAETitle', ',', 'remoteAETitle', ')', ';', 'if', '(', 'cond', '!=', 'FIS_NORMAL', ')', '{', 'COND_DumpConditions', '(', ')', ';', 'THR_Shutdown', '(', ')', ';', 'exit', '(', '1', ')', ';', '}', 'interp', '=', 'LST_Next', '(', '&', 'results', '.', 'InterpretationList', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
290,"['unknownFieldMsg', '(', 'emf_ObjectData_X', '*', 'object_data', ',', 'bool', 'is_fatal', ')', '{', 'UserInterface', '*', 'gui', '=', 'theControlCenter', '->', 'getGui', '(', ')', ';', 'strstream', 'strm', ';', 'if', '(', 'is_fatal', ')', '{', 'strm', '<<', '""""', ';', '}', 'else', '{', 'strm', '<<', '""""', ';', '}', 'strm', '<<', 'object_data', '->', '<<', '<<', 'object_data', '->', 'object_name', ';', 'if', '(', 'object_data', '->', 'object_id', '!=', 'NO_INDEX', ')', '{', 'strm', '<<', '""""', '<<', 'object_data', '->', 'object_id', ';', '}', 'strm', '<<', 'ends', ';', 'gui', '->', 'showMsg', '(', 'strm', '.', 'str', '(', ')', ')', ';', 'if', '(', 'is_fatal', ')', 'return', 'notOk', ';', 'return', 'isOk', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
291,"['table_share_hash_get_key', '(', 'const', 'uchar', '*', 'entry', ',', 'size_t', '*', 'length', ',', 'my_bool', ')', '{', 'const', 'PFS_table_share', '*', 'const', '*', 'typed_entry', ';', 'const', 'PFS_table_share', '*', 'share', ';', 'const', 'void', '*', 'result', ';', 'typed_entry', '=', 'reinterpret_cast', '<', 'const', 'PFS_table_share', '*', 'const', '*', '>', '(', 'entry', ')', ';', 'DBUG_ASSERT', '(', 'typed_entry', '!=', 'NULL', ')', ';', 'share', '=', '*', 'typed_entry', ';', 'DBUG_ASSERT', '(', 'share', '!=', 'NULL', ')', ';', '*', 'length', '=', 'share', '->', 'm_key', '.', 'm_key_length', ';', 'result', '=', '&', 'share', '->', 'm_key', '.', 'm_hash_key', '[', '0', ']', ';', 'return', 'const_cast', '<', 'uchar', '*', '>', '(', 'reinterpret_cast', '<', 'const', 'uchar', '*', '>', '(', 'result', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
292,"['ircd_running', '(', 'void', ')', '{', 'int', 'pid', ';', 'if', '(', 'file_exists', '(', 'IRCDPID_PATH', ')', ')', '{', 'pid', '=', 'read_pid', '(', 'IRCDPID_PATH', ')', ';', 'if', '(', 'pid', '>', '0', ')', '{', 'return', '(', 'verify_pid', '(', 'pid', ')', '==', '1', ')', ';', '}', 'else', '{', 'return', '(', '-', '1', ')', ';', '}', '}', 'return', '(', '0', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
293,"['pf_key_v2_register_sa_seq', '(', 'u_int8_t', '*', 'spi', ',', 'size_t', 'sz', ',', 'u_int8_t', 'proto', ',', 'struct', 'sockaddr', '*', 'dst', ',', 'int', 'dstlen', ',', 'u_int32_t', 'seq', ')', '{', 'struct', 'pf_key_v2_sa_seq', '*', 'node', '=', '0', ';', 'node', '=', 'malloc', '(', 'sizeof', '*', 'node', ')', ';', 'if', '(', '!node', ')', 'goto', 'cleanup', ';', 'memset', '(', 'node', ',', ""''"", ',', 'sizeof', '*', 'node', ')', ';', 'node', '->', 'spi', '=', 'malloc', '(', 'sz', ')', ';', 'if', '(', '!node', '->', 'spi', ')', 'goto', 'cleanup', ';', 'node', '->', 'dst', '=', 'malloc', '(', 'sysdep_sa_len', '(', 'dst', ')', ')', ';', 'if', '(', '!node', '->', 'dst', ')', 'goto', 'cleanup', ';', 'memcpy', '(', 'node', '->', 'dst', ',', 'dst', ',', 'sysdep_sa_len', '(', 'dst', ')', ')', ';', 'node', '->', 'dstlen', '=', 'sysdep_sa_len', '(', 'dst', ')', ';', 'memcpy', '(', 'node', '->', 'spi', ',', 'spi', ',', 'sz', ')', ';', 'node', '->', 'sz', '=', 'sz', ';', 'node', '->', 'proto', '=', 'proto', ';', 'node', '->', 'seq', '=', 'seq', ';', 'TAILQ_INSERT_TAIL', '(', '&', 'pf_key_v2_sa_seq_map', ',', 'node', ',', 'link', ')', ';', 'return', '1', ';', 'cleanup', ':', 'if', '(', 'node', '->', 'dst', ')', 'free', '(', 'node', '->', 'dst', ')', ';', 'if', '(', 'node', ')', 'free', '(', 'node', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  True,CWE-other  True
294,"['denali_irq_init', '(', 'struct', 'denali_nand_info', '*', 'denali', ')', '{', 'uint32_t', 'int_mask', ';', 'int', 'i', ';', 'denali_set_intr_modes', '(', 'denali', ',', 'false', ')', ';', 'int_mask', '=', 'DENALI_IRQ_ALL', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'denali', '->', 'max_banks', ';', '++', 'i', ')', 'iowrite32', '(', '0xFFFF', ',', 'denali', '->', 'flash_reg', '+', 'INTR_STATUS', '(', 'i', ')', ')', ';', 'denali_irq_enable', '(', 'denali', ',', 'int_mask', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
295,"['command_pause', '(', 'int', 'unitnum', ',', 'int', 'paused', ')', '{', 'struct', 'cdunit', '*', 'cdu', '=', 'unitisopen', '(', 'unitnum', ')', ';', 'if', '(', '!cdu', ')', 'return', '-', '1', ';', 'int', 'old', '=', 'cdu', '->', 'cdda_paused', ';', 'cdu', '->', 'cdda_paused', '=', 'paused', ';', 'return', 'old', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
296,"['SetConfigDefaults', '(', 'int', 'bSet', ')', '{', 'int', 'i', ';', 'void', '*', 'var_ptr', '=', 'NULL', ';', 'for', '(', 'i', '=', '0', ';', 'ConfigVars', '[', 'i', ']', '.', 'var_name', '[', '0', ']', '!=', '0', ';', 'i', '++', ')', '{', 'if', '(', 'strcmp', '(', 'ConfigVars', '[', 'i', ']', '.', 'var_type', ',', '""""', ')', '==', '0', ')', '{', 'if', '(', 'ConfigVars', '[', 'i', ']', '.', 'Flags', '&', 'CON_FLG_BASED_VAR', ')', '{', 'if', '(', 'ConfigPass', '==', '0', ')', '{', '/', '/', 'Prior', 'to', 'first', 'pass', ',', 'class', 'variables', ""haven't"", 'been', 'created', 'continue', ';', '}', '}', 'else', '{', 'var_ptr', '=', 'ConfigVars', '[', 'i', ']', '.', 'var_ptr', ';', '}', 'if', '(', '*', '(', '(', 'char', '*', '*', ')', 'var_ptr', ')', '!=', 'NULL', ')', '{', 'free', '(', '*', '(', '(', 'char', '*', '*', ')', 'var_ptr', ')', ')', ';', '*', '(', '(', 'char', '*', '*', ')', 'var_ptr', ')', '=', 'NULL', ';', '}', '}', 'else', 'if', '(', 'strcmp', '(', 'ConfigVars', '[', 'i', ']', '.', 'var_type', ',', '""""', ')', '==', '0', ')', '{', 'if', '(', '!', '(', 'ConfigVars', '[', 'i', ']', '.', 'Flags', '&', 'CON_FLG_BASED_VAR', ')', ')', '{', 'ConfigVars', '[', 'i', ']', '.', 'AccessFunc', '(', '&', 'ConfigVars', '[', 'i', ']', ',', 'NULL', ',', 'AF_SET_DEFAULT', ',', '0', ')', ';', '}', '}', '}', 'if', '(', 'bSet', ')', '{', 'ConferenceID', '=', 'strdup', '(', 'PACKAGE', '""""', 'VERSION', ')', ';', 'DirServerHost', '[', '0', ']', '=', 'strdup', '(', '""""', ')', ';', 'AppName', '=', 'strdup', '(', '""""', ')', ';', 'RunDir', '=', 'strdup', '(', '""""', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
297,"['ptaGetLinearLSF', '(', 'PTA', '*', 'pta', ',', 'l_float32', '*', 'pa', ',', 'l_float32', '*', 'pb', ',', 'NUMA', '*', '*', 'pnafit', ')', '{', 'l_int32', 'n', ',', 'i', ';', 'l_float32', 'factor', ',', 'sx', ',', 'sy', ',', 'sxx', ',', 'sxy', ',', 'val', ';', 'l_float32', '*', 'xa', ',', '*', 'ya', ';', 'PROCNAME', '(', '""""', ')', ';', 'if', '(', '!pta', ')', 'return', 'ERROR_INT', '(', '""""', ',', 'procName', ',', '1', ')', ';', 'if', '(', '!pa', '&&', '!pb', ')', 'return', 'ERROR_INT', '(', '""""', ',', 'procName', ',', '1', ')', ';', 'if', '(', 'pa', ')', '*', 'pa', '=', '0', '.', '0', ';', 'if', '(', 'pb', ')', '*', 'pb', '=', '0', '.', '0', ';', 'if', '(', '(', 'n', '=', 'ptaGetCount', '(', 'pta', ')', ')', '<', '2', ')', 'return', 'ERROR_INT', '(', '""""', ',', 'procName', ',', '1', ')', ';', 'sx', '=', 'sy', '=', 'sxx', '=', 'sxy', '=', '0', '.', ';', 'if', '(', 'pa', '&&', 'pb', ')', '{', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'n', ';', 'i', '++', ')', '{', 'sx', '+=', 'xa', '[', 'i', ']', ';', 'sy', '+=', 'ya', '[', 'i', ']', ';', 'sxx', '+=', 'xa', '[', 'i', ']', '*', 'xa', '[', 'i', ']', ';', 'sxy', '+=', 'xa', '[', 'i', ']', '*', 'ya', '[', 'i', ']', ';', '}', 'factor', '=', 'n', '*', 'sxx', '-', 'sx', '*', 'sx', ';', 'if', '(', 'factor', '==', '0', '.', '0', ')', 'return', 'ERROR_INT', '(', '""""', ',', 'procName', ',', '1', ')', ';', 'factor', '=', '1', '.', '/', 'factor', ';', '*', 'pa', '=', 'factor', '*', '(', '(', 'l_float32', ')', 'n', '*', 'sxy', '-', 'sx', '*', 'sy', ')', ';', '*', 'pb', '=', 'factor', '*', '(', 'sxx', '*', 'sy', '-', 'sx', '*', 'sxy', ')', ';', '}', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'n', ';', 'i', '++', ')', '{', 'sxx', '+=', 'xa', '[', 'i', ']', '*', 'xa', '[', 'i', ']', ';', 'sxy', '+=', 'xa', '[', 'i', ']', '*', 'ya', '[', 'i', ']', ';', '}', 'if', '(', 'sxx', '==', '0', '.', '0', ')', 'return', 'ERROR_INT', '(', '""""', ',', 'procName', ',', '1', ')', ';', '*', 'pa', '=', 'sxy', '/', 'sxx', ';', '}', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'n', ';', 'i', '++', ')', 'sy', '+=', 'ya', '[', 'i', ']', ';', '*', 'pb', '=', 'sy', '/', '(', 'l_float32', ')', 'n', ';', '}', 'if', '(', 'pnafit', ')', '{', '*', 'pnafit', '=', 'numaCreate', '(', 'n', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'n', ';', 'i', '++', ')', '{', 'val', '=', '(', '*', 'pa', ')', '*', 'xa', '[', 'i', ']', '+', '*', 'pb', ';', 'numaAddNumber', '(', '*', 'pnafit', ',', 'val', ')', ';', '}', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
298,"['vlog_msgf', '(', 'int', 'fd', ',', 'int', 'lf', ',', 'const', 'char', '*', 'fmt', ',', 'va_list', 'ap', ',', 'int', 'with_errno', ')', '{', 'int', 'level', '=', 'LOG_PRI', '(', 'lf', ')', ';', 'char', 'buf', '[', '1024', ']', ';', 'if', '(', 'level_', '<', 'level', ')', '{', 'return', '0', ';', '}', 'if', '(', 'fd', '>', '-', '1', ')', '{', 'if', '(', 'dprintf', '(', 'fd', ',', '""""', ',', 'flty_', '[', 'level', ']', ')', '<', '0', ')', '{', 'return', '-', '1', ';', '}', 'if', '(', 'vdprintf', '(', 'fd', ',', 'fmt', ',', 'ap', ')', '<', '0', ')', '{', 'return', '-', '1', ';', '}', 'if', '(', 'with_errno', ')', '{', 'if', '(', 'dprintf', '(', 'fd', ',', '""""', ',', 'strerror', '(', 'errno', ')', ')', '<', '0', ')', '{', 'return', '-', '1', ';', '}', '}', 'if', '(', 'dprintf', '(', 'fd', ',', '""""', ')', '<', '0', ')', '{', 'return', '-', '1', ';', '}', '}', '{', 'if', '(', 'vsnprintf', '(', 'buf', ',', 'sizeof', '(', 'buf', ')', ',', 'fmt', ',', 'ap', ')', '<', '0', ')', '{', 'return', '-', '1', ';', '}', 'syslog', '(', 'level', '|', 'LOG_DAEMON', ',', '""""', ',', 'buf', ')', ';', '}', 'return', '0', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
299,"['operator', '=', '(', 'const', 'Theorem', '&', 'th', ')', '{', '/', '/', 'Handle', 'self', '-', 'if', '(', 'this', '==', '&', 'th', ')', 'return', '*', 'this', ';', 'if', '(', 'd_thm', '==', 'th', '.', 'd_thm', ')', 'return', '*', 'this', ';', 'long', 'tmp', '=', 'th', '.', 'd_thm', ';', '/', '/', 'Increase', 'the', 'refcount', 'on', 'if', '(', 'tmp', '&', '0x1', ')', '{', 'TheoremValue', '*', 'tv', '=', '(', 'TheoremValue', '*', ')', '(', 'tmp', '&', '(', '~', '(', '0x1', ')', ')', ')', ';', 'DebugAssert', '(', 'tv', '->', 'd_refcount', '>', '0', ',', '""""', ')', ';', '++', '(', 'tv', '->', 'd_refcount', ')', ';', '}', 'else', 'if', '(', 'tmp', '!=', '0', ')', '{', 'th', '.', 'exprValue', '(', ')', '->', 'incRefcount', '(', ')', ';', '}', '/', '/', 'Decrease', 'the', 'refcount', 'on', 'if', '(', 'd_thm', '&', '0x1', ')', '{', 'TheoremValue', '*', 'tv', '=', 'thm', '(', ')', ';', 'DebugAssert', '(', 'tv', '->', 'd_refcount', '>', '0', ',', '""""', ')', ';', 'if', '(', '--', '(', 'tv', '->', 'd_refcount', ')', '==', '0', ')', '{', 'MemoryManager', '*', 'mm', '=', 'tv', '->', 'getMM', '(', ')', ';', 'delete', 'tv', ';', 'mm', '->', 'deleteData', '(', 'tv', ')', ';', '}', '}', 'else', 'if', '(', 'd_thm', '!=', '0', ')', '{', 'exprValue', '(', ')', '->', 'decRefcount', '(', ')', ';', '}', 'd_thm', '=', 'tmp', ';', 'return', '*', 'this', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
300,"['DateCalc_Blank', '(', 'charptr', '*', 'target', ',', 'Z_int', 'count', ')', '{', 'while', '(', 'count', '--', '>', '0', ')', '*', '(', '*', 'target', ')', '++', '=', ""''"", ';', '*', '(', '*', 'target', ')', '=', ""''"", ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
301,"['camel_internet_address_find_address', '(', 'CamelInternetAddress', '*', 'addr', ',', 'const', 'gchar', '*', 'address', ',', 'const', 'gchar', '*', '*', 'namep', ')', '{', 'struct', '_address', '*', 'a', ';', 'gint', 'i', ',', 'len', ';', 'g_assert', '(', 'CAMEL_IS_INTERNET_ADDRESS', '(', 'addr', ')', ')', ';', 'len', '=', '(', '(', 'CamelAddress', '*', ')', 'addr', ')', '->', 'addresses', '->', 'len', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'len', ';', 'i', '++', ')', '{', 'a', '=', 'g_ptr_array_index', '(', '(', '(', 'CamelAddress', '*', ')', 'addr', ')', '->', 'addresses', ',', 'i', ')', ';', 'if', '(', '!strcmp', '(', 'a', '->', 'address', ',', 'address', ')', ')', '{', 'if', '(', 'namep', ')', '*', 'namep', '=', 'a', '->', 'name', ';', 'return', 'i', ';', '}', '}', 'return', '-', '1', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
302,"['rqs_match_host_scope', '(', 'lList', '*', 'scope', ',', 'const', 'char', '*', 'name', ',', 'lList', '*', 'master_hgroup_list', ',', 'bool', 'is_xscope', ')', '{', 'lListElem', '*', 'ep', ';', 'DENTER', '(', 'TOP_LAYER', ',', '""""', ')', ';', 'if', '(', 'lGetElemStr', '(', 'scope', ',', 'ST_name', ',', '""""', ')', ')', '{', 'DRETURN', '(', 'true', ')', ';', '}', 'if', '(', 'sge_is_pattern', '(', 'name', ')', '||', 'is_hgroup_name', '(', 'name', ')', ')', '{', 'DRETURN', '(', 'rqs_match_user_host_scope', '(', 'scope', ',', 'FILTER_HOSTS', ',', 'name', ',', 'NULL', ',', 'master_hgroup_list', ',', 'NULL', ',', 'is_xscope', ')', ')', ';', '}', 'for_each', '(', 'ep', ',', 'scope', ')', '{', 'if', '(', '!qref_list_host_rejected', '(', 'lGetString', '(', 'ep', ',', 'ST_name', ')', ',', 'name', ',', 'master_hgroup_list', ')', ')', '{', 'DRETURN', '(', 'true', ')', ';', '}', '}', 'DRETURN', '(', 'false', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
303,"['doFinalization', '(', 'Module', '&', 'M', ')', '{', 'const', 'DataLayout', '&', 'DL', '=', 'getDataLayout', '(', ')', ';', 'bool', 'isPPC64', '=', 'DL', '.', 'getPointerSizeInBits', '(', ')', '==', '64', ';', 'PPCTargetStreamer', '&', 'TS', '=', 'static_cast', '<', 'PPCTargetStreamer', '&', '>', '(', '*', 'OutStreamer', '->', 'getTargetStreamer', '(', ')', ')', ';', 'if', '(', '!TOC', '.', 'empty', '(', ')', ')', '{', 'MCSectionELF', '*', 'Section', ';', 'if', '(', 'isPPC64', ')', 'Section', '=', 'OutStreamer', '->', 'getContext', '(', ')', '.', 'getELFSection', '(', '""""', ',', 'ELF', ':', ':', 'SHT_PROGBITS', ',', 'ELF', ':', ':', 'SHF_WRITE', '|', 'ELF', ':', ':', 'SHF_ALLOC', ')', ';', 'Section', '=', 'OutStreamer', '->', 'getContext', '(', ')', '.', 'getELFSection', '(', '""""', ',', 'ELF', ':', ':', 'SHT_PROGBITS', ',', 'ELF', ':', ':', 'SHF_WRITE', '|', 'ELF', ':', ':', 'SHF_ALLOC', ')', ';', 'OutStreamer', '->', 'SwitchSection', '(', 'Section', ')', ';', 'for', '(', 'MapVector', '<', 'MCSymbol', '*', ',', 'MCSymbol', '*', '>', ':', ':', 'iterator', 'I', '=', 'TOC', '.', 'begin', '(', ')', ',', 'E', '=', 'TOC', '.', 'end', '(', ')', ';', 'I', '!=', 'E', ';', '++', 'I', ')', '{', 'OutStreamer', '->', 'EmitLabel', '(', 'I', '->', 'second', ')', ';', 'MCSymbol', '*', 'S', '=', 'I', '->', 'first', ';', 'if', '(', 'isPPC64', ')', 'TS', '.', 'emitTCEntry', '(', '*', 'S', ')', ';', 'OutStreamer', '->', 'EmitSymbolValue', '(', 'S', ',', '4', ')', ';', '}', '}', 'return', 'AsmPrinter', ':', ':', 'doFinalization', '(', 'M', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
304,"['find_sections_buffered', '(', 'section_t', '*', 'section', ',', 'char', '*', 'start', ',', 'char', '*', 'key', ',', 'va_list', 'args', ',', 'char', '*', 'buf', ',', 'int', 'len', ',', 'array_t', '*', '*', 'sections', ')', '{', 'section_t', '*', 'found', '=', 'NULL', ',', '*', 'fallback', ';', 'char', '*', 'pos', ';', 'int', 'i', ';', 'if', '(', '!section', ')', '{', 'return', ';', '}', 'pos', '=', 'strchr', '(', 'key', ',', ""''"", ')', ';', 'if', '(', 'pos', ')', '{', '*', 'pos', '=', ""''"", ';', '}', 'if', '(', '!print_key', '(', 'buf', ',', 'len', ',', 'start', ',', 'key', ',', 'args', ')', ')', '{', 'return', ';', '}', 'if', '(', 'pos', ')', '*', 'pos', '=', ""''"", ';', '}', 'if', '(', '!strlen', '(', 'buf', ')', ')', '{', 'found', '=', 'section', ';', '}', '{', 'array_bsearch', '(', 'section', '->', 'sections', ',', 'buf', ',', 'settings_section_find', ',', '&', 'found', ')', ';', '}', 'if', '(', 'found', ')', '{', 'if', '(', 'pos', ')', '{', 'find_sections_buffered', '(', 'found', ',', 'start', ',', 'pos', '+', '1', ',', 'args', ',', 'buf', ',', 'len', ',', 'sections', ')', ';', '}', '{', 'array_insert_create', '(', 'sections', ',', 'ARRAY_TAIL', ',', 'found', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'array_count', '(', 'found', '->', 'fallbacks', ')', ';', 'i', '++', ')', '{', 'array_get', '(', 'found', '->', 'fallbacks', ',', 'i', ',', '&', 'fallback', ')', ';', 'array_insert_create', '(', 'sections', ',', 'ARRAY_TAIL', ',', 'fallback', ')', ';', '}', '}', '}', 'if', '(', 'section', '->', 'fallbacks', ')', '{', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'array_count', '(', 'section', '->', 'fallbacks', ')', ';', 'i', '++', ')', '{', 'array_get', '(', 'section', '->', 'fallbacks', ',', 'i', ',', '&', 'fallback', ')', ';', 'find_sections_buffered', '(', 'fallback', ',', 'start', ',', 'key', ',', 'args', ',', 'buf', ',', 'len', ',', 'sections', ')', ';', '}', '}', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
305,"['installedEntries', '(', ')', '{', 'EntryInternal', ':', ':', 'List', 'entries', ';', 'foreach', '(', 'const', 'EntryInternal', '&', 'entry', ',', 'mCachedEntries', ')', '{', 'if', '(', 'entry', '.', 'status', '(', ')', '==', 'Entry', ':', ':', 'Installed', '||', 'entry', '.', 'status', '(', ')', '==', 'Entry', ':', ':', 'Updateable', ')', '{', 'entries', '.', 'append', '(', 'entry', ')', ';', '}', '}', 'return', 'entries', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
306,"['extend_info_get_description', '(', 'char', '*', 'buf', ',', 'const', 'extend_info_t', '*', 'ei', ')', '{', 'if', '(', '!ei', ')', 'return', '""""', ';', 'return', 'format_node_description', '(', 'buf', ',', 'ei', '->', 'identity_digest', ',', '0', ',', 'ei', '->', 'nickname', ',', '&', 'ei', '->', 'addr', ',', '0', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
307,"['pccard_store_card_pm_state', '(', 'struct', 'device', '*', 'dev', ',', 'struct', 'device_attribute', '*', 'attr', ',', 'const', 'char', '*', 'buf', ',', 'size_t', 'count', ')', '{', 'struct', 'pcmcia_socket', '*', 's', '=', 'to_socket', '(', 'dev', ')', ';', 'ssize_t', 'ret', '=', 'count', ';', 'if', '(', '!count', ')', 'return', '-', 'EINVAL', ';', 'if', '(', '!strncmp', '(', 'buf', ',', '""""', ',', '3', ')', ')', 'pcmcia_parse_uevents', '(', 's', ',', 'PCMCIA_UEVENT_SUSPEND', ')', ';', 'else', '{', 'if', '(', '!strncmp', '(', 'buf', ',', '""""', ',', '2', ')', ')', 'pcmcia_parse_uevents', '(', 's', ',', 'PCMCIA_UEVENT_RESUME', ')', ';', 'ret', '=', '-', 'EINVAL', ';', '}', 'return', 'ret', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
308,"['getAddrCount', '(', 'SPtr', '<', 'TDUID', '>', 'duid', ')', '{', 'SPtr', '<', 'TAddrClient', '>', 'ptrClient', ';', 'ClntsLst', '.', 'first', '(', ')', ';', 'while', '(', 'ptrClient', '=', 'ClntsLst', '.', 'get', '(', ')', ')', '{', 'if', '(', '(', '*', 'ptrClient', '->', 'getDUID', '(', ')', ')', '==', '(', '*', 'duid', ')', ')', 'break', ';', '}', '/', '/', 'Have', 'we', 'found', 'this', 'client', '?', 'if', '(', '!ptrClient', ')', '{', 'return', '0', ';', '}', 'unsigned', 'long', 'count', '=', '0', ';', '/', '/', 'look', 'at', 'each', 'of', ""client's"", 'SPtr', '<', 'TAddrIA', '>', 'ptrIA', ';', 'ptrClient', '->', 'firstIA', '(', ')', ';', 'while', '(', 'ptrIA', '=', 'ptrClient', '->', 'getIA', '(', ')', ')', '{', 'count', '+=', 'ptrIA', '->', 'countAddr', '(', ')', ';', '}', 'return', 'count', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
309,"['multi_data_handle_incoming', '(', 'int', 'handle', ')', '{', 'int', 'player_index', '=', '-', '1', ';', 'PSNET_SOCKET_RELIABLE', 'sock', '=', 'INVALID_SOCKET', ';', 'char', '*', 'fname', ';', '/', '/', 'get', 'the', 'player', 'who', 'is', 'sending', 'us', 'this', 'sock', '=', 'multi_xfer_get_sock', '(', 'handle', ')', ';', 'player_index', '=', 'find_player_socket', '(', 'sock', ')', ';', '/', '/', 'get', 'the', 'filename', 'of', 'the', 'fname', '=', 'multi_xfer_get_filename', '(', 'handle', ')', ';', 'if', '(', 'fname', '==', 'NULL', ')', '{', 'nprintf', '(', '(', '""""', ',', '""""', ')', ')', ';', '/', '/', 'kill', 'the', 'multi_xfer_xor_flags', '(', 'handle', ',', 'MULTI_XFER_FLAG_REJECT', ')', ';', 'return', ';', '}', '/', '/', 'if', 'this', 'is', 'not', 'a', 'valid', 'data', 'if', '(', '!multi_data_is_data', '(', 'fname', ')', ')', '{', 'nprintf', '(', '(', '""""', ',', '""""', ')', ')', ';', '/', '/', 'kill', 'the', 'multi_xfer_xor_flags', '(', 'handle', ',', 'MULTI_XFER_FLAG_REJECT', ')', ';', 'return', ';', '}', '/', '/', 'if', 'we', 'already', 'have', 'a', 'copy', 'of', 'this', 'file', ',', 'abort', 'the', '/', '/', 'Does', 'file', 'exist', 'in', '\\multidata', '?', 'if', '(', 'cf_exists', '(', 'fname', ',', 'CF_TYPE_MULTI_CACHE', ')', ')', '{', 'nprintf', '(', '(', '""""', ',', '""""', ')', ')', ';', '/', '/', 'kill', 'the', 'multi_xfer_xor_flags', '(', 'handle', ',', 'MULTI_XFER_FLAG_REJECT', ')', ';', '/', '/', 'if', ""we're"", 'the', 'server', ',', 'we', 'still', 'need', 'to', 'add', 'it', 'to', 'the', 'list', 'if', '(', '(', 'Net_player', '->', 'flags', '&', 'NETINFO_FLAG_AM_MASTER', ')', '&&', '(', 'player_index', '>=', '0', ')', ')', '{', 'multi_data_add_new', '(', 'fname', ',', 'player_index', ')', ';', '}', 'return', ';', '}', '/', '/', 'if', ""I'm"", 'the', 'server', 'of', 'the', 'game', ',', 'do', 'stuff', 'a', 'little', 'if', '(', 'Net_player', '->', 'flags', '&', 'NETINFO_FLAG_AM_MASTER', ')', '{', 'if', '(', 'player_index', '==', '-', '1', ')', '{', 'nprintf', '(', '(', '""""', ',', '""""', ')', ')', ';', '/', '/', 'kill', 'the', 'multi_xfer_xor_flags', '(', 'handle', ',', 'MULTI_XFER_FLAG_REJECT', ')', ';', 'return', ';', '}', '/', '/', 'attempt', 'to', 'add', 'the', 'if', '(', '!multi_data_add_new', '(', 'fname', ',', 'player_index', ')', ')', '{', '/', '/', 'kill', 'the', 'multi_xfer_xor_flags', '(', 'handle', ',', 'MULTI_XFER_FLAG_REJECT', ')', ';', 'return', ';', '}', 'else', '{', '/', '/', 'force', 'the', 'file', 'to', 'go', 'into', 'the', 'multi', 'cache', 'multi_xfer_handle_force_dir', '(', 'handle', ',', 'CF_TYPE_MULTI_CACHE', ')', ';', '/', '/', 'mark', 'it', 'as', 'multi_xfer_xor_flags', '(', 'handle', ',', 'MULTI_XFER_FLAG_AUTODESTROY', ')', ';', '}', '}', '/', '/', 'if', ""i'm"", 'a', 'client', ',', 'this', 'is', 'an', 'incoming', 'file', 'from', 'the', 'else', '{', '/', '/', 'if', ""i'm"", 'not', 'accepting', 'pilot', 'pics', ',', 'if', '(', '!', '(', 'Net_player', '->', 'p_info', '.', 'options', '.', 'flags', '&', 'MLO_FLAG_ACCEPT_PIX', ')', ')', '{', 'nprintf', '(', '(', '""""', ',', '""""', ')', ')', ';', '/', '/', 'kill', 'the', 'multi_xfer_xor_flags', '(', 'handle', ',', 'MULTI_XFER_FLAG_REJECT', ')', ';', 'return', ';', '}', '/', '/', 'set', 'the', 'xfer', 'handle', 'to', 'autodestroy', 'itself', 'since', 'we', ""don't"", 'really', 'want', 'to', 'have', 'to', 'manage', 'all', 'incoming', 'multi_xfer_xor_flags', '(', 'handle', ',', 'MULTI_XFER_FLAG_AUTODESTROY', ')', ';', '/', '/', 'force', 'the', 'file', 'to', 'go', 'into', 'the', 'multi', 'cache', 'multi_xfer_handle_force_dir', '(', 'handle', ',', 'CF_TYPE_MULTI_CACHE', ')', ';', '/', '/', 'begin', 'receiving', 'the', 'nprintf', '(', '(', '""""', ',', '""""', ',', 'handle', ')', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
310,"['SVGCircleElement', '(', 'const', 'QualifiedName', '&', 'tagName', ',', 'Document', '*', 'doc', ')', ':', 'SVGStyledTransformableElement', '(', 'tagName', ',', 'doc', ')', ',', 'SVGTests', '(', ')', ',', 'SVGLangSpace', '(', ')', ',', 'SVGExternalResourcesRequired', '(', ')', ',', 'm_cx', '(', 'SVGLength', '(', 'this', ',', 'LengthModeWidth', ')', ')', ',', 'm_cy', '(', 'SVGLength', '(', 'this', ',', 'LengthModeHeight', ')', ')', ',', 'm_r', '(', 'SVGLength', '(', 'this', ',', 'LengthModeOther', ')', ')', '{', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
311,"['drain_mpi', '(', 'int4', 'node', ',', 'int4', 'pid', ',', 'int', 'fd', ')', '{', 'int\t\ti', ';', 'if', '(', 'fl_verbose', ')', 'nodespin_init', '(', '""""', ')', ';', 'do', '{', 'do', '{', 'curr_node', '=', 'node', ';', 'if', '(', 'fl_verbose', ')', 'nodespin_next', '(', 'node', ')', ';', 'if', '(', 'ao_taken', '(', 'op', ',', '""""', ')', ')', '{', 'r', '=', 'lam_rtrfget', '(', 'node', ',', 'TRWORLD', ',', 'pid', ',', 'fd', ')', ';', 'if', '(', 'r', '<', '0', ')', 'lamfail', '(', '""""', ')', ';', '}', 'else', '{', 'r', '=', 'lam_rtrfforget', '(', 'node', ',', 'TRWORLD', ',', 'pid', ',', 'fd', ')', ';', 'if', '(', 'r', '<', '0', ')', 'lamfail', '(', '""""', ')', ';', '}', 'nid_get', '(', '&', 'n_index', ',', '&', 'node', ',', '&', 'n_flags', ')', ';', '}', 'while', '(', 'n_index', '&&', '(', 'r', '==', '0', ')', ')', ';', 'pid_get', '(', '&', 'p_index', ',', '&', 'pid', ',', '&', 'p_flags', ')', ';', '}', 'while', '(', '(', 'p_index', '>', '0', ')', '&&', '(', 'r', '==', '0', ')', ')', ';', 'if', '(', 'fl_verbose', ')', 'nodespin_end', '(', ')', ';', 'if', '(', 'r', '==', '0', ')', '{', 'show_help', '(', '""""', ',', '""""', ',', 'NULL', ')', ';', 'return', ';', '}', 'VERBOSE', '(', '""""', ',', 'nid_fmt', '(', 'curr_node', ')', ')', ';', '/', '*', '*', 'Rewind', 'and', 'read', 'GPS', 'information', 'from', 'the', 'file', '.', 'if', '(', 'lseek', '(', 'fd', ',', '(', 'off_t', ')', 'sizeof', '(', 'int4', ')', ',', 'SEEK_SET', ')', '<', '0', ')', 'lamfail', '(', '""""', ')', ';', 'if', '(', 'read', '(', 'fd', ',', '(', 'char', '*', ')', '&', 'nworld', ',', 'sizeof', '(', 'int4', ')', ')', '<', '0', ')', 'lamfail', '(', '""""', ')', ';', 'nworld', '=', 'ttol', '(', 'nworld', ')', ';', 'VERBOSE', '(', '""""', ',', 'nworld', ')', ';', 'world', '=', '(', 'struct', '_gps', '*', ')', 'malloc', '(', '(', 'unsigned', ')', '(', 'sizeof', '(', 'struct', '_gps', ')', '*', 'nworld', ')', ')', ';', 'if', '(', 'world', '==', '0', ')', 'lamfail', '(', '""""', ')', ';', 'if', '(', 'read', '(', 'fd', ',', '(', 'char', '*', ')', 'world', ',', 'sizeof', '(', 'struct', '_gps', ')', '*', 'nworld', ')', '<', '0', ')', 'lamfail', '(', '""""', ')', ';', '/', '*', '*', 'Convert', 'GPS', 'array', 'to', 'local', 'byte', 'order', '.', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'nworld', ';', '++', 'i', ')', '{', 'world', '[', 'i', ']', '.', 'gps_node', '=', 'ttol', '(', 'world', '[', 'i', ']', '.', 'gps_node', ')', ';', 'world', '[', 'i', ']', '.', 'gps_pid', '=', 'ttol', '(', 'world', '[', 'i', ']', '.', 'gps_pid', ')', ';', 'world', '[', 'i', ']', '.', 'gps_idx', '=', 'ttol', '(', 'world', '[', 'i', ']', '.', 'gps_idx', ')', ';', 'world', '[', 'i', ']', '.', 'gps_grank', '=', 'ttol', '(', 'world', '[', 'i', ']', '.', 'gps_grank', ')', ';', '}', '/', '*', '*', 'Determine', 'flush', 'delay', '.', 'if', '(', 'ao_taken', '(', 'op', ',', '""""', ')', ')', '{', 'ao_intparam', '(', 'op', ',', '""""', ',', '0', ',', '0', ',', '&', 'flush_delay', ')', ';', '}', 'else', '{', 'flush_delay', '=', '-', '1', ';', '}', 'VERBOSE', '(', '""""', ')', ';', 'if', '(', 'trdrain_mpi', '(', 'fd', ',', 'world', ',', 'nworld', ',', 'ao_taken', '(', 'op', ',', '""""', ')', ',', 'flush_delay', ')', ')', 'lamfail', '(', '""""', ')', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  True,CWE-other  True
312,"['cq_periodic_main_add', '(', 'int', 'period', ',', 'cq_invoke_t', 'event', ',', 'void', '*', 'arg', ')', '{', 'cq_main_init', '(', ')', ';', 'return', 'cq_periodic_add', '(', 'callout_queue', ',', 'period', ',', 'event', ',', 'arg', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
313,"['{', 'char', '*', 't', ',', '*', 'u', ';', 't', '=', 'malloc', '(', 'strlen', '(', 's', ')', '+', '1', ')', ';', 'u', '=', 't', ';', 'while', '(', '*', 's', '!=', '0', ')', '{', 'if', '(', '(', '*', 's', '==', ""''"", ')', '&&', '(', 's', '[', '1', ']', '==', ""''"", ')', ')', '{', '*', 'u', '=', ""''"", ';', 's', '++', ';', '}', 'else', '*', 'u', '=', '*', 's', ';', 's', '++', ';', 'u', '++', ';', '}', '*', 'u', '=', '0', ';', 'return', 't', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
314,"['__lambda35_', '(', 'Block8Data', '*', '_data8_', ')', '{', 'UnityResultPreviewer', '*', 'self', ';', 'void', '*', 'result', '=', 'NULL', ';', 'UnityAbstractPreview', '*', 'preview', '=', 'NULL', ';', 'UnityAbstractPreview', '*', '_tmp0_', '=', 'NULL', ';', 'UnityAbstractPreviewCallback', '_tmp1_', '=', 'NULL', ';', 'void', '*', '_tmp1__target', '=', 'NULL', ';', 'self', '=', '_data8_', '->', 'self', ';', '_tmp0_', '=', 'unity_result_previewer_run', '(', 'self', ')', ';', 'preview', '=', '_tmp0_', ';', '_tmp1_', '=', '_data8_', '->', 'async_callback', ';', '_tmp1__target', '=', '_data8_', '->', 'async_callback_target', ';', '_tmp1_', '(', 'self', ',', 'preview', ',', '_tmp1__target', ')', ';', 'result', '=', 'NULL', ';', '_g_object_unref0', '(', 'preview', ')', ';', 'return', 'result', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
315,"['update_after_action', '(', 'Sheet', '*', 'sheet', ',', 'WorkbookControl', '*', 'wbc', ')', '{', 'gnm_app_recalc', '(', ')', ';', 'if', '(', 'sheet', '!=', 'NULL', ')', '{', 'g_return_if_fail', '(', 'IS_SHEET', '(', 'sheet', ')', ')', ';', 'sheet_mark_dirty', '(', 'sheet', ')', ';', 'sheet_update', '(', 'sheet', ')', ';', 'if', '(', 'sheet', '->', 'workbook', '==', 'wb_control_get_workbook', '(', 'wbc', ')', ')', 'WORKBOOK_VIEW_FOREACH_CONTROL', '(', 'wb_control_view', '(', 'wbc', ')', ',', 'control', ',', 'wb_control_sheet_focus', '(', 'control', ',', 'sheet', ')', ';', ')', ';', '}', 'else', 'if', '(', 'wbc', '!=', 'NULL', ')', '{', 'Sheet', '*', 'sheet', '=', 'wb_control_cur_sheet', '(', 'wbc', ')', ';', 'if', '(', 'sheet', ')', 'sheet_update', '(', 'sheet', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
316,"['nocustom', '(', 'void', ')', '{', 'if', '(', 'picasso_on', '&&', 'currprefs', '.', 'picasso96_nocustom', ')', 'return', 'true', ';', 'return', 'false', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
317,"['gda_tree_node_get_parent', '(', 'GdaTreeNode', '*', 'node', ')', '{', 'GdaTreeNode', '*', 'parent', ';', 'g_return_val_if_fail', '(', 'GDA_IS_TREE_NODE', '(', 'node', ')', ',', 'NULL', ')', ';', 'parent', '=', 'node', '->', 'priv', '->', 'parent', ';', 'if', '(', 'parent', '&&', '!parent', '->', 'priv', '->', 'parent', ')', 'return', 'parent', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
318,"['parse_timezone', '(', 'const', 'char', '*', 'tz', ')', '{', 'const', 'char', '*', 'rfc822_timezones', '[', ']', '[', '4', ']', '=', '{', '{', '""""', ',', 'NULL', '}', ',', '{', '""""', ',', 'NULL', '}', ',', '{', '""""', ',', 'NULL', '}', ',', '{', '""""', ',', 'NULL', '}', ',', '{', '""""', ',', 'NULL', '}', ',', '{', '""""', ',', 'NULL', '}', ',', '{', '""""', ',', 'NULL', '}', ',', '{', '""""', ',', 'NULL', '}', ',', '{', '""""', ',', 'NULL', '}', ',', '{', '""""', ',', 'NULL', '}', ',', '{', '""""', ',', 'NULL', '}', ',', '{', '""""', ',', 'NULL', '}', ',', '{', '""""', ',', 'NULL', '}', ',', '{', '""""', ',', 'NULL', '}', ',', '{', '""""', ',', 'NULL', '}', ',', '{', '""""', ',', 'NULL', '}', ',', '{', '""""', ',', 'NULL', '}', ',', '{', 'NULL', '}', ',', '}', ';', 'unsigned', 'int', 'i', ',', 'j', ';', 'if', '(', '(', '*', 'tz', '==', ""''"", '||', '*', 'tz', '==', ""''"", ')', '&&', 'strlen', '(', 'tz', ')', '==', '5', ')', '{', 'i', '=', 'atoi', '(', 'tz', ')', ';', 'return', '(', '(', 'i', '/', '100', ')', '*', '60', '+', 'i', '%', '100', ')', '*', '60', ';', '}', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'nitems', '(', 'rfc822_timezones', ')', ';', '++', 'i', ')', 'for', '(', 'j', '=', '0', ';', 'rfc822_timezones', '[', 'i', ']', '[', 'j', ']', '!=', 'NULL', ';', '++', 'j', ')', 'if', '(', 'strcmp', '(', 'rfc822_timezones', '[', 'i', ']', '[', 'j', ']', ',', 'tz', ')', '==', '0', ')', 'return', '(', 'i', '-', '12', ')', '*', '3600', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
319,"['folks_debug_print_heading', '(', 'FolksDebug', '*', 'self', ',', 'const', 'gchar', '*', 'domain', ',', 'GLogLevelFlags', 'level', ',', 'const', 'gchar', '*', 'format', ',', '.', '.', '.', ')', '{', 'static', 'const', 'gint', 'heading_colours', '[', ']', '=', '{', '31', ',', '32', ',', '34', '}', ';', 'gchar', '*', 'wrapper_format', '=', 'NULL', ';', 'gchar', '*', '_tmp0_', '=', 'NULL', ';', 'gboolean', '_tmp1_', '=', 'FALSE', ';', 'gboolean', '_tmp2_', '=', 'FALSE', ';', 'va_list', 'valist', '=', '{', '0', '}', ';', 'gchar', '*', 'output', '=', 'NULL', ';', 'const', 'gchar', '*', '_tmp8_', '=', 'NULL', ';', 'gchar', '*', '_tmp9_', '=', 'NULL', ';', 'const', 'gchar', '*', '_tmp10_', '=', 'NULL', ';', 'GLogLevelFlags', '_tmp11_', '=', '0', ';', 'const', 'gchar', '*', '_tmp12_', '=', 'NULL', ';', 'g_return_if_fail', '(', 'self', '!=', 'NULL', ')', ';', 'g_return_if_fail', '(', 'domain', '!=', 'NULL', ')', ';', 'g_return_if_fail', '(', 'format', '!=', 'NULL', ')', ';', '_tmp0_', '=', 'g_strdup', '(', '""""', ')', ';', 'wrapper_format', '=', '_tmp0_', ';', '_tmp1_', '=', 'folks_debug_get_colour_enabled', '(', 'self', ')', ';', '_tmp2_', '=', '_tmp1_', ';', 'if', '(', '_tmp2_', '==', 'TRUE', ')', '{', 'guint', 'indentation', '=', '0U', ';', 'guint', '_tmp3_', '=', '0U', ';', 'guint', '_tmp4_', '=', '0U', ';', 'guint', '_tmp5_', '=', '0U', ';', 'gint', '_tmp6_', '=', '0', ';', 'gchar', '*', '_tmp7_', '=', 'NULL', ';', '_tmp3_', '=', 'self', '->', 'priv', '->', '_indentation', ';', '_tmp4_', '=', 'CLAMP', '(', '_tmp3_', ',', '(', 'guint', ')', '0', ',', '(', 'guint', ')', '(', 'G_N_ELEMENTS', '(', 'heading_colours', ')', '-', '1', ')', ')', ';', 'indentation', '=', '_tmp4_', ';', '_tmp5_', '=', 'indentation', ';', '_tmp6_', '=', 'heading_colours', '[', '_tmp5_', ']', ';', '_tmp7_', '=', 'g_strdup_printf', '(', '""""', ',', '_tmp6_', ')', ';', '_g_free0', '(', 'wrapper_format', ')', ';', 'wrapper_format', '=', '_tmp7_', ';', '}', 'va_start', '(', 'valist', ',', 'format', ')', ';', '_tmp8_', '=', 'format', ';', '_tmp9_', '=', 'g_strdup_vprintf', '(', '_tmp8_', ',', 'valist', ')', ';', 'output', '=', '_tmp9_', ';', '_tmp10_', '=', 'domain', ';', '_tmp11_', '=', 'level', ';', '_tmp12_', '=', 'wrapper_format', ';', 'folks_debug_print_line', '(', 'self', ',', '_tmp10_', ',', '_tmp11_', ',', '_tmp12_', ',', 'output', ')', ';', '_g_free0', '(', 'output', ')', ';', 'va_end', '(', 'valist', ')', ';', '_g_free0', '(', 'wrapper_format', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
320,"['scsi_data_dir_opcode', '(', 'unsigned', 'char', 'op', ')', '{', 'enum', 'data_direction', 'dir', ';', 'switch', '(', 'op', ')', '{', 'case', 'WRITE_6', ':', 'case', 'WRITE_10', ':', 'case', 'WRITE_VERIFY', ':', 'case', 'WRITE_12', ':', 'case', 'WRITE_16', ':', 'dir', '=', 'DATA_WRITE', ';', 'break', ';', 'default', ':', 'dir', '=', 'DATA_READ', ';', 'break', ';', '}', 'return', 'dir', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
321,"['MixCoder_Free', '(', 'CMixCoder', '*', 'p', ')', '{', 'int', 'i', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'p', '->', 'numCoders', ';', 'i', '++', ')', '{', 'IStateCoder', '*', 'sc', '=', '&', 'p', '->', 'coders', '[', 'i', ']', ';', 'if', '(', 'p', '->', 'alloc', '&&', 'sc', '->', 'p', ')', 'sc', '->', 'Free', '(', 'sc', '->', 'p', ',', 'p', '->', 'alloc', ')', ';', '}', 'p', '->', 'numCoders', '=', '0', ';', 'if', '(', 'p', '->', 'buf', ')', 'p', '->', 'alloc', '->', 'Free', '(', 'p', '->', 'alloc', ',', 'p', '->', 'buf', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
322,"['battery_level', '(', 'DBusConnection', '*', 'conn', ',', 'DBusMessage', '*', 'msg', ',', 'void', '*', 'data', ')', '{', 'dbus_uint32_t', 'level', ';', 'if', '(', '!dbus_message_get_args', '(', 'msg', ',', 'NULL', ',', 'DBUS_TYPE_UINT32', ',', '&', 'level', ',', 'DBUS_TYPE_INVALID', ')', ')', 'return', 'btd_error_invalid_args', '(', 'msg', ')', ';', 'if', '(', 'level', '>', '5', ')', 'return', 'btd_error_invalid_args', '(', 'msg', ')', ';', 'telephony_update_indicator', '(', 'dummy_indicators', ',', '""""', ',', 'level', ')', ';', 'DBG', '(', '""""', ',', 'level', ')', ';', 'return', 'dbus_message_new_method_return', '(', 'msg', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
323,"['_exvGettext', '(', 'const', 'char', '*', 'str', ')', '{', 'static', 'bool', 'exvGettextInitialized', '=', 'false', ';', 'if', '(', '!exvGettextInitialized', ')', '{', 'bindtextdomain', '(', 'EXV_PACKAGE', ',', 'EXV_LOCALEDIR', ')', ';', '#', 'ifdef', 'bind_textdomain_codeset', '(', 'EXV_PACKAGE', ',', '""""', ')', ';', '#', 'exvGettextInitialized', '=', 'true', ';', '}', 'return', 'dgettext', '(', 'EXV_PACKAGE', ',', 'str', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
324,"['nfs_idmap_lookup_id', '(', 'const', 'char', '*', 'name', ',', 'size_t', 'namelen', ',', 'const', 'char', '*', 'type', ',', '__u32', '*', 'id', ',', 'struct', 'idmap', '*', 'idmap', ')', '{', 'char', 'id_str', '[', 'NFS_UINT_MAXLEN', ']', ';', 'long', 'id_long', ';', 'ssize_t', 'data_size', ';', 'int', 'ret', '=', '0', ';', 'data_size', '=', 'nfs_idmap_get_key', '(', 'name', ',', 'namelen', ',', 'type', ',', 'id_str', ',', 'NFS_UINT_MAXLEN', ',', 'idmap', ')', ';', 'if', '(', 'data_size', '<=', '0', ')', '{', 'ret', '=', '-', 'EINVAL', ';', '}', 'else', '{', 'ret', '=', 'kstrtol', '(', 'id_str', ',', '10', ',', '&', 'id_long', ')', ';', '*', 'id', '=', '(', '__u32', ')', 'id_long', ';', '}', 'return', 'ret', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
325,"['ffm_write_data', '(', 'AVFormatContext', '*', 's', ',', 'const', 'uint8_t', '*', 'buf', ',', 'int', 'size', ',', 'int64_t', 'dts', ',', 'int', 'header', ')', '{', 'FFMContext', '*', 'ffm', '=', 's', '->', 'priv_data', ';', 'int', 'len', ';', 'if', '(', 'header', '&&', 'ffm', '->', 'frame_offset', '==', '0', ')', '{', 'ffm', '->', 'frame_offset', '=', 'ffm', '->', 'packet_ptr', '-', 'ffm', '->', 'packet', '+', 'FFM_HEADER_SIZE', ';', 'ffm', '->', 'dts', '=', 'dts', ';', '}', 'while', '(', 'size', '>', '0', ')', '{', 'len', '=', 'ffm', '->', 'packet_end', '-', 'ffm', '->', 'packet_ptr', ';', 'if', '(', 'len', '>', 'size', ')', 'len', '=', 'size', ';', 'memcpy', '(', 'ffm', '->', 'packet_ptr', ',', 'buf', ',', 'len', ')', ';', 'ffm', '->', 'packet_ptr', '+=', 'len', ';', 'buf', '+=', 'len', ';', 'size', '-=', 'len', ';', 'if', '(', 'ffm', '->', 'packet_ptr', '>=', 'ffm', '->', 'packet_end', ')', 'flush_packet', '(', 's', ')', ';', '}', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
326,"['TMX_TestStepOffset', '(', 'void', ')', '{', 'struct', 'timex', 'txc', ';', '/', '*', 'Zero', 'maxerror', 'and', 'check', ""it's"", 'reset', 'to', 'a', 'maximum', 'after', 'ADJ_SETOFFSET', '.', 'This', 'seems', 'to', 'be', 'the', 'only', 'way', 'how', 'to', 'verify', 'that', 'the', 'kernel', 'supports', 'the', 'ADJ_SETOFFSET', 'mode', 'as', 'it', ""doesn't"", 'return', 'an', 'error', 'on', 'txc', '.', 'modes', '=', 'ADJ_MAXERROR', ';', 'txc', '.', 'maxerror', '=', '0', ';', 'if', '(', 'adjtimex', '(', '&', 'txc', ')', '<', '0', '||', 'txc', '.', 'maxerror', '!=', '0', ')', 'return', '-', '1', ';', 'txc', '.', 'modes', '=', 'ADJ_SETOFFSET', ';', 'txc', '.', 'time', '.', 'tv_sec', '=', '0', ';', 'txc', '.', 'time', '.', 'tv_usec', '=', '0', ';', 'if', '(', 'adjtimex', '(', '&', 'txc', ')', '<', '0', '||', 'txc', '.', 'maxerror', '<', '100000', ')', 'return', '-', '1', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
327,"['ProcessPreview', '(', 'OFLibDlg', '*', 'd', ',', 'PreviewThread', '*', 'cur', ')', '{', 'char', '*', 'pt', ',', '*', 'name', ';', 'FILE', '*', 'final', ';', 'int', 'ch', ';', 'cur', '->', 'fi', '->', 'downloading_in_background', '=', 'false', ';', 'return', ';', 'rewind', '(', 'cur', '->', 'result', ')', ';', 'pt', '=', 'strrchr', '(', 'cur', '->', 'active', '->', 'url', ',', ""''"", ')', ';', 'fclose', '(', 'cur', '->', 'result', ')', ';', 'return', ';', '}', 'name', '=', 'galloc', '(', 'strlen', '(', 'getOFLibDir', '(', ')', ')', '+', 'strlen', '(', 'pt', ')', '+', '10', ')', ';', 'sprintf', '(', 'name', ',', '""""', ',', 'getOFLibDir', '(', ')', ',', 'pt', ')', ';', 'final', '=', 'fopen', '(', 'name', ',', '""""', ')', ';', 'if', '(', 'final', '==', 'NULL', ')', '{', 'fclose', '(', 'cur', '->', 'result', ')', ';', 'return', ';', '}', 'GDrawSetCursor', '(', 'd', '->', 'gw', ',', 'ct_watch', ')', ';', 'if', '(', 'cur', '->', 'is_image', ')', '{', 'while', '(', '(', 'ch', '=', 'getc', '(', 'cur', '->', 'result', ')', ')', '!=', 'EOF', ')', 'putc', '(', 'ch', ',', 'final', ')', ';', 'fclose', '(', 'final', ')', ';', 'fclose', '(', 'cur', '->', 'result', ')', ';', '}', 'else', '{', 'SplineFont', '*', 'sf', '=', '_ReadSplineFont', '(', 'cur', '->', 'result', ',', 'cur', '->', 'active', '->', 'url', ',', '0', ')', ';', 'if', '(', 'sf', '==', 'NULL', ')', '{', 'fclose', '(', 'final', ')', ';', 'unlink', '(', 'name', ')', ';', 'free', '(', 'name', ')', ';', 'GDrawSetCursor', '(', 'd', '->', 'gw', ',', 'ct_mypointer', ')', ';', 'return', ';', '}', 'pt', '=', 'strrchr', '(', 'name', ',', ""''"", ')', ';', 'if', '(', 'pt', '==', 'NULL', '||', 'pt', '<', 'strrchr', '(', 'name', ',', ""''"", ')', ')', 'strcat', '(', 'name', ',', '""""', ')', ';', 'strcpy', '(', 'pt', ',', '""""', ')', ';', 'SFDefaultImage', '(', 'sf', ',', 'name', ')', ';', 'SplineFontFree', '(', 'sf', ')', ';', '}', 'cur', '->', 'fi', '->', 'preview_filename', '=', 'copy', '(', 'strrchr', '(', 'name', ',', ""''"", ')', '+', '1', ')', ';', 'free', '(', 'name', ')', ';', 'DumpOFLibState', '(', '&', 'd', '->', 'all', ')', ';', 'GDrawSetCursor', '(', 'd', '->', 'gw', ',', 'ct_mypointer', ')', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
328,"['__lambda9_', '(', 'FsoTestGsmCallTest', '*', 'self', ',', 'GAsyncResult', '*', 'res', ',', 'GError', '*', '*', 'error', ')', '{', 'FreeSmartphoneGSMNetwork', '*', '_tmp0_', '=', 'NULL', ';', 'GAsyncResult', '*', '_tmp1_', '=', 'NULL', ';', 'GError', '*', '_inner_error_', '=', 'NULL', ';', '#line', '157', 'g_return_if_fail', '(', 'res', '!=', 'NULL', ')', ';', '#line', '157', '_tmp0_', '=', '(', '(', 'FsoTestGsmBaseTest', '*', ')', 'self', ')', '->', 'gsm_network', ';', '#line', '157', '_tmp1_', '=', 'res', ';', '#line', '157', 'free_smartphone_gsm_network_get_signal_strength_finish', '(', '_tmp0_', ',', '_tmp1_', ',', '&', '_inner_error_', ')', ';', '#line', '157', 'if', '(', '_inner_error_', '!=', 'NULL', ')', '{', '#line', '157', 'g_propagate_error', '(', 'error', ',', '_inner_error_', ')', ';', '#line', '157', 'return', ';', '#line', '2482', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
329,"['listCert', '(', 'char', '*', 'tokenName', ')', '{', 'CERTCertList', '*', 'certList', ';', 'CERTCertListNode', '*', 'cln', ';', 'PK11SlotInfo', '*', 'slot', '=', 'PK11_FindSlotByName', '(', 'tokenName', ')', ';', 'PK11SlotInfo', '*', 'internal_slot', ';', 'char', '*', 'internalTokenName', ';', 'if', '(', '!slot', ')', '{', 'errorRpt', '(', 'GENERAL_FAILURE', ',', 'getResourceString', '(', 'DBT_TOKEN_NAME', ')', ')', ';', 'return', ';', '}', 'if', '(', 'PK11_IsInternal', '(', 'slot', ')', ')', '{', 'internal_slot', '=', 'slot', ';', '}', 'else', '{', 'internal_slot', '=', 'PK11_GetInternalKeySlot', '(', ')', ';', 'if', '(', '!internal_slot', ')', '{', 'errorRpt', '(', 'GENERAL_FAILURE', ',', 'getResourceString', '(', 'DBT_INIT_FAIL', ')', ')', ';', 'return', ';', '}', '}', 'internalTokenName', '=', 'PK11_GetTokenName', '(', 'internal_slot', ')', ';', 'if', '(', 'PK11_NeedUserInit', '(', 'internal_slot', ')', '==', 'PR_TRUE', ')', '{', 'fprintf', '(', 'stdout', ',', '""""', ')', ';', '}', 'else', '{', 'fprintf', '(', 'stdout', ',', '""""', ')', ';', '}', 'certList', '=', 'PK11_ListCerts', '(', 'PK11CertListUnique', ',', 'NULL', ')', ';', 'if', '(', 'certList', '==', 'NULL', ')', '{', 'errorRpt', '(', 'GENERAL_FAILURE', ',', 'getResourceString', '(', 'DBT_CERT_LIST_FAIL', ')', ')', ';', '}', 'for', '(', 'cln', '=', 'CERT_LIST_HEAD', '(', 'certList', ')', ';', '!CERT_LIST_END', '(', 'cln', ',', 'certList', ')', ';', 'cln', '=', 'CERT_LIST_NEXT', '(', 'cln', ')', ')', '{', 'char', '*', 'certTokenName', '=', 'NULL', ';', 'if', '(', 'cln', '->', 'cert', '->', 'slot', '==', 'NULL', ')', '{', 'certTokenName', '=', 'internalTokenName', ';', '}', 'else', '{', 'certTokenName', '=', 'PK11_GetTokenName', '(', 'cln', '->', 'cert', '->', 'slot', ')', ';', '}', 'if', '(', 'strcmp', '(', 'tokenName', ',', 'certTokenName', ')', '==', '0', ')', '{', 'printCert', '(', 'cln', '->', 'cert', ',', '/', '*', 'showDetail', '=', '*', '/', 'PR_FALSE', ',', 'NULL', ')', ';', '}', '/', '*', '*', 'List', '""""', 'as', 'if', 'it', 'is', 'the', 'internal', '*', 'This', 'is', 'a', 'special', 'NSS', 'read', '-', 'only', 'token', 'for', 'storing', 'predefined', 'CA', 'else', 'if', '(', '(', 'strcmp', '(', 'tokenName', ',', 'internalTokenName', ')', '==', '0', ')', '&&', '(', 'strcmp', '(', 'certTokenName', ',', '""""', ')', '==', '0', ')', ')', '{', 'printCert', '(', 'cln', '->', 'cert', ',', '/', '*', 'showDetail', '=', '*', '/', 'PR_FALSE', ',', 'NULL', ')', ';', '}', '}', 'CERT_DestroyCertList', '(', 'certList', ')', ';', 'if', '(', 'PK11_IsInternal', '(', 'slot', ')', ')', '{', 'showCRL', '(', 'certdb', ',', 'SEC_CRL_TYPE', ')', ';', 'showCRL', '(', 'certdb', ',', 'SEC_KRL_TYPE', ')', ';', '}', 'if', '(', 'slot', '!=', 'internal_slot', ')', '{', 'PK11_FreeSlot', '(', 'internal_slot', ')', ';', '}', 'PK11_FreeSlot', '(', 'slot', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
330,"['l2t_seq_next', '(', 'struct', 'seq_file', '*', 'seq', ',', 'void', '*', 'v', ',', 'loff_t', '*', 'pos', ')', '{', 'v', '=', 'l2t_get_idx', '(', 'seq', ',', '*', 'pos', ')', ';', 'if', '(', 'v', ')', '++', '*', 'pos', ';', 'return', 'v', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
331,"['libmail_gpg_deletekey', '(', 'const', 'char', '*', 'gpgdir', ',', 'int', 'secret', ',', 'const', 'char', '*', 'fingerprint', ',', 'int', '(', '*', 'dump_func', ')', '(', 'const', 'char', '*', ',', 'size_t', ',', 'void', '*', ')', ',', 'void', '*', 'voidarg', ')', '{', 'char', '*', 'argvec', '[', '8', ']', ';', 'int', 'rc', ';', 'argvec', '[', '0', ']', '=', '""""', ';', 'argvec', '[', '1', ']', '=', '""""', ';', 'argvec', '[', '2', ']', '=', '""""', ';', 'argvec', '[', '3', ']', '=', 'secret', '?', '""""', ':', '""""', ';', 'argvec', '[', '4', ']', '=', '""""', ';', 'argvec', '[', '5', ']', '=', '""""', ';', 'argvec', '[', '6', ']', '=', '(', 'char', '*', ')', 'fingerprint', ';', 'argvec', '[', '7', ']', '=', '0', ';', 'if', '(', 'libmail_gpg_fork', '(', '&', 'libmail_gpg_stdin', ',', '&', 'libmail_gpg_stdout', ',', 'NULL', ',', 'gpgdir', ',', 'argvec', ')', '<', '0', ')', 'rc', '=', '-', '1', ';', '{', 'int', 'rc2', ';', 'rc', '=', 'dodeletekey', '(', 'dump_func', ',', 'voidarg', ')', ';', 'rc2', '=', 'libmail_gpg_cleanup', '(', ')', ';', 'if', '(', 'rc2', ')', 'rc', '=', 'rc2', ';', '}', 'return', '(', 'rc', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
332,"['entangle_camera_picker_finalize', '(', 'GObject', '*', 'object', ')', '{', 'EntangleCameraPicker', '*', 'picker', '=', 'ENTANGLE_CAMERA_PICKER', '(', 'object', ')', ';', 'EntangleCameraPickerPrivate', '*', 'priv', '=', 'picker', '->', 'priv', ';', 'ENTANGLE_DEBUG', '(', '""""', ')', ';', 'gtk_list_store_clear', '(', 'priv', '->', 'model', ')', ';', 'if', '(', 'priv', '->', 'cameras', ')', 'g_object_unref', '(', 'priv', '->', 'cameras', ')', ';', 'g_object_unref', '(', 'priv', '->', 'model', ')', ';', 'g_object_unref', '(', 'priv', '->', 'builder', ')', ';', 'G_OBJECT_CLASS', '(', 'entangle_camera_picker_parent_class', ')', '->', 'finalize', '(', 'object', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
333,"['vmlfb_alloc_vram_area', '(', 'struct', 'vram_area', '*', 'va', ',', 'unsigned', 'max_order', ',', 'unsigned', 'min_order', ')', '{', 'gfp_t', 'flags', ';', 'unsigned', 'long', 'i', ';', 'max_order', '++', ';', 'do', '{', '/', '*', '*', 'Really', 'try', 'hard', 'to', 'get', 'the', 'needed', 'memory', '.', '*', 'We', 'need', 'memory', 'below', 'the', 'first', '32MB', ',', 'so', '*', 'add', 'the', '__GFP_DMA', 'flag', 'that', 'guarantees', 'that', 'we', '*', 'below', 'the', 'first', '16MB', '.', 'flags', '=', '__GFP_DMA', '|', '__GFP_HIGH', '|', '__GFP_KSWAPD_RECLAIM', ';', 'va', '->', 'logical', '=', '__get_free_pages', '(', 'flags', ',', '--', 'max_order', ')', ';', '}', 'while', '(', 'va', '->', 'logical', '==', '0', '&&', 'max_order', '>', 'min_order', ')', ';', 'if', '(', '!va', '->', 'logical', ')', 'return', '-', 'ENOMEM', ';', 'va', '->', 'phys', '=', 'virt_to_phys', '(', '(', 'void', '*', ')', 'va', '->', 'logical', ')', ';', 'va', '->', 'size', '=', 'PAGE_SIZE', '<<', 'max_order', ';', 'va', '->', 'order', '=', 'max_order', ';', '/', '*', '*', 'It', 'seems', 'like', '__get_free_pages', 'only', 'ups', 'the', 'usage', '*', 'of', 'the', 'first', 'page', '.', 'This', ""doesn't"", 'work', 'with', 'fault', 'mapping', ',', '*', 'up', 'the', 'usage', 'count', 'once', 'more', '(', 'XXX', ':', 'should', 'use', 'split_page', '*', 'compound', 'page', ')', '.', 'memset', '(', '(', 'void', '*', ')', 'va', '->', 'logical', ',', '0x00', ',', 'va', '->', 'size', ')', ';', 'for', '(', 'i', '=', 'va', '->', 'logical', ';', 'i', '<', 'va', '->', 'logical', '+', 'va', '->', 'size', ';', 'i', '+=', 'PAGE_SIZE', ')', '{', 'get_page', '(', 'virt_to_page', '(', 'i', ')', ')', ';', '}', '/', '*', '*', 'Change', 'caching', 'policy', 'of', 'the', 'linear', 'kernel', 'map', 'to', '*', 'mapping', 'type', 'conflicts', 'with', 'user', '-', 'space', 'mappings', '.', 'set_pages_uc', '(', 'virt_to_page', '(', 'va', '->', 'logical', ')', ',', 'va', '->', 'size', '>>', 'PAGE_SHIFT', ')', ';', 'printk', '(', 'KERN_DEBUG', '""""', ',', 'va', '->', 'size', ',', 'va', '->', 'phys', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
334,"['PyFFContour_init', '(', 'PyFF_Contour', '*', 'self', ',', 'PyObject', '*', 'args', ',', 'PyObject', '*', 'kwds', ')', '{', 'int', 'quad', '=', '0', ';', 'if', '(', 'args', '!=', 'NULL', '&&', '!PyArg_ParseTuple', '(', 'args', ',', '""""', ',', '&', 'quad', ')', ')', 'return', '-', '1', ';', 'self', '->', 'is_quadratic', '=', '(', 'quad', '!=', '0', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
335,"['gst_asf_demux_add_video_stream', '(', 'GstASFDemux', '*', 'demux', ',', 'asf_stream_video_format', '*', 'video', ',', 'guint16', 'id', ',', 'guint8', '*', '*', 'p_data', ',', 'guint64', '*', 'p_size', ')', '{', 'GstTagList', '*', 'tags', '=', 'NULL', ';', 'GstBuffer', '*', 'extradata', '=', 'NULL', ';', 'GstPad', '*', 'src_pad', ';', 'GstCaps', '*', 'caps', ';', 'gchar', '*', 'str', ';', 'gchar', '*', 'name', '=', 'NULL', ';', 'gchar', '*', 'codec_name', '=', 'NULL', ';', 'gint', 'size_left', '=', 'video', '->', 'size', '-', '40', ';', 'name', '=', 'g_strdup_printf', '(', '""""', ',', 'demux', '->', 'num_video_streams', ')', ';', 'src_pad', '=', 'gst_pad_new_from_static_template', '(', '&', 'video_src_template', ',', 'name', ')', ';', 'g_free', '(', 'name', ')', ';', 'if', '(', 'size_left', ')', '{', 'GST_LOG', '(', '""""', ',', 'size_left', ')', ';', 'g_assert', '(', 'size_left', '<=', '*', 'p_size', ')', ';', 'gst_asf_demux_get_buffer', '(', '&', 'extradata', ',', 'size_left', ',', 'p_data', ',', 'p_size', ')', ';', '}', 'GST_DEBUG', '(', '""""', 'GST_FOURCC_FORMAT', ',', 'GST_FOURCC_ARGS', '(', 'video', '->', 'tag', ')', ')', ';', 'caps', '=', 'gst_riff_create_video_caps', '(', 'video', '->', 'tag', ',', 'NULL', ',', '(', 'gst_riff_strf_vids', '*', ')', 'video', ',', 'extradata', ',', 'NULL', ',', '&', 'codec_name', ')', ';', 'if', '(', 'caps', '==', 'NULL', ')', '{', 'caps', '=', 'gst_caps_new_simple', '(', '""""', ',', '""""', ',', 'G_TYPE_UINT', ',', 'video', '->', 'tag', ',', 'NULL', ')', ';', '}', 'else', '{', 'GstStructure', '*', 's', ';', 'gint', 'ax', ',', 'ay', ';', 's', '=', 'gst_asf_demux_get_metadata_for_stream', '(', 'demux', ',', 'id', ')', ';', 'if', '(', 'gst_structure_get_int', '(', 's', ',', '""""', ',', '&', 'ax', ')', '&&', 'gst_structure_get_int', '(', 's', ',', '""""', ',', '&', 'ay', ')', '&&', '(', 'ax', '>', '0', '&&', 'ay', '>', '0', ')', ')', '{', 'gst_caps_set_simple', '(', 'caps', ',', '""""', ',', 'GST_TYPE_FRACTION', ',', 'ax', ',', 'ay', ',', 'NULL', ')', ';', '}', 'else', '{', 'guint', 'ax', ',', 'ay', ';', 'GST_DEBUG', '(', '""""', 'GST_PTR_FORMAT', ',', 'demux', '->', 'global_metadata', ')', ';', 's', '=', 'demux', '->', 'global_metadata', ';', 'if', '(', 'gst_structure_get_uint', '(', 's', ',', '""""', ',', '&', 'ax', ')', '&&', 'gst_structure_get_uint', '(', 's', ',', '""""', ',', '&', 'ay', ')', ')', '{', 'GST_DEBUG', '(', '""""', ',', 'ax', ',', 'ay', ')', ';', 'if', '(', 'ax', '>', '0', '&&', 'ay', '>', '0', ')', 'gst_caps_set_simple', '(', 'caps', ',', '""""', ',', 'GST_TYPE_FRACTION', ',', 'ax', ',', 'ay', ',', 'NULL', ')', ';', '}', '}', 's', '=', 'gst_caps_get_structure', '(', 'caps', ',', '0', ')', ';', 'gst_structure_remove_field', '(', 's', ',', '""""', ')', ';', '}', 'str', '=', 'g_strdup_printf', '(', '""""', 'GST_FOURCC_FORMAT', ',', 'GST_FOURCC_ARGS', '(', 'video', '->', 'tag', ')', ')', ';', 'gst_caps_set_simple', '(', 'caps', ',', '""""', ',', 'G_TYPE_STRING', ',', 'str', ',', 'NULL', ')', ';', 'g_free', '(', 'str', ')', ';', 'if', '(', 'codec_name', ')', '{', 'tags', '=', 'gst_tag_list_new', '(', 'GST_TAG_VIDEO_CODEC', ',', 'codec_name', ',', 'NULL', ')', ';', 'g_free', '(', 'codec_name', ')', ';', '}', 'if', '(', 'extradata', ')', 'gst_buffer_unref', '(', 'extradata', ')', ';', 'GST_INFO', '(', 'GST_FOURCC_FORMAT', '""""', ',', 'demux', '->', 'num_video_streams', ',', 'id', ',', 'GST_FOURCC_ARGS', '(', 'video', '->', 'tag', ')', ',', 'video', '->', 'tag', ')', ';', '++', 'demux', '->', 'num_video_streams', ';', 'return', 'gst_asf_demux_setup_pad', '(', 'demux', ',', 'src_pad', ',', 'caps', ',', 'id', ',', 'TRUE', ',', 'tags', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
336,"['wilc1000_wlan_init', '(', 'struct', 'net_device', '*', 'dev', ',', 'perInterface_wlan_t', '*', 'p_nic', ')', '{', 'wilc_wlan_inp_t', 'nwi', ';', 'perInterface_wlan_t', '*', 'nic', '=', 'p_nic', ';', 'int', 'ret', '=', '0', ';', 'struct', 'wilc', '*', 'wl', '=', 'nic', '->', 'wilc', ';', 'if', '(', '!wl', '->', 'initialized', ')', '{', 'wl', '->', 'mac_status', '=', 'WILC_MAC_STATUS_INIT', ';', 'wl', '->', 'close', '=', '0', ';', 'wlan_init_locks', '(', 'dev', ')', ';', 'linux_to_wlan', '(', '&', 'nwi', ',', 'wl', ')', ';', 'ret', '=', 'wilc_wlan_init', '(', '&', 'nwi', ')', ';', 'if', '(', 'ret', '<', '0', ')', '{', 'PRINT_ER', '(', '""""', ')', ';', 'ret', '=', '-', 'EIO', ';', 'goto', '_fail_locks_', ';', '}', '#if', '(', '!defined', 'WILC_SDIO', ')', '||', '(', 'defined', 'WILC_SDIO_IRQ_GPIO', ')', 'if', '(', 'init_irq', '(', 'dev', ')', ')', '{', 'PRINT_ER', '(', '""""', ')', ';', 'ret', '=', '-', 'EIO', ';', 'goto', '_fail_locks_', ';', '}', 'ret', '=', 'wlan_initialize_threads', '(', 'dev', ')', ';', 'if', '(', 'ret', '<', '0', ')', '{', 'PRINT_ER', '(', '""""', ')', ';', 'ret', '=', '-', 'EIO', ';', 'goto', '_fail_wilc_wlan_', ';', '}', '#if', '(', 'defined', 'WILC_SDIO', ')', '&&', '(', '!defined', 'WILC_SDIO_IRQ_GPIO', ')', 'if', '(', 'enable_sdio_interrupt', '(', ')', ')', '{', 'PRINT_ER', '(', '""""', ')', ';', 'ret', '=', '-', 'EIO', ';', 'goto', '_fail_irq_init_', ';', '}', 'if', '(', 'linux_wlan_get_firmware', '(', 'nic', ')', ')', '{', 'PRINT_ER', '(', '""""', ')', ';', 'ret', '=', '-', 'EIO', ';', 'goto', '_fail_irq_enable_', ';', '}', 'ret', '=', 'linux_wlan_firmware_download', '(', 'wl', ')', ';', 'if', '(', 'ret', '<', '0', ')', '{', 'PRINT_ER', '(', '""""', ')', ';', 'ret', '=', '-', 'EIO', ';', 'goto', '_fail_irq_enable_', ';', '}', 'ret', '=', 'linux_wlan_start_firmware', '(', 'nic', ')', ';', 'if', '(', 'ret', '<', '0', ')', '{', 'PRINT_ER', '(', '""""', ')', ';', 'ret', '=', '-', 'EIO', ';', 'goto', '_fail_irq_enable_', ';', '}', 'wilc_bus_set_max_speed', '(', ')', ';', 'if', '(', 'wilc_wlan_cfg_get', '(', '1', ',', 'WID_FIRMWARE_VERSION', ',', '1', ',', '0', ')', ')', '{', 'int', 'size', ';', 'char', 'Firmware_ver', '[', '20', ']', ';', 'size', '=', 'wilc_wlan_cfg_get_val', '(', 'WID_FIRMWARE_VERSION', ',', 'Firmware_ver', ',', 'sizeof', '(', 'Firmware_ver', ')', ')', ';', 'Firmware_ver', '[', 'size', ']', '=', ""''"", ';', 'PRINT_D', '(', 'INIT_DBG', ',', '""""', ',', 'Firmware_ver', ')', ';', '}', 'ret', '=', 'linux_wlan_init_test_config', '(', 'dev', ',', 'wl', ')', ';', 'if', '(', 'ret', '<', '0', ')', '{', 'PRINT_ER', '(', '""""', ')', ';', 'ret', '=', '-', 'EIO', ';', 'goto', '_fail_fw_start_', ';', '}', 'wl', '->', 'initialized', '=', 'true', ';', '_fail_fw_start_', ':', 'wilc_wlan_stop', '(', ')', ';', '_fail_irq_enable_', ':', '#if', '(', 'defined', 'WILC_SDIO', ')', '&&', '(', '!defined', 'WILC_SDIO_IRQ_GPIO', ')', 'disable_sdio_interrupt', '(', ')', ';', '_fail_irq_init_', ':', '#if', '(', '!defined', 'WILC_SDIO', ')', '||', '(', 'defined', 'WILC_SDIO_IRQ_GPIO', ')', 'deinit_irq', '(', 'dev', ')', ';', 'wlan_deinitialize_threads', '(', 'dev', ')', ';', '_fail_wilc_wlan_', ':', 'wilc_wlan_cleanup', '(', 'dev', ')', ';', '_fail_locks_', ':', 'wlan_deinit_locks', '(', 'dev', ')', ';', 'PRINT_ER', '(', '""""', ')', ';', '}', 'else', '{', 'PRINT_D', '(', 'INIT_DBG', ',', '""""', ')', ';', '}', 'return', 'ret', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
337,"['PR_RWLock_Wlock', '(', 'PRRWLock', '*', 'rwlock', ')', '{', '#if', 'defined', '(', 'DEBUG', ')', 'PRThread', '*', 'me', '=', 'PR_GetCurrentThread', '(', ')', ';', '#if', 'defined', '(', 'HAVE_UNIX98_RWLOCK', ')', '||', 'defined', '(', 'HAVE_UI_RWLOCK', ')', 'int', 'err', ';', '#ifdef', '/', '*', '*', 'assert', 'that', 'rank', 'ordering', 'is', 'not', 'violated', ';', 'the', 'rank', 'of', ""''"", '*', 'be', 'equal', 'to', 'or', 'greater', 'than', 'the', 'highest', 'rank', 'of', 'all', 'the', 'locks', 'held', '*', 'the', 'thread', '.', 'PR_ASSERT', '(', '(', 'rwlock', '->', 'rw_rank', '==', 'PR_RWLOCK_RANK_NONE', ')', '||', '(', 'rwlock', '->', 'rw_rank', '>=', '_PR_GET_THREAD_RWLOCK_RANK', '(', ')', ')', ')', ';', '#if', 'defined', '(', 'HAVE_UNIX98_RWLOCK', ')', '||', 'defined', '(', 'HAVE_UI_RWLOCK', ')', 'err', '=', 'RWLOCK_WRLOCK', '(', '&', 'rwlock', '->', 'rw_lock', ')', ';', 'PR_ASSERT', '(', 'err', '==', '0', ')', ';', 'PR_Lock', '(', 'rwlock', '->', 'rw_lock', ')', ';', '/', '*', '*', 'wait', 'if', 'read', 'while', '(', 'rwlock', '->', 'rw_lock_cnt', '!=', '0', ')', '{', 'rwlock', '->', 'rw_writer_cnt', '++', ';', 'PR_WaitCondVar', '(', 'rwlock', '->', 'rw_writer_waitq', ',', 'PR_INTERVAL_NO_TIMEOUT', ')', ';', 'rwlock', '->', 'rw_writer_cnt', '--', ';', '}', '/', '*', '*', 'apply', 'write', 'rwlock', '->', 'rw_lock_cnt', '--', ';', 'PR_ASSERT', '(', 'rwlock', '->', 'rw_lock_cnt', '==', '-', '1', ')', ';', '#ifdef', 'PR_ASSERT', '(', 'me', '!=', 'NULL', ')', ';', 'rwlock', '->', 'rw_owner', '=', 'me', ';', 'PR_Unlock', '(', 'rwlock', '->', 'rw_lock', ')', ';', '#ifdef', '/', '*', '*', 'update', ""thread's"", 'lock', 'if', '(', 'rwlock', '->', 'rw_rank', '!=', 'PR_RWLOCK_RANK_NONE', ')', '_PR_SET_THREAD_RWLOCK_RANK', '(', 'rwlock', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
338,"['guess_got_query_key', '(', 'enum', 'udp_ping_ret', 'type', ',', 'const', 'struct', 'gnutella_node', '*', 'n', ',', 'void', '*', 'data', ')', '{', 'struct', 'guess_qk_context', '*', 'ctx', '=', 'data', ';', 'guess_t', '*', 'gq', ';', 'const', 'gnet_host_t', '*', 'host', '=', 'ctx', '->', 'host', ';', 'gq', '=', 'guess_is_alive', '(', 'ctx', '->', 'gid', ')', ';', 'if', '(', 'NULL', '==', 'gq', ')', '{', 'if', '(', 'UDP_PING_EXPIRED', '==', 'type', '||', 'UDP_PING_TIMEDOUT', '==', 'type', ')', 'guess_qk_context_free', '(', 'ctx', ')', ';', 'return', ';', '}', 'g_assert', '(', 'atom_is_host', '(', 'ctx', '->', 'host', ')', ')', ';', 'switch', '(', 'type', ')', '{', 'case', 'UDP_PING_TIMEDOUT', ':', '/', '*', '*', 'Maybe', 'we', 'got', 'the', 'query', 'key', 'through', 'a', 'ping', 'sent', 'separately', '(', '*', 'the', 'background', 'GUESS', 'discovery', 'logic', ')', '?', '{', 'struct', 'qkdata', '*', 'qk', '=', 'get_qkdata', '(', 'host', ')', ';', 'if', '(', 'qk', '!=', 'NULL', '&&', 'qk', '->', 'length', '!=', '0', '&&', 'delta_time', '(', 'tm_time', '(', ')', ',', 'qk', '->', 'last_update', ')', '<=', ')', '{', 'if', '(', 'GNET_PROPERTY', '(', 'guess_client_debug', ')', '>', '2', ')', '{', 'g_info', '(', '""""', ',', 'nid_to_string', '(', '&', 'gq', '->', 'gid', ')', ',', 'gnet_host_to_string', '(', 'host', ')', ')', ';', '}', 'guess_send_query', '(', 'gq', ',', 'host', ')', ';', 'guess_qk_context_free', '(', 'ctx', ')', ';', 'break', ';', '}', '/', '*', '*', 'If', 'we', ""don't"", 'have', 'the', 'host', 'in', 'the', 'query', 'key', 'cache', ',', 'it', 'may', '*', 'its', 'IP', ':', 'port', 'is', 'plain', 'wrong', '.', 'LimeWire', 'nodes', 'are', 'known', '*', 'generate', 'wrong', 'pongs', 'for', 'incoming', 'GUESS', 'ultrapeer', '*', 'because', 'they', 'use', 'the', 'port', 'of', 'the', 'incoming', 'TCP', 'connection', '*', 'of', 'parsing', 'the', 'Node', ':', 'header', 'from', 'the', 'handshake', 'to', 'gather', '*', 'proper', 'listening', 'port', '.', 'if', '(', 'NULL', '==', 'qk', ')', '{', 'if', '(', 'GNET_PROPERTY', '(', 'guess_client_debug', ')', '>', '2', ')', '{', 'g_debug', '(', '""""', ',', 'nid_to_string', '(', '&', 'gq', '->', 'gid', ')', ',', 'gnet_host_to_string', '(', 'host', ')', ')', ';', '}', 'guess_alien_host', '(', 'gq', ',', 'host', ',', 'FALSE', ')', ';', 'guess_qk_context_free', '(', 'ctx', ')', ';', 'goto', 'no_query_key', ';', '}', '}', 'if', '(', 'GNET_PROPERTY', '(', 'guess_client_debug', ')', '>', '2', ')', '{', 'g_debug', '(', '""""', ',', 'nid_to_string', '(', '&', 'gq', '->', 'gid', ')', ',', 'gnet_host_to_string', '(', 'host', ')', ')', ';', '}', '/', '*', '*', 'Mark', 'timeout', 'from', 'host', '.', 'This', 'will', 'delay', 'further', 'usage', 'of', '*', 'host', 'by', 'other', 'queries', '.', 'guess_timeout_from', '(', 'host', ')', ';', 'aging_remove', '(', 'guess_qk_reqs', ',', 'host', ')', ';', 'case', 'UDP_PING_EXPIRED', ':', 'guess_qk_context_free', '(', 'ctx', ')', ';', 'goto', 'no_query_key', ';', 'case', 'UDP_PING_REPLY', ':', 'if', 'G_UNLIKELY', '(', 'NULL', '==', 'link_cache', ')', 'break', ';', 'guess_traffic_from', '(', 'host', ')', ';', 'if', '(', 'guess_extract_qk', '(', 'n', ',', 'host', ')', ')', '{', 'if', '(', 'GNET_PROPERTY', '(', 'guess_client_debug', ')', '>', '2', ')', '{', 'g_debug', '(', '""""', ',', 'nid_to_string', '(', '&', 'gq', '->', 'gid', ')', ',', 'gnet_host_to_string', '(', 'host', ')', ')', ';', '}', 'guess_send_query', '(', 'gq', ',', 'host', ')', ';', '}', 'else', '{', 'uint16', 'port', '=', 'peek_le16', '(', '&', 'n', '->', 'data', '[', '0', ']', ')', ';', 'host_addr_t', 'addr', '=', 'guess_extract_host_addr', '(', 'n', ')', ';', '/', '*', '*', 'This', 'is', 'probably', 'a', 'batch', 'of', 'Pong', 'messages', ""we're"", 'getting', '*', 'reply', 'from', 'our', 'Ping', '.', 'if', '(', 'GNET_PROPERTY', '(', 'guess_client_debug', ')', '>', '4', ')', '{', 'g_debug', '(', '""""', ',', 'nid_to_string', '(', '&', 'gq', '->', 'gid', ')', ',', 'host_addr_port_to_string', '(', 'addr', ',', 'port', ')', ',', 'gnet_host_to_string', '(', 'host', ')', ')', ';', '}', '/', '*', '*', 'If', 'it', 'is', 'a', 'pong', 'for', 'itself', ',', 'and', 'we', ""don't"", 'know', 'the', '*', 'key', 'for', 'the', 'host', 'yet', ',', 'then', 'we', 'got', 'a', 'plain', 'pong', '*', 'the', 'host', 'did', 'not', 'understand', 'the', '""""', 'GGEP', 'key', 'in', 'the', 'ping', '.', '*', '*', 'This', 'is', 'not', 'a', 'GUESS', 'host', 'so', 'remove', 'it', 'from', 'the', 'cache', '.', 'if', '(', 'gnet_host_get_port', '(', 'host', ')', '==', 'port', '&&', 'host_addr_equal', '(', 'gnet_host_get_addr', '(', 'host', ')', ',', 'addr', ')', ')', '{', 'struct', 'qkdata', '*', 'qk', '=', 'get_qkdata', '(', 'host', ')', ';', 'if', '(', 'NULL', '==', 'qk', '||', '0', '==', 'qk', '->', 'length', ')', '{', 'guess_alien_host', '(', 'gq', ',', 'host', ',', 'TRUE', ')', ';', '}', 'if', '(', 'qk', '!=', 'NULL', ')', 'delete_qkdata', '(', 'host', ')', ';', 'guess_remove_link_cache', '(', 'host', ')', ';', 'goto', 'no_query_key', ';', '}', '}', 'guess_extract_ipp', '(', 'gq', ',', 'n', ',', 'host', ')', ';', 'break', ';', '}', 'return', ';', 'no_query_key', ':', 'guess_iterate', '(', 'gq', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
339,"['on_copy_text_messages_activate', '(', 'GtkMenuItem', '*', 'menuitem', ',', 'gpointer', 'user_data', ')', '{', 'GSQL_TRACE_FUNC', ';', 'GtkTreeView', '*', 'treeview', '=', 'user_data', ';', 'GtkTreeSelection', '*', 'sel', ';', 'GtkTreeModel', '*', 'model', ';', 'GdkDisplay', '*', 'disp', ';', 'GtkClipboard', '*', 'clip', ';', 'GtkTreeIter', 'iter', ';', 'gchar', '*', 'body_message', ';', 'gchar', '*', 'tmp', ';', 'sel', '=', 'gtk_tree_view_get_selection', '(', 'treeview', ')', ';', 'model', '=', 'gtk_tree_view_get_model', '(', 'treeview', ')', ';', 'gtk_tree_selection_set_mode', '(', 'sel', ',', 'GTK_SELECTION_SINGLE', ')', ';', 'if', '(', '!gtk_tree_selection_get_selected', '(', 'sel', ',', '&', 'model', ',', '&', 'iter', ')', ')', '/', '/', 'have', 'no', 'one', 'selected', '.', 'return', ';', 'gtk_tree_model_get', '(', 'model', ',', '\t', '&', 'iter', ',', '3', ',', '&', 'body_message', ',', '-', '1', ')', ';', 'gtk_tree_selection_set_mode', '(', 'sel', ',', 'GTK_SELECTION_MULTIPLE', ')', ';', 'pango_parse_markup', '(', 'body_message', ',', '-', '1', ',', '0', ',', 'NULL', ',', '&', 'tmp', ',', 'NULL', ',', 'NULL', ')', ';', 'body_message', '=', 'tmp', ';', 'disp', '=', 'gdk_display_get_default', '(', ')', ';', 'clip', '=', 'gtk_clipboard_get_for_display', '(', 'disp', ',', 'GDK_SELECTION_CLIPBOARD', ')', ';', 'gtk_clipboard_set_text', '(', 'clip', ',', 'body_message', ',', 'GSQL_MESSAGE_LEN', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
340,"['rhcs_parse_config_info', '(', 'struct', 'pluginDevice', '*', 'sd', ',', 'StonithNVpair', '*', 'info', ')', '{', 'char', '*', '\t\tkey', ';', 'char', '*', '\t\tvalue', ';', 'StonithNVpair', '*', '\tnv', ';', 'sd', '->', 'hostlist', '=', 'NULL', ';', 'sd', '->', 'cmd_opts', '=', 'g_hash_table_new', '(', 'g_str_hash', ',', 'g_str_equal', ')', ';', '/', '*', 'TODO', ':', 'Maybe', 'treat', '""""', 'as', 'delimeters', 'too', 'for', '(', 'nv', '=', 'info', ';', 'nv', '->', 's_name', ';', 'nv', '++', ')', '{', 'if', '(', '!nv', '->', 's_name', '||', '!nv', '->', 's_value', ')', '{', 'continue', ';', '}', 'key', '=', 'STRDUP', '(', 'nv', '->', 's_name', ')', ';', 'if', '(', '!key', ')', '{', 'goto', 'err_mem', ';', '}', 'value', '=', 'STRDUP', '(', 'nv', '->', 's_value', ')', ';', 'if', '(', '!value', ')', '{', 'FREE', '(', 'key', ')', ';', 'goto', 'err_mem', ';', '}', 'if', '(', '!strcmp', '(', 'key', ',', '""""', ')', ')', '{', 'sd', '->', 'hostlist', '=', 'value', ';', 'FREE', '(', 'key', ')', ';', '}', 'else', '{', 'g_hash_table_insert', '(', 'sd', '->', 'cmd_opts', ',', 'key', ',', 'value', ')', ';', '}', '}', 'return', '(', 'S_OK', ')', ';', 'err_mem', ':', 'LOG', '(', 'PIL_CRIT', ',', '""""', ',', '__FUNCTION__', ')', ';', 'rhcs_unconfig', '(', 'sd', ')', ';', 'return', '(', 'S_OOPS', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
341,"['AcpiDsDoImplicitReturn', '(', 'ACPI_OPERAND_OBJECT', '*', 'ReturnDesc', ',', 'ACPI_WALK_STATE', '*', 'WalkState', ',', 'BOOLEAN', 'AddReference', ')', '{', 'ACPI_FUNCTION_NAME', '(', 'DsDoImplicitReturn', ')', ';', '/', '*', '*', 'Slack', 'must', 'be', 'enabled', 'for', 'this', 'feature', ',', 'and', 'we', '*', 'have', 'a', 'valid', 'return', 'if', '(', '(', '!AcpiGbl_EnableInterpreterSlack', ')', '||', '(', '!ReturnDesc', ')', ')', '{', 'return', '(', 'FALSE', ')', ';', '}', 'ACPI_DEBUG_PRINT', '(', '(', 'ACPI_DB_DISPATCH', ',', '""""', ',', 'ReturnDesc', ',', 'WalkState', '->', 'ImplicitReturnObj', ')', ')', ';', '/', '*', '*', 'Delete', 'any', '""""', 'implicit', 'return', 'value', 'first', '.', 'However', ',', '*', 'complex', 'statements', ',', 'the', 'implicit', 'return', 'value', 'can', '*', 'bubbled', 'up', 'several', 'levels', ',', 'so', 'we', ""don't"", 'clear', 'the', 'value', 'if', '*', 'is', 'the', 'same', 'as', 'the', 'ReturnDesc', '.', 'if', '(', 'WalkState', '->', 'ImplicitReturnObj', ')', '{', 'if', '(', 'WalkState', '->', 'ImplicitReturnObj', '==', 'ReturnDesc', ')', '{', 'return', '(', 'TRUE', ')', ';', '}', 'AcpiDsClearImplicitReturn', '(', 'WalkState', ')', ';', '}', 'WalkState', '->', 'ImplicitReturnObj', '=', 'ReturnDesc', ';', 'if', '(', 'AddReference', ')', '{', 'AcpiUtAddReference', '(', 'ReturnDesc', ')', ';', '}', 'return', '(', 'TRUE', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
342,"['tagtoname', '(', 'char', 'const', 'tag', '[', ']', ',', 'char', 'const', '*', '&', 't', ')', '{', 'char', 'const', '*', 's', ';', 'for', '(', 's', '=', 'tag', ';', 'isspace', '(', '*', 's', ')', ';', 's', '++', ')', ';', 'for', '(', 't', '=', 's', ';', '(', '*', 't', ')', '&&', '(', '(', '*', 't', ')', '!=', ""''"", ')', '&&', '(', '(', '*', 't', ')', '!=', ""''"", ')', '&&', '!isspace', '(', '*', 't', ')', ';', '++', 't', ')', ';', 'return', 'GUTF8String', '(', 's', ',', 't', '-', 's', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
343,"['child_watch', '(', 'GPid', 'pid', ',', 'gint', 'status', ',', 'gpointer', 'data', ')', '{', 'GtkTextBuffer', '*', 'buffer', ';', 'GtkTextIter', 'iter', ';', 'gchar', '*', 'tmpc', ',', '*', 'str', ',', 'buf', '[', '5', ']', ';', 'sprintf', '(', 'buf', ',', '""""', ',', 'WEXITSTATUS', '(', 'status', ')', ')', ';', 'str', '=', 'g_strconcat', '(', '_', '(', '""""', ')', ',', 'buf', ',', '""""', ',', 'NULL', ')', ';', 'buffer', '=', 'gtk_text_view_get_buffer', '(', '(', 'GtkTextView', '*', ')', 'data', ')', ';', 'if', '(', 'status', '==', '0', ')', '{', 'gtk_text_buffer_insert_at_cursor', '(', 'buffer', ',', 'str', ',', '-', '1', ')', ';', '}', 'else', '{', 'gtk_text_buffer_get_end_iter', '(', 'buffer', ',', '&', 'iter', ')', ';', 'gtk_text_buffer_insert_with_tags_by_name', '(', 'buffer', ',', '&', 'iter', ',', 'str', ',', '-', '1', ',', '""""', ',', 'NULL', ')', ';', 'tmpc', '=', 'g_strconcat', '(', 'error_list', ',', 'str', ',', 'NULL', ')', ';', 'g_free', '(', 'error_list', ')', ';', 'error_list', '=', 'tmpc', ';', 'had_error', '=', 'TRUE', ';', '}', 'scroll_to_end', '(', '(', 'GtkTextView', '*', ')', 'data', ',', 'FALSE', ')', ';', 'if', '(', 'config_log', ')', 'fputs', '(', 'str', ',', 'log_file', ')', ';', 'g_free', '(', 'str', ')', ';', 'rsync_cleanup', '(', 'NULL', ')', ';', 'must_scroll', '=', 'TRUE', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
344,"['_e_mod_ind_win_cb_menu_pre', '(', 'void', '*', 'data', ',', 'E_Menu', '*', 'mn', ')', '{', 'Ind_Win', '*', 'iwin', ';', 'E_Menu_Item', '*', 'mi', ';', 'if', '(', '!', '(', 'iwin', '=', 'data', ')', ')', 'return', ';', 'e_menu_pre_activate_callback_set', '(', 'mn', ',', 'NULL', ',', 'NULL', ')', ';', 'mi', '=', 'e_menu_item_new', '(', 'mn', ')', ';', 'e_menu_item_label_set', '(', 'mi', ',', '_', '(', '""""', ')', ')', ';', 'e_util_menu_item_theme_icon_set', '(', 'mi', ',', '""""', ')', ';', 'e_menu_item_callback_set', '(', 'mi', ',', '_e_mod_ind_win_cb_menu_contents', ',', 'iwin', ')', ';', 'mi', '=', 'e_menu_item_new', '(', 'mn', ')', ';', 'if', '(', 'iwin', '->', 'gadcon', '->', 'editing', ')', 'e_menu_item_label_set', '(', 'mi', ',', '_', '(', '""""', ')', ')', ';', 'e_menu_item_label_set', '(', 'mi', ',', '_', '(', '""""', ')', ')', ';', 'e_util_menu_item_theme_icon_set', '(', 'mi', ',', '""""', ')', ';', 'e_menu_item_callback_set', '(', 'mi', ',', '_e_mod_ind_win_cb_menu_edit', ',', 'iwin', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
345,"['insertRowBefore', '(', 'unsigned', 'row_', ',', 'const', 'MSBinaryVector', '&', 'aBinaryVector_', ')', '{', 'if', '(', 'row_', '+', '1', '>', 'rows', '(', ')', ')', 'return', '*', 'this', ';', 'if', '(', 'aBinaryVector_', '.', 'length', '(', ')', '!=', 'columns', '(', ')', ')', '{', 'error', '(', '""""', ')', ';', 'return', '*', 'this', ';', '}', 'unsigned', 'newLength', '=', '(', 'rows', '(', ')', '+', '1', ')', '*', 'columns', '(', ')', ';', 'MSTypeData', '<', 'unsigned', 'char', ',', 'MSAllocator', '<', 'unsigned', 'char', '>', '>', '*', 'd', '=', 'MSTypeData', '<', 'unsigned', 'char', ',', 'MSAllocator', '<', 'unsigned', 'char', '>', '>', ':', ':', 'allocateWithLength', '(', 'newLength', ')', ';', 'unsigned', 'char', '*', 'dp', '=', 'd', '->', 'elements', '(', ')', ';', 'unsigned', 'char', '*', 'mp', '=', 'data', '(', ')', ';', 'unsigned', 'char', '*', 'vp', '=', 'aBinaryVector_', '.', 'data', '(', ')', ';', 'unsigned', 'i', ',', 'j', ';', 'for', '(', 'j', '=', '0', ';', 'j', '<', 'rows', '(', ')', '+', '1', ';', 'j', '++', ')', '{', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'columns', '(', ')', ';', 'i', '++', ')', '*', 'dp', '++', '=', '(', 'j', '==', 'row_', ')', '?', '*', 'vp', '++', ':', '*', 'mp', '++', ';', '}', 'freeData', '(', ')', ';', '_pData', '=', 'd', ';', '_rows', '++', ';', '_count', '=', 'newLength', ';', 'changed', '(', ')', ';', 'return', '*', 'this', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
346,"['vorbis_inverse_coupling', '(', 'float', '*', 'mag', ',', 'float', '*', 'ang', ',', 'int', 'blocksize', ')', '{', 'int', 'i', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'blocksize', ';', 'i', '++', ')', '{', 'if', '(', 'mag', '[', 'i', ']', '>', '0', '.', '0', ')', '{', 'if', '(', 'ang', '[', 'i', ']', '>', '0', '.', '0', ')', '{', 'ang', '[', 'i', ']', '=', 'mag', '[', 'i', ']', '-', 'ang', '[', 'i', ']', ';', '}', 'else', '{', 'float', 'temp', '=', 'ang', '[', 'i', ']', ';', 'ang', '[', 'i', ']', '=', 'mag', '[', 'i', ']', ';', 'mag', '[', 'i', ']', '+=', 'temp', ';', '}', '}', 'else', '{', 'if', '(', 'ang', '[', 'i', ']', '>', '0', '.', '0', ')', '{', 'ang', '[', 'i', ']', '+=', 'mag', '[', 'i', ']', ';', '}', 'else', '{', 'float', 'temp', '=', 'ang', '[', 'i', ']', ';', 'ang', '[', 'i', ']', '=', 'mag', '[', 'i', ']', ';', 'mag', '[', 'i', ']', '-=', 'temp', ';', '}', '}', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
347,"['GrowHeap', '(', 'Length', 'n', ')', '{', 'ASSERT', '(', 'kMaxPages', '>=', 'kMinSystemAlloc', ')', ';', 'if', '(', 'n', '>', 'kMaxValidPages', ')', 'return', 'false', ';', 'Length', 'ask', '=', '(', 'n', '>', 'kMinSystemAlloc', ')', '?', 'n', ':', 'static_cast', '<', 'Length', '>', '(', 'kMinSystemAlloc', ')', ';', 'size_t', 'actual_size', ';', 'void', '*', 'ptr', '=', 'NULL', ';', 'if', '(', 'EnsureLimit', '(', 'ask', ')', ')', '{', 'ptr', '=', 'TCMalloc_SystemAlloc', '(', 'ask', '<<', 'kPageShift', ',', '&', 'actual_size', ',', 'kPageSize', ')', ';', '}', 'if', '(', 'ptr', '==', 'NULL', ')', '{', 'if', '(', 'n', '<', 'ask', ')', '{', '/', '/', 'Try', 'growing', 'just', '""""', 'ask', '=', 'n', ';', 'if', '(', 'EnsureLimit', '(', 'ask', ')', ')', '{', 'ptr', '=', 'TCMalloc_SystemAlloc', '(', 'ask', '<<', 'kPageShift', ',', '&', 'actual_size', ',', 'kPageSize', ')', ';', '}', '}', 'if', '(', 'ptr', '==', 'NULL', ')', 'return', 'false', ';', '}', 'ask', '=', 'actual_size', '>>', 'kPageShift', ';', 'RecordGrowth', '(', 'ask', '<<', 'kPageShift', ')', ';', 'uint64_t', 'old_system_bytes', '=', 'stats_', '.', 'system_bytes', ';', 'stats_', '.', 'system_bytes', '+=', '(', 'ask', '<<', 'kPageShift', ')', ';', 'const', 'PageID', 'p', '=', 'reinterpret_cast', '<', 'uintptr_t', '>', '(', 'ptr', ')', '>>', 'kPageShift', ';', 'ASSERT', '(', 'p', '>', '0', ')', ';', '/', '/', 'If', 'we', 'have', 'already', 'a', 'lot', 'of', 'pages', 'allocated', ',', 'just', 'pre', 'allocate', 'a', 'bunch', '/', '/', 'memory', 'for', 'the', 'page', 'map', '.', 'This', 'prevents', 'fragmentation', 'by', 'pagemap', '/', '/', 'when', 'a', 'program', 'keeps', 'allocating', 'and', 'freeing', 'large', 'blocks', '.', 'if', '(', 'old_system_bytes', '<', '&&', 'stats_', '.', 'system_bytes', '>=', 'kPageMapBigAllocationThreshold', ')', '{', 'pagemap_', '.', 'PreallocateMoreMemory', '(', ')', ';', '}', '/', '/', 'Make', 'sure', 'pagemap_', 'has', 'entries', 'for', 'all', 'of', 'the', 'new', 'pages', '.', '/', '/', 'Plus', 'ensure', 'one', 'before', 'and', 'one', 'after', 'so', 'coalescing', '/', '/', 'does', 'not', 'need', 'bounds', '-', 'checking', '.', 'if', '(', 'pagemap_', '.', 'Ensure', '(', 'p', '-', '1', ',', 'ask', '+', '2', ')', ')', '{', '/', '/', 'Pretend', 'the', 'new', 'area', 'is', 'allocated', 'and', 'then', 'Delete', '(', ')', 'it', 'to', '/', '/', 'any', 'necessary', 'coalescing', 'to', 'occur', '.', 'Span', '*', 'span', '=', 'NewSpan', '(', 'p', ',', 'ask', ')', ';', 'RecordSpan', '(', 'span', ')', ';', 'Delete', '(', 'span', ')', ';', 'ASSERT', '(', 'Check', '(', ')', ')', ';', 'return', 'true', ';', '}', 'else', '{', '/', '/', 'We', 'could', 'not', 'allocate', 'memory', 'within', '/', '/', 'TODO', ':', 'Once', 'we', 'can', 'return', 'memory', 'to', 'the', 'system', ',', 'return', 'the', 'new', 'return', 'false', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
348,"['Outline_cellhd', '(', 'View', '*', 'view', ',', 'struct', 'Cell_head', '*', 'cellhd', ')', '{', 'int', 'row', ',', 'col', ';', 'int', 'top', ',', 'bottom', ',', 'left', ',', 'right', ';', 'row', '=', 'northing_to_row', '(', '&', 'view', '->', 'cell', '.', 'head', ',', 'cellhd', '->', 'north', ')', '+', '.', '5', ';', 'top', '=', 'row_to_view', '(', 'view', ',', 'row', ')', ';', 'if', '(', 'top', '<', 'view', '->', 'top', ')', 'top', '=', 'view', '->', 'top', ';', 'col', '=', 'easting_to_col', '(', '&', 'view', '->', 'cell', '.', 'head', ',', 'cellhd', '->', 'west', ')', '+', '.', '5', ';', 'left', '=', 'col_to_view', '(', 'view', ',', 'col', ')', ';', 'if', '(', 'left', '<', 'view', '->', 'left', ')', 'left', '=', 'view', '->', 'left', ';', 'row', '=', 'northing_to_row', '(', '&', 'view', '->', 'cell', '.', 'head', ',', 'cellhd', '->', 'south', ')', '+', '.', '5', ';', 'bottom', '=', 'row_to_view', '(', 'view', ',', 'row', ')', ';', 'if', '(', 'bottom', '>', 'view', '->', 'bottom', ')', 'bottom', '=', 'view', '->', 'bottom', ';', 'col', '=', 'easting_to_col', '(', '&', 'view', '->', 'cell', '.', 'head', ',', 'cellhd', '->', 'east', ')', '+', '.', '5', ';', 'right', '=', 'col_to_view', '(', 'view', ',', 'col', ')', ';', 'if', '(', 'right', '>', 'view', '->', 'right', ')', 'right', '=', 'view', '->', 'right', ';', 'Outline_box', '(', 'top', ',', 'bottom', ',', 'left', ',', 'right', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
349,"['img_set_blush', '(', 'img', ',', 'brush', ')', 'VALUE', 'img', ',', 'brush', ';', '{', 'gdImagePtr', 'im', ',', 'br', ';', 'Data_Get_Struct', '(', 'img', ',', 'gdImage', ',', 'im', ')', ';', 'image_req', '(', 'brush', ')', ';', 'Data_Get_Struct', '(', 'brush', ',', 'gdImage', ',', 'br', ')', ';', 'gdImageSetBrush', '(', 'im', ',', 'br', ')', ';', 'return', 'img', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
350,"['process_psqlrc', '(', 'char', '*', 'argv0', ')', '{', 'char\t\thome', '[', 'MAXPGPATH', ']', ';', 'char\t\trc_file', '[', 'MAXPGPATH', ']', ';', 'char\t\tmy_exec_path', '[', 'MAXPGPATH', ']', ';', 'char\t\tetc_path', '[', 'MAXPGPATH', ']', ';', 'find_my_exec', '(', 'argv0', ',', 'my_exec_path', ')', ';', 'get_etc_path', '(', 'my_exec_path', ',', 'etc_path', ')', ';', 'snprintf', '(', 'rc_file', ',', 'MAXPGPATH', ',', '""""', ',', 'etc_path', ',', 'SYSPSQLRC', ')', ';', 'process_psqlrc_file', '(', 'rc_file', ')', ';', 'if', '(', 'get_home_path', '(', 'home', ')', ')', '{', 'snprintf', '(', 'rc_file', ',', 'MAXPGPATH', ',', '""""', ',', 'home', ',', 'PSQLRC', ')', ';', 'process_psqlrc_file', '(', 'rc_file', ')', ';', '}', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
351,"['page_width_set', '(', 'int', 'n', ')', '{', 'sub_context_ty', '*', 'scp', ';', 'if', '(', 'page_width', ')', '{', 'arg_duplicate', '(', 'arglex_token_page_width', ',', '0', ')', ';', '}', 'if', '(', 'n', '<', 'MIN_PAGE_WIDTH', '||', 'n', '>', 'MAX_PAGE_WIDTH', ')', '{', 'scp', '=', 'sub_context_new', '(', ')', ';', 'sub_var_set', '(', 'scp', ',', '""""', ',', '""""', ',', 'n', ')', ';', 'fatal_intl', '(', 'scp', ',', 'i18n', '(', '""""', ')', ')', ';', '}', 'page_width', '=', 'n', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
352,"['total_conflicts', '(', ')', '{', 'fprintf', '(', 'stderr', ',', '""""', ',', 'myname', ')', ';', 'if', '(', 'SRtotal', '==', '1', ')', 'fprintf', '(', 'stderr', ',', '""""', ')', ';', 'else', 'if', '(', 'SRtotal', '>', '1', ')', 'fprintf', '(', 'stderr', ',', '""""', ',', 'SRtotal', ')', ';', 'if', '(', 'SRtotal', '&&', 'RRtotal', ')', 'fprintf', '(', 'stderr', ',', '""""', ')', ';', 'if', '(', 'RRtotal', '==', '1', ')', 'fprintf', '(', 'stderr', ',', '""""', ')', ';', 'else', 'if', '(', 'RRtotal', '>', '1', ')', 'fprintf', '(', 'stderr', ',', '""""', ',', 'RRtotal', ')', ';', 'fprintf', '(', 'stderr', ',', '""""', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
353,"['opt3001_irq', '(', 'int', 'irq', ',', 'void', '*', '_iio', ')', '{', 'struct', 'iio_dev', '*', 'iio', '=', '_iio', ';', 'struct', 'opt3001', '*', 'opt', '=', 'iio_priv', '(', 'iio', ')', ';', 'int', 'ret', ';', 'if', '(', '!opt', '->', 'ok_to_ignore_lock', ')', 'mutex_lock', '(', '&', 'opt', '->', 'lock', ')', ';', 'ret', '=', 'i2c_smbus_read_word_swapped', '(', 'opt', '->', 'client', ',', 'OPT3001_CONFIGURATION', ')', ';', 'if', '(', 'ret', '<', '0', ')', '{', 'dev_err', '(', 'opt', '->', 'dev', ',', '""""', ',', 'OPT3001_CONFIGURATION', ')', ';', 'goto', 'out', ';', '}', 'if', '(', '(', 'ret', '&', 'OPT3001_CONFIGURATION_M_MASK', ')', '==', 'OPT3001_CONFIGURATION_M_CONTINUOUS', ')', '{', 'if', '(', 'ret', '&', 'OPT3001_CONFIGURATION_FH', ')', 'iio_push_event', '(', 'iio', ',', 'IIO_UNMOD_EVENT_CODE', '(', 'IIO_LIGHT', ',', '0', ',', 'IIO_EV_TYPE_THRESH', ',', 'IIO_EV_DIR_RISING', ')', ',', 'iio_get_time_ns', '(', ')', ')', ';', 'if', '(', 'ret', '&', 'OPT3001_CONFIGURATION_FL', ')', 'iio_push_event', '(', 'iio', ',', 'IIO_UNMOD_EVENT_CODE', '(', 'IIO_LIGHT', ',', '0', ',', 'IIO_EV_TYPE_THRESH', ',', 'IIO_EV_DIR_FALLING', ')', ',', 'iio_get_time_ns', '(', ')', ')', ';', '}', 'else', 'if', '(', 'ret', '&', 'OPT3001_CONFIGURATION_CRF', ')', '{', 'ret', '=', 'i2c_smbus_read_word_swapped', '(', 'opt', '->', 'client', ',', 'OPT3001_RESULT', ')', ';', 'if', '(', 'ret', '<', '0', ')', '{', 'dev_err', '(', 'opt', '->', 'dev', ',', '""""', ',', 'OPT3001_RESULT', ')', ';', 'goto', 'out', ';', '}', 'opt', '->', 'result', '=', 'ret', ';', 'opt', '->', 'result_ready', '=', 'true', ';', 'wake_up', '(', '&', 'opt', '->', 'result_ready_queue', ')', ';', '}', 'out', ':', 'if', '(', '!opt', '->', 'ok_to_ignore_lock', ')', 'mutex_unlock', '(', '&', 'opt', '->', 'lock', ')', ';', 'return', 'IRQ_HANDLED', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
354,"['ReadHashItem_bin', '(', 'const', 'char', '*', 'srcbuf', ',', 'HASH_ITEM', '*', 'pItem', ',', 'int', 'item_index', ')', '{', 'int', 'len', ',', 'i', ';', 'const', 'char', '*', 'pc', ';', 'memset', '(', 'pItem', ',', '0', ',', 'sizeof', '(', 'HASH_ITEM', ')', ')', ';', 'pItem', '->', 'data', '.', 'userfreq\t', '=', 'GetInt32', '(', '&', 'srcbuf', '[', '0', ']', ')', ';', 'pItem', '->', 'data', '.', 'recentTime\t', '=', 'GetInt32', '(', '&', 'srcbuf', '[', '4', ']', ')', ';', 'pItem', '->', 'data', '.', 'maxfreq\t', '=', 'GetInt32', '(', '&', 'srcbuf', '[', '8', ']', ')', ';', 'pItem', '->', 'data', '.', 'origfreq\t', '=', 'GetInt32', '(', '&', 'srcbuf', '[', '12', ']', ')', ';', 'len', '=', '(', 'int', ')', 'srcbuf', '[', '16', ']', ';', 'pItem', '->', 'data', '.', 'phoneSeq', '=', 'ALC', '(', 'uint16_t', ',', 'len', '+', '1', ')', ';', 'pc', '=', '&', 'srcbuf', '[', '17', ']', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'len', ';', 'i', '++', ')', '{', 'pItem', '->', 'data', '.', 'phoneSeq', '[', 'i', ']', '=', 'GetUint16', '(', 'pc', ')', ';', 'pc', '+=', '2', ';', '}', 'pItem', '->', 'data', '.', 'phoneSeq', '[', 'i', ']', '=', '0', ';', 'pItem', '->', 'data', '.', 'wordSeq', '=', 'ALC', '(', 'char', ',', '(', '*', 'pc', ')', '+', '1', ')', ';', 'strcpy', '(', 'pItem', '->', 'data', '.', 'wordSeq', ',', '(', 'char', '*', ')', '(', 'pc', '+', '1', ')', ')', ';', 'pItem', '->', 'data', '.', 'wordSeq', '[', '(', 'unsigned', 'int', ')', '*', 'pc', ']', '=', ""''"", ';', 'if', '(', '!', 'isValidChineseString', '(', 'pItem', '->', 'data', '.', 'wordSeq', ')', ')', '{', 'goto', 'ignore_corrupted_record', ';', '}', 'pItem', '->', 'item_index', '=', 'item_index', ';', 'ignore_corrupted_record', ':', 'if', '(', 'pItem', '->', 'data', '.', 'phoneSeq', '!=', 'NULL', ')', '{', 'free', '(', 'pItem', '->', 'data', '.', 'phoneSeq', ')', ';', 'pItem', '->', 'data', '.', 'phoneSeq', '=', 'NULL', ';', '}', 'if', '(', 'pItem', '->', 'data', '.', 'wordSeq', '!=', 'NULL', ')', '{', 'free', '(', 'pItem', '->', 'data', '.', 'wordSeq', ')', ';', 'pItem', '->', 'data', '.', 'wordSeq', '=', 'NULL', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
355,"['add_frame_hooker', '(', 'const', 'char', '*', 'arg', ')', '{', 'int', 'argc', '=', '0', ';', 'char', '*', 'argv', '[', '64', ']', ';', 'int', 'i', ';', 'char', '*', 'args', '=', 'av_strdup', '(', 'arg', ')', ';', 'using_vhook', '=', '1', ';', 'argv', '[', '0', ']', '=', 'strtok', '(', 'args', ',', '""""', ')', ';', 'while', '(', 'argc', '<', '62', '&&', '(', 'argv', '[', '++', 'argc', ']', '=', 'strtok', '(', 'NULL', ',', '""""', ')', ')', ')', '{', '}', 'i', '=', 'frame_hook_add', '(', 'argc', ',', 'argv', ')', ';', 'if', '(', 'i', '!=', '0', ')', '{', 'fprintf', '(', 'stderr', ',', '""""', ',', 'arg', ')', ';', 'av_exit', '(', '1', ')', ';', '}', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
356,"['lwline_serialize_buf', '(', 'LWLINE', '*', 'line', ',', 'uchar', '*', 'buf', ',', 'size_t', '*', 'retsize', ')', '{', 'char', 'hasSRID', ';', 'uchar', '*', 'loc', ';', 'int', 'ptsize', ';', 'size_t', 'size', ';', 'LWDEBUGF', '(', '2', ',', '""""', ',', 'line', ',', 'buf', ',', 'retsize', ')', ';', 'if', '(', 'line', '==', 'NULL', ')', 'lwerror', '(', '""""', ')', ';', 'if', '(', 'TYPE_GETZM', '(', 'line', '->', 'type', ')', '!=', 'TYPE_GETZM', '(', 'line', '->', 'points', '->', 'dims', ')', ')', 'lwerror', '(', '""""', ')', ';', 'ptsize', '=', 'pointArray_ptsize', '(', 'line', '->', 'points', ')', ';', 'hasSRID', '=', '(', 'line', '->', 'SRID', '!=', '-', '1', ')', ';', 'buf', '[', '0', ']', '=', '(', 'uchar', ')', 'lwgeom_makeType_full', '(', 'TYPE_HASZ', '(', 'line', '->', 'type', ')', ',', 'TYPE_HASM', '(', 'line', '->', 'type', ')', ',', 'hasSRID', ',', 'LINETYPE', ',', 'line', '->', 'bbox', '?', '1', ':', '0', ')', ';', 'loc', '=', 'buf', '+', '1', ';', 'LWDEBUGF', '(', '3', ',', '""""', ',', 'line', '->', 'type', ')', ';', 'if', '(', 'line', '->', 'bbox', ')', '{', 'memcpy', '(', 'loc', ',', 'line', '->', 'bbox', ',', 'sizeof', '(', 'BOX2DFLOAT4', ')', ')', ';', 'loc', '+=', 'sizeof', '(', 'BOX2DFLOAT4', ')', ';', 'LWDEBUG', '(', '3', ',', '""""', ')', ';', '}', 'if', '(', 'hasSRID', ')', '{', 'memcpy', '(', 'loc', ',', '&', 'line', '->', 'SRID', ',', 'sizeof', '(', 'int32', ')', ')', ';', 'loc', '+=', 'sizeof', '(', 'int32', ')', ';', 'LWDEBUG', '(', '3', ',', '""""', ')', ';', '}', 'memcpy', '(', 'loc', ',', '&', 'line', '->', 'points', '->', 'npoints', ',', 'sizeof', '(', 'uint32', ')', ')', ';', 'loc', '+=', 'sizeof', '(', 'uint32', ')', ';', 'LWDEBUGF', '(', '3', ',', '""""', ',', 'line', '->', 'points', '->', 'npoints', ')', ';', 'size', '=', 'line', '->', 'points', '->', 'npoints', '*', 'ptsize', ';', 'memcpy', '(', 'loc', ',', 'getPoint_internal', '(', 'line', '->', 'points', ',', '0', ')', ',', 'size', ')', ';', 'loc', '+=', 'size', ';', 'LWDEBUGF', '(', '3', ',', '""""', ',', 'ptsize', '*', 'line', '->', 'points', '->', 'npoints', ')', ';', 'if', '(', 'retsize', ')', '*', 'retsize', '=', 'loc', '-', 'buf', ';', 'LWDEBUGF', '(', '3', ',', '""""', ',', 'loc', ',', 'loc', '-', 'buf', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
357,"['HasCategoryCooldown', '(', 'uint32', 'spell_id', ')', '{', 'SpellEntry', 'const', '*', 'spellInfo', '=', 'sSpellStore', '.', 'LookupEntry', '(', 'spell_id', ')', ';', 'if', '(', '!spellInfo', ')', 'return', 'false', ';', 'CreatureSpellCooldowns', ':', ':', 'const_iterator', 'itr', '=', 'm_CreatureCategoryCooldowns', '.', 'find', '(', 'spellInfo', '->', 'Category', ')', ';', 'return', '(', 'itr', '!=', 'm_CreatureCategoryCooldowns', '.', 'end', '(', ')', '&&', 'time_t', '(', 'itr', '->', 'second', '+', '(', 'spellInfo', '->', 'CategoryRecoveryTime', '/', 'IN_MILLISECONDS', ')', ')', '>', 'time', '(', 'NULL', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
358,"['accept', '(', 'ir_hierarchical_visitor', '*', 'v', ')', '{', 'ir_visitor_status', 's', '=', 'v', '->', 'visit_enter', '(', 'this', ')', ';', 'if', '(', 's', '!=', 'visit_continue', ')', 'return', '(', 's', '==', 'visit_continue_with_parent', ')', '?', 'visit_continue', ':', 's', ';', 's', '=', 'this', '->', 'val', '->', 'accept', '(', 'v', ')', ';', 'return', '(', 's', '==', 'visit_stop', ')', '?', 's', ':', 'v', '->', 'visit_leave', '(', 'this', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
359,"['cheaderwrite', '(', 'struct', 'cheader', '*', 'ch', ',', 'FILE', '*', 'fpout', ')', '{', 'int', 'error', '=', '0', ';', 'if', '(', '!fwrite', '(', '(', 'char', '*', ')', '&', 'ch', '->', 'sig', ',', '4', ',', '1', ',', 'fpout', ')', ')', 'error', '=', '1', ';', 'if', '(', '!fwrite', '(', '(', 'char', '*', ')', '&', 'ch', '->', 'res1', ',', '4', ',', '1', ',', 'fpout', ')', ')', 'error', '=', '1', ';', 'if', '(', '!fwrite', '(', '(', 'char', '*', ')', '&', 'ch', '->', 'size', ',', '4', ',', '1', ',', 'fpout', ')', ')', 'error', '=', '1', ';', 'if', '(', '!fwrite', '(', '(', 'char', '*', ')', '&', 'ch', '->', 'res2', ',', '4', ',', '1', ',', 'fpout', ')', ')', 'error', '=', '1', ';', 'if', '(', '!fwrite', '(', '(', 'char', '*', ')', '&', 'ch', '->', 'offsetfiles', ',', '4', ',', '1', ',', 'fpout', ')', ')', 'error', '=', '1', ';', 'if', '(', '!fwrite', '(', '(', 'char', '*', ')', '&', 'ch', '->', 'res3', ',', '4', ',', '1', ',', 'fpout', ')', ')', 'error', '=', '1', ';', 'if', '(', '!fwrite', '(', '(', 'char', '*', ')', '&', 'ch', '->', 'versionMIN', ',', '1', ',', '1', ',', 'fpout', ')', ')', 'error', '=', '1', ';', 'if', '(', '!fwrite', '(', '(', 'char', '*', ')', '&', 'ch', '->', 'versionMAJ', ',', '1', ',', '1', ',', 'fpout', ')', ')', 'error', '=', '1', ';', 'if', '(', '!fwrite', '(', '(', 'char', '*', ')', '&', 'ch', '->', 'nfolders', ',', '2', ',', '1', ',', 'fpout', ')', ')', 'error', '=', '1', ';', 'if', '(', '!fwrite', '(', '(', 'char', '*', ')', '&', 'ch', '->', 'nfiles', ',', '2', ',', '1', ',', 'fpout', ')', ')', 'error', '=', '1', ';', 'if', '(', '!fwrite', '(', '(', 'char', '*', ')', '&', 'ch', '->', 'flags', ',', '2', ',', '1', ',', 'fpout', ')', ')', 'error', '=', '1', ';', 'if', '(', '!fwrite', '(', '(', 'char', '*', ')', '&', 'ch', '->', 'setID', ',', '2', ',', '1', ',', 'fpout', ')', ')', 'error', '=', '1', ';', 'if', '(', '!fwrite', '(', '(', 'char', '*', ')', '&', 'ch', '->', 'cabID', ',', '2', ',', '1', ',', 'fpout', ')', ')', 'error', '=', '1', ';', 'return', '!error', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
360,"['l3dss1_resume_ack', '(', 'struct', 'l3_process', '*', 'pc', ',', 'u_char', 'pr', ',', 'void', '*', 'arg', ')', '{', 'struct', 'sk_buff', '*', 'skb', '=', 'arg', ';', 'int', 'id', ',', 'ret', ';', 'if', '(', '(', 'id', '=', 'l3dss1_get_channel_id', '(', 'pc', ',', 'skb', ')', ')', '>', '0', ')', '{', 'if', '(', '(', '0', '==', 'id', ')', '||', '(', '(', '3', '==', 'id', ')', '&&', '(', '0x10', '==', 'pc', '->', 'para', '.', 'moderate', ')', ')', ')', '{', 'if', '(', 'pc', '->', 'debug', '&', 'L3_DEB_WARN', ')', 'l3_debug', '(', 'pc', '->', 'st', ',', '""""', ',', 'id', ')', ';', 'pc', '->', 'para', '.', 'cause', '=', '100', ';', 'l3dss1_status_send', '(', 'pc', ',', 'pr', ',', 'NULL', ')', ';', 'return', ';', '}', 'pc', '->', 'para', '.', 'bchannel', '=', 'id', ';', '}', 'else', 'if', '(', '1', '==', 'pc', '->', 'state', ')', '{', 'if', '(', 'pc', '->', 'debug', '&', 'L3_DEB_WARN', ')', 'l3_debug', '(', 'pc', '->', 'st', ',', '""""', ',', 'id', ')', ';', 'pc', '->', 'para', '.', 'cause', '=', '96', ';', 'l3dss1_status_send', '(', 'pc', ',', 'pr', ',', 'NULL', ')', ';', 'return', ';', '}', 'ret', '=', 'check_infoelements', '(', 'pc', ',', 'skb', ',', 'ie_RESUME_ACKNOWLEDGE', ')', ';', 'if', '(', 'ERR_IE_COMPREHENSION', '==', 'ret', ')', '{', 'l3dss1_std_ie_err', '(', 'pc', ',', 'ret', ')', ';', 'return', ';', '}', 'L3DelTimer', '(', '&', 'pc', '->', 'timer', ')', ';', 'pc', '->', 'st', '->', 'l3', '.', 'l3l4', '(', 'pc', '->', 'st', ',', 'CC_RESUME', '|', 'CONFIRM', ',', 'pc', ')', ';', 'newl3state', '(', 'pc', ',', '10', ')', ';', 'l3dss1_std_ie_err', '(', 'pc', ',', 'ret', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
361,"['__Pyx_GetModuleGlobalName', '(', 'PyObject', '*', 'name', ')', '{', 'PyObject', '*', 'result', ';', '#if', 'result', '=', 'PyDict_GetItem', '(', '__pyx_d', ',', 'name', ')', ';', 'if', '(', 'result', ')', '{', 'Py_INCREF', '(', 'result', ')', ';', '}', 'else', '{', 'result', '=', 'PyObject_GetItem', '(', '__pyx_d', ',', 'name', ')', ';', 'if', '(', '!result', ')', '{', 'PyErr_Clear', '(', ')', ';', 'result', '=', '__Pyx_GetBuiltinName', '(', 'name', ')', ';', '}', 'return', 'result', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
362,"['get_member_status', '(', 'struct', 'call_queue', '*', 'q', ',', 'int', 'max_penalty', ',', 'int', 'min_penalty', ',', 'enum', 'empty_conditions', 'conditions', ')', '{', 'struct', 'member', '*', 'member', ';', 'struct', 'ao2_iterator', 'mem_iter', ';', 'ao2_lock', '(', 'q', ')', ';', 'mem_iter', '=', 'ao2_iterator_init', '(', 'q', '->', 'members', ',', '0', ')', ';', 'for', '(', ';', '(', 'member', '=', 'ao2_iterator_next', '(', '&', 'mem_iter', ')', ')', ';', 'ao2_ref', '(', 'member', ',', '-', '1', ')', ')', '{', 'if', '(', '(', 'max_penalty', '&&', '(', 'member', '->', 'penalty', '>', 'max_penalty', ')', ')', '||', '(', 'min_penalty', '&&', '(', 'member', '->', 'penalty', '<', 'min_penalty', ')', ')', ')', '{', 'if', '(', 'conditions', '&', 'QUEUE_EMPTY_PENALTY', ')', '{', 'ast_debug', '(', '4', ',', '""""', ',', 'member', '->', 'membername', ',', 'min_penalty', ',', 'max_penalty', ')', ';', 'continue', ';', '}', '}', 'switch', '(', 'member', '->', 'status', ')', '{', 'case', 'AST_DEVICE_INVALID', ':', 'if', '(', 'conditions', '&', 'QUEUE_EMPTY_INVALID', ')', '{', 'ast_debug', '(', '4', ',', '""""', ',', 'member', '->', 'membername', ')', ';', 'break', ';', '}', 'goto', 'default_case', ';', 'case', 'AST_DEVICE_UNAVAILABLE', ':', 'if', '(', 'conditions', '&', 'QUEUE_EMPTY_UNAVAILABLE', ')', '{', 'ast_debug', '(', '4', ',', '""""', ',', 'member', '->', 'membername', ')', ';', 'break', ';', '}', 'goto', 'default_case', ';', 'case', 'AST_DEVICE_INUSE', ':', 'if', '(', 'conditions', '&', 'QUEUE_EMPTY_INUSE', ')', '{', 'ast_debug', '(', '4', ',', '""""', ',', 'member', '->', 'membername', ')', ';', 'break', ';', '}', 'goto', 'default_case', ';', 'case', 'AST_DEVICE_RINGING', ':', 'if', '(', 'conditions', '&', 'QUEUE_EMPTY_RINGING', ')', '{', 'ast_debug', '(', '4', ',', '""""', ',', 'member', '->', 'membername', ')', ';', 'break', ';', '}', 'goto', 'default_case', ';', 'case', 'AST_DEVICE_UNKNOWN', ':', 'if', '(', 'conditions', '&', 'QUEUE_EMPTY_UNKNOWN', ')', '{', 'ast_debug', '(', '4', ',', '""""', ',', 'member', '->', 'membername', ')', ';', 'break', ';', '}', 'default', ':', 'default_case', ':', 'if', '(', 'member', '->', 'paused', '&&', '(', 'conditions', '&', 'QUEUE_EMPTY_PAUSED', ')', ')', '{', 'ast_debug', '(', '4', ',', '""""', ',', 'member', '->', 'membername', ')', ';', 'break', ';', '}', 'else', 'if', '(', '(', 'conditions', '&', 'QUEUE_EMPTY_WRAPUP', ')', '&&', 'member', '->', 'lastcall', '&&', 'q', '->', 'wrapuptime', '&&', '(', 'time', '(', 'NULL', ')', '-', 'q', '->', 'wrapuptime', '<', 'member', '->', 'lastcall', ')', ')', '{', 'ast_debug', '(', '4', ',', '""""', ',', 'member', '->', 'membername', ',', '(', 'int', ')', '(', 'time', '(', 'NULL', ')', '-', 'member', '->', 'lastcall', ')', ',', 'q', '->', 'wrapuptime', ')', ';', 'break', ';', '}', 'else', '{', 'ao2_ref', '(', 'member', ',', '-', '1', ')', ';', 'ao2_iterator_destroy', '(', '&', 'mem_iter', ')', ';', 'ao2_unlock', '(', 'q', ')', ';', 'ast_debug', '(', '4', ',', '""""', ',', 'member', '->', 'membername', ')', ';', 'return', '0', ';', '}', 'break', ';', '}', '}', 'ao2_iterator_destroy', '(', '&', 'mem_iter', ')', ';', 'ao2_unlock', '(', 'q', ')', ';', 'return', '-', '1', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
363,"['test_gvariant', '(', 'const', 'void', '*', '_subject', ')', '{', 'const', 'gchar', '*', 'subject', '=', '(', 'const', 'gchar', '*', ')', '_subject', ';', 'PolkitIdentity', '*', 'identity', ',', '*', 'new_identity', ';', 'GError', '*', 'error', '=', 'NULL', ';', 'GVariant', '*', 'value', ';', 'identity', '=', 'polkit_identity_from_string', '(', 'subject', ',', '&', 'error', ')', ';', 'g_assert_no_error', '(', 'error', ')', ';', 'g_assert', '(', 'identity', ')', ';', 'value', '=', 'polkit_identity_to_gvariant', '(', 'identity', ')', ';', 'g_assert', '(', 'value', ')', ';', 'new_identity', '=', 'polkit_identity_new_for_gvariant', '(', 'value', ',', '&', 'error', ')', ';', 'g_assert_no_error', '(', 'error', ')', ';', 'g_assert', '(', 'new_identity', ')', ';', 'g_variant_unref', '(', 'value', ')', ';', 'g_assert', '(', 'new_identity', ')', ';', 'g_assert', '(', 'polkit_identity_equal', '(', 'identity', ',', 'new_identity', ')', ')', ';', 'g_object_unref', '(', 'identity', ')', ';', 'g_object_unref', '(', 'new_identity', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
364,"['copy_all_sub_arg_operand', '(', 'Operand', '*', 'opt', ')', '{', 'Operand', '*', 'npt', '=', 'NULL', ',', '*', 'opt_head', '=', 'NULL', ';', 'int', 'i', ';', 'opt_head', '=', 'opt', ';', 'while', '(', 'opt', '!=', 'NULL', ')', '{', 'if', '(', 'npt', '==', 'NULL', ')', '{', 'npt', '=', 'alloc_operand', '(', ')', ';', 'opt_head', '=', 'npt', ';', '}', 'npt', '->', 'kind', '=', 'opt', '->', 'kind', ';', 'npt', '->', 'entry', '=', 'opt', '->', 'entry', ';', 'npt', '->', 'nsub', '=', 'opt', '->', 'nsub', ';', 'if', '(', '(', 'npt', '->', 'sub', '=', 'calloc', '(', 'opt', '->', 'nsub', ',', 'sizeof', '(', 'Sub_data', '*', ')', ')', ')', '==', 'NULL', ')', '{', 'fatal', '(', '""""', ')', ';', '}', 'switch', '(', 'opt', '->', 'kind', ')', '{', 'case', 'KIND_VAR', ':', 'npt', '->', 'tbl', '.', 'v', '=', 'opt', '->', 'tbl', '.', 'v', ';', 'break', ';', 'case', 'KIND_ARRAY', ':', 'npt', '->', 'tbl', '.', 'a', '=', 'copy_partial_array_table', '(', 'opt', '->', 'tbl', '.', 'a', ',', 'opt', '->', 'entry', ')', ';', 'break', ';', 'case', 'KIND_CONST', ':', 'npt', '->', 'tbl', '.', 'c', '=', 'opt', '->', 'tbl', '.', 'c', ';', 'break', ';', 'default', ':', 'npt', '->', 'tbl', '.', 'v', '=', 'NULL', ';', '}', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'opt', '->', 'nsub', ';', 'i', '++', ')', '{', 'if', '(', 'opt', '->', 'sub', '[', 'i', ']', '!=', 'NULL', ')', 'npt', '->', 'sub', '[', 'i', ']', '=', 'copy_all_sub_data', '(', 'opt', '->', 'sub', '[', 'i', ']', ')', ';', '}', 'npt', '->', 'inner', '=', 'copy_operand_list', '(', 'opt', '->', 'inner', ')', ';', 'if', '(', 'opt', '->', 'next', '!=', 'NULL', ')', '{', 'npt', '->', 'next', '=', 'alloc_operand', '(', ')', ';', 'npt', '=', 'npt', '->', 'next', ';', '}', 'opt', '=', 'opt', '->', 'next', ';', '}', 'npt', '=', 'opt_head', ';', 'return', 'npt', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
365,"['findMatchingBlock', '(', 'fl_BlockLayout', '*', 'pBlock', ')', '{', 'TOCEntry', '*', 'pThisEntry', '=', 'NULL', ';', 'fl_BlockLayout', '*', 'pThisBL', '=', 'NULL', ';', 'UT_sint32', 'i', '=', '0', ';', 'bool', 'bFound', '=', 'false', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'm_vecEntries', '.', 'getItemCount', '(', ')', ';', 'i', '++', ')', '{', 'pThisEntry', '=', 'm_vecEntries', '.', 'getNthItem', '(', 'i', ')', ';', 'pThisBL', '=', 'pThisEntry', '->', 'getBlock', '(', ')', ';', 'if', '(', 'pThisBL', '->', 'getStruxDocHandle', '(', ')', '==', 'pBlock', '->', 'getStruxDocHandle', '(', ')', ')', '{', 'bFound', '=', 'true', ';', 'break', ';', '}', '}', 'if', '(', 'bFound', ')', '{', 'return', 'pThisBL', ';', '}', 'return', 'NULL', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
366,"['WaitOnLock', '(', 'LOCALLOCK', '*', 'locallock', ',', 'ResourceOwner', 'owner', ')', '{', 'LOCKMETHODID', 'lockmethodid', '=', 'LOCALLOCK_LOCKMETHOD', '(', '*', 'locallock', ')', ';', 'LockMethod\tlockMethodTable', '=', 'LockMethods', '[', 'lockmethodid', ']', ';', 'char\t', '*', 'volatile', 'new_status', '=', 'NULL', ';', 'LOCK_PRINT', '(', '""""', ',', 'locallock', '->', 'lock', ',', 'locallock', '->', 'tag', '.', 'mode', ')', ';', 'if', '(', 'update_process_title', ')', '{', 'const', 'char', '*', 'old_status', ';', 'int\t\t\tlen', ';', 'old_status', '=', 'get_ps_display', '(', '&', 'len', ')', ';', 'new_status', '=', '(', 'char', '*', ')', 'palloc', '(', 'len', '+', '8', '+', '1', ')', ';', 'memcpy', '(', 'new_status', ',', 'old_status', ',', 'len', ')', ';', 'strcpy', '(', 'new_status', '+', 'len', ',', '""""', ')', ';', 'set_ps_display', '(', 'new_status', ',', 'false', ')', ';', '}', 'pgstat_report_waiting', '(', 'true', ')', ';', 'awaitedLock', '=', 'locallock', ';', 'awaitedOwner', '=', 'owner', ';', '/', '*', '*', 'NOTE', ':', 'Think', 'not', 'to', 'put', 'any', 'shared', '-', 'state', 'cleanup', 'after', 'the', 'call', '*', 'ProcSleep', ',', 'in', 'either', 'the', 'normal', 'or', 'failure', 'path', '.', 'The', 'lock', 'state', '*', 'be', 'fully', 'set', 'by', 'the', 'lock', 'grantor', ',', 'or', 'by', 'CheckDeadLock', 'if', 'we', 'give', '*', 'waiting', 'for', 'the', 'lock', '.', 'This', 'is', 'necessary', 'because', 'of', 'the', '*', 'that', 'a', 'cancel', '/', 'die', 'interrupt', 'will', 'interrupt', 'ProcSleep', 'after', 'someone', '*', 'grants', 'us', 'the', 'lock', ',', 'but', 'before', ""we've"", 'noticed', 'it', '.', 'Hence', ',', 'after', 'granting', ',', '*', 'the', 'locktable', 'state', 'must', 'fully', 'reflect', 'the', 'fact', 'that', 'we', 'own', 'the', 'lock', ';', '*', 'we', ""can't"", 'do', 'additional', 'work', 'on', 'return', '.', '*', '*', 'We', 'can', 'and', 'do', 'use', 'a', 'PG_TRY', 'block', 'to', 'try', 'to', 'clean', 'up', 'after', 'failure', ',', '*', 'this', 'still', 'has', 'a', 'major', 'limitation', ':', 'elog', '(', 'FATAL', ')', 'can', 'occur', 'while', '*', '(', 'eg', ',', 'a', '""""', 'interrupt', ')', ',', 'and', 'then', 'control', ""won't"", 'come', 'back', 'here', '.', 'So', '*', 'cleanup', 'of', 'essential', 'state', 'should', 'happen', 'in', 'LockWaitCancel', ',', 'not', 'here', '.', '*', 'We', 'can', 'use', 'PG_TRY', 'to', 'clear', 'the', '""""', 'status', 'flags', ',', 'since', 'doing', '*', 'is', 'unimportant', 'if', 'the', 'process', 'exits', '.', 'PG_TRY', '(', ')', ';', '{', 'if', '(', 'ProcSleep', '(', 'locallock', ',', 'lockMethodTable', ')', '!=', 'STATUS_OK', ')', '{', '/', '*', '*', 'We', 'failed', 'as', 'a', 'result', 'of', 'a', 'deadlock', ',', 'see', 'CheckDeadLock', '(', ')', '.', '*', 'now', '.', 'awaitedLock', '=', 'NULL', ';', 'LOCK_PRINT', '(', '""""', ',', 'locallock', '->', 'lock', ',', 'locallock', '->', 'tag', '.', 'mode', ')', ';', 'LWLockRelease', '(', 'LockHashPartitionLock', '(', 'locallock', '->', 'hashcode', ')', ')', ';', '/', '*', '*', 'Now', 'that', 'we', ""aren't"", 'holding', 'the', 'partition', 'lock', ',', 'we', 'can', 'give', '*', 'error', 'report', 'including', 'details', 'about', 'the', 'detected', 'deadlock', '.', 'DeadLockReport', '(', ')', ';', '}', '}', 'PG_CATCH', '(', ')', ';', '{', 'pgstat_report_waiting', '(', 'false', ')', ';', 'if', '(', 'update_process_title', ')', '{', 'set_ps_display', '(', 'new_status', ',', 'false', ')', ';', 'pfree', '(', 'new_status', ')', ';', '}', 'PG_RE_THROW', '(', ')', ';', '}', 'PG_END_TRY', '(', ')', ';', 'awaitedLock', '=', 'NULL', ';', 'pgstat_report_waiting', '(', 'false', ')', ';', 'if', '(', 'update_process_title', ')', '{', 'set_ps_display', '(', 'new_status', ',', 'false', ')', ';', 'pfree', '(', 'new_status', ')', ';', '}', 'LOCK_PRINT', '(', '""""', ',', 'locallock', '->', 'lock', ',', 'locallock', '->', 'tag', '.', 'mode', ')', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
367,"['P_Getenv', '(', 'Object', 'e', ')', '{', 'extern', 'char', '*', 'getenv', '(', ')', ';', 'char', '*', 's', ';', 'return', '(', 's', '=', 'getenv', '(', 'Get_String', '(', 'e', ')', ')', ')', '?', 'Make_String', '(', 's', ',', 'strlen', '(', 's', ')', ')', ':', 'False', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
368,"['Is_Printable_String', '(', 'const', 'char', '*', 's', ')', '{', 'int', 'result', '=', 'TRUE', ';', '#if', 'int', 'count', '=', 'mbstowcs', '(', '0', ',', 's', ',', '0', ')', ';', 'wchar_t', '*', 'temp', '=', '0', ';', 'assert', '(', 's', ')', ';', 'if', '(', 'count', '>', '&&', '(', 'temp', '=', 'typeCalloc', '(', 'wchar_t', ',', '(', '2', '+', '(', 'unsigned', ')', 'count', ')', ')', ')', '!=', '0', ')', '{', 'int', 'n', ';', 'mbstowcs', '(', 'temp', ',', 's', ',', '(', 'unsigned', ')', 'count', ')', ';', 'for', '(', 'n', '=', '0', ';', 'n', '<', 'count', ';', '++', 'n', ')', 'if', '(', '!iswprint', '(', '(', 'wint_t', ')', 'temp', '[', 'n', ']', ')', ')', '{', 'result', '=', 'FALSE', ';', 'break', ';', '}', 'free', '(', 'temp', ')', ';', '}', 'assert', '(', 's', ')', ';', 'while', '(', '*', 's', ')', '{', 'if', '(', '!isprint', '(', 'UChar', '(', '*', 's', ')', ')', ')', '{', 'result', '=', 'FALSE', ';', 'break', ';', '}', 's', '++', ';', '}', 'return', 'result', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
369,"['setCurrentOption', '(', 'const', 'std', ':', ':', 'string', 'value', ')', '{', 'int', 'action', '=', 'parameterOption', '(', 'value', ')', ';', 'if', '(', 'action', '>=', '0', ')', 'currentKeyWord_', '=', 'action', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
370,"['glp_netgen_prob', '(', 'int', 'nprob', ',', 'int', 'parm', '[', '1', '+', '15', ']', ')', '{', 'int', 'k', ';', 'if', '(', '!', '(', '101', '<=', 'nprob', '&&', 'nprob', '<=', '150', ')', ')', 'xerror', '(', '""""', ',', 'nprob', ')', ';', 'for', '(', 'k', '=', '1', ';', 'k', '<=', '15', ';', 'k', '++', ')', 'parm', '[', 'k', ']', '=', 'data', '[', 'nprob', '-', '101', ']', '[', 'k', ']', ';', 'return', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
371,"['recv_response', '(', 'struct', 'ipmi_intf', '*', 'intf', ',', 'unsigned', 'char', '*', 'data', ',', 'int', 'len', ')', '{', 'char', 'hex_rs', '[', 'IPMI_SERIAL_MAX_RESPONSE', '*', '3', ']', ';', 'int', 'i', ',', 'j', ',', 'resp_len', '=', '0', ';', 'unsigned', 'long', 'rv', ';', 'char', '*', 'p', ',', '*', 'pp', ';', 'char', 'ch', ',', 'str_hex', '[', '3', ']', ';', 'p', '=', 'hex_rs', ';', 'while', '(', '1', ')', '{', 'if', '(', '(', 'rv', '=', 'serial_read_line', '(', 'intf', ',', 'p', ',', 'sizeof', '(', 'hex_rs', ')', '-', 'resp_len', ')', ')', '<', '0', ')', '{', 'return', '-', '1', ';', '}', 'p', '+=', 'rv', ';', 'resp_len', '+=', 'rv', ';', 'if', '(', '*', '(', 'p', '-', '2', ')', '==', ""''"", '&&', '(', '*', '(', 'p', '-', '1', ')', '==', ""''"", '||', '*', '(', 'p', '-', '1', ')', '==', ""''"", ')', ')', '{', '*', 'p', '=', '0', ';', 'break', ';', '}', '}', 'p', '=', 'strrchr', '(', 'hex_rs', ',', ""''"", ')', ';', 'if', '(', '!p', ')', '{', 'lprintf', '(', 'LOG_ERR', ',', '""""', ')', ';', 'return', '-', '1', ';', '}', 'p', '++', ';', 'pp', '=', 'strchr', '(', 'p', ',', ""''"", ')', ';', 'if', '(', '!pp', ')', '{', 'lprintf', '(', 'LOG_ERR', ',', '""""', ')', ';', 'return', '-', '1', ';', '}', '*', 'pp', '=', '0', ';', 'if', '(', 'strncmp', '(', 'p', ',', '""""', ',', '4', ')', '==', '0', ')', '{', 'serial_write_line', '(', 'intf', ',', '""""', ')', ';', 'sleep', '(', '1', ')', ';', 'serial_flush', '(', 'intf', ')', ';', 'errno', '=', '0', ';', 'rv', '=', 'strtoul', '(', 'p', '+', '4', ',', '&', 'p', ',', '16', ')', ';', 'if', '(', '(', 'rv', '&&', 'rv', '<', '0x100', '&&', '*', 'p', '==', ""''"", ')', '||', '(', 'rv', '==', '0', '&&', '!errno', ')', ')', '{', '/', '*', 'The', 'message', ""didn't"", 'get', 'it', 'through', '.', 'The', 'return', '0', ';', '}', 'else', '{', 'lprintf', '(', 'LOG_ERR', ',', '""""', ')', ';', 'return', '-', '1', ';', '}', '}', 'str_hex', '[', '2', ']', '=', '0', ';', 'i', '=', '0', ';', 'j', '=', '0', ';', 'while', '(', '*', 'p', ')', '{', 'if', '(', 'i', '>=', 'len', ')', '{', 'lprintf', '(', 'LOG_ERR', ',', '""""', ',', 'i', ',', 'len', ')', ';', 'return', '-', '1', ';', '}', 'ch', '=', '*', '(', 'p', '++', ')', ';', 'if', '(', 'isxdigit', '(', 'ch', ')', ')', '{', 'str_hex', '[', 'j', '++', ']', '=', 'ch', ';', '}', 'else', '{', 'if', '(', 'j', '==', '1', '||', '!isspace', '(', 'ch', ')', ')', '{', 'lprintf', '(', 'LOG_ERR', ',', '""""', ')', ';', 'return', '-', '1', ';', '}', '}', 'if', '(', 'j', '==', '2', ')', '{', 'unsigned', 'long', 'tmp', ';', 'errno', '=', '0', ';', 'tmp', '=', 'strtoul', '(', 'str_hex', ',', 'NULL', ',', '16', ')', ';', 'if', '(', 'tmp', '>', '0xFF', '||', '(', '!tmp', '&&', 'errno', ')', ')', '{', 'lprintf', '(', 'LOG_ERR', ',', '""""', ')', ';', 'return', '-', '1', ';', '}', 'data', '[', 'i', '++', ']', '=', 'tmp', ';', 'j', '=', '0', ';', '}', '}', 'return', 'i', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
372,"['tar_extract_glob', '(', 'TAR', '*', 't', ',', 'char', '*', 'globname', ',', 'char', '*', 'prefix', ')', '{', 'char', '*', 'filename', ';', 'char', 'buf', '[', 'TAR_MAXPATHLEN', ']', ';', 'int', 'i', ';', 'char', '*', 'pathname', ';', 'while', '(', '(', 'i', '=', 'th_read', '(', 't', ')', ')', '==', '0', ')', '{', 'pathname', '=', 'th_get_pathname', '(', 't', ')', ';', 'filename', '=', 'pathname', ';', 'if', '(', 'fnmatch', '(', 'globname', ',', 'filename', ',', 'FNM_PATHNAME', '|', 'FNM_PERIOD', ')', ')', '{', 'if', '(', 'pathname', ')', '{', 'free', '(', 'pathname', ')', ';', '}', 'if', '(', 'TH_ISREG', '(', 't', ')', '&&', 'tar_skip_regfile', '(', 't', ')', ')', 'return', '-', '1', ';', 'continue', ';', '}', 'if', '(', 't', '->', 'options', '&', 'TAR_VERBOSE', ')', 'th_print_long_ls', '(', 't', ')', ';', 'if', '(', 'prefix', '!=', 'NULL', ')', 'snprintf', '(', 'buf', ',', 'sizeof', '(', 'buf', ')', ',', '""""', ',', 'prefix', ',', 'filename', ')', ';', 'strlcpy', '(', 'buf', ',', 'filename', ',', 'sizeof', '(', 'buf', ')', ')', ';', 'if', '(', 'tar_extract_file', '(', 't', ',', 'filename', ')', '!=', '0', ')', '{', 'if', '(', 'pathname', ')', '{', 'free', '(', 'pathname', ')', ';', '}', 'return', '-', '1', ';', '}', 'if', '(', 'pathname', ')', '{', 'free', '(', 'pathname', ')', ';', '}', '}', 'return', '(', 'i', '==', '1', '?', '0', ':', '-', '1', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
373,"['krb5_pac_get_types', '(', 'krb5_context', 'context', ',', 'krb5_pac', 'pac', ',', 'size_t', '*', 'len', ',', 'krb5_ui_4', '*', '*', 'types', ')', '{', 'size_t', 'i', ';', '*', 'types', '=', '(', 'krb5_ui_4', '*', ')', 'malloc', '(', 'pac', '->', 'pac', '->', 'cBuffers', '*', 'sizeof', '(', 'krb5_ui_4', ')', ')', ';', 'if', '(', '*', 'types', '==', 'NULL', ')', 'return', 'ENOMEM', ';', '*', 'len', '=', 'pac', '->', 'pac', '->', 'cBuffers', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'pac', '->', 'pac', '->', 'cBuffers', ';', 'i', '++', ')', '(', '*', 'types', ')', '[', 'i', ']', '=', 'pac', '->', 'pac', '->', 'Buffers', '[', 'i', ']', '.', 'ulType', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
374,"['check_and_set_new_selection', '(', 'GthImageSelector', '*', 'self', ',', 'cairo_rectangle_int_t', 'new_selection', ')', '{', 'new_selection', '.', 'width', '=', 'MAX', '(', '0', ',', 'new_selection', '.', 'width', ')', ';', 'new_selection', '.', 'height', '=', 'MAX', '(', '0', ',', 'new_selection', '.', 'height', ')', ';', 'if', '(', 'self', '->', 'priv', '->', 'bind_dimensions', '&&', '(', 'self', '->', 'priv', '->', 'bind_factor', '>', '1', ')', ')', '{', 'new_selection', '.', 'width', '=', 'bind_dimension', '(', 'new_selection', '.', 'width', ',', 'self', '->', 'priv', '->', 'bind_factor', ')', ';', 'new_selection', '.', 'height', '=', 'bind_dimension', '(', 'new_selection', '.', 'height', ',', 'self', '->', 'priv', '->', 'bind_factor', ')', ';', '}', 'if', '(', '(', '(', 'self', '->', 'priv', '->', 'current_area', '==', 'NULL', ')', '||', '(', 'self', '->', 'priv', '->', 'current_area', '->', 'id', '!=', 'C_SELECTION_AREA', ')', ')', '&&', 'self', '->', 'priv', '->', 'use_ratio', ')', '{', 'if', '(', '!', 'rectangle_in_rectangle', '(', 'new_selection', ',', 'self', '->', 'priv', '->', 'surface_area', ')', ')', 'return', 'FALSE', ';', 'set_selection', '(', 'self', ',', 'new_selection', ',', 'FALSE', ')', ';', 'return', 'TRUE', ';', '}', 'if', '(', 'new_selection', '.', 'x', '<', '0', ')', 'new_selection', '.', 'x', '=', '0', ';', 'if', '(', 'new_selection', '.', 'y', '<', '0', ')', 'new_selection', '.', 'y', '=', '0', ';', 'if', '(', 'new_selection', '.', 'width', '>', 'self', '->', 'priv', '->', 'surface_area', '.', 'width', ')', 'new_selection', '.', 'width', '=', 'self', '->', 'priv', '->', 'surface_area', '.', 'width', ';', 'if', '(', 'new_selection', '.', 'height', '>', 'self', '->', 'priv', '->', 'surface_area', '.', 'height', ')', 'new_selection', '.', 'height', '=', 'self', '->', 'priv', '->', 'surface_area', '.', 'height', ';', 'if', '(', 'new_selection', '.', 'x', '+', 'new_selection', '.', 'width', '>', 'self', '->', 'priv', '->', 'surface_area', '.', 'width', ')', 'new_selection', '.', 'x', '=', 'self', '->', 'priv', '->', 'surface_area', '.', 'width', '-', 'new_selection', '.', 'width', ';', 'if', '(', 'new_selection', '.', 'y', '+', 'new_selection', '.', 'height', '>', 'self', '->', 'priv', '->', 'surface_area', '.', 'height', ')', 'new_selection', '.', 'y', '=', 'self', '->', 'priv', '->', 'surface_area', '.', 'height', '-', 'new_selection', '.', 'height', ';', 'set_selection', '(', 'self', ',', 'new_selection', ',', 'FALSE', ')', ';', 'return', 'TRUE', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
375,"['store', '(', 'QDomNode', '&', 'node', ',', 'QDomDocument', '&', 'document', ')', '{', '/', '/', 'store', 'base', 'annotation', 'storeBaseAnnotationProperties', '(', 'node', ',', 'document', ')', ';', '/', '/', 'create', '[', 'line', ']', 'QDomElement', 'lineElement', '=', 'document', '.', 'createElement', '(', '""""', ')', ';', 'node', '.', 'appendChild', '(', 'lineElement', ')', ';', '/', '/', 'store', 'the', 'if', '(', 'lineStartStyle', '(', ')', '!=', 'None', ')', 'lineElement', '.', 'setAttribute', '(', '""""', ',', '(', 'int', ')', 'lineStartStyle', '(', ')', ')', ';', 'if', '(', 'lineEndStyle', '(', ')', '!=', 'None', ')', 'lineElement', '.', 'setAttribute', '(', '""""', ',', '(', 'int', ')', 'lineEndStyle', '(', ')', ')', ';', 'if', '(', 'isLineClosed', '(', ')', ')', 'lineElement', '.', 'setAttribute', '(', '""""', ',', 'isLineClosed', '(', ')', ')', ';', 'if', '(', 'lineInnerColor', '(', ')', '.', 'isValid', '(', ')', ')', 'lineElement', '.', 'setAttribute', '(', '""""', ',', 'lineInnerColor', '(', ')', '.', 'name', '(', ')', ')', ';', 'if', '(', 'lineLeadingForwardPoint', '(', ')', '!=', '0', '.', '0', ')', 'lineElement', '.', 'setAttribute', '(', '""""', ',', 'QString', ':', ':', 'number', '(', 'lineLeadingForwardPoint', '(', ')', ')', ')', ';', 'if', '(', 'lineLeadingBackPoint', '(', ')', '!=', '0', '.', '0', ')', 'lineElement', '.', 'setAttribute', '(', '""""', ',', 'QString', ':', ':', 'number', '(', 'lineLeadingBackPoint', '(', ')', ')', ')', ';', 'if', '(', 'lineShowCaption', '(', ')', ')', 'lineElement', '.', 'setAttribute', '(', '""""', ',', 'lineShowCaption', '(', ')', ')', ';', 'if', '(', 'lineIntent', '(', ')', '!=', 'Unknown', ')', 'lineElement', '.', 'setAttribute', '(', '""""', ',', 'lineIntent', '(', ')', ')', ';', '/', '/', 'append', 'the', 'list', 'of', 'const', 'QLinkedList', '<', 'QPointF', '>', 'points', '=', 'linePoints', '(', ')', ';', 'if', '(', 'points', '.', 'count', '(', ')', '>', '1', ')', '{', 'QLinkedList', '<', 'QPointF', '>', ':', ':', 'const_iterator', 'it', '=', 'points', '.', 'begin', '(', ')', ',', 'end', '=', 'points', '.', 'end', '(', ')', ';', 'while', '(', 'it', '!=', 'end', ')', '{', 'const', 'QPointF', '&', 'p', '=', '*', 'it', ';', 'QDomElement', 'pElement', '=', 'document', '.', 'createElement', '(', '""""', ')', ';', 'lineElement', '.', 'appendChild', '(', 'pElement', ')', ';', 'pElement', '.', 'setAttribute', '(', '""""', ',', 'QString', ':', ':', 'number', '(', 'p', '.', 'x', '(', ')', ')', ')', ';', 'pElement', '.', 'setAttribute', '(', '""""', ',', 'QString', ':', ':', 'number', '(', 'p', '.', 'y', '(', ')', ')', ')', ';', '++', 'it', ';', '}', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
376,"['ldapu_propval_alloc', '(', 'const', 'char', '*', 'prop', ',', 'const', 'char', '*', 'val', ',', 'LDAPUPropVal_t', '*', '*', 'propval', ')', '{', '*', 'propval', '=', '(', 'LDAPUPropVal_t', '*', ')', 'malloc', '(', 'sizeof', '(', 'LDAPUPropVal_t', ')', ')', ';', 'if', '(', '!', '*', 'propval', ')', 'return', 'LDAPU_ERR_OUT_OF_MEMORY', ';', '(', '*', 'propval', ')', '->', 'prop', '=', 'prop', '?', 'strdup', '(', 'prop', ')', ':', '0', ';', '(', '*', 'propval', ')', '->', 'val', '=', 'val', '?', 'strdup', '(', 'val', ')', ':', '0', ';', 'if', '(', '(', '!prop', '||', '(', '*', 'propval', ')', '->', 'prop', ')', '&&', '(', '!val', '||', '(', '*', 'propval', ')', '->', 'val', ')', ')', '{', 'return', 'LDAPU_SUCCESS', ';', '}', 'else', '{', 'return', 'LDAPU_ERR_OUT_OF_MEMORY', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
377,"['register_isdn', '(', 'isdn_if', '*', 'i', ')', '{', 'isdn_driver_t', '*', 'd', ';', 'int', 'j', ';', 'ulong', 'flags', ';', 'int', 'drvidx', ';', 'if', '(', 'dev', '->', 'drivers', '>=', 'ISDN_MAX_DRIVERS', ')', '{', 'printk', '(', 'KERN_WARNING', '""""', ',', 'ISDN_MAX_DRIVERS', ')', ';', 'return', '0', ';', '}', 'if', '(', '!i', '->', 'writebuf_skb', ')', '{', 'printk', '(', 'KERN_WARNING', '""""', ')', ';', 'return', '0', ';', '}', 'if', '(', '!', '(', 'd', '=', 'kzalloc', '(', 'sizeof', '(', 'isdn_driver_t', ')', ',', 'GFP_KERNEL', ')', ')', ')', '{', 'printk', '(', 'KERN_WARNING', '""""', ')', ';', 'return', '0', ';', '}', 'd', '->', 'maxbufsize', '=', 'i', '->', 'maxbufsize', ';', 'd', '->', 'pktcount', '=', '0', ';', 'd', '->', 'stavail', '=', '0', ';', 'd', '->', 'flags', '=', 'DRV_FLAG_LOADED', ';', 'd', '->', 'online', '=', '0', ';', 'd', '->', 'interface', '=', 'i', ';', 'd', '->', 'channels', '=', '0', ';', 'spin_lock_irqsave', '(', '&', 'dev', '->', 'lock', ',', 'flags', ')', ';', 'for', '(', 'drvidx', '=', '0', ';', 'drvidx', '<', 'ISDN_MAX_DRIVERS', ';', 'drvidx', '++', ')', 'if', '(', '!dev', '->', 'drv', '[', 'drvidx', ']', ')', 'break', ';', 'if', '(', 'isdn_add_channels', '(', 'd', ',', 'drvidx', ',', 'i', '->', 'channels', ',', '0', ')', ')', '{', 'spin_unlock_irqrestore', '(', '&', 'dev', '->', 'lock', ',', 'flags', ')', ';', 'kfree', '(', 'd', ')', ';', 'return', '0', ';', '}', 'i', '->', 'channels', '=', 'drvidx', ';', 'i', '->', 'rcvcallb_skb', '=', 'isdn_receive_skb_callback', ';', 'i', '->', 'statcallb', '=', 'isdn_status_callback', ';', 'if', '(', '!strlen', '(', 'i', '->', 'id', ')', ')', 'sprintf', '(', 'i', '->', 'id', ',', '""""', ',', 'drvidx', ')', ';', 'for', '(', 'j', '=', '0', ';', 'j', '<', 'drvidx', ';', 'j', '++', ')', 'if', '(', '!strcmp', '(', 'i', '->', 'id', ',', 'dev', '->', 'drvid', '[', 'j', ']', ')', ')', 'sprintf', '(', 'i', '->', 'id', ',', '""""', ',', 'drvidx', ')', ';', 'dev', '->', 'drv', '[', 'drvidx', ']', '=', 'd', ';', 'strcpy', '(', 'dev', '->', 'drvid', '[', 'drvidx', ']', ',', 'i', '->', 'id', ')', ';', 'isdn_info_update', '(', ')', ';', 'dev', '->', 'drivers', '++', ';', 'set_global_features', '(', ')', ';', 'spin_unlock_irqrestore', '(', '&', 'dev', '->', 'lock', ',', 'flags', ')', ';', 'return', '1', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
378,"['modem_check_result', '(', 'char', '*', 'have', ',', 'char', '*', 'need', ')', '{', 'char\tline', '[', 'MODEM_BUFFER_LEN', '+', '1', ']', ';', 'char', '*', 'word', ';', 'char', '*', 'more', ';', 'int\tnr', ';', 'log_line', '(', 'L_DEBUG', ',', '""""""', ')', ';', 'log_code', '(', 'L_DEBUG', ',', 'need', ')', ';', 'log_text', '(', 'L_DEBUG', ',', '""""', '.', '.', '.', '""', ')', ';', 'xstrncpy', '(', 'line', ',', 'need', ',', 'MODEM_BUFFER_LEN', ')', ';', 'more\t', '=', 'strchr', '(', 'line', ',', ""''"", ')', ';', 'word\t', '=', 'strtok', '(', 'line', ',', '""""', ')', ';', 'nr\t\t', '=', '0', ';', 'while', '(', 'word', ')', '{', 'nr', '++', ';', 'if', '(', 'strncmp', '(', 'have', ',', 'word', ',', 'strlen', '(', 'word', ')', ')', '==', '0', ')', '{', 'if', '(', 'more', ')', '{', 'log_text', '(', 'L_DEBUG', ',', '""""""', ')', ';', 'log_code', '(', 'L_DEBUG', ',', 'word', ')', ';', 'log_text', '(', 'L_DEBUG', ',', '""""', '(', '%', 'd', ')', '.', '\\n""', ',', 'nr', ')', ';', '}', 'else', 'log_text', '(', 'L_DEBUG', ',', '""""', ')', ';', 'return', '(', 'nr', ')', ';', '}', 'word', '=', 'strtok', '(', 'NULL', ',', '""""', ')', ';', '}', 'log_text', '(', 'L_DEBUG', ',', '""""', ')', ';', 'return', '(', '0', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
379,"['port_parser', '(', 'struct', 'nv_pair', '*', 'nv', ',', 'int', 'line', ',', 'plugin_conf_t', '*', 'c', ')', '{', 'const', 'char', '*', 'ptr', '=', 'nv', '->', 'value', ';', 'unsigned', 'long', 'i', ';', 'for', '(', 'i', '=', '0', ';', 'ptr', '[', 'i', ']', ';', 'i', '++', ')', '{', 'if', '(', '!isdigit', '(', 'ptr', '[', 'i', ']', ')', ')', '{', 'log_err', '(', '""""', ',', 'nv', '->', 'value', ',', 'line', ')', ';', 'return', '1', ';', '}', '}', 'errno', '=', '0', ';', 'i', '=', 'strtoul', '(', 'nv', '->', 'value', ',', 'NULL', ',', '10', ')', ';', 'if', '(', 'errno', ')', '{', 'log_err', '(', '""""', ',', 'strerror', '(', 'errno', ')', ',', 'line', ')', ';', 'return', '1', ';', '}', 'c', '->', 'port', '=', 'i', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
380,"['write_attr_value', '(', 'struct', 'attr_desc', '*', 'attr', ',', 'rtx', 'value', ')', '{', 'int', 'op', ';', 'switch', '(', 'GET_CODE', '(', 'value', ')', ')', '{', 'case', 'CONST_STRING', ':', 'write_attr_valueq', '(', 'attr', ',', 'XSTR', '(', 'value', ',', '0', ')', ')', ';', 'break', ';', 'case', 'CONST_INT', ':', 'printf', '(', 'HOST_WIDE_INT_PRINT_DEC', ',', 'INTVAL', '(', 'value', ')', ')', ';', 'break', ';', 'case', 'SYMBOL_REF', ':', 'fputs', '(', 'XSTR', '(', 'value', ',', '0', ')', ',', 'stdout', ')', ';', 'break', ';', 'case', 'ATTR', ':', '{', 'struct', 'attr_desc', '*', 'attr2', '=', 'find_attr', '(', '&', 'XSTR', '(', 'value', ',', '0', ')', ',', '0', ')', ';', 'printf', '(', '""""', ',', 'attr2', '->', 'name', ',', '(', 'attr2', '->', 'is_const', '?', '""""', ':', '""""', ')', ')', ';', '}', 'break', ';', 'case', 'PLUS', ':', 'op', '=', ""''"", ';', 'goto', 'do_operator', ';', 'case', 'MINUS', ':', 'op', '=', ""''"", ';', 'goto', 'do_operator', ';', 'case', 'MULT', ':', 'op', '=', ""''"", ';', 'goto', 'do_operator', ';', 'case', 'DIV', ':', 'op', '=', ""''"", ';', 'goto', 'do_operator', ';', 'case', 'MOD', ':', 'op', '=', ""''"", ';', 'goto', 'do_operator', ';', 'do_operator', ':', 'write_attr_value', '(', 'attr', ',', 'XEXP', '(', 'value', ',', '0', ')', ')', ';', 'putchar', '(', ""''"", ')', ';', 'putchar', '(', 'op', ')', ';', 'putchar', '(', ""''"", ')', ';', 'write_attr_value', '(', 'attr', ',', 'XEXP', '(', 'value', ',', '1', ')', ')', ';', 'break', ';', 'default', ':', 'abort', '(', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
381,"['ec_GFp_mont_field_mul', '(', 'const', 'EC_GROUP', '*', 'group', ',', 'BIGNUM', '*', 'r', ',', 'const', 'BIGNUM', '*', 'a', ',', 'const', 'BIGNUM', '*', 'b', ',', 'BN_CTX', '*', 'ctx', ')', '{', 'if', '(', 'group', '->', 'field_data1', '==', 'NULL', ')', '{', 'ECerr', '(', 'EC_F_EC_GFP_MONT_FIELD_MUL', ',', 'EC_R_NOT_INITIALIZED', ')', ';', 'return', '0', ';', '}', 'return', 'BN_mod_mul_montgomery', '(', 'r', ',', 'a', ',', 'b', ',', 'group', '->', 'field_data1', ',', 'ctx', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
382,"['param_extract', '(', 'Table', '*', 'tb', ',', 'char', '*', 'line', ')', '{', '/', '/', 'tb', '->', 'theta0', '=', '180', '.', '0', ';', '<', '-', 'equilibrium', 'angles', 'not', 'tb', '->', 'ninput', '=', '0', ';', 'tb', '->', 'f_unspecified', '=', 'false', ';', '/', '/', 'tb', '->', 'use_degrees', '=', 'true', ';', '/', '/', 'char', '*', 'word', '=', 'strtok', '(', 'line', ',', '""""', ')', ';', 'while', '(', 'word', ')', '{', 'if', '(', 'strcmp', '(', 'word', ',', '""""', ')', '==', '0', ')', '{', 'word', '=', 'strtok', '(', 'NULL', ',', '""""', ')', ';', 'tb', '->', 'ninput', '=', 'atoi', '(', 'word', ')', ';', '}', 'else', 'if', '(', 'strcmp', '(', 'word', ',', '""""', ')', '==', '0', ')', '{', 'tb', '->', 'f_unspecified', '=', 'true', ';', '}', 'else', 'if', '(', '(', 'strcmp', '(', 'word', ',', '""""', ')', '==', '0', ')', '||', '(', 'strcmp', '(', 'word', ',', '""""', ')', '==', '0', ')', ')', '{', 'tb', '->', 'use_degrees', '=', 'true', ';', '}', 'else', 'if', '(', '(', 'strcmp', '(', 'word', ',', '""""', ')', '==', '0', ')', '||', '(', 'strcmp', '(', 'word', ',', '""""', ')', '==', '0', ')', ')', '{', 'tb', '->', 'use_degrees', '=', 'false', ';', '}', 'else', 'if', '(', 'strcmp', '(', 'word', ',', '""""', ')', '==', '0', ')', '{', 'word', '=', 'strtok', '(', 'NULL', ',', '""""', ')', ';', 'memory', '->', 'sfree', '(', 'checkU_fname', ')', ';', 'memory', '->', 'create', '(', 'checkU_fname', ',', 'strlen', '(', 'word', ')', ',', '""""', ')', ';', 'strcpy', '(', 'checkU_fname', ',', 'word', ')', ';', '}', 'else', 'if', '(', 'strcmp', '(', 'word', ',', '""""', ')', '==', '0', ')', '{', 'word', '=', 'strtok', '(', 'NULL', ',', '""""', ')', ';', 'memory', '->', 'sfree', '(', 'checkF_fname', ')', ';', 'memory', '->', 'create', '(', 'checkF_fname', ',', 'strlen', '(', 'word', ')', ',', '""""', ')', ';', 'strcpy', '(', 'checkF_fname', ',', 'word', ')', ';', '}', '/', '/', 'COMMENTING', 'OUT', ':', 'equilibrium', 'angles', 'are', 'not', '/', '/', 'else', 'if', '(', 'strcmp', '(', 'word', ',', '""""', ')', '==', '0', ')', '{', '/', '/', 'word', '=', 'strtok', '(', 'NULL', ',', '""""', ')', ';', '/', '/', 'tb', '->', 'theta0', '=', 'atof', '(', 'word', ')', ';', '/', '/', '}', 'else', '{', 'string', 'err_msg', '(', '""""', ')', ';', 'err_msg', '+=', 'string', '(', '""""', ')', '+', 'string', '(', 'word', ')', '+', 'string', '(', '""""', ')', ';', 'error', '->', 'one', '(', 'FLERR', ',', 'err_msg', '.', 'c_str', '(', ')', ')', ';', '}', 'word', '=', 'strtok', '(', 'NULL', ',', '""""', ')', ';', '}', 'if', '(', 'tb', '->', 'ninput', '==', '0', ')', 'error', '->', 'one', '(', 'FLERR', ',', '""""', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
383,"['map_get_key', '(', 'struct', 'battery_property_map', '*', 'map', ',', 'int', 'value', ',', 'const', 'char', '*', 'def_key', ')', '{', 'while', '(', 'map', '->', 'key', ')', '{', 'if', '(', 'map', '->', 'value', '==', 'value', ')', 'return', 'map', '->', 'key', ';', 'map', '++', ';', '}', 'return', 'def_key', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
384,"['changeCoordinatesReference', '(', 'const', 'CPose3D', '&', 'newReferenceBase', ')', '{', 'switch', '(', 'm_typePDF', ')', '{', 'case', 'pdfMonteCarlo', ':', '\tm_locationMC', '.', 'changeCoordinatesReference', '(', 'newReferenceBase', ')', ';', '\t\tbreak', ';', 'case', 'pdfGauss', ':', '\t\tm_locationGauss', '.', 'changeCoordinatesReference', '(', 'newReferenceBase', ')', ';', '\tbreak', ';', 'case', 'pdfSOG', ':', '\t\tm_locationSOG', '.', 'changeCoordinatesReference', '(', 'newReferenceBase', ')', ';', '\t\tbreak', ';', 'default', ':', '\t\t\tTHROW_EXCEPTION', '(', '""""', ')', ';', '}', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
385,"['describe_origin', '(', 'textblock', '*', 'tb', ',', 'const', 'object_type', '*', 'o_ptr', ')', '{', 'char', 'origin_text', '[', '80', ']', ';', 'if', '(', 'o_ptr', '->', 'origin_depth', ')', 'strnfmt', '(', 'origin_text', ',', 'sizeof', '(', 'origin_text', ')', ',', '""""', ',', 'o_ptr', '->', 'origin_depth', '*', '50', ',', 'o_ptr', '->', 'origin_depth', ')', ';', 'my_strcpy', '(', 'origin_text', ',', '""""', ',', 'sizeof', '(', 'origin_text', ')', ')', ';', 'switch', '(', 'o_ptr', '->', 'origin', ')', '{', 'case', 'ORIGIN_NONE', ':', 'case', 'ORIGIN_MIXED', ':', 'case', 'ORIGIN_STOLEN', ':', 'return', 'FALSE', ';', 'case', 'ORIGIN_BIRTH', ':', 'textblock_append', '(', 'tb', ',', '""""', ')', ';', 'break', ';', 'case', 'ORIGIN_STORE', ':', 'textblock_append', '(', 'tb', ',', '""""', ')', ';', 'break', ';', 'case', 'ORIGIN_FLOOR', ':', 'textblock_append', '(', 'tb', ',', '""""', ',', '(', 'o_ptr', '->', 'origin_depth', '?', '""""', ':', '""""', ')', ',', 'origin_text', ')', ';', 'break', ';', 'case', 'ORIGIN_PIT', ':', 'textblock_append', '(', 'tb', ',', '""""', ',', 'origin_text', ')', ';', 'break', ';', 'case', 'ORIGIN_VAULT', ':', 'textblock_append', '(', 'tb', ',', '""""', ',', 'origin_text', ')', ';', 'break', ';', 'case', 'ORIGIN_SPECIAL', ':', 'textblock_append', '(', 'tb', ',', '""""', ',', 'origin_text', ')', ';', 'break', ';', 'case', 'ORIGIN_LABYRINTH', ':', 'textblock_append', '(', 'tb', ',', '""""', ',', 'origin_text', ')', ';', 'break', ';', 'case', 'ORIGIN_CAVERN', ':', 'textblock_append', '(', 'tb', ',', '""""', ',', 'origin_text', ')', ';', 'break', ';', 'case', 'ORIGIN_RUBBLE', ':', 'textblock_append', '(', 'tb', ',', '""""', ',', 'origin_text', ')', ';', 'break', ';', 'case', 'ORIGIN_DROP', ':', 'case', 'ORIGIN_DROP_SPECIAL', ':', 'case', 'ORIGIN_DROP_PIT', ':', 'case', 'ORIGIN_DROP_VAULT', ':', 'case', 'ORIGIN_DROP_SUMMON', ':', 'case', 'ORIGIN_DROP_BREED', ':', 'case', 'ORIGIN_DROP_POLY', ':', 'case', 'ORIGIN_DROP_WIZARD', ':', '{', 'const', 'char', '*', 'name', ';', 'if', '(', 'r_info', '[', 'o_ptr', '->', 'origin_xtra', ']', '.', 'ridx', ')', 'name', '=', 'r_info', '[', 'o_ptr', '->', 'origin_xtra', ']', '.', 'name', ';', 'name', '=', '""""', ';', 'textblock_append', '(', 'tb', ',', '""""', ')', ';', 'if', '(', 'rf_has', '(', 'r_info', '[', 'o_ptr', '->', 'origin_xtra', ']', '.', 'flags', ',', 'RF_UNIQUE', ')', ')', 'textblock_append', '(', 'tb', ',', '""""', ',', 'name', ')', ';', 'textblock_append', '(', 'tb', ',', '""""', ',', 'is_a_vowel', '(', 'name', '[', '0', ']', ')', '?', '""""', ':', '""""', ',', 'name', ')', ';', 'textblock_append', '(', 'tb', ',', '""""', ',', '(', 'o_ptr', '->', 'origin_depth', '?', '""""', ':', '""""', ')', ',', 'origin_text', ')', ';', 'break', ';', '}', 'case', 'ORIGIN_DROP_UNKNOWN', ':', 'textblock_append', '(', 'tb', ',', '""""', ',', '(', 'o_ptr', '->', 'origin_depth', '?', '""""', ':', '""""', ')', ',', 'origin_text', ')', ';', 'break', ';', 'case', 'ORIGIN_ACQUIRE', ':', 'textblock_append', '(', 'tb', ',', '""""', ',', '(', 'o_ptr', '->', 'origin_depth', '?', '""""', ':', '""""', ')', ',', 'origin_text', ')', ';', 'break', ';', 'case', 'ORIGIN_CHEAT', ':', 'textblock_append', '(', 'tb', ',', '""""', ')', ';', 'break', ';', 'case', 'ORIGIN_CHEST', ':', 'textblock_append', '(', 'tb', ',', '""""', ',', 'origin_text', ')', ';', 'break', ';', '}', 'textblock_append', '(', 'tb', ',', '""""', ')', ';', 'return', 'TRUE', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
386,"['fdisk_sun_set_xcyl', '(', 'struct', 'fdisk_context', '*', 'cxt', ')', '{', 'struct', 'sun_disklabel', '*', 'sunlabel', '=', 'self_disklabel', '(', 'cxt', ')', ';', 'uintmax_t', 'res', ';', 'if', '(', 'rc', ')', 'return', 'rc', ';', 'sunlabel', '->', 'apc', '=', 'cpu_to_be16', '(', 'res', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
387,"['mb862xx_pci_remove', '(', 'struct', 'pci_dev', '*', 'pdev', ')', '{', 'struct', 'fb_info', '*', 'fbi', '=', 'pci_get_drvdata', '(', 'pdev', ')', ';', 'struct', 'mb862xxfb_par', '*', 'par', '=', 'fbi', '->', 'par', ';', 'unsigned', 'long', 'reg', ';', 'dev_dbg', '(', 'fbi', '->', 'dev', ',', '""""', ',', 'fbi', '->', 'fix', '.', 'id', ')', ';', 'reg', '=', 'inreg', '(', 'disp', ',', 'GC_DCM1', ')', ';', 'reg', '&=', '~', '(', 'GC_DCM01_DEN', '|', 'GC_DCM01_L0E', ')', ';', 'outreg', '(', 'disp', ',', 'GC_DCM1', ',', 'reg', ')', ';', 'if', '(', 'par', '->', 'type', '==', 'BT_CARMINE', ')', '{', 'outreg', '(', 'ctrl', ',', 'GC_CTRL_INT_MASK', ',', '0', ')', ';', 'outreg', '(', 'ctrl', ',', 'GC_CTRL_CLK_ENABLE', ',', '0', ')', ';', '}', 'else', '{', 'outreg', '(', 'host', ',', 'GC_IMASK', ',', '0', ')', ';', '}', 'mb862xx_i2c_exit', '(', 'par', ')', ';', 'device_remove_file', '(', '&', 'pdev', '->', 'dev', ',', '&', 'dev_attr_dispregs', ')', ';', 'unregister_framebuffer', '(', 'fbi', ')', ';', 'fb_dealloc_cmap', '(', '&', 'fbi', '->', 'cmap', ')', ';', 'free_irq', '(', 'par', '->', 'irq', ',', '(', 'void', '*', ')', 'par', ')', ';', 'iounmap', '(', 'par', '->', 'mmio_base', ')', ';', 'iounmap', '(', 'par', '->', 'fb_base', ')', ';', 'pci_release_regions', '(', 'pdev', ')', ';', 'framebuffer_release', '(', 'fbi', ')', ';', 'pci_disable_device', '(', 'pdev', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
388,"['acpi_add_pm_notifier', '(', 'struct', 'acpi_device', '*', 'adev', ',', 'struct', 'device', '*', 'dev', ',', 'void', '(', '*', 'work_func', ')', '(', 'struct', 'work_struct', '*', 'work', ')', ')', '{', 'acpi_status', 'status', '=', 'AE_ALREADY_EXISTS', ';', 'if', '(', '!dev', '&&', '!work_func', ')', 'return', 'AE_BAD_PARAMETER', ';', 'mutex_lock', '(', '&', 'acpi_pm_notifier_lock', ')', ';', 'if', '(', 'adev', '->', 'wakeup', '.', 'flags', '.', 'notifier_present', ')', 'goto', 'out', ';', 'adev', '->', 'wakeup', '.', 'ws', '=', 'wakeup_source_register', '(', 'dev_name', '(', '&', 'adev', '->', 'dev', ')', ')', ';', 'adev', '->', 'wakeup', '.', 'context', '.', 'dev', '=', 'dev', ';', 'if', '(', 'work_func', ')', 'INIT_WORK', '(', '&', 'adev', '->', 'wakeup', '.', 'context', '.', 'work', ',', 'work_func', ')', ';', 'status', '=', 'acpi_install_notify_handler', '(', 'adev', '->', 'handle', ',', 'ACPI_SYSTEM_NOTIFY', ',', 'acpi_pm_notify_handler', ',', 'NULL', ')', ';', 'if', '(', 'ACPI_FAILURE', '(', 'status', ')', ')', 'goto', 'out', ';', 'adev', '->', 'wakeup', '.', 'flags', '.', 'notifier_present', '=', 'true', ';', 'out', ':', 'mutex_unlock', '(', '&', 'acpi_pm_notifier_lock', ')', ';', 'return', 'status', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
389,"['shutdown', '(', ')', '{', 'if', '(', 'started', ')', '{', 'mutex_data', '.', 'lock', '(', ')', ';', 'flags', '|=', 'FLAG_SHUTDOWN', ';', 'mutex_data', '.', 'unlock', '(', ')', ';', 'wakeup', '(', ')', ';', 'join', '(', ')', ';', 'started', '=', 'false', ';', '}', '/', '/', '/', 'Save', 'FXApp', ':', ':', 'instance', '(', ')', '->', 'reg', '(', ')', '.', 'writeStringEntry', '(', '""""', ',', '""""', ',', 'session', '.', 'text', '(', ')', ')', ';', 'FXApp', ':', ':', 'instance', '(', ')', '->', 'reg', '(', ')', '.', 'writeBoolEntry', '(', '""""', ',', '""""', ',', '(', 'flags', '&', 'FLAG_BANNED', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
390,"['amdgpu_uvd_resume', '(', 'struct', 'amdgpu_device', '*', 'adev', ')', '{', 'unsigned', 'size', ';', 'void', '*', 'ptr', ';', 'const', 'struct', 'common_firmware_header', '*', 'hdr', ';', 'unsigned', 'offset', ';', 'if', '(', 'adev', '->', 'uvd', '.', 'vcpu_bo', '==', 'NULL', ')', 'return', '-', 'EINVAL', ';', 'hdr', '=', '(', 'const', 'struct', 'common_firmware_header', '*', ')', 'adev', '->', 'uvd', '.', 'fw', '->', 'data', ';', 'offset', '=', 'le32_to_cpu', '(', 'hdr', '->', 'ucode_array_offset_bytes', ')', ';', 'memcpy', '(', 'adev', '->', 'uvd', '.', 'cpu_addr', ',', '(', 'adev', '->', 'uvd', '.', 'fw', '->', 'data', ')', '+', 'offset', ',', '(', 'adev', '->', 'uvd', '.', 'fw', '->', 'size', ')', '-', 'offset', ')', ';', 'cancel_delayed_work_sync', '(', '&', 'adev', '->', 'uvd', '.', 'idle_work', ')', ';', 'size', '=', 'amdgpu_bo_size', '(', 'adev', '->', 'uvd', '.', 'vcpu_bo', ')', ';', 'size', '-=', 'le32_to_cpu', '(', 'hdr', '->', 'ucode_size_bytes', ')', ';', 'ptr', '=', 'adev', '->', 'uvd', '.', 'cpu_addr', ';', 'ptr', '+=', 'le32_to_cpu', '(', 'hdr', '->', 'ucode_size_bytes', ')', ';', 'memset', '(', 'ptr', ',', '0', ',', 'size', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
391,"['guilddb_txt_delete_sub', '(', 'void', '*', 'key', ',', 'void', '*', 'data', ',', 'va_list', 'ap', ')', '{', 'struct', 'guild', '*', 'g', '=', '(', 'struct', 'guild', '*', ')', 'data', ';', 'int', 'guild_id', '=', 'va_arg', '(', 'ap', ',', 'int', ')', ';', 'int', 'i', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'MAX_GUILDALLIANCE', ';', 'i', '++', ')', '{', 'if', '(', 'g', '->', 'alliance', '[', 'i', ']', '.', 'guild_id', '==', 'guild_id', ')', '{', 'g', '->', 'alliance', '[', 'i', ']', '.', 'guild_id', '=', '0', ';', '#ifdef', 'if', '(', 'guild_journal_enable', ')', 'journal_write', '(', '&', 'guild_journal', ',', 'g', '->', 'guild_id', ',', 'g', ')', ';', '}', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
392,"['is_dhcp_discover', '(', 'void', '*', 'wh', ',', 'int', 'len', ')', '{', 'if', '(', '(', 'memcmp', '(', 'wh', '+', '4', ',', 'BROADCAST', ',', '6', ')', '==', '0', '||', 'memcmp', '(', 'wh', '+', '16', ',', 'BROADCAST', ',', '6', ')', '==', '0', ')', '&&', '(', 'len', '>=', '360', '-', '24', '-', '4', '-', '4', '&&', 'len', '<=', '380', '-', '24', '-', '4', '-', '4', ')', ')', 'return', '1', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
393,"['Pop', '(', 'vtkIdType', 'location', ',', 'double', '&', 'priority', ')', '{', 'vtkIdType', 'id', ',', 'i', ',', 'j', ',', 'idx', ';', 'vtkPriorityQueue', ':', ':', 'Item', 'temp', ';', 'if', '(', 'this', '->', 'MaxId', '<', '0', ')', '{', 'return', '-', '1', ';', '}', 'id', '=', 'this', '->', 'Array', '[', 'location', ']', '.', 'id', ';', 'priority', '=', 'this', '->', 'Array', '[', 'location', ']', '.', 'priority', ';', '/', '/', 'move', 'the', 'last', 'item', 'to', 'the', 'location', 'specified', 'and', 'push', 'into', 'the', 'this', '->', 'Array', '[', 'location', ']', '.', 'id', '=', 'this', '->', 'Array', '[', 'this', '->', 'MaxId', ']', '.', 'id', ';', 'this', '->', 'Array', '[', 'location', ']', '.', 'priority', '=', 'this', '->', 'Array', '[', 'this', '->', 'MaxId', ']', '.', 'priority', ';', 'this', '->', 'ItemLocation', '->', 'SetValue', '(', 'this', '->', 'Array', '[', 'location', ']', '.', 'id', ',', 'location', ')', ';', 'this', '->', 'ItemLocation', '->', 'SetValue', '(', 'id', ',', '-', '1', ')', ';', 'if', '(', '--', 'this', '->', 'MaxId', '<=', '0', ')', '{', 'return', 'id', ';', '}', '/', '/', 'percolate', 'down', 'the', 'tree', 'from', 'the', 'specified', 'int', 'lastNodeToCheck', '=', '(', 'this', '->', 'MaxId', '-', '1', ')', '/', '2', ';', 'for', '(', 'j', '=', '0', ',', 'i', '=', 'location', ';', 'i', '<=', 'lastNodeToCheck', ';', 'i', '=', 'j', ')', '{', 'idx', '=', '2', '*', 'i', '+', '1', ';', 'if', '(', 'this', '->', 'Array', '[', 'idx', ']', '.', 'priority', '<', 'this', '->', 'Array', '[', 'idx', '+', '1', ']', '.', 'priority', '||', 'idx', '==', 'this', '->', 'MaxId', ')', '{', 'j', '=', 'idx', ';', '}', '{', 'j', '=', 'idx', '+', '1', ';', '}', 'if', '(', 'this', '->', 'Array', '[', 'i', ']', '.', 'priority', '>', 'this', '->', 'Array', '[', 'j', ']', '.', 'priority', ')', '{', 'temp', '=', 'this', '->', 'Array', '[', 'i', ']', ';', 'this', '->', 'ItemLocation', '->', 'SetValue', '(', 'temp', '.', 'id', ',', 'j', ')', ';', 'this', '->', 'Array', '[', 'i', ']', '=', 'this', '->', 'Array', '[', 'j', ']', ';', 'this', '->', 'ItemLocation', '->', 'SetValue', '(', 'this', '->', 'Array', '[', 'j', ']', '.', 'id', ',', 'i', ')', ';', 'this', '->', 'Array', '[', 'j', ']', '=', 'temp', ';', '}', '{', 'break', ';', '}', '}', '/', '/', 'percolate', 'up', 'the', 'tree', 'from', 'the', 'specified', 'for', '(', 'idx', '=', '0', ',', 'i', '=', 'location', ';', 'i', '>', '0', ';', 'i', '=', 'idx', ')', '{', 'idx', '=', '(', 'i', '-', '1', ')', '/', '2', ';', 'if', '(', 'this', '->', 'Array', '[', 'i', ']', '.', 'priority', '<', 'this', '->', 'Array', '[', 'idx', ']', '.', 'priority', ')', '{', 'temp', '=', 'this', '->', 'Array', '[', 'i', ']', ';', 'this', '->', 'ItemLocation', '->', 'SetValue', '(', 'temp', '.', 'id', ',', 'idx', ')', ';', 'this', '->', 'Array', '[', 'i', ']', '=', 'this', '->', 'Array', '[', 'idx', ']', ';', 'this', '->', 'ItemLocation', '->', 'SetValue', '(', 'this', '->', 'Array', '[', 'idx', ']', '.', 'id', ',', 'i', ')', ';', 'this', '->', 'Array', '[', 'idx', ']', '=', 'temp', ';', '}', '{', 'break', ';', '}', '}', 'return', 'id', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
394,"['width', '(', 'bool', 'constrained', ')', '{', 'unsigned', 'int', 'sz', '=', '0', ';', 'if', '(', 'constrained', ')', '{', 'if', '(', 'd_array_var', '->', 'send_p', '(', ')', ')', 'sz', '=', 'd_array_var', '->', 'width', '(', 'constrained', ')', ';', '}', 'else', '{', 'sz', '=', 'd_array_var', '->', 'width', '(', 'constrained', ')', ';', '}', 'for', '(', 'Map_iter', 'i', '=', 'd_map_vars', '.', 'begin', '(', ')', ';', 'i', '!=', 'd_map_vars', '.', 'end', '(', ')', ';', 'i', '++', ')', '{', 'if', '(', 'constrained', ')', '{', 'if', '(', '(', '*', 'i', ')', '->', 'send_p', '(', ')', ')', 'sz', '+=', '(', '*', 'i', ')', '->', 'width', '(', 'constrained', ')', ';', '}', 'else', '{', 'sz', '+=', '(', '*', 'i', ')', '->', 'width', '(', 'constrained', ')', ';', '}', '}', 'return', 'sz', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
395,"['AnalyzeBranch', '(', 'MachineBasicBlock', '&', 'MBB', ',', 'MachineBasicBlock', '*', '&', 'TBB', ',', 'MachineBasicBlock', '*', '&', 'FBB', ',', 'SmallVectorImpl', '<', 'MachineOperand', '>', '&', 'Cond', ',', 'bool', 'AllowModify', ')', 'const', '{', '/', '/', 'If', 'the', 'block', 'has', 'no', 'terminators', ',', 'it', 'just', 'falls', 'into', 'the', 'block', 'after', 'it', '.', 'MachineBasicBlock', ':', ':', 'iterator', 'I', '=', 'MBB', '.', 'getLastNonDebugInstr', '(', ')', ';', 'if', '(', 'I', '==', 'MBB', '.', 'end', '(', ')', ')', 'return', 'false', ';', 'if', '(', '!isUnpredicatedTerminator', '(', 'I', ')', ')', 'return', 'false', ';', '/', '/', 'Get', 'the', 'last', 'instruction', 'in', 'the', 'block', '.', 'MachineInstr', '*', 'LastInst', '=', 'I', ';', '/', '/', 'If', 'there', 'is', 'only', 'one', 'terminator', 'instruction', ',', 'process', 'it', '.', 'if', '(', 'I', '==', 'MBB', '.', 'begin', '(', ')', '||', '!isUnpredicatedTerminator', '(', '--', 'I', ')', ')', '{', 'if', '(', 'IsBRU', '(', 'LastInst', '->', 'getOpcode', '(', ')', ')', ')', '{', 'TBB', '=', 'LastInst', '->', 'getOperand', '(', '0', ')', '.', 'getMBB', '(', ')', ';', 'return', 'false', ';', '}', 'XCore', ':', ':', 'CondCode', 'BranchCode', '=', 'GetCondFromBranchOpc', '(', 'LastInst', '->', 'getOpcode', '(', ')', ')', ';', 'if', '(', 'BranchCode', '==', 'XCore', ':', ':', 'COND_INVALID', ')', 'return', 'true', ';', '/', '/', ""Can't"", 'handle', 'indirect', 'branch', '.', '/', '/', 'Conditional', '/', '/', 'Block', 'ends', 'with', 'fall', '-', 'through', 'condbranch', '.', 'TBB', '=', 'LastInst', '->', 'getOperand', '(', '1', ')', '.', 'getMBB', '(', ')', ';', 'Cond', '.', 'push_back', '(', 'MachineOperand', ':', ':', 'CreateImm', '(', 'BranchCode', ')', ')', ';', 'Cond', '.', 'push_back', '(', 'LastInst', '->', 'getOperand', '(', '0', ')', ')', ';', 'return', 'false', ';', '}', '/', '/', 'Get', 'the', 'instruction', 'before', 'it', 'if', ""it's"", 'a', 'terminator', '.', 'MachineInstr', '*', 'SecondLastInst', '=', 'I', ';', '/', '/', 'If', 'there', 'are', 'three', 'terminators', ',', 'we', ""don't"", 'know', 'what', 'sort', 'of', 'block', 'this', 'is', '.', 'if', '(', 'SecondLastInst', '&&', 'I', '!=', 'MBB', '.', 'begin', '(', ')', '&&', 'isUnpredicatedTerminator', '(', '--', 'I', ')', ')', 'return', 'true', ';', 'unsigned', 'SecondLastOpc', '=', 'SecondLastInst', '->', 'getOpcode', '(', ')', ';', 'XCore', ':', ':', 'CondCode', 'BranchCode', '=', 'GetCondFromBranchOpc', '(', 'SecondLastOpc', ')', ';', '/', '/', 'If', 'the', 'block', 'ends', 'with', 'conditional', 'branch', 'followed', 'by', 'unconditional', ',', '/', '/', 'handle', 'it', '.', 'if', '(', 'BranchCode', '!=', 'XCore', ':', ':', '&&', 'IsBRU', '(', 'LastInst', '->', 'getOpcode', '(', ')', ')', ')', '{', 'TBB', '=', 'SecondLastInst', '->', 'getOperand', '(', '1', ')', '.', 'getMBB', '(', ')', ';', 'Cond', '.', 'push_back', '(', 'MachineOperand', ':', ':', 'CreateImm', '(', 'BranchCode', ')', ')', ';', 'Cond', '.', 'push_back', '(', 'SecondLastInst', '->', 'getOperand', '(', '0', ')', ')', ';', 'FBB', '=', 'LastInst', '->', 'getOperand', '(', '0', ')', '.', 'getMBB', '(', ')', ';', 'return', 'false', ';', '}', '/', '/', 'If', 'the', 'block', 'ends', 'with', 'two', 'unconditional', 'branches', ',', 'handle', 'it', '.', 'The', '/', '/', 'one', 'is', 'not', 'executed', ',', 'so', 'remove', 'it', '.', 'if', '(', 'IsBRU', '(', 'SecondLastInst', '->', 'getOpcode', '(', ')', ')', '&&', 'IsBRU', '(', 'LastInst', '->', 'getOpcode', '(', ')', ')', ')', '{', 'TBB', '=', 'SecondLastInst', '->', 'getOperand', '(', '0', ')', '.', 'getMBB', '(', ')', ';', 'I', '=', 'LastInst', ';', 'if', '(', 'AllowModify', ')', 'I', '->', 'eraseFromParent', '(', ')', ';', 'return', 'false', ';', '}', '/', '/', 'Likewise', 'if', 'it', 'ends', 'with', 'a', 'branch', 'table', 'followed', 'by', 'an', 'unconditional', 'branch', '.', 'if', '(', 'IsBR_JT', '(', 'SecondLastInst', '->', 'getOpcode', '(', ')', ')', '&&', 'IsBRU', '(', 'LastInst', '->', 'getOpcode', '(', ')', ')', ')', '{', 'I', '=', 'LastInst', ';', 'if', '(', 'AllowModify', ')', 'I', '->', 'eraseFromParent', '(', ')', ';', 'return', 'true', ';', '}', '/', '/', 'Otherwise', ',', ""can't"", 'handle', 'this', '.', 'return', 'true', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
396,"['MG_s_free_mem', '(', 'MG_S_INFO', '*', 'mg_s_info', ')', '{', 'FUNCNAME', '(', '""""', ')', ';', 'MULTI_GRID_INFO', '*', 'mg_info', '=', 'NULL', ';', 'int', 'levels', ',', 'i', ',', '*', 'dofs_per_level', ';', 'TEST_EXIT', '(', 'mg_s_info', '&&', '(', 'mg_info', '=', 'mg_s_info', '->', 'mg_info', ')', ',', '""""', ')', ';', 'TEST_EXIT', '(', 'dofs_per_level', '=', 'mg_s_info', '->', 'dofs_per_level', ',', '""""', ')', ';', 'levels', '=', 'mg_info', '->', 'mg_levels', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'mg_s_info', '->', 'matrix', '[', 'levels', '-', '1', ']', '->', 'size', ';', 'i', '++', ')', 'mg_s_info', '->', 'matrix', '[', 'levels', '-', '1', ']', '->', 'matrix_row', '[', 'i', ']', '=', 'nil', ';', 'for', '(', 'i', '=', 'levels', '-', '1', ';', 'i', '>=', '0', ';', 'i', '--', ')', '{', 'MEM_FREE', '(', 'mg_s_info', '->', 'r_h', '[', 'i', ']', ',', 'dofs_per_level', '[', 'i', ']', ',', 'REAL', ')', ';', 'MEM_FREE', '(', 'mg_s_info', '->', 'u_h', '[', 'i', ']', ',', 'dofs_per_level', '[', 'i', ']', ',', 'REAL', ')', ';', 'MEM_FREE', '(', 'mg_s_info', '->', 'f_h', '[', 'i', ']', ',', 'dofs_per_level', '[', 'i', ']', ',', 'REAL', ')', ';', 'free_dof_matrix', '(', 'mg_s_info', '->', 'matrix', '[', 'i', ']', ')', ';', '}', 'MEM_FREE', '(', 'mg_s_info', '->', 'dofs_per_level', ',', 'mg_s_info', '->', 'size', ',', 'int', ')', ';', 'MEM_FREE', '(', 'mg_s_info', '->', 'r_h', ',', 'mg_s_info', '->', 'size', ',', 'REAL', '*', ')', ';', 'MEM_FREE', '(', 'mg_s_info', '->', 'u_h', ',', 'mg_s_info', '->', 'size', ',', 'REAL', '*', ')', ';', 'MEM_FREE', '(', 'mg_s_info', '->', 'f_h', ',', 'mg_s_info', '->', 'size', ',', 'REAL', '*', ')', ';', 'MEM_FREE', '(', 'mg_s_info', '->', 'matrix', ',', 'mg_s_info', '->', 'size', ',', 'DOF_MATRIX', '*', ')', ';', 'MEM_FREE', '(', 'mg_s_info', '->', 'sort_dof_invers', ',', 'mg_s_info', '->', 'sort_invers_size', ',', 'int', ')', ';', 'MEM_FREE', '(', 'mg_s_info', '->', 'sort_bound', ',', 'mg_s_info', '->', 'sort_size', ',', 'S_CHAR', ')', ';', 'MEM_FREE', '(', 'mg_s_info', '->', 'dof_level', ',', 'mg_s_info', '->', 'sort_size', ',', 'U_CHAR', ')', ';', 'MEM_FREE', '(', 'mg_s_info', '->', 'dof_parent', '[', '1', ']', ',', 'mg_s_info', '->', 'sort_size', ',', 'DOF', ')', ';', 'MEM_FREE', '(', 'mg_s_info', '->', 'dof_parent', '[', '0', ']', ',', 'mg_s_info', '->', 'sort_size', ',', 'DOF', ')', ';', 'MEM_FREE', '(', 'mg_s_info', '->', 'sort_dof', ',', 'mg_s_info', '->', 'sort_size', ',', 'int', ')', ';', 'mg_s_info', '->', 'sort_dof_invers', '=', 'nil', ';', 'mg_s_info', '->', 'dofs_per_level', '=', 'nil', ';', 'mg_s_info', '->', 'f_h', '=', 'mg_s_info', '->', 'u_h', '=', 'mg_s_info', '->', 'r_h', '=', 'nil', ';', 'mg_s_info', '->', 'matrix', '=', 'nil', ';', 'mg_s_info', '->', 'sort_dof_invers', '=', 'nil', ';', 'mg_s_info', '->', 'sort_bound', '=', 'nil', ';', 'mg_s_info', '->', 'dof_level', '=', 'nil', ';', 'mg_s_info', '->', 'dof_parent', '[', '0', ']', '=', 'mg_s_info', '->', 'dof_parent', '[', '1', ']', '=', 'nil', ';', 'mg_s_info', '->', 'sort_dof', '=', 'nil', ';', 'mg_s_info', '->', 'size', '=', '0', ';', 'mg_s_info', '->', 'sort_size', '=', '0', ';', 'mg_s_info', '->', 'sort_invers_size', '=', '0', ';', 'return', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
397,"['est_border_str', '(', 'void', ')', '{', 'static', 'int', 'first', '=', 'TRUE', ';', 'static', 'char', 'border', '[', 'ESTPATHBUFSIZ', ']', ';', 'int', 't', ',', 'p', ';', 'if', '(', 'first', ')', '{', 't', '=', '(', 'int', ')', '(', 'time', '(', 'NULL', ')', '+', 'est_random', '(', ')', '*', 'INT_MAX', ')', ';', 'p', '=', '(', 'int', ')', '(', 'getpid', '(', ')', '+', 'est_random', '(', ')', '*', 'INT_MAX', ')', ';', 'sprintf', '(', 'border', ',', '""""', ',', 'dpouterhash', '(', '(', 'char', '*', ')', '&', 't', ',', 'sizeof', '(', 'int', ')', ')', ',', 'dpouterhash', '(', '(', 'char', '*', ')', '&', 'p', ',', 'sizeof', '(', 'int', ')', ')', ')', ';', 'first', '=', 'FALSE', ';', '}', 'return', 'border', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
398,"['repo_init_structure', '(', 'const', 'char', '*', 'git_dir', ',', 'int', 'is_bare', ')', '{', 'int', 'error', ';', 'char', 'temp_path', '[', 'GIT_PATH_MAX', ']', ';', 'if', '(', 'git_futils_mkdir_r', '(', 'git_dir', ',', 'mode', ')', ')', 'return', 'git__throw', '(', 'GIT_ERROR', ',', '""""', ')', ';', 'if', '(', '!is_bare', ')', '{', '#ifdef', 'error', '=', 'p_hide_directory__w32', '(', 'git_dir', ')', ';', 'if', '(', 'error', '<', 'GIT_SUCCESS', ')', 'return', 'git__rethrow', '(', 'error', ',', '""""', ')', ';', '}', 'git_path_join', '(', 'temp_path', ',', 'git_dir', ',', 'GIT_OBJECTS_INFO_DIR', ')', ';', 'error', '=', 'git_futils_mkdir_r', '(', 'temp_path', ',', 'mode', ')', ';', 'if', '(', 'error', '<', 'GIT_SUCCESS', ')', 'return', 'git__rethrow', '(', 'error', ',', '""""', ')', ';', 'git_path_join', '(', 'temp_path', ',', 'git_dir', ',', 'GIT_OBJECTS_PACK_DIR', ')', ';', 'error', '=', 'p_mkdir', '(', 'temp_path', ',', 'mode', ')', ';', 'if', '(', 'error', '<', 'GIT_SUCCESS', ')', 'return', 'git__throw', '(', 'error', ',', '""""', ',', 'temp_path', ')', ';', 'git_path_join', '(', 'temp_path', ',', 'git_dir', ',', 'GIT_REFS_HEADS_DIR', ')', ';', 'error', '=', 'git_futils_mkdir_r', '(', 'temp_path', ',', 'mode', ')', ';', 'if', '(', 'error', '<', 'GIT_SUCCESS', ')', 'return', 'git__rethrow', '(', 'error', ',', '""""', ')', ';', 'git_path_join', '(', 'temp_path', ',', 'git_dir', ',', 'GIT_REFS_TAGS_DIR', ')', ';', 'error', '=', 'p_mkdir', '(', 'temp_path', ',', 'mode', ')', ';', 'if', '(', 'error', '<', 'GIT_SUCCESS', ')', 'return', 'git__throw', '(', 'error', ',', '""""', ',', 'temp_path', ')', ';', 'return', 'GIT_SUCCESS', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
399,"['isUpper', '(', 'const', 'std', ':', ':', 'string', '&', 'str', ')', '{', 'for', '(', 'unsigned', 'int', 'i', '=', '0', ';', 'i', '<', 'str', '.', 'length', '(', ')', ';', '++', 'i', ')', '{', 'if', '(', 'str', '[', 'i', ']', '>=', ""''"", '&&', 'str', '[', 'i', ']', '<=', ""''"", ')', 'return', 'false', ';', '}', 'return', 'true', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
400,"['glmWeld', '(', 'GLMmodel', '*', 'model', ',', 'float', 'epsilon', ')', '{', 'float', '*', 'vectors', ';', 'float', '*', 'copies', ';', 'unsigned', 'int', 'numvectors', ';', 'unsigned', 'int', 'i', ',', 'welded', ';', 'numvectors', '=', 'model', '->', 'numvertices', ';', 'vectors', '=', 'model', '->', 'vertices', ';', 'copies', '=', 'glmWeldVectors', '(', 'vectors', ',', '&', 'numvectors', ',', 'epsilon', ')', ';', 'welded', '=', 'model', '->', 'numvertices', '-', 'numvectors', '-', '1', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'model', '->', 'numtriangles', ';', 'i', '++', ')', '{', 'T', '(', 'i', ')', '.', 'vindices', '[', '0', ']', '=', '(', 'unsigned', 'int', ')', 'vectors', '[', '3', '*', 'T', '(', 'i', ')', '.', 'vindices', '[', '0', ']', '+', '0', ']', ';', 'T', '(', 'i', ')', '.', 'vindices', '[', '1', ']', '=', '(', 'unsigned', 'int', ')', 'vectors', '[', '3', '*', 'T', '(', 'i', ')', '.', 'vindices', '[', '1', ']', '+', '0', ']', ';', 'T', '(', 'i', ')', '.', 'vindices', '[', '2', ']', '=', '(', 'unsigned', 'int', ')', 'vectors', '[', '3', '*', 'T', '(', 'i', ')', '.', 'vindices', '[', '2', ']', '+', '0', ']', ';', '}', 'free', '(', 'vectors', ')', ';', 'model', '->', 'numvertices', '=', 'numvectors', ';', 'model', '->', 'vertices', '=', '(', 'float', '*', ')', 'malloc', '(', 'sizeof', '(', 'float', ')', '*', '3', '*', '(', 'model', '->', 'numvertices', '+', '1', ')', ')', ';', 'for', '(', 'i', '=', '1', ';', 'i', '<=', 'model', '->', 'numvertices', ';', 'i', '++', ')', '{', 'model', '->', 'vertices', '[', '3', '*', 'i', '+', '0', ']', '=', 'copies', '[', '3', '*', 'i', '+', '0', ']', ';', 'model', '->', 'vertices', '[', '3', '*', 'i', '+', '1', ']', '=', 'copies', '[', '3', '*', 'i', '+', '1', ']', ';', 'model', '->', 'vertices', '[', '3', '*', 'i', '+', '2', ']', '=', 'copies', '[', '3', '*', 'i', '+', '2', ']', ';', '}', 'free', '(', 'copies', ')', ';', 'return', 'welded', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
401,"['on_key_press_event', '(', 'GtkWidget', '*', 'widget', ',', 'GdkEventKey', '*', 'evt', ')', '{', 'GtkTreeView', '*', 'tree_view', '=', 'GTK_TREE_VIEW', '(', 'widget', ')', ';', 'GtkTreeSelection', '*', 'tree_sel', ';', 'GtkTreeModel', '*', 'model', ';', 'GtkTreeIter', 'it', ';', 'GtkTreePath', '*', 'tp', ';', '/', '/', 'int', 'modifier', '=', '(', 'evt', '->', 'state', '&', 'gtk_accelerator_get_default_mod_mask', '(', ')', ')', ';', 'switch', '(', 'evt', '->', 'keyval', ')', '{', 'case', 'GDK_KEY_Left', ':', 'tree_sel', '=', 'gtk_tree_view_get_selection', '(', 'tree_view', ')', ';', 'if', '(', 'gtk_tree_selection_get_selected', '(', 'tree_sel', ',', '&', 'model', ',', '&', 'it', ')', ')', '{', 'tp', '=', 'gtk_tree_model_get_path', '(', 'model', ',', '&', 'it', ')', ';', 'if', '(', 'gtk_tree_view_row_expanded', '(', 'tree_view', ',', 'tp', ')', ')', 'gtk_tree_view_collapse_row', '(', 'tree_view', ',', 'tp', ')', ';', '{', 'gtk_tree_path_up', '(', 'tp', ')', ';', 'gtk_tree_view_set_cursor', '(', 'tree_view', ',', 'tp', ',', 'NULL', ',', 'FALSE', ')', ';', 'gtk_tree_selection_select_path', '(', 'tree_sel', ',', 'tp', ')', ';', '}', 'gtk_tree_path_free', '(', 'tp', ')', ';', '}', 'break', ';', 'case', 'GDK_KEY_Right', ':', 'tree_sel', '=', 'gtk_tree_view_get_selection', '(', 'tree_view', ')', ';', 'if', '(', 'gtk_tree_selection_get_selected', '(', 'tree_sel', ',', '&', 'model', ',', '&', 'it', ')', ')', '{', 'tp', '=', 'gtk_tree_model_get_path', '(', 'model', ',', '&', 'it', ')', ';', 'gtk_tree_view_expand_row', '(', 'tree_view', ',', 'tp', ',', 'FALSE', ')', ';', 'gtk_tree_path_free', '(', 'tp', ')', ';', '}', 'break', ';', '#if', 'case', 'GDK_KEY_Menu', ':', 'if', '(', 'modifier', ')', 'break', ';', 'tree_sel', '=', 'gtk_tree_view_get_selection', '(', 'tree_view', ')', ';', 'if', '(', 'gtk_tree_selection_get_selected', '(', 'tree_sel', ',', '&', 'model', ',', '&', 'it', ')', ')', 'fm_dir_tree_view_item_popup', '(', 'widget', ',', 'model', ',', '&', 'it', ',', 'evt', '->', 'time', ')', ';', 'break', ';', 'case', 'GDK_KEY_F10', ':', 'if', '(', 'modifier', '!=', 'GDK_SHIFT_MASK', ')', 'break', ';', 'tree_sel', '=', 'gtk_tree_view_get_selection', '(', 'tree_view', ')', ';', 'if', '(', 'gtk_tree_selection_get_selected', '(', 'tree_sel', ',', '&', 'model', ',', '&', 'it', ')', ')', 'fm_dir_tree_view_item_popup', '(', 'widget', ',', 'model', ',', '&', 'it', ',', 'evt', '->', 'time', ')', ';', 'break', ';', '}', 'return', 'GTK_WIDGET_CLASS', '(', 'fm_dir_tree_view_parent_class', ')', '->', 'key_press_event', '(', 'widget', ',', 'evt', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
402,"['pdb_read_rec_by_id', '(', 'pdbfile', '*', 'fin', ',', 'const', 'gbuint32', 'rec_id', ',', 'gbuint8', '*', 'flags', ',', 'gbuint8', '*', 'category', ',', 'void', '*', '*', 'data', ')', '{', 'pdbrec_t', '*', 'rec', ';', 'for', '(', 'rec', '=', 'fin', '->', 'rec_list', ';', 'rec', ';', 'rec', '=', 'rec', '->', 'next', ')', '{', 'if', '(', 'rec', '->', 'id', '==', 'rec_id', ')', '{', 'if', '(', 'data', ')', '{', '*', 'data', '=', 'rec', '->', 'data', ';', '}', 'if', '(', 'flags', ')', '{', '*', 'flags', '=', 'rec', '->', 'flags', ';', '}', 'if', '(', 'category', ')', '{', '*', 'category', '=', 'rec', '->', 'category', ';', '}', 'return', 'rec', '->', 'size', ';', '}', '}', 'return', '-', '1', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
403,"['findVariable', '(', 'const', 'char', '*', 'line', ')', '{', '/', '*', 'Parse', 'global', 'and', 'class', 'variable', 'names', '(', 'C', '.', 'x', ')', 'from', 'assignment', 'statements', '.', '*', 'Object', 'attributes', '(', 'obj', '.', 'x', ')', 'are', 'ignored', '.', '*', 'Assignment', 'to', 'a', 'tuple', ""''"", 'not', 'supported', '.', 'const', 'char', '*', 'cp', ',', '*', 'sp', ',', '*', 'eq', ',', '*', 'start', ';', 'cp', '=', 'strstr', '(', 'line', ',', '""""', ')', ';', 'if', '(', '!cp', ')', 'return', 'NULL', ';', 'eq', '=', 'cp', '+', '1', ';', 'while', '(', '*', 'eq', ')', '{', 'if', '(', '*', 'eq', '==', ""''"", ')', 'if', '(', '*', 'eq', '==', ""''"", '||', '*', 'eq', '==', ""''"", ')', 'eq', '++', ';', '}', 'start', '=', 'cp', '-', '1', ';', 'while', '(', 'start', '>=', 'line', '&&', 'isspace', '(', '(', 'int', ')', '*', 'start', ')', ')', '--', 'start', ';', 'while', '(', 'start', '>=', 'line', '&&', 'isIdentifierCharacter', '(', '(', 'int', ')', '*', 'start', ')', ')', '--', 'start', ';', 'if', '(', '!isIdentifierFirstCharacter', '(', '*', '(', 'start', '+', '1', ')', ')', ')', 'return', 'NULL', ';', 'sp', '=', 'start', ';', 'while', '(', 'sp', '>=', 'line', '&&', 'isspace', '(', '(', 'int', ')', '*', 'sp', ')', ')', '--', 'sp', ';', 'return', 'NULL', ';', '++', 'start', ';', 'return', 'start', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
404,"['event_whois_oper', '(', 'IRC_SERVER_REC', '*', 'server', ',', 'const', 'char', '*', 'data', ')', '{', 'char', '*', 'params', ',', '*', 'nick', ',', '*', 'type', ';', 'g_return_if_fail', '(', 'data', '!=', 'NULL', ')', ';', 'params', '=', 'event_get_params', '(', 'data', ',', '3', ',', 'NULL', ',', '&', 'nick', ',', '&', 'type', ')', ';', '/', '*', 'Bugfix', ':', 'http', ':', '/', '/', 'bugs', '.', 'irssi', '.', 'org', '/', '?', 'do', '=', 'details', '&', 'id', '=', '*', 'Author', ':', 'Geert', 'Hauwaerts', '<', 'geert@irssi', '.', 'org', '>', '*', 'Date', ':', 'Wed', 'Sep', '15', '20', ':', '17', ':', '24', 'CEST', 'if', '(', '(', '!strncmp', '(', 'type', ',', '""""', ',', '6', ')', ')', '||', '(', '!strncmp', '(', 'type', ',', '""""', ',', '5', ')', ')', ')', '{', 'type', '+=', '5', ';', 'if', '(', '*', 'type', '==', ""''"", ')', 'type', '++', ';', '}', 'if', '(', '*', 'type', '==', ""''"", ')', 'type', '=', '""""', ';', 'printformat', '(', 'server', ',', 'nick', ',', 'MSGLEVEL_CRAP', ',', 'IRCTXT_WHOIS_OPER', ',', 'nick', ',', 'type', ')', ';', 'g_free', '(', 'params', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
405,"['cli_scanmschm', '(', 'cli_ctx', '*', 'ctx', ')', '{', 'int', 'ret', '=', 'CL_CLEAN', ',', 'rc', ';', 'chm_metadata_t', 'metadata', ';', 'char', '*', 'dir', ';', 'unsigned', 'int', 'viruses_found', '=', '0', ';', 'cli_dbgmsg', '(', '""""', ')', ';', 'if', '(', '!', '(', 'dir', '=', 'cli_gentemp', '(', 'ctx', '->', 'engine', '->', 'tmpdir', ')', ')', ')', 'return', 'CL_EMEM', ';', 'if', '(', 'mkdir', '(', 'dir', ',', '0700', ')', ')', '{', 'cli_dbgmsg', '(', '""""', ',', 'dir', ')', ';', 'free', '(', 'dir', ')', ';', 'return', 'CL_ETMPDIR', ';', '}', 'ret', '=', 'cli_chm_open', '(', 'dir', ',', '&', 'metadata', ',', 'ctx', ')', ';', 'if', '(', 'ret', '!=', 'CL_SUCCESS', ')', '{', 'if', '(', '!ctx', '->', 'engine', '->', 'keeptmp', ')', 'cli_rmdirs', '(', 'dir', ')', ';', 'free', '(', 'dir', ')', ';', 'cli_dbgmsg', '(', '""""', ',', 'cl_strerror', '(', 'ret', ')', ')', ';', 'return', 'ret', ';', '}', 'do', '{', 'ret', '=', 'cli_chm_prepare_file', '(', '&', 'metadata', ')', ';', 'if', '(', 'ret', '!=', 'CL_SUCCESS', ')', '{', 'break', ';', '}', 'ret', '=', 'cli_chm_extract_file', '(', 'dir', ',', '&', 'metadata', ',', 'ctx', ')', ';', 'if', '(', 'ret', '==', 'CL_SUCCESS', ')', '{', 'rc', '=', 'cli_magic_scandesc', '(', 'metadata', '.', 'ofd', ',', 'ctx', ')', ';', 'close', '(', 'metadata', '.', 'ofd', ')', ';', 'if', '(', 'rc', '==', 'CL_VIRUS', ')', '{', 'cli_dbgmsg', '(', '""""', ',', 'cli_get_last_virus', '(', 'ctx', ')', ')', ';', 'if', '(', 'SCAN_ALL', ')', 'viruses_found', '++', ';', 'else', '{', 'ret', '=', 'CL_VIRUS', ';', 'break', ';', '}', '}', '}', '}', 'while', '(', 'ret', '==', 'CL_SUCCESS', ')', ';', 'cli_chm_close', '(', '&', 'metadata', ')', ';', 'if', '(', '!ctx', '->', 'engine', '->', 'keeptmp', ')', 'cli_rmdirs', '(', 'dir', ')', ';', 'free', '(', 'dir', ')', ';', 'cli_dbgmsg', '(', '""""', ',', 'ret', ')', ';', 'if', '(', 'ret', '==', 'CL_BREAK', ')', 'ret', '=', 'CL_CLEAN', ';', 'if', '(', 'SCAN_ALL', '&&', 'viruses_found', ')', 'return', 'CL_VIRUS', ';', 'return', 'ret', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
406,"['upload_firmware', '(', 'struct', 'zd_usb', '*', 'usb', ')', '{', 'int', 'r', ';', 'u16', 'fw_bcdDevice', ';', 'u16', 'bcdDevice', ';', 'struct', 'usb_device', '*', 'udev', '=', 'zd_usb_to_usbdev', '(', 'usb', ')', ';', 'const', 'struct', 'firmware', '*', 'ub_fw', '=', 'NULL', ';', 'const', 'struct', 'firmware', '*', 'uph_fw', '=', 'NULL', ';', 'char', 'fw_name', '[', '128', ']', ';', 'bcdDevice', '=', 'get_bcdDevice', '(', 'udev', ')', ';', 'r', '=', 'request_fw_file', '(', '&', 'ub_fw', ',', 'get_fw_name', '(', 'usb', ',', 'fw_name', ',', 'sizeof', '(', 'fw_name', ')', ',', '""""', ')', ',', '&', 'udev', '->', 'dev', ')', ';', 'if', '(', 'r', ')', 'goto', 'error', ';', 'fw_bcdDevice', '=', 'get_word', '(', 'ub_fw', '->', 'data', ',', 'E2P_DATA_OFFSET', ')', ';', 'if', '(', 'fw_bcdDevice', '!=', 'bcdDevice', ')', '{', 'dev_info', '(', '&', 'udev', '->', 'dev', ',', '""""', ',', 'fw_bcdDevice', ',', 'bcdDevice', ')', ';', 'if', '(', 'bcdDevice', '<=', '0x4313', ')', 'dev_warn', '(', '&', 'udev', '->', 'dev', ',', '""""', ')', ';', 'r', '=', 'handle_version_mismatch', '(', 'usb', ',', 'ub_fw', ')', ';', 'if', '(', 'r', ')', 'goto', 'error', ';', '}', 'else', '{', 'dev_dbg_f', '(', '&', 'udev', '->', 'dev', ',', '""""', ',', 'fw_bcdDevice', ')', ';', '}', 'r', '=', 'request_fw_file', '(', '&', 'uph_fw', ',', 'get_fw_name', '(', 'usb', ',', 'fw_name', ',', 'sizeof', '(', 'fw_name', ')', ',', '""""', ')', ',', '&', 'udev', '->', 'dev', ')', ';', 'if', '(', 'r', ')', 'goto', 'error', ';', 'r', '=', 'upload_code', '(', 'udev', ',', 'uph_fw', '->', 'data', ',', 'uph_fw', '->', 'size', ',', 'FW_START', ',', 'REBOOT', ')', ';', 'if', '(', 'r', ')', '{', 'dev_err', '(', '&', 'udev', '->', 'dev', ',', '""""', ',', 'r', ')', ';', '}', 'error', ':', 'release_firmware', '(', 'ub_fw', ')', ';', 'release_firmware', '(', 'uph_fw', ')', ';', 'return', 'r', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
407,"['LUsolve', '(', 'const', 'MAT', '*', 'LU', ',', 'PERM', '*', 'pivot', ',', 'const', 'VEC', '*', 'b', ',', 'VEC', '*', 'x', ')', '{', 'if', '(', '!', 'LU', '||', '!', 'b', '||', '!', 'pivot', ')', 'error', '(', 'E_NULL', ',', '""""', ')', ';', 'if', '(', 'LU', '->', 'm', '!=', 'LU', '->', 'n', '||', 'LU', '->', 'n', '!=', 'b', '->', 'dim', ')', 'error', '(', 'E_SIZES', ',', '""""', ')', ';', 'x', '=', 'v_resize', '(', 'x', ',', 'b', '->', 'dim', ')', ';', 'return', '(', 'x', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
408,"['copy_from_filestruct', '(', 'filestruct', '*', 'file_top', ',', 'filestruct', '*', 'file_bot', ')', '{', 'filestruct', '*', 'top_save', ';', 'size_t', 'current_x_save', '=', 'openfile', '->', 'current_x', ';', 'bool', 'edittop_inside', ';', '#ifndef', 'bool', 'right_side_up', '=', 'FALSE', ',', 'single_line', '=', 'FALSE', ';', 'assert', '(', 'file_top', '!=', 'NULL', '&&', 'file_bot', '!=', 'NULL', ')', ';', '#ifndef', '/', '*', 'Keep', 'track', 'of', 'whether', 'the', 'mark', 'begins', 'inside', 'the', 'partition', 'if', '(', 'openfile', '->', 'mark_set', ')', '{', 'filestruct', '*', 'top', ',', '*', 'bot', ';', 'size_t', 'top_x', ',', 'bot_x', ';', 'mark_order', '(', '(', 'const', 'filestruct', '*', '*', ')', '&', 'top', ',', '&', 'top_x', ',', '(', 'const', 'filestruct', '*', '*', ')', '&', 'bot', ',', '&', 'bot_x', ',', '&', 'right_side_up', ')', ';', 'single_line', '=', '(', 'top', '==', 'bot', ')', ';', '}', '/', '*', 'Partition', 'the', 'filestruct', 'so', 'that', 'it', 'contains', 'no', 'text', ',', 'and', '*', 'track', 'of', 'whether', 'the', 'top', 'of', 'the', 'edit', 'window', 'is', 'inside', 'filepart', '=', 'partition_filestruct', '(', 'openfile', '->', 'current', ',', 'openfile', '->', 'current_x', ',', 'openfile', '->', 'current', ',', 'openfile', '->', 'current_x', ')', ';', 'edittop_inside', '=', '(', 'openfile', '->', 'edittop', '==', 'openfile', '->', 'fileage', ')', ';', '/', '*', 'Put', 'the', 'top', 'and', 'bottom', 'of', 'the', 'filestruct', 'at', 'copies', 'of', 'openfile', '->', 'fileage', '=', 'copy_filestruct', '(', 'file_top', ')', ';', 'openfile', '->', 'filebot', '=', 'openfile', '->', 'fileage', ';', 'while', '(', 'openfile', '->', 'filebot', '->', 'next', '!=', 'NULL', ')', 'openfile', '->', 'filebot', '=', 'openfile', '->', 'filebot', '->', 'next', ';', '/', '*', 'Restore', 'the', 'current', 'line', 'and', 'cursor', 'position', '.', 'If', 'the', 'mark', '*', 'inside', 'the', 'partition', ',', 'adjust', 'the', 'mark', 'coordinates', 'to', 'openfile', '->', 'current', '=', 'openfile', '->', 'filebot', ';', 'openfile', '->', 'current_x', '=', 'strlen', '(', 'openfile', '->', 'filebot', '->', 'data', ')', ';', 'if', '(', 'openfile', '->', 'fileage', '==', 'openfile', '->', 'filebot', ')', '{', '#ifndef', 'if', '(', 'openfile', '->', 'mark_set', ')', '{', 'openfile', '->', 'mark_begin', '=', 'openfile', '->', 'current', ';', 'if', '(', '!right_side_up', ')', 'openfile', '->', 'mark_begin_x', '+=', 'openfile', '->', 'current_x', ';', '}', 'openfile', '->', 'current_x', '+=', 'current_x_save', ';', '}', '#ifndef', 'else', 'if', '(', 'openfile', '->', 'mark_set', ')', '{', 'if', '(', '!right_side_up', ')', '{', 'if', '(', 'single_line', ')', '{', 'openfile', '->', 'mark_begin', '=', 'openfile', '->', 'current', ';', 'openfile', '->', 'mark_begin_x', '-=', 'current_x_save', ';', '}', 'openfile', '->', 'mark_begin_x', '-=', 'openfile', '->', 'current_x', ';', '}', '}', '/', '*', 'Get', 'the', 'number', 'of', 'characters', 'in', 'the', 'copied', 'text', ',', 'and', 'add', 'it', 'openfile', '->', 'totsize', '+=', 'get_totsize', '(', 'openfile', '->', 'fileage', ',', 'openfile', '->', 'filebot', ')', ';', '/', '*', 'Update', 'the', 'current', 'y', '-', 'coordinate', 'to', 'account', 'for', 'the', 'number', '*', 'lines', 'the', 'copied', 'text', 'has', ',', 'less', 'one', 'since', 'the', 'first', 'line', 'will', 'openfile', '->', 'current_y', '+=', 'openfile', '->', 'filebot', '->', 'lineno', '-', '1', ';', 'top_save', '=', 'openfile', '->', 'fileage', ';', '/', '*', 'If', 'the', 'top', 'of', 'the', 'edit', 'window', 'is', 'inside', 'the', 'partition', ',', 'set', 'it', 'if', '(', 'edittop_inside', ')', 'openfile', '->', 'edittop', '=', 'openfile', '->', 'fileage', ';', '/', '*', 'Unpartition', 'the', 'filestruct', 'so', 'that', 'it', 'contains', 'all', 'the', 'unpartition_filestruct', '(', '&', 'filepart', ')', ';', '/', '*', 'Renumber', 'starting', 'with', 'the', 'beginning', 'line', 'of', 'the', 'renumber', '(', 'top_save', ')', ';', '/', '*', 'If', 'the', 'NO_NEWLINES', 'flag', ""isn''t"", 'end', 'if', '(', '!ISSET', '(', 'NO_NEWLINES', ')', '&&', 'openfile', '->', 'filebot', '->', 'data', '[', '0', ']', '!=', ""''"", ')', 'new_magicline', '(', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
409,"['stripe_getxattr_cbk', '(', 'call_frame_t', '*', 'frame', ',', 'void', '*', 'cookie', ',', 'xlator_t', '*', 'this', ',', 'int', 'op_ret', ',', 'int', 'op_errno', ',', 'dict_t', '*', 'xattr', ')', '{', 'int', 'call_cnt', '=', '0', ';', 'stripe_local_t', '*', 'local', '=', 'NULL', ';', 'VALIDATE_OR_GOTO', '(', 'frame', ',', 'out', ')', ';', 'VALIDATE_OR_GOTO', '(', 'frame', '->', 'local', ',', 'out', ')', ';', 'local', '=', 'frame', '->', 'local', ';', 'LOCK', '(', '&', 'frame', '->', 'lock', ')', ';', '{', 'call_cnt', '=', '--', 'local', '->', 'wind_count', ';', '}', 'UNLOCK', '(', '&', 'frame', '->', 'lock', ')', ';', 'if', '(', '!xattr', '||', '(', 'op_ret', '<', '0', ')', ')', 'goto', 'out', ';', 'local', '->', 'op_ret', '=', '0', ';', 'if', '(', '!local', '->', 'xattr', ')', '{', 'local', '->', 'xattr', '=', 'dict_ref', '(', 'xattr', ')', ';', '}', 'else', '{', 'stripe_aggregate_xattr', '(', 'local', '->', 'xattr', ',', 'xattr', ')', ';', '}', 'out', ':', 'if', '(', '!call_cnt', ')', '{', 'STRIPE_STACK_UNWIND', '(', 'getxattr', ',', 'frame', ',', 'local', '->', 'op_ret', ',', 'op_errno', ',', 'local', '->', 'xattr', ')', ';', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
410,"['p_is_debug_feature_item_enabled', '(', 'const', 'char', '*', 'debug_item', ')', '{', 'gboolean', 'enable', ';', 'char', '*', 'filename', ';', 'enable', '=', 'FALSE', ';', 'filename', '=', 'p_get_gapdebug_storyboard_config_file', '(', ')', ';', 'if', '(', 'filename', ')', '{', 'if', '(', 'gap_debug', ')', '{', 'printf', '(', '""""', ',', 'filename', ')', ';', '}', 'if', '(', 'g_file_test', '(', 'filename', ',', 'G_FILE_TEST_EXISTS', ')', ')', '{', 'FILE', '*', 'l_fp', ';', 'char', 'l_buf', '[', '400', ']', ';', 'if', '(', 'gap_debug', ')', '{', 'printf', '(', '""""', ',', 'debug_item', ')', ';', '}', 'l_fp', '=', 'g_fopen', '(', 'filename', ',', '""""', ')', ';', 'if', '(', 'l_fp', ')', '{', 'while', '(', 'NULL', '!=', 'fgets', '(', 'l_buf', ',', 'sizeof', '(', 'l_buf', ')', '-', '1', ',', 'l_fp', ')', ')', '{', 'l_buf', '[', 'sizeof', '(', 'l_buf', ')', '-', '1', ']', '=', ""''"", ';', 'gap_file_chop_trailingspace_and_nl', '(', '&', 'l_buf', '[', '0', ']', ')', ';', 'if', '(', 'gap_debug', ')', '{', 'printf', '(', '""""', ',', 'l_buf', ')', ';', '}', 'if', '(', 'strcmp', '(', 'l_buf', ',', 'debug_item', ')', '==', '0', ')', '{', 'enable', '=', 'TRUE', ';', 'break', ';', '}', '}', 'fclose', '(', 'l_fp', ')', ';', '}', '}', 'g_free', '(', 'filename', ')', ';', '}', 'return', '(', 'enable', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
411,"['strtoll_or_err', '(', 'const', 'char', '*', 'str', ',', 'const', 'char', '*', 'errmesg', ')', '{', 'long', 'long', 'num', ';', 'char', '*', 'end', '=', 'NULL', ';', 'if', '(', 'str', '==', 'NULL', '||', '*', 'str', '==', ""''"", ')', 'goto', 'err', ';', 'errno', '=', '0', ';', 'num', '=', 'strtoll', '(', 'str', ',', '&', 'end', ',', '10', ')', ';', 'if', '(', 'errno', '||', 'str', '==', 'end', '||', '(', 'end', '&&', '*', 'end', ')', ')', 'goto', 'err', ';', 'return', 'num', ';', 'err', ':', 'if', '(', 'errno', ')', 'err', '(', 'EXIT_FAILURE', ',', '""""', ',', 'errmesg', ',', 'str', ')', ';', 'errx', '(', 'EXIT_FAILURE', ',', '""""', ',', 'errmesg', ',', 'str', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
412,"['DoOpenProject', '(', 'const', 'wxString', '&', 'filename', ',', 'bool', 'addToHistory', ')', '{', '/', '/', 'Manager', ':', ':', 'Get', '(', ')', '->', 'GetLogManager', '(', ')', '->', 'DebugLog', '(', '_T', '(', '""""', ')', ',', 'filename', '.', 'wx_str', '(', ')', ')', ';', 'if', '(', '!wxFileExists', '(', 'filename', ')', ')', '{', 'cbMessageBox', '(', '_', '(', '""""', ')', ',', '_', '(', '""""', ')', ',', 'wxICON_ERROR', ')', ';', 'return', 'false', ';', '}', 'ShowHideStartPage', '(', 'true', ')', ';', '/', '/', 'hide', 'startherepage', ',', 'so', 'we', 'can', 'use', 'full', 'tab', '-', 'cbProject', '*', 'prj', '=', 'Manager', ':', ':', 'Get', '(', ')', '->', 'GetProjectManager', '(', ')', '->', 'LoadProject', '(', 'filename', ',', 'true', ')', ';', 'if', '(', 'prj', ')', '{', 'if', '(', 'addToHistory', ')', 'm_projectsHistory', '.', 'AddToHistory', '(', 'prj', '->', 'GetFilename', '(', ')', ')', ';', 'return', 'true', ';', '}', 'ShowHideStartPage', '(', ')', ';', '/', '/', 'show', '/', 'hide', 'startherepage', ',', 'dependant', 'of', 'settings', ',', 'if', 'loading', 'return', 'false', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
413,"['SMB2_set_compression', '(', 'const', 'unsigned', 'int', 'xid', ',', 'struct', 'cifs_tcon', '*', 'tcon', ',', 'u64', 'persistent_fid', ',', 'u64', 'volatile_fid', ')', '{', 'int', 'rc', ';', 'struct', 'compress_ioctl', 'fsctl_input', ';', 'char', '*', 'ret_data', '=', 'NULL', ';', 'fsctl_input', '.', 'CompressionState', '=', 'cpu_to_le16', '(', 'COMPRESSION_FORMAT_DEFAULT', ')', ';', 'rc', '=', 'SMB2_ioctl', '(', 'xid', ',', 'tcon', ',', 'persistent_fid', ',', 'volatile_fid', ',', 'FSCTL_SET_COMPRESSION', ',', 'true', '/', '*', 'is_fsctl', '*', '/', ',', '(', 'char', '*', ')', '&', 'fsctl_input', '/', '*', 'data', 'input', '*', '/', ',', '2', '/', '*', 'in', 'data', 'len', '*', '/', ',', '&', 'ret_data', '/', '*', 'out', 'data', '*', '/', ',', 'NULL', ')', ';', 'cifs_dbg', '(', 'FYI', ',', '""""', ',', 'rc', ')', ';', 'return', 'rc', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
414,"['brasero_volume_source_open_device_handle', '(', 'BraseroDeviceHandle', '*', 'handle', ',', 'GError', '*', '*', 'error', ')', '{', 'int', 'size', ';', 'BraseroVolSrc', '*', 'src', ';', 'BraseroScsiResult', 'result', ';', 'BraseroScsiGetConfigHdr', '*', 'hdr', '=', 'NULL', ';', 'g_return_val_if_fail', '(', 'handle', '!=', 'NULL', ',', 'NULL', ')', ';', 'src', '=', 'g_new0', '(', 'BraseroVolSrc', ',', '1', ')', ';', 'src', '->', 'ref', '=', '1', ';', 'src', '->', 'data', '=', 'handle', ';', 'src', '->', 'seek', '=', 'brasero_volume_source_seek_device_handle', ';', 'result', '=', 'brasero_mmc2_get_configuration_feature', '(', 'handle', ',', 'BRASERO_SCSI_FEAT_RD_CD', ',', '&', 'hdr', ',', '&', 'size', ',', 'NULL', ')', ';', 'if', '(', 'result', '==', 'BRASERO_SCSI_OK', '&&', 'hdr', '->', 'desc', '->', 'current', ')', '{', 'BRASERO_MEDIA_LOG', '(', '""""', ')', ';', 'src', '->', 'read', '=', 'brasero_volume_source_readcd_device_handle', ';', 'g_free', '(', 'hdr', ')', ';', 'return', 'src', ';', '}', 'g_free', '(', 'hdr', ')', ';', 'hdr', '=', 'NULL', ';', 'result', '=', 'brasero_mmc2_get_configuration_feature', '(', 'handle', ',', 'BRASERO_SCSI_FEAT_RD_RANDOM', ',', '&', 'hdr', ',', '&', 'size', ',', 'NULL', ')', ';', 'if', '(', 'result', '==', 'BRASERO_SCSI_OK', '&&', 'hdr', '->', 'desc', '->', 'current', ')', '{', 'BRASERO_MEDIA_LOG', '(', '""""', ')', ';', 'src', '->', 'read', '=', 'brasero_volume_source_read10_device_handle', ';', 'g_free', '(', 'hdr', ')', ';', '}', 'else', '{', 'BRASERO_MEDIA_LOG', '(', '""""', ')', ';', 'src', '->', 'read', '=', 'brasero_volume_source_readcd_device_handle', ';', 'g_free', '(', 'hdr', ')', ';', '}', 'return', 'src', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
415,"['uvc_video_stats_dump', '(', 'struct', 'uvc_streaming', '*', 'stream', ',', 'char', '*', 'buf', ',', 'size_t', 'size', ')', '{', 'unsigned', 'int', 'scr_sof_freq', ';', 'unsigned', 'int', 'duration', ';', 'struct', 'timespec', 'ts', ';', 'size_t', 'count', '=', '0', ';', 'ts', '.', 'tv_sec', '=', 'stream', '->', 'stats', '.', 'stream', '.', 'stop_ts', '.', '-', 'stream', '->', 'stats', '.', 'stream', '.', 'start_ts', '.', 'tv_sec', ';', 'ts', '.', 'tv_nsec', '=', 'stream', '->', 'stats', '.', 'stream', '.', 'stop_ts', '.', '-', 'stream', '->', 'stats', '.', 'stream', '.', 'start_ts', '.', 'tv_nsec', ';', 'if', '(', 'ts', '.', 'tv_nsec', '<', '0', ')', '{', 'ts', '.', 'tv_sec', '--', ';', 'ts', '.', 'tv_nsec', '+=', '1000000000', ';', '}', '/', '*', 'Compute', 'the', 'SCR', '.', 'SOF', 'frequency', 'estimate', '.', 'At', 'the', 'nominal', '1kHz', '*', 'frequency', 'this', 'will', 'not', 'overflow', 'before', 'more', 'than', '1h', '.', 'duration', '=', 'ts', '.', 'tv_sec', '*', '1000', '+', 'ts', '.', 'tv_nsec', '/', '1000000', ';', 'if', '(', 'duration', '!=', '0', ')', 'scr_sof_freq', '=', 'stream', '->', 'stats', '.', 'stream', '.', 'scr_sof_count', '*', '/', 'duration', ';', 'scr_sof_freq', '=', '0', ';', 'count', '+=', 'scnprintf', '(', 'buf', '+', 'count', ',', 'size', '-', 'count', ',', '""""', ',', 'stream', '->', 'stats', '.', 'stream', '.', 'nb_frames', ',', 'stream', '->', 'stats', '.', 'stream', '.', 'nb_packets', ',', 'stream', '->', 'stats', '.', 'stream', '.', 'nb_empty', ',', 'stream', '->', 'stats', '.', 'stream', '.', 'nb_errors', ',', 'stream', '->', 'stats', '.', 'stream', '.', 'nb_invalid', ')', ';', 'count', '+=', 'scnprintf', '(', 'buf', '+', 'count', ',', 'size', '-', 'count', ',', '""""', ',', 'stream', '->', 'stats', '.', 'stream', '.', 'nb_pts_early', ',', 'stream', '->', 'stats', '.', 'stream', '.', 'nb_pts_initial', ',', 'stream', '->', 'stats', '.', 'stream', '.', 'nb_pts_constant', ')', ';', 'count', '+=', 'scnprintf', '(', 'buf', '+', 'count', ',', 'size', '-', 'count', ',', '""""', ',', 'stream', '->', 'stats', '.', 'stream', '.', 'nb_scr_count_ok', ',', 'stream', '->', 'stats', '.', 'stream', '.', 'nb_scr_diffs_ok', ')', ';', 'count', '+=', 'scnprintf', '(', 'buf', '+', 'count', ',', 'size', '-', 'count', ',', '""""', ',', 'stream', '->', 'stats', '.', 'stream', '.', 'min_sof', ',', 'stream', '->', 'stats', '.', 'stream', '.', 'max_sof', ',', 'scr_sof_freq', '/', '1000', ',', 'scr_sof_freq', '%', '1000', ')', ';', 'return', 'count', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
416,"['save_acl', '(', 'const', 'char', '*', 'identifier', ',', 'const', 'maildir_aclt', '*', 'acl', ',', 'void', '*', 'cb_arg', ')', '{', 'if', '(', 'fprintf', '(', '(', 'FILE', '*', ')', 'cb_arg', ',', '""""', ',', 'identifier', ',', 'maildir_aclt_ascstr', '(', 'acl', ')', ')', '<', '0', ')', 'return', '-', '1', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
417,"['flakey_status', '(', 'struct', 'dm_target', '*', 'ti', ',', 'status_type_t', 'type', ',', 'unsigned', 'status_flags', ',', 'char', '*', 'result', ',', 'unsigned', 'maxlen', ')', '{', 'unsigned', 'sz', '=', '0', ';', 'struct', 'flakey_c', '*', 'fc', '=', 'ti', '->', 'private', ';', 'unsigned', 'drop_writes', ';', 'switch', '(', 'type', ')', '{', 'case', 'STATUSTYPE_INFO', ':', 'result', '[', '0', ']', '=', ""''"", ';', 'break', ';', 'case', 'STATUSTYPE_TABLE', ':', 'DMEMIT', '(', '""""', ',', 'fc', '->', 'dev', '->', 'name', ',', '(', 'unsigned', 'long', 'long', ')', 'fc', '->', 'start', ',', 'fc', '->', 'up_interval', ',', 'fc', '->', 'down_interval', ')', ';', 'drop_writes', '=', 'test_bit', '(', 'DROP_WRITES', ',', '&', 'fc', '->', 'flags', ')', ';', 'DMEMIT', '(', '""""', ',', 'drop_writes', '+', '(', 'fc', '->', 'corrupt_bio_byte', '>', '0', ')', '*', '5', ')', ';', 'if', '(', 'drop_writes', ')', 'DMEMIT', '(', '""""', ')', ';', 'if', '(', 'fc', '->', 'corrupt_bio_byte', ')', 'DMEMIT', '(', '""""', ',', 'fc', '->', 'corrupt_bio_byte', ',', '(', 'fc', '->', 'corrupt_bio_rw', '==', 'WRITE', ')', '?', ""''"", ':', ""''"", ',', 'fc', '->', 'corrupt_bio_value', ',', 'fc', '->', 'corrupt_bio_flags', ')', ';', 'break', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
418,"['dupe_item_remove', '(', 'DupeWindow', '*', 'dw', ',', 'DupeItem', '*', 'di', ')', '{', 'if', '(', '!di', ')', 'return', ';', 'if', '(', 'dw', '->', 'working', '&&', 'dw', '->', 'working', '->', 'data', '==', 'di', ')', '{', 'dw', '->', 'working', '=', 'dw', '->', 'working', '->', 'prev', ';', '}', 'if', '(', 'dw', '->', 'thumb_loader', '&&', 'dw', '->', 'thumb_item', '==', 'di', ')', '{', 'dupe_thumb_step', '(', 'dw', ')', ';', '}', 'if', '(', 'dw', '->', 'setup_point', '&&', 'dw', '->', 'setup_point', '->', 'data', '==', 'di', ')', '{', 'dw', '->', 'setup_point', '=', 'dupe_setup_point_step', '(', 'dw', ',', 'dw', '->', 'setup_point', ')', ';', 'if', '(', 'dw', '->', 'img_loader', ')', '{', 'image_loader_free', '(', 'dw', '->', 'img_loader', ')', ';', 'dw', '->', 'img_loader', '=', 'NULL', ';', 'dw', '->', 'idle_id', '=', 'g_idle_add', '(', 'dupe_check_cb', ',', 'dw', ')', ';', '}', '}', 'if', '(', 'di', '->', 'group', '&&', 'dw', '->', 'dupes', ')', '{', 'DupeItem', '*', 'parent', ';', 'parent', '=', 'dupe_match_find_parent', '(', 'dw', ',', 'di', ')', ';', 'if', '(', 'di', '==', 'parent', ')', '{', 'if', '(', 'g_list_length', '(', 'parent', '->', 'group', ')', '<', '2', ')', '{', 'DupeItem', '*', 'child', ';', 'child', '=', 'dupe_match_highest_rank', '(', 'parent', ')', ';', 'dupe_match_link_clear', '(', 'child', ',', 'TRUE', ')', ';', 'dupe_listview_remove', '(', 'dw', ',', 'child', ')', ';', 'dupe_match_link_clear', '(', 'parent', ',', 'TRUE', ')', ';', 'dupe_listview_remove', '(', 'dw', ',', 'parent', ')', ';', 'dw', '->', 'dupes', '=', 'g_list_remove', '(', 'dw', '->', 'dupes', ',', 'parent', ')', ';', '}', '{', 'DupeItem', '*', 'new_parent', ';', 'DupeMatch', '*', 'dm', ';', 'dm', '=', 'parent', '->', 'group', '->', 'data', ';', 'new_parent', '=', 'dm', '->', 'di', ';', 'dupe_match_reparent', '(', 'dw', ',', 'parent', ',', 'new_parent', ')', ';', 'dupe_listview_remove', '(', 'dw', ',', 'parent', ')', ';', '}', '}', '{', 'if', '(', 'g_list_length', '(', 'parent', '->', 'group', ')', '<', '2', ')', '{', 'dupe_match_link_clear', '(', 'parent', ',', 'TRUE', ')', ';', 'dupe_listview_remove', '(', 'dw', ',', 'parent', ')', ';', 'dw', '->', 'dupes', '=', 'g_list_remove', '(', 'dw', '->', 'dupes', ',', 'parent', ')', ';', '}', 'dupe_match_link_clear', '(', 'di', ',', 'TRUE', ')', ';', 'dupe_listview_remove', '(', 'dw', ',', 'di', ')', ';', '}', '}', '{', 'dupe_match_link_clear', '(', 'di', ',', 'TRUE', ')', ';', '}', 'if', '(', 'dw', '->', 'second_list', '&&', 'g_list_find', '(', 'dw', '->', 'second_list', ',', 'di', ')', ')', '{', 'dupe_second_remove', '(', 'dw', ',', 'di', ')', ';', '}', '{', 'dw', '->', 'list', '=', 'g_list_remove', '(', 'dw', '->', 'list', ',', 'di', ')', ';', '}', 'dupe_item_free', '(', 'di', ')', ';', 'dupe_window_update_count', '(', 'dw', ',', 'FALSE', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
419,"['cache_rrset_new', '(', 'dns_msg_question_t', '*', 'q', ',', 'dns_tls_t', '*', 'tls', ')', '{', 'dns_cache_rrset_t', '*', 'rrset', ';', 'if', '(', '(', 'rrset', '=', '(', 'dns_cache_rrset_t', '*', ')', 'dns_mpool_get', '(', '&', 'CacheSetPool', ',', 'tls', '->', 'tls_id', ')', ')', '==', 'NULL', ')', '{', 'if', '(', '(', 'rrset', '=', 'cache_rrset_drain', '(', 'tls', ')', ')', '==', 'NULL', ')', 'return', 'NULL', ';', '}', 'cache_rrset_reset', '(', 'rrset', ',', 'tls', ')', ';', 'if', '(', 'cache_rrset_retain', '(', 'rrset', ')', '<', '0', ')', 'plog', '(', 'LOG_CRIT', ',', '""""', ',', '__func__', ')', ';', 'return', 'rrset', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
420,"['mouseReleaseEvent', '(', 'QMouseEvent', '*', 'e', ')', '{', 'if', '(', '!isVisible', '(', ')', ')', 'return', ';', 'emit', 'clicked', '(', '(', 'int', ')', 'e', '->', 'button', '(', ')', ')', ';', 'hide', '(', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
421,"['uprv_getPOSIXID', '(', 'void', ')', '{', 'static', 'const', 'char', '*', 'posixID', '=', 'NULL', ';', 'if', '(', 'posixID', '==', '0', ')', '{', '/', '*', '*', 'On', 'Solaris', 'two', 'different', 'calls', 'to', 'setlocale', 'can', 'result', '*', 'different', 'values', '.', 'Only', 'get', 'this', 'value', 'once', '.', '*', '*', 'We', 'must', 'check', 'this', 'first', 'because', 'an', 'application', 'can', 'set', 'this', '.', '*', '*', 'LC_ALL', ""can''s"", 'platform', 'dependent', '.', 'The', '*', 'environment', 'variable', 'seems', 'to', 'affect', 'LC_CTYPE', 'variable', 'by', 'default', '.', '*', 'Here', 'is', 'what', 'setlocale', '(', 'LC_ALL', ',', 'NULL', ')', 'can', 'return', '.', '*', 'HPUX', 'can', 'return', '*', 'Solaris', 'can', 'return', '/', 'en_US', '/', 'C', '/', 'C', '/', 'C', '/', 'C', '/', 'C', 'on', 'the', 'second', 'try', '.', '*', 'Linux', 'can', 'return', 'LC_CTYPE', '=', 'C', ';', 'LC_NUMERIC', '=', 'C', ';', '.', '.', '.', '*', '*', 'The', 'default', 'codepage', 'detection', 'also', 'needs', 'to', 'use', 'LC_CTYPE', '.', '*', '*', 'Do', 'not', 'call', 'setlocale', '(', 'LC_', '*', ',', '""""', ')', '!', 'Using', 'an', 'empty', 'string', '*', 'of', 'NULL', ',', 'will', 'modify', 'the', 'libc', 'behavior', '.', 'posixID', '=', 'setlocale', '(', 'LC_CTYPE', ',', 'NULL', ')', ';', 'if', '(', '(', 'posixID', '==', '0', ')', '||', '(', 'uprv_strcmp', '(', '""""', ',', 'posixID', ')', '==', '0', ')', '||', '(', 'uprv_strcmp', '(', '""""', ',', 'posixID', ')', '==', '0', ')', ')', '{', 'posixID', '=', 'getenv', '(', '""""', ')', ';', 'if', '(', 'posixID', '==', '0', ')', '{', 'posixID', '=', 'getenv', '(', '""""', ')', ';', 'if', '(', 'posixID', '==', '0', ')', '{', 'posixID', '=', 'getenv', '(', '""""', ')', ';', '}', '}', '}', 'if', '(', '(', 'posixID', '==', '0', ')', '||', '(', 'uprv_strcmp', '(', '""""', ',', 'posixID', ')', '==', '0', ')', '||', '(', 'uprv_strcmp', '(', '""""', ',', 'posixID', ')', '==', '0', ')', ')', '{', 'posixID', '=', '""""', ';', '}', '}', 'return', 'posixID', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
422,"['addArgumentOnTheFly', '(', 'const', 'string', '&', 'name', ',', 'int', 'numValues', ',', '.', '.', '.', ')', '{', 'va_list', 'args', ';', 'va_start', '(', 'args', ',', 'numValues', ')', ';', 'if', '(', 'numValues', '==', '0', ')', '{', '_resArgs', '[', 'name', ']', '.', 'push_back', '(', '""""', ')', ';', '}', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'numValues', ';', '++', 'i', ')', '{', 'char', '*', 'v', '=', 'va_arg', '(', 'args', ',', 'char', '*', ')', ';', '_resArgs', '[', 'name', ']', '.', 'push_back', '(', 'v', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
423,"['max8997_led_brightness_set', '(', 'struct', 'led_classdev', '*', 'led_cdev', ',', 'enum', 'led_brightness', 'value', ')', '{', 'struct', 'max8997_led', '*', 'led', '=', 'container_of', '(', 'led_cdev', ',', 'struct', 'max8997_led', ',', 'cdev', ')', ';', 'if', '(', 'value', ')', '{', 'max8997_led_set_current', '(', 'led', ',', 'value', ')', ';', 'max8997_led_enable', '(', 'led', ',', 'true', ')', ';', '}', 'else', '{', 'max8997_led_set_current', '(', 'led', ',', 'value', ')', ';', 'max8997_led_enable', '(', 'led', ',', 'false', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
424,"['GetStringSize', '(', 'char', '*', 'string', ',', 'int', 'level', ')', '{', 'if', '(', 'level', '>', 'this', '->', 'MaxFontLevel', ')', '{', 'level', '=', 'this', '->', 'MaxFontLevel', ';', '}', 'int', 'size', '=', '0', ',', 'i', ';', 'for', '(', 'i', '=', '0', ';', 'string', '[', 'i', ']', '!=', ""''"", ';', 'i', '++', ')', '{', 'if', '(', 'string', '[', 'i', ']', '<', '32', ')', '{', 'continue', ';', '}', 'if', '(', 'string', '[', 'i', ']', '>', '126', ')', '{', 'continue', ';', '}', 'size', '+=', 'this', '->', 'FontWidths', '[', 'level', ']', '[', 'string', '[', 'i', ']', '-', '32', ']', ';', '}', 'return', 'size', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
425,"['find_scope', '(', 'const', 'std', ':', ':', 'list', '<', 'hname_t', '>', '&', 'path', ')', '{', 'if', '(', 'path', '.', 'empty', '(', ')', ')', 'return', '0', ';', 'for', '(', 'list', '<', 'NetScope', '*', '>', ':', ':', 'const_iterator', 'scope', '=', 'root_scopes_', '.', 'begin', '(', ')', ';', 'scope', '!=', 'root_scopes_', '.', 'end', '(', ')', ';', 'scope', '++', ')', '{', 'NetScope', '*', 'cur', '=', '*', 'scope', ';', 'if', '(', 'path', '.', 'front', '(', ')', '!=', 'cur', '->', 'fullname', '(', ')', ')', 'continue', ';', 'std', ':', ':', 'list', '<', 'hname_t', '>', 'tmp', '=', 'path', ';', 'tmp', '.', 'pop_front', '(', ')', ';', 'while', '(', 'cur', ')', '{', 'if', '(', 'tmp', '.', 'empty', '(', ')', ')', 'return', 'cur', ';', 'cur', '=', 'cur', '->', 'child', '(', 'tmp', '.', 'front', '(', ')', ')', ';', 'tmp', '.', 'pop_front', '(', ')', ';', '}', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
426,"['ibus_serializable_real_deserialize', '(', 'IBusSerializable', '*', 'object', ',', 'GVariant', '*', 'variant', ')', '{', 'const', 'gchar', '*', 'key', ';', 'GVariant', '*', 'value', ';', 'GVariantIter', '*', 'iter', '=', 'NULL', ';', 'g_variant_get_child', '(', 'variant', ',', '1', ',', '""""', ',', '&', 'iter', ')', ';', 'while', '(', 'g_variant_iter_loop', '(', 'iter', ',', '""""', ',', '&', 'key', ',', '&', 'value', ')', ')', '{', 'GVariant', '*', 'attachment', '=', 'g_variant_get_variant', '(', 'value', ')', ';', 'ibus_serializable_set_attachment', '(', 'object', ',', 'key', ',', 'attachment', ')', ';', 'g_variant_unref', '(', 'attachment', ')', ';', '}', 'g_variant_iter_free', '(', 'iter', ')', ';', 'return', '2', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
427,"['insert', '(', 'int', 'type', ',', 'int', 'idno', ',', 'int', 'nindex', ',', 'int', '*', 'indexarray', ')', '{', 'int', 'i', ',', 'j', ';', 'int', 'variableid', ';', 'int', 'found', ';', 'if', '(', 'Variable', '.', 'getidnumber', '(', 'idno', ')', '!=', '-', '1', ')', '{', 'outerror', '(', 'glno', ',', '""""', ')', ';', 'return', ';', '}', 'i', '=', 'getidnumber', '(', 'idno', ')', ';', 'if', '(', 'i', '!=', '-', '1', ')', '{', 'outerror', '(', 'glno', ',', '""""', ')', ';', 'return', ';', '}', 'i', '=', '0', ';', 'if', '(', 'nvars', '<', 'maxidnumber', ')', '{', 'found', '=', '1', ';', 'while', '(', 'i', '<', 'nindex', '&&', 'found', ')', '{', 'variableid', '=', 'Variable', '.', 'getidnumber', '(', 'indexarray', '[', 'i', ']', ')', ';', 'if', '(', 'variableid', '==', '-', '1', ')', 'found', '=', '0', ';', '{', 'arrayindex', '[', 'nvars', ']', '[', 'i', ']', '=', 'variableid', ';', 'i', '++', ';', '}', '}', 'if', '(', '!found', ')', '{', 'outerror', '(', 'glno', ',', '""""', ')', ';', 'printf', '(', '""""', ',', 'idname', '[', 'indexarray', '[', 'i', ']', ']', '.', 'c_str', '(', ')', ')', ';', 'return', ';', '}', 'for', '(', 'j', '=', 'i', ';', 'j', '<', 'mx_array_dim', ';', 'j', '++', ')', 'arrayindex', '[', 'nvars', ']', '[', 'j', ']', '=', '0', ';', 'vararray', '[', 'nvars', ']', '=', 'idname', '[', 'idno', ']', ';', 'arraynindex', '[', 'nvars', ']', '=', 'nindex', ';', 'arraytype', '[', 'nvars', ']', '=', 'type', ';', 'nvars', '++', ';', '}', '{', 'outerror', '(', 'glno', ',', '""""', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
428,"['setValue', '(', 'const', 'QVariant', '&', 'value', ')', '{', 'if', '(', 'd', '->', 'm_Type', '==', 'ExtraDocument', ')', '{', 'd', '->', 'setDocumentHtml', '(', 'value', ')', ';', 'd', '->', 'setDirty', '(', ')', ';', '}', 'else', 'if', '(', 'd', '->', 'm_Value', '!=', 'value', ')', '{', 'd', '->', 'm_Value', '=', 'value', ';', 'd', '->', 'setDirty', '(', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
429,"['CountChar', '(', 'char', '*', 'string', ',', 'char', 'sep', ')', '{', 'char', '*', 'sp', ';', 'int', 'count', '=', '0', ';', 'if', '(', 'string', '==', 'NULL', ')', '{', 'return', '0', ';', '}', 'if', '(', 'string', '&&', 'strlen', '(', 'string', ')', '==', '0', ')', '{', 'return', '0', ';', '}', 'for', '(', 'sp', '=', 'string', ';', '*', 'sp', '!=', ""''"", ';', 'sp', '++', ')', '{', 'if', '(', '*', 'sp', '==', ""''"", '&&', '*', '(', 'sp', '+', '1', ')', '==', 'sep', ')', '{', '++', 'sp', ';', '}', 'else', 'if', '(', '*', 'sp', '==', 'sep', ')', '{', 'count', '++', ';', '}', '}', 'return', 'count', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
430,"['expandargv', '(', 'int', '*', 'argcp', ',', 'char', '*', '*', '*', 'argvp', ')', '{', 'int', 'i', '=', '0', ';', 'int', 'argv_dynamic', '=', '0', ';', '/', '*', 'Limit', 'the', 'number', 'of', 'response', 'files', 'that', 'we', 'parse', 'in', 'unsigned', 'int', 'iteration_limit', '=', '2000', ';', '/', '*', 'Loop', 'over', 'the', 'arguments', ',', 'handling', 'response', 'files', '.', 'We', 'always', 'while', '(', '++', 'i', '<', '*', 'argcp', ')', '{', 'const', 'char', '*', 'filename', ';', 'FILE', '*', 'f', ';', '/', '*', 'An', 'upper', 'bound', 'on', 'the', 'number', 'of', 'characters', 'in', 'the', 'long', 'pos', ';', '/', '*', 'The', 'number', 'of', 'characters', 'in', 'the', 'response', 'file', ',', 'when', 'size_t', 'len', ';', '/', '*', 'A', 'dynamically', 'allocated', 'buffer', 'used', 'to', 'hold', 'options', 'read', 'from', 'char', '*', 'buffer', ';', '/', '*', 'Dynamically', 'allocated', 'storage', 'for', 'the', 'options', 'read', 'from', 'char', '*', '*', 'file_argv', ';', 'size_t', 'file_argc', ';', 'filename', '=', '(', '*', 'argvp', ')', '[', 'i', ']', ';', 'if', '(', 'filename', '[', '0', ']', '!=', ""''"", ')', 'continue', ';', 'if', '(', '--', 'iteration_limit', '==', '0', ')', '{', 'fprintf', '(', 'stderr', ',', '""""', ',', '(', '*', 'argvp', ')', '[', '0', ']', ')', ';', 'xexit', '(', '1', ')', ';', '}', 'f', '=', 'fopen', '(', '++', 'filename', ',', '""""', ')', ';', 'if', '(', '!f', ')', 'continue', ';', 'if', '(', 'fseek', '(', 'f', ',', '0L', ',', 'SEEK_END', ')', '==', '-', '1', ')', 'goto', 'error', ';', 'pos', '=', 'ftell', '(', 'f', ')', ';', 'if', '(', 'pos', '==', '-', '1', ')', 'goto', 'error', ';', 'if', '(', 'fseek', '(', 'f', ',', '0L', ',', 'SEEK_SET', ')', '==', '-', '1', ')', 'goto', 'error', ';', 'buffer', '=', '(', 'char', '*', ')', 'xmalloc', '(', 'pos', '*', 'sizeof', '(', 'char', ')', '+', '1', ')', ';', 'len', '=', 'fread', '(', 'buffer', ',', 'sizeof', '(', 'char', ')', ',', 'pos', ',', 'f', ')', ';', 'if', '(', 'len', '!=', '(', 'size_t', ')', '/', '*', 'On', 'Windows', ',', 'fread', 'may', 'return', 'a', 'value', 'smaller', 'than', 'POS', ',', 'due', 'to', 'CR', '/', 'LF', '->', 'CR', 'translation', 'when', 'reading', 'text', 'files', '.', '&&', 'ferror', '(', 'f', ')', ')', 'goto', 'error', ';', 'buffer', '[', 'len', ']', '=', ""''"", ';', '/', '*', 'If', 'the', 'file', 'is', 'empty', 'or', 'contains', 'only', 'whitespace', ',', 'buildargv', 'return', 'a', 'single', 'empty', 'argument', '.', 'In', 'this', 'context', 'we', 'want', 'no', 'arguments', ',', 'if', '(', 'only_whitespace', '(', 'buffer', ')', ')', '{', 'file_argv', '=', '(', 'char', '*', '*', ')', 'xmalloc', '(', 'sizeof', '(', 'char', '*', ')', ')', ';', 'file_argv', '[', '0', ']', '=', 'NULL', ';', '}', 'file_argv', '=', 'buildargv', '(', 'buffer', ')', ';', 'if', '(', '!argv_dynamic', ')', '*', 'argvp', '=', 'dupargv', '(', '*', 'argvp', ')', ';', 'file_argc', '=', '0', ';', 'while', '(', 'file_argv', '[', 'file_argc', ']', ')', '++', 'file_argc', ';', '/', '*', 'Now', ',', 'insert', 'FILE_ARGV', 'into', 'ARGV', '.', 'The', '""""', 'below', 'handles', '*', 'argvp', '=', '(', '(', 'char', '*', '*', ')', 'xrealloc', '(', '*', 'argvp', ',', '(', '*', 'argcp', '+', 'file_argc', '+', '1', ')', '*', 'sizeof', '(', 'char', '*', ')', ')', ')', ';', 'memmove', '(', '*', 'argvp', '+', 'i', '+', 'file_argc', ',', '*', 'argvp', '+', 'i', '+', '1', ',', '(', '*', 'argcp', '-', 'i', ')', '*', 'sizeof', '(', 'char', '*', ')', ')', ';', 'memcpy', '(', '*', 'argvp', '+', 'i', ',', 'file_argv', ',', 'file_argc', '*', 'sizeof', '(', 'char', '*', ')', ')', ';', '/', '*', 'The', 'original', 'option', 'has', 'been', 'replaced', 'by', 'all', 'the', '*', 'argcp', '+=', 'file_argc', '-', '1', ';', '/', '*', 'Free', 'up', 'memory', 'allocated', 'to', 'process', 'the', 'response', 'file', '.', 'We', 'not', 'use', 'freeargv', 'because', 'the', 'individual', 'options', 'in', 'free', '(', 'file_argv', ')', ';', 'free', '(', 'buffer', ')', ';', '/', '*', 'Rescan', 'all', 'of', 'the', 'arguments', 'just', 'read', 'to', 'support', '--', 'i', ';', 'error', ':', 'fclose', '(', 'f', ')', ';', '}', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
431,"['temp_kvs_init', '(', 'void', ')', '{', 'uint16_t', 'cmd', ';', 'uint32_t', 'nodeid', ',', 'num_children', ',', 'size', ';', 'Buf', 'buf', '=', 'NULL', ';', 'xfree', '(', 'temp_kvs_buf', ')', ';', 'temp_kvs_cnt', '=', '0', ';', 'temp_kvs_size', '=', 'TEMP_KVS_SIZE_INC', ';', 'temp_kvs_buf', '=', 'xmalloc', '(', 'temp_kvs_size', ')', ';', 'if', '(', 'in_stepd', '(', ')', ')', '{', 'cmd', '=', 'TREE_CMD_KVS_FENCE', ';', '}', 'else', '{', 'cmd', '=', 'TREE_CMD_KVS_FENCE_RESP', ';', '}', 'buf', '=', 'init_buf', '(', '1024', ')', ';', 'pack16', '(', 'cmd', ',', 'buf', ')', ';', 'if', '(', 'in_stepd', '(', ')', ')', '{', 'nodeid', '=', 'job_info', '.', 'nodeid', ';', 'num_children', '=', 'tree_info', '.', 'num_children', '+', '1', ';', '}', 'size', '=', 'get_buf_offset', '(', 'buf', ')', ';', 'if', '(', 'temp_kvs_cnt', '+', 'size', '>', 'temp_kvs_size', ')', '{', 'temp_kvs_size', '+=', 'TEMP_KVS_SIZE_INC', ';', 'xrealloc', '(', 'temp_kvs_buf', ',', 'temp_kvs_size', ')', ';', '}', 'memcpy', '(', '&', 'temp_kvs_buf', '[', 'temp_kvs_cnt', ']', ',', 'get_buf_data', '(', 'buf', ')', ',', 'size', ')', ';', 'temp_kvs_cnt', '+=', 'size', ';', 'free_buf', '(', 'buf', ')', ';', 'tasks_to_wait', '=', '0', ';', 'children_to_wait', '=', '0', ';', 'return', 'SLURM_SUCCESS', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
432,"['qt_static_metacall', '(', 'QObject', '*', '_o', ',', 'QMetaObject', ':', ':', 'Call', '_c', ',', 'int', '_id', ',', 'void', '*', '*', '_a', ')', '{', 'if', '(', '_c', '==', 'QMetaObject', ':', ':', 'InvokeMetaMethod', ')', '{', 'Q_ASSERT', '(', 'staticMetaObject', '.', 'cast', '(', '_o', ')', ')', ';', 'auth_tcp_client', '*', '_t', '=', 'static_cast', '<', 'auth_tcp_client', '*', '>', '(', '_o', ')', ';', 'switch', '(', '_id', ')', '{', 'case', '0', ':', '_t', '->', 'emit_tcp_state', '(', '(', '*', 'reinterpret_cast', '<', 'int', '(', '*', ')', '>', '(', '_a', '[', '1', ']', ')', ')', ')', ';', 'break', ';', 'case', '1', ':', '_t', '->', 'emit_error', '(', ')', ';', 'break', ';', 'case', '2', ':', '_t', '->', 'auth_suceeded', '(', ')', ';', 'break', ';', 'case', '3', ':', '_t', '->', 'received_stream', '(', '(', '*', 'reinterpret_cast', '<', 'QString', '(', '*', ')', '>', '(', '_a', '[', '1', ']', ')', ')', ')', ';', 'break', ';', 'case', '4', ':', '_t', '->', 'received_stream', '(', '(', '*', 'reinterpret_cast', '<', 'QTcpSocket', '*', '(', '*', ')', '>', '(', '_a', '[', '1', ']', ')', ')', ')', ';', 'break', ';', 'case', '5', ':', '_t', '->', 'disconnected_client', '(', '(', '*', 'reinterpret_cast', '<', 'int', '(', '*', ')', '>', '(', '_a', '[', '1', ']', ')', ')', ')', ';', 'break', ';', 'case', '6', ':', '_t', '->', 'disconnected_socket', '(', ')', ';', 'break', ';', 'case', '7', ':', '_t', '->', 'wrong_password', '(', ')', ';', 'break', ';', 'case', '8', ':', '_t', '->', 'update_progress_size', '(', '(', '*', 'reinterpret_cast', '<', 'int', '(', '*', ')', '>', '(', '_a', '[', '1', ']', ')', ')', ',', '(', '*', 'reinterpret_cast', '<', 'int', '(', '*', ')', '>', '(', '_a', '[', '2', ']', ')', ')', ')', ';', 'break', ';', 'case', '9', ':', '_t', '->', 'connect_to_server', '(', '(', '*', 'reinterpret_cast', '<', 'const', 'char', '*', '(', '*', ')', '>', '(', '_a', '[', '1', ']', ')', ')', ',', '(', '*', 'reinterpret_cast', '<', 'int', '(', '*', ')', '>', '(', '_a', '[', '2', ']', ')', ')', ')', ';', 'break', ';', 'case', '10', ':', '_t', '->', 'stop_client', '(', ')', ';', 'break', ';', 'case', '11', ':', '_t', '->', 'socket_error', '(', '(', '*', 'reinterpret_cast', '<', 'QAbstractSocket', ':', ':', 'SocketError', '(', '*', ')', '>', '(', '_a', '[', '1', ']', ')', ')', ')', ';', 'break', ';', 'case', '12', ':', '_t', '->', 'disconnected_client', '(', ')', ';', 'break', ';', 'case', '13', ':', '_t', '->', 'read_from_server', '(', ')', ';', 'break', ';', 'default', ':', ';', '}', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
433,"['DSDPAddFixedVariable', '(', 'DSDPSchurMat', 'M', ',', 'int', 'vari', ',', 'double', 'val', ')', '{', 'int', 'i', ',', 't', ',', '*', 'iinew', ',', 'info', ',', 'nvars', ';', 'double', '*', 'ddnew', ',', '*', 'vvnew', ';', 'FixedVariables', '*', 'fv', '=', '&', 'M', '.', 'schur', '->', 'fv', ';', 'DSDPFunctionBegin', ';', 'nvars', '=', 'fv', '->', 'nvars', ';', 'if', '(', 'nvars', '>=', 'fv', '->', 'nmaxvars', ')', '{', 't', '=', '2', '*', 'nvars', '+', '2', ';', 'DSDPCALLOC2', '(', '&', 'iinew', ',', 'int', ',', 't', ',', '&', 'info', ')', ';', 'DSDPCALLOC2', '(', '&', 'ddnew', ',', 'double', ',', 't', ',', '&', 'info', ')', ';', 'DSDPCALLOC2', '(', '&', 'vvnew', ',', 'double', ',', 't', ',', '&', 'info', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'nvars', ';', 'i', '++', ')', '{', 'iinew', '[', 'i', ']', '=', 'fv', '->', 'var', '[', 'i', ']', ';', 'ddnew', '[', 'i', ']', '=', 'fv', '->', 'fval', '[', 'i', ']', ';', 'vvnew', '[', 'i', ']', '=', 'fv', '->', 'fdual', '[', 'i', ']', ';', '}', 'DSDPFREE', '(', '&', 'fv', '->', 'var', ',', '&', 'info', ')', ';', 'DSDPCHKERR', '(', 'info', ')', ';', 'DSDPFREE', '(', '&', 'fv', '->', 'fval', ',', '&', 'info', ')', ';', 'DSDPCHKERR', '(', 'info', ')', ';', 'DSDPFREE', '(', '&', 'fv', '->', 'fdual', ',', '&', 'info', ')', ';', 'DSDPCHKERR', '(', 'info', ')', ';', 'fv', '->', 'var', '=', 'iinew', ';', 'fv', '->', 'fval', '=', 'ddnew', ';', 'fv', '->', 'fdual', '=', 'vvnew', ';', 'fv', '->', 'nmaxvars', '=', 't', ';', '}', 'fv', '->', 'var', '[', 'fv', '->', 'nvars', ']', '=', 'vari', ';', 'fv', '->', 'fval', '[', 'fv', '->', 'nvars', ']', '=', 'val', ';', 'fv', '->', 'nvars', '++', ';', 'DSDPFunctionReturn', '(', '0', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
434,"['emitUADD', '(', 'const', 'Instruction', '*', 'i', ')', '{', 'const', 'int', 'neg0', '=', 'i', '->', 'src', '(', '0', ')', '.', 'mod', '.', 'neg', '(', ')', ';', 'const', 'int', 'neg1', '=', 'i', '->', 'src', '(', '1', ')', '.', 'mod', '.', 'neg', '(', ')', '^', '(', '(', 'i', '->', 'op', '==', 'OP_SUB', ')', '?', '1', ':', '0', ')', ';', 'code', '[', '0', ']', '=', '0x20008000', ';', 'if', '(', 'i', '->', 'src', '(', '1', ')', '.', 'getFile', '(', ')', '==', 'FILE_IMMEDIATE', ')', '{', 'code', '[', '1', ']', '=', '0', ';', 'emitForm_IMM', '(', 'i', ')', ';', '}', 'if', '(', 'i', '->', 'encSize', '==', '8', ')', '{', 'code', '[', '0', ']', '=', '0x20000000', ';', 'code', '[', '1', ']', '=', '(', 'typeSizeof', '(', 'i', '->', 'dType', ')', '==', '2', ')', '?', '0', ':', '0x04000000', ';', 'emitForm_ADD', '(', 'i', ')', ';', '}', 'else', '{', 'emitForm_MUL', '(', 'i', ')', ';', '}', 'assert', '(', '!', '(', 'neg0', '&&', 'neg1', ')', ')', ';', 'code', '[', '0', ']', '|=', 'neg0', '<<', '28', ';', 'code', '[', '0', ']', '|=', 'neg1', '<<', '22', ';', 'if', '(', 'i', '->', 'flagsSrc', '>=', '0', ')', '{', '/', '/', 'addc', '==', 'sub', '|', 'assert', '(', '!', '(', 'code', '[', '0', ']', '&', '0x10400000', ')', '&&', '!i', '->', 'getPredicate', '(', ')', ')', ';', 'code', '[', '0', ']', '|=', '0x10400000', ';', 'srcId', '(', 'i', '->', 'src', '(', 'i', '->', 'flagsSrc', ')', ',', '32', '+', '12', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
435,"['count_nondeletable_pages', '(', 'Relation', 'onerel', ',', 'LVRelStats', '*', 'vacrelstats', ')', '{', 'BlockNumber', 'blkno', ';', 'blkno', '=', 'vacrelstats', '->', 'rel_pages', ';', 'while', '(', 'blkno', '>', 'vacrelstats', '->', 'nonempty_pages', ')', '{', 'Buffer\t\tbuf', ';', 'Page\t\tpage', ';', 'OffsetNumber', 'offnum', ',', 'maxoff', ';', 'bool\t\thastup', ';', '/', '*', '*', 'We', ""don't"", 'insert', 'a', 'vacuum', 'delay', 'point', 'here', ',', 'because', 'we', 'have', '*', 'exclusive', 'lock', 'on', 'the', 'table', 'which', 'we', 'want', 'to', 'hold', 'for', 'as', 'short', '*', 'time', 'as', 'possible', '.', 'We', 'still', 'need', 'to', 'check', 'for', 'interrupts', 'however', '.', 'CHECK_FOR_INTERRUPTS', '(', ')', ';', 'blkno', '--', ';', 'buf', '=', 'ReadBufferExtended', '(', 'onerel', ',', 'MAIN_FORKNUM', ',', 'blkno', ',', 'RBM_NORMAL', ',', 'vac_strategy', ')', ';', 'LockBuffer', '(', 'buf', ',', 'BUFFER_LOCK_SHARE', ')', ';', 'page', '=', 'BufferGetPage', '(', 'buf', ')', ';', 'if', '(', 'PageIsNew', '(', 'page', ')', '||', 'PageIsEmpty', '(', 'page', ')', ')', '{', 'UnlockReleaseBuffer', '(', 'buf', ')', ';', 'continue', ';', '}', 'hastup', '=', 'false', ';', 'maxoff', '=', 'PageGetMaxOffsetNumber', '(', 'page', ')', ';', 'for', '(', 'offnum', '=', 'FirstOffsetNumber', ';', 'offnum', '<=', 'maxoff', ';', 'offnum', '=', 'OffsetNumberNext', '(', 'offnum', ')', ')', '{', 'ItemId\t\titemid', ';', 'itemid', '=', 'PageGetItemId', '(', 'page', ',', 'offnum', ')', ';', '/', '*', '*', 'Note', ':', 'any', 'non', '-', 'unused', 'item', 'should', 'be', 'taken', 'as', 'a', 'reason', 'to', '*', 'this', 'page', '.', 'We', 'formerly', 'thought', 'that', 'DEAD', 'tuples', 'could', '*', 'thrown', 'away', ',', 'but', ""that''d"", 'not', 'have', '*', 'out', 'their', 'index', 'entries', '.', 'if', '(', 'ItemIdIsUsed', '(', 'itemid', ')', ')', '{', 'hastup', '=', 'true', ';', '}', 'UnlockReleaseBuffer', '(', 'buf', ')', ';', 'if', '(', 'hastup', ')', 'return', 'blkno', '+', '1', ';', '}', '/', '*', '*', 'If', 'we', 'fall', 'out', 'of', 'the', 'loop', ',', 'all', 'the', 'previously', '-', 'thought', '-', 'to', '-', 'be', '-', '*', 'pages', 'still', 'are', ';', 'we', 'need', 'not', 'bother', 'to', 'look', 'at', 'the', 'last', 'known', '-', '*', 'page', '.', 'return', 'vacrelstats', '->', 'nonempty_pages', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
436,"['__Pyx_InitGlobals', '(', 'void', ')', '{', 'if', '(', '__Pyx_InitStrings', '(', '__pyx_string_tab', ')', '<', '0', ')', '{', '__pyx_filename', '=', '__pyx_f', '[', '0', ']', ';', '__pyx_lineno', '=', '1', ';', '__pyx_clineno', '=', '__LINE__', ';', 'goto', '__pyx_L1_error', ';', '}', ';', '__pyx_int_4294967295', '=', 'PyInt_FromString', '(', '(', 'char', '*', ')', '""""', ',', '0', ',', '0', ')', ';', 'if', '(', 'unlikely', '(', '!__pyx_int_4294967295', ')', ')', '{', '__pyx_filename', '=', '__pyx_f', '[', '0', ']', ';', '__pyx_lineno', '=', '1', ';', '__pyx_clineno', '=', '__LINE__', ';', 'goto', '__pyx_L1_error', ';', '}', ';', 'return', '0', ';', '__pyx_L1_error', ':', ';', 'return', '-', '1', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
437,"['e_util_slist_to_strv', '(', 'const', 'GSList', '*', 'strings', ')', '{', 'const', 'GSList', '*', 'iter', ';', 'GPtrArray', '*', 'array', ';', 'array', '=', 'g_ptr_array_sized_new', '(', 'g_slist_length', '(', '(', 'GSList', '*', ')', 'strings', ')', '+', '1', ')', ';', 'for', '(', 'iter', '=', 'strings', ';', 'iter', ';', 'iter', '=', 'iter', '->', 'next', ')', '{', 'const', 'gchar', '*', 'str', '=', 'iter', '->', 'data', ';', 'if', '(', 'str', ')', 'g_ptr_array_add', '(', 'array', ',', 'g_strdup', '(', 'str', ')', ')', ';', '}', 'g_ptr_array_add', '(', 'array', ',', 'NULL', ')', ';', 'return', '(', 'gchar', '*', '*', ')', 'g_ptr_array_free', '(', 'array', ',', 'FALSE', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
438,"['force_reg', '(', 'enum', 'machine_mode', 'mode', ',', 'rtx', 'x', ')', '{', 'rtx', 'temp', ',', 'insn', ',', 'set', ';', 'if', '(', 'REG_P', '(', 'x', ')', ')', 'return', 'x', ';', 'if', '(', 'general_operand', '(', 'x', ',', 'mode', ')', ')', '{', 'temp', '=', 'gen_reg_rtx', '(', 'mode', ')', ';', 'insn', '=', 'emit_move_insn', '(', 'temp', ',', 'x', ')', ';', '}', '{', 'temp', '=', 'force_operand', '(', 'x', ',', 'NULL_RTX', ')', ';', 'if', '(', 'REG_P', '(', 'temp', ')', ')', 'insn', '=', 'get_last_insn', '(', ')', ';', '{', 'rtx', 'temp2', '=', 'gen_reg_rtx', '(', 'mode', ')', ';', 'insn', '=', 'emit_move_insn', '(', 'temp2', ',', 'temp', ')', ';', 'temp', '=', 'temp2', ';', '}', '}', '/', '*', 'Let', 'optimizers', 'know', 'that', ""TEMP's"", 'value', 'never', 'and', 'that', 'X', 'can', 'be', 'substituted', 'for', 'it', '.', ""Don't"", 'get', 'if', '(', 'CONSTANT_P', '(', 'x', ')', '&&', '(', 'set', '=', 'single_set', '(', 'insn', ')', ')', '!=', '&&', 'SET_DEST', '(', 'set', ')', '==', '&&', '!', 'rtx_equal_p', '(', 'x', ',', 'SET_SRC', '(', 'set', ')', ')', ')', 'set_unique_reg_note', '(', 'insn', ',', 'REG_EQUAL', ',', 'x', ')', ';', '/', '*', 'Let', 'optimizers', 'know', 'that', 'TEMP', 'is', 'a', 'pointer', ',', 'and', 'if', 'so', ',', '{', 'unsigned', 'align', '=', '0', ';', 'if', '(', 'GET_CODE', '(', 'x', ')', '==', 'SYMBOL_REF', ')', '{', 'align', '=', 'BITS_PER_UNIT', ';', 'if', '(', 'SYMBOL_REF_DECL', '(', 'x', ')', '&&', 'DECL_P', '(', 'SYMBOL_REF_DECL', '(', 'x', ')', ')', ')', 'align', '=', 'DECL_ALIGN', '(', 'SYMBOL_REF_DECL', '(', 'x', ')', ')', ';', '}', 'else', 'if', '(', 'GET_CODE', '(', 'x', ')', '==', 'LABEL_REF', ')', 'align', '=', 'BITS_PER_UNIT', ';', 'else', 'if', '(', 'GET_CODE', '(', 'x', ')', '==', '&&', 'GET_CODE', '(', 'XEXP', '(', 'x', ',', '0', ')', ')', '==', '&&', 'GET_CODE', '(', 'XEXP', '(', 'XEXP', '(', 'x', ',', '0', ')', ',', '0', ')', ')', '==', '&&', 'CONST_INT_P', '(', 'XEXP', '(', 'XEXP', '(', 'x', ',', '0', ')', ',', '1', ')', ')', ')', '{', 'rtx', 's', '=', 'XEXP', '(', 'XEXP', '(', 'x', ',', '0', ')', ',', '0', ')', ';', 'rtx', 'c', '=', 'XEXP', '(', 'XEXP', '(', 'x', ',', '0', ')', ',', '1', ')', ';', 'unsigned', 'sa', ',', 'ca', ';', 'sa', '=', 'BITS_PER_UNIT', ';', 'if', '(', 'SYMBOL_REF_DECL', '(', 's', ')', '&&', 'DECL_P', '(', 'SYMBOL_REF_DECL', '(', 's', ')', ')', ')', 'sa', '=', 'DECL_ALIGN', '(', 'SYMBOL_REF_DECL', '(', 's', ')', ')', ';', 'if', '(', 'INTVAL', '(', 'c', ')', '==', '0', ')', 'align', '=', 'sa', ';', '{', 'ca', '=', 'ctz_hwi', '(', 'INTVAL', '(', 'c', ')', ')', '*', 'BITS_PER_UNIT', ';', 'align', '=', 'MIN', '(', 'sa', ',', 'ca', ')', ';', '}', '}', 'if', '(', 'align', '||', '(', 'MEM_P', '(', 'x', ')', '&&', 'MEM_POINTER', '(', 'x', ')', ')', ')', 'mark_reg_pointer', '(', 'temp', ',', 'align', ')', ';', '}', 'return', 'temp', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
439,"['gtab_get_preedit', '(', 'char', '*', 'str', ',', 'GCIN_PREEDIT_ATTR', 'attr', '[', ']', ',', 'int', '*', 'pcursor', ',', 'int', '*', 'sub_comp_len', ')', '{', 'int', 'i', '=', '0', ';', 'int', 'strN', '=', '0', ';', 'int', 'attrN', '=', '0', ';', 'int', 'ch_N', '=', '0', ';', '/', '/', 'dbg', '(', '""""', ')', ';', 'str', '[', '0', ']', '=', '0', ';', '*', 'pcursor', '=', '0', ';', '#if', 'WIN32', '||', '*', 'sub_comp_len', '=', 'ggg', '.', 'ci', '>', '0', ';', '#if', 'if', '(', 'ggg', '.', 'gbufN', '&&', '!gcin_edit_display_ap_only', '(', ')', ')', '*', 'sub_comp_len', '|=', '4', ';', 'gboolean', 'ap_only', '=', 'gcin_edit_display_ap_only', '(', ')', ';', 'if', '(', 'gtab_phrase_on', '(', ')', ')', '{', 'attr', '[', '0', ']', '.', 'flag', '=', 'GCIN_PREEDIT_ATTR_FLAG_UNDERLINE', ';', 'attr', '[', '0', ']', '.', 'ofs0', '=', '0', ';', 'if', '(', 'ggg', '.', 'gbufN', ')', 'attrN', '=', '1', ';', 'gboolean', 'last_is_en_word', '=', 'FALSE', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'ggg', '.', 'gbufN', ';', 'i', '++', ')', '{', 'char', '*', 's', '=', 'gbuf', '[', 'i', ']', '.', 'ch', ';', 'char', 'tt', '[', 'MAX_CIN_PHR', '+', '2', ']', ';', 'if', '(', 'en_word_len', '(', 's', ')', '&&', '!', '(', 'gbuf', '[', 'i', ']', '.', 'flag', '&', 'FLAG_CHPHO_GTAB_BUF_EN_NO_SPC', ')', ')', '{', 'if', '(', 'last_is_en_word', ')', '{', 'strcpy', '(', 'tt', ',', '""""', ')', ';', 'strcat', '(', 'tt', ',', 's', ')', ';', 's', '=', 'tt', ';', '}', 'last_is_en_word', '=', 'TRUE', ';', '}', 'else', '{', 'last_is_en_word', '=', 'FALSE', ';', '}', 'int', 'len', '=', 'strlen', '(', 's', ')', ';', 'int', 'N', '=', 'utf8_str_N', '(', 's', ')', ';', 'ch_N', '+=', 'N', ';', 'if', '(', 'i', '<', 'ggg', '.', 'gbuf_cursor', ')', '*', 'pcursor', '+=', 'N', ';', 'if', '(', 'ap_only', '&&', 'i', '==', 'ggg', '.', 'gbuf_cursor', ')', '{', 'attr', '[', '1', ']', '.', 'ofs0', '=', '*', 'pcursor', ';', 'attr', '[', '1', ']', '.', 'ofs1', '=', '*', 'pcursor', '+', 'N', ';', 'attr', '[', '1', ']', '.', 'flag', '=', 'GCIN_PREEDIT_ATTR_FLAG_REVERSE', ';', 'attrN', '++', ';', '}', 'if', '(', 'gcin_display_on_the_spot_key', '(', ')', '&&', 'i', '==', 'ggg', '.', 'gbuf_cursor', ')', 'strN', '+=', 'get_DispInArea_str', '(', 'str', '+', 'strN', ')', ';', 'memcpy', '(', 'str', '+', 'strN', ',', 's', ',', 'len', ')', ';', 'strN', '+=', 'len', ';', '}', '}', 'if', '(', 'gcin_display_on_the_spot_key', '(', ')', '&&', 'i', '==', 'ggg', '.', 'gbuf_cursor', ')', 'strN', '+=', 'get_DispInArea_str', '(', 'str', '+', 'strN', ')', ';', 'str', '[', 'strN', ']', '=', '0', ';', 'attr', '[', '0', ']', '.', 'ofs1', '=', 'ch_N', ';', 'return', 'attrN', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
440,"['_nss_dns_getnetbyname_r', '(', 'const', 'char', '*', 'name', ',', 'struct', 'netent', '*', 'result', ',', 'char', '*', 'buffer', ',', 'size_t', 'buflen', ',', 'int', '*', 'errnop', ',', 'int', '*', 'herrnop', ')', '{', '{', 'querybuf', '*', 'buf', ';', 'u_char', '*', 'ptr', ';', '}', 'net_buffer', ';', 'querybuf', '*', 'orig_net_buffer', ';', 'int', 'anslen', ';', 'char', '*', 'qbuf', ';', 'enum', 'nss_status', 'status', ';', 'if', '(', '__res_maybe_init', '(', '&', '_res', ',', '0', ')', '==', '-', '1', ')', 'return', 'NSS_STATUS_UNAVAIL', ';', 'qbuf', '=', 'strdupa', '(', 'name', ')', ';', 'net_buffer', '.', 'buf', '=', 'orig_net_buffer', '=', '(', 'querybuf', '*', ')', 'alloca', '(', '1024', ')', ';', 'anslen', '=', '__libc_res_nsearch', '(', '&', '_res', ',', 'qbuf', ',', 'C_IN', ',', 'T_PTR', ',', 'net_buffer', '.', 'buf', '->', 'buf', ',', '1024', ',', '&', 'net_buffer', '.', 'ptr', ',', 'NULL', ',', 'NULL', ',', 'NULL', ')', ';', 'if', '(', 'anslen', '<', '0', ')', '{', '*', 'errnop', '=', 'errno', ';', 'if', '(', 'net_buffer', '.', 'buf', '!=', 'orig_net_buffer', ')', 'free', '(', 'net_buffer', '.', 'buf', ')', ';', 'return', '(', 'errno', '==', '||', 'errno', '==', '||', 'errno', '==', 'EAFNOSUPPORT', ')', '?', 'NSS_STATUS_UNAVAIL', ':', 'NSS_STATUS_NOTFOUND', ';', '}', 'status', '=', 'getanswer_r', '(', 'net_buffer', '.', 'buf', ',', 'anslen', ',', 'result', ',', 'buffer', ',', 'buflen', ',', 'errnop', ',', 'herrnop', ',', 'BYNAME', ')', ';', 'if', '(', 'net_buffer', '.', 'buf', '!=', 'orig_net_buffer', ')', 'free', '(', 'net_buffer', '.', 'buf', ')', ';', 'return', 'status', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
441,"['validateForm', '(', 'formTree', '*', 'ft', ')', '{', 'static', 'bool', 'guard', '=', 'false', ';', 'if', '(', 'ft', '==', 'NULL', ')', 'return', 'true', ';', 'if', '(', 'ft', '->', 'path_selector', '==', 'EXISTS', '||', 'ft', '->', 'path_selector', '==', 'ALWAYS', ')', '{', '/', '/', 'nonparametric', '/', '/', 'check', 'if', 'all', 'listed', 'actions', 'are', 'string', 'actname', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', '(', 'ft', '->', 'elements', ')', '->', 'elements', ';', '++', 'i', ')', '{', 'actname', '=', 'string', '(', '(', 'char', '*', ')', 'get', '(', 'ft', '->', 'elements', ',', 'i', ')', ')', ';', 'if', '(', 'actions', '.', 'count', '(', 'actname', ')', '==', '0', ')', '{', 'cerr', '<<', '""""', '<<', 'actname', '<<', 'endl', ';', 'return', 'false', ';', '}', '}', '}', 'else', 'if', '(', 'ft', '->', 'path_selector', '==', 'EXISTSPARA', '||', 'ft', '->', 'path_selector', '==', 'ALWAYSPARA', ')', '{', '/', '/', 'parametric', '/', '/', 'build', '/', 'gather', 'BDD', 'variables', 'for', 'string', 'parvarname', '=', 'ft', '->', 'varName', ';', 'vector', '<', 'BDD', '>', 'vv', ';', '/', '/', 'act_i', '+', '.', '.', '.', '+', 'act_k', 'encoded', 'for', 'curr', '.', 'var', '.', 'which', 'are', 'not', 'BDD', 'locvar', '=', 'manager', '.', 'bddZero', '(', ')', ';', '/', '/', 'act_i', '*', '.', '.', '.', '*', 'act_k', 'encoded', 'for', 'curr', '.', 'var', '.', 'which', 'are', 'BDD', 'loccvar', '=', 'manager', '.', 'bddOne', '(', ')', ';', 'if', '(', 'parVariableNameToBDDVec', '.', 'count', '(', 'parvarname', ')', '==', '0', ')', '{', 'parVars', '.', 'insert', '(', 'parvarname', ')', ';', 'for', '(', 'set', '<', 'string', '>', ':', ':', 'const_iterator', 'act', '=', 'actions', '.', 'begin', '(', ')', ';', 'act', '!=', 'actions', '.', 'end', '(', ')', ';', '++', 'act', ')', '{', '/', '/', 'collect', 'BDD', 'variables', 'for', 'BDD', 'currvar', ';', 'if', '(', '!guard', ')', '{', 'currvar', '=', 'getActionBDD', '(', '*', 'act', ')', ';', 'origVarName', '=', 'parvarname', ';', '}', 'else', 'currvar', '=', 'manager', '.', 'bddVar', '(', ')', ';', 'if', '(', '(', 'limits', '==', 'NULL', ')', '||', '(', '(', 'limits', '!=', 'NULL', ')', '&&', '!isActionConst', '(', '*', 'act', ')', ')', ')', 'locvar', '+=', 'currvar', ';', 'loccvar', '*=', 'currvar', ';', 'vv', '.', 'push_back', '(', 'currvar', ')', ';', '}', 'parVariableNameToBDDVec', '[', 'parvarname', ']', '=', 'vv', ';', 'allVarSel', '*=', 'locvar', '*', 'loccvar', ';', 'guard', '=', 'true', ';', 'nvars', '+=', 'actions', '.', 'size', '(', ')', ';', '}', '}', 'else', 'if', '(', 'ft', '->', 'path_selector', '==', 'NONEPARA', ')', '{', '/', '/', 'if', '(', 'ft', '->', 'opertr', '==', 'MNONE', ')', '{', '/', '/', 'check', 'if', 'propositions', 'are', 'string', 'proposition', '=', 'ft', '->', 'varName', ';', 'if', '(', 'propositions', '.', 'count', '(', 'proposition', ')', '==', '0', ')', '{', 'cerr', '<<', '""""', '<<', 'proposition', '<<', 'endl', ';', 'return', 'false', ';', '}', 'else', 'return', 'true', ';', '}', '}', 'else', '{', 'cerr', '<<', '""""', '<<', 'endl', ';', 'return', 'false', ';', '}', 'return', 'validateForm', '(', 'ft', '->', 'left', ')', '&&', 'validateForm', '(', 'ft', '->', 'right', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
442,"['print_import_ok', '(', 'PKT_public_key', '*', 'pk', ',', 'PKT_secret_key', '*', 'sk', ',', 'unsigned', 'int', 'reason', ')', '{', 'byte', 'array', '[', 'MAX_FINGERPRINT_LEN', ']', ',', '*', 's', ';', 'char', 'buf', '[', 'MAX_FINGERPRINT_LEN', '*', '2', '+', '30', ']', ',', '*', 'p', ';', 'size_t', 'i', ',', 'n', ';', 'sprintf', '(', 'buf', ',', '""""', ',', 'reason', ')', ';', 'p', '=', 'buf', '+', 'strlen', '(', 'buf', ')', ';', 'if', '(', 'pk', ')', 'fingerprint_from_pk', '(', 'pk', ',', 'array', ',', '&', 'n', ')', ';', 'fingerprint_from_sk', '(', 'sk', ',', 'array', ',', '&', 'n', ')', ';', 's', '=', 'array', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'n', ';', 'i', '++', ',', 's', '++', ',', 'p', '+=', '2', ')', 'sprintf', '(', 'p', ',', '""""', ',', '*', 's', ')', ';', 'write_status_text', '(', 'STATUS_IMPORT_OK', ',', 'buf', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
443,"['xps_rels_for_part', '(', 'char', '*', 'buf', ',', 'char', '*', 'name', ',', 'int', 'buflen', ')', '{', 'char', '*', 'p', ',', '*', 'basename', ';', 'p', '=', 'strrchr', '(', 'name', ',', ""''"", ')', ';', 'basename', '=', 'p', '?', 'p', '+', '1', ':', 'name', ';', 'fz_strlcpy', '(', 'buf', ',', 'name', ',', 'buflen', ')', ';', 'p', '=', 'strrchr', '(', 'buf', ',', ""''"", ')', ';', 'if', '(', 'p', ')', '*', 'p', '=', '0', ';', 'fz_strlcat', '(', 'buf', ',', '""""', ',', 'buflen', ')', ';', 'fz_strlcat', '(', 'buf', ',', 'basename', ',', 'buflen', ')', ';', 'fz_strlcat', '(', 'buf', ',', '""""', ',', 'buflen', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
444,"['dump_rt', '(', 'struct', 'lib_context', '*', 'lc', ',', 'struct', 'asr_raidtable', '*', 'rt', ')', '{', 'unsigned', 'i', ';', 'DP', '(', '""""', ',', 'rt', ',', 'rt', '->', 'ridcode', ')', ';', 'DP', '(', '""""', ',', 'rt', ',', 'rt', '->', 'rversion', ')', ';', 'DP', '(', '""""', ',', 'rt', ',', 'rt', '->', 'maxelm', ')', ';', 'DP', '(', '""""', ',', 'rt', ',', 'rt', '->', 'elmcnt', ')', ';', 'DP', '(', '""""', ',', 'rt', ',', 'rt', '->', 'elmsize', ')', ';', 'DP', '(', '""""', ',', 'rt', ',', 'rt', '->', 'rchksum', ')', ';', 'DP', '(', '""""', ',', 'rt', ',', 'rt', '->', 'raidFlags', ')', ';', 'DP', '(', '""""', ',', 'rt', ',', 'rt', '->', 'timestamp', ')', ';', 'P', '(', '""""', ',', 'rt', ',', 'rt', '->', 'irocFlags', ',', 'rt', '->', 'irocFlags', ',', 'rt', '->', 'irocFlags', '&', 'ASR_IF_BOOTABLE', '?', '""""', ':', '""""', ')', ';', 'DP', '(', '""""', ',', 'rt', ',', 'rt', '->', 'dirty', ')', ';', 'DP', '(', '""""', ',', 'rt', ',', 'rt', '->', 'actionPriority', ')', ';', 'DP', '(', '""""', ',', 'rt', ',', 'rt', '->', 'spareid', ')', ';', 'DP', '(', '""""', ',', 'rt', ',', 'rt', '->', 'sparedrivemagic', ')', ';', 'DP', '(', '""""', ',', 'rt', ',', 'rt', '->', 'raidmagic', ')', ';', 'DP', '(', '""""', ',', 'rt', ',', 'rt', '->', 'verifyDate', ')', ';', 'DP', '(', '""""', ',', 'rt', ',', 'rt', '->', 'recreateDate', ')', ';', 'log_print', '(', 'lc', ',', '""""', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'rt', '->', 'elmcnt', ';', 'i', '++', ')', 'dump_cl', '(', 'lc', ',', '&', 'rt', '->', 'ent', '[', 'i', ']', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
445,"['read_auth_reply', '(', 'fde_t', '*', 'fd', ',', 'void', '*', 'data', ')', '{', 'struct', 'AuthRequest', '*', 'auth', '=', 'data', ';', 'char', '*', 's', '=', 'NULL', ';', 'char', '*', 't', '=', 'NULL', ';', 'int', 'len', ';', 'int', 'count', ';', '/', '*', 'Why', '?', '*', 'Well', ',', 'recv', '(', ')', 'on', 'many', 'POSIX', 'systems', 'is', 'a', 'per', '-', 'packet', 'operation', ',', '*', 'and', 'we', 'do', 'not', 'necessarily', 'want', 'this', ',', 'because', 'on', 'lowspec', 'machines', ',', '*', 'the', 'ident', 'response', 'may', 'come', 'back', 'fragmented', ',', 'thus', 'resulting', 'in', '*', 'invalid', 'ident', 'response', ',', 'even', 'if', 'the', 'ident', 'response', 'was', 'really', 'OK', '.', '*', '*', 'So', 'PLEASE', 'do', 'not', 'change', 'this', 'code', 'to', 'recv', 'without', 'being', 'aware', 'of', '*', 'consequences', '.', '*', '*', '--', 'len', '=', 'read', '(', 'fd', '->', 'fd', ',', 'buf', ',', 'AUTH_BUFSIZ', ')', ';', 'if', '(', 'len', '<', '0', ')', '{', 'if', '(', 'ignoreErrno', '(', 'errno', ')', ')', 'comm_setselect', '(', 'fd', ',', 'COMM_SELECT_READ', ',', 'read_auth_reply', ',', 'auth', ',', '0', ')', ';', 'auth_error', '(', 'auth', ')', ';', 'return', ';', '}', 'if', '(', 'len', '>', '0', ')', '{', 'buf', '[', 'len', ']', '=', ""''"", ';', 'if', '(', '(', 's', '=', 'GetValidIdent', '(', 'buf', ')', ')', ')', '{', 't', '=', 'auth', '->', 'client', '->', 'username', ';', 'while', '(', '*', 's', '==', ""''"", '||', '*', 's', '==', ""''"", ')', 's', '++', ';', 'for', '(', 'count', '=', 'USERLEN', ';', '*', 's', '&&', 'count', ';', 's', '++', ')', '{', 'if', '(', '*', 's', '==', ""''"", ')', 'break', ';', 'if', '(', '!IsSpace', '(', '*', 's', ')', '&&', '*', 's', '!=', ""''"", '&&', '*', 's', '!=', ""''"", ')', '{', '*', 't', '++', '=', '*', 's', ';', 'count', '--', ';', '}', '}', '*', 't', '=', ""''"", ';', '}', '}', 'fd_close', '(', 'fd', ')', ';', 'ClearAuth', '(', 'auth', ')', ';', 'if', '(', 's', '==', 'NULL', ')', '{', 'sendheader', '(', 'auth', '->', 'client', ',', 'REPORT_FAIL_ID', ')', ';', '++', 'ServerStats', '.', 'is_abad', ';', '}', '{', 'sendheader', '(', 'auth', '->', 'client', ',', 'REPORT_FIN_ID', ')', ';', '++', 'ServerStats', '.', 'is_asuc', ';', 'SetGotId', '(', 'auth', '->', 'client', ')', ';', '}', 'release_auth_client', '(', 'auth', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
446,"['esl_sq_FetchFromMSA', '(', 'const', 'ESL_MSA', '*', 'msa', ',', 'int', 'which', ',', 'ESL_SQ', '*', '*', 'ret_sq', ')', '{', 'ESL_SQ', '*', 'sq', '=', 'NULL', ';', 'char', '*', 'acc', '=', 'NULL', ';', 'char', '*', 'desc', '=', 'NULL', ';', 'char', '*', 'ss', '=', 'NULL', ';', 'int', 'status', ';', 'if', '(', 'which', '>=', 'msa', '->', 'nseq', '||', 'which', '<', '0', ')', 'return', 'eslEOD', ';', 'if', '(', 'msa', '->', 'sqacc', '!=', 'NULL', ')', 'acc', '=', 'msa', '->', 'sqacc', '[', 'which', ']', ';', 'if', '(', 'msa', '->', 'sqdesc', '!=', 'NULL', ')', 'desc', '=', 'msa', '->', 'sqdesc', '[', 'which', ']', ';', 'if', '(', 'msa', '->', 'ss', '!=', 'NULL', ')', 'ss', '=', 'msa', '->', 'ss', '[', 'which', ']', ';', '{', 'if', '(', '(', 'sq', '=', 'esl_sq_CreateFrom', '(', 'msa', '->', 'sqname', '[', 'which', ']', ',', 'msa', '->', 'aseq', '[', 'which', ']', ',', 'desc', ',', 'acc', ',', 'ss', ')', ')', '==', 'NULL', ')', 'goto', 'ERROR', ';', 'if', '(', 'sq', '->', 'ss', '!=', 'NULL', ')', 'esl_strdealign', '(', 'sq', '->', 'ss', ',', 'sq', '->', 'seq', ',', 'gapchars', ',', 'NULL', ')', ';', 'esl_strdealign', '(', 'sq', '->', 'seq', ',', 'sq', '->', 'seq', ',', 'gapchars', ',', '&', '(', 'sq', '->', 'n', ')', ')', ';', '}', '#ifdef', '{', 'if', '(', '(', 'sq', '=', 'esl_sq_CreateDigitalFrom', '(', 'msa', '->', 'abc', ',', 'msa', '->', 'sqname', '[', 'which', ']', ',', 'msa', '->', 'ax', '[', 'which', ']', ',', 'msa', '->', 'alen', ',', 'desc', ',', 'acc', ',', 'ss', ')', ')', '==', 'NULL', ')', 'goto', 'ERROR', ';', 'if', '(', 'sq', '->', 'ss', '!=', 'NULL', ')', 'esl_abc_CDealign', '(', 'sq', '->', 'abc', ',', 'sq', '->', 'ss', '+', '1', ',', 'sq', '->', 'dsq', ',', 'NULL', ')', ';', 'esl_abc_XDealign', '(', 'sq', '->', 'abc', ',', 'sq', '->', 'dsq', ',', 'sq', '->', 'dsq', ',', '&', '(', 'sq', '->', 'n', ')', ')', ';', '}', 'if', '(', '(', 'status', '=', 'esl_sq_SetSource', '(', 'sq', ',', 'msa', '->', 'name', ')', ')', '!=', 'eslOK', ')', 'goto', 'ERROR', ';', 'sq', '->', 'start', '=', '1', ';', 'sq', '->', 'end', '=', 'sq', '->', 'n', ';', 'sq', '->', 'L', '=', 'sq', '->', 'n', ';', 'sq', '->', 'C', '=', '0', ';', 'sq', '->', 'W', '=', 'sq', '->', 'n', ';', '*', 'ret_sq', '=', 'sq', ';', 'return', 'eslOK', ';', 'ERROR', ':', 'esl_sq_Destroy', '(', 'sq', ')', ';', '*', 'ret_sq', '=', 'NULL', ';', 'return', 'eslEMEM', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
447,"['azx_interrupt', '(', 'int', 'irq', ',', 'void', '*', 'dev_id', ')', '{', 'struct', 'azx', '*', 'chip', '=', 'dev_id', ';', 'struct', 'hdac_bus', '*', 'bus', '=', 'azx_bus', '(', 'chip', ')', ';', 'u32', 'status', ';', '#ifdef', 'if', '(', 'azx_has_pm_runtime', '(', 'chip', ')', ')', 'if', '(', '!pm_runtime_active', '(', 'chip', '->', 'card', '->', 'dev', ')', ')', 'return', 'IRQ_NONE', ';', 'spin_lock', '(', '&', 'bus', '->', 'reg_lock', ')', ';', 'if', '(', 'chip', '->', 'disabled', ')', '{', 'spin_unlock', '(', '&', 'bus', '->', 'reg_lock', ')', ';', 'return', 'IRQ_NONE', ';', '}', 'status', '=', 'azx_readl', '(', 'chip', ',', 'INTSTS', ')', ';', 'if', '(', 'status', '==', '0', '||', 'status', '==', '0xffffffff', ')', '{', 'spin_unlock', '(', '&', 'bus', '->', 'reg_lock', ')', ';', 'return', 'IRQ_NONE', ';', '}', 'snd_hdac_bus_handle_stream_irq', '(', 'bus', ',', 'status', ',', 'stream_update', ')', ';', 'status', '=', 'azx_readb', '(', 'chip', ',', 'RIRBSTS', ')', ';', 'if', '(', 'status', '&', 'RIRB_INT_MASK', ')', '{', 'if', '(', 'status', '&', 'RIRB_INT_RESPONSE', ')', '{', 'if', '(', 'chip', '->', 'driver_caps', '&', 'AZX_DCAPS_CTX_WORKAROUND', ')', 'udelay', '(', '80', ')', ';', 'snd_hdac_bus_update_rirb', '(', 'bus', ')', ';', '}', 'azx_writeb', '(', 'chip', ',', 'RIRBSTS', ',', 'RIRB_INT_MASK', ')', ';', '}', 'spin_unlock', '(', '&', 'bus', '->', 'reg_lock', ')', ';', 'return', 'IRQ_HANDLED', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
448,"['compute_number_of_lines', '(', 'const', 'gchar', '*', 'text', ')', '{', 'const', 'gchar', '*', 'p', ';', 'gint', 'len', ';', 'gint', 'nb_of_lines', '=', '1', ';', 'if', '(', 'text', '==', 'NULL', ')', '{', 'return', '0', ';', '}', 'len', '=', 'strlen', '(', 'text', ')', ';', 'p', '=', 'text', ';', 'while', '(', 'len', '>', '0', ')', '{', 'gint', 'delimiter', ';', 'gint', 'next_paragraph', ';', 'pango_find_paragraph_boundary', '(', 'p', ',', 'len', ',', '&', 'delimiter', ',', '&', 'next_paragraph', ')', ';', 'if', '(', 'delimiter', '==', 'next_paragraph', ')', '{', 'break', ';', '}', 'p', '+=', 'next_paragraph', ';', 'len', '-=', 'next_paragraph', ';', 'nb_of_lines', '++', ';', '}', 'return', 'nb_of_lines', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
449,"['module_do_insmod_dep', '(', 'const', 'struct', 'kmod_list', '*', 'deps', ',', 'unsigned', 'int', 'flags', ',', 'struct', 'probe_insert_cb', '*', 'cb', ',', 'struct', 'kmod_list', '*', 'rec', ',', 'unsigned', 'int', 'reccount', ')', '{', 'const', 'struct', 'kmod_list', '*', 'd', ';', 'int', 'err', '=', '0', ';', 'if', '(', 'module_dep_has_loop', '(', 'deps', ',', 'rec', ',', 'reccount', ')', ')', 'return', '-', 'ELOOP', ';', 'kmod_list_foreach', '(', 'd', ',', 'deps', ')', '{', 'struct', 'kmod_module', '*', 'dm', '=', 'd', '->', 'data', ';', 'struct', 'kmod_list', '*', 'tmp', ';', 'tmp', '=', 'kmod_list_append', '(', 'rec', ',', 'dm', ')', ';', 'if', '(', 'tmp', '==', 'NULL', ')', 'return', '-', 'ENOMEM', ';', 'rec', '=', 'tmp', ';', 'err', '=', 'module_probe_insert_module', '(', 'dm', ',', 'flags', ',', 'NULL', ',', 'cb', ',', 'rec', ',', 'reccount', '+', '1', ')', ';', 'rec', '=', 'kmod_list_remove_n_latest', '(', 'rec', ',', '1', ')', ';', 'RET_CHECK_NOLOOP_OR_FAIL', '(', 'err', ',', 'flags', ',', 'finish', ')', ';', '}', 'finish', ':', 'return', 'err', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
450,"['save_BindSampler', '(', 'GLuint', 'unit', ',', 'GLuint', 'sampler', ')', '{', 'Node', '*', 'n', ';', 'GET_CURRENT_CONTEXT', '(', 'ctx', ')', ';', 'ASSERT_OUTSIDE_SAVE_BEGIN_END_AND_FLUSH', '(', 'ctx', ')', ';', 'n', '=', 'alloc_instruction', '(', 'ctx', ',', 'OPCODE_BIND_SAMPLER', ',', '2', ')', ';', 'if', '(', 'n', ')', '{', 'n', '[', '1', ']', '.', 'ui', '=', 'unit', ';', 'n', '[', '2', ']', '.', 'ui', '=', 'sampler', ';', '}', 'if', '(', 'ctx', '->', 'ExecuteFlag', ')', '{', 'CALL_BindSampler', '(', 'ctx', '->', 'Exec', ',', '(', 'unit', ',', 'sampler', ')', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
451,"['view_window_get_fd_list', '(', 'ViewWindow', '*', 'vw', ')', '{', 'GList', '*', 'list', '=', 'NULL', ';', 'ImageWindow', '*', 'imd', '=', 'view_window_active_image', '(', 'vw', ')', ';', 'if', '(', 'imd', ')', '{', 'FileData', '*', 'fd', '=', 'image_get_fd', '(', 'imd', ')', ';', 'if', '(', 'fd', ')', 'list', '=', 'g_list_append', '(', 'NULL', ',', 'file_data_ref', '(', 'fd', ')', ')', ';', '}', 'return', 'list', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
452,"['img_i2c_complete_transaction', '(', 'struct', 'img_i2c', '*', 'i2c', ',', 'int', 'status', ')', '{', 'img_i2c_switch_mode', '(', 'i2c', ',', 'MODE_INACTIVE', ')', ';', 'if', '(', 'status', ')', '{', 'i2c', '->', 'msg_status', '=', 'status', ';', 'img_i2c_transaction_halt', '(', 'i2c', ',', 'false', ')', ';', '}', 'complete', '(', '&', 'i2c', '->', 'msg_complete', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
453,"['check_integer', '(', 'HSCPRC', '*', 'hp', ',', 'HSCATTR', '*', 'dest', ',', 'STRPTR', 'value', ')', '{', 'BOOL', 'ok', '=', 'FALSE', ';', 'int', 'i', '=', '0', ';', 'if', '(', '(', 'value', '[', '0', ']', '==', ""''"", ')', '||', '(', 'value', '[', '0', ']', '==', ""''"", ')', ')', 'i', '=', '1', ';', 'if', '(', 'strlen', '(', 'value', ')', '-', 'i', ')', '{', 'ok', '=', 'TRUE', ';', 'while', '(', 'value', '[', 'i', ']', '&&', 'ok', ')', '{', 'if', '(', '!isdigit', '(', 'value', '[', 'i', ']', ')', ')', 'ok', '=', 'FALSE', ';', 'i', '++', ';', '}', '}', 'if', '(', '!ok', ')', '{', 'hsc_message', '(', 'hp', ',', 'MSG_ILLG_NUM', ',', '""""', ',', 'value', ',', 'dest', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
454,"['xgbe_tx_timer', '(', 'unsigned', 'long', 'data', ')', '{', 'struct', 'xgbe_channel', '*', 'channel', '=', '(', 'struct', 'xgbe_channel', '*', ')', 'data', ';', 'struct', 'xgbe_prv_data', '*', 'pdata', '=', 'channel', '->', 'pdata', ';', 'struct', 'napi_struct', '*', 'napi', ';', 'DBGPR', '(', '""""', ')', ';', 'napi', '=', '(', 'pdata', '->', 'per_channel_irq', ')', '?', '&', 'channel', '->', 'napi', ':', '&', 'pdata', '->', 'napi', ';', 'if', '(', 'napi_schedule_prep', '(', 'napi', ')', ')', '{', 'if', '(', 'pdata', '->', 'per_channel_irq', ')', 'disable_irq_nosync', '(', 'channel', '->', 'dma_irq', ')', ';', 'xgbe_disable_rx_tx_ints', '(', 'pdata', ')', ';', '__napi_schedule', '(', 'napi', ')', ';', '}', 'channel', '->', 'tx_timer_active', '=', '0', ';', 'DBGPR', '(', '""""', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
455,"['bench_signer', '(', 'private_crypto_tester_t', '*', 'this', ',', 'integrity_algorithm_t', 'alg', ',', 'signer_constructor_t', 'create', ')', '{', 'signer_t', '*', 'signer', ';', 'signer', '=', 'create', '(', 'alg', ')', ';', 'if', '(', 'signer', ')', '{', 'char', 'key', '[', 'signer', '->', 'get_key_size', '(', 'signer', ')', ']', ';', 'char', 'mac', '[', 'signer', '->', 'get_block_size', '(', 'signer', ')', ']', ';', 'chunk_t', 'buf', ';', 'struct', 'timespec', 'start', ';', 'u_int', 'runs', ';', 'memset', '(', 'key', ',', '0x12', ',', 'sizeof', '(', 'key', ')', ')', ';', 'if', '(', '!signer', '->', 'set_key', '(', 'signer', ',', 'chunk_from_thing', '(', 'key', ')', ')', ')', '{', 'return', '0', ';', '}', 'buf', '=', 'chunk_alloc', '(', 'this', '->', 'bench_size', ')', ';', 'memset', '(', 'buf', '.', 'ptr', ',', '0x34', ',', 'buf', '.', 'len', ')', ';', 'runs', '=', '0', ';', 'start_timing', '(', '&', 'start', ')', ';', 'while', '(', 'end_timing', '(', '&', 'start', ')', '<', 'this', '->', 'bench_time', ')', '{', 'if', '(', 'signer', '->', 'get_signature', '(', 'signer', ',', 'buf', ',', 'mac', ')', ')', '{', 'runs', '++', ';', '}', 'if', '(', 'signer', '->', 'verify_signature', '(', 'signer', ',', 'buf', ',', 'chunk_from_thing', '(', 'mac', ')', ')', ')', '{', 'runs', '++', ';', '}', '}', 'free', '(', 'buf', '.', 'ptr', ')', ';', 'signer', '->', 'destroy', '(', 'signer', ')', ';', 'return', 'runs', ';', '}', 'return', '0', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
456,"['on_button_pressed_repeat', '(', 'InputPadGtkButton', '*', 'button', ',', 'gpointer', 'data', ')', '{', 'guint', 'keysym', ';', 'g_return_if_fail', '(', 'INPUT_PAD_IS_GTK_BUTTON', '(', 'button', ')', ')', ';', 'keysym', '=', 'input_pad_gtk_button_get_keysym', '(', 'button', ')', ';', 'if', '(', '(', 'keysym', '==', 'XK_Control_L', ')', '||', '(', 'keysym', '==', 'XK_Control_R', ')', '||', '(', 'keysym', '==', 'XK_Alt_L', ')', '||', '(', 'keysym', '==', 'XK_Alt_L', ')', '||', '(', 'keysym', '==', 'XK_Shift_L', ')', '||', '(', 'keysym', '==', 'XK_Shift_R', ')', '||', '(', 'keysym', '==', 'XK_Num_Lock', ')', '||', 'FALSE', ')', '{', 'return', ';', '}', 'on_button_pressed', '(', 'GTK_BUTTON', '(', 'button', ')', ',', 'data', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
457,"['transfer_variables_to_widgets', '(', ')', '{', 'for', '(', 'type_mapWidgetsToVariables', ':', ':', 'iterator', 'iter', '=', 'm_mapWidgetsToVariables', '.', 'begin', '(', ')', ';', 'iter', '!=', 'm_mapWidgetsToVariables', '.', 'end', '(', ')', ';', '++', 'iter', ')', '{', 'transfer_one_widget', '(', 'iter', '->', 'first', ',', 'false', ')', ';', '/', '/', 'false', '=', 'to_widget', '.', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
458,"['Compare_files', '(', 'const', 'void', '*', 'e1', ',', 'const', 'void', '*', 'e2', ')', '{', 'if', '(', '(', '*', '(', 'file_list', '*', '*', ')', 'e1', ')', '->', 'time', '>', '(', '*', '(', 'file_list', '*', '*', ')', 'e2', ')', '->', 'time', ')', 'return', '1', ';', 'if', '(', '(', '*', '(', 'file_list', '*', '*', ')', 'e1', ')', '->', 'time', '<', '(', '*', '(', 'file_list', '*', '*', ')', 'e2', ')', '->', 'time', ')', 'return', '(', 'UNKNOWN', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
459,"['__ecereMethod___ecereNameSpace__ecere__gui__controls__EditBox_Record', '(', 'struct', '__ecereNameSpace__ecere__com__Instance', '*', 'this', ',', 'struct', '__ecereNameSpace__ecere__gui__controls__UndoAction', '*', 'action', ')', '{', 'struct', '__ecereNameSpace__ecere__gui__controls__EditBox', '*', '__ecerePointer___ecereNameSpace__ecere__gui__controls__EditBox', '=', '(', 'struct', '__ecereNameSpace__ecere__gui__controls__EditBox', '*', ')', '(', 'this', '?', '(', '(', '(', 'char', '*', ')', 'this', ')', '+', '__ecereClass___ecereNameSpace__ecere__gui__controls__EditBox', '->', 'offset', ')', ':', '0', ')', ';', 'if', '(', '!', '(', '(', 'struct', '__ecereNameSpace__ecere__gui__controls__UndoBuffer', '*', ')', '(', '(', '(', 'char', '*', ')', '__ecerePointer___ecereNameSpace__ecere__gui__controls__EditBox', '->', 'undoBuffer', '+', '__ecereClass___ecereNameSpace__ecere__gui__controls__UndoBuffer', '->', 'offset', ')', ')', ')', '->', 'dontRecord', ')', '{', '__ecereMethod___ecereNameSpace__ecere__gui__controls__UndoBuffer_Record', '(', '__ecerePointer___ecereNameSpace__ecere__gui__controls__EditBox', '->', 'undoBuffer', ',', 'action', ')', ';', '__ecereProp___ecereNameSpace__ecere__gui__controls__MenuItem_Set_disabled', '(', '__ecerePointer___ecereNameSpace__ecere__gui__controls__EditBox', '->', 'itemEditUndo', ',', '(', '(', 'struct', '__ecereNameSpace__ecere__gui__controls__UndoBuffer', '*', ')', '(', '(', '(', 'char', '*', ')', '__ecerePointer___ecereNameSpace__ecere__gui__controls__EditBox', '->', 'undoBuffer', '+', '__ecereClass___ecereNameSpace__ecere__gui__controls__UndoBuffer', '->', 'offset', ')', ')', ')', '->', 'curAction', '==', '0', ')', ';', '__ecereProp___ecereNameSpace__ecere__gui__controls__MenuItem_Set_disabled', '(', '__ecerePointer___ecereNameSpace__ecere__gui__controls__EditBox', '->', 'itemEditRedo', ',', '(', '(', 'struct', '__ecereNameSpace__ecere__gui__controls__UndoBuffer', '*', ')', '(', '(', '(', 'char', '*', ')', '__ecerePointer___ecereNameSpace__ecere__gui__controls__EditBox', '->', 'undoBuffer', '+', '__ecereClass___ecereNameSpace__ecere__gui__controls__UndoBuffer', '->', 'offset', ')', ')', ')', '->', 'curAction', '==', '(', '(', 'struct', '__ecereNameSpace__ecere__gui__controls__UndoBuffer', '*', ')', '(', '(', '(', 'char', '*', ')', '__ecerePointer___ecereNameSpace__ecere__gui__controls__EditBox', '->', 'undoBuffer', '+', '__ecereClass___ecereNameSpace__ecere__gui__controls__UndoBuffer', '->', 'offset', ')', ')', ')', '->', 'count', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
460,"['rb_spawn_glusterfs_client', '(', 'glusterd_volinfo_t', '*', 'volinfo', ',', 'glusterd_brickinfo_t', '*', 'brickinfo', ')', '{', 'glusterd_conf_t', '*', 'priv', '=', 'NULL', ';', 'char', 'cmd_str', '[', '8192', ']', '=', '{', '0', ',', '}', ';', 'runner_t', 'runner', '=', '{', '0', ',', '}', ';', 'struct', 'stat', 'buf', ';', 'int', 'ret', '=', '-', '1', ';', 'priv', '=', 'THIS', '->', 'private', ';', 'runinit', '(', '&', 'runner', ')', ';', 'runner_add_arg', '(', '&', 'runner', ',', 'SBIN_DIR""""', ')', ';', 'runner_argprintf', '(', '&', 'runner', ',', '""""', '""""RB_CLIENTVOL_FILENAME', ',', 'priv', '->', 'workdir', ',', 'volinfo', '->', 'volname', ')', ';', 'runner_argprintf', '(', '&', 'runner', ',', '""""RB_CLIENT_MOUNTPOINT', ',', 'priv', '->', 'workdir', ',', 'volinfo', '->', 'volname', ')', ';', 'if', '(', 'volinfo', '->', 'memory_accounting', ')', 'runner_add_arg', '(', '&', 'runner', ',', '""""', ')', ';', 'ret', '=', 'runner_run', '(', '&', 'runner', ')', ';', 'if', '(', 'ret', ')', '{', 'gf_log', '(', '""""', ',', 'GF_LOG_DEBUG', ',', '""""', ')', ';', 'goto', 'out', ';', '}', 'gf_log', '(', '""""', ',', 'GF_LOG_DEBUG', ',', '""""', ',', 'brickinfo', '->', 'hostname', ',', 'brickinfo', '->', 'path', ')', ';', 'memset', '(', 'cmd_str', ',', '0', ',', 'sizeof', '(', 'cmd_str', ')', ')', ';', 'snprintf', '(', 'cmd_str', ',', '4096', ',', '""""', ',', 'priv', '->', 'workdir', ',', 'volinfo', '->', 'volname', ',', 'RB_CLIENT_MOUNTPOINT', ')', ';', 'ret', '=', 'stat', '(', 'cmd_str', ',', '&', 'buf', ')', ';', 'if', '(', 'ret', ')', '{', 'gf_log', '(', '""""', ',', 'GF_LOG_DEBUG', ',', '""""', ')', ';', 'goto', 'out', ';', '}', 'gf_log', '(', '""""', ',', 'GF_LOG_DEBUG', ',', '""""', ')', ';', 'ret', '=', '0', ';', 'out', ':', 'return', 'ret', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
461,"['cp_unparse_milliseconds', '(', 'uint32_t', 'ms', ')', '{', 'if', '(', 'ms', '&&', 'ms', '<', '1000', ')', 'return', 'String', '(', 'ms', ')', '+', '""""', ';', 'return', 'cp_unparse_real10', '(', 'ms', ',', '3', ')', '+', '""""', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
462,"['ddf_GetNumberType', '(', 'const', 'char', '*', 'line', ')', '{', 'ddf_NumberType', 'nt', ';', 'if', '(', 'strncmp', '(', 'line', ',', '""""', ',', '7', ')', '==', '0', ')', '{', 'nt', '=', 'ddf_Integer', ';', '}', 'else', 'if', '(', 'strncmp', '(', 'line', ',', '""""', ',', '8', ')', '==', '0', ')', '{', 'nt', '=', 'ddf_Rational', ';', '}', 'else', 'if', '(', 'strncmp', '(', 'line', ',', '""""', ',', '4', ')', '==', '0', ')', '{', 'nt', '=', 'ddf_Real', ';', '}', 'else', '{', 'nt', '=', 'ddf_Unknown', ';', '}', 'return', 'nt', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
463,"['brasero_iso9660_get_susp', '(', 'BraseroIsoCtx', '*', 'ctx', ',', 'BraseroIsoDirRec', '*', 'record', ',', 'guint', '*', 'susp_len', ')', '{', 'gchar', '*', 'susp_block', ';', 'gint', 'start', ';', 'gint', 'len', ';', 'start', '=', 'sizeof', '(', 'BraseroIsoDirRec', ')', '+', 'record', '->', 'id_size', ';', 'if', '(', 'start', '&', '1', ')', 'start', '++', ';', 'if', '(', 'ctx', '->', 'susp_skip', ')', 'start', '+=', 'ctx', '->', 'susp_skip', ';', 'if', '(', 'start', '>=', 'record', '->', 'record_size', ')', 'return', 'NULL', ';', 'len', '=', 'record', '->', 'record_size', '-', 'start', ';', 'if', '(', 'len', '<=', '0', ')', 'return', 'NULL', ';', 'if', '(', 'susp_len', ')', '*', 'susp_len', '=', 'len', ';', 'susp_block', '=', '(', '(', 'gchar', '*', ')', 'record', ')', '+', 'start', ';', 'BRASERO_MEDIA_LOG', '(', '""""', ')', ';', 'return', 'susp_block', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
464,"['videomode_from_timings', '(', 'const', 'struct', 'display_timings', '*', 'disp', ',', 'struct', 'videomode', '*', 'vm', ',', 'unsigned', 'int', 'index', ')', '{', 'struct', 'display_timing', '*', 'dt', ';', 'dt', '=', 'display_timings_get', '(', 'disp', ',', 'index', ')', ';', 'if', '(', '!dt', ')', 'return', '-', 'EINVAL', ';', 'videomode_from_timing', '(', 'dt', ',', 'vm', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
465,"['dsgw_change', '(', 'char', '*', 's', ',', 'dsgwsubst', '*', 'changes', ')', '{', 'auto', 'dsgwsubst', '*', 'ch', ';', 'if', '(', 'changes', '==', 'NULL', ')', 'return', 's', ';', 'for', '(', 'ch', '=', 'changes', ';', 'ch', ';', 'ch', '=', 'ch', '->', 'dsgwsubst_next', ')', '{', 'if', '(', 'strstr', '(', 's', ',', 'ch', '->', 'dsgwsubst_from', ')', ')', '{', 'break', ';', '}', '}', 'if', '(', 'ch', '!=', 'NULL', ')', '{', 'auto', 'char', '*', 'cs', '=', 'dsgw_ch_strdup', '(', 's', ')', ';', 'for', '(', 'ch', '=', 'changes', ';', 'ch', ';', 'ch', '=', 'ch', '->', 'dsgwsubst_next', ')', '{', 'auto', 'const', 'size_t', 'from_len', '=', 'strlen', '(', 'ch', '->', 'dsgwsubst_from', ')', ';', 'auto', 'const', 'size_t', 'to_len', '=', 'strlen', '(', 'ch', '->', 'dsgwsubst_to', ')', ';', 'auto', 'const', 'long', 'change_len', '=', 'to_len', '-', 'from_len', ';', 'auto', 'char', '*', 'p', ';', 'for', '(', 'p', '=', 'cs', ';', '(', 'p', '=', 'strstr', '(', 'p', ',', 'ch', '->', 'dsgwsubst_from', ')', ')', '!=', 'NULL', ';', 'p', '+=', 'to_len', ')', '{', 'if', '(', 'change_len', ')', '{', 'auto', 'const', 'size_t', 'offset', '=', 'p', '-', 'cs', ';', 'cs', '=', 'dsgw_ch_realloc', '(', 'cs', ',', 'strlen', '(', 'cs', ')', '+', 'change_len', '+', '1', ')', ';', 'p', '=', 'cs', '+', 'offset', ';', '}', 'memmove', '(', 'p', '+', 'to_len', ',', 'p', '+', 'from_len', ',', 'strlen', '(', 'p', '+', 'from_len', ')', '+', '1', ')', ';', '}', 'if', '(', 'to_len', '!=', '0', ')', '{', 'memcpy', '(', 'p', ',', 'ch', '->', 'dsgwsubst_to', ',', 'to_len', ')', ';', '}', '}', '}', 'return', 'cs', ';', '}', 'return', 's', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
466,"['rad_continuation2vp', '(', 'const', 'RADIUS_PACKET', '*', 'packet', ',', 'const', 'RADIUS_PACKET', '*', 'original', ',', 'const', 'char', '*', 'secret', ',', 'int', 'attribute', ',', 'uint8_t', '*', 'data', ',', 'size_t', 'packet_length', ',', 'int', 'flag', ',', 'DICT_ATTR', '*', 'da', ')', '{', 'size_t', 'tlv_length', ',', 'left', ';', 'uint8_t', '*', 'ptr', ';', 'uint8_t', '*', 'tlv_data', ';', 'VALUE_PAIR', '*', 'vp', ',', '*', 'head', ',', '*', '*', 'tail', ';', '/', '*', '*', '\tEnsure', 'we', 'have', 'data', 'that', ""hasn't"", 'been', 'split', '*', '\tmultiple', 'attributes', '.', 'if', '(', 'flag', ')', '{', 'tlv_data', '=', 'rad_coalesce', '(', 'attribute', ',', 'length', ',', 'data', ',', 'packet_length', ',', '&', 'tlv_length', ')', ';', 'if', '(', '!tlv_data', ')', 'return', 'NULL', ';', '}', 'else', '{', 'tlv_data', '=', 'data', ';', 'tlv_length', '=', 'length', ';', '}', '/', '*', '*', '\tNon', '-', 'TLV', 'types', 'cannot', 'be', 'continued', 'across', '*', '\tattributes', '.', 'This', 'is', 'true', 'even', 'of', 'keys', 'that', '*', '\tencrypted', 'with', 'the', 'tunnel', '-', 'password', 'method', '.', 'The', '*', '\tsays', 'that', 'they', 'can', 'be', 'continued', '.', '.', '.', 'but', 'also', 'that', '*', '\tkeys', 'are', '160', 'bits', ',', 'which', 'means', 'that', 'they', 'CANNOT', '*', '\tcontinued', '.', '<', 'sigh', '>', '*', '*', '\tNote', 'that', 'we', ""don't"", 'check', '""""', 'here', '.', 'The', '*', '\tcode', 'ensures', 'if', '(', '!da', '||', '(', 'da', '->', 'type', '!=', 'PW_TYPE_TLV', ')', ')', '{', 'not_well_formed', ':', 'tlv_data', '=', 'malloc', '(', 'tlv_length', ')', ';', 'if', '(', '!tlv_data', ')', 'return', 'NULL', ';', 'memcpy', '(', 'tlv_data', ',', 'data', ',', 'tlv_length', ')', ';', '}', 'vp', '=', 'paircreate', '(', 'attribute', ',', 'PW_TYPE_OCTETS', ')', ';', 'if', '(', '!vp', ')', 'return', 'NULL', ';', 'vp', '->', 'type', '=', 'PW_TYPE_TLV', ';', 'vp', '->', 'flags', '.', 'encrypt', '=', 'FLAG_ENCRYPT_NONE', ';', 'vp', '->', 'flags', '.', 'has_tag', '=', '0', ';', 'vp', '->', 'flags', '.', 'is_tlv', '=', '0', ';', 'vp', '->', 'vp_tlv', '=', 'tlv_data', ';', 'vp', '->', 'length', '=', 'tlv_length', ';', 'return', 'vp', ';', '/', '*', '*', '\tNow', '(', 'sigh', ')', 'we', 'walk', 'over', 'the', 'TLV', ',', 'seeing', 'if', 'it', '*', '\twell', '-', 'formed', '.', 'left', '=', 'tlv_length', ';', 'for', '(', 'ptr', '=', 'tlv_data', ';', 'ptr', '!=', '(', 'tlv_data', '+', 'tlv_length', ')', ';', 'ptr', '+=', 'ptr', '[', '1', ']', ')', '{', 'if', '(', '(', 'left', '<', '2', ')', '||', '(', 'ptr', '[', '1', ']', '<', '2', ')', '||', '(', 'ptr', '[', '1', ']', '>', 'left', ')', ')', '{', 'goto', 'not_well_formed', ';', '}', 'left', '-=', 'ptr', '[', '1', ']', ';', '}', '/', '*', '*', '\tNow', 'we', 'walk', 'over', 'the', 'TLV', '*', 'again', '*', ',', 'creating', 'sub', '-', ""tlv's"", '.', 'head', '=', 'NULL', ';', 'tail', '=', '&', 'head', ';', 'for', '(', 'ptr', '=', 'tlv_data', ';', 'ptr', '!=', '(', 'tlv_data', '+', 'tlv_length', ')', ';', 'ptr', '+=', 'ptr', '[', '1', ']', ')', '{', 'vp', '=', 'paircreate', '(', 'attribute', '|', '(', 'ptr', '[', '0', ']', '<<', '8', ')', ',', 'PW_TYPE_OCTETS', ')', ';', 'if', '(', '!vp', ')', '{', 'pairfree', '(', '&', 'head', ')', ';', 'goto', 'not_well_formed', ';', '}', 'vp', '=', 'data2vp', '(', 'packet', ',', 'original', ',', 'secret', ',', 'ptr', '[', '0', ']', ',', 'ptr', '[', '1', ']', '-', '2', ',', 'ptr', '+', '2', ',', 'vp', ')', ';', 'pairfree', '(', '&', 'head', ')', ';', 'goto', 'not_well_formed', ';', '}', '*', 'tail', '=', 'vp', ';', 'tail', '=', '&', '(', 'vp', '->', 'next', ')', ';', '}', '/', '*', '*', ""\tTLV''re"", 'not', '.', 'if', '(', 'tlv_data', '!=', 'data', ')', 'free', '(', 'tlv_data', ')', ';', 'if', '(', 'head', '->', 'next', ')', 'rad_sortvp', '(', '&', 'head', ')', ';', 'return', 'head', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
467,"['sftp_recvdata', '(', 'char', '*', 'buf', ',', 'int', 'len', ')', '{', 'outptr', '=', '(', 'unsigned', 'char', '*', ')', 'buf', ';', 'outlen', '=', 'len', ';', '/', '*', '*', 'See', 'if', 'the', 'pending', '-', 'input', 'block', 'contains', 'some', 'of', 'what', '*', 'need', '.', 'if', '(', 'pendlen', '>', '0', ')', '{', 'unsigned', 'pendused', '=', 'pendlen', ';', 'if', '(', 'pendused', '>', 'outlen', ')', 'pendused', '=', 'outlen', ';', 'memcpy', '(', 'outptr', ',', 'pending', ',', 'pendused', ')', ';', 'memmove', '(', 'pending', ',', 'pending', '+', 'pendused', ',', 'pendlen', '-', 'pendused', ')', ';', 'outptr', '+=', 'pendused', ';', 'outlen', '-=', 'pendused', ';', 'pendlen', '-=', 'pendused', ';', 'if', '(', 'pendlen', '==', '0', ')', '{', 'pendsize', '=', '0', ';', 'sfree', '(', 'pending', ')', ';', 'pending', '=', 'NULL', ';', '}', 'if', '(', 'outlen', '==', '0', ')', 'return', '1', ';', '}', 'while', '(', 'outlen', '>', '0', ')', '{', 'if', '(', 'back', '->', 'exitcode', '(', 'backhandle', ')', '>=', '0', '||', 'ssh_sftp_loop_iteration', '(', ')', '<', '0', ')', '}', 'return', '1', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
468,"['RAND_write_file', '(', 'const', 'char', '*', 'file', ')', '{', 'unsigned', 'char', 'buf', '[', 'BUFSIZE', ']', ';', 'int', 'i', ',', 'ret', '=', '0', ',', 'rand_err', '=', '0', ';', 'FILE', '*', 'out', '=', 'NULL', ';', 'int', 'n', ';', '#ifndef', 'struct', 'stat', 'sb', ';', 'i', '=', 'stat', '(', 'file', ',', '&', 'sb', ')', ';', 'if', '(', 'i', '!=', '-', '1', ')', '{', '#if', 'defined', '(', 'S_ISBLK', ')', '&&', 'defined', '(', 'S_ISCHR', ')', 'if', '(', 'S_ISBLK', '(', 'sb', '.', 'st_mode', ')', '||', 'S_ISCHR', '(', 'sb', '.', 'st_mode', ')', ')', '{', '/', '*', 'this', 'file', 'is', 'a', 'device', '.', 'we', ""don't"", 'write', 'back', 'to', 'it', '.', '*', 'we', '""""', 'on', 'the', 'assumption', 'this', 'is', 'some', '*', 'of', 'random', 'device', '.', 'Otherwise', 'attempting', 'to', 'write', '*', 'and', 'chmod', 'the', 'device', 'causes', 'problems', '.', 'return', '(', '1', ')', ';', '}', '}', '#if', 'defined', '(', 'O_CREAT', ')', '&&', '!defined', '(', 'OPENSSL_NO_POSIX_IO', ')', '&&', '!defined', '(', 'OPENSSL_SYS_VMS', ')', '{', '#ifndef', '#define', 'O_BINARY', '/', '*', 'chmod', '(', '.', '.', '.', ',', '0600', ')', 'is', 'too', 'late', 'to', 'protect', 'the', 'file', ',', 'int', 'fd', '=', 'open', '(', 'file', ',', 'O_WRONLY', '|', 'O_CREAT', '|', 'O_BINARY', ',', '0600', ')', ';', 'if', '(', 'fd', '!=', '-', '1', ')', 'out', '=', 'fdopen', '(', 'fd', ',', '""""', ')', ';', '}', '#ifdef', '/', '*', 'VMS', 'NOTE', ':', 'Prior', 'versions', 'of', 'this', 'routine', 'created', 'a', '*', 'version', 'of', 'the', 'rand', 'file', 'for', 'each', 'call', 'into', 'this', 'routine', ',', '*', 'deleted', 'all', 'existing', 'versions', 'named', ';', '-', '1', ',', 'and', 'finally', '*', 'the', 'current', 'version', 'as', ""''"", '.', 'Under', 'concurrent', 'usage', ',', '*', 'resulted', 'in', 'an', 'RMS', 'race', 'condition', 'in', 'rename', '(', ')', 'which', '*', 'orphan', 'files', '(', 'see', 'vms', 'message', 'help', 'for', 'RMS$_REENT', ')', '.', 'With', '*', 'fopen', '(', ')', 'calls', 'below', ',', 'openssl', '/', 'VMS', 'now', 'shares', 'the', 'top', '-', '*', 'version', 'of', 'the', 'rand', 'file', '.', 'Note', 'that', 'there', 'may', 'still', '*', 'conditions', 'where', 'the', 'top', '-', 'level', 'rand', 'file', 'is', 'locked', '.', 'If', 'so', ',', '*', 'code', 'will', 'then', 'create', 'a', 'new', 'version', 'of', 'the', 'rand', 'file', '.', '*', 'the', 'delete', 'and', 'rename', 'code', ',', 'this', 'can', 'result', 'in', 'ascending', '*', 'versions', 'that', 'stop', 'at', 'version', '32767', ',', 'and', 'this', 'routine', 'will', '*', 'return', 'an', 'error', '.', 'The', 'remedy', 'for', 'this', 'is', 'to', 'recode', 'the', '*', 'application', 'to', 'avoid', 'concurrent', 'use', 'of', 'the', 'rand', 'file', ',', '*', 'synchronize', 'usage', 'at', 'the', 'application', 'level', '.', 'Also', '*', 'whether', 'or', 'not', 'you', 'NEED', 'a', 'persistent', 'rand', 'file', 'in', 'a', '*', 'use', 'situation', '.', 'out', '=', 'vms_fopen', '(', 'file', ',', '""""', ',', 'VMS_OPEN_ATTRS', ')', ';', 'if', '(', 'out', '==', 'NULL', ')', 'out', '=', 'vms_fopen', '(', 'file', ',', '""""', ',', 'VMS_OPEN_ATTRS', ')', ';', 'if', '(', 'out', '==', 'NULL', ')', 'out', '=', 'fopen', '(', 'file', ',', '""""', ')', ';', 'if', '(', 'out', '==', 'NULL', ')', 'goto', 'err', ';', '#ifndef', 'chmod', '(', 'file', ',', '0600', ')', ';', 'n', '=', 'RAND_DATA', ';', 'for', '(', ';', ';', ')', '{', 'i', '=', '(', 'n', '>', 'BUFSIZE', ')', '?', 'BUFSIZE', ':', 'n', ';', 'n', '-=', 'BUFSIZE', ';', 'if', '(', 'RAND_bytes', '(', 'buf', ',', 'i', ')', '<=', '0', ')', 'rand_err', '=', '1', ';', 'i', '=', 'fwrite', '(', 'buf', ',', '1', ',', 'i', ',', 'out', ')', ';', 'if', '(', 'i', '<=', '0', ')', '{', 'ret', '=', '0', ';', 'break', ';', '}', 'ret', '+=', 'i', ';', 'if', '(', 'n', '<=', '0', ')', 'break', ';', '}', 'fclose', '(', 'out', ')', ';', 'OPENSSL_cleanse', '(', 'buf', ',', 'BUFSIZE', ')', ';', 'err', ':', 'return', '(', 'rand_err', '?', '-', '1', ':', 'ret', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
469,"['parse_cat_blob', '(', 'void', ')', '{', 'const', 'char', '*', 'p', ';', 'struct', 'object_entry', '*', 'oe', '=', 'oe', ';', 'unsigned', 'char', 'sha1', '[', '20', ']', ';', 'p', '=', 'command_buf', '.', 'buf', '+', 'strlen', '(', '""""', ')', ';', 'if', '(', '*', 'p', '==', ""''"", ')', '{', 'char', '*', 'x', ';', 'oe', '=', 'find_mark', '(', 'strtoumax', '(', 'p', '+', '1', ',', '&', 'x', ',', '10', ')', ')', ';', 'if', '(', 'x', '==', 'p', '+', '1', ')', 'die', '(', '""""', ',', 'command_buf', '.', 'buf', ')', ';', 'if', '(', '!oe', ')', 'die', '(', '""""', ',', 'command_buf', '.', 'buf', ')', ';', 'if', '(', '*', 'x', ')', 'die', '(', '""""', ',', 'command_buf', '.', 'buf', ')', ';', 'hashcpy', '(', 'sha1', ',', 'oe', '->', 'idx', '.', 'sha1', ')', ';', '}', 'else', '{', 'if', '(', 'get_sha1_hex', '(', 'p', ',', 'sha1', ')', ')', 'die', '(', '""""', ',', 'command_buf', '.', 'buf', ')', ';', 'if', '(', 'p', '[', '40', ']', ')', 'die', '(', '""""', ',', 'command_buf', '.', 'buf', ')', ';', 'oe', '=', 'find_object', '(', 'sha1', ')', ';', '}', 'cat_blob', '(', 'oe', ',', 'sha1', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
470,"['append', '(', 'const', 'NvjLogSeverity', '&', 'l', ',', 'const', 'std', ':', ':', 'string', '&', 'message', ',', 'const', 'std', ':', ':', 'string', '&', 'details', ')', '{', 'if', '(', 'file', '!=', 'NULL', ')', '(', '*', 'file', ')', '<<', 'message', '<<', 'endl', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
471,"['push_false', '(', ')', '{', 'if', '(', '!top', ')', 'return', '0', ';', 'if', '(', '!top', '->', 'value', ')', 'top', '=', 'new', 'n', '(', 'top', ',', '0', ',', '1', ')', ';', 'return', '!top', '->', 'value', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
472,"['GetStatusString', '(', 'RESULT', '*', 'result', ')', '{', 'wxString', 's', '=', 'wxEmptyString', ';', 'wxString', 'str', '=', 'wxEmptyString', ';', 'if', '(', 'result', '==', 'NULL', ')', '{', 's', '=', 'm_sNotAvailableString', ';', '}', 'else', '{', 's', '=', 'result_description', '(', 'result', ',', 'false', ')', ';', '}', 'str', '.', 'Printf', '(', '_', '(', '""""', ')', ',', 's', '.', 'c_str', '(', ')', ')', ';', 'return', 'str', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
473,"['DuplicateOrigAtom', '(', 'ORIG_ATOM_DATA', '*', 'new_orig_atom', ',', 'ORIG_ATOM_DATA', '*', 'orig_atom', ')', '{', 'inp_ATOM', '*', 'at', '=', 'NULL', ';', 'AT_NUMB', '*', 'nCurAtLen', '=', 'NULL', ';', 'AT_NUMB', '*', 'nOldCompNumber', '=', 'NULL', ';', 'if', '(', 'new_orig_atom', '->', 'at', '&&', 'new_orig_atom', '->', 'num_inp_atoms', '>=', 'orig_atom', '->', 'num_inp_atoms', ')', '{', 'at', '=', 'new_orig_atom', '->', 'at', ';', '}', 'else', '{', 'at', '=', '(', 'inp_ATOM', '*', ')', 'inchi_calloc', '(', 'orig_atom', '->', 'num_inp_atoms', '+', '1', ',', 'sizeof', '(', 'at', '[', '0', ']', ')', ')', ';', '}', 'if', '(', 'new_orig_atom', '->', 'nOldCompNumber', '&&', 'new_orig_atom', '->', 'num_components', '>=', 'orig_atom', '->', 'num_components', ')', '{', 'nCurAtLen', '=', 'new_orig_atom', '->', 'nCurAtLen', ';', '}', 'else', '{', 'nCurAtLen', '=', '(', 'AT_NUMB', '*', ')', 'inchi_calloc', '(', 'orig_atom', '->', 'num_components', '+', '1', ',', 'sizeof', '(', 'nCurAtLen', '[', '0', ']', ')', ')', ';', '}', 'if', '(', 'new_orig_atom', '->', 'nCurAtLen', '&&', 'new_orig_atom', '->', 'num_components', '>=', 'orig_atom', '->', 'num_components', ')', '{', 'nOldCompNumber', '=', 'new_orig_atom', '->', 'nOldCompNumber', ';', '}', 'else', '{', 'nOldCompNumber', '=', '(', 'AT_NUMB', '*', ')', 'inchi_calloc', '(', 'orig_atom', '->', 'num_components', '+', '1', ',', 'sizeof', '(', 'nOldCompNumber', '[', '0', ']', ')', ')', ';', '}', 'if', '(', 'at', '&&', 'nCurAtLen', '&&', 'nOldCompNumber', ')', '{', 'if', '(', 'orig_atom', '->', 'at', ')', 'memcpy', '(', 'at', ',', 'orig_atom', '->', 'at', ',', 'orig_atom', '->', 'num_inp_atoms', '*', 'sizeof', '(', 'new_orig_atom', '->', 'at', '[', '0', ']', ')', ')', ';', 'if', '(', 'orig_atom', '->', 'nCurAtLen', ')', 'memcpy', '(', 'nCurAtLen', ',', 'orig_atom', '->', 'nCurAtLen', ',', 'orig_atom', '->', 'num_components', '*', 'sizeof', '(', 'nCurAtLen', '[', '0', ']', ')', ')', ';', 'if', '(', 'orig_atom', '->', 'nOldCompNumber', ')', 'memcpy', '(', 'nOldCompNumber', ',', 'orig_atom', '->', 'nOldCompNumber', ',', 'orig_atom', '->', 'num_components', '*', 'sizeof', '(', 'nOldCompNumber', '[', '0', ']', ')', ')', ';', 'if', '(', 'new_orig_atom', '->', 'at', '&&', 'new_orig_atom', '->', 'at', '!=', 'at', ')', 'inchi_free', '(', 'new_orig_atom', '->', 'at', ')', ';', 'if', '(', 'new_orig_atom', '->', 'nCurAtLen', '&&', 'new_orig_atom', '->', 'nCurAtLen', '!=', 'nCurAtLen', ')', 'inchi_free', '(', 'new_orig_atom', '->', 'nCurAtLen', ')', ';', 'if', '(', 'new_orig_atom', '->', 'nOldCompNumber', '&&', 'new_orig_atom', '->', 'nOldCompNumber', '!=', 'nOldCompNumber', ')', 'inchi_free', '(', 'new_orig_atom', '->', 'nOldCompNumber', ')', ';', '*', 'new_orig_atom', '=', '*', 'orig_atom', ';', 'new_orig_atom', '->', 'at', '=', 'at', ';', 'new_orig_atom', '->', 'nCurAtLen', '=', 'nCurAtLen', ';', 'new_orig_atom', '->', 'nOldCompNumber', '=', 'nOldCompNumber', ';', 'new_orig_atom', '->', 'nNumEquSets', '=', '0', ';', 'memset', '(', 'new_orig_atom', '->', 'bSavedInINCHI_LIB', ',', '0', ',', 'sizeof', '(', 'new_orig_atom', '->', 'bSavedInINCHI_LIB', ')', ')', ';', 'memset', '(', 'new_orig_atom', '->', 'bPreprocessed', ',', '0', ',', 'sizeof', '(', 'new_orig_atom', '->', 'bPreprocessed', ')', ')', ';', 'new_orig_atom', '->', 'szCoord', '=', 'NULL', ';', 'new_orig_atom', '->', 'nEquLabels', '=', 'NULL', ';', 'new_orig_atom', '->', 'nSortedOrder', '=', 'NULL', ';', 'return', '0', ';', '}', 'if', '(', 'at', '&&', 'new_orig_atom', '->', 'at', '!=', 'at', ')', 'inchi_free', '(', 'at', ')', ';', 'if', '(', 'nCurAtLen', '&&', 'new_orig_atom', '->', 'nCurAtLen', '!=', 'nCurAtLen', ')', 'inchi_free', '(', 'nCurAtLen', ')', ';', 'if', '(', 'nOldCompNumber', '&&', 'new_orig_atom', '->', 'nOldCompNumber', '!=', 'nOldCompNumber', ')', 'inchi_free', '(', 'nOldCompNumber', ')', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
474,"['tls_process_error', '(', 'void', ')', '{', 'unsigned', 'long', 'err', ';', 'err', '=', 'ERR_get_error', '(', ')', ';', 'if', '(', 'err', '!=', '0', ')', '{', 'logger', '.', 'msg', '(', 'Arc', ':', ':', 'ERROR', ',', '""""', ',', 'ERR_error_string', '(', 'err', ',', 'NULL', ')', ')', ';', 'logger', '.', 'msg', '(', 'Arc', ':', ':', 'ERROR', ',', '""""', ',', 'ERR_lib_error_string', '(', 'err', ')', ')', ';', 'logger', '.', 'msg', '(', 'Arc', ':', ':', 'ERROR', ',', '""""', ',', 'ERR_func_error_string', '(', 'err', ')', ')', ';', 'logger', '.', 'msg', '(', 'Arc', ':', ':', 'ERROR', ',', '""""', ',', 'ERR_reason_error_string', '(', 'err', ')', ')', ';', '}', 'return', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
475,"['get_comb_box_widget', '(', 'GNCSearchWindow', '*', 'sw', ',', 'struct', '_crit_data', '*', 'data', ')', '{', 'GtkWidget', '*', 'combo_box', ';', 'GtkListStore', '*', 'store', ';', 'GtkTreeIter', 'iter', ';', 'GtkCellRenderer', '*', 'cell', ';', 'GList', '*', 'l', ';', 'int', 'index', '=', '0', ',', 'current', '=', '0', ';', 'store', '=', 'gtk_list_store_new', '(', 'NUM_SEARCH_COLS', ',', 'G_TYPE_STRING', ',', 'G_TYPE_POINTER', ')', ';', 'combo_box', '=', 'gtk_combo_box_new_with_model', '(', 'GTK_TREE_MODEL', '(', 'store', ')', ')', ';', 'g_object_unref', '(', 'store', ')', ';', 'cell', '=', 'gtk_cell_renderer_text_new', '(', ')', ';', 'gtk_cell_layout_pack_start', '(', 'GTK_CELL_LAYOUT', '(', 'combo_box', ')', ',', 'cell', ',', 'TRUE', ')', ';', 'gtk_cell_layout_set_attributes', '(', 'GTK_CELL_LAYOUT', '(', 'combo_box', ')', ',', 'cell', ',', '""""', ',', 'SEARCH_COL_NAME', ',', 'NULL', ')', ';', 'for', '(', 'l', '=', 'sw', '->', 'params_list', ';', 'l', ';', 'l', '=', 'l', '->', 'next', ')', '{', 'GNCSearchParam', '*', 'param', '=', 'l', '->', 'data', ';', 'gtk_list_store_append', '(', 'store', ',', '&', 'iter', ')', ';', 'gtk_list_store_set', '(', 'store', ',', '&', 'iter', ',', 'SEARCH_COL_NAME', ',', '_', '(', 'param', '->', 'title', ')', ',', 'SEARCH_COL_POINTER', ',', 'param', ',', '-', '1', ')', ';', 'current', '=', 'index', ';', 'index', '++', ';', '}', 'gtk_combo_box_set_active', '(', 'GTK_COMBO_BOX', '(', 'combo_box', ')', ',', 'current', ')', ';', 'g_signal_connect', '(', 'combo_box', ',', '""""', ',', 'G_CALLBACK', '(', 'combo_box_changed', ')', ',', 'data', ')', ';', 'return', 'combo_box', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
476,"['modulus_result_type', '(', 'const', 'struct', 'glsl_type', '*', 'type_a', ',', 'const', 'struct', 'glsl_type', '*', 'type_b', ',', 'struct', '_mesa_glsl_parse_state', '*', 'state', ',', 'YYLTYPE', '*', 'loc', ')', '{', 'if', '(', '!state', '->', 'check_version', '(', '130', ',', '300', ',', 'loc', ',', '""""', ')', ')', '{', 'return', 'glsl_type', ':', ':', 'error_type', ';', '}', '/', '*', 'From', 'GLSL', '1', '.', '50', 'spec', ',', 'page', '56', ':', '*', '""The', 'operator', 'modulus', '(', '%', ')', 'operates', 'on', 'signed', 'or', 'unsigned', 'integers', '*', 'integer', 'vectors', '.', 'The', 'operand', 'types', 'must', 'both', 'be', 'signed', 'or', 'both', '*', 'unsigned', '.', 'if', '(', '!type_a', '->', 'is_integer', '(', ')', ')', '{', '_mesa_glsl_error', '(', 'loc', ',', 'state', ',', '""""', ')', ';', 'return', 'glsl_type', ':', ':', 'error_type', ';', '}', 'if', '(', '!type_b', '->', 'is_integer', '(', ')', ')', '{', '_mesa_glsl_error', '(', 'loc', ',', 'state', ',', '""""', ')', ';', 'return', 'glsl_type', ':', ':', 'error_type', ';', '}', 'if', '(', 'type_a', '->', 'base_type', '!=', 'type_b', '->', 'base_type', ')', '{', '_mesa_glsl_error', '(', 'loc', ',', 'state', ',', '""""', ')', ';', 'return', 'glsl_type', ':', ':', 'error_type', ';', '}', '/', '*', '""The', 'operands', 'cannot', 'be', 'vectors', 'of', 'differing', 'size', '.', 'If', 'one', 'operand', '*', 'a', 'scalar', 'and', 'the', 'other', 'vector', ',', 'then', 'the', 'scalar', 'is', 'applied', 'component', '-', '*', 'wise', 'to', 'the', 'vector', ',', 'resulting', 'in', 'the', 'same', 'type', 'as', 'the', 'vector', '.', 'If', '*', 'are', 'vectors', 'of', 'the', 'same', 'size', ',', 'the', 'result', 'is', 'computed', 'component', '-', 'wise', '.', 'if', '(', 'type_a', '->', 'is_vector', '(', ')', ')', '{', 'if', '(', '!type_b', '->', 'is_vector', '(', ')', '||', '(', 'type_a', '->', 'vector_elements', '==', 'type_b', '->', 'vector_elements', ')', ')', 'return', 'type_a', ';', '}', 'return', 'type_b', ';', '/', '*', '""The', 'operator', 'modulus', '(', '%', ')', 'is', 'not', 'defined', 'for', 'any', 'other', 'data', '*', '(', 'non', '-', 'integer', 'types', ')', '.', '_mesa_glsl_error', '(', 'loc', ',', 'state', ',', '""""', ')', ';', 'return', 'glsl_type', ':', ':', 'error_type', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
477,"['nautilus_file_get_emblem_icons', '(', 'NautilusFile', '*', 'file', ')', '{', 'GList', '*', 'keywords', ',', '*', 'l', ';', 'GList', '*', 'icons', ';', 'char', '*', 'icon_names', '[', '2', ']', ';', 'char', '*', 'keyword', ';', 'GIcon', '*', 'icon', ';', 'if', '(', 'file', '==', 'NULL', ')', '{', 'return', 'NULL', ';', '}', 'g_return_val_if_fail', '(', 'NAUTILUS_IS_FILE', '(', 'file', ')', ',', 'NULL', ')', ';', 'keywords', '=', 'nautilus_file_get_keywords', '(', 'file', ')', ';', 'keywords', '=', 'prepend_automatic_keywords', '(', 'file', ',', 'keywords', ')', ';', 'icons', '=', 'NULL', ';', 'for', '(', 'l', '=', 'keywords', ';', 'l', '!=', 'NULL', ';', 'l', '=', 'l', '->', 'next', ')', '{', 'keyword', '=', 'l', '->', 'data', ';', 'icon_names', '[', '0', ']', '=', 'g_strconcat', '(', '""""', ',', 'keyword', ',', 'NULL', ')', ';', 'icon_names', '[', '1', ']', '=', 'keyword', ';', 'icon', '=', 'g_themed_icon_new_from_names', '(', 'icon_names', ',', '2', ')', ';', 'g_free', '(', 'icon_names', '[', '0', ']', ')', ';', 'icons', '=', 'g_list_prepend', '(', 'icons', ',', 'icon', ')', ';', '}', 'g_list_free_full', '(', 'keywords', ',', 'g_free', ')', ';', 'return', 'icons', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
478,"['SetOriginalDataArray', '(', 'MeasureType', '*', 'setOriginalDataArray', ')', '{', '/', '/', 'Set', 'the', 'original', 'data', 'array', '.', 'm_OriginalDataArray', '->', 'SetSize', '(', 'm_RangeDimension', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', '(', 'int', ')', '(', 'setOriginalDataArray', '->', 'GetNumberOfElements', '(', ')', ')', ';', 'i', '++', ')', '{', 'm_OriginalDataArray', '->', 'put', '(', 'i', ',', 'setOriginalDataArray', '->', 'get', '(', 'i', ')', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
479,"['crypto_gcm_init_common', '(', 'struct', 'aead_request', '*', 'req', ')', '{', 'struct', 'crypto_gcm_req_priv_ctx', '*', 'pctx', '=', 'crypto_gcm_reqctx', '(', 'req', ')', ';', '__be32', 'counter', '=', 'cpu_to_be32', '(', '1', ')', ';', 'struct', 'scatterlist', '*', 'sg', ';', 'memset', '(', 'pctx', '->', 'auth_tag', ',', '0', ',', 'sizeof', '(', 'pctx', '->', 'auth_tag', ')', ')', ';', 'memcpy', '(', 'pctx', '->', 'iv', ',', 'req', '->', 'iv', ',', '12', ')', ';', 'memcpy', '(', 'pctx', '->', 'iv', '+', '12', ',', '&', 'counter', ',', '4', ')', ';', 'sg_init_table', '(', 'pctx', '->', 'src', ',', '3', ')', ';', 'sg_set_buf', '(', 'pctx', '->', 'src', ',', 'pctx', '->', 'auth_tag', ',', 'sizeof', '(', 'pctx', '->', 'auth_tag', ')', ')', ';', 'sg', '=', 'scatterwalk_ffwd', '(', 'pctx', '->', 'src', '+', '1', ',', 'req', '->', 'src', ',', 'req', '->', 'assoclen', ')', ';', 'if', '(', 'sg', '!=', 'pctx', '->', 'src', '+', '1', ')', 'sg_chain', '(', 'pctx', '->', 'src', ',', '2', ',', 'sg', ')', ';', 'if', '(', 'req', '->', 'src', '!=', 'req', '->', 'dst', ')', '{', 'sg_init_table', '(', 'pctx', '->', 'dst', ',', '3', ')', ';', 'sg_set_buf', '(', 'pctx', '->', 'dst', ',', 'pctx', '->', 'auth_tag', ',', 'sizeof', '(', 'pctx', '->', 'auth_tag', ')', ')', ';', 'sg', '=', 'scatterwalk_ffwd', '(', 'pctx', '->', 'dst', '+', '1', ',', 'req', '->', 'dst', ',', 'req', '->', 'assoclen', ')', ';', 'if', '(', 'sg', '!=', 'pctx', '->', 'dst', '+', '1', ')', 'sg_chain', '(', 'pctx', '->', 'dst', ',', '2', ',', 'sg', ')', ';', '}', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
480,"['uv_remove_ares_handle', '(', 'uv_ares_task_t', '*', 'handle', ')', '{', 'uv_loop_t', '*', 'loop', '=', 'handle', '->', 'loop', ';', 'if', '(', 'handle', '==', 'loop', '->', 'uv_ares_handles_', ')', '{', 'loop', '->', 'uv_ares_handles_', '=', 'handle', '->', 'ares_next', ';', '}', 'if', '(', 'handle', '->', 'ares_next', ')', '{', 'handle', '->', 'ares_next', '->', 'ares_prev', '=', 'handle', '->', 'ares_prev', ';', '}', 'if', '(', 'handle', '->', 'ares_prev', ')', '{', 'handle', '->', 'ares_prev', '->', 'ares_next', '=', 'handle', '->', 'ares_next', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
481,"['abraca_configurable_register', '(', 'AbracaIConfigurable', '*', 'obj', ')', '{', 'GKeyFile', '*', 'file', '=', 'NULL', ';', 'gboolean', '_tmp0_', ';', 'AbracaIConfigurable', '*', '_tmp5_', ';', 'AbracaIConfigurable', '*', '_tmp6_', ';', 'AbracaIConfigurable', '*', '_tmp7_', ';', 'GError', '*', '_inner_error_', '=', 'NULL', ';', 'g_return_if_fail', '(', 'obj', '!=', 'NULL', ')', ';', '_tmp0_', '=', 'abraca_configurable_config_loaded', ';', 'if', '(', '_tmp0_', ')', '{', 'GKeyFile', '*', '_tmp1_', '=', 'NULL', ';', '_tmp1_', '=', 'abraca_configurable_read_config', '(', ')', ';', '_g_key_file_free0', '(', 'file', ')', ';', 'file', '=', '_tmp1_', ';', '{', 'AbracaIConfigurable', '*', '_tmp2_', ';', 'GKeyFile', '*', '_tmp3_', ';', '_tmp2_', '=', 'obj', ';', '_tmp3_', '=', 'file', ';', 'abraca_iconfigurable_set_configuration', '(', '_tmp2_', ',', '_tmp3_', ',', '&', '_inner_error_', ')', ';', 'if', '(', '_inner_error_', '!=', 'NULL', ')', '{', 'if', '(', '_inner_error_', '->', 'domain', '==', 'G_KEY_FILE_ERROR', ')', '{', 'goto', '__catch13_g_key_file_error', ';', '}', '_g_key_file_free0', '(', 'file', ')', ';', 'g_critical', '(', '""""', ',', '__FILE__', ',', '__LINE__', ',', '_inner_error_', '->', 'message', ',', 'g_quark_to_string', '(', '_inner_error_', '->', 'domain', ')', ',', '_inner_error_', '->', 'code', ')', ';', 'g_clear_error', '(', '&', '_inner_error_', ')', ';', 'return', ';', '}', '}', 'goto', '__finally13', ';', '__catch13_g_key_file_error', ':', '{', 'GError', '*', 'e', '=', 'NULL', ';', 'const', 'gchar', '*', '_tmp4_', ';', 'e', '=', '_inner_error_', ';', '_inner_error_', '=', 'NULL', ';', '_tmp4_', '=', 'e', '->', 'message', ';', 'g_error', '(', '""""', ',', '_tmp4_', ')', ';', '_g_error_free0', '(', 'e', ')', ';', '}', '__finally13', ':', 'if', '(', '_inner_error_', '!=', 'NULL', ')', '{', '_g_key_file_free0', '(', 'file', ')', ';', 'g_critical', '(', '""""', ',', '__FILE__', ',', '__LINE__', ',', '_inner_error_', '->', 'message', ',', 'g_quark_to_string', '(', '_inner_error_', '->', 'domain', ')', ',', '_inner_error_', '->', 'code', ')', ';', 'g_clear_error', '(', '&', '_inner_error_', ')', ';', 'return', ';', '}', '}', '_tmp5_', '=', 'obj', ';', 'abraca_configurable_configurables', '=', 'g_slist_remove', '(', 'abraca_configurable_configurables', ',', '_tmp5_', ')', ';', '_tmp6_', '=', 'obj', ';', '_tmp7_', '=', '_g_object_ref0', '(', '_tmp6_', ')', ';', 'abraca_configurable_configurables', '=', 'g_slist_prepend', '(', 'abraca_configurable_configurables', ',', '_tmp7_', ')', ';', '_g_key_file_free0', '(', 'file', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
482,"['decode_buf', '(', 'uint8_t', '*', 'out', ',', 'size_t', 'bufsize', ',', 'const', 'uint8_t', '*', 'base', ',', 'size_t', '*', 'rem', ',', 'size_t', '*', 'idx', ')', '{', 'if', '(', '*', 'rem', '<', 'bufsize', ')', '{', 'return', '0', ';', '}', 'memcpy', '(', 'out', ',', '(', 'base', '+', '*', 'idx', ')', ',', 'bufsize', ')', ';', '*', 'idx', '+=', 'bufsize', ';', '*', 'rem', '-=', 'bufsize', ';', 'return', 'bufsize', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
483,"['createRectangle', '(', ')', '{', 'int', 'i', ';', 'int', 'ipt', '=', '0', ';', 'int', 'nSide', '=', 'nPts', '/', '4', ';', 'if', '(', 'nSide', '<', '1', ')', 'nSide', '=', '1', ';', 'std', ':', ':', 'auto_ptr', '<', 'Envelope', '>', 'env', '(', 'dim', '.', 'getEnvelope', '(', ')', ')', ';', 'double', 'XsegLen', '=', 'env', '->', 'getWidth', '(', ')', '/', 'nSide', ';', 'double', 'YsegLen', '=', 'env', '->', 'getHeight', '(', ')', '/', 'nSide', ';', 'vector', '<', 'Coordinate', '>', '*', 'vc', '=', 'new', 'vector', '<', 'Coordinate', '>', '(', '4', '*', 'nSide', '+', '1', ')', ';', '/', '/', 'CoordinateSequence', '*', 'pts', '=', 'new', 'CoordinateArraySequence', '(', '4', '*', 'nSide', '+', '1', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'nSide', ';', 'i', '++', ')', '{', 'double', 'x', '=', 'env', '->', 'getMinX', '(', ')', '+', 'i', '*', 'XsegLen', ';', 'double', 'y', '=', 'env', '->', 'getMinY', '(', ')', ';', '(', '*', 'vc', ')', '[', 'ipt', '++', ']', '=', 'coord', '(', 'x', ',', 'y', ')', ';', '}', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'nSide', ';', 'i', '++', ')', '{', 'double', 'x', '=', 'env', '->', 'getMaxX', '(', ')', ';', 'double', 'y', '=', 'env', '->', 'getMinY', '(', ')', '+', 'i', '*', 'YsegLen', ';', '(', '*', 'vc', ')', '[', 'ipt', '++', ']', '=', 'coord', '(', 'x', ',', 'y', ')', ';', '}', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'nSide', ';', 'i', '++', ')', '{', 'double', 'x', '=', 'env', '->', 'getMaxX', '(', ')', '-', 'i', '*', 'XsegLen', ';', 'double', 'y', '=', 'env', '->', 'getMaxY', '(', ')', ';', '(', '*', 'vc', ')', '[', 'ipt', '++', ']', '=', 'coord', '(', 'x', ',', 'y', ')', ';', '}', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'nSide', ';', 'i', '++', ')', '{', 'double', 'x', '=', 'env', '->', 'getMinX', '(', ')', ';', 'double', 'y', '=', 'env', '->', 'getMaxY', '(', ')', '-', 'i', '*', 'YsegLen', ';', '(', '*', 'vc', ')', '[', 'ipt', '++', ']', '=', 'coord', '(', 'x', ',', 'y', ')', ';', '}', '(', '*', 'vc', ')', '[', 'ipt', '++', ']', '=', '(', '*', 'vc', ')', '[', '0', ']', ';', 'CoordinateSequence', '*', 'cs', '=', 'geomFact', '->', 'getCoordinateSequenceFactory', '(', ')', '->', 'create', '(', 'vc', ')', ';', 'LinearRing', '*', 'ring', '=', 'geomFact', '->', 'createLinearRing', '(', 'cs', ')', ';', 'Polygon', '*', 'poly', '=', 'geomFact', '->', 'createPolygon', '(', 'ring', ',', 'NULL', ')', ';', 'return', 'poly', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
484,"['printNodeInfo', '(', ')', '{', 'for', '(', 'unsigned', 'int', 'i', '=', '0', ';', 'i', '<', 'nodeCount', ';', '++', 'i', ')', '{', 'if', '(', '!nodes', '[', 'i', ']', '.', 'colors', ')', 'continue', ';', 'INFO', '(', '""""', ',', 'i', ',', 'nodes', '[', 'i', ']', '.', 'f', ',', 'nodes', '[', 'i', ']', '.', 'reg', ',', 'nodes', '[', 'i', ']', '.', 'colors', ',', 'nodes', '[', 'i', ']', '.', 'weight', ',', 'nodes', '[', 'i', ']', '.', 'degree', ',', 'nodes', '[', 'i', ']', '.', 'degreeLimit', ')', ';', 'for', '(', 'Graph', ':', ':', 'EdgeIterator', 'ei', '=', 'nodes', '[', 'i', ']', '.', 'outgoing', '(', ')', ';', '!ei', '.', 'end', '(', ')', ';', 'ei', '.', 'next', '(', ')', ')', 'INFO', '(', '""""', ',', 'RIG_Node', ':', ':', 'get', '(', 'ei', ')', '->', 'getValue', '(', ')', '->', 'id', ')', ';', 'for', '(', 'Graph', ':', ':', 'EdgeIterator', 'ei', '=', 'nodes', '[', 'i', ']', '.', 'incident', '(', ')', ';', '!ei', '.', 'end', '(', ')', ';', 'ei', '.', 'next', '(', ')', ')', 'INFO', '(', '""""', ',', 'RIG_Node', ':', ':', 'get', '(', 'ei', ')', '->', 'getValue', '(', ')', '->', 'id', ')', ';', 'INFO', '(', '""""', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
485,"['findInSource', '(', 'QFlags', '<', 'TargetTag', '>', 'tag', ')', '{', 'Q_UNUSED', '(', 'tag', ')', '/', '/', 'first', 'show', 'the', 'AmarokUrl', 'url', ';', 'url', '.', 'setCommand', '(', '""""', ')', ';', 'url', '.', 'setPath', '(', '""""', ')', ';', 'url', '.', 'run', '(', ')', ';', '/', '/', 'then', 'navigate', 'to', 'the', 'correct', 'BrowserCategory', '*', 'fileCategory', '=', 'The', ':', ':', 'mainWindow', '(', ')', '->', 'browserDock', '(', ')', '->', 'list', '(', ')', '->', 'activeCategoryRecursive', '(', ')', ';', 'if', '(', 'fileCategory', ')', '{', 'FileBrowser', '*', 'fileBrowser', '=', 'dynamic_cast', '<', 'FileBrowser', '*', '>', '(', 'fileCategory', ')', ';', 'if', '(', 'fileBrowser', ')', '{', '/', '/', 'get', 'the', 'path', 'of', 'the', 'parent', 'directory', 'of', 'the', 'KUrl', 'playableUrl', '=', 'm_track', '->', 'playableUrl', '(', ')', ';', 'fileBrowser', '->', 'setDir', '(', 'playableUrl', '.', 'directory', '(', ')', ')', ';', '}', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
486,"['prot_flush_writebuffer', '(', 'struct', 'protstream', '*', 's', ',', 'const', 'char', '*', 'buf', ',', 'size_t', 'len', ')', '{', 'int', 'n', ';', 'do', '{', 'cmdtime_netstart', '(', ')', ';', '#ifdef', 'if', '(', 's', '->', 'tls_conn', '!=', 'NULL', ')', '{', 'n', '=', 'SSL_write', '(', 's', '->', 'tls_conn', ',', '(', 'char', '*', ')', 'buf', ',', 'len', ')', ';', '}', 'else', '{', 'n', '=', 'write', '(', 's', '->', 'fd', ',', 'buf', ',', 'len', ')', ';', '}', 'n', '=', 'write', '(', 's', '->', 'fd', ',', 'buf', ',', 'len', ')', ';', 'cmdtime_netend', '(', ')', ';', '}', 'while', '(', 'n', '==', '-', '1', '&&', 'errno', '==', 'EINTR', '&&', '!signals_poll', '(', ')', ')', ';', 'return', 'n', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
487,"['ibmasm_init_reverse_heartbeat', '(', 'struct', 'service_processor', '*', 'sp', ',', 'struct', 'reverse_heartbeat', '*', 'rhb', ')', '{', 'init_waitqueue_head', '(', '&', 'rhb', '->', 'wait', ')', ';', 'rhb', '->', 'stopped', '=', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
488,"['mpris2_controller_determine_play_state', '(', 'Mpris2Controller', '*', 'self', ',', 'const', 'gchar', '*', 'status', ')', '{', 'TransportState', 'result', '=', '0', ';', 'gboolean', '_tmp0_', '=', 'FALSE', ';', 'const', 'gchar', '*', '_tmp1_', '=', 'NULL', ';', 'gboolean', '_tmp3_', '=', 'FALSE', ';', 'g_return_val_if_fail', '(', 'self', '!=', 'NULL', ',', '0', ')', ';', '_tmp1_', '=', 'status', ';', 'if', '(', '_tmp1_', '!=', 'NULL', ')', '{', 'const', 'gchar', '*', '_tmp2_', '=', 'NULL', ';', '_tmp2_', '=', 'status', ';', '_tmp0_', '=', 'g_strcmp0', '(', '_tmp2_', ',', '""""', ')', '==', '0', ';', '}', 'else', '{', '_tmp0_', '=', 'FALSE', ';', '}', '_tmp3_', '=', '_tmp0_', ';', 'if', '(', '_tmp3_', ')', '{', 'result', '=', 'TRANSPORT_STATE_PLAYING', ';', 'return', 'result', ';', '}', 'result', '=', 'TRANSPORT_STATE_PAUSED', ';', 'return', 'result', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
489,"['__ecereMethod___ecereNameSpace__ecere__gfx3D__Object_InsideFrustum', '(', 'struct', '__ecereNameSpace__ecere__com__Instance', '*', 'this', ',', 'struct', '__ecereNameSpace__ecere__gfx3D__Plane', '*', 'planes', ')', '{', 'struct', '__ecereNameSpace__ecere__gfx3D__Object', '*', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Object', '=', '(', 'struct', '__ecereNameSpace__ecere__gfx3D__Object', '*', ')', '(', 'this', '?', '(', '(', '(', 'char', '*', ')', 'this', ')', '+', '__ecereClass___ecereNameSpace__ecere__gfx3D__Object', '->', 'offset', ')', ':', '0', ')', ';', 'int', 'result', '=', '1', ';', 'int', 'p', ';', 'for', '(', 'p', '=', '0', ';', 'p', '<', '6', ';', 'p', '++', ')', '{', 'struct', '__ecereNameSpace__ecere__gfx3D__Plane', '*', 'plane', '=', '&', 'planes', '[', 'p', ']', ';', 'double', 'dot', '=', '__ecereMethod___ecereNameSpace__ecere__gfx3D__Vector3D_DotProduct', '(', '&', '(', '*', 'plane', ')', '.', 'normal', ',', '&', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Object', '->', 'wcenter', ')', ';', 'double', 'distance', '=', 'dot', '+', '(', '*', 'plane', ')', '.', 'd', ';', 'if', '(', 'distance', '<', '-', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Object', '->', 'wradius', ')', '{', 'result', '=', '0', ';', 'break', ';', '}', 'if', '(', '(', '(', 'distance', '<', '0', ')', '?', '-', 'distance', ':', 'distance', ')', '<', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Object', '->', 'wradius', ')', 'result', '=', '2', ';', '}', 'if', '(', 'result', '==', '2', ')', '{', 'struct', '__ecereNameSpace__ecere__gfx3D__Vector3D', 'box', '[', '8', ']', '=', '{', '{', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Object', '->', 'wmin', '.', 'x', ',', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Object', '->', 'wmin', '.', 'y', ',', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Object', '->', 'wmin', '.', '}', ',', '{', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Object', '->', 'wmin', '.', 'x', ',', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Object', '->', 'wmin', '.', 'y', ',', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Object', '->', 'wmax', '.', '}', ',', '{', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Object', '->', 'wmin', '.', 'x', ',', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Object', '->', 'wmax', '.', 'y', ',', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Object', '->', 'wmin', '.', '}', ',', '{', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Object', '->', 'wmin', '.', 'x', ',', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Object', '->', 'wmax', '.', 'y', ',', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Object', '->', 'wmax', '.', '}', ',', '{', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Object', '->', 'wmax', '.', 'x', ',', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Object', '->', 'wmin', '.', 'y', ',', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Object', '->', 'wmin', '.', '}', ',', '{', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Object', '->', 'wmax', '.', 'x', ',', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Object', '->', 'wmin', '.', 'y', ',', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Object', '->', 'wmax', '.', '}', ',', '{', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Object', '->', 'wmax', '.', 'x', ',', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Object', '->', 'wmax', '.', 'y', ',', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Object', '->', 'wmin', '.', '}', ',', '{', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Object', '->', 'wmax', '.', 'x', ',', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Object', '->', 'wmax', '.', 'y', ',', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Object', '->', 'wmax', '.', '}', '}', ';', 'int', 'numPlanesAllIn', '=', '0', ';', 'for', '(', 'p', '=', '0', ';', 'p', '<', '6', ';', 'p', '++', ')', '{', 'struct', '__ecereNameSpace__ecere__gfx3D__Plane', '*', 'plane', '=', '&', 'planes', '[', 'p', ']', ';', 'int', 'i', ';', 'int', 'numGoodPoints', '=', '0', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', '8', ';', '++', 'i', ')', '{', 'double', 'dot', '=', '__ecereMethod___ecereNameSpace__ecere__gfx3D__Vector3D_DotProduct', '(', '&', '(', '*', 'plane', ')', '.', 'normal', ',', '&', 'box', '[', 'i', ']', ')', ';', 'double', 'distance', '=', 'dot', '+', '(', '*', 'plane', ')', '.', 'd', ';', 'if', '(', 'distance', '>', '(', 'double', ')', '(', 'double', ')', '(', '-', '1', ')', ')', 'numGoodPoints', '++', ';', '}', 'if', '(', '!numGoodPoints', ')', '{', 'result', '=', '0', ';', 'break', ';', '}', 'if', '(', 'numGoodPoints', '==', '8', ')', 'numPlanesAllIn', '++', ';', '}', 'if', '(', 'numPlanesAllIn', '==', '6', ')', 'result', '=', '1', ';', '}', 'return', 'result', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
490,"['cam_keypoints_tracking2_add_to_linked_list', '(', 'CamList', '*', 'l', ',', 'void', '*', 'data', ')', '{', 'CamList\t', '*', 'head', ';', 'head', '=', '(', 'CamList', '*', ')', 'malloc', '(', 'sizeof', '(', 'CamList', ')', ')', ';', 'head', '->', 'data', '=', 'data', ';', 'head', '->', 'next', '=', 'l', ';', 'if', '(', 'l', ')', 'head', '->', 'index', '=', 'l', '->', 'index', '+', '1', ';', 'head', '->', 'index', '=', '1', ';', 'return', '(', 'head', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
491,"['tail_lines', '(', 'const', 'char', '*', 'pretty_filename', ',', 'int', 'fd', ',', 'uintmax_t', 'n_lines', ',', 'uintmax_t', '*', 'read_pos', ')', '{', 'struct', 'stat', 'stats', ';', 'if', '(', 'fstat', '(', 'fd', ',', '&', 'stats', ')', ')', '{', 'error', '(', '0', ',', 'errno', ',', '_', '(', '""""', ')', ',', 'quote', '(', 'pretty_filename', ')', ')', ';', 'return', 'false', ';', '}', 'if', '(', 'from_start', ')', '{', 'int', 't', '=', 'start_lines', '(', 'pretty_filename', ',', 'fd', ',', 'n_lines', ',', 'read_pos', ')', ';', 'if', '(', 't', ')', 'return', 't', '<', '0', ';', '*', 'read_pos', '+=', 'dump_remainder', '(', 'pretty_filename', ',', 'fd', ',', 'COPY_TO_EOF', ')', ';', '}', '{', 'off_t', 'start_pos', '=', '-', '1', ';', 'off_t', 'end_pos', ';', '/', '*', 'Use', 'file_lines', 'only', 'if', 'FD', 'refers', 'to', 'a', 'regular', 'file', 'if', '(', '!', '&&', 'S_ISREG', '(', 'stats', '.', 'st_mode', ')', '&&', '(', 'start_pos', '=', 'lseek', '(', 'fd', ',', '0', ',', 'SEEK_CUR', ')', ')', '!=', '-', '&&', 'start_pos', '<', '(', 'end_pos', '=', 'lseek', '(', 'fd', ',', '0', ',', 'SEEK_END', ')', ')', ')', '{', '*', 'read_pos', '=', 'end_pos', ';', 'if', '(', 'end_pos', '!=', '&&', '!', 'file_lines', '(', 'pretty_filename', ',', 'fd', ',', 'n_lines', ',', 'start_pos', ',', 'end_pos', ',', 'read_pos', ')', ')', 'return', 'false', ';', '}', '{', '/', '*', 'Under', 'very', 'unlikely', 'circumstances', ',', 'it', 'is', 'possible', 'to', 'this', 'point', 'after', 'positioning', 'the', 'file', 'pointer', 'to', 'end', 'of', 'via', 'the', ""''"", 'above', '.', 'In', 'that', 'case', ',', 'if', '(', 'start_pos', '!=', '-', '1', ')', 'xlseek', '(', 'fd', ',', 'start_pos', ',', 'SEEK_SET', ',', 'pretty_filename', ')', ';', 'return', 'pipe_lines', '(', 'pretty_filename', ',', 'fd', ',', 'n_lines', ',', 'read_pos', ')', ';', '}', '}', 'return', 'true', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
492,"['libpqrcv_connect', '(', 'char', '*', 'conninfo', ',', 'XLogRecPtr', 'startpoint', ')', '{', 'char\t\tconninfo_repl', '[', 'MAXCONNINFO', '+', '37', ']', ';', 'char\t', '*', 'primary_sysid', ';', 'char\t\tstandby_sysid', '[', '32', ']', ';', 'TimeLineID\tprimary_tli', ';', 'TimeLineID\tstandby_tli', ';', 'PGresult', '*', 'res', ';', 'char\t\tcmd', '[', '64', ']', ';', '/', '*', '*', 'Connect', 'using', 'deliberately', 'undocumented', 'parameter', ':', 'replication', '.', '*', 'database', 'name', 'is', 'ignored', 'by', 'the', 'server', 'in', 'replication', 'mode', ',', 'but', '*', '""""', 'for', '.', 'pgpass', 'lookup', '.', 'snprintf', '(', 'conninfo_repl', ',', 'sizeof', '(', 'conninfo_repl', ')', ',', '""""', ',', 'conninfo', ')', ';', 'streamConn', '=', 'PQconnectdb', '(', 'conninfo_repl', ')', ';', 'if', '(', 'PQstatus', '(', 'streamConn', ')', '!=', 'CONNECTION_OK', ')', 'ereport', '(', 'ERROR', ',', '(', 'errmsg', '(', '""""', ',', 'PQerrorMessage', '(', 'streamConn', ')', ')', ')', ')', ';', '/', '*', '*', 'Get', 'the', 'system', 'identifier', 'and', 'timeline', 'ID', 'as', 'a', 'DataRow', 'message', 'from', '*', 'primary', 'server', '.', 'res', '=', 'libpqrcv_PQexec', '(', '""""', ')', ';', 'if', '(', 'PQresultStatus', '(', 'res', ')', '!=', 'PGRES_TUPLES_OK', ')', '{', 'PQclear', '(', 'res', ')', ';', 'ereport', '(', 'ERROR', ',', '(', 'errmsg', '(', '""""', ',', 'PQerrorMessage', '(', 'streamConn', ')', ')', ')', ')', ';', '}', 'if', '(', 'PQnfields', '(', 'res', ')', '!=', '2', '||', 'PQntuples', '(', 'res', ')', '!=', '1', ')', '{', 'int\t\t\tntuples', '=', 'PQntuples', '(', 'res', ')', ';', 'int\t\t\tnfields', '=', 'PQnfields', '(', 'res', ')', ';', 'PQclear', '(', 'res', ')', ';', 'ereport', '(', 'ERROR', ',', '(', 'errmsg', '(', '""""', ')', ',', 'errdetail', '(', '""""', ',', 'ntuples', ',', 'nfields', ')', ')', ')', ';', '}', 'primary_sysid', '=', 'PQgetvalue', '(', 'res', ',', '0', ',', '0', ')', ';', 'primary_tli', '=', 'pg_atoi', '(', 'PQgetvalue', '(', 'res', ',', '0', ',', '1', ')', ',', '4', ',', '0', ')', ';', '/', '*', '*', 'Confirm', 'that', 'the', 'system', 'identifier', 'of', 'the', 'primary', 'is', 'the', 'same', 'as', 'ours', '.', 'snprintf', '(', 'standby_sysid', ',', 'sizeof', '(', 'standby_sysid', ')', ',', 'UINT64_FORMAT', ',', 'GetSystemIdentifier', '(', ')', ')', ';', 'if', '(', 'strcmp', '(', 'primary_sysid', ',', 'standby_sysid', ')', '!=', '0', ')', '{', 'PQclear', '(', 'res', ')', ';', 'ereport', '(', 'ERROR', ',', '(', 'errmsg', '(', '""""', ')', ',', 'errdetail', '(', '""""', ',', 'primary_sysid', ',', 'standby_sysid', ')', ')', ')', ';', '}', '/', '*', '*', 'Confirm', 'that', 'the', 'current', 'timeline', 'of', 'the', 'primary', 'is', 'the', 'same', 'as', '*', 'recovery', 'target', 'timeline', '.', 'standby_tli', '=', 'GetRecoveryTargetTLI', '(', ')', ';', 'PQclear', '(', 'res', ')', ';', 'if', '(', 'primary_tli', '!=', 'standby_tli', ')', 'ereport', '(', 'ERROR', ',', '(', 'errmsg', '(', '""""', ',', 'primary_tli', ',', 'standby_tli', ')', ')', ')', ';', 'ThisTimeLineID', '=', 'primary_tli', ';', 'snprintf', '(', 'cmd', ',', 'sizeof', '(', 'cmd', ')', ',', '""""', ',', 'startpoint', '.', 'xlogid', ',', 'startpoint', '.', 'xrecoff', ')', ';', 'res', '=', 'libpqrcv_PQexec', '(', 'cmd', ')', ';', 'if', '(', 'PQresultStatus', '(', 'res', ')', '!=', 'PGRES_COPY_OUT', ')', '{', 'PQclear', '(', 'res', ')', ';', 'ereport', '(', 'ERROR', ',', '(', 'errmsg', '(', '""""', ',', 'PQerrorMessage', '(', 'streamConn', ')', ')', ')', ')', ';', '}', 'PQclear', '(', 'res', ')', ';', 'ereport', '(', 'LOG', ',', '(', 'errmsg', '(', '""""', ')', ')', ')', ';', 'return', 'true', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
493,"['marker_inode_ctx_new', '(', ')', '{', 'marker_inode_ctx_t', '*', 'ctx', '=', 'NULL', ';', 'ctx', '=', 'GF_CALLOC', '(', '1', ',', 'sizeof', '(', 'marker_inode_ctx_t', ')', ',', 'gf_marker_mt_marker_inode_ctx_t', ')', ';', 'if', '(', 'ctx', '==', 'NULL', ')', 'goto', 'out', ';', 'ctx', '->', 'quota_ctx', '=', 'NULL', ';', 'out', ':', 'return', 'ctx', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
494,"['want_to_remat', '(', 'rtx', 'x', ')', '{', 'int', 'num_clobbers', '=', '0', ';', 'int', 'icode', ';', 'if', '(', 'general_operand', '(', 'x', ',', 'GET_MODE', '(', 'x', ')', ')', ')', 'return', '1', ';', '/', '*', 'Otherwise', ',', 'check', 'if', 'we', 'can', 'make', 'a', 'valid', 'insn', 'from', 'it', '.', 'First', 'if', '(', 'remat_test_insn', '==', '0', ')', '{', '=', 'make_insn_raw', '(', 'gen_rtx_SET', '(', 'VOIDmode', ',', 'gen_rtx_REG', '(', 'word_mode', ',', 'FIRST_PSEUDO_REGISTER', '*', '2', ')', ',', 'const0_rtx', ')', ')', ';', 'NEXT_INSN', '(', 'remat_test_insn', ')', '=', 'PREV_INSN', '(', 'remat_test_insn', ')', '=', '0', ';', '}', '/', '*', 'Now', 'make', 'an', 'insn', 'like', 'the', 'one', 'we', 'would', 'make', 'when', 'PUT_MODE', '(', 'SET_DEST', '(', 'PATTERN', '(', 'remat_test_insn', ')', ')', ',', 'GET_MODE', '(', 'x', ')', ')', ';', 'SET_SRC', '(', 'PATTERN', '(', 'remat_test_insn', ')', ')', '=', 'x', ';', '/', '*', 'XXX', 'For', 'now', 'we', ""don't"", 'allow', 'any', 'clobbers', 'to', 'be', 'added', ',', 'not', 'just', 'return', '(', '(', 'icode', '=', 'recog', '(', 'PATTERN', '(', 'remat_test_insn', ')', ',', 'remat_test_insn', ',', '&', 'num_clobbers', ')', ')', '>=', '&&', '(', 'num_clobbers', '==', '/', '*', '||', '!', 'added_clobbers_hard_reg_p', '(', 'icode', ')', '*', '/', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
495,"['_unique_window_input_channel_listener', '(', 'const', 'void', '*', 'msg_data', ',', 'void', '*', 'ctx', ')', '{', 'const', 'UniqueInputEvent', '*', 'event', '=', 'msg_data', ';', 'UniqueWindow', '*', 'window', '=', 'ctx', ';', 'D_MAGIC_ASSERT', '(', 'window', ',', 'UniqueWindow', ')', ';', 'D_ASSERT', '(', 'event', '!=', 'NULL', ')', ';', 'D_DEBUG_AT', '(', 'UniQuE_Window', ',', '""""', ',', 'event', ',', 'window', ')', ';', 'switch', '(', 'event', '->', 'type', ')', '{', 'case', 'UIET_MOTION', ':', 'dispatch_motion', '(', 'window', ',', 'event', ')', ';', 'break', ';', 'case', 'UIET_BUTTON', ':', 'dispatch_button', '(', 'window', ',', 'event', ')', ';', 'break', ';', 'case', 'UIET_WHEEL', ':', 'dispatch_wheel', '(', 'window', ',', 'event', ')', ';', 'break', ';', 'case', 'UIET_KEY', ':', 'dispatch_key', '(', 'window', ',', 'event', ')', ';', 'break', ';', 'case', 'UIET_CHANNEL', ':', 'dispatch_channel', '(', 'window', ',', 'event', ')', ';', 'break', ';', 'default', ':', 'D_ONCE', '(', '""""', ')', ';', 'break', ';', '}', 'return', 'RS_OK', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
496,"['ODS_update_entry', '(', 'void', ')', '{', 'char', 'buf', '[', 'BUFFER_SIZE', '+', '1', ']', ';', 'int', 'response', ';', 'buf', '[', 'BUFFER_SIZE', ']', '=', ""''"", ';', 'if', '(', 'do_connect', '(', '(', 'int', '*', ')', '&', 'client_sockfd', ',', 'server', ',', 'port', ')', '!=', '0', ')', '{', 'if', '(', '!', '(', 'options', '&', 'OPT_QUIET', ')', ')', '{', 'show_message', '(', '""""', ',', 'server', ',', 'port', ')', ';', '}', 'return', '(', 'UPDATERES_ERROR', ')', ';', '}', 'if', '(', 'ODS_read_response', '(', 'buf', ',', 'sizeof', '(', 'buf', ')', ')', '!=', '100', ')', '{', 'show_message', '(', '""""', ')', ';', 'close', '(', 'client_sockfd', ')', ';', 'return', '(', 'UPDATERES_ERROR', ')', ';', '}', 'snprintf', '(', 'buf', ',', 'BUFFER_SIZE', ',', '""""', ',', 'user_name', ',', 'password', ')', ';', 'output', '(', 'buf', ')', ';', 'response', '=', 'ODS_read_response', '(', 'buf', ',', 'sizeof', '(', 'buf', ')', ')', ';', 'if', '(', '!', '(', 'response', '==', '225', '||', 'response', '==', '226', ')', ')', '{', 'if', '(', 'strlen', '(', 'buf', ')', '>', '4', ')', '{', 'show_message', '(', '""""', ',', '&', '(', 'buf', '[', '4', ']', ')', ')', ';', '}', '{', 'show_message', '(', '""""', ')', ';', '}', 'close', '(', 'client_sockfd', ')', ';', 'return', '(', 'UPDATERES_ERROR', ')', ';', '}', 'snprintf', '(', 'buf', ',', 'BUFFER_SIZE', ',', '""""', ',', 'host', ')', ';', 'output', '(', 'buf', ')', ';', 'if', '(', 'ODS_read_response', '(', 'buf', ',', 'sizeof', '(', 'buf', ')', ')', '!=', '901', ')', '{', 'if', '(', 'strlen', '(', 'buf', ')', '>', '4', ')', '{', 'show_message', '(', '""""', ',', '&', '(', 'buf', '[', '4', ']', ')', ')', ';', '}', '{', 'show_message', '(', '""""', ')', ';', '}', 'close', '(', 'client_sockfd', ')', ';', 'return', '(', 'UPDATERES_ERROR', ')', ';', '}', 'snprintf', '(', 'buf', ',', 'BUFFER_SIZE', ',', '""""', ',', 'host', ',', '*', 'address', '==', ""''"", '?', '""""', ':', 'address', ')', ';', 'output', '(', 'buf', ')', ';', 'response', '=', 'ODS_read_response', '(', 'buf', ',', 'sizeof', '(', 'buf', ')', ')', ';', 'if', '(', '!', '(', 'response', '==', '795', '||', 'response', '==', '796', ')', ')', '{', 'if', '(', 'strlen', '(', 'buf', ')', '>', '4', ')', '{', 'show_message', '(', '""""', ',', '&', '(', 'buf', '[', '4', ']', ')', ')', ';', '}', '{', 'show_message', '(', '""""', ')', ';', '}', 'close', '(', 'client_sockfd', ')', ';', 'return', '(', 'UPDATERES_ERROR', ')', ';', '}', 'if', '(', '!', '(', 'options', '&', 'OPT_QUIET', ')', ')', '{', 'printf', '(', '""""', ')', ';', '}', 'close', '(', 'client_sockfd', ')', ';', 'return', '(', 'UPDATERES_OK', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
497,"['M_Read', '(', 'void', ')', '{', 'if', '(', '!MET_Read', '(', '*', 'm_ReadStream', ',', '&', 'm_Fields', ')', ')', '{', 'METAIO_STREAM', ':', ':', 'cout', '<<', '<<', 'METAIO_STREAM', ':', ':', 'endl', ';', 'return', 'false', ';', '}', 'MetaForm', ':', ':', 'InitializeEssential', '(', ')', ';', 'MET_FieldRecordType', '*', 'mF', ';', 'mF', '=', 'MET_GetFieldRecord', '(', '""""', ',', '&', 'm_Fields', ')', ';', 'if', '(', 'mF', '&&', 'mF', '->', 'defined', ')', '{', 'strcpy', '(', 'm_Comment', ',', '(', 'char', '*', ')', '(', 'mF', '->', 'value', ')', ')', ';', '}', 'mF', '=', 'MET_GetFieldRecord', '(', '""""', ',', '&', 'm_Fields', ')', ';', 'if', '(', 'mF', '&&', 'mF', '->', 'defined', ')', '{', 'strcpy', '(', 'm_FormTypeName', ',', '(', 'char', '*', ')', '(', 'mF', '->', 'value', ')', ')', ';', '}', 'mF', '=', 'MET_GetFieldRecord', '(', '""""', ',', '&', 'm_Fields', ')', ';', 'if', '(', 'mF', '&&', 'mF', '->', 'defined', ')', '{', 'strcpy', '(', 'm_Name', ',', '(', 'char', '*', ')', '(', 'mF', '->', 'value', ')', ')', ';', '}', 'mF', '=', 'MET_GetFieldRecord', '(', '""""', ',', '&', 'm_Fields', ')', ';', 'if', '(', 'mF', '&&', 'mF', '->', 'defined', ')', '{', 'if', '(', '(', '(', 'char', '*', ')', '(', 'mF', '->', 'value', ')', ')', '[', '0', ']', '==', ""''"", '||', '(', '(', 'char', '*', ')', '(', 'mF', '->', 'value', ')', ')', '[', '0', ']', '==', ""''"", '||', '(', '(', 'char', '*', ')', '(', 'mF', '->', 'value', ')', ')', '[', '0', ']', '==', ""''"", ')', '{', 'm_BinaryData', '=', 'true', ';', '}', '{', 'm_BinaryData', '=', 'false', ';', '}', '}', '{', 'm_BinaryData', '=', 'false', ';', '}', 'mF', '=', 'MET_GetFieldRecord', '(', '""""', ',', '&', 'm_Fields', ')', ';', 'if', '(', 'mF', '&&', 'mF', '->', 'defined', ')', '{', 'if', '(', '(', '(', 'char', '*', ')', '(', 'mF', '->', 'value', ')', ')', '[', '0', ']', '==', ""''"", '||', '(', '(', 'char', '*', ')', '(', 'mF', '->', 'value', ')', ')', '[', '0', ']', '==', ""''"", '||', '(', '(', 'char', '*', ')', '(', 'mF', '->', 'value', ')', ')', '[', '0', ']', '==', ""''"", ')', '{', 'm_BinaryDataByteOrderMSB', '=', 'true', ';', '}', '{', 'm_BinaryDataByteOrderMSB', '=', 'false', ';', '}', '}', 'mF', '=', 'MET_GetFieldRecord', '(', '""""', ',', '&', 'm_Fields', ')', ';', 'if', '(', 'mF', '&&', 'mF', '->', 'defined', ')', '{', 'if', '(', '(', '(', 'char', '*', ')', '(', 'mF', '->', 'value', ')', ')', '[', '0', ']', '==', ""''"", '||', '(', '(', 'char', '*', ')', '(', 'mF', '->', 'value', ')', ')', '[', '0', ']', '==', ""''"", '||', '(', '(', 'char', '*', ')', '(', 'mF', '->', 'value', ')', ')', '[', '0', ']', '==', ""''"", ')', '{', 'm_CompressedData', '=', 'true', ';', '}', '{', 'm_CompressedData', '=', 'false', ';', '}', '}', '{', 'm_CompressedData', '=', 'false', ';', '}', '/', '/', 'Set', 'the', 'read', 'record', 'field', 'in', 'the', 'FieldsContainerType', ':', ':', 'iterator', 'it', '=', 'm_UserDefinedReadFields', '.', 'begin', '(', ')', ';', 'FieldsContainerType', ':', ':', 'iterator', 'end', '=', 'm_UserDefinedReadFields', '.', 'end', '(', ')', ';', 'while', '(', 'it', '!=', 'end', ')', '{', 'mF', '=', 'MET_GetFieldRecord', '(', '(', '*', 'it', ')', '->', 'name', ',', '&', 'm_Fields', ')', ';', 'm_UserDefinedWriteFields', '.', 'push_back', '(', 'mF', ')', ';', '++', 'it', ';', '}', 'return', 'true', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
498,"['usb_wwan_resume', '(', 'struct', 'usb_serial', '*', 'serial', ')', '{', 'int', 'i', ',', 'j', ';', 'struct', 'usb_serial_port', '*', 'port', ';', 'struct', 'usb_wwan_intf_private', '*', 'intfdata', '=', 'usb_get_serial_data', '(', 'serial', ')', ';', 'struct', 'usb_wwan_port_private', '*', 'portdata', ';', 'struct', 'urb', '*', 'urb', ';', 'int', 'err', ';', 'int', 'err_count', '=', '0', ';', 'spin_lock_irq', '(', '&', 'intfdata', '->', 'susp_lock', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'serial', '->', 'num_ports', ';', 'i', '++', ')', '{', 'port', '=', 'serial', '->', 'port', '[', 'i', ']', ';', 'if', '(', '!test_bit', '(', 'ASYNCB_INITIALIZED', ',', '&', 'port', '->', 'port', '.', 'flags', ')', ')', 'continue', ';', 'portdata', '=', 'usb_get_serial_port_data', '(', 'port', ')', ';', 'if', '(', 'port', '->', 'interrupt_in_urb', ')', '{', 'err', '=', 'usb_submit_urb', '(', 'port', '->', 'interrupt_in_urb', ',', 'GFP_ATOMIC', ')', ';', 'if', '(', 'err', ')', '{', 'dev_err', '(', '&', 'port', '->', 'dev', ',', '""""', ',', '__func__', ',', 'err', ')', ';', 'err_count', '++', ';', '}', '}', 'err', '=', 'usb_wwan_submit_delayed_urbs', '(', 'port', ')', ';', 'if', '(', 'err', ')', 'err_count', '++', ';', 'for', '(', 'j', '=', '0', ';', 'j', '<', 'N_IN_URB', ';', 'j', '++', ')', '{', 'urb', '=', 'portdata', '->', 'in_urbs', '[', 'j', ']', ';', 'err', '=', 'usb_submit_urb', '(', 'urb', ',', 'GFP_ATOMIC', ')', ';', 'if', '(', 'err', '<', '0', ')', '{', 'dev_err', '(', '&', 'port', '->', 'dev', ',', '""""', ',', '__func__', ',', 'i', ',', 'err', ')', ';', 'err_count', '++', ';', '}', '}', '}', 'intfdata', '->', 'suspended', '=', '0', ';', 'spin_unlock_irq', '(', '&', 'intfdata', '->', 'susp_lock', ')', ';', 'if', '(', 'err_count', ')', 'return', '-', 'EIO', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
499,"['test_commit_signature__create_empties', '(', 'void', ')', '{', '/', '/', 'can', 'not', 'create', 'a', 'signature', 'with', 'empty', 'name', 'or', 'cl_git_pass', '(', 'try_build_signature', '(', '""""', ',', '""""', ',', '1234567890', ',', '60', ')', ')', ';', 'cl_git_fail', '(', 'try_build_signature', '(', '""""', ',', '""""', ',', '1234567890', ',', '60', ')', ')', ';', 'cl_git_fail', '(', 'try_build_signature', '(', '""""', ',', '""""', ',', '1234567890', ',', '60', ')', ')', ';', 'cl_git_fail', '(', 'try_build_signature', '(', '""""', ',', '""""', ',', '1234567890', ',', '60', ')', ')', ';', 'cl_git_fail', '(', 'try_build_signature', '(', '""""', ',', '""""', ',', '1234567890', ',', '60', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
500,"['get_url', '(', 'const', 'char', '*', 'url', ')', '{', 'int', 'retry_count', '=', '0', ';', 'response_buffer', '*', 'b', '=', 'new', 'response_buffer', '(', ')', ';', 'do', '{', 'CURL', '*', 'c', '=', 'curl_easy_init', '(', ')', ';', 'curl_easy_setopt', '(', 'c', ',', 'CURLOPT_WRITEFUNCTION', ',', 'buffer_write', ')', ';', 'curl_easy_setopt', '(', 'c', ',', 'CURLOPT_WRITEDATA', ',', 'b', ')', ';', 'curl_easy_setopt', '(', 'c', ',', 'CURLOPT_URL', ',', 'url', ')', ';', 'int', 'success', '=', 'curl_easy_perform', '(', 'c', ')', ';', 'curl_easy_getinfo', '(', 'c', ',', 'CURLINFO_RESPONSE_CODE', ',', '&', 'b', '->', 'result', ')', ';', 'curl_easy_cleanup', '(', 'c', ')', ';', '}', 'while', '(', 'b', '->', 'result', '!=', '200', '&&', '++', 'retry_count', '<', 's3_retry_max', ')', ';', 's3_request_retry_count', '=', 'retry_count', ';', 'return', 'b', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
501,"['GetPunctuationChars', '(', ')', '{', 'int', 'msg', '=', 'SCI_GETPUNCTUATIONCHARS', ';', 'const', 'long', 'len', '=', 'SendMsg', '(', 'msg', ',', '0', ',', '(', 'uptr_t', ')', 'NULL', ')', ';', 'if', '(', '!len', ')', 'return', 'wxEmptyString', ';', 'wxMemoryBuffer', 'mbuf', '(', 'len', '+', '1', ')', ';', 'char', '*', 'buf', '=', '(', 'char', '*', ')', 'mbuf', '.', 'GetWriteBuf', '(', 'len', '+', '1', ')', ';', 'SendMsg', '(', 'msg', ',', '0', ',', '(', 'uptr_t', ')', 'buf', ')', ';', 'mbuf', '.', 'UngetWriteBuf', '(', 'len', ')', ';', 'mbuf', '.', 'AppendByte', '(', '0', ')', ';', 'return', 'sci2wx', '(', 'buf', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
502,"['find_call', '(', 'const', 'struct', 'sockaddr_atmpvc', '*', 'in', ',', 'const', 'struct', 'sockaddr_atmpvc', '*', 'out', ')', '{', 'USER_CALL', '*', 'u_call', ';', 'for', '(', 'u_call', '=', 'calls', ';', 'u_call', ';', 'u_call', '=', 'u_call', '->', 'next', ')', 'if', '(', 'atm_equal', '(', '(', 'struct', 'sockaddr', '*', ')', 'in', ',', '(', 'struct', 'sockaddr', '*', ')', '&', 'u_call', '->', 'call', '.', 'in', '.', 'pvc', ',', '0', ',', '0', ')', '&&', 'atm_equal', '(', '(', 'struct', 'sockaddr', '*', ')', 'out', ',', '(', 'struct', 'sockaddr', '*', ')', '&', 'u_call', '->', 'call', '.', 'out', '.', 'pvc', ',', '0', ',', '0', ')', ')', 'break', ';', 'return', 'u_call', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
503,"['hsep_get_static_str', '(', 'int', 'row', ',', 'int', 'column', ')', '{', 'const', 'char', '*', 'ret', '=', 'NULL', ';', 'hsep_triple', 'hsep_table', '[', 'G_N_ELEMENTS', '(', 'hsep_global_table', ')', ']', ';', 'hsep_triple', 'other', '[', '1', ']', ';', 'uint64', 'v', ';', 'hsep_get_global_table', '(', 'hsep_table', ',', 'G_N_ELEMENTS', '(', 'hsep_table', ')', ')', ';', 'hsep_get_non_hsep_triple', '(', 'other', ')', ';', 'switch', '(', 'column', ')', '{', 'case', 'HSEP_IDX_NODES', ':', '{', 'static', 'char', 'buf', '[', 'UINT64_DEC_BUFLEN', ']', ';', 'v', '=', 'hsep_table', '[', 'row', ']', '[', 'HSEP_IDX_NODES', ']', '+', 'other', '[', '0', ']', '[', 'HSEP_IDX_NODES', ']', ';', 'uint64_to_string_buf', '(', 'v', ',', 'buf', ',', 'sizeof', 'buf', ')', ';', 'ret', '=', 'buf', ';', '}', 'break', ';', 'case', 'HSEP_IDX_FILES', ':', '{', 'static', 'char', 'buf', '[', 'UINT64_DEC_BUFLEN', ']', ';', 'v', '=', 'hsep_table', '[', 'row', ']', '[', 'HSEP_IDX_FILES', ']', '+', 'other', '[', '0', ']', '[', 'HSEP_IDX_FILES', ']', ';', 'uint64_to_string_buf', '(', 'v', ',', 'buf', ',', 'sizeof', 'buf', ')', ';', 'ret', '=', 'buf', ';', '}', 'break', ';', 'case', 'HSEP_IDX_KIB', ':', '{', 'static', 'char', 'buf', '[', 'UINT64_DEC_BUFLEN', ']', ';', '/', '*', 'Make', 'a', 'copy', 'because', 'concurrent', 'usage', 'of', 'short_kb_size', '(', ')', 'v', '=', 'hsep_table', '[', 'row', ']', '[', 'HSEP_IDX_KIB', ']', '+', 'other', '[', '0', ']', '[', 'HSEP_IDX_KIB', ']', ';', 'g_strlcpy', '(', 'buf', ',', 'short_kb_size', '(', 'v', ',', 'GNET_PROPERTY', '(', 'display_metric_units', ')', ')', ',', 'sizeof', 'buf', ')', ';', 'ret', '=', 'buf', ';', '}', 'break', ';', '}', 'g_assert', '(', 'ret', '!=', 'NULL', ')', ';', 'return', 'ret', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
504,"['format4', '(', 'struct', 'ftio', '*', 'ftio', ',', 'struct', 'options', '*', 'opt', ')', '{', 'struct', 'ftver', 'ftv', ';', 'struct', 'ftencode', 'fte', ';', 'char', '*', 'rec', ';', 'int', 'ret', ';', 'ftencode_init', '(', '&', 'fte', ',', '0', ')', ';', 'ftio_get_ver', '(', 'ftio', ',', '&', 'ftv', ')', ';', 'bcopy', '(', '&', 'ftv', ',', '&', 'fte', '.', 'ver', ',', 'sizeof', 'ftv', ')', ';', 'while', '(', '(', 'rec', '=', 'ftio_read', '(', 'ftio', ')', ')', ')', '{', 'retry', ':', 'ret', '=', 'fts3rec_pdu_encode', '(', '&', 'fte', ',', 'rec', ')', ';', '/', '*', 'ret', '==', '0', 'then', 'send', 'and', 'clear', 'out', '*', 'ret', '>', '0', 'then', 'encode', '*', 'ret', '<', '0', 'then', 'this', 'encoding', 'failed', ',', 'send', 'and', 'clear', 'out', 'if', '(', 'ret', '<=', '0', ')', '{', '#if', 'BYTE_ORDER', '==', 'ftpdu_swap', '(', 'fte', '.', 'buf_enc', ',', 'BYTE_ORDER', ')', ';', 'if', '(', 'fwrite', '(', '&', 'fte', '.', 'buf', ',', 'fte', '.', 'buf_size', ',', '1', ',', 'stdout', ')', '!=', '1', ')', 'fterr_err', '(', '1', ',', '""""', ')', ';', 'ftencode_reset', '(', '&', 'fte', ')', ';', 'if', '(', 'ret', '<', '0', ')', 'goto', 'retry', ';', '}', '++', 'opt', '->', 'records', ';', '}', 'if', '(', 'fte', '.', 'buf_size', ')', '{', 'ftpdu_swap', '(', 'fte', '.', 'buf_enc', ',', 'BYTE_ORDER', ')', ';', 'if', '(', 'fwrite', '(', '&', 'fte', '.', 'buf', ',', 'fte', '.', 'buf_size', ',', '1', ',', 'stdout', ')', '!=', '1', ')', 'fterr_err', '(', '1', ',', '""""', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
505,"['xlsx_find_border', '(', 'GnmStyle', 'const', '*', 'style', ',', 'GPtrArray', '*', 'styles', ')', '{', 'unsigned', 'i', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'styles', '->', 'len', ';', 'i', '++', ')', '{', 'GnmStyle', 'const', '*', 'old_style', '=', 'g_ptr_array_index', '(', 'styles', ',', 'i', ')', ';', 'if', '(', 'style', '==', 'old_style', ')', 'return', '(', 'gint', ')', 'i', ';', 'if', '(', 'gnm_style_is_element_set', '(', 'style', ',', 'MSTYLE_BORDER_TOP', ')', '!=', 'gnm_style_is_element_set', '(', 'old_style', ',', 'MSTYLE_BORDER_TOP', ')', '||', 'gnm_style_is_element_set', '(', 'style', ',', 'MSTYLE_BORDER_BOTTOM', ')', '!=', 'gnm_style_is_element_set', '(', 'old_style', ',', 'MSTYLE_BORDER_BOTTOM', ')', '||', 'gnm_style_is_element_set', '(', 'style', ',', 'MSTYLE_BORDER_LEFT', ')', '!=', 'gnm_style_is_element_set', '(', 'old_style', ',', 'MSTYLE_BORDER_LEFT', ')', '||', 'gnm_style_is_element_set', '(', 'style', ',', 'MSTYLE_BORDER_RIGHT', ')', '!=', 'gnm_style_is_element_set', '(', 'old_style', ',', 'MSTYLE_BORDER_RIGHT', ')', '||', 'gnm_style_is_element_set', '(', 'style', ',', 'MSTYLE_BORDER_REV_DIAGONAL', ')', '!=', 'gnm_style_is_element_set', '(', 'old_style', ',', 'MSTYLE_BORDER_REV_DIAGONAL', ')', '||', 'gnm_style_is_element_set', '(', 'style', ',', 'MSTYLE_BORDER_DIAGONAL', ')', '!=', 'gnm_style_is_element_set', '(', 'old_style', ',', 'MSTYLE_BORDER_DIAGONAL', ')', ')', 'continue', ';', 'if', '(', 'gnm_style_get_border', '(', 'style', ',', 'MSTYLE_BORDER_TOP', ')', '!=', 'gnm_style_get_border', '(', 'old_style', ',', 'MSTYLE_BORDER_TOP', ')', '||', 'gnm_style_get_border', '(', 'style', ',', 'MSTYLE_BORDER_BOTTOM', ')', '!=', 'gnm_style_get_border', '(', 'old_style', ',', 'MSTYLE_BORDER_BOTTOM', ')', '||', 'gnm_style_get_border', '(', 'style', ',', 'MSTYLE_BORDER_LEFT', ')', '!=', 'gnm_style_get_border', '(', 'old_style', ',', 'MSTYLE_BORDER_LEFT', ')', '||', 'gnm_style_get_border', '(', 'style', ',', 'MSTYLE_BORDER_RIGHT', ')', '!=', 'gnm_style_get_border', '(', 'old_style', ',', 'MSTYLE_BORDER_RIGHT', ')', '||', 'gnm_style_get_border', '(', 'style', ',', 'MSTYLE_BORDER_REV_DIAGONAL', ')', '!=', 'gnm_style_get_border', '(', 'old_style', ',', 'MSTYLE_BORDER_REV_DIAGONAL', ')', '||', 'gnm_style_get_border', '(', 'style', ',', 'MSTYLE_BORDER_DIAGONAL', ')', '!=', 'gnm_style_get_border', '(', 'old_style', ',', 'MSTYLE_BORDER_DIAGONAL', ')', ')', 'continue', ';', 'return', '(', 'gint', ')', 'i', ';', '}', 'return', '-', '1', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
506,"['format10', '(', 'struct', 'fmtargs', '*', 'args', ')', '{', 'struct', 'fts3rec_offsets', 'fo', ';', 'struct', 'fopd32', 'cur', ';', 'struct', 'ftver', 'ftv', ';', 'struct', 'ftchash', '*', 'ftch', ';', 'struct', 'ftchash_rec_ip2', 'ftch_recip2', ',', '*', 'ftch_recip2p', ';', 'struct', 'fopd', 'total', ';', 'u_int32', 'hash', ';', 'char', '*', 'rec', ';', 'ftio_get_ver', '(', '&', 'args', '->', 'ftio', ',', '&', 'ftv', ')', ';', 'if', '(', 'ftio_check_xfield', '(', '&', 'args', '->', 'ftio', ',', 'FT_XFIELD_DPKTS', '|', 'FT_XFIELD_DOCTETS', '|', 'FT_XFIELD_FIRST', '|', 'FT_XFIELD_LAST', '|', 'FT_XFIELD_SRCADDR', '|', 'FT_XFIELD_DSTADDR', ')', ')', '{', 'fterr_warnx', '(', '""""', ')', ';', 'return', '-', '1', ';', '}', 'fts3rec_compute_offsets', '(', '&', 'fo', ',', '&', 'ftv', ')', ';', 'bzero', '(', '&', 'total', ',', 'sizeof', 'total', ')', ';', 'bzero', '(', '&', 'ftch_recip2', ',', 'sizeof', 'ftch_recip2', ')', ';', 'if', '(', '!', '(', 'ftch', '=', 'ftchash_new', '(', '65536', ',', 'sizeof', '(', 'struct', 'ftchash_rec_ip2', ')', ',', '8', ',', '65536', ')', ')', ')', '{', 'fterr_warnx', '(', '""""', ')', ';', 'return', '-', '1', ';', '}', 'cur', '.', 'flows', '=', '1', ';', 'while', '(', '(', 'rec', '=', 'ftio_read', '(', '&', 'args', '->', 'ftio', ')', ')', ')', '{', 'CUR_GET_PLUS_FLOWS', ';', 'TOTAL_INC', ';', 'ftch_recip2', '.', 'src_addr', '=', '*', '(', '(', 'u_int32', '*', ')', '(', 'rec', '+', 'fo', '.', 'srcaddr', ')', ')', ';', 'ftch_recip2', '.', 'dst_addr', '=', '*', '(', '(', 'u_int32', '*', ')', '(', 'rec', '+', 'fo', '.', 'dstaddr', ')', ')', ';', 'hash', '=', '(', 'ftch_recip2', '.', 'src_addr', '>>', '16', ')', '^', '(', 'ftch_recip2', '.', 'src_addr', '&', '0xFFFF', ')', '^', '(', 'ftch_recip2', '.', 'dst_addr', '>>', '16', ')', '^', '(', 'ftch_recip2', '.', 'dst_addr', '&', '0xFFFF', ')', ';', 'if', '(', '!', '(', 'ftch_recip2p', '=', 'ftchash_update', '(', 'ftch', ',', '&', 'ftch_recip2', ',', 'hash', ')', ')', ')', '{', 'fterr_warnx', '(', '""""', ')', ';', 'ftchash_free', '(', 'ftch', ')', ';', 'return', '-', '1', ';', '}', 'STAT_INCP', '(', 'ftch_recip2p', ')', ';', '}', 'chash_ip2_dump', '(', 'ftch', ',', 'args', '->', 'cc', ',', 'args', '->', 'sort_order', ',', 'args', '->', 'options', ',', '&', 'total', ')', ';', 'ftchash_free', '(', 'ftch', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
507,"['snd_ak4531_mixer', '(', 'struct', 'snd_card', '*', 'card', ',', 'struct', 'snd_ak4531', '*', '_ak4531', ',', 'struct', 'snd_ak4531', '*', '*', 'rak4531', ')', '{', 'unsigned', 'int', 'idx', ';', 'int', 'err', ';', 'struct', 'snd_ak4531', '*', 'ak4531', ';', 'static', 'struct', 'snd_device_ops', 'ops', '=', '{', '.', 'dev_free', '=', '\tsnd_ak4531_dev_free', ',', '}', ';', 'if', '(', 'snd_BUG_ON', '(', '!card', '||', '!_ak4531', ')', ')', 'return', '-', 'EINVAL', ';', 'if', '(', 'rak4531', ')', '*', 'rak4531', '=', 'NULL', ';', 'ak4531', '=', 'kzalloc', '(', 'sizeof', '(', '*', 'ak4531', ')', ',', 'GFP_KERNEL', ')', ';', 'if', '(', 'ak4531', '==', 'NULL', ')', 'return', '-', 'ENOMEM', ';', '*', 'ak4531', '=', '*', '_ak4531', ';', 'mutex_init', '(', '&', 'ak4531', '->', 'reg_mutex', ')', ';', 'if', '(', '(', 'err', '=', 'snd_component_add', '(', 'card', ',', '""""', ')', ')', '<', '0', ')', '{', 'snd_ak4531_free', '(', 'ak4531', ')', ';', 'return', 'err', ';', '}', 'strcpy', '(', 'card', '->', 'mixername', ',', '""""', ')', ';', 'udelay', '(', '100', ')', ';', 'for', '(', 'idx', '=', '0', ';', 'idx', '<=', '0x19', ';', 'idx', '++', ')', '{', 'if', '(', 'idx', '==', 'AK4531_RESET', '||', 'idx', '==', 'AK4531_CLOCK', ')', 'continue', ';', '}', 'for', '(', 'idx', '=', '0', ';', 'idx', '<', 'ARRAY_SIZE', '(', 'snd_ak4531_controls', ')', ';', 'idx', '++', ')', '{', 'if', '(', '(', 'err', '=', 'snd_ctl_add', '(', 'card', ',', 'snd_ctl_new1', '(', '&', 'snd_ak4531_controls', '[', 'idx', ']', ',', 'ak4531', ')', ')', ')', '<', '0', ')', '{', 'snd_ak4531_free', '(', 'ak4531', ')', ';', 'return', 'err', ';', '}', '}', 'snd_ak4531_proc_init', '(', 'card', ',', 'ak4531', ')', ';', 'if', '(', '(', 'err', '=', 'snd_device_new', '(', 'card', ',', 'SNDRV_DEV_CODEC', ',', 'ak4531', ',', '&', 'ops', ')', ')', '<', '0', ')', '{', 'snd_ak4531_free', '(', 'ak4531', ')', ';', 'return', 'err', ';', '}', '#if', 'snd_ak4531_dump', '(', 'ak4531', ')', ';', 'if', '(', 'rak4531', ')', '*', 'rak4531', '=', 'ak4531', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
508,"['ili922x_read', '(', 'struct', 'spi_device', '*', 'spi', ',', 'u8', 'reg', ',', 'u16', '*', 'rx', ')', '{', 'struct', 'spi_message', 'msg', ';', 'struct', 'spi_transfer', 'xfer_regindex', ',', 'xfer_regvalue', ';', 'unsigned', 'char', 'tbuf', '[', 'CMD_BUFSIZE', ']', ';', 'unsigned', 'char', 'rbuf', '[', 'CMD_BUFSIZE', ']', ';', 'int', 'ret', ',', 'len', '=', '0', ',', 'send_bytes', ';', 'memset', '(', '&', 'xfer_regindex', ',', '0', ',', 'sizeof', '(', 'struct', 'spi_transfer', ')', ')', ';', 'memset', '(', '&', 'xfer_regvalue', ',', '0', ',', 'sizeof', '(', 'struct', 'spi_transfer', ')', ')', ';', 'spi_message_init', '(', '&', 'msg', ')', ';', 'xfer_regindex', '.', 'tx_buf', '=', 'tbuf', ';', 'xfer_regindex', '.', 'rx_buf', '=', 'rbuf', ';', 'xfer_regindex', '.', 'cs_change', '=', '1', ';', 'CHECK_FREQ_REG', '(', 'spi', ',', '&', 'xfer_regindex', ')', ';', 'tbuf', '[', '0', ']', '=', 'set_tx_byte', '(', 'START_BYTE', '(', 'ili922x_id', ',', 'START_RS_INDEX', ',', 'START_RW_WRITE', ')', ')', ';', 'tbuf', '[', '1', ']', '=', 'set_tx_byte', '(', '0', ')', ';', 'tbuf', '[', '2', ']', '=', 'set_tx_byte', '(', 'reg', ')', ';', 'xfer_regindex', '.', 'bits_per_word', '=', '8', ';', 'len', '=', 'xfer_regindex', '.', 'len', '=', '3', ';', 'spi_message_add_tail', '(', '&', 'xfer_regindex', ',', '&', 'msg', ')', ';', 'send_bytes', '=', 'len', ';', 'tbuf', '[', 'len', '++', ']', '=', 'set_tx_byte', '(', 'START_BYTE', '(', 'ili922x_id', ',', 'START_RS_REG', ',', 'START_RW_READ', ')', ')', ';', 'tbuf', '[', 'len', '++', ']', '=', 'set_tx_byte', '(', '0', ')', ';', 'tbuf', '[', 'len', ']', '=', 'set_tx_byte', '(', '0', ')', ';', 'xfer_regvalue', '.', 'cs_change', '=', '1', ';', 'xfer_regvalue', '.', 'len', '=', '3', ';', 'xfer_regvalue', '.', 'tx_buf', '=', '&', 'tbuf', '[', 'send_bytes', ']', ';', 'xfer_regvalue', '.', 'rx_buf', '=', '&', 'rbuf', '[', 'send_bytes', ']', ';', 'CHECK_FREQ_REG', '(', 'spi', ',', '&', 'xfer_regvalue', ')', ';', 'spi_message_add_tail', '(', '&', 'xfer_regvalue', ',', '&', 'msg', ')', ';', 'ret', '=', 'spi_sync', '(', 'spi', ',', '&', 'msg', ')', ';', 'if', '(', 'ret', '<', '0', ')', '{', 'dev_dbg', '(', '&', 'spi', '->', 'dev', ',', '""""', ',', 'ret', ')', ';', 'return', 'ret', ';', '}', '*', 'rx', '=', '(', 'rbuf', '[', '1', '+', 'send_bytes', ']', '<<', '8', ')', '+', 'rbuf', '[', '2', '+', 'send_bytes', ']', ';', 'return', '0', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
509,"['queue', '(', 'dump_info_p', 'di', ',', 'const_tree', 't', ',', 'int', 'flags', ')', '{', 'dump_queue_p', 'dq', ';', 'dump_node_info_p', 'dni', ';', 'unsigned', 'int', 'index', ';', 'index', '=', '++', 'di', '->', 'index', ';', 'if', '(', 'di', '->', 'free_list', ')', '{', 'dq', '=', 'di', '->', 'free_list', ';', 'di', '->', 'free_list', '=', 'dq', '->', 'next', ';', '}', 'dq', '=', 'XNEW', '(', 'struct', 'dump_queue', ')', ';', 'dni', '=', 'XNEW', '(', 'struct', 'dump_node_info', ')', ';', 'dni', '->', 'index', '=', 'index', ';', 'dni', '->', 'binfo_p', '=', '(', '(', 'flags', '&', 'DUMP_BINFO', ')', '!=', '0', ')', ';', 'dq', '->', 'node', '=', 'splay_tree_insert', '(', 'di', '->', 'nodes', ',', '(', 'splay_tree_key', ')', 't', ',', '(', 'splay_tree_value', ')', 'dni', ')', ';', 'dq', '->', 'next', '=', '0', ';', 'if', '(', '!di', '->', 'queue_end', ')', 'di', '->', 'queue', '=', 'dq', ';', 'di', '->', 'queue_end', '->', 'next', '=', 'dq', ';', 'di', '->', 'queue_end', '=', 'dq', ';', 'return', 'index', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
510,"['ex_spellinfo', '(', 'eap', ')', 'exarg_T', '*', 'eap', ';', '{', 'int\t\tlpi', ';', 'langp_T\t', '*', 'lp', ';', 'char_u\t', '*', 'p', ';', 'if', '(', 'no_spell_checking', '(', 'curwin', ')', ')', 'return', ';', 'msg_start', '(', ')', ';', 'for', '(', 'lpi', '=', '0', ';', 'lpi', '<', 'curbuf', '->', 'b_langp', '.', 'ga_len', '&&', '!got_int', ';', '++', 'lpi', ')', '{', 'lp', '=', 'LANGP_ENTRY', '(', 'curbuf', '->', 'b_langp', ',', 'lpi', ')', ';', 'msg_puts', '(', '(', 'char_u', '*', ')', '""""', ')', ';', 'msg_puts', '(', 'lp', '->', 'lp_slang', '->', 'sl_fname', ')', ';', 'msg_putchar', '(', ""''"", ')', ';', 'p', '=', 'lp', '->', 'lp_slang', '->', 'sl_info', ';', 'if', '(', 'p', '!=', 'NULL', ')', '{', 'msg_puts', '(', 'p', ')', ';', 'msg_putchar', '(', ""''"", ')', ';', '}', '}', 'msg_end', '(', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
511,"['eXdbmPathList', '(', 'DB_ID', 'dbid', ',', 'char', '*', 'path', ')', '{', 'TDbmListEntry', '*', 'search', ';', 'char', '*', 'found', ';', 'int', 'ret', ';', 'ret', '=', 'DbmIsInit', '(', ')', ';', 'if', '(', 'ret', '==', '-', '1', ')', 'return', '(', 'NULL', ')', ';', 'if', '(', 'CheckDbIdent', '(', 'dbid', ')', '==', '-', '1', ')', '{', 'RaiseError', '(', 'DBM_WRONG_ID', ')', ';', 'return', '(', 'NULL', ')', ';', '}', 'search', '=', 'DbmDbList', '->', 'dblist', '[', 'dbid', ']', '.', 'root', ';', 'found', '=', 'strtok', '(', 'path', ',', '""""', ')', ';', 'while', '(', 'found', '!=', 'NULL', ')', '{', 'search', '=', 'SearchListEntry', '(', 'search', ',', 'found', ')', ';', 'if', '(', 'search', '==', 'NULL', ')', 'return', '(', 'NULL', ')', ';', 'found', '=', 'strtok', '(', 'NULL', ',', '""""', ')', ';', '}', 'return', '(', 'search', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
512,"['vtkParse_FreeTemplateDecomposition', '(', 'const', 'char', '*', 'name', ',', 'int', 'n', ',', 'const', 'char', '*', '*', 'args', ')', '{', 'int', 'i', ';', 'if', '(', 'name', ')', '{', 'free', '(', '(', 'char', '*', ')', 'name', ')', ';', '}', 'if', '(', 'n', '>', '0', ')', '{', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'n', ';', 'i', '++', ')', '{', 'free', '(', '(', 'char', '*', ')', 'args', '[', 'i', ']', ')', ';', '}', 'free', '(', '(', 'char', '*', '*', ')', 'args', ')', ';', '}', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
513,"['printantsynset', '(', 'SynsetPtr', 'synptr', ',', 'char', '*', 'tail', ',', 'int', 'anttype', ',', 'int', 'definition', ')', '{', 'int', 'i', ',', 'wdcnt', ';', 'char', 'tbuf', '[', 'SMLINEBUF', ']', ';', 'char', '*', 'str', ';', 'int', 'first', '=', '1', ';', 'tbuf', '[', '0', ']', '=', ""''"", ';', 'if', '(', 'offsetflag', ')', 'sprintf', '(', 'tbuf', ',', '""""', ',', 'synptr', '->', 'hereiam', ')', ';', 'if', '(', 'fileinfoflag', ')', '{', 'sprintf', '(', 'tbuf', '+', 'strlen', '(', 'tbuf', ')', ',', '""""', ',', 'lexfiles', '[', 'synptr', '->', 'fnum', ']', ')', ';', 'prlexid', '=', '1', ';', '}', 'prlexid', '=', '0', ';', 'strcat', '(', 'tbuf', ',', '""""', ')', ';', 'for', '(', 'i', '=', '0', ',', 'wdcnt', '=', 'synptr', '->', 'wcount', ';', 'i', '<', 'wdcnt', ';', 'i', '++', ')', '{', 'if', '(', 'first', ')', '{', 'str', '=', 'printant', '(', 'ADJ', ',', 'synptr', ',', 'i', '+', '1', ',', '""""', ',', '""""', ')', ';', 'first', '=', '0', ';', '}', 'str', '=', 'printant', '(', 'ADJ', ',', 'synptr', ',', 'i', '+', '1', ',', '""""', ',', '""""', ')', ';', 'if', '(', '*', 'str', ')', 'strcat', '(', 'tbuf', ',', 'str', ')', ';', '}', 'strcat', '(', 'tbuf', ',', '""""', ')', ';', 'for', '(', 'i', '=', '0', ',', 'wdcnt', '=', 'synptr', '->', 'wcount', ';', 'i', '<', 'wdcnt', ';', 'i', '++', ')', '{', 'catword', '(', 'tbuf', ',', 'synptr', ',', 'i', ',', 'SKIP_MARKER', ',', 'SKIP_ANTS', ')', ';', 'if', '(', 'i', '<', 'wdcnt', '-', '1', ')', 'strcat', '(', 'tbuf', ',', '""""', ')', ';', '}', 'if', '(', 'dflag', '&&', 'synptr', '->', 'defn', '&&', 'definition', ')', '{', 'strcat', '(', 'tbuf', ',', '""""', ')', ';', 'strcat', '(', 'tbuf', ',', 'synptr', '->', 'defn', ')', ';', '}', 'strcat', '(', 'tbuf', ',', 'tail', ')', ';', 'printbuffer', '(', 'tbuf', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
514,"['remove_solutions', '(', 'struct', 'up_solution', '*', 'update', ',', 'struct', 'problem_list', '*', 'pblist', ',', 'struct', 'board', '*', 'board', ',', 'char', '*', '*', 'matrix', ',', 'short', 'psol', ')', '{', 'short', 'x', ',', 'y', ',', 'z', ',', 'j', ',', 'ps', ';', 'short', 'tsol', '=', '0', ',', '*', 'temp', ',', '*', 'tprobs', ';', 'short', 'probs', '=', '0', ';', 'temp', '=', '(', 'short', '*', ')', 'malloc', '(', 'MAXSOLS', '*', 'sizeof', '(', 'short', ')', ')', ';', 'tprobs', '=', '(', 'short', '*', ')', 'malloc', '(', 'GROUPS', '*', 'sizeof', '(', 'short', ')', ')', ';', 'if', '(', '!temp', '||', '!tprobs', ')', 'fatal_error', '(', '""""', ')', ';', 'for', '(', 'y', '=', '0', ';', 'y', '<', 'board', '->', 'solution', '[', 'psol', ']', '->', 'solgroupsnumb', ';', 'y', '++', ')', '{', 'z', '=', 'board', '->', 'solution', '[', 'psol', ']', '->', 'solgroups', '[', 'y', ']', ';', 'j', '=', 'pblist', '->', 'pointer', '[', 'z', ']', ';', 'if', '(', 'j', '==', '-', '1', ')', 'fatal_error', '(', '""""', ')', ';', 'if', '(', '!pblist', '->', 'problem', '[', 'j', ']', '->', 'solved', ')', '{', 'pblist', '->', 'problem', '[', 'j', ']', '->', 'solved', '=', 'YES', ';', 'tprobs', '[', 'probs', '++', ']', '=', 'j', ';', 'pblist', '->', 'final', '[', 'j', ']', '=', 'psol', ';', '}', '}', 'for', '(', 'x', '=', '0', ';', 'x', '<', 'board', '->', 'sp', ';', 'x', '++', ')', '{', 'if', '(', 'x', '>', 'psol', ')', 'ps', '=', 'matrix', '[', 'x', ']', '[', 'psol', ']', ';', 'ps', '=', 'matrix', '[', 'psol', ']', '[', 'x', ']', ';', 'if', '(', 'ps', '==', 'NO', '&&', 'board', '->', 'solution', '[', 'x', ']', '->', 'valid', ')', '{', 'board', '->', 'solution', '[', 'x', ']', '->', 'valid', '=', 'NO', ';', 'temp', '[', 'tsol', '++', ']', '=', 'x', ';', '}', '}', 'if', '(', 'tsol', '>=', 'MAXSOLS', ')', 'fatal_error', '(', '""""', ')', ';', 'update', '->', 'howmany', '=', 'tsol', ';', 'if', '(', 'tsol', '>', '0', ')', '{', 'update', '->', 'which', '=', '(', 'short', '*', ')', 'malloc', '(', 'tsol', '*', 'sizeof', '(', 'short', ')', ')', ';', 'if', '(', '!update', '->', 'which', ')', 'fatal_error', '(', '""""', ')', ';', 'memcpy', '(', 'update', '->', 'which', ',', 'temp', ',', 'tsol', '*', 'sizeof', '(', 'short', ')', ')', ';', '}', 'update', '->', 'hmprobs', '=', 'probs', ';', 'if', '(', 'probs', '>', '0', ')', '{', 'update', '->', 'wprobs', '=', '(', 'short', '*', ')', 'malloc', '(', 'probs', '*', 'sizeof', '(', 'short', ')', ')', ';', 'if', '(', '!update', '->', 'wprobs', ')', 'fatal_error', '(', '""""', ')', ';', 'memcpy', '(', 'update', '->', 'wprobs', ',', 'tprobs', ',', 'probs', '*', 'sizeof', '(', 'short', ')', ')', ';', '}', 'free', '(', 'tprobs', ')', ';', 'free', '(', 'temp', ')', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
515,"['emitPreOp', '(', 'const', 'Instruction', '*', 'i', ')', '{', 'if', '(', 'i', '->', 'encSize', '==', '8', ')', '{', 'emitForm_B', '(', 'i', ',', 'HEX64', '(', '60000000', ',', '00000000', ')', ')', ';', 'if', '(', 'i', '->', 'op', '==', 'OP_PREEX2', ')', 'code', '[', '0', ']', '|=', '0x20', ';', 'if', '(', 'i', '->', 'src', '(', '0', ')', '.', 'mod', '.', 'abs', '(', ')', ')', 'code', '[', '0', ']', '|=', '1', '<<', '6', ';', 'if', '(', 'i', '->', 'src', '(', '0', ')', '.', 'mod', '.', 'neg', '(', ')', ')', 'code', '[', '0', ']', '|=', '1', '<<', '8', ';', '}', 'else', '{', 'emitForm_S', '(', 'i', ',', 'i', '->', 'op', '==', 'OP_PREEX2', '?', '0x74000008', ':', '0x70000008', ',', 'true', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
516,"['strio_eof', '(', 'VALUE', 'self', ')', '{', 'struct', 'StringIO', '*', 'ptr', '=', 'readable', '(', 'StringIO', '(', 'self', ')', ')', ';', 'if', '(', 'ptr', '->', 'pos', '<', 'RSTRING_LEN', '(', 'ptr', '->', 'string', ')', ')', 'return', 'Qfalse', ';', 'return', 'Qtrue', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
517,"['get_position', '(', 'const', 'bam_pileup1_t', '*', 'p', ',', 'int', '*', 'len', ')', '{', 'int', 'icig', ',', 'n_tot_bases', '=', '0', ',', 'iread', '=', '0', ',', 'edist', '=', 'p', '->', 'qpos', '+', '1', ';', 'for', '(', 'icig', '=', '0', ';', 'icig', '<', 'p', '->', 'b', '->', 'core', '.', 'n_cigar', ';', 'icig', '++', ')', '{', '/', '/', 'Conversion', 'from', 'uint32_t', 'to', '/', '/', '/', '/', 'int', 'cig', '=', 'bam1_cigar', '(', 'p', '->', 'b', ')', '[', 'icig', ']', '&', 'BAM_CIGAR_MASK', ';', 'int', 'ncig', '=', 'bam1_cigar', '(', 'p', '->', 'b', ')', '[', 'icig', ']', '>>', 'BAM_CIGAR_SHIFT', ';', 'if', '(', 'cig', '==', '0', ')', '{', 'n_tot_bases', '+=', 'ncig', ';', 'iread', '+=', 'ncig', ';', '}', 'else', 'if', '(', 'cig', '==', '1', ')', '{', 'n_tot_bases', '+=', 'ncig', ';', 'iread', '+=', 'ncig', ';', '}', 'else', 'if', '(', 'cig', '==', '4', ')', '{', 'iread', '+=', 'ncig', ';', 'if', '(', 'iread', '<=', 'p', '->', 'qpos', ')', 'edist', '-=', 'ncig', ';', '}', '}', '*', 'len', '=', 'n_tot_bases', ';', 'return', 'edist', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
518,"['G_spawn', '(', 'const', 'char', '*', 'command', ',', '.', '.', '.', ')', '{', 'const', 'char', '*', 'args', '[', 'MAX_ARGS', ']', ';', 'int', 'num_args', '=', '0', ',', 'i', ';', 'va_list', 'va', ';', 'int', 'status', '=', '-', '1', ';', 'va_start', '(', 'va', ',', 'command', ')', ';', 'for', '(', 'i', '=', '0', ';', ';', 'i', '++', ')', '{', 'const', 'char', '*', 'arg', '=', 'va_arg', '(', 'va', ',', 'const', 'char', '*', ')', ';', 'args', '[', 'num_args', '++', ']', '=', 'arg', ';', 'if', '(', '!arg', ')', 'break', ';', '}', 'va_end', '(', 'va', ')', ';', 'status', '=', 'G_spawn_ex', '(', 'command', ',', '#ifndef', 'SF_SIGNAL', ',', 'SST_PRE', ',', 'SSA_IGNORE', ',', 'SIGINT', ',', 'SF_SIGNAL', ',', 'SST_PRE', ',', 'SSA_IGNORE', ',', 'SIGQUIT', ',', 'SF_SIGNAL', ',', 'SST_PRE', ',', 'SSA_BLOCK', ',', 'SIGCHLD', ',', 'SF_ARGVEC', ',', 'args', ',', 'NULL', ')', ';', 'return', 'status', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
519,"['check_outerjoin_delay', '(', 'PlannerInfo', '*', 'root', ',', 'bool', 'is_pushed_down', ')', '{', 'Relids\t\trelids', ';', 'Relids\t\tnullable_relids', ';', 'bool\t\touterjoin_delayed', ';', 'bool\t\tfound_some', ';', 'if', '(', 'root', '->', 'oj_info_list', '==', 'NIL', ')', '{', '*', 'nullable_relids_p', '=', 'NULL', ';', 'return', 'false', ';', '}', 'relids', '=', 'bms_copy', '(', '*', 'relids_p', ')', ';', 'nullable_relids', '=', 'NULL', ';', 'outerjoin_delayed', '=', 'false', ';', '{', 'ListCell', '*', 'l', ';', 'found_some', '=', 'false', ';', 'foreach', '(', 'l', ',', 'root', '->', 'oj_info_list', ')', '{', 'OuterJoinInfo', '*', 'ojinfo', '=', '(', 'OuterJoinInfo', '*', ')', 'lfirst', '(', 'l', ')', ';', 'if', '(', 'bms_overlap', '(', 'relids', ',', 'ojinfo', '->', 'min_righthand', ')', '||', '(', 'ojinfo', '->', 'is_full_join', '&&', 'bms_overlap', '(', 'relids', ',', 'ojinfo', '->', 'min_lefthand', ')', ')', ')', '{', 'if', '(', '!bms_is_subset', '(', 'ojinfo', '->', 'min_lefthand', ',', 'relids', ')', '||', '!bms_is_subset', '(', 'ojinfo', '->', 'min_righthand', ',', 'relids', ')', ')', '{', 'relids', '=', 'bms_add_members', '(', 'relids', ',', 'ojinfo', '->', 'min_lefthand', ')', ';', 'relids', '=', 'bms_add_members', '(', 'relids', ',', 'ojinfo', '->', 'min_righthand', ')', ';', 'outerjoin_delayed', '=', 'true', ';', 'found_some', '=', 'true', ';', '}', 'nullable_relids', '=', 'bms_add_members', '(', 'nullable_relids', ',', 'ojinfo', '->', 'min_righthand', ')', ';', 'if', '(', 'ojinfo', '->', 'is_full_join', ')', 'nullable_relids', '=', 'bms_add_members', '(', 'nullable_relids', ',', 'ojinfo', '->', 'min_lefthand', ')', ';', 'if', '(', 'is_pushed_down', '&&', '!ojinfo', '->', 'is_full_join', '&&', 'bms_overlap', '(', 'relids', ',', 'ojinfo', '->', 'min_lefthand', ')', ')', 'ojinfo', '->', 'delay_upper_joins', '=', 'true', ';', '}', '}', '}', 'while', '(', 'found_some', ')', ';', 'nullable_relids', '=', 'bms_int_members', '(', 'nullable_relids', ',', '*', 'relids_p', ')', ';', 'bms_free', '(', '*', 'relids_p', ')', ';', '*', 'relids_p', '=', 'relids', ';', '*', 'nullable_relids_p', '=', 'nullable_relids', ';', 'return', 'outerjoin_delayed', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
520,"['DumpResource', '(', 'FILE', '*', 'to', ',', 'struct', 'resource', '*', 'rcur', ')', '{', 'uint32', 'len', ';', 'int', 'ch', ';', 'rcur', '->', 'merged_off', '=', 'ftell', '(', 'to', ')', ';', 'fseek', '(', 'rcur', '->', 'srcf', ',', 'rcur', '->', 'src_off', ',', 'SEEK_SET', ')', ';', 'len', '=', 'getlong', '(', 'rcur', '->', 'srcf', ')', ';', 'if', '(', 'len', '==', 'EOF', ')', '{', 'fprintf', '(', 'stderr', ',', '""""', ',', 'rcur', '->', 'src_off', ')', ';', 'exit', '(', '1', ')', ';', '}', 'putlong', '(', 'len', ',', 'to', ')', ';', 'while', '(', 'len', '>', '0', ')', '{', 'ch', '=', 'getc', '(', 'rcur', '->', 'srcf', ')', ';', 'putc', '(', 'ch', ',', 'to', ')', ';', '--', 'len', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
521,"['zeitgeist_data_source_registry_extension_real_register_data_source_data_free', '(', 'gpointer', '_data', ')', '{', 'ZeitgeistDataSourceRegistryExtensionRegisterDataSourceData', '*', '_data_', ';', '_data_', '=', '_data', ';', '_g_free0', '(', '_data_', '->', 'unique_id', ')', ';', '_g_free0', '(', '_data_', '->', 'name', ')', ';', '_g_free0', '(', '_data_', '->', 'description', ')', ';', '_g_variant_unref0', '(', '_data_', '->', 'event_templates', ')', ';', '_g_object_unref0', '(', '_data_', '->', 'cancellable', ')', ';', '_g_free0', '(', '_data_', '->', 'sender', ')', ';', '_g_object_unref0', '(', '_data_', '->', 'self', ')', ';', 'g_slice_free', '(', 'ZeitgeistDataSourceRegistryExtensionRegisterDataSourceData', ',', '_data_', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
522,"['kdb_input_flush', '(', 'void', ')', '{', 'get_char_func', '*', 'f', ';', 'int', 'res', ';', 'int', 'flush_delay', '=', '1', ';', 'while', '(', 'flush_delay', ')', '{', 'flush_delay', '--', ';', 'empty', ':', 'touch_nmi_watchdog', '(', ')', ';', 'for', '(', 'f', '=', '&', 'kdb_poll_funcs', '[', '0', ']', ';', '*', 'f', ';', '++', 'f', ')', '{', 'res', '=', '(', '*', 'f', ')', '(', ')', ';', 'if', '(', 'res', '!=', '-', '1', ')', '{', 'flush_delay', '=', '1', ';', 'goto', 'empty', ';', '}', '}', 'if', '(', 'flush_delay', ')', 'mdelay', '(', '1', ')', ';', '}', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
523,"['RunScript', '(', 'cmCTest', '*', 'ctest', ',', 'const', 'char', '*', 'sname', ',', 'bool', 'InProcess', ')', '{', 'cmCTestScriptHandler', '*', 'sh', '=', 'new', 'cmCTestScriptHandler', '(', ')', ';', 'sh', '->', 'SetCTestInstance', '(', 'ctest', ')', ';', 'sh', '->', 'AddConfigurationScript', '(', 'sname', ',', 'InProcess', ')', ';', 'sh', '->', 'ProcessHandler', '(', ')', ';', 'delete', 'sh', ';', 'return', 'true', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
524,"['storeSwapMetaPack', '(', 'tlv', '*', 'tlv_list', ',', 'int', '*', 'length', ')', '{', 'int', 'buflen', '=', '0', ';', 'tlv', '*', 't', ';', 'int', 'j', '=', '0', ';', 'char', '*', 'buf', ';', 'assert', '(', 'length', '!=', 'NULL', ')', ';', 'for', '(', 't', '=', 'tlv_list', ';', 't', ';', 't', '=', 't', '->', 'next', ')', 'buflen', '+=', 'sizeof', '(', 'char', ')', '+', 'sizeof', '(', 'int', ')', '+', 't', '->', 'length', ';', 'buf', '=', 'xmalloc', '(', 'buflen', ')', ';', 'buf', '[', 'j', '++', ']', '=', '(', 'char', ')', 'STORE_META_OK', ';', 'xmemcpy', '(', '&', 'buf', '[', 'j', ']', ',', '&', 'buflen', ',', 'sizeof', '(', 'int', ')', ')', ';', 'j', '+=', 'sizeof', '(', 'int', ')', ';', 'for', '(', 't', '=', 'tlv_list', ';', 't', ';', 't', '=', 't', '->', 'next', ')', '{', 'buf', '[', 'j', '++', ']', '=', '(', 'char', ')', 't', '->', 'type', ';', 'xmemcpy', '(', '&', 'buf', '[', 'j', ']', ',', '&', 't', '->', 'length', ',', 'sizeof', '(', 'int', ')', ')', ';', 'j', '+=', 'sizeof', '(', 'int', ')', ';', 'xmemcpy', '(', '&', 'buf', '[', 'j', ']', ',', 't', '->', 'value', ',', 't', '->', 'length', ')', ';', 'j', '+=', 't', '->', 'length', ';', '}', 'assert', '(', '(', 'int', ')', 'j', '==', 'buflen', ')', ';', '*', 'length', '=', 'buflen', ';', 'return', 'buf', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
525,"['resend_events', '(', 'GstPad', '*', 'pad', ',', 'GstEvent', '*', '*', 'event', ',', 'gpointer', 'user_data', ')', '{', 'GstRTPMux', '*', 'rtp_mux', '=', 'user_data', ';', 'if', '(', 'GST_EVENT_TYPE', '(', '*', 'event', ')', '==', 'GST_EVENT_CAPS', ')', '{', 'GstCaps', '*', 'caps', ';', 'gst_event_parse_caps', '(', '*', 'event', ',', '&', 'caps', ')', ';', 'gst_rtp_mux_setcaps', '(', 'pad', ',', 'rtp_mux', ',', 'caps', ')', ';', '}', 'else', '{', 'gst_pad_push_event', '(', 'rtp_mux', '->', 'srcpad', ',', 'gst_event_ref', '(', '*', 'event', ')', ')', ';', '}', 'return', 'TRUE', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
526,"['seqiv_geniv', '(', 'struct', 'seqiv_ctx', '*', 'ctx', ',', 'u8', '*', 'info', ',', 'u64', 'seq', ',', 'unsigned', 'int', 'ivsize', ')', '{', 'unsigned', 'int', 'len', '=', 'ivsize', ';', 'if', '(', 'ivsize', '>', 'sizeof', '(', 'u64', ')', ')', '{', 'memset', '(', 'info', ',', '0', ',', 'ivsize', '-', 'sizeof', '(', 'u64', ')', ')', ';', 'len', '=', 'sizeof', '(', 'u64', ')', ';', '}', 'seq', '=', 'cpu_to_be64', '(', 'seq', ')', ';', 'memcpy', '(', 'info', '+', 'ivsize', '-', 'len', ',', '&', 'seq', ',', 'len', ')', ';', 'crypto_xor', '(', 'info', ',', 'ctx', '->', 'salt', ',', 'ivsize', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
527,"['verify_edge_list', '(', 'FILE', '*', 'f', ',', 'struct', 'edge_list', '*', 'elist', ')', '{', 'int', 'pred', ',', 'succ', ',', 'index', ';', 'edge', 'e', ';', 'basic_block', 'bb', ',', 'p', ',', 's', ';', 'edge_iterator', 'ei', ';', 'FOR_BB_BETWEEN', '(', 'bb', ',', 'ENTRY_BLOCK_PTR', ',', 'EXIT_BLOCK_PTR', ',', 'next_bb', ')', '{', 'FOR_EACH_EDGE', '(', 'e', ',', 'ei', ',', 'bb', '->', 'succs', ')', '{', 'pred', '=', 'e', '->', 'src', '->', 'index', ';', 'succ', '=', 'e', '->', 'dest', '->', 'index', ';', 'index', '=', 'EDGE_INDEX', '(', 'elist', ',', 'e', '->', 'src', ',', 'e', '->', 'dest', ')', ';', 'if', '(', 'index', '==', 'EDGE_INDEX_NO_EDGE', ')', '{', 'fprintf', '(', 'f', ',', '""""', ',', 'pred', ',', 'succ', ')', ';', 'continue', ';', '}', 'if', '(', 'INDEX_EDGE_PRED_BB', '(', 'elist', ',', 'index', ')', '->', 'index', '!=', 'pred', ')', 'fprintf', '(', 'f', ',', '""""', ',', 'index', ',', 'pred', ',', 'INDEX_EDGE_PRED_BB', '(', 'elist', ',', 'index', ')', '->', 'index', ')', ';', 'if', '(', 'INDEX_EDGE_SUCC_BB', '(', 'elist', ',', 'index', ')', '->', 'index', '!=', 'succ', ')', 'fprintf', '(', 'f', ',', '""""', ',', 'index', ',', 'succ', ',', 'INDEX_EDGE_SUCC_BB', '(', 'elist', ',', 'index', ')', '->', 'index', ')', ';', '}', '}', '/', '*', ""We've"", 'verified', 'that', 'all', 'the', 'edges', 'are', 'in', 'the', 'list', ',', 'now', 'lets', 'make', 'FOR_BB_BETWEEN', '(', 'p', ',', 'ENTRY_BLOCK_PTR', ',', 'EXIT_BLOCK_PTR', ',', 'next_bb', ')', 'FOR_BB_BETWEEN', '(', 's', ',', 'ENTRY_BLOCK_PTR', '->', 'next_bb', ',', 'NULL', ',', 'next_bb', ')', '{', 'int', 'found_edge', '=', '0', ';', 'FOR_EACH_EDGE', '(', 'e', ',', 'ei', ',', 'p', '->', 'succs', ')', 'if', '(', 'e', '->', 'dest', '==', 's', ')', '{', 'found_edge', '=', '1', ';', 'break', ';', '}', 'FOR_EACH_EDGE', '(', 'e', ',', 'ei', ',', 's', '->', 'preds', ')', 'if', '(', 'e', '->', 'src', '==', 'p', ')', '{', 'found_edge', '=', '1', ';', 'break', ';', '}', 'if', '(', 'EDGE_INDEX', '(', 'elist', ',', 'p', ',', 's', ')', '==', 'EDGE_INDEX_NO_EDGE', '&&', 'found_edge', '!=', '0', ')', 'fprintf', '(', 'f', ',', '""""', ',', 'p', '->', 'index', ',', 's', '->', 'index', ')', ';', 'if', '(', 'EDGE_INDEX', '(', 'elist', ',', 'p', ',', 's', ')', '!=', 'EDGE_INDEX_NO_EDGE', '&&', 'found_edge', '==', '0', ')', 'fprintf', '(', 'f', ',', '""""', ',', 'p', '->', 'index', ',', 's', '->', 'index', ',', 'EDGE_INDEX', '(', 'elist', ',', 'p', ',', 's', ')', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
528,"['MangleClassName', '(', 'char', '*', 'className', ')', '{', 'char', 'output', '[', '1024', ']', ';', 'int', 'c', ',', 'd', '=', '0', ';', 'char', 'ch', ';', 'for', '(', 'c', '=', '0', ';', '(', 'ch', '=', 'className', '[', 'c', ']', ')', ';', 'c', '++', ')', '{', 'if', '(', 'ch', '==', ""''"", ')', 'output', '[', 'd', '++', ']', '=', ""''"", ';', 'else', 'if', '(', 'ch', '==', ""''"", ')', '{', 'output', '[', 'd', '++', ']', '=', ""''"", ';', 'output', '[', 'd', '++', ']', '=', ""''"", ';', 'output', '[', 'd', '++', ']', '=', ""''"", ';', 'output', '[', 'd', '++', ']', '=', ""''"", ';', 'output', '[', 'd', '++', ']', '=', ""''"", ';', '}', 'else', 'if', '(', 'ch', '==', ""''"", ')', '{', 'output', '[', 'd', '++', ']', '=', ""''"", ';', 'output', '[', 'd', '++', ']', '=', ""''"", ';', 'output', '[', 'd', '++', ']', '=', ""''"", ';', 'output', '[', 'd', '++', ']', '=', ""''"", ';', 'output', '[', 'd', '++', ']', '=', ""''"", ';', '}', 'else', 'if', '(', 'ch', '==', ""''"", ')', '{', 'output', '[', 'd', '++', ']', '=', ""''"", ';', 'output', '[', 'd', '++', ']', '=', ""''"", ';', 'output', '[', 'd', '++', ']', '=', ""''"", ';', 'output', '[', 'd', '++', ']', '=', ""''"", ';', 'output', '[', 'd', '++', ']', '=', ""''"", ';', '}', 'else', 'if', '(', 'ch', '==', ""''"", ')', '{', 'output', '[', 'd', '++', ']', '=', ""''"", ';', '}', 'else', 'if', '(', 'ch', '==', ""''"", ')', '{', 'output', '[', 'd', '++', ']', '=', ""''"", ';', '}', 'output', '[', 'd', '++', ']', '=', 'ch', ';', '}', 'output', '[', 'd', ']', '=', '(', 'char', ')', '0', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
529,"['shell_cf', '(', 'ConfigArgs', '*', 'c', ')', '{', 'struct', 'shellinfo\t', '*', 'si', '=', '(', 'struct', 'shellinfo', '*', ')', 'c', '->', 'be', '->', 'be_private', ';', 'char', '*', '*', '*', 'arr', '=', '&', 'si', '->', 'si_bind', ';', 'if', '(', 'c', '->', 'op', '==', 'SLAP_CONFIG_EMIT', ')', '{', 'struct', 'berval', 'bv', ';', 'if', '(', '!arr', '[', 'c', '->', 'type', ']', ')', 'return', '1', ';', 'bv', '.', 'bv_val', '=', 'ldap_charray2str', '(', 'arr', '[', 'c', '->', 'type', ']', ',', '""""', ')', ';', 'bv', '.', 'bv_len', '=', 'strlen', '(', 'bv', '.', 'bv_val', ')', ';', 'ber_bvarray_add', '(', '&', 'c', '->', 'rvalue_vals', ',', '&', 'bv', ')', ';', '}', 'else', 'if', '(', 'c', '->', 'op', '==', 'LDAP_MOD_DELETE', ')', '{', 'ldap_charray_free', '(', 'arr', '[', 'c', '->', 'type', ']', ')', ';', 'arr', '[', 'c', '->', 'type', ']', '=', 'NULL', ';', '}', 'else', '{', 'arr', '[', 'c', '->', 'type', ']', '=', 'ldap_charray_dup', '(', '&', 'c', '->', 'argv', '[', '1', ']', ')', ';', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
530,"['udisks_mount_monitor_finalize', '(', 'GObject', '*', 'object', ')', '{', 'UDisksMountMonitor', '*', 'monitor', '=', 'UDISKS_MOUNT_MONITOR', '(', 'object', ')', ';', 'if', '(', 'monitor', '->', 'mounts_channel', '!=', 'NULL', ')', 'g_io_channel_unref', '(', 'monitor', '->', 'mounts_channel', ')', ';', 'if', '(', 'monitor', '->', 'mounts_watch_source', '!=', 'NULL', ')', 'g_source_destroy', '(', 'monitor', '->', 'mounts_watch_source', ')', ';', 'if', '(', 'monitor', '->', 'swaps_channel', '!=', 'NULL', ')', 'g_io_channel_unref', '(', 'monitor', '->', 'swaps_channel', ')', ';', 'if', '(', 'monitor', '->', 'swaps_watch_source', '!=', 'NULL', ')', 'g_source_destroy', '(', 'monitor', '->', 'swaps_watch_source', ')', ';', 'g_list_foreach', '(', 'monitor', '->', 'mounts', ',', '(', 'GFunc', ')', 'g_object_unref', ',', 'NULL', ')', ';', 'g_list_free', '(', 'monitor', '->', 'mounts', ')', ';', 'if', '(', 'G_OBJECT_CLASS', '(', 'udisks_mount_monitor_parent_class', ')', '->', 'finalize', '!=', 'NULL', ')', 'G_OBJECT_CLASS', '(', 'udisks_mount_monitor_parent_class', ')', '->', 'finalize', '(', 'object', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
531,"['pci_reset_notify', '(', 'struct', 'pci_dev', '*', 'dev', ',', 'bool', 'prepare', ')', '{', 'const', 'struct', 'pci_error_handlers', '*', 'err_handler', '=', 'dev', '->', 'driver', '?', 'dev', '->', 'driver', '->', 'err_handler', ':', 'NULL', ';', 'if', '(', 'err_handler', '&&', 'err_handler', '->', 'reset_notify', ')', 'err_handler', '->', 'reset_notify', '(', 'dev', ',', 'prepare', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
532,"['rtree_get_req', '(', 'MI_INFO', '*', 'info', ',', 'MI_KEYDEF', '*', 'keyinfo', ',', 'uint', 'key_length', ',', 'my_off_t', 'page', ',', 'int', 'level', ')', '{', 'uchar', '*', 'k', ';', 'uchar', '*', 'last', ';', 'uint', 'nod_flag', ';', 'int', 'res', ';', 'uchar', '*', 'page_buf', ';', 'uint', 'k_len', ';', 'uint', '*', 'saved_key', '=', '(', 'uint', '*', ')', '(', 'info', '->', 'rtree_recursion_state', ')', '+', 'level', ';', 'if', '(', '!', '(', 'page_buf', '=', '(', 'uchar', '*', ')', 'my_alloca', '(', '(', 'uint', ')', 'keyinfo', '->', 'block_length', ')', ')', ')', 'return', '-', '1', ';', 'if', '(', '!_mi_fetch_keypage', '(', 'info', ',', 'keyinfo', ',', 'page', ',', 'DFLT_INIT_HITS', ',', 'page_buf', ',', '0', ')', ')', 'goto', 'err1', ';', 'nod_flag', '=', 'mi_test_if_nod', '(', 'page_buf', ')', ';', 'k_len', '=', 'keyinfo', '->', 'keylength', '-', 'info', '->', 's', '->', 'base', '.', 'rec_reflength', ';', 'if', '(', 'info', '->', 'rtree_recursion_depth', '>=', 'level', ')', '{', 'k', '=', 'page_buf', '+', '*', 'saved_key', ';', 'if', '(', '!nod_flag', ')', '{', 'k', '=', 'rt_PAGE_NEXT_KEY', '(', 'k', ',', 'k_len', ',', 'nod_flag', ')', ';', '}', '}', '{', 'k', '=', 'rt_PAGE_FIRST_KEY', '(', 'page_buf', ',', 'nod_flag', ')', ';', '}', 'last', '=', 'rt_PAGE_END', '(', 'page_buf', ')', ';', 'for', '(', ';', 'k', '<', 'last', ';', 'k', '=', 'rt_PAGE_NEXT_KEY', '(', 'k', ',', 'k_len', ',', 'nod_flag', ')', ')', '{', 'if', '(', 'nod_flag', ')', '{', 'switch', '(', '(', 'res', '=', 'rtree_get_req', '(', 'info', ',', 'keyinfo', ',', 'key_length', ',', '_mi_kpos', '(', 'nod_flag', ',', 'k', ')', ',', 'level', '+', '1', ')', ')', ')', '{', '*', 'saved_key', '=', '(', 'uint', ')', '(', 'k', '-', 'page_buf', ')', ';', 'goto', 'ok', ';', 'info', '->', 'rtree_recursion_depth', '=', 'level', ';', 'break', ';', 'default', ':', 'goto', 'err1', ';', '}', '}', '{', 'uchar', '*', 'after_key', '=', 'rt_PAGE_NEXT_KEY', '(', 'k', ',', 'k_len', ',', 'nod_flag', ')', ';', 'info', '->', 'lastpos', '=', '_mi_dpos', '(', 'info', ',', '0', ',', 'after_key', ')', ';', 'info', '->', 'lastkey_length', '=', 'k_len', '+', 'info', '->', 's', '->', 'base', '.', 'rec_reflength', ';', 'memcpy', '(', 'info', '->', 'lastkey', ',', 'k', ',', 'info', '->', 'lastkey_length', ')', ';', 'info', '->', 'rtree_recursion_depth', '=', 'level', ';', '*', 'saved_key', '=', '(', 'uint', ')', '(', 'k', '-', 'page_buf', ')', ';', 'if', '(', 'after_key', '<', 'last', ')', '{', 'info', '->', 'int_keypos', '=', '(', 'uchar', '*', ')', 'saved_key', ';', 'memcpy', '(', 'info', '->', 'buff', ',', 'page_buf', ',', 'keyinfo', '->', 'block_length', ')', ';', 'info', '->', 'int_maxpos', '=', 'rt_PAGE_END', '(', 'info', '->', 'buff', ')', ';', 'info', '->', 'buff_used', '=', '0', ';', '}', '{', 'info', '->', 'buff_used', '=', '1', ';', '}', 'res', '=', '0', ';', 'goto', 'ok', ';', '}', '}', 'info', '->', 'lastpos', '=', 'HA_OFFSET_ERROR', ';', 'my_errno', '=', 'HA_ERR_KEY_NOT_FOUND', ';', 'res', '=', '1', ';', 'ok', ':', 'my_afree', '(', '(', 'uchar', '*', ')', 'page_buf', ')', ';', 'return', 'res', ';', 'err1', ':', 'my_afree', '(', '(', 'uchar', '*', ')', 'page_buf', ')', ';', 'info', '->', 'lastpos', '=', 'HA_OFFSET_ERROR', ';', 'return', '-', '1', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
533,"['caml_extunix_signalfd_read', '(', 'value', 'vfd', ')', '{', 'CAMLparam1', '(', 'vfd', ')', ';', 'CAMLlocal1', '(', 'vret', ')', ';', 'struct', 'signalfd_siginfo', 'ssi', ';', 'ssize_t', 'nread', '=', '0', ';', 'caml_enter_blocking_section', '(', ')', ';', 'nread', '=', 'read', '(', 'Int_val', '(', 'vfd', ')', ',', '&', 'ssi', ',', 'SSI_SIZE', ')', ';', 'caml_leave_blocking_section', '(', ')', ';', 'if', '(', 'nread', '!=', 'SSI_SIZE', ')', 'unix_error', '(', 'EINVAL', ',', '""""', ',', 'Nothing', ')', ';', 'vret', '=', 'caml_alloc_custom', '(', '&', 'ssi_ops', ',', 'SSI_SIZE', ',', '0', ',', '1', ')', ';', 'memcpy', '(', 'Data_custom_val', '(', 'vret', ')', ',', '&', 'ssi', ',', 'SSI_SIZE', ')', ';', 'CAMLreturn', '(', 'vret', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
534,"['cmpc_keys_idev_init', '(', 'struct', 'input_dev', '*', 'inputdev', ')', '{', 'int', 'i', ';', 'set_bit', '(', 'EV_KEY', ',', 'inputdev', '->', 'evbit', ')', ';', 'for', '(', 'i', '=', '0', ';', 'cmpc_keys_codes', '[', 'i', ']', '!=', 'KEY_MAX', ';', 'i', '++', ')', 'set_bit', '(', 'cmpc_keys_codes', '[', 'i', ']', ',', 'inputdev', '->', 'keybit', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
535,"['Image_conclude', '(', 'stp_image_t', '*', 'image', ')', '{', 'Gimp_Image_t', '*', 'im', '=', '(', 'Gimp_Image_t', '*', ')', '(', 'image', '->', 'rep', ')', ';', 'gimp_progress_update', '(', '1', ')', ';', 'if', '(', 'im', '->', 'alpha_table', ')', 'stp_free', '(', 'im', '->', 'alpha_table', ')', ';', 'if', '(', 'im', '->', 'tmp', ')', 'stp_free', '(', 'im', '->', 'tmp', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
536,"['field_byte_offset', '(', 'decl', ')', 'tree', 'decl', ';', '{', 'unsigned', 'int', 'type_align_in_bytes', ';', 'unsigned', 'int', 'type_align_in_bits', ';', 'unsigned', 'HOST_WIDE_INT', 'type_size_in_bits', ';', 'HOST_WIDE_INT', 'object_offset_in_align_units', ';', 'HOST_WIDE_INT', 'object_offset_in_bits', ';', 'HOST_WIDE_INT', 'object_offset_in_bytes', ';', 'tree', 'type', ';', 'tree', 'field_size_tree', ';', 'HOST_WIDE_INT', 'bitpos_int', ';', 'HOST_WIDE_INT', 'deepest_bitpos', ';', 'unsigned', 'HOST_WIDE_INT', 'field_size_in_bits', ';', 'if', '(', 'TREE_CODE', '(', 'decl', ')', '==', 'ERROR_MARK', ')', 'return', '0', ';', 'if', '(', 'TREE_CODE', '(', 'decl', ')', '!=', 'FIELD_DECL', ')', 'abort', '(', ')', ';', 'type', '=', 'field_type', '(', 'decl', ')', ';', 'field_size_tree', '=', 'DECL_SIZE', '(', 'decl', ')', ';', '/', '*', 'The', 'size', 'could', 'be', 'unspecified', 'if', 'there', 'was', 'an', 'error', ',', 'or', 'if', '(', '!', 'field_size_tree', ')', 'field_size_tree', '=', 'bitsize_zero_node', ';', '/', '*', 'We', 'cannot', 'yet', 'cope', 'with', 'fields', 'whose', 'positions', 'or', 'sizes', 'are', 'variable', ',', 'so', 'for', 'now', ',', 'when', 'we', 'see', 'such', 'things', ',', 'we', 'simply', 'return', '0', '.', 'Someday', ',', 'if', '(', '!', 'host_integerp', '(', 'bit_position', '(', 'decl', ')', ',', '0', ')', '||', '!', 'host_integerp', '(', 'field_size_tree', ',', '1', ')', ')', 'return', '0', ';', 'bitpos_int', '=', 'int_bit_position', '(', 'decl', ')', ';', 'field_size_in_bits', '=', 'tree_low_cst', '(', 'field_size_tree', ',', '1', ')', ';', 'type_size_in_bits', '=', 'simple_type_size_in_bits', '(', 'type', ')', ';', 'type_align_in_bits', '=', 'simple_type_align_in_bits', '(', 'type', ')', ';', 'type_align_in_bytes', '=', 'type_align_in_bits', '/', 'BITS_PER_UNIT', ';', '/', '*', 'Note', 'that', 'the', 'GCC', 'front', '-', 'end', ""doesn't"", 'make', 'any', 'attempt', 'to', 'keep', 'of', 'the', 'starting', 'bit', 'offset', '(', 'relative', 'to', 'the', 'start', 'of', 'the', 'structure', 'type', ')', 'of', 'the', 'hypothetical', '""""', 'for', 'a', 'bit', '-', 'field', '.', 'Thus', ',', 'when', 'computing', 'the', 'byte', 'offset', 'value', 'for', 'the', 'start', 'the', '""""', 'of', 'a', 'bit', '-', 'field', ',', 'we', 'must', 'deduce', 'this', 'infor', '-', 'mation', 'on', 'our', 'own', '.', 'This', 'can', 'be', 'rather', 'tricky', 'to', 'do', 'in', 'some', 'cases', '.', 'For', 'example', ',', 'the', 'following', 'structure', 'type', 'definition', 'when', 'compiling', 'for', 'an', 'i386', '/', 'target', '(', 'which', 'only', 'aligns', 'long', ""long's"", 'to', '32', '-', 'bit', 'boundaries', ')', 'can', 'be', 'tricky', ':', 'struct', 'S', '{', 'int\t\tfield1', ';', 'long', 'long\tfield2', ':', '31', ';', '}', ';', 'Fortunately', ',', 'there', 'is', 'a', 'simple', 'rule', '-', 'of', '-', 'thumb', 'which', 'can', 'be', 'used', 'in', 'cases', '.', 'When', 'compiling', 'for', 'an', 'i386', '/', 'i486', ',', 'GCC', 'will', 'allocate', '8', 'bytes', 'the', 'structure', 'shown', 'above', '.', 'It', 'decides', 'to', 'do', 'this', 'based', 'upon', 'one', 'rule', 'for', 'bit', '-', 'field', 'allocation', '.', 'Quite', 'simply', ',', 'GCC', 'allocates', 'each', '""con', '-', 'taining', 'object""', 'for', 'each', 'bit', '-', 'field', 'at', 'the', 'first', '(', 'i', '.', 'e', '.', 'lowest', 'addressed', ')', 'legitimate', 'alignment', 'boundary', '(', 'based', 'upon', 'the', 'required', 'minimum', 'for', 'the', 'declared', 'type', 'of', 'the', 'field', ')', 'which', 'it', 'can', 'possibly', 'use', ',', 'to', 'the', 'condition', 'that', 'there', 'is', 'still', 'enough', 'available', 'space', 'in', 'the', 'containing', 'object', '(', 'when', 'allocated', 'at', 'the', 'selected', 'point', ')', 'fully', 'accommodate', 'all', 'of', 'the', 'bits', 'of', 'the', 'bit', '-', 'field', 'itself', '.', 'This', 'simple', 'rule', 'makes', 'it', 'obvious', 'why', 'GCC', 'allocates', '8', 'bytes', 'for', 'object', 'of', 'the', 'structure', 'type', 'shown', 'above', '.', 'When', 'looking', 'for', 'a', 'place', 'allocate', 'the', '""""', 'for', ""`field2'"", ',', 'the', 'compiler', 'simply', 'to', 'allocate', 'a', '64', '-', 'bit', '""""', 'at', 'each', 'successive', '32', '-', 'boundary', '(', 'starting', 'at', 'zero', ')', 'until', 'it', 'finds', 'a', 'place', 'to', 'allocate', 'that', '64', '-', 'bit', 'field', 'such', 'that', 'at', 'least', '31', 'contiguous', '(', 'and', 'previously', 'unallocated', ')', 'bits', 'remain', 'within', 'that', 'selected', '64', 'bit', 'field', '.', '(', 'As', 'it', 'turns', 'out', ',', 'the', 'example', 'above', ',', 'the', 'compiler', 'finds', 'that', 'it', 'is', 'OK', 'to', 'allocate', '""""', '64', '-', 'bit', 'field', 'at', 'bit', '-', 'offset', 'zero', 'within', 'structure', 'type', '.', ')', 'Here', 'we', 'attempt', 'to', 'work', 'backwards', 'from', 'the', 'limited', 'set', 'of', 'facts', 'given', ',', 'and', 'we', 'try', 'to', 'deduce', 'from', 'those', 'facts', ',', 'where', 'GCC', 'must', 'believed', 'that', 'the', 'containing', 'object', 'started', '(', 'within', 'the', 'structure', 'type', ')', '.', 'The', 'value', 'we', 'deduce', 'is', 'then', 'used', '(', 'by', 'the', 'callers', 'of', 'this', 'routine', ')', 'generate', 'AT_location', 'and', 'AT_bit_offset', 'attributes', 'for', 'fields', '(', '/', '*', 'Figure', 'out', 'the', 'bit', '-', 'distance', 'from', 'the', 'start', 'of', 'the', 'structure', 'to', 'deepest_bitpos', '=', 'bitpos_int', '+', 'field_size_in_bits', ';', '/', '*', 'This', 'is', 'the', 'tricky', 'part', '.', 'Use', 'some', 'fancy', 'footwork', 'to', 'deduce', 'where', '=', 'ceiling', '(', 'deepest_bitpos', ',', 'type_align_in_bits', ')', '-', 'type_size_in_bits', ';', 'object_offset_in_align_units', '=', 'object_offset_in_bits', '/', 'type_align_in_bits', ';', 'object_offset_in_bytes', '=', 'object_offset_in_align_units', '*', 'type_align_in_bytes', ';', '/', '*', 'The', 'above', 'code', 'assumes', 'that', 'the', 'field', 'does', 'not', 'cross', 'an', 'boundary', '.', 'This', 'can', 'happen', 'if', 'PCC_BITFIELD_TYPE_MATTERS', 'is', 'not', 'defined', ',', 'or', 'if', 'the', 'structure', 'is', 'packed', '.', 'If', 'this', 'happens', ',', 'then', 'we', 'get', 'an', 'which', 'starts', 'after', 'the', 'bitfield', ',', 'which', 'means', 'that', 'the', 'bit', 'offset', 'negative', '.', 'Gdb', 'fails', 'when', 'given', 'negative', 'bit', 'offsets', '.', 'We', 'avoid', 'by', 'recomputing', 'using', 'the', 'first', 'bit', 'of', 'the', 'bitfield', '.', 'This', 'will', 'us', 'an', 'object', 'which', 'does', 'not', 'completely', 'contain', 'the', 'bitfield', ',', 'but', 'will', 'be', 'aligned', ',', 'and', 'it', 'will', 'contain', 'the', 'first', 'bit', 'of', 'the', 'bitfield', '.', 'However', ',', 'only', 'do', 'this', 'for', 'a', 'BYTES_BIG_ENDIAN', 'target', '.', 'For', '!', 'BYTES_BIG_ENDIAN', 'target', ',', 'bitpos_int', '+', 'field_size_in_bits', 'is', 'the', 'first', 'bit', 'of', 'the', 'bitfield', '.', 'If', 'we', 'recompute', 'using', 'bitpos_int', '+', '1', 'below', ',', 'then', 'we', 'end', 'up', 'computing', 'the', 'object', 'byte', 'offset', 'for', 'the', 'wrong', 'word', 'of', 'desired', 'bitfield', ',', 'which', 'in', 'turn', 'causes', 'the', 'field', 'offset', 'to', 'be', 'if', '(', '&&', 'object_offset_in_bits', '>', 'bitpos_int', ')', '{', 'deepest_bitpos', '=', 'bitpos_int', '+', '1', ';', '=', 'ceiling', '(', 'deepest_bitpos', ',', 'type_align_in_bits', ')', '-', 'type_size_in_bits', ';', 'object_offset_in_align_units', '=', '(', '/', 'type_align_in_bits', ')', ';', 'object_offset_in_bytes', '=', '(', '*', 'type_align_in_bytes', ')', ';', '}', 'return', 'object_offset_in_bytes', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
537,"['gnutls_certificate_set_x509_trust_file', '(', 'gnutls_certificate_credentials_t', 'res', ',', 'const', 'char', '*', 'cafile', ',', 'gnutls_x509_crt_fmt_t', 'type', ')', '{', 'int', 'ret', ',', 'ret2', ';', 'size_t', 'size', ';', 'gnutls_datum_t', 'cas', ';', '#ifdef', 'if', '(', 'strncmp', '(', 'cafile', ',', '""""', ',', '7', ')', '==', '0', ')', '{', 'return', 'read_cas_url', '(', 'res', ',', 'cafile', ')', ';', '}', 'cas', '.', 'data', '=', 'read_binary_file', '(', 'cafile', ',', '&', 'size', ')', ';', 'if', '(', 'cas', '.', 'data', '==', 'NULL', ')', '{', 'gnutls_assert', '(', ')', ';', 'return', 'GNUTLS_E_FILE_ERROR', ';', '}', 'cas', '.', 'size', '=', 'size', ';', 'ret', '=', 'gnutls_certificate_set_x509_trust_mem', '(', 'res', ',', '&', 'cas', ',', 'type', ')', ';', 'free', '(', 'cas', '.', 'data', ')', ';', 'if', '(', 'ret', '<', '0', ')', '{', 'gnutls_assert', '(', ')', ';', 'return', 'ret', ';', '}', 'if', '(', '(', 'ret2', '=', 'add_new_crt_to_rdn_seq', '(', 'res', ',', 'ret', ')', ')', '<', '0', ')', 'return', 'ret2', ';', 'return', 'ret', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
538,"['bmp_565_8888', '(', 'int', 'fd', ',', 'struct', 'pixel8888', '*', 'fb', ',', 'int', 'width', ',', 'int', 'height', ',', 'int', 'xres', ',', 'int', 'yres', ')', '{', 'int', 'ret', ';', 'int', 'i', ',', 'j', ';', 'struct', 'pixel8888', '*', 'tmp_fb', ';', 'struct', 'pixel565', 'buff', '[', 'width', ']', ';', 'for', '(', 'i', '=', 'height', '-', '1', ';', 'i', '>=', '0', ';', 'i', '--', ')', '{', 'ret', '=', 'read', '(', 'fd', ',', '&', 'buff', ',', 'sizeof', '(', 'buff', ')', ')', ';', 'if', '(', 'ret', '<', '0', ')', '{', 'print_error', '(', '""""', ')', ';', 'return', 'ret', ';', '}', 'for', '(', 'j', '=', '0', ';', 'j', '<', 'width', ';', 'j', '++', ')', '{', 'tmp_fb', '=', 'fb', '+', 'i', '*', 'xres', '+', 'j', ';', 'tmp_fb', '->', 'red', '=', 'buff', '[', 'j', ']', '.', 'red', ';', 'tmp_fb', '->', 'red', '<<=', '3', ';', 'tmp_fb', '->', 'green', '=', 'buff', '[', 'j', ']', '.', 'green', ';', 'tmp_fb', '->', 'green', '<<=', '2', ';', 'tmp_fb', '->', 'blue', '=', 'buff', '[', 'j', ']', '.', 'blue', ';', 'tmp_fb', '->', 'blue', '<<=', '3', ';', 'tmp_fb', '->', 'transp', '=', '0', ';', '}', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
539,"['triton_timer_del', '(', 'struct', 'triton_timer_t', '*', 'ud', ')', '{', 'struct', '_triton_timer_t', '*', 't', '=', '(', 'struct', '_triton_timer_t', '*', ')', 'ud', '->', 'tpd', ';', 'epoll_ctl', '(', 'epoll_fd', ',', 'EPOLL_CTL_DEL', ',', 't', '->', 'fd', ',', '&', 't', '->', 'epoll_event', ')', ';', 'close', '(', 't', '->', 'fd', ')', ';', 'spin_lock', '(', '&', 't', '->', 'ctx', '->', 'lock', ')', ';', 't', '->', 'ud', '=', 'NULL', ';', 'list_del', '(', '&', 't', '->', 'entry', ')', ';', 'if', '(', 't', '->', 'pending', ')', '{', 'list_del', '(', '&', 't', '->', 'entry2', ')', ';', '__sync_sub_and_fetch', '(', '&', 'triton_stat', '.', 'timer_pending', ',', '1', ')', ';', '}', 'spin_unlock', '(', '&', 't', '->', 'ctx', '->', 'lock', ')', ';', 'sched_yield', '(', ')', ';', 'pthread_mutex_lock', '(', '&', 'freed_list_lock', ')', ';', 'list_add_tail', '(', '&', 't', '->', 'entry', ',', '&', 'freed_list', ')', ';', 'pthread_mutex_unlock', '(', '&', 'freed_list_lock', ')', ';', 'ud', '->', 'tpd', '=', 'NULL', ';', 'triton_stat', '.', 'timer_count', '--', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
540,"['camel_sasl_challenge_sync', '(', 'CamelSasl', '*', 'sasl', ',', 'GByteArray', '*', 'token', ',', 'GCancellable', '*', 'cancellable', ',', 'GError', '*', '*', 'error', ')', '{', 'CamelSaslClass', '*', 'class', ';', 'GByteArray', '*', 'response', ';', 'g_return_val_if_fail', '(', 'CAMEL_IS_SASL', '(', 'sasl', ')', ',', 'NULL', ')', ';', 'class', '=', 'CAMEL_SASL_GET_CLASS', '(', 'sasl', ')', ';', 'g_return_val_if_fail', '(', 'class', '->', 'challenge_sync', '!=', 'NULL', ',', 'NULL', ')', ';', 'response', '=', 'class', '->', 'challenge_sync', '(', 'sasl', ',', 'token', ',', 'cancellable', ',', 'error', ')', ';', 'if', '(', 'token', '!=', 'NULL', ')', 'CAMEL_CHECK_GERROR', '(', 'sasl', ',', 'challenge_sync', ',', 'response', '!=', 'NULL', ',', 'error', ')', ';', 'return', 'response', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
541,"['LangDumpVec', '(', 'char', '*', 'who', ',', 'int', 'count', ',', 'SV', '*', '*', 'data', ')', '{', 'int', 'i', ';', 'PerlIO_printf', '(', 'PerlIO_stderr', '(', ')', ',', '""""', ',', 'who', ',', 'count', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'count', ';', 'i', '++', ')', '{', 'SV', '*', 'sv', '=', 'data', '[', 'i', ']', ';', 'if', '(', 'sv', ')', '{', 'PerlIO_printf', '(', 'PerlIO_stderr', '(', ')', ',', '""""', ',', 'i', ')', ';', 'sv_dump', '(', 'sv', ')', ';', '}', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
542,"['load_module', '(', 'void', ')', '{', 'struct', 'ast_db_entry', '*', 'dbtree', ',', '*', 'tmp', ';', 'char', 'groupname', '[', 'AST_MAX_EXTENSION', ']', ',', '*', 'ptr', ';', 'if', '(', '(', 'group_container', '=', 'ao2_container_alloc', '(', '37', ',', 'group_hash_fn', ',', 'group_cmp_fn', ')', ')', ')', '{', 'if', '(', '(', 'dbtree', '=', 'ast_db_gettree', '(', '""""', ',', 'NULL', ')', ')', ')', '{', 'for', '(', 'tmp', '=', 'dbtree', ';', 'tmp', ';', 'tmp', '=', 'tmp', '->', 'next', ')', '{', 'ast_copy_string', '(', 'groupname', ',', 'tmp', '->', 'key', ',', 'sizeof', '(', 'groupname', ')', ')', ';', 'if', '(', '(', 'ptr', '=', 'strrchr', '(', 'groupname', ',', ""''"", ')', ')', ')', '{', 'ptr', '++', ';', 'dialgroup_write', '(', 'NULL', ',', '""""', ',', 'ptr', ',', 'tmp', '->', 'data', ')', ';', '}', '}', 'ast_db_freetree', '(', 'dbtree', ')', ';', '}', 'return', 'ast_custom_function_register', '(', '&', 'dialgroup_function', ')', ';', '}', 'else', '{', 'return', 'AST_MODULE_LOAD_DECLINE', ';', '}', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
543,"['google_chooser_dialog_realize', '(', 'GtkWidget', '*', 'widget', ')', '{', 'EGoogleChooserDialogPrivate', '*', 'priv', ';', 'GdkCursor', '*', 'cursor', ';', 'GdkWindow', '*', 'window', ';', 'GdkDisplay', '*', 'display', ';', 'priv', '=', 'E_GOOGLE_CHOOSER_DIALOG_GET_PRIVATE', '(', 'widget', ')', ';', 'GTK_WIDGET_CLASS', '(', 'e_google_chooser_dialog_parent_class', ')', '->', 'realize', '(', 'widget', ')', ';', 'g_return_if_fail', '(', 'priv', '->', 'cancellable', '==', 'NULL', ')', ';', 'priv', '->', 'cancellable', '=', 'g_cancellable_new', '(', ')', ';', 'window', '=', 'gtk_widget_get_window', '(', 'widget', ')', ';', 'display', '=', 'gtk_widget_get_display', '(', 'widget', ')', ';', 'cursor', '=', 'gdk_cursor_new_for_display', '(', 'display', ',', 'GDK_WATCH', ')', ';', 'gdk_window_set_cursor', '(', 'window', ',', 'cursor', ')', ';', 'g_object_unref', '(', 'cursor', ')', ';', 'e_google_chooser_populate', '(', 'priv', '->', 'chooser', ',', 'priv', '->', 'cancellable', ',', '(', 'GAsyncReadyCallback', ')', 'google_chooser_dialog_populated_cb', ',', 'g_object_ref', '(', 'widget', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
544,"['fmtlong', '(', 'long', 'lng', ',', 'char', '*', 'fmt', ')', '{', 'static', 'int', 'i', ';', 'int', 'r', ';', 'char', 'buf', '[', '30', ']', ';', 'r', '=', 'rfmtlong', '(', 'lng', ',', 'fmt', ',', 'buf', ')', ';', 'printf', '(', '""""', ',', 'r', ')', ';', 'if', '(', 'r', '==', '0', ')', '{', 'printf', '(', '""""', ',', 'i', '++', ',', 'buf', ',', 'fmt', ')', ';', '}', 'check_return', '(', 'r', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
545,"['revealed_by_phoenix', '(', 'int', 'xLoc', ',', 'int', 'yLoc', ')', '{', 'Unit', '*', 'unitPtr', ';', 'int', '\teffectiveRange', '=', 'unit_res', '[', 'UNIT_PHOENIX', ']', '->', 'visual_range', ';', 'for', '(', 'int', 'i', '=', 'unit_array', '.', 'size', '(', ')', ';', 'i', '>', '0', ';', 'i', '--', ')', '{', 'if', '(', 'unit_array', '.', 'is_deleted', '(', 'i', ')', ')', 'continue', ';', 'unitPtr', '=', 'unit_array', '[', 'i', ']', ';', 'if', '(', 'unitPtr', '->', 'unit_id', '==', 'UNIT_PHOENIX', '&&', 'unitPtr', '->', 'nation_recno', '==', 'nation_recno', ')', '{', 'if', '(', 'misc', '.', 'points_distance', '(', 'xLoc', ',', 'yLoc', ',', 'unitPtr', '->', 'next_x_loc', '(', ')', ',', 'unitPtr', '->', 'next_y_loc', '(', ')', ')', '<=', 'effectiveRange', ')', '{', 'return', '1', ';', '}', '}', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
546,"['init_PXC200', '(', 'struct', 'bttv', '*', 'btv', ')', '{', 'static', 'int', 'vals', '[', ']', '=', '{', '0x08', ',', '0x09', ',', '0x0a', ',', '0x0b', ',', '0x0d', ',', '0x0d', ',', '0x01', ',', '0x02', ',', '0x03', ',', '0x04', ',', '0x05', ',', '0x06', ',', '0x00', '}', ';', 'unsigned', 'int', 'i', ';', 'int', 'tmp', ';', 'u32', 'val', ';', 'gpio_inout', '(', '0xffffff', ',', '(', '1', '<<', '13', ')', ')', ';', 'gpio_write', '(', '0', ')', ';', 'udelay', '(', '3', ')', ';', 'gpio_write', '(', '1', '<<', '13', ')', ';', '/', '*', 'GPIO', 'inputs', 'are', 'pulled', 'up', ',', 'so', 'no', 'need', 'to', 'gpio_bits', '(', '0xffffff', ',', '0', ')', ';', 'if', '(', 'bttv_gpio', ')', 'bttv_gpio_tracking', '(', 'btv', ',', '""""', ')', ';', '/', '*', 'we', 'could', '/', 'should', 'try', 'and', 'reset', '/', 'control', 'the', 'AD', 'pots', '?', 'right', 'now', 'we', 'simply', 'turned', 'off', 'the', 'crushing', '.', 'this', 'the', 'AGC', 'drifts', 'remember', 'the', 'EN', 'is', 'reverse', 'logic', '--', '>', 'setting', 'BT848_ADC_AGC_EN', 'disable', 'the', 'tboult@eecs', '.', 'lehigh', '.', 'btwrite', '(', 'BT848_ADC_RESERVED', '|', 'BT848_ADC_AGC_EN', ',', 'BT848_ADC', ')', ';', 'pr_info', '(', '""""', ')', ';', 'bttv_I2CWrite', '(', 'btv', ',', '0x5E', ',', '0', ',', '0x80', ',', '1', ')', ';', '/', '*', '\tThe', 'I2CWrite', 'and', 'I2CRead', 'commmands', 'are', 'actually', 'to', '*', '\tsame', 'chips', '-', 'but', 'the', 'R', '/', 'W', 'bit', 'is', 'included', 'in', 'the', 'pr_info', '(', '""""', ')', ';', 'val', '=', 'btread', '(', 'BT848_GPIO_DMA_CTL', ')', ';', 'val', '|=', 'BT848_GPIO_DMA_CTL_GPCLKMODE', ';', 'btwrite', '(', 'val', ',', 'BT848_GPIO_DMA_CTL', ')', ';', '/', '*', 'Then', ',', 'push', 'to', '0', 'the', 'reset', 'pin', 'long', 'enough', 'to', 'reset', 'the', '*', '*', 'device', 'same', 'as', 'above', 'for', 'the', 'reset', 'line', ',', 'but', 'not', 'the', '*', 'value', 'sent', 'to', 'the', 'GPIO', '-', 'connected', 'gpio_inout', '(', '0xffffff', ',', '(', '1', '<<', '2', ')', ')', ';', 'gpio_write', '(', '0', ')', ';', 'udelay', '(', '10', ')', ';', 'gpio_write', '(', '1', '<<', '2', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'ARRAY_SIZE', '(', 'vals', ')', ';', 'i', '++', ')', '{', 'tmp', '=', 'bttv_I2CWrite', '(', 'btv', ',', '0x1E', ',', '0', ',', 'vals', '[', 'i', ']', ',', '1', ')', ';', 'if', '(', 'tmp', '!=', '-', '1', ')', '{', 'pr_info', '(', '""""', ',', 'vals', '[', 'i', ']', ',', 'tmp', ',', 'bttv_I2CRead', '(', 'btv', ',', '0x1F', ',', 'NULL', ')', ')', ';', '}', '}', 'pr_info', '(', '""""', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
547,"['AddPoint', '(', 'double', 'p', '[', '3', ']', ')', '{', 'int', 'i', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', '3', ';', 'i', '++', ')', '{', 'if', '(', 'p', '[', 'i', ']', '<', 'this', '->', 'MinPnt', '[', 'i', ']', ')', '{', 'this', '->', 'MinPnt', '[', 'i', ']', '=', 'p', '[', 'i', ']', ';', '}', 'if', '(', 'p', '[', 'i', ']', '>', 'this', '->', 'MaxPnt', '[', 'i', ']', ')', '{', 'this', '->', 'MaxPnt', '[', 'i', ']', '=', 'p', '[', 'i', ']', ';', '}', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
548,"['get_ack', '(', 'int', 'fd', ',', 'unsigned', 'char', '*', 'result_sha1', ')', '{', 'static', 'char', 'line', '[', '1000', ']', ';', 'int', 'len', '=', 'packet_read_line', '(', 'fd', ',', 'line', ',', 'sizeof', '(', 'line', ')', ')', ';', 'if', '(', '!len', ')', 'die', '(', '""""', ')', ';', 'if', '(', 'line', '[', 'len', '-', '1', ']', '==', ""''"", ')', 'line', '[', '--', 'len', ']', '=', '0', ';', 'if', '(', '!strcmp', '(', 'line', ',', '""""', ')', ')', 'return', 'NAK', ';', 'if', '(', '!prefixcmp', '(', 'line', ',', '""""', ')', ')', '{', 'if', '(', '!get_sha1_hex', '(', 'line', '+', '4', ',', 'result_sha1', ')', ')', '{', 'if', '(', 'strstr', '(', 'line', '+', '45', ',', '""""', ')', ')', 'return', 'ACK_continue', ';', 'if', '(', 'strstr', '(', 'line', '+', '45', ',', '""""', ')', ')', 'return', 'ACK_common', ';', 'if', '(', 'strstr', '(', 'line', '+', '45', ',', '""""', ')', ')', 'return', 'ACK_ready', ';', 'return', 'ACK', ';', '}', '}', 'die', '(', '""""', ',', 'line', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
549,"['s_minilogv', '(', 'GLogLevelFlags', 'level', ',', 'bool', 'copy', ',', 'const', 'char', '*', 'fmt', ',', 'va_list', 'args', ')', '{', 'char', 'data', '[', 'LOG_MSG_MAXLEN', ']', ';', 'DECLARE_STR', '(', '11', ')', ';', 'char', 'time_buf', '[', '18', ']', ';', 'const', 'char', '*', 'prefix', ';', 'unsigned', 'stid', ';', 'int', 'saved_errno', ';', 'if', 'G_UNLIKELY', '(', 'logfile', '[', 'LOG_STDERR', ']', '.', 'disabled', ')', 'return', ';', '/', '*', '*', 'Force', 'emisison', 'on', 'stdout', 'as', 'well', 'for', 'fatal', 'messages', '.', 'if', 'G_UNLIKELY', '(', 'level', '&', 'G_LOG_FLAG_FATAL', ')', 'copy', '=', 'TRUE', ';', '/', '*', '*', 'When', ""``copy''"", 'is', 'set', ',', 'always', 'emit', 'message', '.', 'if', '(', '!copy', '&&', '!log_printable', '(', 'LOG_STDERR', ')', ')', 'return', ';', 'saved_errno', '=', 'errno', ';', 'prefix', '=', 'log_prefix', '(', 'level', ')', ';', 'stid', '=', 'thread_small_id', '(', ')', ';', '/', '*', '*', 'Because', 'str_vncatf', '(', ')', 'is', 'recursion', '-', 'safe', ',', 'we', 'know', 'we', ""can't"", '*', 'to', 'here', 'through', 'it', '.', 'crash_time', '(', 'time_buf', ',', 'sizeof', 'time_buf', ')', ';', 'if', '(', 'stid', '!=', '0', ')', '{', 'char', 'stid_buf', '[', 'ULONG_DEC_BUFLEN', ']', ';', 'const', 'char', '*', 'stid_str', '=', 'print_number', '(', 'stid_buf', ',', 'sizeof', 'stid_buf', ',', 'stid', ')', ';', '}', 'if', 'G_UNLIKELY', '(', 'level', '&', 'G_LOG_FLAG_RECURSION', ')', 'if', 'G_UNLIKELY', '(', 'level', '&', 'G_LOG_FLAG_FATAL', ')', 'log_flush_err', '(', ')', ';', 'if', '(', 'copy', '&&', 'log_stdout_is_distinct', '(', ')', ')', 'log_flush_out', '(', ')', ';', 'errno', '=', 'saved_errno', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
550,"['vs_scanline_resample_nearest_AYUV64', '(', 'uint8_t', '*', 'dest8', ',', 'uint8_t', '*', 'src8', ',', 'int', 'src_width', ',', 'int', 'n', ',', 'int', '*', 'accumulator', ',', 'int', 'increment', ')', '{', 'guint16', '*', 'dest', '=', '(', 'guint16', '*', ')', 'dest8', ';', 'guint16', '*', 'src', '=', '(', 'guint16', '*', ')', 'src8', ';', 'int', 'acc', '=', '*', 'accumulator', ';', 'int', 'i', ',', 'j', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'n', ';', 'i', '++', ')', '{', 'j', '=', '(', 'acc', '+', '0x8000', ')', '>>', '16', ';', 'dest', '[', 'i', '*', '4', '+', '0', ']', '=', 'src', '[', 'j', '*', '4', '+', '0', ']', ';', 'dest', '[', 'i', '*', '4', '+', '1', ']', '=', 'src', '[', 'j', '*', '4', '+', '1', ']', ';', 'dest', '[', 'i', '*', '4', '+', '2', ']', '=', 'src', '[', 'j', '*', '4', '+', '2', ']', ';', 'dest', '[', 'i', '*', '4', '+', '3', ']', '=', 'src', '[', 'j', '*', '4', '+', '3', ']', ';', 'acc', '+=', 'increment', ';', '}', '*', 'accumulator', '=', 'acc', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
551,"['UpdateAI', '(', 'const', 'uint32', 'uiDiff', ')', '{', 'if', '(', '!m_creature', '->', 'SelectHostileTarget', '(', ')', '||', '!m_creature', '->', 'getVictim', '(', ')', ')', '{', 'return', ';', '}', '/', '/', 'Shadow', 'Flame', 'if', '(', 'm_uiShadowFlameTimer', '<', 'uiDiff', ')', '{', 'if', '(', 'DoCastSpellIfCan', '(', 'm_creature', ',', 'SPELL_SHADOW_FLAME', ')', '==', 'CAST_OK', ')', '{', 'm_uiShadowFlameTimer', '=', 'urand', '(', '12000', ',', '15000', ')', ';', '}', '}', '{', 'm_uiShadowFlameTimer', '-=', 'uiDiff', ';', '}', '/', '/', 'Wing', 'Buffet', 'if', '(', 'm_uiWingBuffetTimer', '<', 'uiDiff', ')', '{', 'if', '(', 'DoCastSpellIfCan', '(', 'm_creature', ',', 'SPELL_WING_BUFFET', ')', '==', 'CAST_OK', ')', '{', 'm_uiWingBuffetTimer', '=', '25000', ';', '}', '}', '{', 'm_uiWingBuffetTimer', '-=', 'uiDiff', ';', '}', '/', '/', 'Shadow', 'of', 'Ebonroc', 'if', '(', 'm_uiShadowOfEbonrocTimer', '<', 'uiDiff', ')', '{', 'if', '(', 'DoCastSpellIfCan', '(', 'm_creature', '->', 'getVictim', '(', ')', ',', 'SPELL_SHADOW_OF_EBONROC', ')', '==', 'CAST_OK', ')', '{', 'm_uiShadowOfEbonrocTimer', '=', 'urand', '(', '25000', ',', '35000', ')', ';', '}', '}', '{', 'm_uiShadowOfEbonrocTimer', '-=', 'uiDiff', ';', '}', '/', '/', 'Thrash', 'if', '(', 'm_uiTrashTimer', '<', 'uiDiff', ')', '{', 'if', '(', 'DoCastSpellIfCan', '(', 'm_creature', ',', 'SPELL_THRASH', ')', '==', 'CAST_OK', ')', '{', 'm_uiTrashTimer', '=', '20000', ';', '}', '}', '{', 'm_uiTrashTimer', '-=', 'uiDiff', ';', '}', 'DoMeleeAttackIfReady', '(', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
552,"['main', '(', 'int', 'argc', ',', 'char', '*', '*', 'argv', ')', '{', 'int', 'c', ';', 'progname', '=', 'argv', '[', '0', ']', ';', 'output_file', '=', 'stdout', ';', 'while', '(', '(', 'c', '=', 'getopt', '(', 'argc', ',', 'argv', ',', '""""', ')', ')', '!=', '-', '1', ')', 'switch', '(', 'c', ')', '{', 'case', ""''"", ':', 'if', '(', 'output_file', '!=', 'stdout', ')', 'fclose', '(', 'output_file', ')', ';', 'if', '(', '(', 'output_file', '=', 'fopen', '(', 'optarg', ',', '""""', ')', ')', '==', 'NULL', ')', 'err', '(', '1', ',', '""""', ',', 'optarg', ')', ';', 'break', ';', 'case', ""''"", ':', 'fprintf', '(', 'stderr', ',', '""""', ',', 'HP48CC_VERSION', ')', ';', 'exit', '(', '0', ')', ';', 'case', ""''"", ':', 'default', ':', 'usage', '(', ')', ';', '}', 'argc', '-=', 'optind', ';', 'argv', '+=', 'optind', ';', 'if', '(', 'argc', '<', '1', ')', 'process_file', '(', 'NULL', ')', ';', 'while', '(', '*', 'argv', ')', 'process_file', '(', '*', 'argv', '++', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  True,CWE-476  False,CWE-other  False
553,"['_k_view_list_do_postdraw', '(', 'state_t', '*', 's', ',', 'gfxw_list_t', '*', 'list', ')', '{', 'gfxw_dyn_view_t', '*', 'widget', '=', '(', 'gfxw_dyn_view_t', '*', ')', 'list', '->', 'contents', ';', 'while', '(', 'widget', ')', '{', 'reg_t', 'obj', '=', 'make_reg', '(', 'widget', '->', 'ID', ',', 'widget', '->', 'subID', ')', ';', 'if', '(', 'widget', '->', 'type', '==', 'GFXW_SORTED_LIST', ')', '_k_view_list_do_postdraw', '(', 's', ',', 'GFXWC', '(', 'widget', ')', ')', ';', 'if', '(', 'widget', '->', 'type', '!=', 'GFXW_DYN_VIEW', ')', '{', 'widget', '=', '(', 'gfxw_dyn_view_t', '*', ')', 'widget', '->', 'next', ';', 'continue', ';', '}', '/', '*', '*', 'this', 'fixes', 'a', 'few', 'problems', ',', 'but', ""doesn''s"", 'logic', '.', '*', 'The', 'semantics', 'of', 'the', 'private', 'flag', 'need', 'to', 'be', 'verified', 'before', 'this', 'can', 'be', 'uncommented', '.', '*', 'Fixes', 'bug', '#326', '(', 'CB1', ',', 'ego', 'falls', 'down', 'stairs', ')', '*', 'if', '(', '(', 'widget', '->', 'signal', '&', '(', '_K_VIEW_SIG_FLAG_FREESCI_PRIVATE', '|', '_K_VIEW_SIG_FLAG_REMOVE', '|', '_K_VIEW_SIG_FLAG_NO_UPDATE', ')', ')', '==', '_K_VIEW_SIG_FLAG_FREESCI_PRIVATE', ')', '{', 'if', '(', '(', 'widget', '->', 'signal', '&', '(', '_K_VIEW_SIG_FLAG_REMOVE', '|', '_K_VIEW_SIG_FLAG_NO_UPDATE', ')', ')', '==', '0', ')', '{', 'int', 'has_nsrect', '=', 'lookup_selector', '(', 's', ',', 'obj', ',', 's', '->', 'selector_map', '.', 'nsBottom', ',', 'NULL', ',', 'NULL', ')', '==', 'SELECTOR_VARIABLE', ';', 'if', '(', 'has_nsrect', ')', '{', 'int', 'temp', ';', 'temp', '=', 'GET_SEL32V', '(', 'obj', ',', 'nsLeft', ')', ';', 'PUT_SEL32V', '(', 'obj', ',', 'lsLeft', ',', 'temp', ')', ';', 'temp', '=', 'GET_SEL32V', '(', 'obj', ',', 'nsRight', ')', ';', 'PUT_SEL32V', '(', 'obj', ',', 'lsRight', ',', 'temp', ')', ';', 'temp', '=', 'GET_SEL32V', '(', 'obj', ',', 'nsTop', ')', ';', 'PUT_SEL32V', '(', 'obj', ',', 'lsTop', ',', 'temp', ')', ';', 'temp', '=', 'GET_SEL32V', '(', 'obj', ',', 'nsBottom', ')', ';', 'PUT_SEL32V', '(', 'obj', ',', 'lsBottom', ',', 'temp', ')', ';', '#ifdef', 'fprintf', '(', 'stderr', ',', '""""PREG""""', ',', 'PRINT_REG', '(', 'obj', ')', ')', ';', '}', '#ifdef', 'else', 'fprintf', '(', 'stderr', ',', '""""PREG""""', ',', 'PRINT_REG', '(', 'obj', ')', ',', 'lookup_selector', '(', 's', ',', 'obj', ',', 's', '->', 'selector_map', '.', 'nsBottom', ',', 'NULL', ',', 'NULL', ')', ')', ';', 'if', '(', 'widget', '->', 'signal', '&', '_K_VIEW_SIG_FLAG_HIDDEN', ')', 'widget', '->', 'signal', '|=', '_K_VIEW_SIG_FLAG_REMOVE', ';', '}', '#ifdef', 'fprintf', '(', 'stderr', ',', '""""PREG""""', ',', 'PRINT_REG', '(', 'obj', ')', ',', '(', 'widget', '->', 'signal', '&', '(', '_K_VIEW_SIG_FLAG_REMOVE', '|', '_K_VIEW_SIG_FLAG_NO_UPDATE', ')', ')', ')', ';', 'if', '(', 'widget', '->', 'signalp', ')', '{', '}', 'widget', '=', '(', 'gfxw_dyn_view_t', '*', ')', 'widget', '->', 'next', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
554,"['extractMemberName', '(', 'const', 'QMetaMethod', '&', 'member', ')', '{', 'QString', 'sig', '=', 'member', '.', 'signature', '(', ')', ';', 'return', 'sig', '.', 'left', '(', 'sig', '.', 'indexOf', '(', ""''"", ')', ')', '.', 'toLatin1', '(', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
555,"['skip_ascii', '(', 'FILE', '*', 'fp', ',', 'int', 'num', ')', '{', 'int', 'c', ',', 'prev', ',', 'curr', ',', 'found', ';', 'c', '=', 'getc', '(', 'fp', ')', ';', 'if', '(', 'c', '==', ""''"", '||', 'c', '==', ""''"", '||', 'c', '==', ""''"", ')', '{', 'prev', '=', '0', ';', 'found', '=', '0', ';', '}', 'else', '{', 'prev', '=', '1', ';', 'found', '=', '1', ';', '}', 'while', '(', '1', ')', '{', 'c', '=', 'getc', '(', 'fp', ')', ';', 'if', '(', 'c', '==', ""''"", '||', 'c', '==', ""''"", '||', 'c', '==', ""''"", ')', 'curr', '=', '0', ';', 'else', 'curr', '=', '1', ';', 'if', '(', 'prev', '!=', 'curr', ')', 'found', '++', ';', 'if', '(', 'found', '==', '2', '*', 'num', ')', 'break', ';', 'prev', '=', 'curr', ';', '}', 'ungetc', '(', 'c', ',', 'fp', ')', ';', 'return', 'OK', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
556,"['bson_oid_from_string', '(', 'bson_oid_t', '*', 'oid', ',', 'const', 'char', '*', 'str', ')', '{', 'int', 'i', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', '12', ';', 'i', '++', ')', '{', 'oid', '->', 'bytes', '[', 'i', ']', '=', '(', 'hexbyte', '(', 'str', '[', '2', '*', 'i', ']', ')', '<<', '4', ')', '|', 'hexbyte', '(', 'str', '[', '2', '*', 'i', '+', '1', ']', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
557,"['pci_common_swizzle', '(', 'struct', 'pci_dev', '*', 'dev', ',', 'u8', '*', 'pinp', ')', '{', 'u8', 'pin', '=', '*', 'pinp', ';', 'while', '(', '!pci_is_root_bus', '(', 'dev', '->', 'bus', ')', ')', '{', 'pin', '=', 'pci_swizzle_interrupt_pin', '(', 'dev', ',', 'pin', ')', ';', 'dev', '=', 'dev', '->', 'bus', '->', 'self', ';', '}', '*', 'pinp', '=', 'pin', ';', 'return', 'PCI_SLOT', '(', 'dev', '->', 'devfn', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
558,"['pushCommand', '(', 'const', 'UndoCommand', '&', 'cmd', ')', '{', 'm_commands', '.', 'append', '(', 'cmd', ')', ';', 'emit', 'q', '->', 'undoAvailable', '(', 'true', ')', ';', 'emit', 'q', '->', 'undoTextChanged', '(', 'q', '->', 'undoText', '(', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
559,"['cp_set_mac_address', '(', 'struct', 'net_device', '*', 'dev', ',', 'void', '*', 'p', ')', '{', 'struct', 'cp_private', '*', 'cp', '=', 'netdev_priv', '(', 'dev', ')', ';', 'struct', 'sockaddr', '*', 'addr', '=', 'p', ';', 'if', '(', '!is_valid_ether_addr', '(', 'addr', '->', 'sa_data', ')', ')', 'return', '-', 'EADDRNOTAVAIL', ';', 'memcpy', '(', 'dev', '->', 'dev_addr', ',', 'addr', '->', 'sa_data', ',', 'dev', '->', 'addr_len', ')', ';', 'spin_lock_irq', '(', '&', 'cp', '->', 'lock', ')', ';', 'cpw8_f', '(', 'Cfg9346', ',', 'Cfg9346_Unlock', ')', ';', 'cpw32_f', '(', 'MAC0', '+', '0', ',', 'le32_to_cpu', '(', '*', '(', '__le32', '*', ')', '(', 'dev', '->', 'dev_addr', '+', '0', ')', ')', ')', ';', 'cpw32_f', '(', 'MAC0', '+', '4', ',', 'le32_to_cpu', '(', '*', '(', '__le32', '*', ')', '(', 'dev', '->', 'dev_addr', '+', '4', ')', ')', ')', ';', 'cpw8_f', '(', 'Cfg9346', ',', 'Cfg9346_Lock', ')', ';', 'spin_unlock_irq', '(', '&', 'cp', '->', 'lock', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
560,"['getForeignDataWrappers', '(', 'int', '*', 'numForeignDataWrappers', ')', '{', 'PGresult', '*', 'res', ';', 'int\t\t\tntups', ';', 'int\t\t\ti', ';', 'PQExpBuffer', 'query', '=', 'createPQExpBuffer', '(', ')', ';', 'FdwInfo', '*', 'fdwinfo', ';', 'int\t\t\ti_tableoid', ';', 'int\t\t\ti_oid', ';', 'int\t\t\ti_fdwname', ';', 'int\t\t\ti_rolname', ';', 'int\t\t\ti_fdwvalidator', ';', 'int\t\t\ti_fdwacl', ';', 'int\t\t\ti_fdwoptions', ';', 'if', '(', 'g_fout', '->', 'remoteVersion', '<', '80400', ')', '{', '*', 'numForeignDataWrappers', '=', '0', ';', 'return', 'NULL', ';', '}', 'selectSourceSchema', '(', '""""', ')', ';', 'appendPQExpBuffer', '(', 'query', ',', '""""', ',', 'username_subquery', ')', ';', 'res', '=', 'PQexec', '(', 'g_conn', ',', 'query', '->', 'data', ')', ';', 'check_sql_result', '(', 'res', ',', 'g_conn', ',', 'query', '->', 'data', ',', 'PGRES_TUPLES_OK', ')', ';', 'ntups', '=', 'PQntuples', '(', 'res', ')', ';', '*', 'numForeignDataWrappers', '=', 'ntups', ';', 'fdwinfo', '=', '(', 'FdwInfo', '*', ')', 'malloc', '(', 'ntups', '*', 'sizeof', '(', 'FdwInfo', ')', ')', ';', 'i_tableoid', '=', 'PQfnumber', '(', 'res', ',', '""""', ')', ';', 'i_oid', '=', 'PQfnumber', '(', 'res', ',', '""""', ')', ';', 'i_fdwname', '=', 'PQfnumber', '(', 'res', ',', '""""', ')', ';', 'i_rolname', '=', 'PQfnumber', '(', 'res', ',', '""""', ')', ';', 'i_fdwvalidator', '=', 'PQfnumber', '(', 'res', ',', '""""', ')', ';', 'i_fdwacl', '=', 'PQfnumber', '(', 'res', ',', '""""', ')', ';', 'i_fdwoptions', '=', 'PQfnumber', '(', 'res', ',', '""""', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'ntups', ';', 'i', '++', ')', '{', 'fdwinfo', '[', 'i', ']', '.', 'dobj', '.', 'objType', '=', 'DO_FDW', ';', 'fdwinfo', '[', 'i', ']', '.', 'dobj', '.', 'catId', '.', 'tableoid', '=', 'atooid', '(', 'PQgetvalue', '(', 'res', ',', 'i', ',', 'i_tableoid', ')', ')', ';', 'fdwinfo', '[', 'i', ']', '.', 'dobj', '.', 'catId', '.', 'oid', '=', 'atooid', '(', 'PQgetvalue', '(', 'res', ',', 'i', ',', 'i_oid', ')', ')', ';', 'AssignDumpId', '(', '&', 'fdwinfo', '[', 'i', ']', '.', 'dobj', ')', ';', 'fdwinfo', '[', 'i', ']', '.', 'dobj', '.', 'name', '=', 'strdup', '(', 'PQgetvalue', '(', 'res', ',', 'i', ',', 'i_fdwname', ')', ')', ';', 'fdwinfo', '[', 'i', ']', '.', 'dobj', '.', 'namespace', '=', 'NULL', ';', 'fdwinfo', '[', 'i', ']', '.', 'rolname', '=', 'strdup', '(', 'PQgetvalue', '(', 'res', ',', 'i', ',', 'i_rolname', ')', ')', ';', 'fdwinfo', '[', 'i', ']', '.', 'fdwvalidator', '=', 'strdup', '(', 'PQgetvalue', '(', 'res', ',', 'i', ',', 'i_fdwvalidator', ')', ')', ';', 'fdwinfo', '[', 'i', ']', '.', 'fdwoptions', '=', 'strdup', '(', 'PQgetvalue', '(', 'res', ',', 'i', ',', 'i_fdwoptions', ')', ')', ';', 'fdwinfo', '[', 'i', ']', '.', 'fdwacl', '=', 'strdup', '(', 'PQgetvalue', '(', 'res', ',', 'i', ',', 'i_fdwacl', ')', ')', ';', 'selectDumpableObject', '(', '&', '(', 'fdwinfo', '[', 'i', ']', '.', 'dobj', ')', ')', ';', '}', 'PQclear', '(', 'res', ')', ';', 'destroyPQExpBuffer', '(', 'query', ')', ';', 'return', 'fdwinfo', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
561,"['bdc_gadget_ep_queue', '(', 'struct', 'usb_ep', '*', '_ep', ',', 'struct', 'usb_request', '*', '_req', ',', 'gfp_t', 'gfp_flags', ')', '{', 'struct', 'bdc_req', '*', 'req', ';', 'unsigned', 'long', 'flags', ';', 'struct', 'bdc_ep', '*', 'ep', ';', 'struct', 'bdc', '*', 'bdc', ';', 'int', 'ret', ';', 'if', '(', '!_ep', '||', '!_ep', '->', 'desc', ')', 'return', '-', 'ESHUTDOWN', ';', 'if', '(', '!_req', '||', '!_req', '->', 'complete', '||', '!_req', '->', 'buf', ')', 'return', '-', 'EINVAL', ';', 'ep', '=', 'to_bdc_ep', '(', '_ep', ')', ';', 'req', '=', 'to_bdc_req', '(', '_req', ')', ';', 'bdc', '=', 'ep', '->', 'bdc', ';', 'dev_dbg', '(', 'bdc', '->', 'dev', ',', '""""', ',', '__func__', ',', 'ep', ',', 'req', ')', ';', 'dev_dbg', '(', 'bdc', '->', 'dev', ',', '""""', ',', '_req', ',', 'ep', '->', 'name', ',', '_req', '->', 'length', ',', '_req', '->', 'zero', ')', ';', 'if', '(', '!ep', '->', 'usb_ep', '.', 'desc', ')', '{', 'dev_warn', '(', 'bdc', '->', 'dev', ',', '""""', ',', '_req', ',', 'ep', '->', 'name', ')', ';', 'return', '-', 'ESHUTDOWN', ';', '}', 'if', '(', '_req', '->', 'length', '>', 'MAX_XFR_LEN', ')', '{', 'dev_warn', '(', 'bdc', '->', 'dev', ',', '""""', ',', 'MAX_XFR_LEN', ',', '_req', '->', 'length', ')', ';', 'return', '-', 'EOPNOTSUPP', ';', '}', 'spin_lock_irqsave', '(', '&', 'bdc', '->', 'lock', ',', 'flags', ')', ';', 'if', '(', 'ep', '==', 'bdc', '->', 'bdc_ep_array', '[', '1', ']', ')', 'ret', '=', 'ep0_queue', '(', 'ep', ',', 'req', ')', ';', 'ret', '=', 'ep_queue', '(', 'ep', ',', 'req', ')', ';', 'spin_unlock_irqrestore', '(', '&', 'bdc', '->', 'lock', ',', 'flags', ')', ';', 'return', 'ret', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
562,"['tilemap_nb_find', '(', 'int', 'number', ')', '{', 'int', 'count', '=', '0', ';', 'struct', 'tilemap', '*', 'tilemap', ';', 'tilemap', '=', 'first_tilemap', ';', 'while', '(', 'tilemap', ')', '{', 'count', '++', ';', 'tilemap', '=', 'tilemap', '->', 'next', ';', '}', 'number', '=', '(', 'count', '-', '1', ')', '-', 'number', ';', 'tilemap', '=', 'first_tilemap', ';', 'while', '(', 'number', '--', ')', '{', 'tilemap', '=', 'tilemap', '->', 'next', ';', '}', 'return', 'tilemap', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
563,"['jswrap_i2c_writeTo', '(', 'JsVar', '*', 'parent', ',', 'JsVar', '*', 'addressVar', ',', 'JsVar', '*', 'args', ')', '{', 'IOEventFlags', 'device', '=', 'jsiGetDeviceFromClass', '(', 'parent', ')', ';', 'if', '(', '!DEVICE_IS_I2C', '(', 'device', ')', ')', 'return', ';', 'bool', 'sendStop', '=', 'true', ';', 'int', 'address', '=', 'i2c_get_address', '(', 'addressVar', ',', '&', 'sendStop', ')', ';', 'size_t', 'l', '=', '(', 'size_t', ')', 'jsvIterateCallbackCount', '(', 'args', ')', ';', 'if', '(', 'l', '+', '256', '>', 'jsuGetFreeStack', '(', ')', ')', '{', 'jsExceptionHere', '(', 'JSET_ERROR', ',', '""""', ')', ';', 'return', ';', '}', 'JsI2CWriteCbData', 'cbData', ';', 'cbData', '.', 'buf', '=', '(', 'unsigned', 'char', '*', ')', 'alloca', '(', 'l', ')', ';', 'cbData', '.', 'idx', '=', '0', ';', 'jsvIterateCallback', '(', 'args', ',', 'jswrap_i2c_writeToCb', ',', '(', 'void', '*', ')', '&', 'cbData', ')', ';', 'jshI2CWrite', '(', 'device', ',', '(', 'unsigned', 'char', ')', 'address', ',', 'cbData', '.', 'idx', ',', 'cbData', '.', 'buf', ',', 'sendStop', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
564,"['gagt_debug', '(', 'const', 'char', '*', 'function', ',', 'const', 'char', '*', 'format', ',', '.', '.', '.', ')', '{', 'if', '(', 'DEBUG_OUT', ')', '{', 'fprintf', '(', 'debugfile', ',', '""""', ',', 'function', ')', ';', 'if', '(', 'format', '&&', 'strlen', '(', 'format', ')', '>', '0', ')', '{', 'va_list', 'ap', ';', 'va_start', '(', 'ap', ',', 'format', ')', ';', 'vfprintf', '(', 'debugfile', ',', 'format', ',', 'ap', ')', ';', 'va_end', '(', 'ap', ')', ';', '}', 'fprintf', '(', 'debugfile', ',', '""""', ')', ';', 'fflush', '(', 'debugfile', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
565,"['xmlrpc_parse_value_va', '(', 'xmlrpc_env', '*', 'const', 'envP', ',', 'xmlrpc_value', '*', 'const', 'value', ',', 'const', 'char', '*', 'const', 'format', ',', 'va_list', 'args', ')', '{', 'const', 'char', '*', 'format_copy', ';', 'va_list', 'args_copy', ';', 'XMLRPC_ASSERT_ENV_OK', '(', 'envP', ')', ';', 'XMLRPC_ASSERT_VALUE_OK', '(', 'value', ')', ';', 'XMLRPC_ASSERT', '(', 'format', '!=', 'NULL', ')', ';', 'format_copy', '=', 'format', ';', 'VA_LIST_COPY', '(', 'args_copy', ',', 'args', ')', ';', 'parsevalue', '(', 'envP', ',', 'value', ',', '&', 'format_copy', ',', '&', 'args_copy', ')', ';', 'if', '(', '!envP', '->', 'fault_occurred', ')', '{', 'XMLRPC_ASSERT', '(', '*', 'format_copy', '==', ""''"", ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
566,"['qtrle_decode_frame', '(', 'AVCodecContext', '*', 'avctx', ',', 'void', '*', 'data', ',', 'int', '*', 'data_size', ',', 'const', 'uint8_t', '*', 'buf', ',', 'int', 'buf_size', ')', '{', 'QtrleContext', '*', 's', '=', 'avctx', '->', 'priv_data', ';', 'int', 'header', ',', 'start_line', ';', 'int', 'stream_ptr', ',', 'height', ',', 'row_ptr', ';', 'int', 'has_palette', '=', '0', ';', 's', '->', 'buf', '=', 'buf', ';', 's', '->', 'size', '=', 'buf_size', ';', 's', '->', 'frame', '.', 'reference', '=', '1', ';', 's', '->', 'frame', '.', 'buffer_hints', '=', 'FF_BUFFER_HINTS_VALID', '|', 'FF_BUFFER_HINTS_PRESERVE', '|', 'FF_BUFFER_HINTS_REUSABLE', '|', 'FF_BUFFER_HINTS_READABLE', ';', 'if', '(', 'avctx', '->', 'reget_buffer', '(', 'avctx', ',', '&', 's', '->', 'frame', ')', ')', '{', 'av_log', '(', 's', '->', 'avctx', ',', 'AV_LOG_ERROR', ',', '""""', ')', ';', 'return', '-', '1', ';', '}', 'if', '(', 's', '->', 'size', '<', '8', ')', 'goto', 'done', ';', 'stream_ptr', '=', '4', ';', 'header', '=', 'AV_RB16', '(', '&', 's', '->', 'buf', '[', 'stream_ptr', ']', ')', ';', 'stream_ptr', '+=', '2', ';', 'if', '(', 'header', '&', '0x0008', ')', '{', 'if', '(', 's', '->', 'size', '<', '14', ')', 'goto', 'done', ';', 'start_line', '=', 'AV_RB16', '(', '&', 's', '->', 'buf', '[', 'stream_ptr', ']', ')', ';', 'stream_ptr', '+=', '4', ';', 'height', '=', 'AV_RB16', '(', '&', 's', '->', 'buf', '[', 'stream_ptr', ']', ')', ';', 'stream_ptr', '+=', '4', ';', '}', 'else', '{', 'start_line', '=', '0', ';', 'height', '=', 's', '->', 'avctx', '->', 'height', ';', '}', 'row_ptr', '=', 's', '->', 'frame', '.', 'linesize', '[', '0', ']', '*', 'start_line', ';', 'switch', '(', 'avctx', '->', 'bits_per_coded_sample', ')', '{', 'case', '1', ':', 'case', '33', ':', 'qtrle_decode_1bpp', '(', 's', ',', 'stream_ptr', ',', 'row_ptr', ',', 'height', ')', ';', 'break', ';', 'case', '2', ':', 'case', '34', ':', 'qtrle_decode_2n4bpp', '(', 's', ',', 'stream_ptr', ',', 'row_ptr', ',', 'height', ',', '2', ')', ';', 'has_palette', '=', '1', ';', 'break', ';', 'case', '4', ':', 'case', '36', ':', 'qtrle_decode_2n4bpp', '(', 's', ',', 'stream_ptr', ',', 'row_ptr', ',', 'height', ',', '4', ')', ';', 'has_palette', '=', '1', ';', 'break', ';', 'case', '8', ':', 'case', '40', ':', 'qtrle_decode_8bpp', '(', 's', ',', 'stream_ptr', ',', 'row_ptr', ',', 'height', ')', ';', 'has_palette', '=', '1', ';', 'break', ';', 'case', '16', ':', 'qtrle_decode_16bpp', '(', 's', ',', 'stream_ptr', ',', 'row_ptr', ',', 'height', ')', ';', 'break', ';', 'case', '24', ':', 'qtrle_decode_24bpp', '(', 's', ',', 'stream_ptr', ',', 'row_ptr', ',', 'height', ')', ';', 'break', ';', 'case', '32', ':', 'qtrle_decode_32bpp', '(', 's', ',', 'stream_ptr', ',', 'row_ptr', ',', 'height', ')', ';', 'break', ';', 'default', ':', 'av_log', '(', 's', '->', 'avctx', ',', 'AV_LOG_ERROR', ',', '""""', ',', 'avctx', '->', 'bits_per_coded_sample', ')', ';', 'break', ';', '}', 'if', '(', 'has_palette', ')', '{', 'memcpy', '(', 's', '->', 'frame', '.', 'data', '[', '1', ']', ',', 's', '->', 'avctx', '->', 'palctrl', '->', 'palette', ',', 'AVPALETTE_SIZE', ')', ';', 'if', '(', 's', '->', 'avctx', '->', 'palctrl', '->', 'palette_changed', ')', '{', 's', '->', 'frame', '.', 'palette_has_changed', '=', '1', ';', 's', '->', 'avctx', '->', 'palctrl', '->', 'palette_changed', '=', '0', ';', '}', '}', 'done', ':', '*', 'data_size', '=', 'sizeof', '(', 'AVFrame', ')', ';', '*', '(', 'AVFrame', '*', ')', 'data', '=', 's', '->', 'frame', ';', 'return', 'buf_size', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
567,"['bfusb_rx_submit', '(', 'struct', 'bfusb_data', '*', 'data', ',', 'struct', 'urb', '*', 'urb', ')', '{', 'struct', 'bfusb_data_scb', '*', 'scb', ';', 'struct', 'sk_buff', '*', 'skb', ';', 'int', 'err', ',', 'pipe', ',', 'size', '=', 'HCI_MAX_FRAME_SIZE', '+', '32', ';', 'BT_DBG', '(', '""""', ',', 'data', ',', 'urb', ')', ';', 'if', '(', '!urb', ')', '{', 'urb', '=', 'usb_alloc_urb', '(', '0', ',', 'GFP_ATOMIC', ')', ';', 'if', '(', '!urb', ')', 'return', '-', 'ENOMEM', ';', '}', 'skb', '=', 'bt_skb_alloc', '(', 'size', ',', 'GFP_ATOMIC', ')', ';', 'if', '(', '!skb', ')', '{', 'usb_free_urb', '(', 'urb', ')', ';', 'return', '-', 'ENOMEM', ';', '}', 'skb', '->', 'dev', '=', '(', 'void', '*', ')', 'data', ';', 'scb', '=', '(', 'struct', 'bfusb_data_scb', '*', ')', 'skb', '->', 'cb', ';', 'scb', '->', 'urb', '=', 'urb', ';', 'pipe', '=', 'usb_rcvbulkpipe', '(', 'data', '->', 'udev', ',', 'data', '->', 'bulk_in_ep', ')', ';', 'usb_fill_bulk_urb', '(', 'urb', ',', 'data', '->', 'udev', ',', 'pipe', ',', 'skb', '->', 'data', ',', 'size', ',', 'bfusb_rx_complete', ',', 'skb', ')', ';', 'skb_queue_tail', '(', '&', 'data', '->', 'pending_q', ',', 'skb', ')', ';', 'err', '=', 'usb_submit_urb', '(', 'urb', ',', 'GFP_ATOMIC', ')', ';', 'if', '(', 'err', ')', '{', 'BT_ERR', '(', '""""', ',', 'data', '->', 'hdev', '->', 'name', ',', 'urb', ',', 'err', ')', ';', 'skb_unlink', '(', 'skb', ',', '&', 'data', '->', 'pending_q', ')', ';', 'kfree_skb', '(', 'skb', ')', ';', 'usb_free_urb', '(', 'urb', ')', ';', '}', 'return', 'err', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
568,"['vs_image_scale_lanczos_Y', '(', 'const', 'VSImage', '*', 'dest', ',', 'const', 'VSImage', '*', 'src', ',', 'uint8_t', '*', 'tmpbuf', ',', 'double', 'sharpness', ',', 'gboolean', 'dither', ',', 'int', 'submethod', ',', 'double', 'a', ',', 'double', 'sharpen', ')', '{', 'switch', '(', 'submethod', ')', '{', 'case', '0', ':', 'default', ':', 'vs_image_scale_lanczos_Y_int16', '(', 'dest', ',', 'src', ',', 'tmpbuf', ',', 'sharpness', ',', 'dither', ',', 'a', ',', 'sharpen', ')', ';', 'break', ';', 'case', '1', ':', 'vs_image_scale_lanczos_Y_int32', '(', 'dest', ',', 'src', ',', 'tmpbuf', ',', 'sharpness', ',', 'dither', ',', 'a', ',', 'sharpen', ')', ';', 'break', ';', 'case', '2', ':', 'vs_image_scale_lanczos_Y_float', '(', 'dest', ',', 'src', ',', 'tmpbuf', ',', 'sharpness', ',', 'dither', ',', 'a', ',', 'sharpen', ')', ';', 'break', ';', 'case', '3', ':', 'vs_image_scale_lanczos_Y_double', '(', 'dest', ',', 'src', ',', 'tmpbuf', ',', 'sharpness', ',', 'dither', ',', 'a', ',', 'sharpen', ')', ';', 'break', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
569,"['rd_new_remdata', '(', 'RemType', 'type', ',', 'char', '*', 'remote_name', ',', 'char', '*', 'type_spec', ')', '{', 'REMDATA_S', '*', 'rd', '=', 'NULL', ';', 'rd', '=', '(', 'REMDATA_S', '*', ')', 'fs_get', '(', 'sizeof', '(', '*', 'rd', ')', ')', ';', 'memset', '(', '(', 'void', '*', ')', 'rd', ',', '0', ',', 'sizeof', '(', '*', 'rd', ')', ')', ';', 'rd', '->', 'type', '=', 'type', ';', 'rd', '->', 'access', '=', 'NoExists', ';', 'if', '(', 'remote_name', ')', 'rd', '->', 'rn', '=', 'cpystr', '(', 'remote_name', ')', ';', 'switch', '(', 'rd', '->', 'type', ')', '{', 'case', 'RemImap', ':', 'if', '(', 'type_spec', ')', 'rd', '->', 't', '.', 'i', '.', 'special_hdr', '=', 'cpystr', '(', 'type_spec', ')', ';', 'break', ';', 'default', ':', 'q_status_message', '(', 'SM_ORDER', ',', '3', ',', '5', ',', '""""', ')', ';', 'break', ';', '}', 'return', '(', 'rd', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
570,"['snd_es1938_get_byte', '(', 'struct', 'es1938', '*', 'chip', ')', '{', 'int', 'i', ';', 'unsigned', 'char', 'v', ';', 'for', '(', 'i', '=', 'GET_LOOP_TIMEOUT', ';', 'i', ';', 'i', '--', ')', 'if', '(', '(', 'v', '=', 'inb', '(', 'SLSB_REG', '(', 'chip', ',', 'STATUS', ')', ')', ')', '&', '0x80', ')', 'return', 'inb', '(', 'SLSB_REG', '(', 'chip', ',', 'READDATA', ')', ')', ';', 'dev_err', '(', 'chip', '->', 'card', '->', 'dev', ',', '""""', ',', 'v', ')', ';', 'return', '-', 'ENODEV', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
571,"['get_app_info_size', '(', 'FILE', '*', 'in', ',', 'int', '*', 'size', ')', '{', 'unsigned', 'char', 'raw_header', '[', 'LEN_RAW_DB_HEADER', ']', ';', 'DBHeader', 'dbh', ';', 'unsigned', 'int', 'offset', ';', 'record_header', 'rh', ';', 'fseek', '(', 'in', ',', '0', ',', 'SEEK_SET', ')', ';', 'fread', '(', 'raw_header', ',', 'LEN_RAW_DB_HEADER', ',', '1', ',', 'in', ')', ';', 'if', '(', 'feof', '(', 'in', ')', ')', '{', 'jp_logf', '(', 'JP_LOG_WARN', ',', '""""', ',', '_', '(', '""""', ')', ')', ';', 'return', 'EXIT_FAILURE', ';', '}', 'unpack_db_header', '(', '&', 'dbh', ',', 'raw_header', ')', ';', 'if', '(', 'dbh', '.', 'app_info_offset', '==', '0', ')', '{', '*', 'size', '=', '0', ';', 'return', 'EXIT_SUCCESS', ';', '}', 'if', '(', 'dbh', '.', 'sort_info_offset', '!=', '0', ')', '{', '*', 'size', '=', 'dbh', '.', 'sort_info_offset', '-', 'dbh', '.', 'app_info_offset', ';', 'return', 'EXIT_SUCCESS', ';', '}', 'if', '(', 'dbh', '.', 'number_of_records', '==', '0', ')', '{', 'fseek', '(', 'in', ',', '0', ',', 'SEEK_END', ')', ';', '*', 'size', '=', 'ftell', '(', 'in', ')', '-', 'dbh', '.', 'app_info_offset', ';', 'return', 'EXIT_SUCCESS', ';', '}', 'fread', '(', '&', 'rh', ',', 'sizeof', '(', 'record_header', ')', ',', '1', ',', 'in', ')', ';', 'offset', '=', '(', '(', 'rh', '.', 'Offset', '[', '0', ']', '*', '256', '+', 'rh', '.', 'Offset', '[', '1', ']', ')', '*', '256', '+', 'rh', '.', 'Offset', '[', '2', ']', ')', '*', '256', '+', 'rh', '.', 'Offset', '[', '3', ']', ';', '*', 'size', '=', 'offset', '-', 'dbh', '.', 'app_info_offset', ';', 'return', 'EXIT_SUCCESS', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
572,"['HasIndexedLookupInterceptor', '(', ')', '{', 'i', ':', ':', 'Isolate', '*', 'isolate', '=', 'Utils', ':', ':', 'OpenHandle', '(', 'this', ')', '->', 'GetIsolate', '(', ')', ';', 'ON_BAILOUT', '(', 'isolate', ',', '""""', ',', 'return', 'false', ')', ';', 'return', 'Utils', ':', ':', 'OpenHandle', '(', 'this', ')', '->', 'HasIndexedInterceptor', '(', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
573,"['s_minicarp', '(', 'const', 'char', '*', 'format', ',', '.', '.', '.', ')', '{', 'bool', 'in_signal_handler', '=', 'signal_in_handler', '(', ')', ';', 'va_list', 'args', ';', '/', '*', '*', 'This', 'test', 'duplicates', 'the', 'one', 'in', 's_minilogv', '(', ')', 'but', 'if', 'we', ""don't"", '*', 'the', 'message', 'we', ""don't"", 'want', 'to', 'emit', 'the', 'stacktrace', 'afterwards', 'either', '.', '*', 'Hence', 'we', 'need', 'to', 'know', 'now', '.', 'if', 'G_UNLIKELY', '(', 'logfile', '[', 'LOG_STDERR', ']', '.', 'disabled', ')', 'return', ';', '/', '*', '*', 'This', 'routine', 'is', 'only', 'called', 'in', 'exceptional', 'conditions', ',', 'so', 'even', '*', 'the', 'LOG_STDERR', 'file', 'is', 'not', 'deemed', 'printable', 'for', 'now', ',', 'attempt', 'to', '*', 'that', 'as', 'well', 'and', 'copy', 'the', 'message', 'to', 'LOG_STDOUT', 'anyway', '.', 'va_start', '(', 'args', ',', 'format', ')', ';', 's_minilogv', '(', 'G_LOG_LEVEL_WARNING', ',', 'TRUE', ',', 'format', ',', 'args', ')', ';', 'va_end', '(', 'args', ')', ';', 's_stacktrace', '(', 'in_signal_handler', ',', '1', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
574,"['prepare_group_list', '(', 'void', ')', '{', 'FILE', '*', 'fd', ';', 'int', '*', 'idx', ';', 'int', 'n', ';', 'int', 'len', ',', 'len1', ',', 'len2', ';', 'fd', '=', 'fopen', '(', 'group_list', ',', '""""', ')', ';', 'if', '(', 'fd', '==', 'NULL', ')', 'G_fatal_error', '(', '""""', ')', ';', '/', '*', '*', 'build', 'sorted', 'index', 'into', 'group', '*', 'so', 'that', 'all', 'raster', 'maps', 'for', 'a', 'mapset', 'to', 'appear', 'idx', '=', '(', 'int', '*', ')', 'G_calloc', '(', 'group', '.', 'ref', '.', 'nfiles', ',', 'sizeof', '(', 'int', ')', ')', ';', 'for', '(', 'n', '=', '0', ';', 'n', '<', 'group', '.', 'ref', '.', 'nfiles', ';', 'n', '++', ')', 'idx', '[', 'n', ']', '=', 'n', ';', 'qsort', '(', 'idx', ',', 'group', '.', 'ref', '.', 'nfiles', ',', 'sizeof', '(', 'int', ')', ',', 'cmp', ')', ';', 'len1', '=', 'len2', '=', '0', ';', 'for', '(', 'n', '=', '0', ';', 'n', '<', 'group', '.', 'ref', '.', 'nfiles', ';', 'n', '++', ')', '{', 'len', '=', 'strlen', '(', 'group', '.', 'ref', '.', 'file', '[', 'n', ']', '.', 'name', ')', ';', 'if', '(', 'len', '>', 'len1', ')', 'len1', '=', 'len', ';', 'len', '=', 'strlen', '(', 'group', '.', 'ref', '.', 'file', '[', 'n', ']', '.', 'mapset', ')', ';', 'if', '(', 'len', '>', 'len2', ')', 'len2', '=', 'len', ';', '}', 'fwrite', '(', '&', 'len1', ',', 'sizeof', '(', 'len1', ')', ',', '1', ',', 'fd', ')', ';', 'fwrite', '(', '&', 'len2', ',', 'sizeof', '(', 'len2', ')', ',', '1', ',', 'fd', ')', ';', 'for', '(', 'n', '=', '0', ';', 'n', '<', 'group', '.', 'ref', '.', 'nfiles', ';', 'n', '++', ')', 'fprintf', '(', 'fd', ',', '""""', ',', 'group', '.', 'ref', '.', 'file', '[', 'idx', '[', 'n', ']', ']', '.', 'name', ',', 'group', '.', 'ref', '.', 'file', '[', 'idx', '[', 'n', ']', ']', '.', 'mapset', ')', ';', 'fclose', '(', 'fd', ')', ';', 'G_free', '(', 'idx', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
575,"['check_locale_name', '(', 'const', 'char', '*', 'locale', ')', '{', 'bool\t\tret', ';', 'int\t\t\tcategory', '=', 'LC_CTYPE', ';', 'char\t', '*', 'save', ';', 'save', '=', 'setlocale', '(', 'category', ',', 'NULL', ')', ';', 'if', '(', '!save', ')', 'save', '=', 'xstrdup', '(', 'save', ')', ';', 'ret', '=', '(', 'setlocale', '(', 'category', ',', 'locale', ')', '!=', 'NULL', ')', ';', 'setlocale', '(', 'category', ',', 'save', ')', ';', 'free', '(', 'save', ')', ';', 'if', '(', '!ret', ')', 'fprintf', '(', 'stderr', ',', '_', '(', '""""', '%', 's\\""""', ')', ',', 'progname', ',', 'locale', ')', ';', 'return', 'ret', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
576,"['operator', '|', '(', 'const', 'Bits', '&', 'A', ')', '{', 'GIVARO_ASSERT', '(', 'rep', '.', 'size', '(', ')', '==', 'A', '.', 'rep', '.', 'size', '(', ')', ',', '""""', ')', ';', 'size_t', 'len', '=', 'rep', '.', 'size', '(', ')', ';', 'Rep', 'res', '(', 'len', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'int', '(', 'len', ')', ';', '++', 'i', ')', 'res', '[', 'i', ']', '=', 'rep', '[', 'i', ']', '|', 'A', '.', 'rep', '[', 'i', ']', ';', 'return', 'Bits', '(', 'res', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
577,"['print_pid_suid', '(', 'struct', 'text_object', '*', 'obj', ',', 'char', '*', 'p', ',', 'int', 'p_max_size', ')', '{', '#define', 'char', '*', 'begin', ',', '*', 'end', ',', '*', 'buf', '=', 'NULL', ';', 'int', 'bytes_read', ';', 'asprintf', '(', '&', 'buf', ',', 'PROCDIR', '""""', ',', 'strtopid', '(', 'obj', '->', 'data', '.', 's', ')', ')', ';', 'strcpy', '(', 'obj', '->', 'data', '.', 's', ',', 'buf', ')', ';', 'free', '(', 'buf', ')', ';', 'buf', '=', 'readfile', '(', 'obj', '->', 'data', '.', 's', ',', '&', 'bytes_read', ',', '1', ')', ';', 'if', '(', 'buf', '!=', 'NULL', ')', '{', 'begin', '=', 'strstr', '(', 'buf', ',', 'UID_ENTRY', ')', ';', 'if', '(', 'begin', '!=', 'NULL', ')', '{', 'begin', '=', 'strchr', '(', 'begin', ',', ""''"", ')', ';', 'begin', '++', ';', 'begin', '=', 'strchr', '(', 'begin', ',', ""''"", ')', ';', 'begin', '++', ';', 'begin', '=', 'strchr', '(', 'begin', ',', ""''"", ')', ';', 'begin', '++', ';', 'end', '=', 'strchr', '(', 'begin', ',', ""''"", ')', ';', 'if', '(', 'end', '!=', 'NULL', ')', '{', '*', '(', 'end', ')', '=', '0', ';', '}', 'snprintf', '(', 'p', ',', 'p_max_size', ',', '""""', ',', 'begin', ')', ';', '}', 'else', '{', 'NORM_ERR', '(', 'SUIDNOTFOUND', ',', 'obj', '->', 'data', '.', 's', ')', ';', '}', 'free', '(', 'buf', ')', ';', '}', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
578,"['dayofweek', '(', 'int32_t', 'year', ',', 'int32_t', 'mon', ',', 'int32_t', 'day', ')', '{', '_assert_', '(', 'true', ')', ';', 'if', '(', 'mon', '<', '3', ')', '{', 'year', '--', ';', 'mon', '+=', '12', ';', '}', 'return', '(', 'day', '+', '(', '(', '8', '+', '(', '13', '*', 'mon', ')', ')', '/', '5', ')', '+', '(', 'year', '+', '(', 'year', '/', '4', ')', '-', '(', 'year', '/', '100', ')', '+', '(', 'year', '/', '400', ')', ')', ')', '%', '7', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
579,"['vma_resv_map', '(', 'struct', 'vm_area_struct', '*', 'vma', ')', '{', 'VM_BUG_ON_VMA', '(', '!is_vm_hugetlb_page', '(', 'vma', ')', ',', 'vma', ')', ';', 'if', '(', 'vma', '->', 'vm_flags', '&', 'VM_MAYSHARE', ')', '{', 'struct', 'address_space', '*', 'mapping', '=', 'vma', '->', 'vm_file', '->', 'f_mapping', ';', 'struct', 'inode', '*', 'inode', '=', 'mapping', '->', 'host', ';', 'return', 'inode_resv_map', '(', 'inode', ')', ';', '}', 'else', '{', 'return', '(', 'struct', 'resv_map', '*', ')', '(', 'get_vma_private_data', '(', 'vma', ')', '&', '~HPAGE_RESV_MASK', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
580,"['QPSolver_verbosity', '(', 'lua_State', '*', 'L', ')', '{', 'SVQP2', '*', 'qp', '=', '(', 'SVQP2', '*', ')', 'luaT_checkudata', '(', 'L', ',', '1', ',', 'QPSolver_id', ')', ';', 'int', 'verbosity', '=', '(', 'int', ')', 'luaL_checknumber', '(', 'L', ',', '2', ')', ';', 'luaL_argcheck', '(', 'L', ',', 'verbosity', '>=', '0', '&&', 'verbosity', '<=', '3', ',', '2', ',', '""""', ')', ';', 'qp', '->', 'verbosity', '=', 'verbosity', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
581,"['drawString', '(', 'const', 'char', '*', 'str', ')', '{', 'glPushMatrix', '(', ')', ';', 'glPushMatrix', '(', ')', ';', 'while', '(', '*', 'str', '!=', ""''"", ')', '{', 'if', '(', '*', 'str', '==', ""''"", ')', '{', 'glPopMatrix', '(', ')', ';', 'glTranslatef', '(', '0', '.', '0', ',', '1', '.', '0', ',', '0', '.', '0', ')', ';', 'glPushMatrix', '(', ')', ';', '}', '{', 'drawChar', '(', '*', 'str', ')', ';', 'glTranslatef', '(', '1', '.', '0', ',', '0', '.', '0', ',', '0', '.', '0', ')', ';', '}', 'str', '++', ';', '}', 'glPopMatrix', '(', ')', ';', 'glPopMatrix', '(', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
582,"['get_dominated_to_depth', '(', 'enum', 'cdi_direction', 'dir', ',', 'basic_block', 'bb', ',', 'int', 'depth', ')', '{', 'vec', '<', 'basic_block', '>', 'bbs', '=', 'vNULL', ';', 'unsigned', 'i', ';', 'unsigned', 'next_level_start', ';', 'i', '=', '0', ';', 'bbs', '.', 'safe_push', '(', 'bb', ')', ';', '{', 'basic_block', 'son', ';', 'bb', '=', 'bbs', '[', 'i', '++', ']', ';', 'for', '(', 'son', '=', 'first_dom_son', '(', 'dir', ',', 'bb', ')', ';', 'son', ';', 'son', '=', 'next_dom_son', '(', 'dir', ',', 'son', ')', ')', 'bbs', '.', 'safe_push', '(', 'son', ')', ';', 'if', '(', 'i', '==', 'next_level_start', '&&', '--', 'depth', ')', 'next_level_start', '=', 'bbs', '.', 'length', '(', ')', ';', '}', 'while', '(', 'i', '<', 'next_level_start', ')', ';', 'return', 'bbs', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
583,"['RefreshPortMappings', '(', ')', '{', 'for', '(', '\tPortMappingMap', ':', ':', 'iterator', 'it', '=', 'm_ActivePortMappingsMap', '.', 'begin', '(', ')', ';', 'it', '!=', 'm_ActivePortMappingsMap', '.', 'end', '(', ')', ';', '++', 'it', ')', '{', 'PrivateAddPortMapping', '(', 'it', '->', 'second', ')', ';', '}', '/', '/', 'For', 'm_WanService', '->', 'GetStateVariable', '(', '""""', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
584,"['cma_save_req_info', '(', 'const', 'struct', 'ib_cm_event', '*', 'ib_event', ',', 'struct', 'cma_req_info', '*', 'req', ')', '{', 'const', 'struct', 'ib_cm_req_event_param', '*', 'req_param', '=', '&', 'ib_event', '->', 'param', '.', 'req_rcvd', ';', 'const', 'struct', 'ib_cm_sidr_req_event_param', '*', 'sidr_param', '=', '&', 'ib_event', '->', 'param', '.', 'sidr_req_rcvd', ';', 'switch', '(', 'ib_event', '->', 'event', ')', '{', 'case', 'IB_CM_REQ_RECEIVED', ':', 'req', '->', 'device\t', '=', 'req_param', '->', 'listen_id', '->', 'device', ';', 'req', '->', 'port\t', '=', 'req_param', '->', 'port', ';', 'memcpy', '(', '&', 'req', '->', 'local_gid', ',', '&', 'req_param', '->', 'primary_path', '->', 'sgid', ',', 'sizeof', '(', 'req', '->', 'local_gid', ')', ')', ';', 'req', '->', 'has_gid\t', '=', 'true', ';', 'req', '->', 'service_id\t', '=', 'req_param', '->', 'primary_path', '->', 'service_id', ';', 'req', '->', 'pkey\t', '=', 'be16_to_cpu', '(', 'req_param', '->', 'primary_path', '->', 'pkey', ')', ';', 'break', ';', 'case', 'IB_CM_SIDR_REQ_RECEIVED', ':', 'req', '->', 'device\t', '=', 'sidr_param', '->', 'listen_id', '->', 'device', ';', 'req', '->', 'port\t', '=', 'sidr_param', '->', 'port', ';', 'req', '->', 'has_gid\t', '=', 'false', ';', 'req', '->', 'service_id\t', '=', 'sidr_param', '->', 'service_id', ';', 'req', '->', 'pkey\t', '=', 'sidr_param', '->', 'pkey', ';', 'break', ';', 'default', ':', 'return', '-', 'EINVAL', ';', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
585,"['__ecereMethod___ecereNameSpace__ecere__gui__controls__EditBox_SelectAll', '(', 'struct', '__ecereNameSpace__ecere__com__Instance', '*', 'this', ')', '{', 'struct', '__ecereNameSpace__ecere__gui__controls__EditBox', '*', '__ecerePointer___ecereNameSpace__ecere__gui__controls__EditBox', '=', '(', 'struct', '__ecereNameSpace__ecere__gui__controls__EditBox', '*', ')', '(', 'this', '?', '(', '(', '(', 'char', '*', ')', 'this', ')', '+', '__ecereClass___ecereNameSpace__ecere__gui__controls__EditBox', '->', 'offset', ')', ':', '0', ')', ';', '__ecereMethod___ecereNameSpace__ecere__gui__controls__EditBox_Select', '(', 'this', ',', '__ecerePointer___ecereNameSpace__ecere__gui__controls__EditBox', '->', 'lines', '.', 'first', ',', '0', ',', '0', ',', '__ecerePointer___ecereNameSpace__ecere__gui__controls__EditBox', '->', 'lines', '.', 'last', ',', '__ecerePointer___ecereNameSpace__ecere__gui__controls__EditBox', '->', 'lines', '.', 'count', '-', '1', ',', 'strlen', '(', '(', '(', 'struct', '__ecereNameSpace__ecere__gui__controls__EditLine', '*', ')', '__ecerePointer___ecereNameSpace__ecere__gui__controls__EditBox', '->', 'lines', '.', 'last', ')', '->', 'buffer', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
586,"['aspect_to_info', '(', 'MpegEncContext', '*', 's', ',', 'AVRational', 'aspect', ')', '{', 'int', 'i', ';', 'if', '(', 'aspect', '.', 'num', '==', '0', ')', 'aspect', '=', '(', 'AVRational', ')', '{', '1', ',', '1', '}', ';', 'for', '(', 'i', '=', '1', ';', 'i', '<', '6', ';', 'i', '++', ')', '{', 'if', '(', 'av_cmp_q', '(', 'pixel_aspect', '[', 'i', ']', ',', 'aspect', ')', '==', '0', ')', '{', 's', '->', 'aspect_ratio_info', '=', 'i', ';', 'return', ';', '}', '}', 's', '->', 'aspect_ratio_info', '=', 'FF_ASPECT_EXTENDED', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
587,"['source_registry_call_authenticate_for_source', '(', 'ESourceRegistry', '*', 'registry', ',', 'ESourceAuthenticator', '*', 'auth', ',', 'ESource', '*', 'source', ',', 'gchar', '*', '*', 'out_object_path', ',', 'GCancellable', '*', 'cancellable', ',', 'GError', '*', '*', 'error', ')', '{', 'ESource', '*', 'collection', ';', 'const', 'gchar', '*', 'uid', ';', 'gchar', '*', 'prompt_title', '=', 'NULL', ';', 'gchar', '*', 'prompt_message', '=', 'NULL', ';', 'gchar', '*', 'prompt_description', '=', 'NULL', ';', 'GError', '*', 'local_error', '=', 'NULL', ';', 'g_object_ref', '(', 'source', ')', ';', '/', '*', 'If', 'the', 'source', 'is', 'a', 'member', 'of', 'a', 'collection', ',', 'we', 'want', 'to', '*', 'the', 'password', 'under', 'the', 'UID', 'of', 'the', '""""', 'source', 'so', '*', 'will', 'apply', 'to', 'the', 'entire', 'collection', '.', '*', '*', 'XXX', 'This', 'assumes', 'all', 'sources', 'in', 'a', 'collection', 'share', 'a', '*', 'password', '.', 'If', 'that', 'turns', 'out', 'not', 'to', 'be', 'true', 'in', 'all', '*', 'we', 'could', 'maybe', 'add', 'a', '""""', 'key', '*', '[', 'Collection', ']', 'and', 'apply', 'it', 'here', '.', '*', '*', 'Addendum', ':', 'Assumption', 'proven', 'wrong', '.', ""GOA's"", 'generic', 'IMAP', '/', '*', 'provider', 'uses', 'a', 'plain', 'ECollectionBackend', '(', '*', 'name', '""""', ')', 'with', 'separately', 'stored', 'passwords', '*', 'IMAP', 'vs', 'SMTP', '.', 'Just', 'handle', 'this', 'case', 'directly', '*', 'now', ',', 'but', ""don't"", 'rule', 'out', 'the', '""""', 'idea', '.', 'collection', '=', 'e_source_registry_find_extension', '(', 'registry', ',', 'source', ',', 'E_SOURCE_EXTENSION_COLLECTION', ')', ';', 'if', '(', 'collection', '!=', 'NULL', ')', '{', 'ESourceBackend', '*', 'extension', ';', 'gchar', '*', 'backend_name', ';', 'extension', '=', 'e_source_get_extension', '(', 'collection', ',', 'E_SOURCE_EXTENSION_COLLECTION', ')', ';', 'backend_name', '=', 'e_source_backend_dup_backend_name', '(', 'extension', ')', ';', 'if', '(', 'g_strcmp0', '(', 'backend_name', ',', '""""', ')', '!=', '0', ')', '{', 'g_object_unref', '(', 'source', ')', ';', 'source', '=', 'g_object_ref', '(', 'collection', ')', ';', '}', 'g_free', '(', 'backend_name', ')', ';', 'g_object_unref', '(', 'collection', ')', ';', '}', 'uid', '=', 'e_source_get_uid', '(', 'source', ')', ';', 'e_source_authenticator_get_prompt_strings', '(', 'auth', ',', 'source', ',', '&', 'prompt_title', ',', '&', 'prompt_message', ',', '&', 'prompt_description', ')', ';', 'e_dbus_source_manager_call_authenticate_sync', '(', 'registry', '->', 'priv', '->', 'dbus_source_manager', ',', 'uid', ',', 'prompt_title', ',', 'prompt_message', ',', 'prompt_description', ',', 'out_object_path', ',', 'cancellable', ',', '&', 'local_error', ')', ';', 'g_free', '(', 'prompt_title', ')', ';', 'g_free', '(', 'prompt_message', ')', ';', 'g_free', '(', 'prompt_description', ')', ';', 'g_object_unref', '(', 'source', ')', ';', 'if', '(', 'local_error', '!=', 'NULL', ')', '{', 'g_dbus_error_strip_remote_error', '(', 'local_error', ')', ';', 'g_propagate_error', '(', 'error', ',', 'local_error', ')', ';', 'return', 'FALSE', ';', '}', 'return', 'TRUE', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
588,"['test_equal', '(', ')', '{', 'MetaRectangle', 'a', '=', '{', '10', ',', '12', ',', '4', ',', '18', '}', ';', 'MetaRectangle', 'b', '=', 'a', ';', 'MetaRectangle', 'c', '=', '{', '10', ',', '12', ',', '4', ',', '19', '}', ';', 'MetaRectangle', 'd', '=', '{', '10', ',', '12', ',', '7', ',', '18', '}', ';', 'MetaRectangle', 'e', '=', '{', '10', ',', '62', ',', '4', ',', '18', '}', ';', 'MetaRectangle', 'f', '=', '{', '27', ',', '12', ',', '4', ',', '18', '}', ';', 'g_assert', '(', 'meta_rectangle_equal', '(', '&', 'a', ',', '&', 'b', ')', ')', ';', 'g_assert', '(', '!meta_rectangle_equal', '(', '&', 'a', ',', '&', 'c', ')', ')', ';', 'g_assert', '(', '!meta_rectangle_equal', '(', '&', 'a', ',', '&', 'd', ')', ')', ';', 'g_assert', '(', '!meta_rectangle_equal', '(', '&', 'a', ',', '&', 'e', ')', ')', ';', 'g_assert', '(', '!meta_rectangle_equal', '(', '&', 'a', ',', '&', 'f', ')', ')', ';', 'printf', '(', '""""', ',', 'G_STRFUNC', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
589,"['display', '(', 'void', ')', '{', 'time_t', 'curtime', ';', 'char', 'buf', '[', '255', ']', ';', 'static', 'time_t', 'fpstime', '=', '0', ';', 'static', 'int', 'fpscount', '=', '0', ';', 'static', 'int', 'fps', '=', '0', ';', 'glClear', '(', 'GL_COLOR_BUFFER_BIT', '|', 'GL_DEPTH_BUFFER_BIT', ')', ';', 'glMatrixMode', '(', 'GL_PROJECTION', ')', ';', 'glLoadIdentity', '(', ')', ';', 'gluPerspective', '(', '60', '.', '0', ',', '(', 'GLdouble', ')', 'winwidth', '/', 'winheight', ',', '0', '.', '01', ',', '100', ')', ';', 'agvViewTransform', '(', ')', ';', 'glMatrixMode', '(', 'GL_MODELVIEW', ')', ';', 'glLoadIdentity', '(', ')', ';', 'if', '(', 'Rebuild', ')', '{', 'Create', '(', 'fractal', ')', ';', 'Rebuild', '=', '0', ';', '}', 'glCallList', '(', 'fractal', ')', ';', 'if', '(', 'DrawAxes', ')', 'glCallList', '(', 'AXES', ')', ';', 'glMatrixMode', '(', 'GL_PROJECTION', ')', ';', 'glLoadIdentity', '(', ')', ';', 'gluOrtho2D', '(', '0', '.', '0', ',', 'winwidth', ',', '0', '.', '0', ',', 'winheight', ')', ';', 'sprintf', '(', 'buf', ',', '""""', ',', 'fps', ')', ';', 'glColor3f', '(', '1', '.', '0f', ',', '1', '.', '0f', ',', '1', '.', '0f', ')', ';', 'gl_font', '(', 'FL_HELVETICA', ',', '12', ')', ';', 'gl_draw', '(', 'buf', ',', '10', ',', '10', ')', ';', '/', '/', '/', '/', 'Use', 'glFinish', '(', ')', 'instead', 'of', 'glFlush', '(', ')', 'to', 'avoid', 'getting', 'many', '/', '/', 'ahead', 'of', 'the', 'display', '(', 'problem', 'with', 'some', 'Linux', 'OpenGL', 'implementations', '.', '.', '.', ')', '/', '/', 'glFinish', '(', ')', ';', '/', '/', 'Update', 'frames', '-', 'per', '-', 'fpscount', '++', ';', 'curtime', '=', 'time', '(', 'NULL', ')', ';', 'if', '(', '(', 'curtime', '-', 'fpstime', ')', '>=', '2', ')', '{', 'fps', '=', '(', 'fps', '+', 'fpscount', '/', '(', 'curtime', '-', 'fpstime', ')', ')', '/', '2', ';', 'fpstime', '=', 'curtime', ';', 'fpscount', '=', '0', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
590,"['CFontz633_set_char', '(', 'Driver', '*', 'drvthis', ',', 'int', 'n', ',', 'unsigned', 'char', '*', 'dat', ')', '{', 'PrivateData', '*', 'p', '=', 'drvthis', '->', 'private_data', ';', 'unsigned', 'char', 'out', '[', '9', ']', ';', 'unsigned', 'char', 'mask', '=', '(', '1', '<<', 'p', '->', 'cellwidth', ')', '-', '1', ';', 'int', 'row', ';', 'if', '(', '(', 'n', '<', '0', ')', '||', '(', 'n', '>=', 'NUM_CCs', ')', ')', 'return', ';', 'if', '(', '!dat', ')', 'return', ';', 'for', '(', 'row', '=', '0', ';', 'row', '<', 'p', '->', 'cellheight', ';', 'row', '++', ')', '{', 'out', '[', 'row', '+', '1', ']', '=', 'dat', '[', 'row', ']', '&', 'mask', ';', '}', 'send_bytes_message', '(', 'p', '->', 'fd', ',', 'CF633_Set_LCD_Special_Character_Data', ',', '9', ',', 'out', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
591,"['hdb_sqlite_prepare_stmt', '(', 'krb5_context', 'context', ',', 'sqlite3', '*', 'db', ',', 'sqlite3_stmt', '*', '*', 'statement', ',', 'const', 'char', '*', 'str', ')', '{', 'int', 'ret', ',', 'tries', '=', '0', ';', 'ret', '=', 'sqlite3_prepare_v2', '(', 'db', ',', 'str', ',', '-', '1', ',', 'statement', ',', 'NULL', ')', ';', 'while', '(', '(', 'tries', '++', '<', 'MAX_RETRIES', ')', '&&', '(', '(', 'ret', '==', 'SQLITE_BUSY', ')', '||', '(', 'ret', '==', 'SQLITE_IOERR_BLOCKED', ')', '||', '(', 'ret', '==', 'SQLITE_LOCKED', ')', ')', ')', '{', 'krb5_warnx', '(', 'context', ',', '""""', ')', ';', 'sleep', '(', '1', ')', ';', 'ret', '=', 'sqlite3_prepare_v2', '(', 'db', ',', 'str', ',', '-', '1', ',', 'statement', ',', 'NULL', ')', ';', '}', 'if', '(', 'ret', '!=', 'SQLITE_OK', ')', '{', 'krb5_set_error_message', '(', 'context', ',', 'EINVAL', ',', '""""', ',', 'str', ',', 'sqlite3_errmsg', '(', 'db', ')', ')', ';', 'return', 'EINVAL', ';', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
592,"['cdbus_method_return_verify', '(', 'DBusMessage', '*', 'msg', ',', 'const', 'char', '*', '*', 'str', ')', '{', 'if', '(', '!msg', '||', 'dbus_message_get_type', '(', 'msg', ')', '!=', 'DBUS_MESSAGE_TYPE_ERROR', ')', 'return', 'true', ';', 'const', 'char', '*', 'ptr', ';', 'if', '(', '!dbus_message_get_args', '(', 'msg', ',', '&', 'cdbus_g_dbus_error', ',', 'DBUS_TYPE_STRING', ',', '&', 'ptr', ',', 'DBUS_TYPE_INVALID', ')', ')', '{', 'log_error', '(', '""""', ',', 'cdbus_g_dbus_error', '.', 'message', ')', ';', 'dbus_error_free', '(', '&', 'cdbus_g_dbus_error', ')', ';', 'ptr', '=', 'NULL', ';', '}', 'if', '(', 'str', ')', '*', 'str', '=', 'ptr', ';', 'return', 'false', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
593,"['tcsd_threads_final', '(', ')', '{', 'int', 'rc', ';', 'UINT32', 'i', ';', 'MUTEX_LOCK', '(', 'tm', '->', 'lock', ')', ';', 'tm', '->', 'shutdown', '=', '1', ';', 'MUTEX_UNLOCK', '(', 'tm', '->', 'lock', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'tm', '->', 'max_threads', ';', 'i', '++', ')', '{', 'if', '(', 'tm', '->', 'thread_data', '[', 'i', ']', '.', 'thread_id', '!=', 'THREAD_NULL', ')', '{', 'if', '(', '(', 'rc', '=', 'THREAD_JOIN', '(', '*', '(', 'tm', '->', 'thread_data', '[', 'i', ']', '.', 'thread_id', ')', ',', 'NULL', ')', ')', ')', '{', 'LogError', '(', '""""', ',', 'rc', ')', ';', '}', '}', '}', 'free', '(', 'tm', '->', 'thread_data', ')', ';', 'free', '(', 'tm', ')', ';', 'return', 'TSS_SUCCESS', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
594,"['ssh_srv_pki_do_sign_sessionid', '(', 'ssh_session', 'session', ',', 'const', 'ssh_key', 'privkey', ')', '{', 'struct', 'ssh_crypto_struct', '*', 'crypto', ';', 'unsigned', 'char', 'hash', '[', 'SHA_DIGEST_LEN', ']', '=', '{', '0', '}', ';', 'ssh_signature', 'sig', ';', 'ssh_string', 'sig_blob', ';', 'SHACTX', 'ctx', ';', 'int', 'rc', ';', 'if', '(', 'session', '==', 'NULL', '||', 'privkey', '==', 'NULL', '||', '!ssh_key_is_private', '(', 'privkey', ')', ')', '{', 'return', 'NULL', ';', '}', 'crypto', '=', 'session', '->', 'next_crypto', '?', 'session', '->', 'next_crypto', ':', 'session', '->', 'current_crypto', ';', 'ctx', '=', 'sha1_init', '(', ')', ';', 'if', '(', 'ctx', '==', 'NULL', ')', '{', 'return', 'NULL', ';', '}', 'if', '(', 'crypto', '->', 'secret_hash', '==', 'NULL', ')', '{', 'ssh_set_error', '(', 'session', ',', 'SSH_FATAL', ',', '""""', ')', ';', 'return', 'NULL', ';', '}', 'sha1_update', '(', 'ctx', ',', 'crypto', '->', 'secret_hash', ',', 'crypto', '->', 'digest_len', ')', ';', 'sha1_final', '(', 'hash', ',', 'ctx', ')', ';', '#ifdef', 'ssh_print_hexa', '(', '""""', ',', 'hash', ',', 'SHA_DIGEST_LEN', ')', ';', 'sig', '=', 'pki_do_sign_sessionid', '(', 'privkey', ',', 'hash', ',', 'SHA_DIGEST_LEN', ')', ';', 'if', '(', 'sig', '==', 'NULL', ')', '{', 'return', 'NULL', ';', '}', 'rc', '=', 'ssh_pki_export_signature_blob', '(', 'sig', ',', '&', 'sig_blob', ')', ';', 'ssh_signature_free', '(', 'sig', ')', ';', 'if', '(', 'rc', '<', '0', ')', '{', 'return', 'NULL', ';', '}', 'return', 'sig_blob', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
595,"['get_timeout_interval', '(', 'void', ')', '{', 'const', 'char', '*', 'svalue', ';', 'get_pref', '(', 'PREF_TIME', ',', 'NULL', ',', '&', 'svalue', ')', ';', 'if', '(', 'strstr', '(', 'svalue', ',', '""""', ')', ')', 'return', 'CLOCK_TICK', ';', 'return', '60', '*', 'CLOCK_TICK', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
596,"['Do', '(', 'OBBase', '*', 'pOb', ',', 'const', 'char', '*', 'OptionText', ',', 'OpMap', '*', 'pmap', ',', 'OBConversion', '*', 'pConv', '=', 'NULL', ')', '{', 'OBMol', '*', 'pmol', '=', 'dynamic_cast', '<', 'OBMol', '*', '>', '(', 'pOb', ')', ';', 'if', '(', '!pmol', ')', 'return', 'false', ';', 'if', '(', 'pConv', '->', 'IsFirstInput', '(', ')', ')', '{', 'pConv', '->', 'AddOption', '(', '""""', ',', 'OBConversion', ':', ':', 'GENOPTIONS', ')', ';', 'rmsd_cutoff', '=', '0', '.', '5', ';', 'energy_cutoff', '=', '50', '.', '0', ';', 'conf_cutoff', '=', '1000000', ';', '/', '/', '1', 'verbose', '=', 'false', ';', 'include_original', '=', 'false', ';', 'OpMap', ':', ':', 'const_iterator', 'iter', ';', 'iter', '=', 'pmap', '->', 'find', '(', '""""', ')', ';', 'if', '(', 'iter', '!=', 'pmap', '->', 'end', '(', ')', ')', 'rmsd_cutoff', '=', 'atof', '(', 'iter', '->', 'second', '.', 'c_str', '(', ')', ')', ';', 'iter', '=', 'pmap', '->', 'find', '(', '""""', ')', ';', 'if', '(', 'iter', '!=', 'pmap', '->', 'end', '(', ')', ')', 'energy_cutoff', '=', 'atof', '(', 'iter', '->', 'second', '.', 'c_str', '(', ')', ')', ';', 'iter', '=', 'pmap', '->', 'find', '(', '""""', ')', ';', 'if', '(', 'iter', '!=', 'pmap', '->', 'end', '(', ')', ')', 'conf_cutoff', '=', 'atoi', '(', 'iter', '->', 'second', '.', 'c_str', '(', ')', ')', ';', 'iter', '=', 'pmap', '->', 'find', '(', '""""', ')', ';', 'if', '(', 'iter', '!=', 'pmap', '->', 'end', '(', ')', ')', 'verbose', '=', 'true', ';', 'iter', '=', 'pmap', '->', 'find', '(', '""""', ')', ';', 'if', '(', 'iter', '!=', 'pmap', '->', 'end', '(', ')', ')', 'include_original', '=', 'true', ';', 'cout', '<<', '""""', '<<', 'CONFAB_VER', '<<', '""""', ';', 'cout', '<<', '""""', ';', 'pff', '=', 'OpenBabel', ':', ':', 'OBForceField', ':', ':', 'FindType', '(', '""""', ')', ';', 'if', '(', '!pff', ')', '{', 'cout', '<<', '""""', '<<', 'endl', ';', 'exit', '(', '-', '1', ')', ';', '}', 'DisplayConfig', '(', 'pConv', ')', ';', '}', 'Run', '(', 'pConv', ',', 'pmol', ')', ';', 'return', 'false', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
597,"['drxk_read_ucblocks', '(', 'struct', 'dvb_frontend', '*', 'fe', ',', 'u32', '*', 'ucblocks', ')', '{', 'struct', 'drxk_state', '*', 'state', '=', 'fe', '->', 'demodulator_priv', ';', 'u16', 'err', ';', 'dprintk', '(', '1', ',', '""""', ')', ';', 'if', '(', 'state', '->', 'm_drxk_state', '==', 'DRXK_NO_DEV', ')', 'return', '-', 'ENODEV', ';', 'if', '(', 'state', '->', 'm_drxk_state', '==', 'DRXK_UNINITIALIZED', ')', 'return', '-', 'EAGAIN', ';', 'dvbtqam_get_acc_pkt_err', '(', 'state', ',', '&', 'err', ')', ';', '*', 'ucblocks', '=', '(', 'u32', ')', 'err', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
598,"['getAllNames', '(', ')', '{', 'OFVector', '<', 'tstring', '>', 'tmp', ';', '{', 'thread', ':', ':', 'MutexGuard', 'guard', '(', 'mutex', ')', ';', 'for', '(', 'ObjectMap', ':', ':', 'const_iterator', 'it', '=', 'data', '.', 'begin', '(', ')', ';', 'it', '!=', 'data', '.', 'end', '(', ')', ';', '++', 'it', ')', 'tmp', '.', 'push_back', '(', '(', '*', 'it', ')', '.', 'first', ')', ';', '}', 'return', 'tmp', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
599,"['checkSizes', '(', 'lua_State', '*', 'L', ',', 'global_State', '*', 'g', ')', '{', 'if', '(', 'g', '->', 'gckind', '!=', 'KGC_EMERGENCY', ')', '{', 'l_mem', 'olddebt', '=', 'g', '->', 'GCdebt', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
600,"['poly_basis_fn', '(', 'ssize_t', 'n', ',', 'double', 'x', ',', 'double', 'y', ')', '{', 'switch', '(', 'n', ')', '{', 'case', '1', ':', 'return', '(', 'x', ')', ';', 'case', '4', ':', 'return', '(', 'x', '*', 'x', ')', ';', 'case', '6', ':', 'return', '(', 'x', '*', 'x', '*', 'x', ')', ';', 'case', '7', ':', 'return', '(', 'x', '*', 'x', '*', 'y', ')', ';', 'case', '8', ':', 'return', '(', 'x', '*', 'y', '*', 'y', ')', ';', 'case', '10', ':', 'return', '(', 'x', '*', 'x', '*', 'x', '*', 'x', ')', ';', 'case', '11', ':', 'return', '(', 'x', '*', 'x', '*', 'x', '*', 'y', ')', ';', 'case', '12', ':', 'return', '(', 'x', '*', 'x', '*', 'y', '*', 'y', ')', ';', 'case', '13', ':', 'return', '(', 'x', '*', 'y', '*', 'y', '*', 'y', ')', ';', 'case', '15', ':', 'return', '(', 'x', '*', 'x', '*', 'x', '*', 'x', '*', 'x', ')', ';', 'case', '16', ':', 'return', '(', 'x', '*', 'x', '*', 'x', '*', 'x', '*', 'y', ')', ';', 'case', '17', ':', 'return', '(', 'x', '*', 'x', '*', 'x', '*', 'y', '*', 'y', ')', ';', 'case', '18', ':', 'return', '(', 'x', '*', 'x', '*', 'y', '*', 'y', '*', 'y', ')', ';', 'case', '19', ':', 'return', '(', 'x', '*', 'y', '*', 'y', '*', 'y', '*', 'y', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
601,"['gfarm_base_host_info_validate', '(', 'void', '*', 'vinfo', ')', '{', 'struct', 'gfarm_host_info', '*', 'info', '=', 'vinfo', ';', 'return', '(', 'info', '->', 'hostname', '!=', 'NULL', '&&', 'info', '->', 'architecture', '!=', 'NULL', '&&', 'info', '->', 'ncpu', '!=', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
602,"['score_knights', '(', 'Color', 'side', ')', '{', 'int', 'score', '=', '0', ';', 'Square', 'sq', ';', 'Bitboard', 'knights', '=', 'board', '->', 'get_knights', '(', 'side', ')', ';', 'while', '(', 'knights', ')', '{', 'sq', '=', 'knights', '.', 'firstbit', '(', ')', ';', 'knights', '.', 'clearbit', '(', 'sq', ')', ';', 'score', '+=', 'knight_scores', '[', 'sq', ']', ';', '#ifdef', 'Bitboard', 'ka', '=', 'board', '->', 'knight_attacks', '(', 'sq', ')', '&', '~board', '->', 'get_pieces', '(', 'side', ')', ';', 'score', '+=', 'ka', '.', 'popcnt', '(', ')', '*', 'EVAL_KNIGHTMOBILITY', ';', '#ifdef', 'if', '(', 'pinned_on_king', '[', 'side', ']', '.', 'testbit', '(', 'sq', ')', ')', '{', 'score', '+=', 'EVAL_PINNEDKNIGHT', ';', '}', '}', 'return', 'score', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
603,"['do_static_branch', '(', 'VerifyContext', '*', 'ctx', ',', 'int', 'delta', ')', '{', 'int', 'target', '=', 'ctx', '->', 'ip_offset', '+', 'delta', ';', 'if', '(', 'target', '<', '0', '||', 'target', '>=', 'ctx', '->', 'code_size', ')', '{', 'ADD_VERIFY_ERROR', '(', 'ctx', ',', 'g_strdup_printf', '(', '""""', ',', 'ctx', '->', 'ip_offset', ')', ')', ';', 'return', ';', '}', 'switch', '(', 'is_valid_branch_instruction', '(', 'ctx', '->', 'header', ',', 'ctx', '->', 'ip_offset', ',', 'target', ')', ')', '{', 'case', '1', ':', 'CODE_NOT_VERIFIABLE', '(', 'ctx', ',', 'g_strdup_printf', '(', '""""', ',', 'ctx', '->', 'ip_offset', ')', ')', ';', 'break', ';', 'case', '2', ':', 'ADD_VERIFY_ERROR', '(', 'ctx', ',', 'g_strdup_printf', '(', '""""', ',', 'ctx', '->', 'ip_offset', ')', ')', ';', 'break', ';', '}', 'ctx', '->', 'target', '=', 'target', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
604,"['sha1', '(', 'const', 'QString', '&', 'string', ')', '{', 'QByteArray', 'hashData', '=', 'QCryptographicHash', ':', ':', 'hash', '(', 'string', '.', 'toUtf8', '(', ')', ',', 'QCryptographicHash', ':', ':', 'Sha1', ')', ';', 'return', 'hashData', '.', 'toHex', '(', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
605,"['deleteAll', '(', 'void', ')', '{', 'xxx_UT_DEBUGMSG', '(', '(', '""""', ')', ')', ';', '/', '/', 'Remove', 'any', 'existing', 'squiggles', 'from', 'the', 'screen', '.', '.', '.', 'UT_sint32', 'iSquiggles', '=', '_getCount', '(', ')', ';', 'UT_sint32', 'j', ';', 'for', '(', 'j', '=', 'iSquiggles', '-', '1', ';', 'j', '>=', '0', ';', 'j', '--', ')', '{', '_deleteNth', '(', 'j', ')', ';', '}', 'return', '(', '0', '==', 'iSquiggles', ')', '?', 'false', ':', 'true', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
606,"['Realloc', '(', 'int', 'size', ')', '{', 'if', '(', 'size', '==', 'm_len', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'size', '==', '0', ')', '{', 'delete', '[', ']', 'm_buff', ';', 'm_buff', '=', '0', ';', 'm_len', '=', '0', ';', 'return', 'true', ';', '}', 'uint8', '*', 'buff', '=', 'new', 'uint8', '[', 'size', ']', ';', 'if', '(', 'm_len', '==', '0', ')', '{', 'memset', '(', 'buff', ',', '0', ',', 'size', ')', ';', '}', 'else', 'if', '(', 'size', '>', 'm_len', ')', '{', 'memset', '(', 'buff', '+', 'm_len', ',', '0', ',', 'size', '-', 'm_len', ')', ';', 'memcpy', '(', 'buff', ',', 'm_buff', ',', 'm_len', ')', ';', '}', 'else', '{', 'memcpy', '(', 'buff', ',', 'm_buff', ',', 'size', ')', ';', '}', 'delete', '[', ']', 'm_buff', ';', 'm_buff', '=', 'buff', ';', 'm_len', '=', 'size', ';', 'return', 'true', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
607,"['load_gen', '(', 'int', 'size', ',', 'SFBags', '*', 'bagp', ',', 'FILE', '*', 'fd', ')', '{', 'int', 'i', ';', 'size', '/=', '4', ';', 'bagp', '->', 'gen', '=', 'NEW', '(', 'SFGenRec', ',', 'size', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'size', ';', 'i', '++', ')', '{', 'READW', '(', 'bagp', '->', 'gen', '[', 'i', ']', '.', 'oper', ',', 'fd', ')', ';', 'READW', '(', 'bagp', '->', 'gen', '[', 'i', ']', '.', 'amount', ',', 'fd', ')', ';', '}', 'bagp', '->', 'ngens', '=', 'size', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
608,"['__ecereProp___ecereNameSpace__ecere__gui__controls__EditBox_Set_noCaret', '(', 'struct', '__ecereNameSpace__ecere__com__Instance', '*', 'this', ',', 'unsigned', 'int', 'value', ')', '{', 'struct', '__ecereNameSpace__ecere__gui__controls__EditBox', '*', '__ecerePointer___ecereNameSpace__ecere__gui__controls__EditBox', '=', '(', 'struct', '__ecereNameSpace__ecere__gui__controls__EditBox', '*', ')', '(', 'this', '?', '(', '(', '(', 'char', '*', ')', 'this', ')', '+', '__ecereClass___ecereNameSpace__ecere__gui__controls__EditBox', '->', 'offset', ')', ':', '0', ')', ';', '__ecerePointer___ecereNameSpace__ecere__gui__controls__EditBox', '->', 'style', '=', '(', '__ecerePointer___ecereNameSpace__ecere__gui__controls__EditBox', '->', 'style', '&', '~0x200', ')', '|', '(', '(', '(', 'unsigned', 'int', ')', 'value', ')', '<<', '9', ')', ';', 'if', '(', 'value', ')', '{', '__ecerePointer___ecereNameSpace__ecere__gui__controls__EditBox', '->', 'style', '=', '(', '__ecerePointer___ecereNameSpace__ecere__gui__controls__EditBox', '->', 'style', '&', '~0x2', ')', '|', '(', '(', '(', 'unsigned', 'int', ')', '0x1', ')', '<<', '1', ')', ';', '__ecerePointer___ecereNameSpace__ecere__gui__controls__EditBox', '->', 'style', '=', '(', '__ecerePointer___ecereNameSpace__ecere__gui__controls__EditBox', '->', 'style', '&', '~0x8', ')', '|', '(', '(', '(', 'unsigned', 'int', ')', '0x1', ')', '<<', '3', ')', ';', '}', '__ecereNameSpace__ecere__com__eInstance_FireSelfWatchers', '(', 'this', ',', '__ecereProp___ecereNameSpace__ecere__gui__controls__EditBox_noCaret', ')', ',', '__ecereNameSpace__ecere__com__eInstance_FireSelfWatchers', '(', 'this', ',', '__ecerePropM___ecereNameSpace__ecere__gui__controls__EditBox_noCaret', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
609,"['container_add_actor', '(', 'ClutterContainer', '*', 'container', ',', 'ClutterActor', '*', 'actor', ')', '{', 'ClutterActor', '*', 'parent', ';', 'parent', '=', 'clutter_actor_get_parent', '(', 'actor', ')', ';', 'if', '(', 'G_UNLIKELY', '(', 'parent', '!=', 'NULL', ')', ')', '{', 'g_warning', '(', '""""', ',', 'g_type_name', '(', 'G_OBJECT_TYPE', '(', 'actor', ')', ')', ',', 'g_type_name', '(', 'G_OBJECT_TYPE', '(', 'container', ')', ')', ',', 'g_type_name', '(', 'G_OBJECT_TYPE', '(', 'parent', ')', ')', ')', ';', 'return', ';', '}', 'clutter_container_create_child_meta', '(', 'container', ',', 'actor', ')', ';', '#ifdef', 'if', '(', 'G_UNLIKELY', '(', '_clutter_diagnostic_enabled', '(', ')', ')', ')', '{', 'ClutterContainerIface', '*', 'iface', '=', 'CLUTTER_CONTAINER_GET_IFACE', '(', 'container', ')', ';', 'if', '(', 'iface', '->', 'add', '!=', 'container_real_add', ')', '_clutter_diagnostic_message', '(', '""""', ')', ';', '}', 'CLUTTER_CONTAINER_GET_IFACE', '(', 'container', ')', '->', 'add', '(', 'container', ',', 'actor', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
610,"['mhdriver_cached_expunge_folder', '(', 'mailsession', '*', 'session', ')', '{', 'struct', 'mailmh_folder', '*', 'folder', ';', 'int', 'res', ';', 'char', 'filename_flags', '[', 'PATH_MAX', ']', ';', 'struct', 'mail_cache_db', '*', 'cache_db_flags', ';', 'MMAPString', '*', 'mmapstr', ';', 'struct', 'mh_cached_session_state_data', '*', 'cached_data', ';', 'unsigned', 'int', 'i', ';', 'int', 'r', ';', 'cached_data', '=', 'get_cached_data', '(', 'session', ')', ';', 'if', '(', 'cached_data', '->', 'mh_quoted_mb', '==', 'NULL', ')', '{', 'res', '=', 'MAIL_ERROR_BAD_STATE', ';', 'goto', 'err', ';', '}', 'mh_flags_store_process', '(', 'cached_data', '->', 'mh_flags_directory', ',', 'cached_data', '->', 'mh_quoted_mb', ',', 'cached_data', '->', 'mh_flags_store', ')', ';', 'folder', '=', 'get_mh_cur_folder', '(', 'session', ')', ';', 'if', '(', 'folder', '==', 'NULL', ')', '{', 'res', '=', 'MAIL_ERROR_BAD_STATE', ';', 'goto', 'err', ';', '}', 'snprintf', '(', 'filename_flags', ',', 'PATH_MAX', ',', '""""', ',', 'cached_data', '->', 'mh_flags_directory', ',', 'cached_data', '->', 'mh_quoted_mb', ',', 'FLAGS_NAME', ')', ';', 'r', '=', 'mail_cache_db_open_lock', '(', 'filename_flags', ',', '&', 'cache_db_flags', ')', ';', 'if', '(', 'r', '<', '0', ')', '{', 'res', '=', 'MAIL_ERROR_FILE', ';', 'goto', 'err', ';', '}', 'mmapstr', '=', 'mmap_string_new', '(', '""""', ')', ';', 'if', '(', 'mmapstr', '==', 'NULL', ')', '{', 'res', '=', 'MAIL_ERROR_MEMORY', ';', 'goto', 'close_db_flags', ';', '}', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'carray_count', '(', 'folder', '->', 'fl_msgs_tab', ')', ';', 'i', '++', ')', '{', 'struct', 'mailmh_msg_info', '*', 'mh_info', ';', 'struct', 'mail_flags', '*', 'flags', ';', 'mh_info', '=', 'carray_get', '(', 'folder', '->', 'fl_msgs_tab', ',', 'i', ')', ';', 'if', '(', 'mh_info', '==', 'NULL', ')', 'continue', ';', 'r', '=', 'mhdriver_get_cached_flags', '(', 'cache_db_flags', ',', 'mmapstr', ',', 'session', ',', 'mh_info', '->', 'msg_index', ',', '&', 'flags', ')', ';', 'if', '(', 'r', '!=', 'MAIL_NO_ERROR', ')', 'continue', ';', 'if', '(', 'flags', '->', 'fl_flags', '&', 'MAIL_FLAG_DELETED', ')', '{', 'r', '=', 'mailmh_folder_remove_message', '(', 'folder', ',', 'mh_info', '->', 'msg_index', ')', ';', '}', 'mail_flags_free', '(', 'flags', ')', ';', '}', 'mmap_string_free', '(', 'mmapstr', ')', ';', 'mail_cache_db_close_unlock', '(', 'filename_flags', ',', 'cache_db_flags', ')', ';', 'mailmh_folder_update', '(', 'folder', ')', ';', 'return', 'MAIL_NO_ERROR', ';', 'close_db_flags', ':', 'mail_cache_db_close_unlock', '(', 'filename_flags', ',', 'cache_db_flags', ')', ';', 'err', ':', 'return', 'res', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
611,"['ompit_var_type_to_datatype', '(', 'mca_base_var_type_t', 'type', ',', 'MPI_Datatype', '*', 'datatype', ')', '{', 'switch', '(', 'type', ')', '{', 'case', 'MCA_BASE_VAR_TYPE_INT', ':', '*', 'datatype', '=', 'MPI_INT', ';', 'break', ';', 'case', 'MCA_BASE_VAR_TYPE_UNSIGNED_INT', ':', '*', 'datatype', '=', 'MPI_UNSIGNED', ';', 'break', ';', 'case', 'MCA_BASE_VAR_TYPE_UNSIGNED_LONG', ':', '*', 'datatype', '=', 'MPI_UNSIGNED_LONG', ';', 'break', ';', 'case', 'MCA_BASE_VAR_TYPE_UNSIGNED_LONG_LONG', ':', '*', 'datatype', '=', 'MPI_UNSIGNED_LONG_LONG', ';', 'break', ';', 'case', 'MCA_BASE_VAR_TYPE_SIZE_T', ':', 'if', '(', 'sizeof', '(', 'size_t', ')', '==', 'sizeof', '(', 'unsigned', ')', ')', '{', '*', 'datatype', '=', 'MPI_UNSIGNED', ';', '}', 'else', 'if', '(', 'sizeof', '(', 'size_t', ')', '==', 'sizeof', '(', 'unsigned', 'long', ')', ')', '{', '*', 'datatype', '=', 'MPI_UNSIGNED_LONG', ';', '}', 'else', 'if', '(', 'sizeof', '(', 'size_t', ')', '==', 'sizeof', '(', 'unsigned', 'long', 'long', ')', ')', '{', '*', 'datatype', '=', 'MPI_UNSIGNED_LONG_LONG', ';', '}', 'else', '{', 'assert', '(', '0', ')', ';', '}', 'break', ';', 'case', 'MCA_BASE_VAR_TYPE_STRING', ':', '*', 'datatype', '=', 'MPI_CHAR', ';', 'break', ';', 'case', 'MCA_BASE_VAR_TYPE_BOOL', ':', 'if', '(', 'sizeof', '(', 'bool', ')', '==', 'sizeof', '(', 'char', ')', ')', '{', '*', 'datatype', '=', 'MPI_CHAR', ';', '}', 'else', 'if', '(', 'sizeof', '(', 'bool', ')', '==', 'sizeof', '(', 'int', ')', ')', '{', '*', 'datatype', '=', 'MPI_INT', ';', '}', 'else', '{', 'assert', '(', '0', ')', ';', '}', 'break', ';', 'case', 'MCA_BASE_VAR_TYPE_DOUBLE', ':', '*', 'datatype', '=', 'MPI_DOUBLE', ';', 'break', ';', 'default', ':', 'assert', '(', '0', ')', ';', 'break', ';', '}', 'return', 'OMPI_SUCCESS', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
612,"['ojc_to_str', '(', 'ojcVal', 'val', ',', 'int', 'indent', ')', '{', 'struct', '_Buf\tb', ';', 'buf_init', '(', '&', 'b', ',', '0', ')', ';', 'fill_buf', '(', '&', 'b', ',', 'val', ',', 'indent', ',', '0', ')', ';', 'if', '(', 'OJC_OK', '!=', 'b', '.', 'err', ')', '{', 'return', '0', ';', '}', '*', 'b', '.', 'tail', '=', ""''"", ';', 'if', '(', 'b', '.', 'base', '==', 'b', '.', 'head', ')', '{', 'return', 'strdup', '(', 'b', '.', 'head', ')', ';', '}', 'return', 'b', '.', 'head', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
613,"['LookupInputChannel', '(', 'word32', 'channelId', ')', '{', 'map', '<', 'word32', ',', 'unsigned', 'int', '>', ':', ':', 'const_iterator', 'it', '=', 'm_inputChannelMap', '.', 'find', '(', 'channelId', ')', ';', 'if', '(', 'it', '==', 'm_inputChannelMap', '.', 'end', '(', ')', ')', 'return', 'm_threshold', ';', 'return', 'it', '->', 'second', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
614,"['Seeder_WordInfo_add_Seed', '(', 'Seeder', '*', 'seeder', ',', 'Seeder_WordInfo', '*', 'word_info', ',', 'Seeder_Context', '*', 'context', ',', 'Match_Score', 'query_expect', ',', 'gint', 'qpos', ')', '{', 'register', 'Seeder_Seed', '*', 'seed', ';', 'g_assert', '(', 'word_info', ')', ';', 'if', '(', 'seeder', '->', 'saturate_threshold', ')', '{', 'return', ';', 'if', '(', '++', 'word_info', '->', 'match_count', '>', 'query_expect', ')', '{', 'Seeder_WordInfo_empty', '(', 'seeder', ',', 'word_info', ')', ';', 'return', ';', '}', '}', 'seed', '=', 'RecycleBin_alloc', '(', 'seeder', '->', 'recycle_seed', ')', ';', 'seed', '->', 'next', '=', 'word_info', '->', 'seed_list', ';', 'seed', '->', 'query_pos', '=', 'qpos', ';', 'seed', '->', 'context', '=', 'context', ';', 'word_info', '->', 'seed_list', '=', 'seed', ';', 'return', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
615,"['numeric_uminus', '(', 'PG_FUNCTION_ARGS', ')', '{', 'Numeric\t\tnum', '=', 'PG_GETARG_NUMERIC', '(', '0', ')', ';', 'Numeric\t\tres', ';', '/', '*', '*', 'Handle', 'if', '(', 'NUMERIC_IS_NAN', '(', 'num', ')', ')', 'PG_RETURN_NUMERIC', '(', 'make_result', '(', '&', 'const_nan', ')', ')', ';', '/', '*', '*', 'Do', 'it', 'the', 'easy', 'way', 'directly', 'on', 'the', 'packed', 'res', '=', '(', 'Numeric', ')', 'palloc', '(', 'VARSIZE', '(', 'num', ')', ')', ';', 'memcpy', '(', 'res', ',', 'num', ',', 'VARSIZE', '(', 'num', ')', ')', ';', '/', '*', '*', 'The', 'packed', 'format', 'is', 'known', 'to', 'be', 'totally', 'zero', 'digit', 'trimmed', 'always', '.', '*', 'we', 'can', 'identify', 'a', 'ZERO', 'by', 'the', 'fact', 'that', 'there', 'are', 'no', 'digits', 'at', 'all', '.', '*', 'nothing', 'to', 'a', 'zero', '.', 'if', '(', 'VARSIZE', '(', 'num', ')', '!=', 'NUMERIC_HDRSZ', ')', '{', 'if', '(', 'NUMERIC_SIGN', '(', 'num', ')', '==', 'NUMERIC_POS', ')', 'res', '->', 'n_sign_dscale', '=', 'NUMERIC_NEG', '|', 'NUMERIC_DSCALE', '(', 'num', ')', ';', 'res', '->', 'n_sign_dscale', '=', 'NUMERIC_POS', '|', 'NUMERIC_DSCALE', '(', 'num', ')', ';', '}', 'PG_RETURN_NUMERIC', '(', 'res', ')', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
616,"['ft_stroke_border_export', '(', 'FT_StrokeBorder', 'border', ',', 'FT_Outline', '*', 'outline', ')', '{', 'FT_ARRAY_COPY', '(', 'outline', '->', 'points', '+', 'outline', '->', 'n_points', ',', 'border', '->', 'points', ',', 'border', '->', 'num_points', ')', ';', '{', 'FT_UInt', 'count', '=', 'border', '->', 'num_points', ';', 'FT_Byte', '*', 'read', '=', 'border', '->', 'tags', ';', 'FT_Byte', '*', 'write', '=', '(', 'FT_Byte', '*', ')', 'outline', '->', 'tags', '+', 'outline', '->', 'n_points', ';', 'for', '(', ';', 'count', '>', '0', ';', 'count', '--', ',', 'read', '++', ',', 'write', '++', ')', '{', 'if', '(', '*', 'read', '&', 'FT_STROKE_TAG_ON', ')', '*', 'write', '=', 'FT_CURVE_TAG_ON', ';', 'else', 'if', '(', '*', 'read', '&', 'FT_STROKE_TAG_CUBIC', ')', '*', 'write', '=', 'FT_CURVE_TAG_CUBIC', ';', '*', 'write', '=', 'FT_CURVE_TAG_CONIC', ';', '}', '}', '{', 'FT_UInt', 'count', '=', 'border', '->', 'num_points', ';', 'FT_Byte', '*', 'tags', '=', 'border', '->', 'tags', ';', 'FT_Short', '*', 'write', '=', 'outline', '->', 'contours', '+', 'outline', '->', 'n_contours', ';', 'FT_Short', 'idx', '=', '(', 'FT_Short', ')', 'outline', '->', 'n_points', ';', 'for', '(', ';', 'count', '>', '0', ';', 'count', '--', ',', 'tags', '++', ',', 'idx', '++', ')', '{', 'if', '(', '*', 'tags', '&', 'FT_STROKE_TAG_END', ')', '{', '*', 'write', '++', '=', 'idx', ';', 'outline', '->', 'n_contours', '++', ';', '}', '}', '}', 'outline', '->', 'n_points', '+=', '(', 'short', ')', 'border', '->', 'num_points', ';', 'FT_ASSERT', '(', 'FT_Outline_Check', '(', 'outline', ')', '==', '0', ')', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
617,"['_nrrdCopy', '(', 'Nrrd', '*', 'nout', ',', 'const', 'Nrrd', '*', 'nin', ',', 'int', 'bitflag', ')', '{', 'static', 'const', 'char', 'me', '[', ']', '=', '""""', ';', 'size_t', 'size', '[', 'NRRD_DIM_MAX', ']', ';', 'if', '(', '!', '(', 'nin', '&&', 'nout', ')', ')', '{', 'biffAddf', '(', 'NRRD', ',', '""""', ',', 'me', ')', ';', 'return', '1', ';', '}', 'if', '(', 'nout', '==', 'nin', ')', '{', '/', '*', 'its', 'not', 'the', 'case', 'that', 'we', 'have', 'nothing', 'to', 'do', '-', 'the', 'semantics', 'copying', 'cannot', 'be', 'achieved', 'if', 'the', 'input', 'and', 'output', 'nrrd', 'biffAddf', '(', 'NRRD', ',', '""""', ',', 'me', ')', ';', 'return', '1', ';', '}', 'if', '(', '!nrrdElementSize', '(', 'nin', ')', ')', '{', 'biffAddf', '(', 'NRRD', ',', '""""', ',', 'me', ')', ';', 'return', '1', ';', '}', 'nrrdAxisInfoGet_nva', '(', 'nin', ',', 'nrrdAxisInfoSize', ',', 'size', ')', ';', 'if', '(', 'nin', '->', 'data', ')', '{', 'if', '(', 'nrrdMaybeAlloc_nva', '(', 'nout', ',', 'nin', '->', 'type', ',', 'nin', '->', 'dim', ',', 'size', ')', ')', '{', 'biffAddf', '(', 'NRRD', ',', '""""', ',', 'me', ')', ';', 'return', '1', ';', '}', 'memcpy', '(', 'nout', '->', 'data', ',', 'nin', '->', 'data', ',', 'nrrdElementNumber', '(', 'nin', ')', '*', 'nrrdElementSize', '(', 'nin', ')', ')', ';', '}', 'else', '{', 'if', '(', 'nrrdWrap_nva', '(', 'nout', ',', 'NULL', ',', 'nin', '->', 'type', ',', 'nin', '->', 'dim', ',', 'size', ')', ')', '{', 'biffAddf', '(', 'NRRD', ',', '""""', ',', 'me', ')', ';', 'return', '1', ';', '}', '}', 'nrrdAxisInfoCopy', '(', 'nout', ',', 'nin', ',', 'NULL', ',', 'NRRD_AXIS_INFO_SIZE_BIT', ')', ';', '/', '*', 'if', 'nin', '->', 'data', 'non', '-', 'NULL', '(', 'second', 'branch', 'above', ')', ',', 'this', 'nrrdBasicInfoInit', '(', 'nout', ',', 'NRRD_BASIC_INFO_DATA_BIT', '|', 'bitflag', ')', ';', 'if', '(', 'nrrdBasicInfoCopy', '(', 'nout', ',', 'nin', ',', 'NRRD_BASIC_INFO_DATA_BIT', '|', 'bitflag', ')', ')', '{', 'biffAddf', '(', 'NRRD', ',', '""""', ',', 'me', ')', ';', 'return', '1', ';', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
618,"['ce_write_entry', '(', 'git_SHA_CTX', '*', 'c', ',', 'int', 'fd', ',', 'struct', 'cache_entry', '*', 'ce', ')', '{', 'int', 'size', '=', 'ondisk_ce_size', '(', 'ce', ')', ';', 'struct', 'ondisk_cache_entry', '*', 'ondisk', '=', 'xcalloc', '(', '1', ',', 'size', ')', ';', 'char', '*', 'name', ';', 'int', 'result', ';', 'ondisk', '->', 'ctime', '.', 'sec', '=', 'htonl', '(', 'ce', '->', 'ce_ctime', '.', 'sec', ')', ';', 'ondisk', '->', 'mtime', '.', 'sec', '=', 'htonl', '(', 'ce', '->', 'ce_mtime', '.', 'sec', ')', ';', 'ondisk', '->', 'ctime', '.', 'nsec', '=', 'htonl', '(', 'ce', '->', 'ce_ctime', '.', 'nsec', ')', ';', 'ondisk', '->', 'mtime', '.', 'nsec', '=', 'htonl', '(', 'ce', '->', 'ce_mtime', '.', 'nsec', ')', ';', 'ondisk', '->', 'dev', '=', 'htonl', '(', 'ce', '->', 'ce_dev', ')', ';', 'ondisk', '->', 'ino', '=', 'htonl', '(', 'ce', '->', 'ce_ino', ')', ';', 'ondisk', '->', 'mode', '=', 'htonl', '(', 'ce', '->', 'ce_mode', ')', ';', 'ondisk', '->', 'uid', '=', 'htonl', '(', 'ce', '->', 'ce_uid', ')', ';', 'ondisk', '->', 'gid', '=', 'htonl', '(', 'ce', '->', 'ce_gid', ')', ';', 'ondisk', '->', 'size', '=', 'htonl', '(', 'ce', '->', 'ce_size', ')', ';', 'hashcpy', '(', 'ondisk', '->', 'sha1', ',', 'ce', '->', 'sha1', ')', ';', 'ondisk', '->', 'flags', '=', 'htons', '(', 'ce', '->', 'ce_flags', ')', ';', 'if', '(', 'ce', '->', 'ce_flags', '&', 'CE_EXTENDED', ')', '{', 'struct', 'ondisk_cache_entry_extended', '*', 'ondisk2', ';', 'ondisk2', '=', '(', 'struct', 'ondisk_cache_entry_extended', '*', ')', 'ondisk', ';', 'ondisk2', '->', 'flags2', '=', 'htons', '(', '(', 'ce', '->', 'ce_flags', '&', 'CE_EXTENDED_FLAGS', ')', '>>', '16', ')', ';', 'name', '=', 'ondisk2', '->', 'name', ';', '}', 'name', '=', 'ondisk', '->', 'name', ';', 'memcpy', '(', 'name', ',', 'ce', '->', 'name', ',', 'ce_namelen', '(', 'ce', ')', ')', ';', 'result', '=', 'ce_write', '(', 'c', ',', 'fd', ',', 'ondisk', ',', 'size', ')', ';', 'free', '(', 'ondisk', ')', ';', 'return', 'result', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
619,"['gf_add_cmdline_options', '(', 'glusterfs_graph_t', '*', 'graph', ',', 'cmd_args_t', '*', 'cmd_args', ')', '{', 'int', 'ret', '=', '0', ';', 'xlator_t', '*', 'trav', '=', 'NULL', ';', 'xlator_cmdline_option_t', '*', 'cmd_option', '=', 'NULL', ';', 'trav', '=', 'graph', '->', 'first', ';', 'while', '(', 'trav', ')', '{', 'list_for_each_entry', '(', 'cmd_option', ',', '&', 'cmd_args', '->', 'xlator_options', ',', 'cmd_args', ')', '{', 'if', '(', '!fnmatch', '(', 'cmd_option', '->', 'volume', ',', 'trav', '->', 'name', ',', 'FNM_NOESCAPE', ')', ')', '{', 'ret', '=', 'dict_set_str', '(', 'trav', '->', 'options', ',', 'cmd_option', '->', 'key', ',', 'cmd_option', '->', 'value', ')', ';', 'if', '(', 'ret', '==', '0', ')', '{', 'gf_log', '(', 'trav', '->', 'name', ',', 'GF_LOG_INFO', ',', '""""', ',', 'cmd_option', '->', 'key', ',', 'trav', '->', 'name', ',', 'cmd_option', '->', 'value', ')', ';', '}', 'else', '{', 'gf_log', '(', 'trav', '->', 'name', ',', 'GF_LOG_WARNING', ',', '""""', ',', 'cmd_option', '->', 'key', ',', 'trav', '->', 'name', ',', 'strerror', '(', '-', 'ret', ')', ')', ';', '}', '}', '}', 'trav', '=', 'trav', '->', 'next', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
620,"['GetFirst', '(', 'Iterator', '*', 'itrav', ')', '{', 'struct', 'TreeMapIterator', '*', 'trav', '=', '(', 'struct', 'TreeMapIterator', '*', ')', 'itrav', ';', 'if', '(', 'trav', '->', 'timestamp', '!=', 'trav', '->', 'bst_table', '->', 'timestamp', ')', 'return', 'NULL', ';', 'trav', '->', 'bst_node\t', '=', 'bt_first', '(', 'trav', '->', 'bst_table', ')', ';', 'if', '(', 'trav', '->', 'bst_node', ')', 'return', 'trav', '->', 'bst_node', '->', 'data', ';', 'return', 'NULL', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
621,"['test_must', '(', 'void', ')', '{', 'char', '*', 'pc', ';', 'if', '(', 'must', ')', 'return', '1', ';', 'pc', '=', 'getenv', '(', '""""', ')', ';', 'if', '(', 'pc', '&&', 'strcmp', '(', 'pc', ',', '""""', ')', '==', '0', ')', 'return', '1', ';', 'else', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  True,CWE-476  False,CWE-other  False
622,"['JPEG_ProcessData', '(', 'GF_MediaDecoder', '*', 'ifcg', ',', 'char', '*', 'inBuffer', ',', 'u32', 'inBufferLength', ',', 'u16', 'ES_ID', ',', 'char', '*', 'outBuffer', ',', 'u32', '*', 'outBufferLength', ',', 'u8', 'PaddingBits', ',', 'u32', 'mmlevel', ')', '{', '#ifndef', 'GF_Err', 'e', ';', 'JPEGCTX', '(', ')', ';', 'e', '=', 'gf_img_jpeg_dec', '(', 'inBuffer', ',', 'inBufferLength', ',', '&', 'ctx', '->', 'width', ',', '&', 'ctx', '->', 'height', ',', '&', 'ctx', '->', 'pixel_format', ',', 'outBuffer', ',', 'outBufferLength', ',', 'ctx', '->', 'BPP', ')', ';', 'switch', '(', 'ctx', '->', 'pixel_format', ')', '{', 'case', 'GF_PIXEL_GREYSCALE', ':', 'ctx', '->', 'BPP', '=', '1', ';', 'break', ';', 'case', 'GF_PIXEL_RGB_24', ':', 'ctx', '->', 'BPP', '=', '3', ';', 'break', ';', '}', 'ctx', '->', 'out_size', '=', '*', 'outBufferLength', ';', 'return', 'e', ';', 'return', 'GF_NOT_SUPPORTED', ';', '#endif', '/', '/', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
623,"['init_uni_dc_tab', '(', 'void', ')', '{', 'int', 'level', ',', 'uni_code', ',', 'uni_len', ';', 'for', '(', 'level', '=', '-', '256', ';', 'level', '<', '256', ';', 'level', '++', ')', '{', 'int', 'size', ',', 'v', ',', 'l', ';', 'size', '=', '0', ';', 'v', '=', 'abs', '(', 'level', ')', ';', 'while', '(', 'v', ')', '{', 'v', '>>=', '1', ';', 'size', '++', ';', '}', 'if', '(', 'level', '<', '0', ')', 'l', '=', '(', '-', 'level', ')', '^', '(', '(', '1', '<<', 'size', ')', '-', '1', ')', ';', 'l', '=', 'level', ';', 'uni_code', '=', 'DCtab_lum', '[', 'size', ']', '[', '0', ']', ';', 'uni_len', '=', 'DCtab_lum', '[', 'size', ']', '[', '1', ']', ';', 'if', '(', 'size', '>', '0', ')', '{', 'uni_code', '<<=', 'size', ';', 'uni_code', '|=', 'l', ';', 'uni_len', '+=', 'size', ';', 'if', '(', 'size', '>', '8', ')', '{', 'uni_code', '<<=', '1', ';', 'uni_code', '|=', '1', ';', 'uni_len', '++', ';', '}', '}', 'uni_DCtab_lum_bits', '[', 'level', '+', '256', ']', '=', 'uni_code', ';', 'uni_DCtab_lum_len', '[', 'level', '+', '256', ']', '=', 'uni_len', ';', 'uni_code', '=', 'DCtab_chrom', '[', 'size', ']', '[', '0', ']', ';', 'uni_len', '=', 'DCtab_chrom', '[', 'size', ']', '[', '1', ']', ';', 'if', '(', 'size', '>', '0', ')', '{', 'uni_code', '<<=', 'size', ';', 'uni_code', '|=', 'l', ';', 'uni_len', '+=', 'size', ';', 'if', '(', 'size', '>', '8', ')', '{', 'uni_code', '<<=', '1', ';', 'uni_code', '|=', '1', ';', 'uni_len', '++', ';', '}', '}', 'uni_DCtab_chrom_bits', '[', 'level', '+', '256', ']', '=', 'uni_code', ';', 'uni_DCtab_chrom_len', '[', 'level', '+', '256', ']', '=', 'uni_len', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
624,"['script_add_library', '(', 'void', '*', 'closurev', ',', 'const', 'char', '*', 'name', ',', 'size_t', 'length', ')', '{', 'Parser_closure', '*', 'closure', '=', 'static_cast', '<', 'Parser_closure', '*', '>', '(', 'closurev', ')', ';', 'std', ':', ':', 'string', 'name_string', '(', 'name', ',', 'length', ')', ';', 'if', '(', 'name_string', '[', '0', ']', '!=', ""''"", ')', 'gold_error', '(', '_', '(', '""""', ')', ')', ';', 'Input_file_argument', 'file', '(', 'name_string', '.', 'c_str', '(', ')', '+', '1', ',', 'Input_file_argument', ':', ':', 'INPUT_FILE_TYPE_LIBRARY', ',', '""""', ',', 'false', ',', 'closure', '->', 'position_dependent_options', '(', ')', ')', ';', 'Input_argument', '&', 'arg', '=', 'closure', '->', 'inputs', '(', ')', '->', 'add_file', '(', 'file', ')', ';', 'arg', '.', 'set_script_info', '(', 'closure', '->', 'script_info', '(', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
625,"['read_name_map', '(', 'pfile', ',', 'dirname', ')', 'cpp_reader', '*', 'pfile', ';', 'const', 'char', '*', 'dirname', ';', '{', 'struct', 'file_name_map_list', '*', 'map_list_ptr', ';', 'char', '*', 'name', ';', 'FILE', '*', 'f', ';', 'for', '(', 'map_list_ptr', '=', 'CPP_OPTION', '(', 'pfile', ',', 'map_list', ')', ';', 'map_list_ptr', ';', 'map_list_ptr', '=', 'map_list_ptr', '->', 'map_list_next', ')', 'if', '(', '!', 'strcmp', '(', 'map_list_ptr', '->', 'map_list_name', ',', 'dirname', ')', ')', 'return', 'map_list_ptr', '->', 'map_list_map', ';', 'map_list_ptr', '=', '(', '(', 'struct', 'file_name_map_list', '*', ')', 'xmalloc', '(', 'sizeof', '(', 'struct', 'file_name_map_list', ')', ')', ')', ';', 'map_list_ptr', '->', 'map_list_name', '=', 'xstrdup', '(', 'dirname', ')', ';', 'map_list_ptr', '->', 'map_list_map', '=', 'NULL', ';', 'name', '=', '(', 'char', '*', ')', 'alloca', '(', 'strlen', '(', 'dirname', ')', '+', 'strlen', '(', 'FILE_NAME_MAP_FILE', ')', '+', '2', ')', ';', 'strcpy', '(', 'name', ',', 'dirname', ')', ';', 'if', '(', '*', 'dirname', ')', 'strcat', '(', 'name', ',', '""""', ')', ';', 'strcat', '(', 'name', ',', 'FILE_NAME_MAP_FILE', ')', ';', 'f', '=', 'fopen', '(', 'name', ',', '""""', ')', ';', 'if', '(', 'f', ')', '{', 'int', 'ch', ';', 'while', '(', '(', 'ch', '=', 'getc', '(', 'f', ')', ')', '!=', 'EOF', ')', '{', 'char', '*', 'from', ',', '*', 'to', ';', 'struct', 'file_name_map', '*', 'ptr', ';', 'if', '(', 'is_space', '(', 'ch', ')', ')', 'continue', ';', 'from', '=', 'read_filename_string', '(', 'ch', ',', 'f', ')', ';', 'while', '(', '(', 'ch', '=', 'getc', '(', 'f', ')', ')', '!=', 'EOF', '&&', 'is_hspace', '(', 'ch', ')', ')', ';', 'to', '=', 'read_filename_string', '(', 'ch', ',', 'f', ')', ';', 'ptr', '=', '(', '(', 'struct', 'file_name_map', '*', ')', 'xmalloc', '(', 'sizeof', '(', 'struct', 'file_name_map', ')', ')', ')', ';', 'ptr', '->', 'map_from', '=', 'from', ';', 'if', '(', 'IS_ABSOLUTE_PATHNAME', '(', 'to', ')', ')', 'ptr', '->', 'map_to', '=', 'to', ';', '{', 'ptr', '->', 'map_to', '=', 'concat', '(', 'dirname', ',', '""""', ',', 'to', ',', 'NULL', ')', ';', 'free', '(', 'to', ')', ';', '}', 'ptr', '->', 'map_next', '=', 'map_list_ptr', '->', 'map_list_map', ';', 'map_list_ptr', '->', 'map_list_map', '=', 'ptr', ';', 'while', '(', '(', 'ch', '=', 'getc', '(', 'f', ')', ')', '!=', ""''"", ')', 'if', '(', 'ch', '==', 'EOF', ')', 'break', ';', '}', 'fclose', '(', 'f', ')', ';', '}', 'map_list_ptr', '->', 'map_list_next', '=', 'CPP_OPTION', '(', 'pfile', ',', 'map_list', ')', ';', 'CPP_OPTION', '(', 'pfile', ',', 'map_list', ')', '=', 'map_list_ptr', ';', 'return', 'map_list_ptr', '->', 'map_list_map', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
626,"['esas2r_unmap_regions', '(', 'struct', 'esas2r_adapter', '*', 'a', ')', '{', 'if', '(', 'a', '->', 'regs', ')', 'iounmap', '(', '(', 'void', '__iomem', '*', ')', 'a', '->', 'regs', ')', ';', 'a', '->', 'regs', '=', 'NULL', ';', 'pci_release_region', '(', 'a', '->', 'pcid', ',', '2', ')', ';', 'if', '(', 'a', '->', 'data_window', ')', 'iounmap', '(', '(', 'void', '__iomem', '*', ')', 'a', '->', 'data_window', ')', ';', 'a', '->', 'data_window', '=', 'NULL', ';', 'pci_release_region', '(', 'a', '->', 'pcid', ',', '0', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
627,"['io_open', '(', 'struct', 'io', '*', 'io', ',', 'const', 'char', '*', 'name', ')', '{', 'init_io', '(', 'io', ',', 'NULL', ',', 'IO_FD', ')', ';', 'io', '->', 'pipe', '=', '*', 'name', '?', 'open', '(', 'name', ',', 'O_RDONLY', ')', ':', 'STDIN_FILENO', ';', 'return', 'io', '->', 'pipe', '!=', '-', '1', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
628,"['atp_on_editor_input_variable_show', '(', 'GtkButton', '*', 'button', ',', 'gpointer', 'user_data', ')', '{', 'ATPToolEditor', '*', 'this', '=', '(', 'ATPToolEditor', '*', ')', 'user_data', ';', 'switch', '(', 'get_combo_box_value', '(', 'this', '->', 'input_com', ')', ')', '{', 'case', 'ATP_TIN_FILE', ':', 'atp_variable_dialog_show', '(', '&', 'this', '->', 'input_file_var', ',', 'ATP_FILE_VARIABLE', ')', ';', 'break', ';', 'case', 'ATP_TIN_STRING', ':', 'atp_variable_dialog_show', '(', '&', 'this', '->', 'input_string_var', ',', 'ATP_DEFAULT_VARIABLE', ')', ';', 'break', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
629,"['ExChildProcess', '(', ')', '{', '/', '*', '*', 'Wait', 'for', 'all', 'the', 'children', 'to', 'appear', 'and', 'the', 'parent', 'to', 'signal', 'OK', '*', 'start', 'processing', '.', '_dxf_ExInitTaskPerProc', '(', ')', ';', 'if', '(', '!_dxd_exRemoteSlave', ')', 'DXMessage', '(', '""""', ',', 'getpid', '(', ')', ')', ';', 'while', '(', '(', 'nprocs', '>', '1', ')', '&&', '(', '!', '*', 'exReady', ')', ')', ';', 'ExMainLoop', '(', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
630,"['ftp_disconnect', '(', 'struct', 'connectdata', '*', 'conn', ',', 'bool', 'dead_connection', ')', '{', 'struct', 'ftp_conn', '*', 'ftpc', '=', '&', 'conn', '->', 'proto', '.', 'ftpc', ';', 'struct', 'pingpong', '*', 'pp', '=', '&', 'ftpc', '->', 'pp', ';', '/', '*', 'We', 'cannot', 'send', 'quit', 'unconditionally', '.', 'If', 'this', 'connection', 'is', 'stale', 'bad', 'in', 'any', 'way', ',', 'sending', 'quit', 'and', 'waiting', 'around', 'here', 'will', 'make', 'disconnect', 'wait', 'in', 'vain', 'and', 'cause', 'more', 'problems', 'than', 'we', 'need', 'to', '.', 'ftp_quit', '(', ')', 'will', 'check', 'the', 'state', 'of', 'ftp', '->', 'ctl_valid', '.', 'If', ""it's"", 'ok', 'will', 'try', 'to', 'send', 'the', 'QUIT', 'command', ',', 'otherwise', 'it', 'will', 'just', 'return', '.', 'if', '(', 'dead_connection', ')', 'ftpc', '->', 'ctl_valid', '=', 'FALSE', ';', 'if', '(', 'ftpc', '->', 'entrypath', ')', '{', 'struct', 'SessionHandle', '*', 'data', '=', 'conn', '->', 'data', ';', 'if', '(', 'data', '->', 'state', '.', 'most_recent_ftp_entrypath', '==', 'ftpc', '->', 'entrypath', ')', '{', 'data', '->', 'state', '.', 'most_recent_ftp_entrypath', '=', 'NULL', ';', '}', 'free', '(', 'ftpc', '->', 'entrypath', ')', ';', 'ftpc', '->', 'entrypath', '=', 'NULL', ';', '}', 'freedirs', '(', 'ftpc', ')', ';', 'if', '(', 'ftpc', '->', 'prevpath', ')', '{', 'free', '(', 'ftpc', '->', 'prevpath', ')', ';', 'ftpc', '->', 'prevpath', '=', 'NULL', ';', '}', 'if', '(', 'ftpc', '->', 'server_os', ')', '{', 'free', '(', 'ftpc', '->', 'server_os', ')', ';', 'ftpc', '->', 'server_os', '=', 'NULL', ';', '}', 'Curl_pp_disconnect', '(', 'pp', ')', ';', '#ifdef', 'Curl_sec_end', '(', 'conn', ')', ';', 'return', 'CURLE_OK', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
631,"['gtk_xtext_find_char', '(', 'GtkXText', '*', 'xtext', ',', 'int', 'x', ',', 'int', 'y', ',', 'int', '*', 'off', ',', 'int', '*', 'out_of_bounds', ')', '{', 'textentry', '*', 'ent', ';', 'int', 'line', ';', 'int', 'subline', ';', 'line', '=', '(', 'y', '+', 'xtext', '->', 'pixel_offset', ')', '/', 'xtext', '->', 'fontsize', ';', 'ent', '=', 'gtk_xtext_nth', '(', 'xtext', ',', 'line', '+', '(', 'int', ')', 'xtext', '->', 'adj', '->', 'value', ',', '&', 'subline', ')', ';', 'if', '(', '!ent', ')', 'return', '0', ';', 'if', '(', 'off', ')', '*', 'off', '=', 'gtk_xtext_find_x', '(', 'xtext', ',', 'x', ',', 'ent', ',', 'subline', ',', 'line', ',', 'out_of_bounds', ')', ';', 'return', 'ent', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
632,"['sget', '(', 'struct', 'file_system_type', '*', 'type', ',', 'int', '(', '*', 'test', ')', '(', 'struct', 'super_block', '*', ',', 'void', '*', ')', ',', 'int', '(', '*', 'set', ')', '(', 'struct', 'super_block', '*', ',', 'void', '*', ')', ',', 'int', 'flags', ',', 'void', '*', 'data', ')', '{', 'struct', 'user_namespace', '*', 'user_ns', '=', 'current_user_ns', '(', ')', ';', '/', '*', 'We', ""don't"", 'yet', 'pass', 'the', 'user', 'namespace', 'of', 'the', '*', 'mount', 'through', 'to', 'here', 'so', 'always', 'use', '&', '*', 'until', 'that', 'changes', '.', 'if', '(', 'flags', '&', 'MS_SUBMOUNT', ')', 'user_ns', '=', '&', 'init_user_ns', ';', 'if', '(', '!', '(', 'flags', '&', '(', 'MS_KERNMOUNT', '|', 'MS_SUBMOUNT', ')', ')', '&&', '!ns_capable', '(', 'user_ns', ',', 'CAP_SYS_ADMIN', ')', ')', 'return', 'ERR_PTR', '(', '-', 'EPERM', ')', ';', 'return', 'sget_userns', '(', 'type', ',', 'test', ',', 'set', ',', 'flags', ',', 'user_ns', ',', 'data', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
633,"['set_origin', '(', 'struct', 'vc_data', '*', 'vc', ')', '{', 'WARN_CONSOLE_UNLOCKED', '(', ')', ';', 'if', '(', '!CON_IS_VISIBLE', '(', 'vc', ')', '||', '!vc', '->', 'vc_sw', '->', 'con_set_origin', '||', '!vc', '->', 'vc_sw', '->', 'con_set_origin', '(', 'vc', ')', ')', 'vc', '->', 'vc_origin', '=', '(', 'unsigned', 'long', ')', 'vc', '->', 'vc_screenbuf', ';', 'vc', '->', 'vc_visible_origin', '=', 'vc', '->', 'vc_origin', ';', 'vc', '->', 'vc_scr_end', '=', 'vc', '->', 'vc_origin', '+', 'vc', '->', 'vc_screenbuf_size', ';', 'vc', '->', 'vc_pos', '=', 'vc', '->', 'vc_origin', '+', 'vc', '->', 'vc_size_row', '*', 'vc', '->', 'vc_y', '+', '2', '*', 'vc', '->', 'vc_x', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
634,"['freeAlarms', '(', 'SingleList', '*', 'chain', ')', '{', 'listSingleFullFree', '(', '(', 'chain', '?', 'chain', ':', '_alarmList', ')', ',', 'destroyAlarm', ')', ';', 'if', '(', '!chain', ')', '{', '_alarmList', '=', 'NULL', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
635,"['r128_emit_masks', '(', 'drm_r128_private_t', '*', 'dev_priv', ')', '{', 'drm_r128_sarea_t', '*', 'sarea_priv', '=', 'dev_priv', '->', 'sarea_priv', ';', 'drm_r128_context_regs_t', '*', 'ctx', '=', '&', 'sarea_priv', '->', 'context_state', ';', 'RING_LOCALS', ';', 'DRM_DEBUG', '(', '""""', ')', ';', 'BEGIN_RING', '(', '5', ')', ';', 'OUT_RING', '(', 'CCE_PACKET0', '(', 'R128_DP_WRITE_MASK', ',', '0', ')', ')', ';', 'OUT_RING', '(', 'ctx', '->', 'dp_write_mask', ')', ';', 'OUT_RING', '(', 'CCE_PACKET0', '(', 'R128_STEN_REF_MASK_C', ',', '1', ')', ')', ';', 'OUT_RING', '(', 'ctx', '->', 'sten_ref_mask_c', ')', ';', 'OUT_RING', '(', 'ctx', '->', 'plane_3d_mask_c', ')', ';', 'ADVANCE_RING', '(', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
636,"['search_easter_egg', '(', 'Slapi_PBlock', '*', 'pb', ',', 'Slapi_Entry', '*', 'entryBefore', ',', 'Slapi_Entry', '*', 'entryAfter', ',', 'int', '*', 'returncode', ',', 'char', '*', 'returntext', ',', 'void', '*', 'arg', ')', '{', 'char', '*', 'fstr', '=', 'NULL', ';', 'char', 'eggfilter', '[', '64', ']', ';', 'PR_snprintf', '(', 'eggfilter', ',', 'sizeof', '(', 'eggfilter', ')', ',', '""""', ',', 'EGG_OBJECT_CLASS', ')', ';', 'slapi_pblock_get', '(', 'pb', ',', 'SLAPI_SEARCH_STRFILTER', ',', '&', 'fstr', ')', ';', 'if', '(', 'fstr', '!=', 'NULL', '&&', 'strcasecmp', '(', 'fstr', ',', 'eggfilter', ')', '==', '0', ')', '{', 'static', 'int', 'twiddle', '=', '-', '1', ';', 'char', '*', 'copy', ';', 'struct', 'berval', 'bvtype', '=', '{', '0', ',', 'NULL', '}', ';', 'struct', 'berval', 'bv', '=', '{', '0', ',', 'NULL', '}', ';', 'int', 'freeval', '=', '0', ';', 'struct', 'berval', '*', 'bvals', '[', '2', ']', ';', 'if', '(', 'twiddle', '<', '0', ')', '{', 'twiddle', '=', 'slapi_rand', '(', ')', ';', '}', 'bvals', '[', '0', ']', '=', '&', 'bv', ';', 'bvals', '[', '1', ']', '=', 'NULL', ';', 'copy', '=', 'slapi_ch_strdup', '(', 'easter_egg_photos', '[', 'twiddle', '%', 'NUM_EASTER_EGG_PHOTOS', ']', ')', ';', 'if', '(', 'slapi_ldif_parse_line', '(', 'copy', ',', '&', 'bvtype', ',', '&', 'bv', ',', '&', 'freeval', ')', '<', '0', ')', '{', 'return', 'SLAPI_DSE_CALLBACK_ERROR', ';', '}', 'slapi_entry_attr_delete', '(', 'entryBefore', ',', '""""', ')', ';', 'slapi_entry_attr_merge', '(', 'entryBefore', ',', '""""', ',', 'bvals', ')', ';', 'slapi_ch_free', '(', '(', 'void', '*', '*', ')', '&', 'copy', ')', ';', 'twiddle', '++', ';', 'if', '(', 'freeval', ')', 'slapi_ch_free_string', '(', '&', 'bv', '.', 'bv_val', ')', ';', 'return', 'SLAPI_DSE_CALLBACK_OK', ';', '}', 'return', 'SLAPI_DSE_CALLBACK_ERROR', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
637,"['indexReadsByID', '(', ')', '{', 'm_pIndex', '=', 'new', 'ReadIndex', ';', 'for', '(', 'size_t', 'i', '=', '0', ';', 'i', '<', 'm_table', '.', 'size', '(', ')', ';', '++', 'i', ')', '{', 'std', ':', ':', 'pair', '<', 'ReadIndex', ':', ':', 'iterator', ',', 'bool', '>', 'result', '=', 'm_pIndex', '->', 'insert', '(', 'std', ':', ':', 'make_pair', '(', 'm_table', '[', 'i', ']', '.', 'id', ',', '&', 'm_table', '[', 'i', ']', ')', ')', ';', 'if', '(', '!result', '.', 'second', ')', '{', 'std', ':', ':', 'cerr', '<<', '""""', '<<', 'm_table', '[', 'i', ']', '.', 'id', '<<', '""""', ';', 'std', ':', ':', 'cerr', '<<', '""""', ';', 'exit', '(', '1', ')', ';', '}', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
638,"['qed_int_cau_conf_sb', '(', 'struct', 'qed_hwfn', '*', 'p_hwfn', ',', 'struct', 'qed_ptt', '*', 'p_ptt', ',', 'dma_addr_t', 'sb_phys', ',', 'u16', 'igu_sb_id', ',', 'u16', 'vf_number', ',', 'u8', 'vf_valid', ')', '{', 'struct', 'cau_sb_entry', 'sb_entry', ';', 'u32', 'val', ';', 'qed_init_cau_sb_entry', '(', 'p_hwfn', ',', '&', 'sb_entry', ',', 'p_hwfn', '->', 'rel_pf_id', ',', 'vf_number', ',', 'vf_valid', ')', ';', 'if', '(', 'p_hwfn', '->', 'hw_init_done', ')', '{', 'val', '=', 'CAU_REG_SB_ADDR_MEMORY', '+', 'igu_sb_id', '*', 'sizeof', '(', 'u64', ')', ';', 'qed_wr', '(', 'p_hwfn', ',', 'p_ptt', ',', 'val', ',', 'lower_32_bits', '(', 'sb_phys', ')', ')', ';', 'qed_wr', '(', 'p_hwfn', ',', 'p_ptt', ',', 'val', '+', 'sizeof', '(', 'u32', ')', ',', 'upper_32_bits', '(', 'sb_phys', ')', ')', ';', 'val', '=', 'CAU_REG_SB_VAR_MEMORY', '+', 'igu_sb_id', '*', 'sizeof', '(', 'u64', ')', ';', 'qed_wr', '(', 'p_hwfn', ',', 'p_ptt', ',', 'val', ',', 'sb_entry', '.', 'data', ')', ';', 'qed_wr', '(', 'p_hwfn', ',', 'p_ptt', ',', 'val', '+', 'sizeof', '(', 'u32', ')', ',', 'sb_entry', '.', 'params', ')', ';', '}', 'else', '{', 'STORE_RT_REG_AGG', '(', 'p_hwfn', ',', 'CAU_REG_SB_ADDR_MEMORY_RT_OFFSET', '+', 'igu_sb_id', '*', '2', ',', 'sb_phys', ')', ';', 'STORE_RT_REG_AGG', '(', 'p_hwfn', ',', 'CAU_REG_SB_VAR_MEMORY_RT_OFFSET', '+', 'igu_sb_id', '*', '2', ',', 'sb_entry', ')', ';', '}', 'if', '(', 'p_hwfn', '->', 'cdev', '->', 'int_coalescing_mode', '==', 'QED_COAL_MODE_ENABLE', ')', '{', 'u8', 'timeset', '=', 'p_hwfn', '->', 'cdev', '->', 'rx_coalesce_usecs', '>>', '(', 'QED_CAU_DEF_RX_TIMER_RES', '+', '1', ')', ';', 'u8', 'num_tc', '=', '1', ',', 'i', ';', 'qed_int_cau_conf_pi', '(', 'p_hwfn', ',', 'p_ptt', ',', 'igu_sb_id', ',', 'RX_PI', ',', 'QED_COAL_RX_STATE_MACHINE', ',', 'timeset', ')', ';', 'timeset', '=', 'p_hwfn', '->', 'cdev', '->', 'tx_coalesce_usecs', '>>', '(', 'QED_CAU_DEF_TX_TIMER_RES', '+', '1', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'num_tc', ';', 'i', '++', ')', '{', 'qed_int_cau_conf_pi', '(', 'p_hwfn', ',', 'p_ptt', ',', 'igu_sb_id', ',', 'TX_PI', '(', 'i', ')', ',', 'QED_COAL_TX_STATE_MACHINE', ',', 'timeset', ')', ';', '}', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
639,"['mpegts_base_apply_sdt', '(', 'MpegTSBase', '*', 'base', ',', 'guint16', 'pmt_pid', ',', 'GstStructure', '*', 'sdt_info', ')', '{', 'GST_DEBUG_OBJECT', '(', 'base', ',', '""""', 'GST_PTR_FORMAT', ',', 'sdt_info', ')', ';', 'mpegts_base_get_tags_from_sdt', '(', 'base', ',', 'sdt_info', ')', ';', 'gst_element_post_message', '(', 'GST_ELEMENT_CAST', '(', 'base', ')', ',', 'gst_message_new_element', '(', 'GST_OBJECT', '(', 'base', ')', ',', 'gst_structure_copy', '(', 'sdt_info', ')', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
640,"['OutputFeatureValuesForHypergraph', '(', 'const', 'Hypothesis', '*', 'hypo', ',', 'std', ':', ':', 'ostream', '&', 'outputSearchGraphStream', ')', '{', 'outputSearchGraphStream', '.', 'setf', '(', 'std', ':', ':', 'ios', ':', ':', 'fixed', ')', ';', 'outputSearchGraphStream', '.', 'precision', '(', '6', ')', ';', 'const', 'StaticData', '&', 'staticData', '=', 'StaticData', ':', ':', 'Instance', '(', ')', ';', 'const', 'TranslationSystem', '&', 'system', '=', 'staticData', '.', 'GetTranslationSystem', '(', 'TranslationSystem', ':', ':', 'DEFAULT', ')', ';', 'const', 'vector', '<', 'const', 'StatelessFeatureFunction', '*', '>', '&', 'slf', '=', 'system', '.', 'GetStatelessFeatureFunctions', '(', ')', ';', 'const', 'vector', '<', 'const', 'StatefulFeatureFunction', '*', '>', '&', 'sff', '=', 'system', '.', 'GetStatefulFeatureFunctions', '(', ')', ';', 'size_t', 'featureIndex', '=', '1', ';', 'for', '(', 'size_t', 'i', '=', '0', ';', 'i', '<', 'sff', '.', 'size', '(', ')', ';', '++', 'i', ')', '{', 'featureIndex', '=', 'OutputFeatureValuesForHypergraph', '(', 'featureIndex', ',', 'hypo', ',', 'sff', '[', 'i', ']', ',', 'outputSearchGraphStream', ')', ';', '}', 'for', '(', 'size_t', 'i', '=', '0', ';', 'i', '<', 'slf', '.', 'size', '(', ')', ';', '++', 'i', ')', '{', 'if', '(', 'slf', '[', 'i', ']', '->', 'GetScoreProducerWeightShortName', '(', ')', '!=', '""""', '&&', 'slf', '[', 'i', ']', '->', 'GetScoreProducerWeightShortName', '(', ')', '!=', '""""', '&&', 'slf', '[', 'i', ']', '->', 'GetScoreProducerWeightShortName', '(', ')', '!=', '""""', '&&', 'slf', '[', 'i', ']', '->', 'GetScoreProducerWeightShortName', '(', ')', '!=', '""""', ')', '{', 'featureIndex', '=', 'OutputFeatureValuesForHypergraph', '(', 'featureIndex', ',', 'hypo', ',', 'slf', '[', 'i', ']', ',', 'outputSearchGraphStream', ')', ';', '}', '}', 'const', 'vector', '<', 'PhraseDictionaryFeature', '*', '>', '&', 'pds', '=', 'system', '.', 'GetPhraseDictionaries', '(', ')', ';', 'for', '(', 'size_t', 'i', '=', '0', ';', 'i', '<', 'pds', '.', 'size', '(', ')', ';', 'i', '++', ')', '{', 'featureIndex', '=', 'OutputFeatureValuesForHypergraph', '(', 'featureIndex', ',', 'hypo', ',', 'pds', '[', 'i', ']', ',', 'outputSearchGraphStream', ')', ';', '}', 'const', 'vector', '<', 'GenerationDictionary', '*', '>', '&', 'gds', '=', 'system', '.', 'GetGenerationDictionaries', '(', ')', ';', 'for', '(', 'size_t', 'i', '=', '0', ';', 'i', '<', 'gds', '.', 'size', '(', ')', ';', 'i', '++', ')', '{', 'featureIndex', '=', 'OutputFeatureValuesForHypergraph', '(', 'featureIndex', ',', 'hypo', ',', 'gds', '[', 'i', ']', ',', 'outputSearchGraphStream', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
641,"['lyxRead', '(', 'Lexer', '&', 'lex', ',', 'FontInfo', 'const', '&', 'fi', ')', '{', 'FontInfo', 'f', '=', 'fi', ';', 'bool', 'error', '=', 'false', ';', 'bool', 'finished', '=', 'false', ';', 'while', '(', '!finished', '&&', 'lex', '.', 'isOK', '(', ')', '&&', '!error', ')', '{', 'lex', '.', 'next', '(', ')', ';', 'string', 'const', 'tok', '=', 'ascii_lowercase', '(', 'lex', '.', 'getString', '(', ')', ')', ';', 'if', '(', 'tok', '.', 'empty', '(', ')', ')', '{', 'continue', ';', '}', 'else', 'if', '(', 'tok', '==', '""""', ')', '{', 'finished', '=', 'true', ';', '}', 'else', 'if', '(', 'tok', '==', '""""', ')', '{', 'lex', '.', 'next', '(', ')', ';', 'string', 'const', 'ttok', '=', 'lex', '.', 'getString', '(', ')', ';', 'setLyXFamily', '(', 'ttok', ',', 'f', ')', ';', '}', 'else', 'if', '(', 'tok', '==', '""""', ')', '{', 'lex', '.', 'next', '(', ')', ';', 'string', 'const', 'ttok', '=', 'lex', '.', 'getString', '(', ')', ';', 'setLyXSeries', '(', 'ttok', ',', 'f', ')', ';', '}', 'else', 'if', '(', 'tok', '==', '""""', ')', '{', 'lex', '.', 'next', '(', ')', ';', 'string', 'const', 'ttok', '=', 'lex', '.', 'getString', '(', ')', ';', 'setLyXShape', '(', 'ttok', ',', 'f', ')', ';', '}', 'else', 'if', '(', 'tok', '==', '""""', ')', '{', 'lex', '.', 'next', '(', ')', ';', 'string', 'const', 'ttok', '=', 'lex', '.', 'getString', '(', ')', ';', 'setLyXSize', '(', 'ttok', ',', 'f', ')', ';', '}', 'else', 'if', '(', 'tok', '==', '""""', ')', '{', 'lex', '.', 'next', '(', ')', ';', 'string', 'const', 'ttok', '=', 'ascii_lowercase', '(', 'lex', '.', 'getString', '(', ')', ')', ';', 'if', '(', 'ttok', '==', '""""', ')', '{', 'f', '.', 'setUnderbar', '(', 'FONT_OFF', ')', ';', '}', 'else', 'if', '(', 'ttok', '==', '""""', ')', '{', 'f', '.', 'setStrikeout', '(', 'FONT_OFF', ')', ';', '}', 'else', 'if', '(', 'ttok', '==', '""""', ')', '{', 'f', '.', 'setUuline', '(', 'FONT_OFF', ')', ';', '}', 'else', 'if', '(', 'ttok', '==', '""""', ')', '{', 'f', '.', 'setUwave', '(', 'FONT_OFF', ')', ';', '}', 'else', 'if', '(', 'ttok', '==', '""""', ')', '{', 'f', '.', 'setEmph', '(', 'FONT_OFF', ')', ';', '}', 'else', 'if', '(', 'ttok', '==', '""""', ')', '{', 'f', '.', 'setNoun', '(', 'FONT_OFF', ')', ';', '}', 'else', 'if', '(', 'ttok', '==', '""""', ')', '{', 'f', '.', 'setEmph', '(', 'FONT_ON', ')', ';', '}', 'else', 'if', '(', 'ttok', '==', '""""', ')', '{', 'f', '.', 'setUnderbar', '(', 'FONT_ON', ')', ';', '}', 'else', 'if', '(', 'ttok', '==', '""""', ')', '{', 'f', '.', 'setStrikeout', '(', 'FONT_ON', ')', ';', '}', 'else', 'if', '(', 'ttok', '==', '""""', ')', '{', 'f', '.', 'setUuline', '(', 'FONT_ON', ')', ';', '}', 'else', 'if', '(', 'ttok', '==', '""""', ')', '{', 'f', '.', 'setUwave', '(', 'FONT_ON', ')', ';', '}', 'else', 'if', '(', 'ttok', '==', '""""', ')', '{', 'f', '.', 'setNoun', '(', 'FONT_ON', ')', ';', '}', 'else', '{', 'lex', '.', 'printError', '(', '""""', ')', ';', '}', '}', 'else', 'if', '(', 'tok', '==', '""""', ')', '{', 'lex', '.', 'next', '(', ')', ';', 'string', 'const', 'ttok', '=', 'lex', '.', 'getString', '(', ')', ';', 'setLyXColor', '(', 'ttok', ',', 'f', ')', ';', '}', 'else', '{', 'lex', '.', 'printError', '(', '""""', ')', ';', 'error', '=', 'true', ';', '}', '}', 'return', 'f', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
642,"['fdUpdateBiggest', '(', 'int', 'fd', ',', 'int', 'opening', ')', '{', 'if', '(', 'fd', '<', 'Biggest_FD', ')', 'return', ';', 'assert', '(', 'fd', '<', 'Squid_MaxFD', ')', ';', 'if', '(', 'fd', '>', 'Biggest_FD', ')', '{', '/', '*', '*', 'assert', 'that', 'we', 'are', 'not', 'closing', 'a', 'FD', 'bigger', '*', 'our', 'known', 'biggest', 'assert', '(', 'opening', ')', ';', 'Biggest_FD', '=', 'fd', ';', 'return', ';', '}', '/', '*', '*', 'assert', 'that', 'we', 'are', 'closing', 'the', 'biggest', 'FD', ';', 'we', ""can't"", '*', 're', '-', 'opening', 'assert', '(', '!opening', ')', ';', 'while', '(', '!fd_table', '[', 'Biggest_FD', ']', '.', 'flags', '.', 'open', '&&', 'Biggest_FD', '>', '0', ')', 'Biggest_FD', '--', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
643,"['v4l2_match_dv_timings', '(', 'const', 'struct', 'v4l2_dv_timings', '*', 't1', ',', 'const', 'struct', 'v4l2_dv_timings', '*', 't2', ',', 'unsigned', 'pclock_delta', ')', '{', 'if', '(', 't1', '->', 'type', '!=', 't2', '->', 'type', '||', 't1', '->', 'type', '!=', 'V4L2_DV_BT_656_1120', ')', 'return', 'false', ';', 'if', '(', 't1', '->', 'bt', '.', 'width', '==', 't2', '->', 'bt', '.', 'width', '&&', 't1', '->', 'bt', '.', 'height', '==', 't2', '->', 'bt', '.', 'height', '&&', 't1', '->', 'bt', '.', 'interlaced', '==', 't2', '->', 'bt', '.', 'interlaced', '&&', 't1', '->', 'bt', '.', 'polarities', '==', 't2', '->', 'bt', '.', 'polarities', '&&', 't1', '->', 'bt', '.', 'pixelclock', '>=', 't2', '->', 'bt', '.', 'pixelclock', '-', 'pclock_delta', '&&', 't1', '->', 'bt', '.', 'pixelclock', '<=', 't2', '->', 'bt', '.', 'pixelclock', '+', 'pclock_delta', '&&', 't1', '->', 'bt', '.', 'hfrontporch', '==', 't2', '->', 'bt', '.', 'hfrontporch', '&&', 't1', '->', 'bt', '.', 'vfrontporch', '==', 't2', '->', 'bt', '.', 'vfrontporch', '&&', 't1', '->', 'bt', '.', 'vsync', '==', 't2', '->', 'bt', '.', 'vsync', '&&', 't1', '->', 'bt', '.', 'vbackporch', '==', 't2', '->', 'bt', '.', 'vbackporch', '&&', '(', '!t1', '->', 'bt', '.', 'interlaced', '||', '(', 't1', '->', 'bt', '.', 'il_vfrontporch', '==', 't2', '->', 'bt', '.', 'il_vfrontporch', '&&', 't1', '->', 'bt', '.', 'il_vsync', '==', 't2', '->', 'bt', '.', 'il_vsync', '&&', 't1', '->', 'bt', '.', 'il_vbackporch', '==', 't2', '->', 'bt', '.', 'il_vbackporch', ')', ')', ')', 'return', 'true', ';', 'return', 'false', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
644,"['nextTip', '(', ')', '{', 'if', '(', 'm_tip', '==', 'NULL', ')', 'return', ';', 'm_tip', '->', 'setText', '(', 'QString', '(', '""""', ')', '.', 'arg', '(', 'TipsAndTricks', ':', ':', 'randomTip', '(', ')', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
645,"['graph_open_window', '(', 'const', 'char', '*', 'title', ',', 'const', 'char', '*', 'geometry', ',', 'REAL', '*', 'world', ',', 'MESH', '*', 'mesh', ')', '{', 'FUNCNAME', '(', '""""', ')', ';', 'switch', '(', 'mesh', '->', 'dim', ')', '{', '#if', 'DIM_OF_WORLD', '==', 'case', '1', ':', 'return', 'graph_open_window_1d', '(', 'title', ',', 'geometry', ',', 'world', ',', 'mesh', ')', ';', '#if', 'DIM_OF_WORLD', '==', 'case', '2', ':', 'return', 'graph_open_window_2d', '(', 'title', ',', 'geometry', ',', 'world', ',', 'mesh', ')', ';', 'case', '3', ':', 'ERROR', '(', '""""', ')', ';', 'return', '0', ';', 'default', ':', 'ERROR_EXIT', '(', '""""', ')', ';', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
646,"['hyperexp_complete_gradient', '(', 'double', '*', 'p', ',', 'int', 'np', ',', 'void', '*', 'dptr', ',', 'double', '*', 'dp', ')', '{', 'struct', 'hyperexp_data', '*', 'data', '=', '(', 'struct', 'hyperexp_data', '*', ')', 'dptr', ';', 'ESL_HYPEREXP', '*', 'h', '=', 'data', '->', 'h', ';', 'double', 'pdf', ';', 'int', 'i', ',', 'k', ';', 'int', 'pidx', ';', 'hyperexp_unpack_paramvector', '(', 'p', ',', 'np', ',', 'h', ')', ';', 'esl_vec_DSet', '(', 'dp', ',', 'np', ',', '0', '.', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'data', '->', 'n', ';', 'i', '++', ')', '{', '/', '*', 'FIXME', ':', 'I', 'think', 'the', 'calculation', 'below', 'may', 'need', 'to', 'be', '*', 'in', 'log', 'space', ',', 'to', 'avoid', 'underflow', 'errors', ';', 'see', 'complete_binned_gradient', '(', ')', 'for', '(', 'k', '=', '0', ';', 'k', '<', 'h', '->', 'K', ';', 'k', '++', ')', 'h', '->', 'wrk', '[', 'k', ']', '=', 'h', '->', 'q', '[', 'k', ']', '*', 'esl_exp_pdf', '(', 'data', '->', 'x', '[', 'i', ']', ',', 'h', '->', 'mu', ',', 'h', '->', 'lambda', '[', 'k', ']', ')', ';', 'pdf', '=', 'esl_vec_DSum', '(', 'h', '->', 'wrk', ',', 'h', '->', 'K', ')', ';', 'pidx', '=', '0', ';', 'if', '(', '!', 'h', '->', 'fixmix', ')', '{', 'dp', '[', 'pidx', '++', ']', '-=', 'h', '->', 'wrk', '[', 'k', ']', '/', 'pdf', '-', 'h', '->', 'q', '[', 'k', ']', ';', '}', 'for', '(', 'k', '=', '0', ';', 'k', '<', 'h', '->', 'K', ';', 'k', '++', ')', 'if', '(', '!', 'h', '->', 'fixlambda', '[', 'k', ']', ')', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
647,"['Clp_NewParser', '(', 'int', 'argc', ',', 'const', 'char', '*', 'const', '*', 'argv', ',', 'int', 'nopt', ',', 'const', 'Clp_Option', '*', 'opt', ')', '{', 'Clp_Parser', '*', 'clp', '=', '(', 'Clp_Parser', '*', ')', 'malloc', '(', 'sizeof', '(', 'Clp_Parser', ')', ')', ';', 'Clp_Internal', '*', 'cli', '=', '(', 'Clp_Internal', '*', ')', 'malloc', '(', 'sizeof', '(', 'Clp_Internal', ')', ')', ';', 'Clp_InternOption', '*', 'iopt', '=', '(', 'Clp_InternOption', '*', ')', 'malloc', '(', 'sizeof', '(', 'Clp_InternOption', ')', '*', 'nopt', ')', ';', 'if', '(', 'cli', ')', 'cli', '->', 'valtype', '=', '(', 'Clp_ValType', '*', ')', 'malloc', '(', 'sizeof', '(', 'Clp_ValType', ')', '*', 'Clp_InitialValType', ')', ';', 'if', '(', '!clp', '||', '!cli', '||', '!iopt', '||', '!cli', '->', 'valtype', ')', 'goto', 'failed', ';', 'clp', '->', 'negated', '=', '0', ';', 'clp', '->', 'have_val', '=', '0', ';', 'clp', '->', 'vstr', '=', '0', ';', 'clp', '->', 'user_data', '=', '0', ';', 'clp', '->', 'internal', '=', 'cli', ';', 'cli', '->', 'opt', '=', 'opt', ';', 'cli', '->', 'nopt', '=', 'nopt', ';', 'cli', '->', 'iopt', '=', 'iopt', ';', 'cli', '->', 'opt_generation', '=', '0', ';', 'cli', '->', 'error_handler', '=', '0', ';', 'if', '(', 'argc', '>', '0', ')', '{', 'const', 'char', '*', 'slash', '=', 'strrchr', '(', 'argv', '[', '0', ']', ',', ""''"", ')', ';', 'cli', '->', 'program_name', '=', 'slash', '?', 'slash', '+', '1', ':', 'argv', '[', '0', ']', ';', '}', 'cli', '->', 'program_name', '=', '0', ';', 'Clp_SetArguments', '(', 'clp', ',', 'argc', '-', '1', ',', 'argv', '+', '1', ')', ';', '{', 'char', '*', 's', '=', 'getenv', '(', '""""', ')', ';', 'cli', '->', 'utf8', '=', '(', 's', '&&', '(', 'strstr', '(', 's', ',', '""""', ')', '!=', '0', '||', 'strstr', '(', 's', ',', '""""', ')', '!=', '||', 'strstr', '(', 's', ',', '""""', ')', '!=', '0', ')', ')', ';', '}', 'cli', '->', 'oclass', '[', '0', ']', '.', 'c', '=', ""''"", ';', 'cli', '->', 'oclass', '[', '0', ']', '.', 'type', '=', 'Clp_Short', ';', 'cli', '->', 'noclass', '=', '1', ';', 'cli', '->', 'long1pos', '=', 'cli', '->', 'long1neg', '=', '0', ';', 'cli', '->', 'nvaltype', '=', '0', ';', 'Clp_AddType', '(', 'clp', ',', 'Clp_ValString', ',', '0', ',', 'parse_string', ',', '0', ')', ';', 'Clp_AddType', '(', 'clp', ',', 'Clp_ValStringNotOption', ',', 'Clp_DisallowOptions', ',', 'parse_string', ',', '0', ')', ';', 'Clp_AddType', '(', 'clp', ',', 'Clp_ValInt', ',', '0', ',', 'parse_int', ',', '0', ')', ';', 'Clp_AddType', '(', 'clp', ',', 'Clp_ValUnsigned', ',', '0', ',', 'parse_int', ',', '(', 'void', '*', ')', 'cli', ')', ';', 'Clp_AddType', '(', 'clp', ',', 'Clp_ValBool', ',', '0', ',', 'parse_bool', ',', '0', ')', ';', 'Clp_AddType', '(', 'clp', ',', 'Clp_ValDouble', ',', '0', ',', 'parse_double', ',', '0', ')', ';', 'Clp_SetOptions', '(', 'clp', ',', 'nopt', ',', 'opt', ')', ';', 'return', 'clp', ';', 'failed', ':', 'if', '(', 'cli', '&&', 'cli', '->', 'valtype', ')', 'free', '(', 'cli', '->', 'valtype', ')', ';', 'if', '(', 'cli', ')', 'free', '(', 'cli', ')', ';', 'if', '(', 'clp', ')', 'free', '(', 'clp', ')', ';', 'if', '(', 'iopt', ')', 'free', '(', 'iopt', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
648,"['reset_trig_time', '(', ')', '{', 'if', '(', '!auto_rate', ')', 'auto_rate', '=', '1', ';', 'auto_trig_time', '=', 'mnow', '(', ')', '+', '300', '/', '(', '1', '+', 'auto_rate', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
649,"['decode_level0_header', '(', 'LHAFileHeader', '*', '*', 'header', ',', 'LHAInputStream', '*', 'stream', ')', '{', 'uint8_t', 'header_len', ';', 'uint8_t', 'header_csum', ';', 'size_t', 'path_len', ';', 'size_t', 'min_len', ';', 'header_len', '=', 'RAW_DATA', '(', 'header', ',', '0', ')', ';', 'header_csum', '=', 'RAW_DATA', '(', 'header', ',', '1', ')', ';', '/', '/', 'Sanity', 'check', 'header', 'length', '.', 'This', 'is', 'the', 'minimum', 'header', '/', '/', 'for', 'a', 'header', 'that', 'has', 'a', 'zero', '-', 'length', 'path', '.', 'switch', '(', '(', '*', 'header', ')', '->', 'header_level', ')', '{', 'case', '0', ':', 'min_len', '=', 'LEVEL_0_MIN_HEADER_LEN', ';', 'break', ';', 'case', '1', ':', 'min_len', '=', 'LEVEL_1_MIN_HEADER_LEN', ';', 'break', ';', 'default', ':', 'return', '0', ';', '}', 'if', '(', 'header_len', '<', 'min_len', ')', '{', 'return', '0', ';', '}', '/', '/', 'We', 'only', 'have', 'a', 'partial', 'header', 'so', 'far', '.', 'Read', 'the', 'full', 'header', '.', 'if', '(', '!extend_raw_data', '(', 'header', ',', 'stream', ',', 'header_len', '+', '2', '-', 'RAW_DATA_LEN', '(', 'header', ')', ')', ')', '{', 'return', '0', ';', '}', '/', '/', 'Checksum', 'the', 'header', '.', 'if', '(', '!check_l0_checksum', '(', '&', 'RAW_DATA', '(', 'header', ',', '2', ')', ',', 'RAW_DATA_LEN', '(', 'header', ')', '-', '2', ',', 'header_csum', ')', ')', '{', 'return', '0', ';', '}', '/', '/', 'Compression', 'method', ':', 'memcpy', '(', '(', '*', 'header', ')', '->', 'compress_method', ',', '&', 'RAW_DATA', '(', 'header', ',', '2', ')', ',', '5', ')', ';', '(', '*', 'header', ')', '->', 'compress_method', '[', '5', ']', '=', ""''"", ';', '/', '/', 'File', 'lengths', ':', '(', '*', 'header', ')', '->', 'compressed_length', '=', 'lha_decode_uint32', '(', '&', 'RAW_DATA', '(', 'header', ',', '7', ')', ')', ';', '(', '*', 'header', ')', '->', 'length', '=', 'lha_decode_uint32', '(', '&', 'RAW_DATA', '(', 'header', ',', '11', ')', ')', ';', '/', '/', 'Timestamp', ':', '(', '*', 'header', ')', '->', 'timestamp', '=', 'decode_ftime', '(', '&', 'RAW_DATA', '(', 'header', ',', '15', ')', ')', ';', '/', '/', 'Read', 'path', '.', 'Check', 'path', 'length', 'field', '-', 'is', 'the', 'header', 'long', '/', '/', 'to', 'hold', 'this', 'full', 'path', '?', 'path_len', '=', 'RAW_DATA', '(', 'header', ',', '21', ')', ';', 'if', '(', 'min_len', '+', 'path_len', '>', 'header_len', ')', '{', 'return', '0', ';', '}', '/', '/', 'OS', 'type', '?', 'if', '(', '(', '*', 'header', ')', '->', 'header_level', '==', '0', ')', '{', '(', '*', 'header', ')', '->', 'os_type', '=', 'LHA_OS_TYPE_UNKNOWN', ';', '}', 'else', '{', '(', '*', 'header', ')', '->', 'os_type', '=', 'RAW_DATA', '(', 'header', ',', '24', '+', 'path_len', ')', ';', '}', '/', '/', 'Read', 'filename', 'field', ':', 'if', '(', '!process_level0_path', '(', '*', 'header', ',', '&', 'RAW_DATA', '(', 'header', ',', '22', ')', ',', 'path_len', ')', ')', '{', 'return', '0', ';', '}', '/', '/', 'CRC', 'field', '.', '(', '*', 'header', ')', '->', 'crc', '=', 'lha_decode_uint16', '(', '&', 'RAW_DATA', '(', 'header', ',', '22', '+', 'path_len', ')', ')', ';', '/', '/', 'Level', '0', 'headers', 'can', 'contain', 'extended', 'data', 'through', 'different', '/', '/', 'to', 'the', 'extended', 'header', 'system', 'used', 'in', 'level', '1', '+', '.', 'if', '(', '(', '*', 'header', ')', '->', 'header_level', '==', '&&', 'header_len', '>', 'LEVEL_0_MIN_HEADER_LEN', '+', 'path_len', ')', '{', 'process_level0_extended_area', '(', '*', 'header', ',', '&', 'RAW_DATA', '(', 'header', ',', 'LEVEL_0_MIN_HEADER_LEN', '+', '2', '+', 'path_len', ')', ',', 'header_len', '-', 'LEVEL_0_MIN_HEADER_LEN', '-', 'path_len', ')', ';', '}', 'return', '1', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
650,"['save_preference', '(', ')', '{', 'gchar', 'filename', '[', '512', ']', ';', 'xmlDoc', '*', 'doc', ';', 'xmlNode', '*', 'xpreference', ';', 'gint', 'items', ';', 'gint', 'i', ';', 'gchar', 'buff', '[', '512', ']', ';', 'LOG', '(', 'LOG_DEBUG', ',', '""""', ')', ';', 'sprintf', '(', 'filename', ',', '""""', ',', 'user_dir', ',', 'DIR_DELIMITER', ',', 'FILENAME_PREFERENCE', ')', ';', 'doc', '=', 'xml_doc_new', '(', ')', ';', 'doc', '->', 'encoding', '=', 'strdup', '(', '""""', ')', ';', 'doc', '->', 'version', '=', 'strdup', '(', '""""', ')', ';', 'xpreference', '=', 'xml_add_child', '(', 'doc', '->', 'root', ',', '""""', ',', 'NULL', ')', ';', 'items', '=', 'sizeof', '(', 'preferences', ')', '/', 'sizeof', '(', 'preferences', '[', '0', ']', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'items', ';', 'i', '++', ')', '{', 'switch', '(', 'preferences', '[', 'i', ']', '.', 'type', ')', '{', 'case', 'PREF_TYPE_INTEGER', ':', 'case', 'PREF_TYPE_BOOLEAN', ':', 'sprintf', '(', 'buff', ',', '""""', ',', '*', '(', '(', 'int', '*', ')', 'preferences', '[', 'i', ']', '.', 'addr', ')', ')', ';', 'xml_add_child', '(', 'xpreference', ',', 'preferences', '[', 'i', ']', '.', 'name', ',', 'buff', ')', ';', 'break', ';', 'case', 'PREF_TYPE_FLOAT', ':', 'sprintf', '(', 'buff', ',', '""""', ',', '*', '(', '(', 'float', '*', ')', 'preferences', '[', 'i', ']', '.', 'addr', ')', ')', ';', 'xml_add_child', '(', 'xpreference', ',', 'preferences', '[', 'i', ']', '.', 'name', ',', 'buff', ')', ';', 'break', ';', 'case', 'PREF_TYPE_STRING', ':', '/', '/', '\t\t\tif', '(', '(', 'preferences', '[', 'i', ']', '.', 'addr', '==', 'NULL', ')', 'xml_add_child', '(', 'xpreference', ',', 'preferences', '[', 'i', ']', '.', 'name', ',', '*', '(', '(', 'gchar', '*', '*', ')', 'preferences', '[', 'i', ']', '.', 'addr', ')', ')', ';', 'break', ';', 'default', ':', 'break', ';', '}', '}', 'xml_save_file', '(', 'filename', ',', 'doc', ')', ';', 'xml_destroy_document', '(', 'doc', ')', ';', 'LOG', '(', 'LOG_DEBUG', ',', '""""', ')', ';', 'return', '(', 'TRUE', ')', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  True,CWE-476  False,CWE-other  False
651,"['ssl3_ComputeECDHKeyHash', '(', 'SECOidTag', 'hashAlg', ',', 'SECItem', 'ec_params', ',', 'SECItem', 'server_ecpoint', ',', 'SSL3Random', '*', 'client_rand', ',', 'SSL3Random', '*', 'server_rand', ',', 'SSL3Hashes', '*', 'hashes', ',', 'PRBool', 'bypassPKCS11', ')', '{', 'PRUint8', '*', 'hashBuf', ';', 'PRUint8', '*', 'pBuf', ';', 'SECStatus', 'rv', '=', 'SECSuccess', ';', 'unsigned', 'int', 'bufLen', ';', '/', '*', '*', 'XXX', 'For', 'now', ',', 'we', 'only', 'support', 'named', 'curves', '(', 'the', '*', 'checks', 'are', 'made', 'before', 'this', 'method', 'is', 'called', ')', 'so', '*', 'takes', 'up', 'only', 'two', 'bytes', '.', 'ECPoint', 'needs', 'to', 'fit', 'in', '256', '*', '(', 'because', 'the', 'spec', 'says', 'the', 'length', 'must', 'fit', 'in', 'one', 'byte', ')', 'PRUint8', 'buf', '[', '2', '*', 'SSL3_RANDOM_LENGTH', '+', '2', '+', '1', '+', '256', ']', ';', 'bufLen', '=', '2', '*', 'SSL3_RANDOM_LENGTH', '+', 'ec_params', '.', 'len', '+', '1', '+', 'server_ecpoint', '.', 'len', ';', 'if', '(', 'bufLen', '<=', 'sizeof', 'buf', ')', '{', 'hashBuf', '=', 'buf', ';', '}', 'else', '{', 'hashBuf', '=', 'PORT_Alloc', '(', 'bufLen', ')', ';', 'if', '(', '!hashBuf', ')', '{', 'return', 'SECFailure', ';', '}', '}', 'memcpy', '(', 'hashBuf', ',', 'client_rand', ',', 'SSL3_RANDOM_LENGTH', ')', ';', 'pBuf', '=', 'hashBuf', '+', 'SSL3_RANDOM_LENGTH', ';', 'memcpy', '(', 'pBuf', ',', 'server_rand', ',', 'SSL3_RANDOM_LENGTH', ')', ';', 'pBuf', '+=', 'SSL3_RANDOM_LENGTH', ';', 'memcpy', '(', 'pBuf', ',', 'ec_params', '.', 'data', ',', 'ec_params', '.', 'len', ')', ';', 'pBuf', '+=', 'ec_params', '.', 'len', ';', 'pBuf', '[', '0', ']', '=', '(', 'PRUint8', ')', '(', 'server_ecpoint', '.', 'len', ')', ';', 'pBuf', '+=', '1', ';', 'memcpy', '(', 'pBuf', ',', 'server_ecpoint', '.', 'data', ',', 'server_ecpoint', '.', 'len', ')', ';', 'pBuf', '+=', 'server_ecpoint', '.', 'len', ';', 'PORT_Assert', '(', '(', 'unsigned', 'int', ')', '(', 'pBuf', '-', 'hashBuf', ')', '==', 'bufLen', ')', ';', 'rv', '=', 'ssl3_ComputeCommonKeyHash', '(', 'hashAlg', ',', 'hashBuf', ',', 'bufLen', ',', 'hashes', ',', 'bypassPKCS11', ')', ';', 'PRINT_BUF', '(', '95', ',', '(', 'NULL', ',', '""""', ',', 'hashBuf', ',', 'bufLen', ')', ')', ';', 'PRINT_BUF', '(', '95', ',', '(', 'NULL', ',', '""""', ',', 'hashes', '->', 'u', '.', 's', '.', 'md5', ',', 'MD5_LENGTH', ')', ')', ';', 'PRINT_BUF', '(', '95', ',', '(', 'NULL', ',', '""""', ',', 'hashes', '->', 'u', '.', 's', '.', 'sha', ',', 'SHA1_LENGTH', ')', ')', ';', 'if', '(', 'hashBuf', '!=', 'buf', ')', 'PORT_Free', '(', 'hashBuf', ')', ';', 'return', 'rv', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
652,"['print_info', '(', 'struct', 'gfs2_sbd', '*', 'sdp', ')', '{', 'log_notice', '(', '""""', ',', '_', '(', '""""', ')', ',', 'sdp', '->', 'path_name', ')', ';', 'log_notice', '(', '""""', ',', '_', '(', '""""', ')', ',', 'sdp', '->', 'device_name', ')', ';', 'log_notice', '(', '""""', ',', '_', '(', '""""', ')', ',', '(', 'unsigned', 'long', 'long', ')', 'fssize', ',', '(', 'unsigned', 'long', 'long', ')', 'fssize', ')', ';', 'log_notice', '(', '""""', ',', '_', '(', '""""', ')', ',', 'rgsize', ',', 'rgsize', ')', ';', 'log_notice', '(', '""""', ',', '_', '(', '""""', ')', ',', '(', 'unsigned', 'long', 'long', ')', 'sdp', '->', 'device', '.', 'length', ',', '(', 'unsigned', 'long', 'long', ')', 'sdp', '->', 'device', '.', 'length', ')', ';', 'log_notice', '(', '_', '(', '""""', ')', ',', '(', 'unsigned', 'long', 'long', ')', 'fsgrowth', '/', 'MB', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
653,"['vnc_connection_has_auth_type', '(', 'gpointer', 'data', ')', '{', 'VncConnection', '*', 'conn', '=', 'data', ';', 'VncConnectionPrivate', '*', 'priv', '=', 'conn', '->', 'priv', ';', 'if', '(', 'priv', '->', 'has_error', ')', 'return', 'TRUE', ';', 'if', '(', 'priv', '->', 'auth_type', '==', 'VNC_CONNECTION_AUTH_INVALID', ')', 'return', 'FALSE', ';', 'return', 'TRUE', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
654,"['node_remove', '(', 'Node', '*', 'node', ')', '{', 'Node', '*', 'tup', '=', 'node', '->', 'up', ',', '*', 'tdown', '=', 'node', '->', 'down', ';', 'if', '(', '(', 'node_left', '(', 'node', ')', '==', '0', ')', '&&', '(', 'node_up', '(', 'node', ')', '==', '0', ')', '&&', '(', 'node_down', '(', 'node', ')', '==', '0', ')', ')', '{', 'Node', '*', 'tnode', '=', 'node_insert_down', '(', 'node', ')', ';', 'node_setflag', '(', 'tnode', ',', 'F_temp', ',', '1', ')', ';', 'tdown', '=', 'node_down', '(', 'node', ')', ';', '}', 'while', '(', 'node_right', '(', 'node', ')', ')', 'node_remove', '(', 'node_right', '(', 'node', ')', ')', ';', 'if', '(', 'tup', ')', 'tup', '->', 'down', '=', 'tdown', ';', 'if', '(', 'tdown', ')', 'tdown', '->', 'up', '=', 'tup', ';', 'if', '(', '(', 'node_left', '(', 'node', ')', ')', '&&', '(', 'node_right', '(', 'node_left', '(', 'node', ')', ')', '==', 'node', ')', ')', '{', 'node', '->', 'left', '->', 'right', '=', 'tdown', ';', 'Node', '*', 'tnode', '=', 'node_left', '(', 'node', ')', ';', 'node', '->', 'left', '->', 'right', '=', '0', ';', 'node_free', '(', 'node', ')', ';', 'return', 'tnode', ';', '}', '}', 'node_free', '(', 'node', ')', ';', 'if', '(', 'tup', ')', 'return', 'tup', ';', 'if', '(', 'tdown', ')', 'return', 'tdown', ';', 'printf', '(', '""""', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
655,"['session_setup_clone_command', '(', 'void', ')', '{', 'gint', 'i', ';', 'SmPropValue', '*', 'vals', '=', 'g_new', '(', 'SmPropValue', ',', 'sm_argc', ')', ';', 'SmProp', 'prop', '=', '{', '.', 'name', '=', 'g_strdup', '(', 'SmCloneCommand', ')', ',', '.', 'type', '=', 'g_strdup', '(', 'SmLISTofARRAY8', ')', ',', '.', 'num_vals', '=', 'sm_argc', ',', '.', 'vals', '=', '}', ';', 'SmProp', '*', 'list', '=', '&', 'prop', ';', 'ob_debug_type', '(', 'OB_DEBUG_SM', ',', '""""', ',', 'sm_argc', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'sm_argc', ';', '++', 'i', ')', '{', 'vals', '[', 'i', ']', '.', 'value', '=', 'sm_argv', '[', 'i', ']', ';', 'vals', '[', 'i', ']', '.', 'length', '=', 'strlen', '(', 'sm_argv', '[', 'i', ']', ')', '+', '1', ';', 'ob_debug_type', '(', 'OB_DEBUG_SM', ',', '""""', ',', 'vals', '[', 'i', ']', '.', 'value', ')', ';', '}', 'SmcSetProperties', '(', 'sm_conn', ',', '1', ',', '&', 'list', ')', ';', 'g_free', '(', 'prop', '.', 'name', ')', ';', 'g_free', '(', 'prop', '.', 'type', ')', ';', 'g_free', '(', 'vals', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
656,"['mailpop3_top', '(', 'mailpop3', '*', 'f', ',', 'unsigned', 'int', 'indx', ',', 'unsigned', 'int', 'count', ',', 'char', '*', '*', 'result', ',', 'size_t', '*', 'result_len', ')', '{', 'char', 'command', '[', 'POP3_STRING_SIZE', ']', ';', 'struct', 'mailpop3_msg_info', '*', 'msginfo', ';', 'int', 'r', ';', 'if', '(', 'f', '->', 'pop3_state', '!=', 'POP3_STATE_TRANSACTION', ')', 'return', 'MAILPOP3_ERROR_BAD_STATE', ';', 'msginfo', '=', 'find_msg', '(', 'f', ',', 'indx', ')', ';', 'if', '(', 'msginfo', '==', 'NULL', ')', '{', 'f', '->', 'pop3_response', '=', 'NULL', ';', 'return', 'MAILPOP3_ERROR_NO_SUCH_MESSAGE', ';', '}', 'snprintf', '(', 'command', ',', 'POP3_STRING_SIZE', ',', '""""', ',', 'indx', ',', 'count', ')', ';', 'r', '=', 'send_command', '(', 'f', ',', 'command', ')', ';', 'if', '(', 'r', '==', '-', '1', ')', 'return', 'MAILPOP3_ERROR_STREAM', ';', 'return', 'mailpop3_get_content', '(', 'f', ',', 'msginfo', ',', 'result', ',', 'result_len', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
657,"['APar_ReturnChildrenAtoms', '(', 'short', 'this_atom', ',', 'uint8_t', 'atom_index', ')', '{', 'short', 'child_atom', '=', '0', ';', 'uint8_t', 'total_children', '=', '0', ';', 'short', 'iter', '=', 'parsedAtoms', '[', 'this_atom', ']', '.', 'NextAtomNumber', ';', 'while', '(', 'true', ')', '{', 'if', '(', '(', 'parsedAtoms', '[', 'iter', ']', '.', 'AtomicLevel', '==', 'parsedAtoms', '[', 'this_atom', ']', '.', 'AtomicLevel', '+', '1', '&&', 'this_atom', '>', '0', ')', '||', '(', 'this_atom', '==', '0', '&&', 'parsedAtoms', '[', 'iter', ']', '.', 'AtomicLevel', '==', '1', ')', ')', '{', 'total_children', '++', ';', 'if', '(', 'atom_index', '==', 'total_children', ')', '{', 'child_atom', '=', 'iter', ';', 'break', ';', '}', '}', 'if', '(', 'parsedAtoms', '[', 'iter', ']', '.', 'AtomicLevel', '<=', 'parsedAtoms', '[', 'this_atom', ']', '.', 'AtomicLevel', '&&', 'this_atom', '!=', '0', ')', '{', 'break', ';', '}', 'else', '{', 'iter', '=', 'parsedAtoms', '[', 'iter', ']', '.', 'NextAtomNumber', ';', '}', 'if', '(', 'iter', '==', '0', ')', '{', 'break', ';', '}', '}', 'if', '(', 'atom_index', '==', '0', ')', '{', 'child_atom', '=', '(', 'short', ')', 'total_children', ';', '}', 'return', 'child_atom', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
658,"['gfire_filetransfer_data_packet_request', '(', 'gfire_filetransfer', '*', 'p_transfer', ',', 'guint64', 'p_offset', ',', 'guint32', 'p_size', ',', 'guint32', 'p_msgid', ')', '{', 'if', '(', '!p_transfer', '||', 'purple_xfer_get_type', '(', 'p_transfer', '->', 'xfer', ')', '!=', 'PURPLE_XFER_SEND', '||', 'p_offset', '>=', 'p_transfer', '->', 'size', '||', 'p_size', '>', '0x01E00000', '/', '*', '30', 'MB', '*', '/', ')', 'return', ';', 'guint8', '*', 'data', '=', 'g_malloc', '(', 'p_size', ')', ';', 'lseek64', '(', 'p_transfer', '->', 'file', ',', 'p_offset', ',', 'SEEK_SET', ')', ';', 'int', 'size', '=', 'read', '(', 'p_transfer', '->', 'file', ',', 'data', ',', 'p_size', ')', ';', 'if', '(', 'size', '<=', '0', ')', '{', 'g_free', '(', 'data', ')', ';', 'purple_xfer_error', '(', 'PURPLE_XFER_SEND', ',', 'purple_xfer_get_account', '(', 'p_transfer', '->', 'xfer', ')', ',', 'purple_xfer_get_remote_user', '(', 'p_transfer', '->', 'xfer', ')', ',', '_', '(', '""""', ')', ')', ';', '/', '/', 'Abort', 'the', 'gfire_p2p_session_remove_file_transfer', '(', 'p_transfer', '->', 'session', ',', 'p_transfer', ',', 'TRUE', ')', ';', 'return', ';', '}', 'gfire_p2p_dl_proto_send_file_data_packet', '(', 'p_transfer', '->', 'session', ',', 'p_transfer', '->', 'fileid', ',', 'p_offset', ',', 'size', ',', 'data', ',', 'p_msgid', ')', ';', 'g_free', '(', 'data', ')', ';', '/', '/', 'Update', 'if', '(', '(', 'purple_xfer_get_bytes_sent', '(', 'p_transfer', '->', 'xfer', ')', '+', 'size', ')', '>', 'purple_xfer_get_size', '(', 'p_transfer', '->', 'xfer', ')', ')', 'purple_xfer_set_size', '(', 'p_transfer', '->', 'xfer', ',', 'purple_xfer_get_bytes_sent', '(', 'p_transfer', '->', 'xfer', ')', '+', 'size', ')', ';', 'purple_xfer_set_bytes_sent', '(', 'p_transfer', '->', 'xfer', ',', 'purple_xfer_get_bytes_sent', '(', 'p_transfer', '->', 'xfer', ')', '+', 'size', ')', ';', 'purple_xfer_update_progress', '(', 'p_transfer', '->', 'xfer', ')', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
659,"['show_bios_limit', '(', 'struct', 'cpufreq_policy', '*', 'policy', ',', 'char', '*', 'buf', ')', '{', 'unsigned', 'int', 'limit', ';', 'int', 'ret', ';', 'if', '(', 'cpufreq_driver', '->', 'bios_limit', ')', '{', 'ret', '=', 'cpufreq_driver', '->', 'bios_limit', '(', 'policy', '->', 'cpu', ',', '&', 'limit', ')', ';', 'if', '(', '!ret', ')', 'return', 'sprintf', '(', 'buf', ',', '""""', ',', 'limit', ')', ';', '}', 'return', 'sprintf', '(', 'buf', ',', '""""', ',', 'policy', '->', 'cpuinfo', '.', 'max_freq', ')', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
660,"['ChooseIndexColumnNames', '(', 'List', '*', 'indexElems', ')', '{', 'List\t', '*', 'result', '=', 'NIL', ';', 'ListCell', '*', 'lc', ';', 'foreach', '(', 'lc', ',', 'indexElems', ')', '{', 'IndexElem', '*', 'ielem', '=', '(', 'IndexElem', '*', ')', 'lfirst', '(', 'lc', ')', ';', 'const', 'char', '*', 'origname', ';', 'const', 'char', '*', 'curname', ';', 'int\t\t\ti', ';', 'char\t\tbuf', '[', 'NAMEDATALEN', ']', ';', 'if', '(', 'ielem', '->', 'indexcolname', ')', 'else', 'if', '(', 'ielem', '->', 'name', ')', 'curname', '=', 'origname', ';', 'for', '(', 'i', '=', '1', ';', ';', 'i', '++', ')', '{', 'ListCell', '*', 'lc2', ';', 'char\t\tnbuf', '[', '32', ']', ';', 'int\t\t\tnlen', ';', 'foreach', '(', 'lc2', ',', 'result', ')', '{', 'if', '(', 'strcmp', '(', 'curname', ',', '(', 'char', '*', ')', 'lfirst', '(', 'lc2', ')', ')', '==', '0', ')', 'break', ';', '}', 'if', '(', 'lc2', '==', 'NULL', ')', 'sprintf', '(', 'nbuf', ',', '""""', ',', 'i', ')', ';', 'nlen', '=', 'pg_mbcliplen', '(', 'origname', ',', 'strlen', '(', 'origname', ')', ',', 'NAMEDATALEN', '-', '1', '-', 'strlen', '(', 'nbuf', ')', ')', ';', 'memcpy', '(', 'buf', ',', 'origname', ',', 'nlen', ')', ';', 'strcpy', '(', 'buf', '+', 'nlen', ',', 'nbuf', ')', ';', 'curname', '=', 'buf', ';', '}', 'result', '=', 'lappend', '(', 'result', ',', 'pstrdup', '(', 'curname', ')', ')', ';', '}', 'return', 'result', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
661,"['sjlj_build_landing_pads', '(', 'void', ')', '{', 'int', 'num_dispatch', ';', 'num_dispatch', '=', 'vec_safe_length', '(', 'cfun', '->', 'eh', '->', 'lp_array', ')', ';', 'if', '(', 'num_dispatch', '==', '0', ')', 'return', ';', 'sjlj_lp_call_site_index', '.', 'safe_grow_cleared', '(', 'num_dispatch', ')', ';', 'num_dispatch', '=', 'sjlj_assign_call_site_values', '(', ')', ';', 'if', '(', 'num_dispatch', '>', '0', ')', '{', 'rtx', 'dispatch_label', '=', 'gen_label_rtx', '(', ')', ';', 'int', 'align', '=', 'STACK_SLOT_ALIGNMENT', '(', 'sjlj_fc_type_node', ',', 'TYPE_MODE', '(', 'sjlj_fc_type_node', ')', ',', 'TYPE_ALIGN', '(', 'sjlj_fc_type_node', ')', ')', ';', 'crtl', '->', 'eh', '.', '=', 'assign_stack_local', '(', 'TYPE_MODE', '(', 'sjlj_fc_type_node', ')', ',', 'int_size_in_bytes', '(', 'sjlj_fc_type_node', ')', ',', 'align', ')', ';', 'sjlj_mark_call_sites', '(', ')', ';', 'sjlj_emit_function_enter', '(', 'dispatch_label', ')', ';', 'sjlj_emit_dispatch_table', '(', 'dispatch_label', ',', 'num_dispatch', ')', ';', 'sjlj_emit_function_exit', '(', ')', ';', '}', '/', '*', 'If', 'we', 'do', 'not', 'have', 'any', 'landing', 'pads', ',', 'we', 'may', 'still', 'need', 'to', 'register', 'else', 'if', '(', 'function_needs_eh_personality', '(', 'cfun', ')', '!=', 'eh_personality_none', ')', '{', 'int', 'align', '=', 'STACK_SLOT_ALIGNMENT', '(', 'sjlj_fc_type_node', ',', 'TYPE_MODE', '(', 'sjlj_fc_type_node', ')', ',', 'TYPE_ALIGN', '(', 'sjlj_fc_type_node', ')', ')', ';', 'crtl', '->', 'eh', '.', '=', 'assign_stack_local', '(', 'TYPE_MODE', '(', 'sjlj_fc_type_node', ')', ',', 'int_size_in_bytes', '(', 'sjlj_fc_type_node', ')', ',', 'align', ')', ';', 'sjlj_mark_call_sites', '(', ')', ';', 'sjlj_emit_function_enter', '(', 'NULL_RTX', ')', ';', 'sjlj_emit_function_exit', '(', ')', ';', '}', 'sjlj_lp_call_site_index', '.', 'release', '(', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
662,"['add_hidden_capitalized_word', '(', 'char', '*', 'word', ',', 'int', 'wbl', ',', 'int', 'wcl', ',', 'unsigned', 'short', '*', 'flags', ',', 'int', 'al', ',', 'char', '*', 'dp', ',', 'int', 'captype', ')', '{', '/', '/', 'add', 'inner', 'capitalized', 'forms', 'to', 'handle', 'the', 'following', 'allcap', 'forms', ':', '/', '/', 'Mixed', 'caps', ':', 'OpenOffice', '.', 'org', '->', 'OPENOFFICE', '.', '/', '/', 'Allcaps', 'with', 'suffixes', ':', 'if', '(', '(', '(', 'captype', '==', 'HUHCAP', ')', '||', '(', 'captype', '==', 'HUHINITCAP', ')', '||', '(', '(', 'captype', '==', 'ALLCAP', ')', '&&', '(', 'flags', '!=', 'NULL', ')', ')', ')', '&&', '!', '(', '(', 'flags', '!=', 'NULL', ')', '&&', 'TESTAFF', '(', 'flags', ',', 'forbiddenword', ',', 'al', ')', ')', ')', '{', 'unsigned', 'short', '*', 'flags2', '=', '(', 'unsigned', 'short', '*', ')', 'malloc', '(', 'sizeof', '(', 'unsigned', 'short', ')', '*', '(', 'al', '+', '1', ')', ')', ';', 'if', '(', '!flags2', ')', 'return', '1', ';', 'if', '(', 'al', ')', 'memcpy', '(', 'flags2', ',', 'flags', ',', 'al', '*', 'sizeof', '(', 'unsigned', 'short', ')', ')', ';', 'flags2', '[', 'al', ']', '=', 'ONLYUPCASEFLAG', ';', 'if', '(', 'utf8', ')', '{', 'char', 'st', '[', 'BUFSIZE', ']', ';', 'w_char', 'w', '[', 'BUFSIZE', ']', ';', 'int', 'wlen', '=', 'u8_u16', '(', 'w', ',', 'BUFSIZE', ',', 'word', ')', ';', 'mkallsmall_utf', '(', 'w', ',', 'wlen', ',', 'langnum', ')', ';', 'mkallcap_utf', '(', 'w', ',', '1', ',', 'langnum', ')', ';', 'u16_u8', '(', 'st', ',', 'BUFSIZE', ',', 'w', ',', 'wlen', ')', ';', 'return', 'add_word', '(', 'st', ',', 'wbl', ',', 'wcl', ',', 'flags2', ',', 'al', '+', '1', ',', 'dp', ',', 'true', ')', ';', '}', 'else', '{', 'mkallsmall', '(', 'word', ',', 'csconv', ')', ';', 'mkinitcap', '(', 'word', ',', 'csconv', ')', ';', 'return', 'add_word', '(', 'word', ',', 'wbl', ',', 'wcl', ',', 'flags2', ',', 'al', '+', '1', ',', 'dp', ',', 'true', ')', ';', '}', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
663,"['fcoe_str_to_dev_loss', '(', 'const', 'char', '*', 'buf', ',', 'unsigned', 'long', '*', 'val', ')', '{', 'int', 'ret', ';', 'ret', '=', 'kstrtoul', '(', 'buf', ',', '0', ',', 'val', ')', ';', 'if', '(', 'ret', ')', 'return', '-', 'EINVAL', ';', '/', '*', '*', 'Check', 'for', 'overflow', ';', 'dev_loss_tmo', 'is', 'if', '(', '*', 'val', '>', 'UINT_MAX', ')', 'return', '-', 'EINVAL', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
664,"['cursorcmd', '(', ')', '{', '#ifdef', 'int\t\t\ti', ';', 'int\t\t\tcol', '=', '1', ';', 'int\t\t\trow', '=', '0', ';', 'for', '(', 'i', '=', '0', ';', 'col', '<', 'cmdspos', '&&', 'i', '<', 'cmdpos', ';', '++', 'i', ')', '{', 'if', '(', 'ISkanji', '(', 'cmdbuff', '[', 'i', ']', ')', ')', '{', 'if', '(', 'col', '>=', '(', 'Columns', '-', '1', ')', ')', '{', 'col', '=', '2', ';', 'row', '++', ';', '}', 'else', 'if', '(', 'col', '>=', '(', 'Columns', '-', '2', ')', ')', '{', 'col', '=', '0', ';', 'row', '++', ';', '}', 'col', '+=', '2', ';', 'i', '++', ';', '}', '{', 'col', '+=', 'charsize', '(', 'cmdbuff', '[', 'i', ']', ')', ';', 'if', '(', 'col', '>=', 'Columns', ')', '{', 'col', '-=', 'Columns', ';', 'row', '++', ';', '}', '}', '}', 'msg_pos', '(', 'cmdline_row', '+', 'row', ',', 'col', ')', ';', 'msg_pos', '(', 'cmdline_row', '+', '(', 'cmdspos', '/', '(', 'int', ')', 'Columns', ')', ',', 'cmdspos', '%', '(', 'int', ')', 'Columns', ')', ';', 'windgoto', '(', 'msg_row', ',', 'msg_col', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
665,"['readi', '(', 'struct', 'inode', '*', 'ip', ',', 'char', '*', 'dst', ',', 'uint', 'off', ',', 'uint', 'n', ')', '{', 'uint', 'tot', ',', 'm', ';', 'struct', 'buf', '*', 'bp', ';', 'if', '(', 'ip', '->', 'type', '==', 'T_DEV', ')', '{', 'if', '(', 'ip', '->', 'major', '<', '0', '||', 'ip', '->', 'major', '>=', 'NDEV', '||', '!devsw', '[', 'ip', '->', 'major', ']', '.', 'read', ')', 'return', '-', '1', ';', 'return', 'devsw', '[', 'ip', '->', 'major', ']', '.', 'read', '(', 'ip', ',', 'dst', ',', 'n', ')', ';', '}', 'if', '(', 'off', '>', 'ip', '->', 'size', '||', 'off', '+', 'n', '<', 'off', ')', 'return', '-', '1', ';', 'if', '(', 'off', '+', 'n', '>', 'ip', '->', 'size', ')', 'n', '=', 'ip', '->', 'size', '-', 'off', ';', 'for', '(', 'tot', '=', '0', ';', 'tot', '<', 'n', ';', 'tot', '+=', 'm', ',', 'off', '+=', 'm', ',', 'dst', '+=', 'm', ')', '{', 'bp', '=', 'bread', '(', 'ip', '->', 'dev', ',', 'bmap', '(', 'ip', ',', 'off', '/', 'BSIZE', ',', '0', ')', ')', ';', 'm', '=', 'min', '(', 'n', '-', 'tot', ',', 'BSIZE', '-', 'off', '%', 'BSIZE', ')', ';', 'memmove', '(', 'dst', ',', 'bp', '->', 'data', '+', 'off', '%', 'BSIZE', ',', 'm', ')', ';', 'brelse', '(', 'bp', ')', ';', '}', 'return', 'n', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
666,"['kfd_event_destroy', '(', 'struct', 'kfd_process', '*', 'p', ',', 'uint32_t', 'event_id', ')', '{', 'struct', 'kfd_event', '*', 'ev', ';', 'int', 'ret', '=', '0', ';', 'mutex_lock', '(', '&', 'p', '->', 'event_mutex', ')', ';', 'ev', '=', 'lookup_event_by_id', '(', 'p', ',', 'event_id', ')', ';', 'if', '(', 'ev', ')', 'destroy_event', '(', 'p', ',', 'ev', ')', ';', 'ret', '=', '-', 'EINVAL', ';', 'mutex_unlock', '(', '&', 'p', '->', 'event_mutex', ')', ';', 'return', 'ret', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
667,"['print', '(', 'iter_type', 'f', ',', 'iter_type', 'l', ')', '{', 'for', '(', 'iter_type', 'i', '=', 'f', ';', 'i', '!=', 'l', ';', '++', 'i', ')', 'print', '(', '*', 'i', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
668,"['pdb_decode_acct_ctrl', '(', 'const', 'char', '*', 'p', ')', '{', 'int', 'acct_ctrl', '=', '0', ';', 'int', 'done', '=', '0', ';', '/', '*', '*', 'Check', 'if', 'the', 'account', 'type', 'bits', 'have', 'been', 'encoded', 'after', '*', 'NT', 'password', '(', 'in', 'the', 'form', '[', 'NDHTUWSLXI', ']', ')', '.', 'if', '(', '*', 'p', '!=', ""''"", ')', 'return', '0', ';', 'for', '(', 'p', '++', ';', '*', 'p', '&&', '!done', ';', 'p', '++', ')', '{', 'switch', '(', '*', 'p', ')', '{', 'acct_ctrl', '|=', 'ACB_PWNOTREQ', ';', 'break', ';', 'acct_ctrl', '|=', 'ACB_DISABLED', ';', 'break', ';', 'acct_ctrl', '|=', 'ACB_HOMDIRREQ', ';', 'break', ';', 'acct_ctrl', '|=', 'ACB_TEMPDUP', ';', 'break', ';', 'acct_ctrl', '|=', 'ACB_NORMAL', ';', 'break', ';', 'acct_ctrl', '|=', 'ACB_MNS', ';', 'break', ';', 'acct_ctrl', '|=', 'ACB_WSTRUST', ';', 'break', ';', 'acct_ctrl', '|=', 'ACB_SVRTRUST', ';', 'break', ';', 'acct_ctrl', '|=', 'ACB_AUTOLOCK', ';', 'break', ';', 'acct_ctrl', '|=', 'ACB_PWNOEXP', ';', 'break', ';', 'acct_ctrl', '|=', 'ACB_DOMTRUST', ';', 'break', ';', 'acct_ctrl', '|=', 'ACB_PW_EXPIRED', ';', 'break', ';', 'break', ';', 'case', ""''"", ':', 'case', ""''"", ':', 'case', ""''"", ':', 'case', ""''"", ':', 'default', ':', 'done', '=', '1', ';', 'break', ';', '}', '}', 'return', 'acct_ctrl', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
669,"['parseAttributes', '(', 'int', 'p0', ',', 'NodePtr', 'node', ',', 'bool', '*', 'quickClose', ')', '{', '*', 'quickClose', '=', 'false', ';', 'int', 'p', '=', 'p0', ';', 'NamedNodeMap', 'attributes', ';', 'while', '(', 'p', '<', 'len', ')', '{', 'p', '=', 'skipwhite', '(', 'p', ')', ';', 'int', 'ch', '=', 'get', '(', 'p', ')', ';', 'if', '(', 'ch', '==', ""''"", '||', 'ch', '==', ""''"", ')', '/', '/', 'break', ';', 'else', 'if', '(', 'ch', '==', ""''"", '&&', 'p', '<', 'len', '+', '1', ')', '{', 'p', '++', ';', 'p', '=', 'skipwhite', '(', 'p', ')', ';', 'ch', '=', 'peek', '(', 'p', ')', ';', 'if', '(', 'ch', '==', ""''"", ')', '{', 'p', '++', ';', '*', 'quickClose', '=', 'true', ';', 'return', 'p', ';', '}', '}', 'DOMString', 'shortName', ';', 'DOMString', 'prefix', ';', 'DOMString', 'qualifiedName', ';', 'int', 'p2', '=', 'getPrefixedWord', '(', 'p', ',', 'prefix', ',', 'shortName', ',', 'qualifiedName', ')', ';', 'if', '(', 'p2', '<=', 'p', ')', 'break', ';', 'p', '=', 'p2', ';', 'p', '=', 'skipwhite', '(', 'p', ')', ';', 'ch', '=', 'get', '(', 'p', ')', ';', 'if', '(', 'ch', '!=', ""''"", ')', 'break', ';', 'p', '++', ';', 'p', '=', 'skipwhite', '(', 'p', ')', ';', 'DOMString', 'attrValue', ';', 'p2', '=', 'getQuoted', '(', 'p', ',', 'attrValue', ')', ';', 'p', '=', 'p2', ';', 'DOMString', 'namespaceURI', '=', '""""', ';', 'if', '(', 'prefix', '==', '""""', '||', 'shortName', '==', '""""', ')', 'namespaceURI', '=', 'XMLNSNAME', ';', '/', '/', '##', 'Now', 'let', 'us', 'make', 'the', 'attribute', 'and', 'give', 'it', 'to', 'the', 'AttrPtr', 'attr', '=', 'document', '->', 'createAttributeNS', '(', 'namespaceURI', ',', 'qualifiedName', ')', ';', 'attr', '->', 'setValue', '(', 'attrValue', ')', ';', 'node', '->', 'getAttributes', '(', ')', '.', 'setNamedItemNS', '(', 'attr', ')', ';', '}', '/', '/', 'while', 'p', '<', 'return', 'p', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
670,"['DumpLSRSendEvent', '(', 'GF_SceneDumper', '*', 'sdump', ',', 'GF_Command', '*', 'com', ')', '{', 'char', 'szID', '[', '1024', ']', ';', 'char', '*', 'lsrns', '=', 'sd_get_lsr_namespace', '(', 'com', '->', 'in_scene', ')', ';', 'DUMP_IND', '(', 'sdump', ')', ';', 'fprintf', '(', 'sdump', '->', 'trace', ',', '""""', '%', 's\\""""', '%', 's\\""""', ',', 'lsrns', ',', 'lsr_format_node_id', '(', 'com', '->', 'node', ',', 'com', '->', 'RouteID', ',', 'szID', ')', ',', 'gf_dom_event_get_name', '(', 'com', '->', 'send_event_name', ')', ')', ';', 'if', '(', 'com', '->', 'send_event_name', '<=', 'GF_EVENT_MOUSEWHEEL', ')', 'fprintf', '(', 'sdump', '->', 'trace', ',', '""""', '%', 'g', '%', 'g\\""""', ',', 'FIX2FLT', '(', 'com', '->', 'send_event_x', ')', ',', 'FIX2FLT', '(', 'com', '->', 'send_event_y', ')', ')', ';', 'switch', '(', 'com', '->', 'send_event_name', ')', '{', 'case', 'GF_EVENT_KEYDOWN', ':', 'case', 'GF_EVENT_LONGKEYPRESS', ':', 'case', 'GF_EVENT_REPEAT_KEY', ':', 'case', 'GF_EVENT_SHORT_ACCESSKEY', ':', 'if', '(', 'com', '->', 'send_event_integer', ')', '{', 'fprintf', '(', 'sdump', '->', 'trace', ',', '""""', '%', 's\\""""', ',', 'gf_dom_get_key_name', '(', 'com', '->', 'send_event_integer', ')', ')', ';', 'break', ';', '}', 'default', ':', 'if', '(', 'com', '->', 'send_event_integer', ')', 'fprintf', '(', 'sdump', '->', 'trace', ',', '""""', '%', 'd\\""""', ',', 'com', '->', 'send_event_integer', ')', ';', 'if', '(', 'com', '->', 'send_event_string', ')', 'fprintf', '(', 'sdump', '->', 'trace', ',', '""""', '%', 's\\""""', ',', 'com', '->', 'send_event_string', ')', ';', 'break', ';', '}', 'fprintf', '(', 'sdump', '->', 'trace', ',', '""""', ')', ';', 'return', 'GF_OK', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
671,"['diagram_lua_new_from_array', '(', 'lua_State', '*', 'L', ')', '{', 'GtDiagram', '*', '*', 'diagram', ';', 'GtArray', '*', 'nodes', ';', 'GtRange', 'range', ';', 'GtStyle', '*', 'style', ';', 'nodes', '=', 'genome_node_table_to_array', '(', 'L', ')', ';', 'range', '.', 'start', '=', 'luaL_checklong', '(', 'L', ',', '2', ')', ';', 'range', '.', 'end', '=', 'luaL_checklong', '(', 'L', ',', '3', ')', ';', 'luaL_argcheck', '(', 'L', ',', 'range', '.', 'start', '>', '0', ',', '2', ',', '""""', ')', ';', 'luaL_argcheck', '(', 'L', ',', 'range', '.', 'end', '>', '0', ',', '3', ',', '""""', ')', ';', 'luaL_argcheck', '(', 'L', ',', 'range', '.', 'start', '<=', 'range', '.', 'end', ',', '2', ',', '""""', ')', ';', 'style', '=', 'gt_lua_get_style_from_registry', '(', 'L', ')', ';', 'diagram', '=', 'lua_newuserdata', '(', 'L', ',', 'sizeof', '(', 'GtDiagram', '*', ')', ')', ';', 'gt_assert', '(', 'diagram', ')', ';', '*', 'diagram', '=', 'gt_diagram_new_from_array', '(', 'nodes', ',', '&', 'range', ',', 'style', ')', ';', 'gt_array_delete', '(', 'nodes', ')', ';', 'luaL_getmetatable', '(', 'L', ',', 'DIAGRAM_METATABLE', ')', ';', 'lua_setmetatable', '(', 'L', ',', '-', '2', ')', ';', 'return', '1', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
672,"['clone_payload', '(', 'const', 'unsigned', 'char', '*', 'pkt_ptr', ',', 'size_t', 'bytes_left', ')', '{', 'struct', 'isakmp_generic', 'hdr', ';', 'unsigned', 'char', '*', 'clone_ptr', ';', 'size_t', 'payload_len', ';', '/', '*', '*', '\tEnsure', 'that', 'there', 'is', 'sufficient', 'data', 'to', 'fill', 'the', '*', '\theader', '.', 'if', '(', 'bytes_left', '<', 'sizeof', '(', 'struct', 'isakmp_generic', ')', ')', '{', 'return', 'NULL', ';', '}', '/', '*', '*', '\tFill', 'in', 'the', 'generic', 'header', 'from', 'the', 'packet', '.', 'We', 'must', 'do', '*', '\tby', 'copying', 'rather', 'than', 'overlaying', 'because', 'we', 'cannot', 'be', '*', '\tthat', '""""', 'is', 'suitably', 'aligned', '.', 'memcpy', '(', '&', 'hdr', ',', 'pkt_ptr', ',', 'sizeof', '(', 'hdr', ')', ')', ';', '/', '*', '*', '\tDetermine', 'the', 'length', 'of', 'the', 'payload', '.', 'payload_len', '=', 'ntohs', '(', 'hdr', '.', 'isag_length', ')', ';', 'if', '(', 'payload_len', '>', 'bytes_left', ')', 'payload_len', '=', 'bytes_left', ';', '/', '*', '*', '\tAllocate', 'memory', 'and', 'copy', 'payload', '.', 'clone_ptr', '=', 'Malloc', '(', 'payload_len', ')', ';', 'memcpy', '(', 'clone_ptr', ',', 'pkt_ptr', ',', 'payload_len', ')', ';', 'return', 'clone_ptr', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
673,"['get_client_host', '(', 'aClient', '*', 'cptr', ')', '{', 'static', 'char', 'nbuf', '[', 'HOSTLEN', '*', '2', '+', 'USERLEN', '+', '5', ']', ';', 'if', '(', '!MyConnect', '(', 'cptr', ')', ')', 'return', 'cptr', '->', 'name', ';', 'if', '(', '!cptr', '->', 'user', ')', 'return', 'get_client_name', '(', 'cptr', ',', 'TRUE', ')', ';', '#ifdef', 'if', '(', 'IsUnixSocket', '(', 'cptr', ')', ')', 'sprintf', '(', 'nbuf', ',', '""""', ',', 'cptr', '->', 'name', ',', 'ME', ')', ';', '(', 'void', ')', 'sprintf', '(', 'nbuf', ',', '""""', ',', 'cptr', '->', 'name', ',', 'USERLEN', ',', '(', '!', '(', 'cptr', '->', 'flags', '&', 'FLAGS_GOTID', ')', ')', '?', '""""', ':', 'cptr', '->', 'auth', ',', 'HOSTLEN', ',', 'cptr', '->', 'user', '->', 'sip', ')', ';', 'return', 'nbuf', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
674,"['notify', '(', 'SoNotList', '*', 'list', ')', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '/', '{', 'if', '(', 'getNumChildren', '(', ')', '!=', 'nchildren', ')', '{', 'nchildren', '=', 'getNumChildren', '(', ')', ';', 'childrenSensor', '->', 'schedule', '(', ')', ';', '}', 'SoNotRec', '*', 'rec', '=', 'list', '->', 'getFirstRec', '(', ')', ';', '/', '/', 'only', 'interested', 'in', 'a', 'field', '-', 'to', '-', 'container', 'if', '(', 'rec', '->', 'getType', '(', ')', '==', 'SoNotRec', ':', ':', 'CONTAINER', '&&', 'rec', '->', 'getBase', '(', ')', '==', 'this', '&&', 'list', '->', 'getLastField', '(', ')', '==', '&', 'whichChild', ')', '{', 'whichChildSensor', '->', 'schedule', '(', ')', ';', '}', 'SoSwitch', ':', ':', 'notify', '(', 'list', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
675,"['unlink', '(', 'void', ')', '{', 'if', '(', 'engine', ')', '{', 'if', '(', 'engine', '->', 'windows', '==', 'this', ')', 'engine', '->', 'windows', '=', 'next', ';', 'if', '(', 'engine', '->', 'surface', '(', ')', '==', 'surface', ')', 'surface', '=', 'NULL', ';', '}', 'if', '(', 'next', ')', 'next', '->', 'prev', '=', 'prev', ';', 'if', '(', 'prev', ')', 'prev', '->', 'next', '=', 'next', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
676,"['GetData', '(', 'void', ')', '{', 'TclData', '*', 'dataPtr', ';', 'int', 'tid', ',', 'new', ';', 'dataPtr', '=', 'Ns_TlsGet', '(', '&', 'tls', ')', ';', 'if', '(', 'dataPtr', '==', 'NULL', ')', '{', 'dataPtr', '=', 'ns_malloc', '(', 'sizeof', '(', 'TclData', ')', ')', ';', 'dataPtr', '->', 'cancel', '=', 'Tcl_AsyncCreate', '(', 'AsyncCancel', ',', 'NULL', ')', ';', 'Tcl_InitHashTable', '(', '&', 'dataPtr', '->', 'interps', ',', 'TCL_ONE_WORD_KEYS', ')', ';', 'tid', '=', 'Ns_ThreadId', '(', ')', ';', 'Ns_MutexLock', '(', '&', 'tlock', ')', ';', 'dataPtr', '->', 'hPtr', '=', 'Tcl_CreateHashEntry', '(', '&', 'threads', ',', '(', 'char', '*', ')', 'tid', ',', '&', 'new', ')', ';', 'Tcl_SetHashValue', '(', 'dataPtr', '->', 'hPtr', ',', 'dataPtr', ')', ';', 'Ns_MutexUnlock', '(', '&', 'tlock', ')', ';', 'Ns_TlsSet', '(', '&', 'tls', ',', 'dataPtr', ')', ';', '}', 'return', 'dataPtr', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
677,"['NITFExtractMetadata', '(', 'char', '*', '*', '*', 'ppapszMetadata', ',', 'const', 'char', '*', 'pachHeader', ',', 'int', 'nStart', ',', 'int', 'nLength', ',', 'const', 'char', '*', 'pszName', ')', '{', 'char', 'szWork', '[', '400', ']', ';', 'char', '*', 'pszWork', ';', 'if', '(', 'nLength', '>=', 'sizeof', '(', 'szWork', ')', '-', '1', ')', 'pszWork', '=', '(', 'char', '*', ')', 'CPLMalloc', '(', 'nLength', '+', '1', ')', ';', 'pszWork', '=', 'szWork', ';', 'while', '(', 'nLength', '>', '0', '&&', 'pachHeader', '[', 'nStart', '+', 'nLength', '-', '1', ']', '==', ""''"", ')', 'nLength', '--', ';', 'memcpy', '(', 'pszWork', ',', 'pachHeader', '+', 'nStart', ',', 'nLength', ')', ';', 'pszWork', '[', 'nLength', ']', '=', ""''"", ';', '*', 'ppapszMetadata', '=', 'CSLSetNameValue', '(', '*', 'ppapszMetadata', ',', 'pszName', ',', 'pszWork', ')', ';', 'if', '(', 'szWork', '!=', 'pszWork', ')', 'CPLFree', '(', 'pszWork', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
678,"['smp_fetch_ssl_x_sig_alg', '(', 'struct', 'proxy', '*', 'px', ',', 'struct', 'session', '*', 'l4', ',', 'void', '*', 'l7', ',', 'unsigned', 'int', 'opt', ',', 'const', 'struct', 'arg', '*', 'args', ',', 'struct', 'sample', '*', 'smp', ',', 'const', 'char', '*', 'kw', ')', '{', 'int', 'cert_peer', '=', '(', 'kw', '[', '4', ']', '==', ""''"", ')', '?', '1', ':', '0', ';', 'X509', '*', 'crt', ';', 'int', 'nid', ';', 'struct', 'connection', '*', 'conn', ';', 'if', '(', '!l4', ')', 'return', '0', ';', 'conn', '=', 'objt_conn', '(', 'l4', '->', 'si', '[', '0', ']', '.', 'end', ')', ';', 'if', '(', '!conn', '||', 'conn', '->', 'xprt', '!=', '&', 'ssl_sock', ')', 'return', '0', ';', 'if', '(', '!', '(', 'conn', '->', 'flags', '&', 'CO_FL_CONNECTED', ')', ')', '{', 'smp', '->', 'flags', '|=', 'SMP_F_MAY_CHANGE', ';', 'return', '0', ';', '}', 'if', '(', 'cert_peer', ')', 'crt', '=', 'SSL_get_peer_certificate', '(', 'conn', '->', 'xprt_ctx', ')', ';', 'crt', '=', 'SSL_get_certificate', '(', 'conn', '->', 'xprt_ctx', ')', ';', 'if', '(', '!crt', ')', 'return', '0', ';', 'nid', '=', 'OBJ_obj2nid', '(', '(', 'ASN1_OBJECT', '*', ')', '(', 'crt', '->', 'cert_info', '->', 'signature', '->', 'algorithm', ')', ')', ';', 'smp', '->', 'data', '.', 'str', '.', 'str', '=', '(', 'char', '*', ')', 'OBJ_nid2sn', '(', 'nid', ')', ';', 'if', '(', '!smp', '->', 'data', '.', 'str', '.', 'str', ')', '{', 'if', '(', 'cert_peer', ')', 'X509_free', '(', 'crt', ')', ';', 'return', '0', ';', '}', 'smp', '->', 'type', '=', 'SMP_T_STR', ';', 'smp', '->', 'flags', '|=', 'SMP_F_CONST', ';', 'smp', '->', 'data', '.', 'str', '.', 'len', '=', 'strlen', '(', 'smp', '->', 'data', '.', 'str', '.', 'str', ')', ';', 'if', '(', 'cert_peer', ')', 'X509_free', '(', 'crt', ')', ';', 'return', '1', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
679,"['tick_nohz_update_jiffies', '(', 'ktime_t', 'now', ')', '{', 'unsigned', 'long', 'flags', ';', '__this_cpu_write', '(', 'tick_cpu_sched', '.', 'idle_waketime', ',', 'now', ')', ';', 'local_irq_save', '(', 'flags', ')', ';', 'tick_do_update_jiffies64', '(', 'now', ')', ';', 'local_irq_restore', '(', 'flags', ')', ';', 'touch_softlockup_watchdog', '(', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
680,"['match_pci_dev_by_id', '(', 'struct', 'device', '*', 'dev', ',', 'void', '*', 'data', ')', '{', 'struct', 'pci_dev', '*', 'pdev', '=', 'to_pci_dev', '(', 'dev', ')', ';', 'struct', 'pci_device_id', '*', 'id', '=', 'data', ';', 'if', '(', 'pci_match_one_device', '(', 'id', ',', 'pdev', ')', ')', 'return', '1', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
681,"['config_set_pagedsizelimit', '(', 'const', 'char', '*', 'attrname', ',', 'char', '*', 'value', ',', 'char', '*', 'errorbuf', ',', 'int', 'apply', ')', '{', 'int', 'retVal', '=', 'LDAP_SUCCESS', ';', 'long', 'pagedsizelimit', ';', 'char', '*', 'endp', '=', 'NULL', ';', 'Slapi_Backend', '*', 'be', ';', 'char', '*', 'cookie', ';', 'slapdFrontendConfig_t', '*', 'slapdFrontendConfig', '=', 'getFrontendConfig', '(', ')', ';', 'if', '(', 'config_value_is_null', '(', 'attrname', ',', 'value', ',', 'errorbuf', ',', '0', ')', ')', '{', 'return', 'LDAP_OPERATIONS_ERROR', ';', '}', 'errno', '=', '0', ';', 'pagedsizelimit', '=', 'strtol', '(', 'value', ',', '&', 'endp', ',', '10', ')', ';', 'if', '(', '*', 'endp', '!=', ""''"", '||', 'errno', '==', 'ERANGE', '||', 'pagedsizelimit', '<', '-', '1', ')', '{', 'PR_snprintf', '(', 'errorbuf', ',', 'SLAPI_DSE_RETURNTEXT_SIZE', ',', '""""', '%', 's\\""""', ',', 'attrname', ',', 'value', ',', '(', 'long', 'long', 'int', ')', 'LONG_MAX', ')', ';', 'retVal', '=', 'LDAP_OPERATIONS_ERROR', ';', 'return', 'retVal', ';', '}', 'if', '(', 'apply', ')', '{', 'CFG_LOCK_WRITE', '(', 'slapdFrontendConfig', ')', ';', 'slapdFrontendConfig', '->', 'pagedsizelimit', '=', 'pagedsizelimit', ';', 'cookie', '=', 'NULL', ';', 'be', '=', 'slapi_get_first_backend', '(', '&', 'cookie', ')', ';', 'while', '(', 'be', ')', '{', 'be', '->', 'be_pagedsizelimit', '=', 'slapdFrontendConfig', '->', 'pagedsizelimit', ';', 'be', '=', 'slapi_get_next_backend', '(', 'cookie', ')', ';', '}', 'CFG_UNLOCK_WRITE', '(', 'slapdFrontendConfig', ')', ';', 'slapi_ch_free', '(', '(', 'void', '*', '*', ')', '&', 'cookie', ')', ';', '}', 'return', 'retVal', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
682,"['APar_ForcePadding', '(', 'uint32_t', 'padding_amount', ')', '{', 'if', '(', 'tree_display_only', '||', 'padding_amount', '==', '0', ')', '{', 'return', ';', '}', 'if', '(', 'udta_dynamics', '.', 'free_atom_repository', ')', '{', 'parsedAtoms', '[', 'udta_dynamics', '.', 'free_atom_repository', ']', '.', 'AtomicLength', '=', 'padding_amount', ';', 'parsedAtoms', '[', 'udta_dynamics', '.', 'free_atom_repository', ']', '.', 'AtomicData', '=', '(', 'char', '*', ')', 'malloc', '(', 'sizeof', '(', 'char', ')', '*', 'padding_amount', ')', ';', '/', '/', 'allocate', 'memory', 'to', 'write', 'the', 'NULL', 'space', 'out', ')', 'memset', '(', 'parsedAtoms', '[', 'udta_dynamics', '.', 'free_atom_repository', ']', '.', 'AtomicData', ',', '0', ',', 'sizeof', '(', 'char', ')', '*', 'padding_amount', ')', ';', '}', 'else', 'if', '(', 'udta_dynamics', '.', 'free_atom_secondary_repository', ')', '{', 'parsedAtoms', '[', 'udta_dynamics', '.', 'free_atom_secondary_repository', ']', '.', 'AtomicLength', '=', 'padding_amount', ';', 'parsedAtoms', '[', 'udta_dynamics', '.', 'free_atom_secondary_repository', ']', '.', 'AtomicData', '=', '(', 'char', '*', ')', 'malloc', '(', 'sizeof', '(', 'char', ')', '*', 'padding_amount', ')', ';', 'memset', '(', 'parsedAtoms', '[', 'udta_dynamics', '.', 'free_atom_secondary_repository', ']', '.', 'AtomicData', ',', '0', ',', 'sizeof', '(', 'char', ')', '*', 'padding_amount', ')', ';', '}', 'else', '{', 'APar_InterjectNewAtom', '(', '""""', ',', 'CHILD_ATOM', ',', 'SIMPLE_ATOM', ',', 'padding_amount', ',', '0', ',', '0', ',', '1', ',', 'APar_FindLastChild_of_ParentAtom', '(', 'udta_dynamics', '.', 'moov_atom', ')', ')', ';', '}', 'new_file_size', '+=', 'padding_amount', ';', 'return', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
683,"['from_unicode', '(', 'CHARSET', 'charset', ',', 'int', 'u', ')', '{', 'short', 'int', '*', 'p', ';', 'if', '(', '(', 'p', '=', 'charset', '[', '(', 'unsigned', ')', 'u', '>>', '8', ']', ')', ')', '{', 'return', 'p', '[', 'u', '&', '0xff', ']', ';', '}', 'else', '{', 'return', '-', '1', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
684,"['setup', '(', 'int', 'argc', ',', 'const', 'char', '*', '*', 'argv', ')', '{', 'char', '*', '*', 'retval', '=', 'NULL', ';', 'const', 'char', '*', 'val', ';', 'int', 'opt_quiet', '=', '0', ';', 'int', 'argi', ';', 'val', '=', 'getenv', '(', '""""', ')', ';', 'if', '(', 'val', '&&', '(', 'atoi', '(', 'val', ')', '>', '0', ')', ')', '{', 'test_timeout', '=', 'atoi', '(', 'val', ')', ';', '}', 'test_path', '=', 'crut_find_testsdir', '(', 'argv', '[', '0', ']', ')', ';', 'argv0', '=', 'argv', '[', '0', ']', ';', 'for', '(', 'argi', '=', '1', ';', 'argi', '<', 'argc', ';', '++', 'argi', ')', '{', 'val', '=', 'argv', '[', 'argi', ']', ';', 'if', '(', '(', 'val', '[', '0', ']', '!=', ""''"", ')', '||', '(', 'strlen', '(', 'val', ')', '!=', '2', ')', ')', 'break', ';', 'switch', '(', 'val', '[', '1', ']', ')', '{', 'case', ""''"", ':', 'opt_keep', '=', '1', ';', 'break', ';', 'case', ""''"", ':', '++', 'opt_verbose', ';', 'break', ';', 'case', ""''"", ':', 'opt_quiet', '=', '1', ';', 'break', ';', 'case', ""''"", ':', 'opt_fake', '=', '1', ';', 'break', ';', 'case', ""''"", ':', 'opt_debug', '=', '1', ';', 'break', ';', 'default', ':', 'die', '(', '""""', ',', 'val', ')', ';', '}', '}', 'if', '(', 'opt_verbose', '==', '3', ')', '{', 'crut_arguments', '=', 'strdup', '(', '""""', ')', ';', 'crut_cmd', '[', 'crut_argc', '++', ']', '=', '""""', ';', 'putenv', '(', '""""', ')', ';', '}', 'else', 'if', '(', 'opt_verbose', '==', '2', ')', '{', 'crut_arguments', '=', 'strdup', '(', '""""', ')', ';', 'crut_cmd', '[', 'crut_argc', '++', ']', '=', '""""', ';', '}', 'else', '{', 'crut_arguments', '=', 'strdup', '(', '""""', ')', ';', '}', 'if', '(', 'opt_fake', ')', '{', 'crut_arguments', '=', 'crut_sappendf', '(', 'crut_arguments', ',', '""""', ')', ';', 'crut_cmd', '[', 'crut_argc', '++', ']', '=', '""""', ';', '}', 'if', '(', 'opt_debug', ')', '{', 'crut_arguments', '=', 'crut_sappendf', '(', 'crut_arguments', ',', '""""', ')', ';', 'crut_cmd', '[', 'crut_argc', '++', ']', '=', '""""', ';', '}', 'crut_cmd', '[', 'crut_argc', '+', '1', ']', '=', 'NULL', ';', 'if', '(', 'crut_argc', '+', '1', '>', '5', ')', 'die', '(', '""""', ')', ';', 'if', '(', 'argi', '<', 'argc', ')', '{', 'int', 'len', '=', 'argc', '-', 'argi', ';', 'int', 'i', ';', 'retval', '=', 'malloc', '(', '(', '1', '+', 'len', ')', '*', 'sizeof', '(', 'char', '*', ')', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'len', ';', '++', 'i', ')', '{', 'retval', '[', 'i', ']', '=', 'strdup', '(', 'argv', '[', 'argi', '+', 'i', ']', ')', ';', '}', 'retval', '[', 'len', ']', '=', 'NULL', ';', '}', 'else', '{', 'char', '*', 'test', '=', 'crut_basename', '(', 'argv', '[', '0', ']', ')', ';', 'char', '*', 'tmp', '=', 'strstr', '(', 'test', ',', '""""', ')', ';', 'if', '(', '!tmp', ')', 'die', '(', '""""', ',', 'argv', '[', '0', ']', ')', ';', '*', 'tmp', '=', ""''"", ';', 'retval', '=', 'malloc', '(', '2', '*', 'sizeof', '(', 'char', '*', ')', ')', ';', 'retval', '[', '0', ']', '=', 'test', ';', 'retval', '[', '1', ']', '=', 'NULL', ';', 'opt_quiet', '=', '1', ';', '}', 'if', '(', 'opt_quiet', '&&', '!opt_verbose', ')', 'opt_verbose', '=', '-', '1', ';', 'return', 'retval', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  True,CWE-476  True,CWE-other  True
685,"['hydra_address2string', '(', 'char', '*', 'address', ')', '{', 'struct', 'sockaddr_in', 'target', ';', 'struct', 'sockaddr_in6', 'target6', ';', 'if', '(', 'address', '[', '0', ']', '==', '4', ')', '{', 'memcpy', '(', '&', 'target', '.', 'sin_addr', '.', 's_addr', ',', '&', 'address', '[', '1', ']', ',', '4', ')', ';', 'return', 'inet_ntoa', '(', '(', 'struct', 'in_addr', ')', 'target', '.', 'sin_addr', ')', ';', '}', '#ifdef', 'if', '(', 'address', '[', '0', ']', '==', '16', ')', '{', 'memcpy', '(', '&', 'target6', '.', 'sin6_addr', ',', '&', 'address', '[', '1', ']', ',', '16', ')', ';', 'inet_ntop', '(', 'AF_INET6', ',', '&', 'target6', '.', 'sin6_addr', ',', 'ipstring', ',', 'sizeof', '(', 'ipstring', ')', ')', ';', 'return', 'ipstring', ';', '}', '{', 'fprintf', '(', 'stderr', ',', '""""', ')', ';', 'return', 'NULL', ';', '}', 'return', 'NULL', ';', '/', '/', 'not', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
686,"['xfs_bmdr_to_bmbt', '(', 'struct', 'xfs_inode\t', '*', 'ip', ',', 'xfs_bmdr_block_t\t', '*', 'dblock', ',', 'int\t\t\tdblocklen', ',', 'struct', 'xfs_btree_block\t', '*', 'rblock', ',', 'int\t\t\trblocklen', ')', '{', 'struct', 'xfs_mount\t', '*', 'mp', '=', 'ip', '->', 'i_mount', ';', 'int\t\t\tdmxr', ';', 'xfs_bmbt_key_t\t\t', '*', 'fkp', ';', '__be64\t\t\t', '*', 'fpp', ';', 'xfs_bmbt_key_t\t\t', '*', 'tkp', ';', '__be64\t\t\t', '*', 'tpp', ';', 'if', '(', 'xfs_sb_version_hascrc', '(', '&', 'mp', '->', 'm_sb', ')', ')', 'xfs_btree_init_block_int', '(', 'mp', ',', 'rblock', ',', 'XFS_BUF_DADDR_NULL', ',', 'XFS_BMAP_CRC_MAGIC', ',', '0', ',', '0', ',', 'ip', '->', 'i_ino', ',', 'XFS_BTREE_LONG_PTRS', '|', 'XFS_BTREE_CRC_BLOCKS', ')', ';', 'xfs_btree_init_block_int', '(', 'mp', ',', 'rblock', ',', 'XFS_BUF_DADDR_NULL', ',', 'XFS_BMAP_MAGIC', ',', '0', ',', '0', ',', 'ip', '->', 'i_ino', ',', 'XFS_BTREE_LONG_PTRS', ')', ';', 'rblock', '->', 'bb_level', '=', 'dblock', '->', 'bb_level', ';', 'ASSERT', '(', 'be16_to_cpu', '(', 'rblock', '->', 'bb_level', ')', '>', '0', ')', ';', 'rblock', '->', 'bb_numrecs', '=', 'dblock', '->', 'bb_numrecs', ';', 'dmxr', '=', 'xfs_bmdr_maxrecs', '(', 'dblocklen', ',', '0', ')', ';', 'fkp', '=', 'XFS_BMDR_KEY_ADDR', '(', 'dblock', ',', '1', ')', ';', 'tkp', '=', 'XFS_BMBT_KEY_ADDR', '(', 'mp', ',', 'rblock', ',', '1', ')', ';', 'fpp', '=', 'XFS_BMDR_PTR_ADDR', '(', 'dblock', ',', '1', ',', 'dmxr', ')', ';', 'tpp', '=', 'XFS_BMAP_BROOT_PTR_ADDR', '(', 'mp', ',', 'rblock', ',', '1', ',', 'rblocklen', ')', ';', 'dmxr', '=', 'be16_to_cpu', '(', 'dblock', '->', 'bb_numrecs', ')', ';', 'memcpy', '(', 'tkp', ',', 'fkp', ',', 'sizeof', '(', '*', 'fkp', ')', '*', 'dmxr', ')', ';', 'memcpy', '(', 'tpp', ',', 'fpp', ',', 'sizeof', '(', '*', 'fpp', ')', '*', 'dmxr', ')', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
687,"['_wrap_svm_node_array_set', '(', 'PyObject', '*', 'self', ',', 'PyObject', '*', 'args', ')', '{', 'int', 'argc', ';', 'PyObject', '*', 'argv', '[', '5', ']', ';', 'int', 'ii', ';', 'if', '(', '!PyTuple_Check', '(', 'args', ')', ')', 'SWIG_fail', ';', 'argc', '=', 'args', '?', '(', 'int', ')', 'PyObject_Length', '(', 'args', ')', ':', '0', ';', 'for', '(', 'ii', '=', '0', ';', '(', 'ii', '<', '4', ')', '&&', '(', 'ii', '<', 'argc', ')', ';', 'ii', '++', ')', '{', 'argv', '[', 'ii', ']', '=', 'PyTuple_GET_ITEM', '(', 'args', ',', 'ii', ')', ';', '}', 'if', '(', 'argc', '==', '3', ')', '{', 'int', '_v', ';', 'void', '*', 'vptr', '=', '0', ';', 'int', 'res', '=', 'SWIG_ConvertPtr', '(', 'argv', '[', '0', ']', ',', '&', 'vptr', ',', 'SWIGTYPE_p_svm_node', ',', '0', ')', ';', '_v', '=', 'SWIG_CheckState', '(', 'res', ')', ';', 'if', '(', '_v', ')', '{', '_v', '=', '(', 'argv', '[', '1', ']', '!=', '0', ')', ';', 'if', '(', '_v', ')', '{', '_v', '=', '(', 'argv', '[', '2', ']', '!=', '0', ')', ';', 'if', '(', '_v', ')', '{', 'return', '_wrap_svm_node_array_set__SWIG_1', '(', 'self', ',', 'args', ')', ';', '}', '}', '}', '}', 'if', '(', 'argc', '==', '4', ')', '{', 'int', '_v', ';', 'void', '*', 'vptr', '=', '0', ';', 'int', 'res', '=', 'SWIG_ConvertPtr', '(', 'argv', '[', '0', ']', ',', '&', 'vptr', ',', 'SWIGTYPE_p_svm_node', ',', '0', ')', ';', '_v', '=', 'SWIG_CheckState', '(', 'res', ')', ';', 'if', '(', '_v', ')', '{', '{', 'int', 'res', '=', 'SWIG_AsVal_int', '(', 'argv', '[', '1', ']', ',', 'NULL', ')', ';', '_v', '=', 'SWIG_CheckState', '(', 'res', ')', ';', '}', 'if', '(', '_v', ')', '{', '{', 'int', 'res', '=', 'SWIG_AsVal_int', '(', 'argv', '[', '2', ']', ',', 'NULL', ')', ';', '_v', '=', 'SWIG_CheckState', '(', 'res', ')', ';', '}', 'if', '(', '_v', ')', '{', '{', 'int', 'res', '=', 'SWIG_AsVal_double', '(', 'argv', '[', '3', ']', ',', 'NULL', ')', ';', '_v', '=', 'SWIG_CheckState', '(', 'res', ')', ';', '}', 'if', '(', '_v', ')', '{', 'return', '_wrap_svm_node_array_set__SWIG_0', '(', 'self', ',', 'args', ')', ';', '}', '}', '}', '}', '}', 'fail', ':', 'SWIG_SetErrorMsg', '(', 'PyExc_NotImplementedError', ',', '""""', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
688,"['NewExecuteContext', '(', 'void', ')', '{', 'execute_context_t', '*', 'result', ';', 'result', '=', 'malloc', '(', 'sizeof', '(', 'execute_context_t', ')', ')', ';', 'result', '->', 'response_file', '=', 'TempFile', '(', '""""', ')', ';', 'result', '->', 'stream', '=', 'fopen', '(', 'result', '->', 'response_file', ',', '""""', ')', ';', 'if', '(', 'result', '->', 'stream', '==', 'NULL', ')', '{', 'fprintf', '(', 'stderr', ',', '""""', ')', ';', 'exit', '(', '-', '1', ')', ';', '}', 'return', 'result', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
689,"['fl_show_alert', '(', 'const', 'char', '*', 'q1', ',', 'const', 'char', '*', 'q2', ',', 'const', 'char', '*', 'q3', ',', 'int', ')', '{', 'fl_alert', '(', '""""', ',', 'q1', '?', 'q1', ':', '""""', ',', 'q2', '?', 'q2', ':', '""""', ',', 'q3', '?', 'q3', ':', '""""', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
690,"['Dispose', '(', ')', '{', 'i', ':', ':', 'Isolate', '*', 'isolate', '=', 'reinterpret_cast', '<', 'i', ':', ':', 'Isolate', '*', '>', '(', 'this', ')', ';', 'if', '(', '!ApiCheck', '(', '!isolate', '->', 'IsInUse', '(', ')', ',', '""""', ',', '""""', ')', ')', '{', 'return', ';', '}', 'isolate', '->', 'TearDown', '(', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
691,"['symdef', '(', 'cbuf', ',', 'SymbolProps', ')', 'char', '*', 'cbuf', ';', 'HEADLIST', '*', 'SymbolProps', ';', '{', '/', '*', '*', 'BEGIN', 'SYMBOL', 'int', 'i', ';', 'int', 'index', ';', 'int', 'type', ';', 'if', '(', 'TOLWR', ')', 'strlwr', '(', 'cbuf', ')', ';', 'CurrentLayer', '=', 'CurrentDataType', '=', 'CurrentAttribute', '=', '-', '1', ';', 'index', '=', 'struct_index', '(', 'cbuf', ')', ';', 'strcpy', '(', 'CurrentSymbol', ',', 'cbuf', ')', ';', '#ifdef', '{', 'char', '*', 'c', ';', 'SymDesc', '=', 'open_symbol', '(', 'c', '=', 'alias', '(', 'cbuf', ')', ')', ';', 'if', '(', '!strcmp', '(', 'c', ',', 'cbuf', ')', ')', 'printf', '(', '""""', ',', 'cbuf', ')', ';', 'printf', '(', '""""', ',', 'cbuf', ',', 'c', ')', ';', '}', 'SymDesc', '=', 'open_symbol', '(', 'cbuf', ')', ';', 'printf', '(', '""""', ',', 'cbuf', ')', ';', 'if', '(', 'Root_flag', ')', '{', 'if', '(', 'strcmp', '(', 'RootSymbol', ',', 'cbuf', ')', '==', '0', ')', 'RootSymbolNumber', '=', 'index', ';', '}', 'while', '(', 'SymbolProps', '!=', 'NULL', ')', '{', 'fprintf', '(', 'SymDesc', ',', '""""', ',', 'SymbolProps', '->', 'hd_RecordType', ',', 'SymbolProps', '->', 'hd_Text', ')', ';', 'SymbolProps', '=', 'SymbolProps', '->', 'hd_Succ', ';', '}', 'fprintf', '(', 'SymDesc', ',', '""""', ',', 'cbuf', ')', ';', 'fprintf', '(', 'SymDesc', ',', '""""', ',', 'index', ')', ';', 'fprintf', '(', 'SymDesc', ',', '""""', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', '6', ';', '++', 'i', ')', 'fprintf', '(', 'SymDesc', ',', '""""', ',', 'struct_dates', '[', 'i', ']', ')', ';', 'fprintf', '(', 'SymDesc', ',', '""""', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', '6', ';', '++', 'i', ')', 'fprintf', '(', 'SymDesc', ',', '""""', ',', 'struct_dates', '[', 'i', '+', '6', ']', ')', ';', 'fprintf', '(', 'SymDesc', ',', '""""', ')', ';', '/', '*', '*', 'loop', 'through', 'records', 'and', 'exit', 'on', 'while', '(', '(', 'type', '=', 'get_record', '(', 'cbuf', ')', ')', '!=', 'ENDSTR', ')', '{', 'switch', '(', 'type', ')', '{', 'case', 'BOUNDARY', ':', 's_bndry', '(', 'cbuf', ')', ';', 'break', ';', 'case', 'PATH', ':', 's_path', '(', 'cbuf', ')', ';', 'break', ';', 'case', 'SREF', ':', 's_sref', '(', 'cbuf', ')', ';', 'break', ';', 'case', 'AREF', ':', 's_aref', '(', 'cbuf', ')', ';', 'break', ';', 'case', 'TEXT', ':', 's_text', '(', 'cbuf', ')', ';', 'break', ';', 'case', 'SNAPNODE', ':', '/', '*', '*', 'snapnodes', 'are', 'not', 'while', '(', '(', 'type', '=', 'get_record', '(', 'cbuf', ')', ')', '!=', '17', ')', ';', 'break', ';', 'default', ':', 'err_fatal_2', '(', '""""', ',', 'type', ')', ';', '}', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
692,"['description_set_func', '(', 'GtkTreeViewColumn', '*', 'tree_column', ',', 'GtkCellRenderer', '*', 'cell', ',', 'GtkTreeModel', '*', 'model', ',', 'GtkTreeIter', '*', 'iter', ',', 'gpointer', 'data', ')', '{', 'gchar', '*', 'description', ';', 'CcKeyboardItem', '*', 'item', ';', 'ShortcutType', 'type', ';', 'gtk_tree_model_get', '(', 'model', ',', 'iter', ',', 'DETAIL_DESCRIPTION_COLUMN', ',', '&', 'description', ',', 'DETAIL_KEYENTRY_COLUMN', ',', '&', 'item', ',', 'DETAIL_TYPE_COLUMN', ',', '&', 'type', ',', '-', '1', ')', ';', 'if', '(', 'type', '==', 'SHORTCUT_TYPE_XKB_OPTION', ')', '{', 'g_object_set', '(', 'cell', ',', '""""', ',', 'description', ',', 'NULL', ')', ';', '}', '{', 'if', '(', 'item', '!=', 'NULL', ')', 'g_object_set', '(', 'cell', ',', '""""', ',', 'FALSE', ',', '""""', ',', 'item', '->', 'description', '!=', 'NULL', '?', 'item', '->', 'description', ':', '_', '(', '""""', ')', ',', 'NULL', ')', ';', 'g_object_set', '(', 'cell', ',', '""""', ',', 'FALSE', ',', 'NULL', ')', ';', '}', 'g_free', '(', 'description', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
693,"['unpack_restart', '(', 'int', 'nlocal', ',', 'int', 'nth', ')', '{', '/', '/', 'ipage', '=', 'NULL', 'if', 'being', 'called', 'from', 'granular', 'pair', 'style', 'init', '(', ')', 'if', '(', 'ipage', '==', 'NULL', ')', 'allocate_pages', '(', ')', ';', '/', '/', 'skip', 'to', 'Nth', 'set', 'of', 'extra', 'double', '*', '*', 'extra', '=', 'atom', '->', 'extra', ';', 'int', 'm', '=', '0', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'nth', ';', 'i', '++', ')', 'm', '+=', 'static_cast', '<', 'int', '>', '(', 'extra', '[', 'nlocal', ']', '[', 'm', ']', ')', ';', 'm', '++', ';', '/', '/', 'allocate', 'new', 'chunks', 'from', 'ipage', ',', 'dpage', 'for', 'incoming', 'npartner', '[', 'nlocal', ']', '=', 'static_cast', '<', 'int', '>', '(', 'extra', '[', 'nlocal', ']', '[', 'm', '++', ']', ')', ';', 'maxtouch', '=', 'MAX', '(', 'maxtouch', ',', 'npartner', '[', 'nlocal', ']', ')', ';', 'partner', '[', 'nlocal', ']', '=', 'ipage', '->', 'get', '(', 'npartner', '[', 'nlocal', ']', ')', ';', 'shearpartner', '[', 'nlocal', ']', '=', 'dpage', '->', 'get', '(', 'npartner', '[', 'nlocal', ']', ')', ';', 'for', '(', 'int', 'n', '=', '0', ';', 'n', '<', 'npartner', '[', 'nlocal', ']', ';', 'n', '++', ')', '{', 'partner', '[', 'nlocal', ']', '[', 'n', ']', '=', 'static_cast', '<', 'int', '>', '(', 'extra', '[', 'nlocal', ']', '[', 'm', '++', ']', ')', ';', 'shearpartner', '[', 'nlocal', ']', '[', 'n', ']', '[', '0', ']', '=', 'extra', '[', 'nlocal', ']', '[', 'm', '++', ']', ';', 'shearpartner', '[', 'nlocal', ']', '[', 'n', ']', '[', '1', ']', '=', 'extra', '[', 'nlocal', ']', '[', 'm', '++', ']', ';', 'shearpartner', '[', 'nlocal', ']', '[', 'n', ']', '[', '2', ']', '=', 'extra', '[', 'nlocal', ']', '[', 'm', '++', ']', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
694,"['mlx4_master_comm_channel', '(', 'struct', 'work_struct', '*', 'work', ')', '{', 'struct', 'mlx4_mfunc_master_ctx', '*', 'master', '=', 'container_of', '(', 'work', ',', 'struct', 'mlx4_mfunc_master_ctx', ',', 'comm_work', ')', ';', 'struct', 'mlx4_mfunc', '*', 'mfunc', '=', 'container_of', '(', 'master', ',', 'struct', 'mlx4_mfunc', ',', 'master', ')', ';', 'struct', 'mlx4_priv', '*', 'priv', '=', 'container_of', '(', 'mfunc', ',', 'struct', 'mlx4_priv', ',', 'mfunc', ')', ';', 'struct', 'mlx4_dev', '*', 'dev', '=', '&', 'priv', '->', 'dev', ';', '__be32', '*', 'bit_vec', ';', 'u32', 'comm_cmd', ';', 'u32', 'vec', ';', 'int', 'i', ',', 'j', ',', 'slave', ';', 'int', 'toggle', ';', 'int', 'served', '=', '0', ';', 'int', 'reported', '=', '0', ';', 'u32', 'slt', ';', 'bit_vec', '=', 'master', '->', 'comm_arm_bit_vector', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'COMM_CHANNEL_BIT_ARRAY_SIZE', ';', 'i', '++', ')', '{', 'vec', '=', 'be32_to_cpu', '(', 'bit_vec', '[', 'i', ']', ')', ';', 'for', '(', 'j', '=', '0', ';', 'j', '<', '32', ';', 'j', '++', ')', '{', 'if', '(', '!', '(', 'vec', '&', '(', '1', '<<', 'j', ')', ')', ')', 'continue', ';', '++', 'reported', ';', 'slave', '=', '(', 'i', '*', '32', ')', '+', 'j', ';', 'comm_cmd', '=', 'swab32', '(', 'readl', '(', '&', 'mfunc', '->', 'comm', '[', 'slave', ']', '.', 'slave_write', ')', ')', ';', 'slt', '=', 'swab32', '(', 'readl', '(', '&', 'mfunc', '->', 'comm', '[', 'slave', ']', '.', 'slave_read', ')', ')', '>>', '31', ';', 'toggle', '=', 'comm_cmd', '>>', '31', ';', 'if', '(', 'toggle', '!=', 'slt', ')', '{', 'if', '(', 'master', '->', 'slave_state', '[', 'slave', ']', '.', '!=', 'slt', ')', '{', 'pr_info', '(', '""""', ',', 'slave', ',', 'slt', ',', 'master', '->', 'slave_state', '[', 'slave', ']', '.', 'comm_toggle', ')', ';', 'master', '->', 'slave_state', '[', 'slave', ']', '.', 'comm_toggle', '=', 'slt', ';', '}', 'mlx4_master_do_cmd', '(', 'dev', ',', 'slave', ',', 'comm_cmd', '>>', '16', '&', '0xff', ',', 'comm_cmd', '&', '0xffff', ',', 'toggle', ')', ';', '++', 'served', ';', '}', '}', '}', 'if', '(', 'reported', '&&', 'reported', '!=', 'served', ')', 'mlx4_warn', '(', 'dev', ',', '""""', ',', 'reported', ',', 'served', ')', ';', 'if', '(', 'mlx4_ARM_COMM_CHANNEL', '(', 'dev', ')', ')', 'mlx4_warn', '(', 'dev', ',', '""""', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
695,"['i40e_get_ethtool_fdir_all', '(', 'struct', 'i40e_pf', '*', 'pf', ',', 'struct', 'ethtool_rxnfc', '*', 'cmd', ',', 'u32', '*', 'rule_locs', ')', '{', 'struct', 'i40e_fdir_filter', '*', 'rule', ';', 'struct', 'hlist_node', '*', 'node2', ';', 'int', 'cnt', '=', '0', ';', 'cmd', '->', 'data', '=', 'i40e_get_fd_cnt_all', '(', 'pf', ')', ';', 'hlist_for_each_entry_safe', '(', 'rule', ',', 'node2', ',', '&', 'pf', '->', 'fdir_filter_list', ',', 'fdir_node', ')', '{', 'if', '(', 'cnt', '==', 'cmd', '->', 'rule_cnt', ')', 'return', '-', 'EMSGSIZE', ';', 'rule_locs', '[', 'cnt', ']', '=', 'rule', '->', 'fd_id', ';', 'cnt', '++', ';', '}', 'cmd', '->', 'rule_cnt', '=', 'cnt', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
696,"['printDoc', '(', 'const', 'char', '*', 'projname', ',', 'const', 'char', '*', 'docdev', ',', 'const', 'char', '*', 'faustversion', ')', '{', 'gDocDevSuffix', '=', 'docdev', ';', '/', '/', 'cerr', '<<', '""""', '<<', 'gFaustDirectory', '<<', '""""', '<<', 'endl', ';', '/', '/', 'cerr', '<<', '""""', '<<', 'gFaustSuperDirectory', '<<', '""""', '<<', 'endl', ';', '/', '/', 'cerr', '<<', '""""', '<<', 'gFaustSuperSuperDirectory', '<<', '""""', '<<', 'endl', ';', '/', '/', 'cerr', '<<', '""""', '<<', 'gCurrentDir', '<<', '""""', '<<', 'endl', ';', 'makedir', '(', 'projname', ')', ';', '\t\t\t', '/', '/', 'create', 'a', 'top', 'directory', 'to', 'store', 'string', 'svgTopDir', '=', 'subst', '(', '""""', ',', 'projname', ')', ';', 'makedir', '(', 'svgTopDir', '.', 'c_str', '(', ')', ')', ';', '/', '/', 'create', 'a', 'directory', 'to', 'store', 'svg', '-', '*', 'subdirectories', '.', 'string', 'cppdir', '=', 'subst', '(', '""""', ',', 'projname', ')', ';', 'makedir', '(', 'cppdir', '.', 'c_str', '(', ')', ')', ';', '\t', '/', '/', 'create', 'a', 'cpp', 'directory', '.', 'string', 'pdfdir', '=', 'subst', '(', '""""', ',', 'projname', ')', ';', 'makedir', '(', 'pdfdir', '.', 'c_str', '(', ')', ')', ';', '\t', '/', '/', 'create', 'a', 'pdf', 'directory', '.', 'vector', '<', 'string', '>', 'pathnames', '=', 'gReader', '.', 'listSrcFiles', '(', ')', ';', 'copyFaustSources', '(', 'projname', ',', 'pathnames', ')', ';', 'string', 'texdir', '=', 'subst', '(', '""""', ',', 'projname', ')', ';', 'mkchdir', '(', 'texdir', '.', 'c_str', '(', ')', ')', ';', '\t', '/', '/', 'create', 'a', 'directory', 'and', 'move', 'into', '.', 'ofstream', 'docout', '(', 'subst', '(', '""""', ',', 'gDocName', ',', 'docdev', ')', '.', 'c_str', '(', ')', ')', ';', 'cholddir', '(', ')', ';', '\t\t\t\t\t', '/', '/', 'return', 'to', 'current', 'loadTranslationFile', '(', 'gDocLang', ')', ';', 'if', '(', 'gDocVector', '.', 'empty', '(', ')', ')', '{', 'declareAutoDoc', '(', ')', ';', '}', 'printfaustdocstamp', '(', 'faustversion', ',', 'docout', ')', ';', '\t\t\t\t\t\t', '/', '/', '/', '<', 'Faust', 'version', 'and', 'compilation', 'date', '(', 'comment', ')', '.', 'istream', '*', 'latexheader', '=', 'openArchFile', '(', 'gLatexheaderfilename', ')', ';', 'printlatexheader', '(', '*', 'latexheader', ',', 'faustversion', ',', 'docout', ')', ';', '\t\t\t\t\t\t', '/', '/', '/', '<', 'Static', 'LaTeX', 'header', '(', 'packages', 'and', 'setup', ')', '.', 'printdoccontent', '(', 'svgTopDir', '.', 'c_str', '(', ')', ',', 'gDocVector', ',', 'faustversion', ',', 'docout', ')', ';', '\t\t', '/', '/', '/', '<', 'Generate', 'math', 'contents', '(', 'main', 'stuff!', ')', '.', 'printlatexfooter', '(', 'docout', ')', ';', '\t\t\t\t\t\t\t\t\t\t', '/', '/', '/', '<', 'Static', 'LaTeX', 'footer', '.', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
697,"['aisc_talking_get_index', '(', 'int', 'u', ',', 'int', 'o', ')', '{', 'if', '(', 'aisc_server_index', '==', '-', '1', ')', '{', 'aisc_server_error', '=', '""""', ';', 'return', '-', '1', ';', '}', 'if', '(', '(', 'aisc_server_index', '<', 'u', ')', '||', '(', 'aisc_server_index', '>=', 'o', ')', ')', '{', 'sprintf', '(', 'error_buf', ',', '""""', ',', 'aisc_server_index', ',', 'u', ',', 'o', ')', ';', 'aisc_server_error', '=', 'error_buf', ';', '}', 'AISC_DUMP', '(', 'aisc_talking_get_index', ',', 'int', ',', 'aisc_server_index', ')', ';', 'return', 'aisc_server_index', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
698,"['e2_cmd_simple', '(', 'Epson_Scanner', '*', 's', ',', 'void', '*', 'buf', ',', 'size_t', 'buf_size', ')', '{', 'unsigned', 'char', 'result', ';', 'SANE_Status', 'status', ';', 'DBG', '(', '12', ',', '""""', ',', '__func__', ',', '(', 'u_long', ')', 'buf_size', ')', ';', 'status', '=', 'e2_txrx', '(', 's', ',', 'buf', ',', 'buf_size', ',', '&', 'result', ',', '1', ')', ';', 'if', '(', 'status', '!=', 'SANE_STATUS_GOOD', ')', '{', 'DBG', '(', '1', ',', '""""', ',', '__func__', ',', 'sane_strstatus', '(', 'status', ')', ')', ';', 'return', 'status', ';', '}', 'if', '(', 'result', '==', 'ACK', ')', 'return', 'SANE_STATUS_GOOD', ';', 'if', '(', 'result', '==', 'NAK', ')', '{', 'DBG', '(', '3', ',', '""""', ',', '__func__', ')', ';', 'return', 'SANE_STATUS_INVAL', ';', '}', 'DBG', '(', '1', ',', '""""', ',', '__func__', ',', 'result', ')', ';', 'return', 'SANE_STATUS_GOOD', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
699,"['ptr_compare_2', '(', 'size_t', '*', 'compare_length', ',', 'uchar', '*', '*', 'a', ',', 'uchar', '*', '*', 'b', ')', '{', 'reg3', 'int', 'length', '=', '*', 'compare_length', '-', '2', ';', 'reg1', 'uchar', '*', 'first', ',', '*', 'last', ';', 'first', '=', '*', 'a', '+', '2', ';', 'last', '=', '*', 'b', '+', '2', ';', 'cmp', '(', '-', '2', ')', ';', 'cmp', '(', '-', '1', ')', ';', 'loop', ':', 'cmp', '(', '0', ')', ';', 'cmp', '(', '1', ')', ';', 'cmp', '(', '2', ')', ';', 'cmp', '(', '3', ')', ';', 'if', '(', '(', 'length', '-=', '4', ')', ')', '{', 'first', '+=', '4', ';', 'last', '+=', '4', ';', 'goto', 'loop', ';', '}', 'return', '(', '0', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
700,"['scrsendconfig', '(', 'Scrn', '*', 's', ')', '{', 'Client', '*', 'c', ';', 'for', '(', 'c', '=', 'clients', ';', 'c', ';', 'c', '=', 'c', '->', 'next', ')', 'if', '(', 'c', '->', 'scr', '==', 's', ')', 'sendconfig', '(', 'c', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
701,"['slapi_filter_dup', '(', 'Slapi_Filter', '*', 'f', ')', '{', 'Slapi_Filter', '*', 'out', '=', '0', ';', 'struct', 'slapi_filter', '*', 'fl', '=', '0', ';', 'struct', 'slapi_filter', '*', '*', 'outl', '=', '0', ';', 'struct', 'slapi_filter', '*', 'lastout', '=', '0', ';', 'if', '(', 'f', '==', 'NULL', ')', '{', 'return', 'NULL', ';', '}', 'out', '=', '(', 'struct', 'slapi_filter', '*', ')', 'slapi_ch_calloc', '(', '1', ',', 'sizeof', '(', 'struct', 'slapi_filter', ')', ')', ';', 'if', '(', 'out', '==', 'NULL', ')', '{', 'LDAPDebug', '(', 'LDAP_DEBUG_ANY', ',', '""""', ',', '0', ',', '0', ',', '0', ')', ';', 'return', 'NULL', ';', '}', 'out', '->', 'f_choice', '=', 'f', '->', 'f_choice', ';', 'out', '->', 'f_hash', '=', 'f', '->', 'f_hash', ';', 'out', '->', 'f_flags', '=', 'f', '->', 'f_flags', ';', 'LDAPDebug', '(', 'LDAP_DEBUG_FILTER', ',', '""""', ',', 'f', '->', 'f_choice', ',', '0', ',', '0', ')', ';', 'switch', '(', 'f', '->', 'f_choice', ')', '{', 'case', 'LDAP_FILTER_EQUALITY', ':', 'case', 'LDAP_FILTER_GE', ':', 'case', 'LDAP_FILTER_LE', ':', 'case', 'LDAP_FILTER_APPROX', ':', 'out', '->', 'f_ava', '.', 'ava_type', '=', 'slapi_ch_strdup', '(', 'f', '->', 'f_ava', '.', 'ava_type', ')', ';', 'slapi_ber_bvcpy', '(', '&', 'out', '->', 'f_ava', '.', 'ava_value', ',', '&', 'f', '->', 'f_ava', '.', 'ava_value', ')', ';', 'break', ';', 'case', 'LDAP_FILTER_SUBSTRINGS', ':', 'out', '->', 'f_sub_type', '=', 'slapi_ch_strdup', '(', 'f', '->', 'f_sub_type', ')', ';', 'out', '->', 'f_sub_initial', '=', 'slapi_ch_strdup', '(', 'f', '->', 'f_sub_initial', ')', ';', 'out', '->', 'f_sub_any', '=', 'charray_dup', '(', 'f', '->', 'f_sub_any', ')', ';', 'out', '->', 'f_sub_final', '=', 'slapi_ch_strdup', '(', 'f', '->', 'f_sub_final', ')', ';', 'break', ';', 'case', 'LDAP_FILTER_PRESENT', ':', 'out', '->', 'f_type', '=', 'slapi_ch_strdup', '(', 'f', '->', 'f_type', ')', ';', 'break', ';', 'case', 'LDAP_FILTER_AND', ':', 'case', 'LDAP_FILTER_OR', ':', 'case', 'LDAP_FILTER_NOT', ':', 'outl', '=', '&', 'out', '->', 'f_list', ';', 'for', '(', 'fl', '=', 'f', '->', 'f_list', ';', 'fl', '!=', 'NULL', ';', 'fl', '=', 'fl', '->', 'f_next', ')', '{', '(', '*', 'outl', ')', '=', 'slapi_filter_dup', '(', 'fl', ')', ';', '(', '*', 'outl', ')', '->', 'f_next', '=', '0', ';', 'if', '(', 'lastout', ')', 'lastout', '->', 'f_next', '=', '*', 'outl', ';', 'lastout', '=', '*', 'outl', ';', 'outl', '=', '&', '(', '(', '*', 'outl', ')', '->', 'f_next', ')', ';', '}', 'break', ';', 'case', 'LDAP_FILTER_EXTENDED', ':', 'out', '->', 'f_mr_oid', '=', 'slapi_ch_strdup', '(', 'f', '->', 'f_mr_oid', ')', ';', 'out', '->', 'f_mr_type', '=', 'slapi_ch_strdup', '(', 'f', '->', 'f_mr_type', ')', ';', 'slapi_ber_bvcpy', '(', '&', 'out', '->', 'f_mr_value', ',', '&', 'f', '->', 'f_mr_value', ')', ';', 'out', '->', 'f_mr_dnAttrs', '=', 'f', '->', 'f_mr_dnAttrs', ';', 'if', '(', 'f', '->', 'f_mr', '.', 'mrf_match', ')', '{', 'int', 'rc', '=', 'plugin_mr_filter_create', '(', '&', 'out', '->', 'f_mr', ')', ';', 'LDAPDebug1Arg', '(', 'LDAP_DEBUG_FILTER', ',', '""""', ',', 'rc', ')', ';', '}', 'break', ';', 'default', ':', 'LDAPDebug', '(', 'LDAP_DEBUG_FILTER', ',', '""""', ',', 'f', '->', 'f_choice', ',', '0', ',', '0', ')', ';', 'break', ';', '}', 'return', 'out', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
702,"['pwm_export_child', '(', 'struct', 'device', '*', 'parent', ',', 'struct', 'pwm_device', '*', 'pwm', ')', '{', 'struct', 'pwm_export', '*', 'export', ';', 'int', 'ret', ';', 'if', '(', 'test_and_set_bit', '(', 'PWMF_EXPORTED', ',', '&', 'pwm', '->', 'flags', ')', ')', 'return', '-', 'EBUSY', ';', 'export', '=', 'kzalloc', '(', 'sizeof', '(', '*', 'export', ')', ',', 'GFP_KERNEL', ')', ';', 'if', '(', '!export', ')', '{', 'clear_bit', '(', 'PWMF_EXPORTED', ',', '&', 'pwm', '->', 'flags', ')', ';', 'return', '-', 'ENOMEM', ';', '}', 'export', '->', 'pwm', '=', 'pwm', ';', 'export', '->', 'child', '.', 'release', '=', 'pwm_export_release', ';', 'export', '->', 'child', '.', 'parent', '=', 'parent', ';', 'export', '->', 'child', '.', 'devt', '=', 'MKDEV', '(', '0', ',', '0', ')', ';', 'export', '->', 'child', '.', 'groups', '=', 'pwm_groups', ';', 'dev_set_name', '(', '&', 'export', '->', 'child', ',', '""""', ',', 'pwm', '->', 'hwpwm', ')', ';', 'ret', '=', 'device_register', '(', '&', 'export', '->', 'child', ')', ';', 'if', '(', 'ret', ')', '{', 'clear_bit', '(', 'PWMF_EXPORTED', ',', '&', 'pwm', '->', 'flags', ')', ';', 'kfree', '(', 'export', ')', ';', 'return', 'ret', ';', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
703,"['checkVarFuncNullUB', '(', ')', '{', 'if', '(', '!_settings', '->', 'isEnabled', '(', '""""', ')', ')', 'return', ';', 'const', 'SymbolDatabase', '*', 'symbolDatabase', '=', '_tokenizer', '->', 'getSymbolDatabase', '(', ')', ';', 'const', 'std', ':', ':', 'size_t', 'functions', '=', 'symbolDatabase', '->', 'functionScopes', '.', 'size', '(', ')', ';', 'for', '(', 'std', ':', ':', 'size_t', 'i', '=', '0', ';', 'i', '<', 'functions', ';', '++', 'i', ')', '{', 'const', 'Scope', '*', 'scope', '=', 'symbolDatabase', '->', 'functionScopes', '[', 'i', ']', ';', 'for', '(', 'const', 'Token', '*', 'tok', '=', 'scope', '->', 'classStart', ';', 'tok', '!=', 'scope', '->', 'classEnd', ';', 'tok', '=', 'tok', '->', 'next', '(', ')', ')', '{', '/', '/', 'Is', 'NULL', 'passed', 'to', 'a', 'function', '?', 'if', '(', 'Token', ':', ':', 'Match', '(', 'tok', ',', '""""', ')', ')', '{', '/', '/', 'Locate', 'function', 'name', 'in', 'this', 'function', 'call', '.', 'const', 'Token', '*', 'ftok', '=', 'tok', ';', 'std', ':', ':', 'size_t', 'argnr', '=', '1', ';', 'while', '(', 'ftok', '&&', 'ftok', '->', 'str', '(', ')', '!=', '""""', ')', '{', 'if', '(', 'ftok', '->', 'str', '(', ')', '==', '""""', ')', 'ftok', '=', 'ftok', '->', 'link', '(', ')', ';', 'else', 'if', '(', 'ftok', '->', 'str', '(', ')', '==', '""""', ')', '++', 'argnr', ';', 'ftok', '=', 'ftok', '->', 'previous', '(', ')', ';', '}', 'ftok', '=', 'ftok', '?', 'ftok', '->', 'previous', '(', ')', ':', 'NULL', ';', 'if', '(', 'ftok', '&&', 'ftok', '->', 'isName', '(', ')', ')', '{', '/', '/', 'If', 'this', 'is', 'a', 'variadic', 'function', 'then', 'report', 'const', 'Function', '*', 'f', '=', 'ftok', '->', 'function', '(', ')', ';', 'if', '(', 'f', '&&', 'f', '->', 'argCount', '(', ')', '<=', 'argnr', ')', '{', 'const', 'Token', '*', 'tok2', '=', 'f', '->', 'argDef', ';', 'tok2', '=', 'tok2', '?', 'tok2', '->', 'link', '(', ')', ':', 'NULL', ';', '/', '/', 'goto', 'if', '(', 'Token', ':', ':', 'simpleMatch', '(', 'tok2', '->', 'tokAt', '(', '-', '3', ')', ',', '""""', ')', ')', 'varFuncNullUBError', '(', 'tok', ')', ';', '}', '}', '}', '}', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
704,"['gst_matroska_mux_create_buffer_header', '(', 'GstMatroskaTrackContext', '*', 'track', ',', 'gint16', 'relative_timestamp', ',', 'int', 'flags', ')', '{', 'GstBuffer', '*', 'hdr', ';', 'hdr', '=', 'gst_buffer_new_and_alloc', '(', '4', ')', ';', 'GST_BUFFER_DATA', '(', 'hdr', ')', '[', '0', ']', '=', 'track', '->', 'num', '|', '0x80', ';', 'GST_WRITE_UINT16_BE', '(', 'GST_BUFFER_DATA', '(', 'hdr', ')', '+', '1', ',', 'relative_timestamp', ')', ';', 'GST_BUFFER_DATA', '(', 'hdr', ')', '[', '3', ']', '=', 'flags', ';', 'return', 'hdr', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
705,"['pixcompGetDimensions', '(', 'PIXC', '*', 'pixc', ',', 'l_int32', '*', 'pw', ',', 'l_int32', '*', 'ph', ',', 'l_int32', '*', 'pd', ')', '{', 'PROCNAME', '(', '""""', ')', ';', 'if', '(', '!pixc', ')', 'return', 'ERROR_INT', '(', '""""', ',', 'procName', ',', '1', ')', ';', 'if', '(', 'pw', ')', '*', 'pw', '=', 'pixc', '->', 'w', ';', 'if', '(', 'ph', ')', '*', 'ph', '=', 'pixc', '->', 'h', ';', 'if', '(', 'pd', ')', '*', 'pd', '=', 'pixc', '->', 'd', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
706,"['adnp_irq', '(', 'int', 'irq', ',', 'void', '*', 'data', ')', '{', 'struct', 'adnp', '*', 'adnp', '=', 'data', ';', 'unsigned', 'int', 'num_regs', ',', 'i', ';', 'num_regs', '=', '1', '<<', 'adnp', '->', 'reg_shift', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'num_regs', ';', 'i', '++', ')', '{', 'unsigned', 'int', 'base', '=', 'i', '<<', 'adnp', '->', 'reg_shift', ',', 'bit', ';', 'u8', 'changed', ',', 'level', ',', 'isr', ',', 'ier', ';', 'unsigned', 'long', 'pending', ';', 'int', 'err', ';', 'mutex_lock', '(', '&', 'adnp', '->', 'i2c_lock', ')', ';', 'err', '=', 'adnp_read', '(', 'adnp', ',', 'GPIO_PLR', '(', 'adnp', ')', '+', 'i', ',', '&', 'level', ')', ';', 'if', '(', 'err', '<', '0', ')', '{', 'mutex_unlock', '(', '&', 'adnp', '->', 'i2c_lock', ')', ';', 'continue', ';', '}', 'err', '=', 'adnp_read', '(', 'adnp', ',', 'GPIO_ISR', '(', 'adnp', ')', '+', 'i', ',', '&', 'isr', ')', ';', 'if', '(', 'err', '<', '0', ')', '{', 'mutex_unlock', '(', '&', 'adnp', '->', 'i2c_lock', ')', ';', 'continue', ';', '}', 'err', '=', 'adnp_read', '(', 'adnp', ',', 'GPIO_IER', '(', 'adnp', ')', '+', 'i', ',', '&', 'ier', ')', ';', 'if', '(', 'err', '<', '0', ')', '{', 'mutex_unlock', '(', '&', 'adnp', '->', 'i2c_lock', ')', ';', 'continue', ';', '}', 'mutex_unlock', '(', '&', 'adnp', '->', 'i2c_lock', ')', ';', 'changed', '=', 'level', '^', 'adnp', '->', 'irq_level', '[', 'i', ']', ';', 'pending', '=', 'changed', '&', '(', '(', 'adnp', '->', 'irq_fall', '[', 'i', ']', '&', '~level', ')', '|', '(', 'adnp', '->', 'irq_rise', '[', 'i', ']', '&', 'level', ')', ')', ';', 'pending', '|=', '(', 'adnp', '->', 'irq_high', '[', 'i', ']', '&', 'level', ')', '|', '(', 'adnp', '->', 'irq_low', '[', 'i', ']', '&', '~level', ')', ';', 'pending', '&=', 'isr', '&', 'ier', ';', 'for_each_set_bit', '(', 'bit', ',', '&', 'pending', ',', '8', ')', '{', 'unsigned', 'int', 'child_irq', ';', 'child_irq', '=', 'irq_find_mapping', '(', 'adnp', '->', 'gpio', '.', 'irqdomain', ',', 'base', '+', 'bit', ')', ';', 'handle_nested_irq', '(', 'child_irq', ')', ';', '}', '}', 'return', 'IRQ_HANDLED', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
707,"['vlog_verbose', '(', 'const', 'char', '*', 'prefix', ',', 'const', 'char', '*', 'pattern', ',', 'va_list', 'ap', ')', '{', 'if', '(', 'VERBOSITY', '==', 'FALSE', ')', 'return', ';', 'first_line_verbose', '(', ')', ';', 'fprintf', '(', 'stdout', ',', '""""', ',', 'INDENT_LEVEL', ',', '""""', ')', ';', 'if', '(', 'prefix', ')', '{', 'fputs', '(', 'prefix', ',', 'stdout', ')', ';', '}', 'vfprintf', '(', 'stdout', ',', 'pattern', ',', 'ap', ')', ';', 'fflush', '(', 'stdout', ')', ';', 'va_end', '(', 'ap', ')', ';', 'GLOBAL_PRINT_COUNT', '++', ';', 'if', '(', '(', '*', 'pattern', '==', '0', ')', '||', '(', 'pattern', '[', 'strlen', '(', 'pattern', ')', '-', '1', ']', '!=', ""''"", ')', ')', '{', 'HANGING_OUTPUT', '=', '1', ';', '}', 'else', '{', 'HANGING_OUTPUT', '=', '0', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
708,"['mimetype_option_menu', '(', 'const', 'char', '*', 'zMimetype', ')', '{', 'unsigned', 'i', ';', 'cgi_printf', '(', '""""mimetype\\""""1\\""""', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'sizeof', '(', 'azStyles', ')', '/', 'sizeof', '(', 'azStyles', '[', '0', ']', ')', ';', 'i', '+=', '2', ')', '{', 'if', '(', 'fossil_strcmp', '(', 'zMimetype', ',', 'azStyles', '[', 'i', ']', ')', '==', '0', ')', '{', 'cgi_printf', '(', '""""', '%', 's\\""""', ',', '(', 'azStyles', '[', 'i', ']', ')', ',', '(', 'azStyles', '[', 'i', '+', '1', ']', ')', ')', ';', '}', 'else', '{', 'cgi_printf', '(', '""""', '%', 's\\""""', ',', '(', 'azStyles', '[', 'i', ']', ')', ',', '(', 'azStyles', '[', 'i', '+', '1', ']', ')', ')', ';', '}', '}', 'cgi_printf', '(', '""""', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
709,"['linuxOvercommitMemoryValue', '(', 'void', ')', '{', 'FILE', '*', 'fp', '=', 'fopen', '(', '""""', ',', '""""', ')', ';', 'char', 'buf', '[', '64', ']', ';', 'if', '(', '!fp', ')', 'return', '-', '1', ';', 'if', '(', 'fgets', '(', 'buf', ',', '64', ',', 'fp', ')', '==', 'NULL', ')', '{', 'fclose', '(', 'fp', ')', ';', 'return', '-', '1', ';', '}', 'fclose', '(', 'fp', ')', ';', 'return', 'atoi', '(', 'buf', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  True,CWE-476  False,CWE-other  False
710,"['getScaledParametersPS', '(', 'BOX', '*', 'box', ',', 'l_int32', 'wpix', ',', 'l_int32', 'hpix', ',', 'l_int32', 'res', ',', 'l_float32', 'scale', ',', 'l_float32', '*', 'pxpt', ',', 'l_float32', '*', 'pypt', ',', 'l_float32', '*', 'pwpt', ',', 'l_float32', '*', 'phpt', ')', '{', 'l_float32', 'winch', ',', 'hinch', ',', 'xinch', ',', 'yinch', ',', 'fres', ';', 'PROCNAME', '(', '""""', ')', ';', 'if', '(', 'res', '==', '0', ')', 'res', '=', 'DEFAULT_PRINTER_RES', ';', 'fres', '=', '(', 'l_float32', ')', 'res', ';', 'if', '(', 'scale', '==', '0', '.', '0', ')', 'scale', '=', '1', '.', '0', ';', 'if', '(', 'scale', '!=', '1', '.', '0', ')', '{', 'fres', '=', '(', 'l_float32', ')', 'res', '/', 'scale', ';', 'res', '=', '(', 'l_int32', ')', 'fres', ';', '}', 'if', '(', 'res', '<', 'MIN_RES', '||', 'res', '>', 'MAX_RES', ')', '{', 'L_WARNING_INT', '(', '""""', ',', 'procName', ',', 'res', ')', ';', 'res', '=', 'DEFAULT_PRINTER_RES', ';', 'fres', '=', '(', 'l_float32', ')', 'res', ';', '}', 'winch', '=', '(', 'l_float32', ')', 'wpix', '/', 'fres', ';', 'hinch', '=', '(', 'l_float32', ')', 'hpix', '/', 'fres', ';', 'xinch', '=', '(', '8', '.', '5', '-', 'winch', ')', '/', '2', '.', ';', 'yinch', '=', '(', '11', '.', '0', '-', 'hinch', ')', '/', '2', '.', ';', '}', 'else', '{', 'if', '(', 'box', '->', 'w', '==', '0', ')', 'winch', '=', '(', 'l_float32', ')', 'wpix', '/', 'fres', ';', 'winch', '=', '(', 'l_float32', ')', 'box', '->', 'w', '/', '1000', '.', ';', 'if', '(', 'box', '->', 'h', '==', '0', ')', 'hinch', '=', '(', 'l_float32', ')', 'hpix', '/', 'fres', ';', 'hinch', '=', '(', 'l_float32', ')', 'box', '->', 'h', '/', '1000', '.', ';', 'xinch', '=', '(', 'l_float32', ')', 'box', '->', 'x', '/', '1000', '.', ';', 'yinch', '=', '(', 'l_float32', ')', 'box', '->', 'y', '/', '1000', '.', ';', '}', 'if', '(', 'xinch', '<', '0', ')', 'L_WARNING', '(', '""""', ',', 'procName', ')', ';', 'if', '(', 'xinch', '+', 'winch', '>', '8', '.', '5', ')', 'L_WARNING', '(', '""""', ',', 'procName', ')', ';', 'if', '(', 'yinch', '<', '0', '.', '0', ')', 'L_WARNING', '(', '""""', ',', 'procName', ')', ';', 'if', '(', 'yinch', '+', 'hinch', '>', '11', '.', '0', ')', 'L_WARNING', '(', '""""', ',', 'procName', ')', ';', '*', 'pwpt', '=', '72', '.', '*', 'winch', ';', '*', 'phpt', '=', '72', '.', '*', 'hinch', ';', '*', 'pxpt', '=', '72', '.', '*', 'xinch', ';', '*', 'pypt', '=', '72', '.', '*', 'yinch', ';', 'return', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
711,"['isLinearized', '(', ')', '{', 'Parser', '*', 'parser', ';', 'Object', 'obj1', ',', 'obj2', ',', 'obj3', ',', 'obj4', ',', 'obj5', ';', 'GBool', 'lin', ';', 'lin', '=', 'gFalse', ';', 'obj1', '.', 'initNull', '(', ')', ';', 'parser', '=', 'new', 'Parser', '(', 'xref', ',', 'new', 'Lexer', '(', 'xref', ',', 'str', '->', 'makeSubStream', '(', 'str', '->', 'getStart', '(', ')', ',', 'gFalse', ',', '0', ',', '&', 'obj1', ')', ')', ',', 'gTrue', ')', ';', 'parser', '->', 'getObj', '(', '&', 'obj1', ')', ';', 'parser', '->', 'getObj', '(', '&', 'obj2', ')', ';', 'parser', '->', 'getObj', '(', '&', 'obj3', ')', ';', 'parser', '->', 'getObj', '(', '&', 'obj4', ')', ';', 'if', '(', 'obj1', '.', 'isInt', '(', ')', '&&', 'obj2', '.', 'isInt', '(', ')', '&&', 'obj3', '.', 'isCmd', '(', '""""', ')', '&&', 'obj4', '.', 'isDict', '(', ')', ')', '{', 'obj4', '.', 'dictLookup', '(', '""""', ',', '&', 'obj5', ')', ';', 'if', '(', 'obj5', '.', 'isNum', '(', ')', '&&', 'obj5', '.', 'getNum', '(', ')', '>', '0', ')', '{', 'lin', '=', 'gTrue', ';', '}', 'obj5', '.', 'free', '(', ')', ';', '}', 'obj4', '.', 'free', '(', ')', ';', 'obj3', '.', 'free', '(', ')', ';', 'obj2', '.', 'free', '(', ')', ';', 'obj1', '.', 'free', '(', ')', ';', 'delete', 'parser', ';', 'return', 'lin', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
712,"['checkNotify', '(', ')', '{', 'if', '(', 'm_loading', ')', 'return', ';', 'for', '(', 'QHashIterator', '<', 'CachedObjectClient', '*', ',', 'CachedObjectClient', '*', '>', 'it', '(', 'm_clients', ')', ';', 'it', '.', 'hasNext', '(', ')', ';', ')', 'it', '.', 'next', '(', ')', '.', 'value', '(', ')', '->', 'notifyFinished', '(', 'this', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
713,"['camel_store_get_inbox_folder', '(', 'CamelStore', '*', 'store', ',', 'gint', 'io_priority', ',', 'GCancellable', '*', 'cancellable', ',', 'GAsyncReadyCallback', 'callback', ',', 'gpointer', 'user_data', ')', '{', 'CamelStoreClass', '*', 'class', ';', 'g_return_if_fail', '(', 'CAMEL_IS_STORE', '(', 'store', ')', ')', ';', 'class', '=', 'CAMEL_STORE_GET_CLASS', '(', 'store', ')', ';', 'g_return_if_fail', '(', 'class', '->', 'get_inbox_folder', '!=', 'NULL', ')', ';', 'class', '->', 'get_inbox_folder', '(', 'store', ',', 'io_priority', ',', 'cancellable', ',', 'callback', ',', 'user_data', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
714,"['doflags', '(', 'FILE', '*', 'fp', ',', 'struct', 'fetchinfo', '*', 'fi', ',', 'struct', 'imapscaninfo', '*', 'i', ',', 'unsigned', 'long', 'msgnum', ',', 'struct', 'rfc2045', '*', 'mimep', ')', '{', 'struct', 'libmail_kwMessageEntry', '*', 'kme', ';', 'char\tbuf', '[', '256', ']', ';', '#if', 'if', '(', 'smapflag', ')', '{', 'writes', '(', '""""', ')', ';', 'get_message_flags', '(', 'i', '->', 'msgs', '+', 'msgnum', ',', 'buf', ',', '0', ')', ';', 'writes', '(', 'buf', ')', ';', '}', '{', 'struct', 'libmail_kwMessage', '*', 'km', ';', 'writes', '(', '""""', ')', ';', 'get_message_flags', '(', 'i', '->', 'msgs', '+', 'msgnum', ',', 'buf', ',', '0', ')', ';', 'writes', '(', '""""', ')', ';', 'writes', '(', 'buf', ')', ';', 'if', '(', 'buf', '[', '0', ']', ')', 'strcpy', '(', 'buf', ',', '""""', ')', ';', 'if', '(', '(', 'km', '=', 'i', '->', 'msgs', '[', 'msgnum', ']', '.', 'keywordMsg', ')', '!=', 'NULL', ')', 'for', '(', 'kme', '=', 'km', '->', 'firstEntry', ';', 'kme', ';', 'kme', '=', 'kme', '->', 'next', ')', '{', 'writes', '(', 'buf', ')', ';', 'strcpy', '(', 'buf', ',', '""""', ')', ';', 'writes', '(', 'keywordName', '(', 'kme', '->', 'libmail_keywordEntryPtr', ')', ')', ';', '}', 'writes', '(', '""""', ')', ';', '}', 'i', '->', 'msgs', '[', 'msgnum', ']', '.', 'changedflags', '=', '0', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
715,"['usbhsc_hotplug', '(', 'struct', 'usbhs_priv', '*', 'priv', ')', '{', 'struct', 'platform_device', '*', 'pdev', '=', 'usbhs_priv_to_pdev', '(', 'priv', ')', ';', 'struct', 'usbhs_mod', '*', 'mod', '=', 'usbhs_mod_get_current', '(', 'priv', ')', ';', 'int', 'id', ';', 'int', 'enable', ';', 'int', 'cable', ';', 'int', 'ret', ';', '/', '*', '*', 'get', 'vbus', 'status', 'from', 'enable', '=', 'usbhs_platform_call', '(', 'priv', ',', 'get_vbus', ',', 'pdev', ')', ';', '/', '*', '*', 'get', 'id', 'from', 'id', '=', 'usbhs_platform_call', '(', 'priv', ',', 'get_id', ',', 'pdev', ')', ';', 'if', '(', 'enable', '&&', '!mod', ')', '{', 'if', '(', 'priv', '->', 'edev', ')', '{', 'cable', '=', 'extcon_get_cable_state_', '(', 'priv', '->', 'edev', ',', 'EXTCON_USB_HOST', ')', ';', 'if', '(', '(', 'cable', '>', '0', '&&', 'id', '!=', 'USBHS_HOST', ')', '||', '(', '!cable', '&&', 'id', '!=', 'USBHS_GADGET', ')', ')', '{', 'dev_info', '(', '&', 'pdev', '->', 'dev', ',', '""""', ')', ';', 'return', ';', '}', '}', 'ret', '=', 'usbhs_mod_change', '(', 'priv', ',', 'id', ')', ';', 'if', '(', 'ret', '<', '0', ')', 'return', ';', 'dev_dbg', '(', '&', 'pdev', '->', 'dev', ',', '""""', ',', '__func__', ')', ';', 'if', '(', 'usbhsc_flags_has', '(', 'priv', ',', 'USBHSF_RUNTIME_PWCTRL', ')', ')', 'usbhsc_power_ctrl', '(', 'priv', ',', 'enable', ')', ';', 'usbhsc_set_buswait', '(', 'priv', ')', ';', 'usbhsc_bus_init', '(', 'priv', ')', ';', 'usbhs_mod_call', '(', 'priv', ',', 'start', ',', 'priv', ')', ';', '}', 'else', 'if', '(', '!enable', '&&', 'mod', ')', '{', 'dev_dbg', '(', '&', 'pdev', '->', 'dev', ',', '""""', ',', '__func__', ')', ';', 'usbhs_mod_call', '(', 'priv', ',', 'stop', ',', 'priv', ')', ';', 'usbhsc_bus_init', '(', 'priv', ')', ';', 'if', '(', 'usbhsc_flags_has', '(', 'priv', ',', 'USBHSF_RUNTIME_PWCTRL', ')', ')', 'usbhsc_power_ctrl', '(', 'priv', ',', 'enable', ')', ';', 'usbhs_mod_change', '(', 'priv', ',', '-', '1', ')', ';', 'usbhs_platform_call', '(', 'priv', ',', 'phy_reset', ',', 'pdev', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
716,"['check_attendee', '(', 'icalproperty', '*', 'p', ',', 'struct', 'options_struct', '*', 'opt', ')', '{', 'const', 'char', '*', 's', '=', 'icalproperty_get_attendee', '(', 'p', ')', ';', 'char', '*', 'lower_attendee', '=', 'lowercase', '(', 's', ')', ';', 'char', '*', 'local_attendee', '=', 'opt', '->', 'calid', ';', 'if', '(', 'strncmp', '(', 'lower_attendee', ',', '""""', ',', '7', ')', '==', '0', ')', '{', 'lower_attendee', '+=', '7', ';', 'if', '(', 'strcmp', '(', 'lower_attendee', ',', 'local_attendee', ')', '==', '0', ')', '{', 'return', '1', ';', '}', 'lower_attendee', '-=', '7', ';', 'free', '(', 'lower_attendee', ')', ';', '}', 'return', '0', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
717,"['read_ride_summary', '(', 'int', '*', 'bytes_read', '=', 'NULL', ',', 'int', '*', 'sum', '=', 'NULL', ')', '{', 'data_version', '=', 'read_bytes', '(', '1', ',', 'bytes_read', ',', 'sum', ')', ';', '/', '/', 'read_bytes', '(', '1', ',', 'bytes_read', ',', 'sum', ')', ';', '/', '/', 'QDateTime', 't', '=', 'read_date', '(', 'bytes_read', ',', 'sum', ')', ';', 'rideFile', '->', 'setStartTime', '(', 't', ')', ';', 'read_bytes', '(', '148', ',', 'bytes_read', ',', 'sum', ')', ';', 'if', '(', 'data_version', '>=', '4', ')', 'read_bytes', '(', '8', ',', 'bytes_read', ',', 'sum', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
718,"['EnvGetNextInstance', '(', 'void', '*', 'theEnv', ',', 'void', '*', 'iptr', ')', '{', 'if', '(', 'iptr', '==', 'NULL', ')', 'return', '(', '(', 'void', '*', ')', 'InstanceData', '(', 'theEnv', ')', '->', 'InstanceList', ')', ';', 'if', '(', '(', '(', 'INSTANCE_TYPE', '*', ')', 'iptr', ')', '->', 'garbage', '==', '1', ')', 'return', '(', 'NULL', ')', ';', 'return', '(', '(', 'void', '*', ')', '(', '(', 'INSTANCE_TYPE', '*', ')', 'iptr', ')', '->', 'nxtList', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
719,"['paint', '(', 'Graphics', '&', 'g', ',', 'const', 'YRect', '&', '/', '*', 'r', '*', '/', ')', '{', 'ref', '<', 'YFont', '>', 'font', '=', 'inputFont', ';', 'int', 'min', ',', 'max', ',', 'minOfs', '=', '0', ',', 'maxOfs', '=', '0', ';', 'int', 'textLen', '=', 'fText', '.', 'length', '(', ')', ';', 'if', '(', 'curPos', '>', 'markPos', ')', '{', 'min', '=', 'markPos', ';', 'max', '=', 'curPos', ';', '}', 'else', '{', 'min', '=', 'curPos', ';', 'max', '=', 'markPos', ';', '}', 'if', '(', 'curPos', '==', 'markPos', '||', 'fText', '==', 'null', '||', 'font', '==', 'null', '||', '!fHasFocus', ')', '{', 'g', '.', 'setColor', '(', 'inputBg', ')', ';', 'g', '.', 'fillRect', '(', '0', ',', '0', ',', 'width', '(', ')', ',', 'height', '(', ')', ')', ';', '}', 'else', '{', 'minOfs', '=', 'font', '->', 'textWidth', '(', 'fText', '.', 'substring', '(', '0', ',', 'min', ')', ')', '-', 'leftOfs', ';', 'maxOfs', '=', 'font', '->', 'textWidth', '(', 'fText', '.', 'substring', '(', '0', ',', 'max', ')', ')', '-', 'leftOfs', ';', 'if', '(', 'minOfs', '>', '0', ')', '{', 'g', '.', 'setColor', '(', 'inputBg', ')', ';', 'g', '.', 'fillRect', '(', '0', ',', '0', ',', 'minOfs', ',', 'height', '(', ')', ')', ';', '}', '/', '/', '/', '!!!', 'optimize', '(', '0', ',', 'width', ')', 'if', '(', 'minOfs', '<', 'maxOfs', ')', '{', 'g', '.', 'setColor', '(', 'inputSelectionBg', ')', ';', 'g', '.', 'fillRect', '(', 'minOfs', ',', '0', ',', 'maxOfs', '-', 'minOfs', ',', 'height', '(', ')', ')', ';', '}', 'if', '(', 'maxOfs', '<', 'int', '(', 'width', '(', ')', ')', ')', '{', 'g', '.', 'setColor', '(', 'inputBg', ')', ';', 'g', '.', 'fillRect', '(', 'maxOfs', ',', '0', ',', 'width', '(', ')', '-', 'maxOfs', ',', 'height', '(', ')', ')', ';', '}', '}', 'if', '(', 'font', '!=', 'null', ')', '{', 'int', 'yp', '=', '1', '+', 'font', '->', 'ascent', '(', ')', ';', 'int', 'curOfs', '=', 'font', '->', 'textWidth', '(', 'fText', '.', 'substring', '(', '0', ',', 'curPos', ')', ')', ';', 'int', 'cx', '=', 'curOfs', '-', 'leftOfs', ';', 'g', '.', 'setFont', '(', 'font', ')', ';', 'if', '(', 'curPos', '==', 'markPos', '||', '!fHasFocus', '||', 'fText', '==', 'null', ')', '{', 'g', '.', 'setColor', '(', 'inputFg', ')', ';', 'if', '(', 'fText', '!=', 'null', ')', 'g', '.', 'drawChars', '(', 'fText', '.', 'substring', '(', '0', ',', 'textLen', ')', ',', '-', 'leftOfs', ',', 'yp', ')', ';', 'if', '(', 'fHasFocus', '&&', 'fCursorVisible', ')', 'g', '.', 'drawLine', '(', 'cx', ',', '0', ',', 'cx', ',', 'font', '->', 'height', '(', ')', '+', '2', ')', ';', '}', 'else', '{', 'if', '(', 'min', '>', '0', ')', '{', 'g', '.', 'setColor', '(', 'inputFg', ')', ';', 'g', '.', 'drawChars', '(', 'fText', '.', 'substring', '(', '0', ',', 'min', ')', ',', '-', 'leftOfs', ',', 'yp', ')', ';', '}', '/', '/', '/', '!!!', 'same', 'if', '(', 'min', '<', 'max', ')', '{', 'g', '.', 'setColor', '(', 'inputSelectionFg', ')', ';', 'g', '.', 'drawChars', '(', 'fText', '.', 'substring', '(', 'min', ',', 'max', '-', 'min', ')', ',', 'minOfs', ',', 'yp', ')', ';', '}', 'if', '(', 'max', '<', 'textLen', ')', '{', 'g', '.', 'setColor', '(', 'inputFg', ')', ';', 'g', '.', 'drawChars', '(', 'fText', '.', 'substring', '(', 'max', ',', 'textLen', '-', 'max', ')', ',', 'maxOfs', ',', 'yp', ')', ';', '}', '}', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
720,"['cl_randseed', '(', 'void', ')', '{', 'char', 'buf', '[', '16', ']', ';', 'FILE', '*', 'fs', ';', 'struct', 'timeval', 'tv', ';', 'const', 'char', '*', 'randdevname', '[', ']', '=', '{', '""""', ',', '""""', '}', ';', 'int\t\t\tidev', ';', '#if', 'long', 'horrid', ';', '/', '*', '*', 'Notes', ',', 'based', 'on', 'reading', 'of', 'man', 'pages', 'of', 'Solaris', ',', 'FreeBSD', 'and', 'Linux', ',', '*', 'and', 'on', 'proof', '-', 'of', '-', 'concept', 'tests', 'on', 'Solaris', 'and', 'Linux', '(', '32', '-', 'and', '64', '-', 'bit', ')', '.', '*', '*', '\tReminder', 'of', 'a', 'subtlety', ':', 'our', 'intention', 'is', 'not', 'to', 'return', 'a', '*', '\tnumber', ',', 'but', 'rather', 'to', 'return', 'a', 'random', '-', 'enough', 'seed', 'for', '*', '\trandom', 'numbers', '.', 'So', ""don't"", 'bother', 'trying', '(', 'e', '.', 'g', '.', ')', '""""', '*', '\t""""', '.', '*', '*', '/', 'dev', '/', 'random', 'and', 'dev', '/', 'urandom', 'seem', 'to', 'be', 'a', 'related', 'pair', '.', 'In', '*', 'words', 'of', 'the', 'song', ':', '""""', '.', '*', '*', '/', 'dev', '/', 'random', 'is', 'probably', 'the', 'best', '.', 'But', 'it', 'can', 'block', '.', 'The', '*', 'implementation', 'can', 'apparently', 'honour', '""""', 'and', '""""', '.', '*', 'But', 'can', 'others', '?', 'For', 'this', 'reason', ',', 'I', 'chose', 'not', 'to', 'use', 'it', 'at', 'present', '.', '*', '*', '/', 'dev', '/', 'urandom', '(', 'with', 'the', '""""', ')', 'is', 'also', 'good', '.', 'This', ""doesn't"", 'block', '.', '*', 'But', 'some', 'OSes', 'may', 'lack', 'it', '.', 'It', 'is', 'tempting', 'to', 'detect', 'its', '*', 'with', 'autoconf', 'and', 'use', 'the', 'result', 'in', 'a', '""""', 'here', '.', 'BUT', '.', '.', '.', '*', 'at', 'least', 'one', 'OS', ',', 'its', 'presence', 'can', 'vary', 'depending', 'upon', 'patch', 'levels', ',', '*', 'so', 'a', 'binary', '/', 'package', 'built', 'on', 'an', 'enabled', 'machine', 'might', 'hit', '*', 'when', 'run', 'on', 'one', 'where', 'it', 'is', 'absent', '.', '(', 'And', 'vice', 'versa', ':', 'a', 'build', 'on', '*', 'disabled', 'machine', 'would', 'be', 'unable', 'to', 'take', 'advantage', 'of', 'it', 'on', '*', 'enabled', 'machine', '.', ')', 'Therefore', 'always', 'try', 'for', 'it', 'at', 'run', 'time', '.', '*', '*', '""""', 'returns', 'a', 'random', '-', 'ish', 'number', 'in', 'its', '*', 'component', '.', '*', '*', '--', 'David', 'Lee', ',', 'Jan', '/', '*', '*', 'Each', 'block', 'below', 'is', 'logically', 'of', 'the', 'form', ':', '*', '\tif', 'good', '-', 'feature', 'appears', 'present', '{', '*', '\t\ttry', '*', '\t\tif', 'feature', 'worked', '{', '*', '\t\t\treturn', 'its', '*', '\t\t', '}', '*', '\t', '}', '*', '\t', '--', 'fall', 'through', 'to', 'not', '-', 'quite', '-', 'so', '-', 'good', 'feature', '--', '/', '*', '*', 'Does', 'any', 'of', 'the', 'random', 'device', 'names', 'work', '?', 'for', '(', 'idev', '=', '0', ';', 'idev', '<', 'DIMOF', '(', 'randdevname', ')', ';', '++', 'idev', ')', '{', 'fs', '=', 'fopen', '(', 'randdevname', '[', 'idev', ']', ',', '""""', ')', ';', 'if', '(', 'fs', '==', 'NULL', ')', '{', 'cl_log', '(', 'LOG_INFO', ',', ',', '\t__FUNCTION__', ',', 'randdevname', '[', 'idev', ']', ')', ';', '}', 'else', '{', 'if', '(', 'fread', '(', 'buf', ',', '1', ',', 'sizeof', '(', 'buf', ')', ',', 'fs', ')', '!=', 'sizeof', '(', 'buf', ')', ')', '{', 'cl_log', '(', 'LOG_INFO', ',', ',', '\t__FUNCTION__', ',', 'randdevname', '[', 'idev', ']', ')', ';', 'fclose', '(', 'fs', ')', ';', '}', 'else', '{', 'fclose', '(', 'fs', ')', ';', 'return', '(', 'unsigned', 'int', ')', 'cl_binary_to_int', '(', 'buf', ',', 'sizeof', '(', 'buf', ')', ')', ';', '}', '}', '}', '/', '*', '*', 'Try', '""""', ';', 'use', 'its', 'microsecond', 'output', '.', '*', '(', 'Might', 'it', 'be', 'prudent', 'to', 'let', ',', 'say', ',', 'the', 'seconds', 'further', 'adjust', 'this', ',', '*', 'in', 'case', 'the', 'microseconds', 'are', 'too', 'predictable', '?', ')', 'if', '(', 'gettimeofday', '(', '&', 'tv', ',', 'NULL', ')', '!=', '0', ')', '{', 'cl_log', '(', 'LOG_INFO', ',', '""""', ',', '__FUNCTION__', ')', ';', '}', 'else', '{', 'return', '(', 'unsigned', 'int', ')', 'tv', '.', 'tv_usec', ';', '}', '/', '*', '*', 'times', '(', '2', ')', 'returns', 'the', 'number', 'of', 'clock', 'ticks', '*', 'boot', '.', 'Fairly', 'predictable', ',', 'but', 'not', 'completely', 'so', '.', '.', '.', 'return', '(', 'unsigned', 'int', ')', 'cl_times', '(', ')', ';', '#if', '/', '*', '*', 'If', 'all', 'else', 'has', 'failed', ',', 'return', '(', 'as', 'a', 'number', ')', 'the', 'address', '*', 'something', 'on', 'the', 'stack', '.', '*', 'Poor', ',', 'but', 'at', 'least', 'it', 'has', 'a', 'chance', 'of', 'some', 'sort', 'of', 'variability', '.', 'horrid', '=', '(', 'long', ')', '&', 'tv', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
721,"['G_quant_set_pos_infinite_rule', '(', 'struct', 'Quant', '*', 'q', ',', 'DCELL', 'dRight', ',', 'CELL', 'c', ')', '{', 'q', '->', 'infiniteDRight', '=', 'dRight', ';', 'q', '->', 'infiniteCRight', '=', 'c', ';', 'quant_update_limits', '(', 'q', ',', 'dRight', ',', 'dRight', ',', 'c', ',', 'c', ')', ';', 'if', '(', 'q', '->', 'fp_lookup', '.', 'active', ')', '{', 'q', '->', 'fp_lookup', '.', 'inf_dmax', '=', 'q', '->', 'infiniteDRight', ';', 'q', '->', 'fp_lookup', '.', 'inf_max', '=', 'q', '->', 'infiniteCRight', ';', '}', 'q', '->', 'infiniteRightSet', '=', '1', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
722,"['free_mi_tree', '(', 'struct', 'mi_root', '*', 'parent', ')', '{', 'struct', 'mi_node', '*', 'p', ',', '*', 'q', ';', 'for', '(', 'p', '=', 'parent', '->', 'node', '.', 'kids', ';', 'p', ';', ')', '{', 'q', '=', 'p', ';', 'p', '=', 'p', '->', 'next', ';', 'free_mi_node', '(', 'q', ')', ';', '}', 'if', '(', 'use_shm', ')', 'shm_free', '(', 'parent', ')', ';', 'pkg_free', '(', 'parent', ')', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
723,"['hub_command_args_free', '(', 'struct', 'hub_command', '*', 'cmd', ')', '{', 'struct', 'hub_command_arg_data', '*', 'data', '=', 'NULL', ';', 'if', '(', '!cmd', '->', 'args', ')', 'return', ';', 'LIST_FOREACH', '(', 'struct', 'hub_command_arg_data', '*', ',', 'data', ',', 'cmd', '->', 'args', ',', '{', 'switch', '(', 'data', '->', 'type', ')', '{', 'case', 'type_string', ':', 'hub_free', '(', 'data', '->', 'data', '.', 'string', ')', ';', 'break', ';', 'case', 'type_range', ':', 'hub_free', '(', 'data', '->', 'data', '.', 'range', ')', ';', 'break', ';', 'default', ':', 'break', ';', '}', '}', ')', ';', 'list_clear', '(', 'cmd', '->', 'args', ',', 'hub_free', ')', ';', 'list_destroy', '(', 'cmd', '->', 'args', ')', ';', 'cmd', '->', 'args', '=', 'NULL', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
724,"['drop_temp_touch', '(', 'edict_t', '*', 'ent', ',', 'edict_t', '*', 'other', ',', 'cplane_t', '*', 'plane', ',', 'csurface_t', '*', 'surf', ')', '{', 'if', '(', 'other', '==', 'ent', '->', 'owner', ')', 'return', ';', 'Touch_Item', '(', 'ent', ',', 'other', ',', 'plane', ',', 'surf', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
725,"['main', '(', 'int', 'argc', ',', 'char', '*', 'argv', '[', ']', ')', '{', 'if', '(', 'argc', '<', '2', ')', '{', 'fprintf', '(', 'stderr', ',', '""""', ',', 'argv', '[', '0', ']', ')', ';', 'return', '1', ';', '}', 'char', '*', 'tbl', '=', 'g_strdup_printf', '(', '""""', ',', 'argv', '[', '1', ']', ')', ';', 'fs_ptable', '*', 'ptbl', '=', 'fs_ptable_open_filename', '(', 'tbl', ',', 'O_CREAT', '|', 'O_TRUNC', '|', 'O_RDWR', ')', ';', 'if', '(', '!ptbl', ')', '{', 'printf', '(', '""""', ')', ';', 'return', '1', ';', '}', 'fs_ptree', '*', 'pt', '=', 'fs_ptree_open_filename', '(', 'argv', '[', '1', ']', ',', 'O_CREAT', '|', 'O_TRUNC', '|', 'O_RDWR', ',', 'ptbl', ')', ';', 'if', '(', '!pt', ')', '{', 'printf', '(', '""""', ')', ';', 'return', '1', ';', '}', 'fs_ptree_add', '(', 'pt', ',', '0x223456789abcdef0LL', ',', 'NULL', ',', '0', ')', ';', 'fs_ptable_close', '(', 'ptbl', ')', ';', 'fs_ptree_close', '(', 'pt', ')', ';', 'ptbl', '=', 'fs_ptable_open_filename', '(', 'tbl', ',', 'O_RDWR', ')', ';', 'pt', '=', 'fs_ptree_open_filename', '(', 'argv', '[', '1', ']', ',', 'O_RDWR', ',', 'ptbl', ')', ';', 'if', '(', '!pt', ')', '{', 'printf', '(', '""""', ')', ';', 'return', '1', ';', '}', 'fs_ptree_add', '(', 'pt', ',', '0x123456789abcdef0LL', ',', 'NULL', ',', '0', ')', ';', 'fs_ptree_add', '(', 'pt', ',', '0x123456789abcdef0LL', ',', 'NULL', ',', '0', ')', ';', 'fs_ptree_add', '(', 'pt', ',', '0x1234567a9abcdef0LL', ',', 'NULL', ',', '0', ')', ';', 'fs_ptree_add', '(', 'pt', ',', '0x123456789abcdef0LL', ',', 'NULL', ',', '0', ')', ';', 'fs_ptree_add', '(', 'pt', ',', '0x1234567a9abcdef1LL', ',', 'NULL', ',', '0', ')', ';', 'fs_ptree_add', '(', 'pt', ',', '0x3234567a9abcdef1LL', ',', 'NULL', ',', '0', ')', ';', 'fs_rid', 's', '=', '0x5555555555555555LL', ';', 'fs_rid', 'g', '=', '0x0123456789abcdefLL', ';', '#define', 'ITS', 'double', 'then', '=', 'fs_time', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'ITS', ';', 'i', '++', ')', '{', 'if', '(', 'i', '%', '10', '==', '0', ')', 's', '+=', '984354325432534976LL', ';', 'fs_rid', 'pair', '[', '2', ']', '=', '{', 'g', ',', 's', '+', 'i', '}', ';', 'fs_ptree_add', '(', 'pt', ',', 's', ',', 'pair', ',', '0', ')', ';', '}', 'double', 'now', '=', 'fs_time', '(', ')', ';', 'printf', '(', '""""', ',', '(', 'int', ')', '(', 'ITS', '/', '(', 'now', '-', 'then', ')', ')', ')', ';', '#if', 'fs_ptree_print', '(', 'pt', ',', 'stdout', ')', ';', 'printf', '(', '""""', ')', ';', 'fs_chain_print', '(', 'ch', ',', 'stdout', ',', '2', ')', ';', 'fs_ptree_close', '(', 'pt', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
726,"['t_decrypt', '(', 'tea_block_t', '*', 'res', ',', 'const', 'tea_key_t', '*', 'key', ',', 'const', 'tea_block_t', '*', 'value', ')', '{', 'uint32', 'v0', ',', 'v1', ',', 'sum', '=', '0xC6EF3720', ';', 'int', 'i', ';', 'uint32', 'delta', '=', 'TEA_CONSTANT', ';', 'v0', '=', 'peek_le32', '(', '&', 'value', '->', 'v', '[', '0', ']', ')', ';', 'v1', '=', 'peek_le32', '(', '&', 'value', '->', 'v', '[', '4', ']', ')', ';', 'k0', '=', 'peek_le32', '(', '&', 'key', '->', 'v', '[', '0', ']', ')', ';', 'k1', '=', 'peek_le32', '(', '&', 'key', '->', 'v', '[', '4', ']', ')', ';', 'k2', '=', 'peek_le32', '(', '&', 'key', '->', 'v', '[', '8', ']', ')', ';', 'k3', '=', 'peek_le32', '(', '&', 'key', '->', 'v', '[', '12', ']', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'TEA_ROUNDS', ';', 'i', '++', ')', '{', 'v1', '-=', '(', '(', 'v0', '<<', '4', ')', '+', 'k2', ')', '^', '(', 'v0', '+', 'sum', ')', '^', '(', '(', 'v0', '>>', '5', ')', '+', 'k3', ')', ';', 'v0', '-=', '(', '(', 'v1', '<<', '4', ')', '+', 'k0', ')', '^', '(', 'v1', '+', 'sum', ')', '^', '(', '(', 'v1', '>>', '5', ')', '+', 'k1', ')', ';', 'sum', '-=', 'delta', ';', '}', 'poke_le32', '(', '&', 'res', '->', 'v', '[', '0', ']', ',', 'v0', ')', ';', 'poke_le32', '(', '&', 'res', '->', 'v', '[', '4', ']', ',', 'v1', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
727,"['OTF_KeyValueList_close', '(', 'OTF_KeyValueList', '*', 'list', ')', '{', 'OTF_KeyValuePairList', '*', 'next', ';', 'OTF_KeyValuePairList', '*', 'p', ';', 'if', '(', 'list', '==', 'NULL', ')', '{', 'OTF_Error', '(', '""""', ',', '__FUNCTION__', ',', '__FILE__', ',', '__LINE__', ')', ';', 'return', '1', ';', '}', 'p', '=', 'list', '->', 'kvBegin', ';', 'while', '(', 'p', '->', 'kvNext', '!=', 'NULL', ')', '{', 'next', '=', 'p', '->', 'kvNext', ';', 'free', '(', 'p', ')', ';', 'p', '=', 'next', ';', '}', 'free', '(', 'p', ')', ';', 'free', '(', 'list', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
728,"['OnbtnBrowseClick', '(', 'cb_unused', 'wxCommandEvent', '&', 'event', ')', '{', 'cbProject', '*', 'prj', '=', 'Manager', ':', ':', 'Get', '(', ')', '->', 'GetProjectManager', '(', ')', '->', 'GetActiveProject', '(', ')', ';', 'wxFileDialog', 'dlg', '(', 'this', ',', '_', '(', '""""', ')', ',', 'prj', '?', 'prj', '->', 'GetBasePath', '(', ')', ':', '_T', '(', '""""', ')', ',', 'txtFilename', '->', 'GetValue', '(', ')', ',', 'm_ExtFilter', ',', 'wxFD_SAVE', '|', 'wxFD_OVERWRITE_PROMPT', ')', ';', 'PlaceWindow', '(', '&', 'dlg', ')', ';', 'if', '(', 'dlg', '.', 'ShowModal', '(', ')', '==', 'wxID_OK', ')', 'txtFilename', '->', 'SetValue', '(', 'dlg', '.', 'GetPath', '(', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
729,"['server_child', '(', 'int', 'readyfd', ',', 'struct', 'in_addr', 'addr', ',', 'int', 'port', ',', 'server_fn', 'callback', ',', 'void', '*', 'userdata', ')', '{', 'ne_socket', '*', 's', '=', 'ne_sock_create', '(', ')', ';', 'int', 'ret', ',', 'listener', ';', 'in_child', '(', ')', ';', 'listener', '=', 'do_listen', '(', 'addr', ',', 'port', ')', ';', 'if', '(', 'listener', '<', '0', ')', 'return', 'FAIL', ';', '#ifdef', 'if', '(', 'write', '(', 'readyfd', ',', '""""', ',', '1', ')', '!=', '1', ')', 'abort', '(', ')', ';', 'ONN', '(', '""""', ',', 'ne_sock_accept', '(', 's', ',', 'listener', ')', ')', ';', 'ret', '=', 'callback', '(', 's', ',', 'userdata', ')', ';', 'close_socket', '(', 's', ')', ';', 'return', 'ret', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
730,"['gnats_strftime', '(', 'char', '*', 's', ',', 'size_t', 'size', ',', 'const', 'char', '*', 'template', ',', 'const', 'struct', 'tm', '*', 'brokentime', ')', '{', 'static', 'short', 'have_strftime_with_z', '=', '-', '1', ';', 'if', '(', 'have_strftime_with_z', '<', '0', ')', '{', 'char', 'buf', '[', '16', ']', ';', 'strftime', '(', 'buf', ',', '16', ',', '""""', ',', 'brokentime', ')', ';', '/', '*', 'jonm@alchemetrics', '.', 'co', '.', 'uk', '-', 'added', 'check', 'for', '+', '/', '-', 'at', 'the', '*', '*', 'of', 'the', 'string', 'to', 'support', 'SCO', 'OpenServer', '.', 'The', '*', '*', '%', 'z', 'does', 'not', 'have', 'a', ""''"", 'on', 'for', 'positive', 'offsets', ',', 'so', '*', '*', 'return', 'from', 'get_curr_date', '(', ')', 'cannot', 'be', 'parsed', 'by', 'get_date', '(', ')', '.', 'have_strftime_with_z', '=', '(', '(', 'int', ')', 'buf', '[', '0', ']', '==', ""''"", '||', '(', 'int', ')', 'buf', '[', '0', ']', '==', ""''"", ')', '&&', 'isdigit', '(', '(', 'int', ')', '(', 'buf', '[', '1', ']', ')', ')', ';', '}', 'if', '(', 'have_strftime_with_z', ')', 'return', 'strftime', '(', 's', ',', 'size', ',', 'template', ',', 'brokentime', ')', ';', '{', 'int', 'padding', '=', '0', ';', 'const', 'char', '*', 'in', '=', 'template', ';', 'char', '*', 'fixed_template', '=', '0', ';', 'char', '*', 'out', '=', '0', ';', '/', '*', 'Because', 'brokentime', 'points', 'to', 'static', 'data', '(', '*', 'by', 'localtime', '(', ')', ')', ',', 'it', 'cannot', 'be', 'passed', 'to', 'a', 'struct', 'tm', 'btime', '=', '*', 'brokentime', ';', 'int', 'result', ';', '/', '*', 'Count', 'number', 'of', '%', 'z', 'so', 'we', 'know', 'how', 'much', 'characters', 'to', 'add', 'to', '*', 'template', '.', 'We', 'actually', 'count', 'the', 'number', 'of', 'additional', 'characters', '.', '*', 'As', 'we', 'are', 'going', 'to', 'replace', 'each', '""""', 'by', '""""', '(', 'sign', ',', 'hours', ',', 'while', '(', '*', 'in', ')', '{', 'if', '(', '*', 'in', '==', ""''"", '&&', '*', '(', 'in', '+', '1', ')', '==', ""''"", ')', '{', 'in', '+=', '2', ';', '}', '{', 'in', '++', ';', '}', '}', 'fixed_template', '=', '(', 'char', '*', ')', 'xmalloc', '(', 'strlen', '(', 'template', ')', '+', 'padding', '+', '1', ')', ';', 'out', '=', 'fixed_template', ';', 'while', '(', '*', 'in', '!=', ""''"", ')', '{', 'char', 'c', '=', '*', 'in', '++', ';', 'if', '(', 'c', '!=', ""''"", ')', '{', '*', 'out', '++', '=', 'c', ';', '}', 'else', 'if', '(', '*', 'in', '!=', ""''"", ')', '{', '*', 'out', '++', '=', '*', 'in', '++', ';', '}', '{', 'int', 'offset', '=', 'minutes_gmt_offset', '(', 'brokentime', ')', ';', 'char', 'offset_buf', '[', '6', ']', ';', 'char', 'sign', '=', ""''"", ';', 'unsigned', 'int', 'i', ',', 'hours', ',', 'minutes', ';', 'if', '(', 'offset', '<', '0', ')', '{', 'sign', '=', ""''"", ';', 'offset', '=', '-', 'offset', ';', '}', 'hours', '=', 'offset', '/', '60', ';', 'minutes', '=', 'offset', '%', '60', ';', 'sprintf', '(', 'offset_buf', ',', '""""', ',', 'sign', ',', 'hours', ',', 'minutes', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'strlen', '(', 'offset_buf', ')', ';', 'i', '++', ')', '*', 'out', '++', '=', 'offset_buf', '[', 'i', ']', ';', '}', '}', '*', 'out', '=', ""''"", ';', 'result', '=', 'strftime', '(', 's', ',', 'size', ',', 'fixed_template', ',', '&', 'btime', ')', ';', 'free', '(', 'fixed_template', ')', ';', 'return', 'result', ';', '}', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
731,"['ADDR_SIZE_AFFECT', '(', '_DecodeType', 'dt', ',', '_iflags', 'totalPrefixes', ')', '{', 'if', '(', 'totalPrefixes', '&', 'INST_PRE_ADDR_SIZE', ')', '{', 'switch', '(', 'dt', ')', '{', 'case', 'Decode16Bits', ':', 'dt', '=', 'Decode32Bits', ';', 'break', ';', 'case', 'Decode32Bits', ':', 'dt', '=', 'Decode16Bits', ';', 'break', ';', 'case', 'Decode64Bits', ':', 'dt', '=', 'Decode32Bits', ';', 'break', ';', '}', '}', 'return', 'dt', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
732,"['validationsContainsValidatedUuid', '(', 'const', 'QString', '&', 'uuid', ')', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', '_validations', '.', 'count', '(', ')', ';', '++', 'i', ')', '{', 'const', 'AlertValidation', '&', 'val', '=', '_validations', '.', 'at', '(', 'i', ')', ';', 'if', '(', 'val', '.', 'validatedUid', '(', ')', '.', 'compare', '(', 'uuid', ',', 'Qt', ':', ':', 'CaseInsensitive', ')', '==', '0', ')', 'return', 'true', ';', '}', 'return', 'false', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
733,"['LoadNumber', '(', 'ZIO', '*', 'Z', ',', 'int', 'native', ')', '{', 'real', 'x', ';', 'if', '(', 'native', ')', '{', 'LoadBlock', '(', '&', 'x', ',', 'sizeof', '(', 'x', ')', ',', 'Z', ')', ';', 'return', 'x', ';', '}', '{', 'char', 'b', '[', '256', ']', ';', 'int', 'size', '=', 'ezgetc', '(', 'Z', ')', ';', 'LoadBlock', '(', 'b', ',', 'size', ',', 'Z', ')', ';', 'b', '[', 'size', ']', '=', '0', ';', 'return', 'luaU_str2d', '(', 'b', ',', 'zname', '(', 'Z', ')', ')', ';', '}', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
734,"['__ecereMethod___ecereNameSpace__eda__ListSection_OnResize', '(', 'struct', '__ecereNameSpace__ecere__com__Instance', '*', 'this', ',', 'int', 'width', ',', 'int', 'height', ')', '{', 'struct', '__ecereNameSpace__ecere__sys__Size', '__simpleStruct3', ';', 'struct', '__ecereNameSpace__ecere__sys__Point', '__simpleStruct2', ';', 'struct', '__ecereNameSpace__ecere__sys__Point', '__simpleStruct1', ';', 'struct', '__ecereNameSpace__ecere__sys__Size', '__simpleStruct0', ';', 'struct', '__ecereNameSpace__eda__ListSection', '*', '__ecerePointer___ecereNameSpace__eda__ListSection', '=', '(', 'struct', '__ecereNameSpace__eda__ListSection', '*', ')', '(', 'this', '?', '(', '(', '(', 'char', '*', ')', 'this', ')', '+', '__ecereClass___ecereNameSpace__eda__ListSection', '->', 'offset', ')', ':', '0', ')', ';', 'int', 'x', '=', 'width', '-', '(', 'int', ')', '(', '__ecereProp___ecereNameSpace__ecere__gui__Window_Get_size', '(', '__ecerePointer___ecereNameSpace__eda__ListSection', '->', 'btnDelete', ',', '&', '__simpleStruct0', ')', ',', '__simpleStruct0', ')', '.', 'w', '-', '20', ';', '__ecereProp___ecereNameSpace__ecere__gui__Window_Set_position', '(', '__ecerePointer___ecereNameSpace__eda__ListSection', '->', 'btnDelete', ',', '(', '__ecereProp___ecereNameSpace__ecere__gui__Window_Get_position', '(', '__ecerePointer___ecereNameSpace__eda__ListSection', '->', 'btnDelete', ',', '&', '__simpleStruct1', ')', ',', '__simpleStruct1', '.', 'x', '=', 'x', ',', '&', '__simpleStruct1', ')', ')', ';', 'if', '(', '__ecereProp___ecereNameSpace__ecere__gui__Window_Get_visible', '(', '__ecerePointer___ecereNameSpace__eda__ListSection', '->', 'btnNew', ')', ')', '__ecereProp___ecereNameSpace__ecere__gui__Window_Set_position', '(', '__ecerePointer___ecereNameSpace__eda__ListSection', '->', 'btnNew', ',', '(', '__ecereProp___ecereNameSpace__ecere__gui__Window_Get_position', '(', '__ecerePointer___ecereNameSpace__eda__ListSection', '->', 'btnNew', ',', '&', '__simpleStruct2', ')', ',', '__simpleStruct2', '.', 'x', '=', 'x', '=', 'x', '-', '(', 'int', ')', '(', '__ecereProp___ecereNameSpace__ecere__gui__Window_Get_size', '(', '__ecerePointer___ecereNameSpace__eda__ListSection', '->', 'btnNew', ',', '&', '__simpleStruct3', ')', ',', '__simpleStruct3', ')', '.', 'w', '-', '(', '3', ')', '*', '2', ',', '&', '__simpleStruct2', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
735,"['eb_subbook_directory', '(', 'EB_Book', '*', 'book', ',', 'char', '*', 'directory', ')', '{', 'EB_Error_Code', 'error_code', ';', 'char', '*', 'p', ';', 'eb_lock', '(', '&', 'book', '->', 'lock', ')', ';', 'LOG', '(', '(', '""""', ',', '(', 'int', ')', 'book', '->', 'code', ')', ')', ';', '/', '*', '*', 'Current', 'subbook', 'must', 'have', 'been', 'set', '.', 'if', '(', 'book', '->', 'subbook_current', '==', 'NULL', ')', '{', 'error_code', '=', 'EB_ERR_NO_CUR_SUB', ';', 'goto', 'failed', ';', '}', '/', '*', '*', 'Copy', 'directory', 'name', '.', '*', 'Upper', 'letters', 'are', 'converted', 'to', 'lower', 'letters', '.', 'strcpy', '(', 'directory', ',', 'book', '->', 'subbook_current', '->', 'directory_name', ')', ';', 'for', '(', 'p', '=', 'directory', ';', '*', 'p', '!=', ""''"", ';', 'p', '++', ')', '{', 'if', '(', ""''"", '<=', '*', 'p', '&&', '*', 'p', '<=', ""''"", ')', '*', 'p', '=', 'ASCII_TOLOWER', '(', '*', 'p', ')', ';', '}', 'LOG', '(', '(', '""""', ',', 'directory', ',', 'eb_error_string', '(', 'EB_SUCCESS', ')', ')', ')', ';', 'eb_unlock', '(', '&', 'book', '->', 'lock', ')', ';', 'return', 'EB_SUCCESS', ';', '/', '*', '*', 'An', 'error', 'occurs', '.', '.', '.', 'failed', ':', '*', 'directory', '=', ""''"", ';', 'LOG', '(', '(', '""""', ',', 'eb_error_string', '(', 'error_code', ')', ')', ')', ';', 'eb_unlock', '(', '&', 'book', '->', 'lock', ')', ';', 'return', 'error_code', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
736,"['hexbuf', '(', 'fz_context', '*', 'ctx', ',', 'unsigned', 'char', '*', 'p', ',', 'int', 'n', ')', '{', 'static', 'const', 'char', 'hex', '[', '16', ']', '=', '""""', ';', 'fz_buffer', '*', 'buf', ';', 'int', 'x', '=', '0', ';', 'buf', '=', 'fz_new_buffer', '(', 'ctx', ',', 'n', '*', '2', '+', '(', 'n', '/', '32', ')', '+', '2', ')', ';', 'while', '(', 'n', '--', ')', '{', 'buf', '->', 'data', '[', 'buf', '->', 'len', '++', ']', '=', 'hex', '[', '*', 'p', '>>', '4', ']', ';', 'buf', '->', 'data', '[', 'buf', '->', 'len', '++', ']', '=', 'hex', '[', '*', 'p', '&', '15', ']', ';', 'if', '(', '++', 'x', '==', '32', ')', '{', 'buf', '->', 'data', '[', 'buf', '->', 'len', '++', ']', '=', ""''"", ';', 'x', '=', '0', ';', '}', 'p', '++', ';', '}', 'buf', '->', 'data', '[', 'buf', '->', 'len', '++', ']', '=', ""''"", ';', 'buf', '->', 'data', '[', 'buf', '->', 'len', '++', ']', '=', ""''"", ';', 'return', 'buf', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
737,"['net_sendbuffer_destroy', '(', 'NET_SENDBUF_REC', '*', 'rec', ',', 'int', 'close', ')', '{', 'if', '(', 'rec', '->', 'send_tag', '!=', '-', '1', ')', 'g_source_remove', '(', 'rec', '->', 'send_tag', ')', ';', 'if', '(', 'close', ')', 'net_disconnect', '(', 'rec', '->', 'handle', ')', ';', 'if', '(', 'rec', '->', 'readbuffer', '!=', 'NULL', ')', 'line_split_free', '(', 'rec', '->', 'readbuffer', ')', ';', 'g_free_not_null', '(', 'rec', '->', 'buffer', ')', ';', 'g_free', '(', 'rec', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
738,"['visitStringType', '(', 'StringType', '*', 't', ')', '{', 'if', '(', 't', '->', 'bound', '(', ')', ')', 'printf', '(', '""""', ',', '(', 'long', ')', 't', '->', 'bound', '(', ')', ')', ';', 'printf', '(', '""""', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
739,"['CompressionWiggleIterator', '(', 'WiggleIterator', '*', 'i', ')', '{', 'if', '(', 'i', '->', 'overlaps', ')', 'return', 'i', ';', 'else', '{', 'UnaryWiggleIteratorData', '*', 'data', '=', '(', 'UnaryWiggleIteratorData', '*', ')', 'calloc', '(', '1', ',', 'sizeof', '(', 'UnaryWiggleIteratorData', ')', ')', ';', 'data', '->', 'iter', '=', 'i', ';', 'return', 'newWiggleIterator', '(', 'data', ',', '&', 'CompressionWiggleIteratorPop', ',', '&', 'UnaryWiggleIteratorSeek', ',', 'i', '->', 'default_value', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
740,"['{', 'char', 'char_pos_buf', '[', '32', ']', ';', 'uint', 'char_pos_len', ';', 'const', 'char', '*', 'filename', ';', 'char_pos_len', '=', 'zend_sprintf', '(', 'char_pos_buf', ',', '""""', ',', 'LANG_SCNG', '(', 'yy_text', ')', ')', ';', 'if', '(', 'CG', '(', 'active_op_array', ')', '->', 'filename', ')', '{', 'filename', '=', 'CG', '(', 'active_op_array', ')', '->', 'filename', ';', '}', 'else', '{', 'filename', '=', '""""', ';', '}', 'result', '->', 'value', '.', 'str', '.', 'len', '=', '1', '+', 'name_length', '+', 'strlen', '(', 'filename', ')', '+', 'char_pos_len', ';', 'result', '->', 'value', '.', 'str', '.', 'val', '=', '(', 'char', '*', ')', 'safe_emalloc', '(', 'result', '->', 'value', '.', 'str', '.', 'len', ',', '1', ',', '1', ')', ';', 'result', '->', 'value', '.', 'str', '.', 'val', '[', '0', ']', '=', ""''"", ';', 'sprintf', '(', 'result', '->', 'value', '.', 'str', '.', 'val', '+', '1', ',', '""""', ',', 'name', ',', 'filename', ',', 'char_pos_buf', ')', ';', 'result', '->', 'type', '=', 'IS_STRING', ';', 'Z_SET_REFCOUNT_P', '(', 'result', ',', '1', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
741,"['trainpolicy', '(', 'InputData', '*', 'pTrainingData', ',', 'const', 'string', 'baseLearnerName', ',', 'const', 'int', 'numIterations', ',', 'const', 'int', 'arrayInd', ')', '{', 'AdaBoostMHLearner', '*', 'sHypothesis', '=', 'new', 'AdaBoostMHLearner', '(', ')', ';', 'sHypothesis', '->', 'run', '(', '_args', ',', 'pTrainingData', ',', 'baseLearnerName', ',', 'numIterations', ',', '_weakhyp', ')', ';', 'delete', 'sHypothesis', ';', '/', '/', '_actionNum', '=', 'pTrainingData', '->', 'getNumClasses', '(', ')', ';', '_baseLearnerName', '=', 'baseLearnerName', ';', 'const', 'int', 'numExamples', '=', 'pTrainingData', '->', 'getNumExamples', '(', ')', ';', 'vector', '<', 'AlphaReal', '>', 'results', '(', '_actionNum', ')', ';', 'int', 'numErrors', '=', '0', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'numExamples', ';', '++', 'i', ')', '{', 'fill', '(', 'results', '.', 'begin', '(', ')', ',', 'results', '.', 'end', '(', ')', ',', '0', '.', '0', ')', ';', 'for', '(', 'int', 't', '=', '0', ';', 't', '<', '_weakhyp', '.', 'size', '(', ')', ';', '++', 't', ')', '{', 'for', '(', 'int', 'l', '=', '0', ';', 'l', '<', '_actionNum', ';', '++', 'l', ')', '{', 'results', '[', 'l', ']', '+=', '_weakhyp', '[', 't', ']', '->', 'getAlpha', '(', ')', '*', '_weakhyp', '[', 't', ']', '->', 'classify', '(', 'pTrainingData', ',', 'i', ',', 'l', ')', ';', '}', '}', 'AlphaReal', 'maxMargin', '=', '-', 'numeric_limits', '<', 'AlphaReal', '>', ':', ':', 'max', '(', ')', ';', 'int', 'forecastlabel', '=', '-', '1', ';', 'for', '(', 'int', 'l', '=', '0', ';', 'l', '<', '_actionNum', ';', '++', 'l', ')', '{', 'if', '(', 'results', '[', 'l', ']', '>', 'maxMargin', ')', '{', 'maxMargin', '=', 'results', '[', 'l', ']', ';', 'forecastlabel', '=', 'l', ';', '}', '}', 'vector', '<', 'Label', '>', 'labels', '=', 'pTrainingData', '->', 'getLabels', '(', 'i', ')', ';', 'if', '(', 'pTrainingData', '->', 'hasLabel', '(', 'i', ',', 'forecastlabel', ')', ')', '{', 'if', '(', 'labels', '[', 'forecastlabel', ']', '.', 'y', '<', '0', ')', 'numErrors', '++', ';', '}', 'else', 'numErrors', '++', ';', '}', 'AlphaReal', 'error', '=', '(', 'AlphaReal', ')', 'numErrors', '/', '(', 'AlphaReal', ')', 'numExamples', ';', 'return', 'error', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
742,"['add_ligature', '(', 'Code', 'in1', ',', 'Code', 'in2', ',', 'Code', 'out', ')', '{', 'if', '(', 'Ligature', '*', 'l', '=', 'ligature_obj', '(', 'in1', ',', 'in2', ')', ')', '{', 'Char', '&', 'ch', '=', '_encoding', '[', 'l', '->', 'out', ']', ';', 'if', '(', 'ch', '.', 'flags', '&', 'Char', ':', ':', 'BUILT', ')', '{', '/', '/', 'move', 'old', 'ligatures', 'to', 'point', 'to', 'the', 'true', 'for', '(', 'Ligature', '*', 'll', '=', 'ch', '.', 'ligatures', '.', 'begin', '(', ')', ';', 'll', '!=', 'ch', '.', 'ligatures', '.', 'end', '(', ')', ';', 'll', '++', ')', 'add_ligature', '(', 'out', ',', 'll', '->', 'in2', ',', 'll', '->', 'out', ')', ';', 'repoint_ligature', '(', 'in1', ',', 'l', ',', 'out', ')', ';', '}', '}', 'new_ligature', '(', 'in1', ',', 'in2', ',', 'out', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
743,"['card_open', '(', 'struct', 'sstate', '*', 'ss', ',', 'char', '*', 'dev', ')', '{', 'struct', 'wif', '*', 'wi', '=', 'wi_open', '(', 'dev', ')', ';', 'if', '(', '!wi', ')', 'err', '(', '1', ',', '""""', ')', ';', 'ss', '->', 'ss_wi', '=', 'wi', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
744,"['OpKillApp', '(', ')', '{', 'cid_killapp_it', 'out', ';', 'cid_killapp_ot', 'in', ';', 'status', '=', 'system', '(', '""""', ')', ';', 'printf', '(', '""""', ')', ';', 'printf', '(', '""""', ')', ';', 'printf', '(', '""""', ')', ';', 'status', '=', 'scanf', '(', '""""', ',', 'out', '.', 'appid', ')', ';', 'printf', '(', '""""', ')', ';', 'printf', '(', '""""', ',', 'out', '.', 'appid', ')', ';', 'if', '(', '!writen', '(', 'cidsock', ',', '(', 'char', '*', ')', '&', 'out', ',', 'sizeof', '(', 'out', ')', ')', ')', '{', 'printf', '(', '""""', ')', ';', 'getchar', '(', ')', ';', 'getchar', '(', ')', ';', 'return', ';', '}', 'if', '(', '!readn', '(', 'cidsock', ',', '(', 'char', '*', ')', '&', 'in', ',', 'sizeof', '(', 'in', ')', ')', ')', '{', 'printf', '(', '""""', ')', ';', 'getchar', '(', ')', ';', 'getchar', '(', ')', ';', 'return', ';', '}', 'printf', '(', '""""', ')', ';', 'printf', '(', '""""', ',', 'ntohs', '(', 'in', '.', 'status', ')', ')', ';', 'printf', '(', '""""', ',', 'ntohs', '(', 'in', '.', 'error', ')', ')', ';', 'printf', '(', '""""', ',', 'ntohs', '(', 'in', '.', 'count', ')', ')', ';', 'getchar', '(', ')', ';', 'getchar', '(', ')', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
745,"['libifinet6_ifinet6_withprefixlength_to_ipv6addrstruct', '(', 'char', '*', 'addrstring', ',', 'char', '*', 'prefixlengthstring', ',', 'char', '*', 'resultstring', ',', 'ipv6calc_ipv6addr', '*', 'ipv6addrp', ')', '{', 'int', 'retval', '=', '1', ',', 'result', ',', 'tempint', ';', 'char', 'tempstring', '[', 'NI_MAXHOST', ']', ';', 'uint8_t', 'prefixlength', '=', '0', ';', 'if', '(', '(', 'ipv6calc_debug', '&', 'DEBUG_libifinet6', ')', '!=', '0', ')', '{', 'fprintf', '(', 'stderr', ',', '""""', ',', 'DEBUG_function_name', ',', 'addrstring', ',', 'prefixlengthstring', ')', ';', '}', ';', 'if', '(', 'strlen', '(', 'prefixlengthstring', ')', '!=', '2', ')', '{', 'snprintf', '(', 'resultstring', ',', 'NI_MAXHOST', '-', '1', ',', '""""', ',', 'prefixlengthstring', ')', ';', 'retval', '=', '1', ';', 'return', '(', 'retval', ')', ';', '}', ';', 'result', '=', 'sscanf', '(', 'prefixlengthstring', ',', '""""', ',', '&', 'tempint', ')', ';', 'if', '(', 'result', '!=', '1', ')', '{', 'snprintf', '(', 'resultstring', ',', 'NI_MAXHOST', '-', '1', ',', '""""', ',', 'prefixlengthstring', ',', 'result', ')', ';', 'retval', '=', '1', ';', 'return', '(', 'retval', ')', ';', '}', ';', 'if', '(', '(', 'tempint', '<', '0', ')', '||', '(', 'tempint', '>', '128', ')', ')', '{', 'snprintf', '(', 'resultstring', ',', 'NI_MAXHOST', '-', '1', ',', '""""', ',', 'tempint', ')', ';', 'retval', '=', '1', ';', 'return', '(', 'retval', ')', ';', '}', ';', 'prefixlength', '=', '(', 'uint8_t', ')', 'tempint', ';', 'result', '=', 'libifinet6_ifinet6_to_ipv6addrstruct', '(', 'addrstring', ',', 'tempstring', ',', 'ipv6addrp', ')', ';', 'if', '(', 'result', '!=', '0', ')', '{', 'snprintf', '(', 'resultstring', ',', 'NI_MAXHOST', '-', '1', ',', '""""', ',', 'tempstring', ')', ';', 'retval', '=', '1', ';', 'return', '(', 'retval', ')', ';', '}', ';', 'ipv6addrp', '->', 'prefixlength', '=', '(', 'uint8_t', ')', 'prefixlength', ';', 'ipv6addrp', '->', 'flag_prefixuse', '=', '1', ';', 'if', '(', '(', 'ipv6calc_debug', '&', 'DEBUG_libifinet6', ')', '!=', '0', ')', '{', 'fprintf', '(', 'stderr', ',', '""""', ',', 'DEBUG_function_name', ',', 'resultstring', ')', ';', '}', ';', 'retval', '=', '0', ';', 'return', '(', 'retval', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
746,"['Scheduler', '(', 'int', 'block', ')', '{', '/', '*', 'One', 'wants', 'to', 'be', 'a', 'bit', 'careful', 'about', 'setting', '*', 'to', 'one', ',', 'since', 'a', 'one', 'implies', 'we', 'did', 'some', 'useful', 'work', ',', '*', 'and', 'therefore', 'probably', ""won't"", 'be', 'called', 'to', 'block', '*', 'time', '(', 'TN3270', 'mode', 'only', ')', '.', 'int', 'returnValue', ';', 'int', 'netin', ',', 'netout', ',', 'netex', ',', 'ttyin', ',', 'ttyout', ';', 'netout', '=', 'ring_full_count', '(', '&', 'netoring', ')', '&&', '(', 'flushline', '||', '(', 'my_want_state_is_wont', '(', 'TELOPT_LINEMODE', ')', '&&', '(', '!kludgelinemode', '||', 'my_want_state_is_do', '(', 'TELOPT_SGA', ')', ')', ')', '||', 'my_want_state_is_will', '(', 'TELOPT_BINARY', ')', ')', ';', 'ttyout', '=', 'ring_full_count', '(', '&', 'ttyoring', ')', ';', '#if', 'defined', 'ttyin', '=', 'ring_empty_count', '(', '&', 'ttyiring', ')', '&&', '(', 'shell_active', '==', '0', ')', ';', 'ttyin', '=', 'ring_empty_count', '(', '&', 'ttyiring', ')', ';', '#if', 'defined', 'netin', '=', 'ring_empty_count', '(', '&', 'netiring', ')', ';', 'netin', '=', '!ISend', '&&', 'ring_empty_count', '(', '&', 'netiring', ')', ';', 'netex', '=', '!SYNCHing', ';', '#if', 'defined', 'TN3270', '&&', '(', 'defined', 'unix', '||', 'defined', '__unix', '||', 'defined', '__unix__', ')', 'if', '(', 'HaveInput', ')', '{', 'HaveInput', '=', '0', ';', 'signal', '(', 'SIGIO', ',', 'inputAvailable', ')', ';', '}', 'returnValue', '=', 'process_rings', '(', 'netin', ',', 'netout', ',', 'netex', ',', 'ttyin', ',', 'ttyout', ',', '!block', ')', ';', 'if', '(', 'ring_full_count', '(', '&', 'ttyiring', ')', ')', '{', '#if', 'defined', 'if', '(', 'In3270', ')', '{', 'int', 'c', ';', 'c', '=', 'DataFromTerminal', '(', 'ttyiring', '.', 'consume', ',', 'ring_full_consecutive', '(', '&', 'ttyiring', ')', ')', ';', 'if', '(', 'c', ')', '{', 'returnValue', '=', '1', ';', 'ring_consumed', '(', '&', 'ttyiring', ',', 'c', ')', ';', '}', '}', '{', 'returnValue', '|=', 'telsnd', '(', ')', ';', '#if', 'defined', '}', '}', 'if', '(', 'ring_full_count', '(', '&', 'netiring', ')', ')', '{', '#if', '!defined', 'returnValue', '|=', 'telrcv', '(', ')', ';', 'returnValue', '=', 'Push3270', '(', ')', ';', '}', 'return', 'returnValue', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
747,"['clutter_animation_has_property', '(', 'ClutterAnimation', '*', 'animation', ',', 'const', 'gchar', '*', 'property_name', ')', '{', 'ClutterAnimationPrivate', '*', 'priv', ';', 'g_return_val_if_fail', '(', 'CLUTTER_IS_ANIMATION', '(', 'animation', ')', ',', 'FALSE', ')', ';', 'g_return_val_if_fail', '(', 'property_name', '!=', 'NULL', ',', 'FALSE', ')', ';', 'priv', '=', 'animation', '->', 'priv', ';', 'return', 'g_hash_table_lookup', '(', 'priv', '->', 'properties', ',', 'property_name', ')', '!=', 'NULL', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
748,"['change_directory_list', '(', 'void', ')', '{', 'trace', '(', '(', '""""', ')', ')', ';', 'arglex', '(', ')', ';', 'change_identifier', 'cid', ';', 'cid', '.', 'command_line_parse_rest', '(', 'change_directory_usage', ')', ';', '(', 'cid', ',', '(', '(', '1', '<<', 'cstate_state_being_developed', ')', '|', '(', '1', '<<', 'cstate_state_awaiting_review', ')', '|', '(', '1', '<<', 'cstate_state_being_reviewed', ')', '|', '(', '1', '<<', 'cstate_state_awaiting_integration', ')', '|', '(', '1', '<<', 'cstate_state_being_integrated', ')', ')', ')', ';', 'trace', '(', '(', '""""', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
749,"['OGRMultiLineString', '*', 'poMultiLine', '=', '(', 'OGRMultiLineString', '*', ')', 'poGeom', ';', 'numParts', '=', 'poMultiLine', '->', 'getNumGeometries', '(', ')', ';', '}', 'return', 'numParts', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
750,"['_elm_calendar_smart_add', '(', 'Evas_Object', '*', 'obj', ')', '{', 'time_t', 'current_time', ';', 'int', 'i', ',', 't', ';', 'EVAS_SMART_DATA_ALLOC', '(', 'obj', ',', 'Elm_Calendar_Smart_Data', ')', ';', 'ELM_WIDGET_CLASS', '(', '_elm_calendar_parent_sc', ')', '->', 'base', '.', 'add', '(', 'obj', ')', ';', 'priv', '->', 'first_interval', '=', '0', '.', '85', ';', 'priv', '->', 'year_min', '=', '2', ';', 'priv', '->', 'year_max', '=', '-', '1', ';', 'priv', '->', 'today_it', '=', '-', '1', ';', 'priv', '->', 'selected_it', '=', '-', '1', ';', 'priv', '->', 'first_day_it', '=', '-', '1', ';', 'priv', '->', 'format_func', '=', '_format_month_year', ';', 'priv', '->', 'marks', '=', 'NULL', ';', '(', 'ELM_WIDGET_DATA', '(', 'priv', ')', '->', 'resize_obj', ',', '""""', ',', '""""', ',', '_button_inc_start', ',', 'obj', ')', ';', '(', 'ELM_WIDGET_DATA', '(', 'priv', ')', '->', 'resize_obj', ',', '""""', ',', '""""', ',', '_button_dec_start', ',', 'obj', ')', ';', '(', 'ELM_WIDGET_DATA', '(', 'priv', ')', '->', 'resize_obj', ',', '""""', ',', '""""', ',', '_button_stop', ',', 'obj', ')', ';', '(', 'ELM_WIDGET_DATA', '(', 'priv', ')', '->', 'resize_obj', ',', '""""', ',', '""""', ',', '_day_selected', ',', 'obj', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'ELM_DAY_LAST', ';', 'i', '++', ')', '{', '/', '*', 'FIXME', ':', ""I'm"", 'not', 'aware', 'of', 'a', 'known', 'max', ',', 'so', 'if', 'it', 'fails', ',', 'char', 'buf', '[', '20', ']', ';', 'if', '(', 'strftime', '(', 'buf', ',', 'sizeof', '(', 'buf', ')', ',', '""""', ',', 'gmtime', '(', '&', 'weekday', ')', ')', ')', '{', 'priv', '->', 'weekdays', '[', 'i', ']', '=', 'eina_stringshare_add', '(', 'buf', ')', ';', '}', '{', 'priv', '->', 'weekdays', '[', 'i', ']', '=', '_days_abbrev', '[', 'i', ']', ';', 'WRN', '(', '""""', ',', '_days_abbrev', '[', 'i', ']', ')', ';', '}', '}', 'current_time', '=', 'time', '(', 'NULL', ')', ';', 'localtime_r', '(', '&', 'current_time', ',', '&', 'priv', '->', 'shown_time', ')', ';', 'priv', '->', 'current_time', '=', 'priv', '->', 'shown_time', ';', 'priv', '->', 'selected_time', '=', 'priv', '->', 'shown_time', ';', 't', '=', '_time_to_next_day', '(', '&', 'priv', '->', 'current_time', ')', ';', 'priv', '->', 'update_timer', '=', 'ecore_timer_add', '(', 't', ',', '_update_cur_date', ',', 'obj', ')', ';', 'elm_widget_can_focus_set', '(', 'obj', ',', 'EINA_TRUE', ')', ';', 'elm_layout_theme_set', '(', 'obj', ',', '""""', ',', '""""', ',', 'elm_object_style_get', '(', 'obj', ')', ')', ';', 'evas_object_smart_changed', '(', 'obj', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
751,"['simplify_control_stmt_condition', '(', 'edge', 'e', ',', 'gimple', 'stmt', ',', 'gimple', 'dummy_cond', ',', 'tree', '(', '*', 'simplify', ')', '(', 'gimple', ',', 'gimple', ')', ',', 'bool', 'handle_dominating_asserts', ')', '{', 'tree', 'cond', ',', 'cached_lhs', ';', 'enum', 'gimple_code', 'code', '=', 'gimple_code', '(', 'stmt', ')', ';', '/', '*', 'For', 'comparisons', ',', 'we', 'have', 'to', 'update', 'both', 'operands', ',', 'then', 'if', '(', 'code', '==', 'GIMPLE_COND', ')', '{', 'tree', 'op0', ',', 'op1', ';', 'enum', 'tree_code', 'cond_code', ';', 'op0', '=', 'gimple_cond_lhs', '(', 'stmt', ')', ';', 'op1', '=', 'gimple_cond_rhs', '(', 'stmt', ')', ';', 'cond_code', '=', 'gimple_cond_code', '(', 'stmt', ')', ';', 'if', '(', 'TREE_CODE', '(', 'op0', ')', '==', 'SSA_NAME', ')', '{', 'tree', 'tmp', '=', 'SSA_NAME_VALUE', '(', 'op0', ')', ';', 'if', '(', 'tmp', ')', 'op0', '=', 'tmp', ';', '}', 'if', '(', 'TREE_CODE', '(', 'op1', ')', '==', 'SSA_NAME', ')', '{', 'tree', 'tmp', '=', 'SSA_NAME_VALUE', '(', 'op1', ')', ';', 'if', '(', 'tmp', ')', 'op1', '=', 'tmp', ';', '}', 'if', '(', 'handle_dominating_asserts', ')', '{', '/', '*', 'Now', 'see', 'if', 'the', 'operand', 'was', 'consumed', 'by', 'an', 'which', 'dominates', 'E', '->', 'src', '.', 'If', 'so', ',', 'we', 'want', 'to', 'replace', 'if', '(', 'TREE_CODE', '(', 'op0', ')', '==', 'SSA_NAME', ')', 'op0', '=', 'lhs_of_dominating_assert', '(', 'op0', ',', 'e', '->', 'src', ',', 'stmt', ')', ';', 'if', '(', 'TREE_CODE', '(', 'op1', ')', '==', 'SSA_NAME', ')', 'op1', '=', 'lhs_of_dominating_assert', '(', 'op1', ',', 'e', '->', 'src', ',', 'stmt', ')', ';', '}', '/', '*', 'We', 'may', 'need', 'to', 'canonicalize', 'the', 'comparison', '.', 'example', ',', 'op0', 'might', 'be', 'a', 'constant', 'while', 'op1', 'is', 'SSA_NAME', '.', 'Failure', 'to', 'canonicalize', 'will', 'cause', 'us', 'if', '(', 'tree_swap_operands_p', '(', 'op0', ',', 'op1', ',', 'false', ')', ')', '{', 'tree', 'tmp', ';', 'cond_code', '=', 'swap_tree_comparison', '(', 'cond_code', ')', ';', 'tmp', '=', 'op0', ';', 'op0', '=', 'op1', ';', 'op1', '=', 'tmp', ';', '}', '/', '*', 'Stuff', 'the', 'operator', 'and', 'operands', 'into', 'our', 'dummy', 'gimple_cond_set_code', '(', 'dummy_cond', ',', 'cond_code', ')', ';', 'gimple_cond_set_lhs', '(', 'dummy_cond', ',', 'op0', ')', ';', 'gimple_cond_set_rhs', '(', 'dummy_cond', ',', 'op1', ')', ';', '/', '*', 'We', 'absolutely', 'do', 'not', 'care', 'about', 'any', 'type', 'fold_defer_overflow_warnings', '(', ')', ';', 'cached_lhs', '=', 'fold_binary', '(', 'cond_code', ',', 'boolean_type_node', ',', 'op0', ',', 'op1', ')', ';', 'if', '(', 'cached_lhs', ')', 'while', '(', 'CONVERT_EXPR_P', '(', 'cached_lhs', ')', ')', 'cached_lhs', '=', 'TREE_OPERAND', '(', 'cached_lhs', ',', '0', ')', ';', 'fold_undefer_overflow_warnings', '(', '(', '&&', 'is_gimple_min_invariant', '(', 'cached_lhs', ')', ')', ',', 'stmt', ',', 'WARN_STRICT_OVERFLOW_CONDITIONAL', ')', ';', '/', '*', 'If', 'we', 'have', 'not', 'simplified', 'the', 'condition', 'down', 'to', 'an', 'invariant', ',', 'if', '(', '||', '!is_gimple_min_invariant', '(', 'cached_lhs', ')', ')', 'cached_lhs', '=', '(', '*', 'simplify', ')', '(', 'dummy_cond', ',', 'stmt', ')', ';', 'return', 'cached_lhs', ';', '}', 'if', '(', 'code', '==', 'GIMPLE_SWITCH', ')', 'cond', '=', 'gimple_switch_index', '(', 'stmt', ')', ';', 'else', 'if', '(', 'code', '==', 'GIMPLE_GOTO', ')', 'cond', '=', 'gimple_goto_dest', '(', 'stmt', ')', ';', 'gcc_unreachable', '(', ')', ';', '/', '*', 'We', 'can', 'have', 'conditionals', 'which', 'just', 'test', 'the', 'state', 'of', 'a', 'if', '(', 'TREE_CODE', '(', 'cond', ')', '==', 'SSA_NAME', ')', '{', 'cached_lhs', '=', 'cond', ';', '/', '*', 'Get', 'the', ""variable's"", 'current', 'value', 'from', 'the', 'equivalence', 'chains', '.', 'It', 'is', 'possible', 'to', 'get', 'loops', 'in', 'the', 'SSA_NAME_VALUE', '(', 'consider', 'threading', 'the', 'backedge', 'of', 'a', 'loop', 'where', 'we', 'if', '(', '&&', 'TREE_CODE', '(', 'cached_lhs', ')', '==', '&&', 'SSA_NAME_VALUE', '(', 'cached_lhs', ')', ')', 'cached_lhs', '=', 'SSA_NAME_VALUE', '(', 'cached_lhs', ')', ';', '/', '*', 'If', ""we're"", 'dominated', 'by', 'a', 'suitable', 'ASSERT_EXPR', ',', 'if', '(', 'handle_dominating_asserts', '&&', 'TREE_CODE', '(', 'cached_lhs', ')', '==', 'SSA_NAME', ')', 'cached_lhs', '=', 'lhs_of_dominating_assert', '(', 'cached_lhs', ',', 'e', '->', 'src', ',', 'stmt', ')', ';', '/', '*', 'If', 'we', ""haven't"", 'simplified', 'to', 'an', 'invariant', 'yet', ',', 'then', 'use', 'if', '(', 'cached_lhs', '&&', '!', 'is_gimple_min_invariant', '(', 'cached_lhs', ')', ')', 'cached_lhs', '=', '(', '*', 'simplify', ')', '(', 'stmt', ',', 'stmt', ')', ';', '}', 'cached_lhs', '=', 'NULL', ';', 'return', 'cached_lhs', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
752,"['find_embedded_crc32', '(', 'const', 'char', '*', 'filepath', ',', 'unsigned', '*', 'crc32_be', ')', '{', 'const', 'char', '*', 'e', '=', 'filepath', '+', 'strlen', '(', 'filepath', ')', '-', '10', ';', 'for', '(', ';', 'e', '>=', 'filepath', '&&', '!IS_PATH_SEPARATOR', '(', '*', 'e', ')', ';', 'e', '--', ')', '{', 'if', '(', '(', '*', 'e', '==', ""''"", '&&', 'e', '[', '9', ']', '==', ""''"", ')', '||', '(', '*', 'e', '==', ""''"", '&&', 'e', '[', '9', ']', '==', ""''"", ')', ')', '{', 'const', 'char', '*', 'p', '=', 'e', '+', '8', ';', 'for', '(', ';', 'p', '>', 'e', '&&', 'IS_HEX', '(', '*', 'p', ')', ';', 'p', '--', ')', ';', 'if', '(', 'p', '==', 'e', ')', '{', 'rhash_hex_to_byte', '(', 'e', '+', '1', ',', '(', 'char', 'unsigned', '*', ')', 'crc32_be', ',', '8', ')', ';', 'return', '1', ';', '}', 'e', '-=', '9', ';', '}', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
753,"['load_ugly_table', '(', 'FILE', '*', 'fp', ')', '{', 'char', 'buf', '[', '4096', ']', ';', 'struct', 'nstat_ent', '*', 'db', '=', 'NULL', ';', 'struct', 'nstat_ent', '*', 'n', ';', 'while', '(', 'fgets', '(', 'buf', ',', 'sizeof', '(', 'buf', ')', ',', 'fp', ')', '!=', 'NULL', ')', '{', 'char', 'idbuf', '[', 'sizeof', '(', 'buf', ')', ']', ';', 'int', 'off', ';', 'char', '*', 'p', ';', 'p', '=', 'strchr', '(', 'buf', ',', ""''"", ')', ';', 'if', '(', '!p', ')', 'abort', '(', ')', ';', '*', 'p', '=', '0', ';', 'idbuf', '[', '0', ']', '=', '0', ';', 'strncat', '(', 'idbuf', ',', 'buf', ',', 'sizeof', '(', 'idbuf', ')', '-', '1', ')', ';', 'off', '=', 'p', '-', 'buf', ';', 'p', '+=', '2', ';', 'while', '(', '*', 'p', ')', '{', 'char', '*', 'next', ';', 'if', '(', '(', 'next', '=', 'strchr', '(', 'p', ',', ""''"", ')', ')', '!=', 'NULL', ')', '*', 'next', '++', '=', '0', ';', 'else', 'if', '(', '(', 'next', '=', 'strchr', '(', 'p', ',', ""''"", ')', ')', '!=', 'NULL', ')', '*', 'next', '++', '=', '0', ';', 'if', '(', 'off', '<', 'sizeof', '(', 'idbuf', ')', ')', '{', 'idbuf', '[', 'off', ']', '=', '0', ';', 'strncat', '(', 'idbuf', ',', 'p', ',', 'sizeof', '(', 'idbuf', ')', '-', 'off', '-', '1', ')', ';', '}', 'n', '=', 'malloc', '(', 'sizeof', '(', '*', 'n', ')', ')', ';', 'if', '(', '!n', ')', 'abort', '(', ')', ';', 'n', '->', 'id', '=', 'strdup', '(', 'idbuf', ')', ';', 'n', '->', 'rate', '=', '0', ';', 'n', '->', 'next', '=', 'db', ';', 'db', '=', 'n', ';', 'p', '=', 'next', ';', '}', 'n', '=', 'db', ';', 'if', '(', 'fgets', '(', 'buf', ',', 'sizeof', '(', 'buf', ')', ',', 'fp', ')', '==', 'NULL', ')', 'abort', '(', ')', ';', 'do', '{', 'p', '=', 'strrchr', '(', 'buf', ',', ""''"", ')', ';', 'if', '(', '!p', ')', 'abort', '(', ')', ';', '*', 'p', '=', '0', ';', 'if', '(', 'sscanf', '(', 'p', '+', '1', ',', '""""', ',', '&', 'n', '->', 'ival', ')', '!=', '1', ')', 'abort', '(', ')', ';', 'n', '->', 'val', '=', 'n', '->', 'ival', ';', 'if', '(', 'strcmp', '(', 'idbuf', ',', '""""', ')', '==', '0', ')', 'idbuf', '[', '5', ']', '=', '0', ';', 'n', '=', 'n', '->', 'next', ';', '}', 'while', '(', 'p', '>', 'buf', '+', 'off', '+', '2', ')', ';', '}', 'while', '(', 'db', ')', '{', 'n', '=', 'db', ';', 'db', '=', 'db', '->', 'next', ';', 'if', '(', 'useless_number', '(', 'n', '->', 'id', ')', ')', '{', 'free', '(', 'n', '->', 'id', ')', ';', 'free', '(', 'n', ')', ';', '}', 'else', '{', 'n', '->', 'next', '=', 'kern_db', ';', 'kern_db', '=', 'n', ';', '}', '}', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
754,"['help_exec', '(', 'int', 'argc', '__unused', ',', 'char', '*', '*', 'argv', '__unused', ')', '{', 'struct', 'command', '*', 'command', ';', 'unsigned', 'int', 'hpos', '=', '0', ';', 'printf', '(', '""""', ')', ';', 'for_each_table_entry', '(', 'command', ',', 'COMMANDS', ')', '{', 'hpos', '+=', 'printf', '(', '""""', ',', 'command', '->', 'name', ')', ';', 'if', '(', 'hpos', '>', '(', '16', '*', '4', ')', ')', '{', 'printf', '(', '""""', ')', ';', 'hpos', '=', '0', ';', '}', 'else', '{', 'while', '(', 'hpos', '%', '16', ')', '{', 'printf', '(', '""""', ')', ';', 'hpos', '++', ';', '}', '}', '}', 'printf', '(', '""""', '<', 'command', '>', '--', 'help\\""""', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
755,"['jack_session_commands_free', '(', 'jack_session_command_t', '*', 'cmds', ')', '{', 'int', 'i', '=', '0', ';', 'while', '(', '1', ')', '{', 'if', '(', 'cmds', '[', 'i', ']', '.', 'client_name', ')', 'free', '(', '(', 'char', '*', ')', 'cmds', '[', 'i', ']', '.', 'client_name', ')', ';', 'if', '(', 'cmds', '[', 'i', ']', '.', 'command', ')', 'free', '(', '(', 'char', '*', ')', 'cmds', '[', 'i', ']', '.', 'command', ')', ';', 'if', '(', 'cmds', '[', 'i', ']', '.', 'uuid', ')', 'free', '(', '(', 'char', '*', ')', 'cmds', '[', 'i', ']', '.', 'uuid', ')', ';', 'break', ';', 'i', '+=', '1', ';', '}', 'free', '(', 'cmds', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
756,"['cpio_append_fts_entry', '(', 'FTSENT', '*', 'entry', ')', '{', 'if', '(', 'entry', '->', 'fts_info', '&', 'FTS_NS', '||', 'entry', '->', 'fts_info', '&', 'FTS_NSOK', ')', 'cpio_append', '(', 'entry', '->', 'fts_path', ')', ';', 'cpio_append_stat', '(', 'entry', '->', 'fts_path', ',', 'entry', '->', 'fts_statp', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
757,"['load_city_name_list', '(', 'struct', 'section_file', '*', 'file', ',', 'struct', 'nation_type', '*', 'pnation', ',', 'const', 'char', '*', 'secfile_str1', ',', 'const', 'char', '*', 'secfile_str2', ')', '{', 'size_t', 'dim', ',', 'j', ';', 'const', 'char', '*', '*', 'cities', '=', 'secfile_lookup_str_vec', '(', 'file', ',', '&', 'dim', ',', '""""', ',', 'secfile_str1', ',', 'secfile_str2', ')', ';', '/', '*', 'Each', 'string', 'will', 'be', 'of', 'the', 'form', '""""', '.', '*', 'The', 'cityname', 'is', 'just', 'the', 'name', 'for', 'this', 'city', ',', 'while', 'each', '""""', '*', 'a', 'terrain', 'type', 'for', 'the', 'city', '(', 'or', '""""', ')', ',', 'with', 'a', 'preceeding', '!', 'to', '*', 'it', '.', 'The', 'parentheses', 'are', 'optional', '(', 'but', 'necessary', 'to', 'have', 'the', 'settings', ',', 'for', '(', 'j', '=', '0', ';', 'j', '<', 'dim', ';', 'j', '++', ')', '{', 'size_t', 'len', '=', 'strlen', '(', 'cities', '[', 'j', ']', ')', ';', 'char', 'city_name', '[', 'len', '+', '1', ']', ',', '*', 'p', ',', '*', 'next', ',', '*', 'end', ';', 'struct', 'nation_city', '*', 'pncity', ';', 'sz_strlcpy', '(', 'city_name', ',', 'cities', '[', 'j', ']', ')', ';', '/', '*', 'Now', 'we', 'wish', 'to', 'determine', 'values', 'for', 'all', 'of', 'the', 'city', 'labels', '.', 'A', '*', 'of', 'NCP_NONE', 'means', 'no', 'preference', '(', 'which', 'is', 'necessary', 'so', 'that', 'the', '*', 'of', 'this', 'is', 'optional', ')', ';', 'NCP_DISLIKE', 'means', 'the', 'label', 'is', 'negated', '*', 'NCP_LIKE', 'means', ""it's"", 'labelled', '.', 'Mostly', 'the', 'parsing', 'just', 'if', '(', '(', 'p', '=', 'strchr', '(', 'city_name', ',', ""''"", ')', ')', ')', '{', '*', 'p', '++', '=', ""''"", ';', 'if', '(', '!', '(', 'end', '=', 'strchr', '(', 'p', ',', ""''"", ')', ')', ')', '{', 'ruleset_error', '(', 'LOG_ERROR', ',', '""""', '%', 's\\""""', '%', '""""', ',', 'secfile_name', '(', 'file', ')', ',', 'secfile_str1', ',', 'secfile_str2', ',', 'cities', '[', 'j', ']', ')', ';', '}', 'for', '(', '*', 'end', '++', '=', ""''"", ';', ""''"", '!=', '*', 'end', ';', 'end', '++', ')', '{', 'if', '(', '!fc_isspace', '(', '*', 'end', ')', ')', '{', 'ruleset_error', '(', 'LOG_ERROR', ',', '""""', '%', 's\\""""', '%', '""""', ',', 'secfile_name', '(', 'file', ')', ',', 'secfile_str1', ',', 'secfile_str2', ',', 'cities', '[', 'j', ']', ')', ';', '}', '}', '}', 'remove_leading_trailing_spaces', '(', 'city_name', ')', ';', 'if', '(', 'check_name', '(', 'city_name', ')', ')', '{', '/', '*', 'The', 'ruleset', 'contains', 'a', 'name', 'that', 'is', 'too', 'long', '.', 'This', 'ruleset_error', '(', 'LOG_ERROR', ',', '""""', '%', 's\\""""', '%', '""""', ',', 'secfile_name', '(', 'file', ')', ',', 'secfile_str1', ',', 'secfile_str2', ',', 'city_name', ')', ';', 'city_name', '[', 'MAX_LEN_NAME', '-', '1', ']', '=', ""''"", ';', '}', 'pncity', '=', 'nation_city_new', '(', 'pnation', ',', 'city_name', ')', ';', 'if', '(', 'NULL', '!=', 'p', ')', '{', 'do', '{', 'enum', 'nation_city_preference', 'prefer', ';', 'if', '(', '(', 'next', '=', 'strchr', '(', 'p', ',', ""''"", ')', ')', ')', '{', '*', 'next', '=', ""''"", ';', '}', 'remove_leading_trailing_spaces', '(', 'p', ')', ';', '/', '*', 'The', '!', 'is', 'used', 'to', 'mark', 'a', 'negative', ',', 'which', 'is', 'recorded', '*', 'NCP_DISLIKE', '.', 'Otherwise', 'we', 'use', 'a', 'NCP_LIKE', '.', 'if', '(', '*', 'p', '==', ""''"", ')', '{', 'p', '++', ';', 'prefer', '=', 'NCP_DISLIKE', ';', '}', 'else', '{', 'prefer', '=', 'NCP_LIKE', ';', '}', 'if', '(', '0', '==', 'fc_strcasecmp', '(', 'p', ',', '""""', ')', ')', '{', 'nation_city_set_river_preference', '(', 'pncity', ',', 'prefer', ')', ';', '}', 'else', '{', 'const', 'struct', 'terrain', '*', 'pterrain', '=', 'terrain_by_rule_name', '(', 'p', ')', ';', 'if', '(', 'NULL', '==', 'pterrain', ')', '{', 'size_t', 'l', '=', 'strlen', '(', 'p', ')', ';', 'if', '(', '0', '<', 'l', '&&', ""''"", '==', 'fc_tolower', '(', 'p', '[', 'l', '-', '1', ']', ')', ')', '{', 'p', '[', 'l', '-', '1', ']', '=', ""''"", ';', '}', 'pterrain', '=', 'terrain_by_rule_name', '(', 'p', ')', ';', '}', 'if', '(', 'NULL', '!=', 'pterrain', ')', '{', 'nation_city_set_terrain_preference', '(', 'pncity', ',', 'pterrain', ',', 'prefer', ')', ';', '}', 'else', '{', '/', '*', 'Nation', 'authors', 'may', 'use', 'terrains', 'like', '""""', 'that', '*', 'available', 'in', 'the', 'default', 'ruleset', 'but', 'not', 'in', 'civ1', '/', 'civ2', '.', '*', 'In', 'normal', 'use', 'we', 'should', 'just', 'ignore', 'hints', 'for', '*', 'terrains', ',', 'but', 'nation', 'authors', 'may', 'want', 'to', 'know', 'about', 'log_verbose', '(', '""""', '%', 's\\""""', '%', '""""', ',', 'secfile_name', '(', 'file', ')', ',', 'secfile_str1', ',', 'secfile_str2', ',', 'p', ')', ';', '}', '}', 'p', '=', 'next', '?', 'next', '+', '1', ':', 'NULL', ';', '}', 'while', '(', 'NULL', '!=', 'p', '&&', ""''"", '!=', '*', 'p', ')', ';', '}', '}', 'if', '(', 'NULL', '!=', 'cities', ')', '{', 'free', '(', 'cities', ')', ';', '}', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
758,"['GdipGetImageDecoders', '(', 'UINT', 'numDecoders', ',', 'UINT', 'size', ',', 'ImageCodecInfo', '*', 'decoders', ')', '{', 'if', '(', '!decoders', '||', '(', 'numDecoders', '!=', 'g_decoders', ')', '||', '(', 'size', '!=', 'sizeof', '(', 'ImageCodecInfo', ')', '*', 'g_decoders', ')', ')', 'return', 'GenericError', ';', 'memcpy', '(', 'decoders', ',', 'g_decoder_list', ',', 'size', ')', ';', 'return', 'Ok', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
759,"['redrat3_init_rc_dev', '(', 'struct', 'redrat3_dev', '*', 'rr3', ')', '{', 'struct', 'device', '*', 'dev', '=', 'rr3', '->', 'dev', ';', 'struct', 'rc_dev', '*', 'rc', ';', 'int', 'ret', '=', '-', 'ENODEV', ';', 'u16', 'prod', '=', 'le16_to_cpu', '(', 'rr3', '->', 'udev', '->', 'descriptor', '.', 'idProduct', ')', ';', 'rc', '=', 'rc_allocate_device', '(', ')', ';', 'if', '(', '!rc', ')', '{', 'dev_err', '(', 'dev', ',', '""""', ')', ';', 'goto', 'out', ';', '}', 'snprintf', '(', 'rr3', '->', 'name', ',', 'sizeof', '(', 'rr3', '->', 'name', ')', ',', '""""', ',', 'prod', '==', 'USB_RR3IIUSB_PRODUCT_ID', '?', '""""', ':', '""""', ',', 'le16_to_cpu', '(', 'rr3', '->', 'udev', '->', 'descriptor', '.', 'idVendor', ')', ',', 'prod', ')', ';', 'usb_make_path', '(', 'rr3', '->', 'udev', ',', 'rr3', '->', 'phys', ',', 'sizeof', '(', 'rr3', '->', 'phys', ')', ')', ';', 'rc', '->', 'input_name', '=', 'rr3', '->', 'name', ';', 'rc', '->', 'input_phys', '=', 'rr3', '->', 'phys', ';', 'usb_to_input_id', '(', 'rr3', '->', 'udev', ',', '&', 'rc', '->', 'input_id', ')', ';', 'rc', '->', 'dev', '.', 'parent', '=', 'dev', ';', 'rc', '->', 'priv', '=', 'rr3', ';', 'rc', '->', 'driver_type', '=', 'RC_DRIVER_IR_RAW', ';', 'rc', '->', 'allowed_protocols', '=', 'RC_BIT_ALL', ';', 'rc', '->', 'timeout', '=', 'US_TO_NS', '(', '2750', ')', ';', 'rc', '->', 'tx_ir', '=', 'redrat3_transmit_ir', ';', 'rc', '->', 's_tx_carrier', '=', 'redrat3_set_tx_carrier', ';', 'rc', '->', 'driver_name', '=', 'DRIVER_NAME', ';', 'rc', '->', 'rx_resolution', '=', 'US_TO_NS', '(', '2', ')', ';', 'rc', '->', 'map_name', '=', 'RC_MAP_HAUPPAUGE', ';', 'ret', '=', 'rc_register_device', '(', 'rc', ')', ';', 'if', '(', 'ret', '<', '0', ')', '{', 'dev_err', '(', 'dev', ',', '""""', ')', ';', 'goto', 'out', ';', '}', 'return', 'rc', ';', 'out', ':', 'rc_free_device', '(', 'rc', ')', ';', 'return', 'NULL', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
760,"['show_parconfig_smsc37c669', '(', 'int', 'io', ',', 'int', 'key', ')', '{', 'int', 'cr1', ',', 'cr4', ',', 'cra', ',', 'cr23', ',', 'cr26', ',', 'cr27', ';', 'struct', 'superio_struct', '*', 's', ';', 'static', 'const', 'char', '*', 'const', 'modes', '[', ']', '=', '{', '""""', ',', '""""', ',', '""""', ',', '""""', '}', ';', 'outb', '(', 'key', ',', 'io', ')', ';', 'outb', '(', 'key', ',', 'io', ')', ';', 'outb', '(', '1', ',', 'io', ')', ';', 'cr1', '=', 'inb', '(', 'io', '+', '1', ')', ';', 'outb', '(', '4', ',', 'io', ')', ';', 'cr4', '=', 'inb', '(', 'io', '+', '1', ')', ';', 'outb', '(', '0x0a', ',', 'io', ')', ';', 'cra', '=', 'inb', '(', 'io', '+', '1', ')', ';', 'outb', '(', '0x23', ',', 'io', ')', ';', 'cr23', '=', 'inb', '(', 'io', '+', '1', ')', ';', 'outb', '(', '0x26', ',', 'io', ')', ';', 'cr26', '=', 'inb', '(', 'io', '+', '1', ')', ';', 'outb', '(', '0x27', ',', 'io', ')', ';', 'cr27', '=', 'inb', '(', 'io', '+', '1', ')', ';', 'outb', '(', '0xaa', ',', 'io', ')', ';', 'if', '(', 'verbose_probing', ')', '{', 'printk', '(', '""""', ',', 'cr1', ',', 'cr4', ',', 'cra', ',', 'cr23', ',', 'cr26', ',', 'cr27', ')', ';', '/', '*', 'The', 'documentation', 'calls', 'DMA', 'and', 'IRQ', '-', 'Lines', 'by', 'letters', ',', 'the', 'board', 'maker', 'can', '/', 'will', 'wire', 'printk', '(', '""""', ',', 'cr23', '*', '4', ',', '(', 'cr27', '&', '0x0f', ')', '?', ""''"", '-', '1', '+', '(', 'cr27', '&', '0x0f', ')', ':', ""''"", ',', '(', 'cr26', '&', '0x0f', ')', '?', ""''"", '-', '1', '+', '(', 'cr26', '&', '0x0f', ')', ':', ""''"", ',', 'cra', '&', '0x0f', ')', ';', 'printk', '(', 'KERN_INFO', '""""', ',', '(', 'cr23', '*', '4', '>=', '0x100', ')', '?', '""""', ':', '""""', ',', '(', 'cr1', '&', '4', ')', '?', '""""', ':', '""""', ')', ';', 'printk', '(', '""""', ',', '(', 'cr1', '&', '0x08', ')', '?', ':', 'modes', '[', 'cr4', '&', '0x03', ']', ',', '(', 'cr4', '&', '0x40', ')', '?', '""""', ':', '""""', ')', ';', '}', '/', '*', 'Heuristics', '!', 'BIOS', 'setup', 'for', 'this', 'mainboard', 'device', 'the', 'choices', 'to', 'standard', 'settings', ',', 'i', '.', 'e', '.', 'io', '-', 'address', 'and', 'are', 'related', ',', 'however', 'DMA', 'can', 'be', '1', 'or', '3', ',', 'assume', 'DMA_A', '=', 'DMA1', ',', 's', '=', 'find_free_superio', '(', ')', ';', 'if', '(', 's', '==', 'NULL', ')', 'printk', '(', 'KERN_INFO', '""""', ')', ';', 'else', '{', 'int', 'd', ';', 'switch', '(', 'cr23', '*', '4', ')', '{', 'case', '0x3bc', ':', 's', '->', 'io', '=', '0x3bc', ';', 's', '->', 'irq', '=', '7', ';', 'break', ';', 'case', '0x378', ':', 's', '->', 'io', '=', '0x378', ';', 's', '->', 'irq', '=', '7', ';', 'break', ';', 'case', '0x278', ':', 's', '->', 'io', '=', '0x278', ';', 's', '->', 'irq', '=', '5', ';', '}', 'd', '=', '(', 'cr26', '&', '0x0f', ')', ';', 'if', '(', 'd', '==', '1', '||', 'd', '==', '3', ')', 's', '->', 'dma', '=', 'd', ';', 's', '->', 'dma', '=', 'PARPORT_DMA_NONE', ';', '}', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
761,"['read_ancestry', '(', 'const', 'char', '*', 'graft_file', ')', '{', 'FILE', '*', 'fp', '=', 'fopen', '(', 'graft_file', ',', '""""', ')', ';', 'char', 'buf', '[', '1024', ']', ';', 'if', '(', '!fp', ')', 'return', '-', '1', ';', 'while', '(', 'fgets', '(', 'buf', ',', 'sizeof', '(', 'buf', ')', ',', 'fp', ')', ')', '{', 'int', 'len', '=', 'strlen', '(', 'buf', ')', ';', 'struct', 'commit_graft', '*', 'graft', '=', 'read_graft_line', '(', 'buf', ',', 'len', ')', ';', 'if', '(', 'graft', ')', 'register_commit_graft', '(', 'graft', ',', '0', ')', ';', '}', 'fclose', '(', 'fp', ')', ';', 'return', '0', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
762,"['xmlSecNssDigestInitialize', '(', 'xmlSecTransformPtr', 'transform', ')', '{', 'xmlSecNssDigestCtxPtr', 'ctx', ';', 'xmlSecAssert2', '(', 'xmlSecNssDigestCheckId', '(', 'transform', ')', ',', '-', '1', ')', ';', 'xmlSecAssert2', '(', 'xmlSecTransformCheckSize', '(', 'transform', ',', 'xmlSecNssDigestSize', ')', ',', '-', '1', ')', ';', 'ctx', '=', 'xmlSecNssDigestGetCtx', '(', 'transform', ')', ';', 'xmlSecAssert2', '(', 'ctx', '!=', 'NULL', ',', '-', '1', ')', ';', 'memset', '(', 'ctx', ',', '0', ',', 'sizeof', '(', 'xmlSecNssDigestCtx', ')', ')', ';', '#ifndef', 'if', '(', 'xmlSecTransformCheckId', '(', 'transform', ',', 'xmlSecNssTransformSha1Id', ')', ')', '{', 'ctx', '->', 'digest', '=', 'SECOID_FindOIDByTag', '(', 'SEC_OID_SHA1', ')', ';', '}', 'if', '(', '1', ')', '{', 'xmlSecError', '(', 'XMLSEC_ERRORS_HERE', ',', 'xmlSecErrorsSafeString', '(', 'xmlSecTransformGetName', '(', 'transform', ')', ')', ',', 'NULL', ',', 'XMLSEC_ERRORS_R_INVALID_TRANSFORM', ',', 'XMLSEC_ERRORS_NO_MESSAGE', ')', ';', 'return', '(', '-', '1', ')', ';', '}', 'if', '(', 'ctx', '->', 'digest', '==', 'NULL', ')', '{', 'xmlSecError', '(', 'XMLSEC_ERRORS_HERE', ',', 'xmlSecErrorsSafeString', '(', 'xmlSecTransformGetName', '(', 'transform', ')', ')', ',', '""""', ',', 'XMLSEC_ERRORS_R_CRYPTO_FAILED', ',', '""""', ',', 'PORT_GetError', '(', ')', ')', ';', 'return', '(', '-', '1', ')', ';', '}', 'ctx', '->', 'digestCtx', '=', 'PK11_CreateDigestContext', '(', 'ctx', '->', 'digest', '->', 'offset', ')', ';', 'if', '(', 'ctx', '->', 'digestCtx', '==', 'NULL', ')', '{', 'xmlSecError', '(', 'XMLSEC_ERRORS_HERE', ',', 'xmlSecErrorsSafeString', '(', 'xmlSecTransformGetName', '(', 'transform', ')', ')', ',', '""""', ',', 'XMLSEC_ERRORS_R_CRYPTO_FAILED', ',', '""""', ',', 'PORT_GetError', '(', ')', ')', ';', 'return', '(', '-', '1', ')', ';', '}', 'return', '(', '0', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
763,"['qstrlower', '(', 'char', '*', 'str', ')', '{', 'char', '*', 'cp', ';', 'if', '(', '!str', ')', 'return', 'NULL', ';', 'for', '(', 'cp', '=', 'str', ';', '*', 'cp', ';', 'cp', '++', ')', 'if', '(', '*', 'cp', '>=', ""''"", '&&', '*', 'cp', '<=', ""''"", ')', '*', 'cp', '+=', '32', ';', 'return', 'str', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
764,"['mark_address', '(', 'gimple', 'stmt', ',', 'tree', 'addr', ',', 'tree', ',', 'void', '*', 'data', ')', '{', 'addr', '=', 'get_base_address', '(', 'addr', ')', ';', 'if', '(', 'TREE_CODE', '(', 'addr', ')', '==', 'FUNCTION_DECL', ')', '{', 'struct', 'cgraph_node', '*', 'node', '=', 'cgraph_get_create_real_symbol_node', '(', 'addr', ')', ';', 'cgraph_mark_address_taken_node', '(', 'node', ')', ';', 'ipa_record_reference', '(', '(', 'symtab_node', ')', 'data', ',', '(', 'symtab_node', ')', 'node', ',', 'IPA_REF_ADDR', ',', 'stmt', ')', ';', '}', 'else', 'if', '(', 'addr', '&&', 'TREE_CODE', '(', 'addr', ')', '==', '&&', '(', 'TREE_STATIC', '(', 'addr', ')', '||', 'DECL_EXTERNAL', '(', 'addr', ')', ')', ')', '{', 'struct', 'varpool_node', '*', 'vnode', '=', 'varpool_node_for_decl', '(', 'addr', ')', ';', 'ipa_record_reference', '(', '(', 'symtab_node', ')', 'data', ',', '(', 'symtab_node', ')', 'vnode', ',', 'IPA_REF_ADDR', ',', 'stmt', ')', ';', '}', 'return', 'false', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
765,"['search_neighbors', '(', 'double', '*', '*', 'x', ',', 'double', '*', '*', 'cy', ',', 'struct', 'param', 'p', ',', 'struct', 'sfound', 'sf', ')', '{', 'int', 'ei', ',', 'ej', ',', 'i', ',', 'hdim', ',', 'whichsize', ',', 'whichbox', ';', 'long', 'found', ';', 'double', 'epsilon', ';', 'hdim', '=', 'p', '.', 'hdim', ';', 'ei', '=', '(', 'int', ')', '(', 'cy', '[', '0', ']', '[', 'hdim', ']', '*', 'EPSILONS', ')', ';', 'if', '(', 'ei', '<', '0', ')', 'ei', '=', '0', ';', 'else', 'if', '(', 'ei', '>', '(', 'EPSILONS', '-', '1', ')', ')', 'ei', '=', 'EPSILONS', '-', '1', ';', 'ej', '=', '(', 'int', ')', '(', 'cy', '[', 'nsseconddim', ']', '[', 'hdim', ']', '*', 'EPSILONS', ')', ';', 'if', '(', 'ej', '<', '0', ')', 'ej', '=', '0', ';', 'else', 'if', '(', 'ej', '>', '(', 'EPSILONS', '-', '1', ')', ')', 'ej', '=', 'EPSILONS', '-', '1', ';', 'if', '(', 'countstarteps', '[', 'ei', ']', '[', 'ej', ']', '>', '0', ')', 'epsilon', '=', 'starteps', '[', 'ei', ']', '[', 'ej', ']', '/', 'countstarteps', '[', 'ei', ']', '[', 'ej', ']', ';', 'epsilon', '=', '0', '.', '001', ';', 'found', '=', '0', ';', 'epsilon', '/=', 'EPSFAC', ';', 'while', '(', 'found', '<', 'p', '.', 'MINN', ')', '{', 'epsilon', '*=', 'EPSFAC', ';', 'whichsize', '=', '(', 'int', ')', '(', '1', '.', '0', '/', 'epsilon', ')', ';', 'if', '(', 'whichsize', '>', 'neigh', '[', 'NEIGH', '-', '1', ']', '.', 'n', ')', 'whichbox', '=', 'NEIGH', '-', '1', ';', 'else', '{', 'whichbox', '=', '0', ';', 'for', '(', 'i', '=', 'NEIGH', '-', '1', ';', 'i', '>', '0', ';', 'i', '--', ')', '{', 'if', '(', '(', 'whichsize', '>', 'neigh', '[', 'i', '-', '1', ']', '.', 'n', ')', '&&', '(', 'whichsize', '<=', 'neigh', '[', 'i', ']', '.', 'n', ')', ')', 'whichbox', '=', 'i', '-', '1', ';', '}', '}', 'found', '=', 'find_neighbors', '(', 'x', ',', 'cy', ',', 'whichbox', ',', 'p', ',', 'sf', ',', 'epsilon', ')', ';', '}', 'sort', '(', 'found', ',', 'p', ',', 'sf', ')', ';', 'if', '(', 'sf', '.', 'distance', '[', 'p', '.', 'MINN', '-', '1', ']', '==', '0', '.', '0', ')', '{', 'fprintf', '(', 'stderr', ',', '""""', ')', ';', 'exit', '(', 'SEARCH_NEIGHBORS_ZERO_DISTANCE', ')', ';', '}', 'starteps', '[', 'ei', ']', '[', 'ej', ']', '+=', 'sf', '.', 'distance', '[', 'p', '.', 'MINN', '-', '1', ']', ';', 'countstarteps', '[', 'ei', ']', '[', 'ej', ']', '++', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
766,"['callAsFunction', '(', 'ExecState', '*', 'exec', ',', 'JSObject', '*', 'thisObj', ',', 'const', 'List', '&', 'args', ')', '{', 'KJS_CHECK_THIS', '(', 'KJS', ':', ':', 'DOMNamedNodeMap', ',', 'thisObj', ')', ';', 'DOMExceptionTranslator', 'exception', '(', 'exec', ')', ';', 'DOM', ':', ':', 'NamedNodeMapImpl', '&', 'map', '=', '*', 'static_cast', '<', 'DOMNamedNodeMap', '*', '>', '(', 'thisObj', ')', '->', 'impl', '(', ')', ';', 'switch', '(', 'id', ')', '{', 'case', 'DOMNamedNodeMap', ':', ':', 'GetNamedItem', ':', 'return', 'getDOMNode', '(', 'exec', ',', 'map', '.', 'getNamedItem', '(', 'args', '[', '0', ']', '->', 'toString', '(', 'exec', ')', '.', 'domString', '(', ')', ')', ')', ';', 'case', 'DOMNamedNodeMap', ':', ':', 'SetNamedItem', ':', '{', 'DOM', ':', ':', 'Node', 'old', '=', 'map', '.', 'setNamedItem', '(', 'toNode', '(', 'args', '[', '0', ']', ')', ',', 'exception', ')', ';', 'return', 'getDOMNode', '(', 'exec', ',', 'old', '.', 'handle', '(', ')', ')', ';', '}', 'case', 'DOMNamedNodeMap', ':', ':', 'RemoveNamedItem', ':', '{', 'DOM', ':', ':', 'Attr', 'toRet', '=', 'map', '.', 'removeNamedItem', '(', 'args', '[', '0', ']', '->', 'toString', '(', 'exec', ')', '.', 'domString', '(', ')', ',', 'exception', ')', ';', 'return', 'getDOMNode', '(', 'exec', ',', 'toRet', '.', 'handle', '(', ')', ')', ';', '}', 'case', 'DOMNamedNodeMap', ':', ':', 'Item', ':', 'return', 'getDOMNode', '(', 'exec', ',', 'map', '.', 'item', '(', 'args', '[', '0', ']', '->', 'toInt32', '(', 'exec', ')', ')', ')', ';', 'case', 'DOMNamedNodeMap', ':', ':', 'GetNamedItemNS', ':', '{', '/', '/', 'DOM', ':', ':', 'Node', 'old', '=', 'map', '.', 'getNamedItemNS', '(', 'args', '[', '0', ']', '->', 'toString', '(', 'exec', ')', '.', 'domString', '(', ')', ',', 'args', '[', '1', ']', '->', 'toString', '(', 'exec', ')', '.', 'domString', '(', ')', ')', ';', 'return', 'getDOMNode', '(', 'exec', ',', 'old', '.', 'handle', '(', ')', ')', ';', '}', 'case', 'DOMNamedNodeMap', ':', ':', 'SetNamedItemNS', ':', '{', '/', '/', 'DOM', ':', ':', 'Node', 'old', '=', 'map', '.', 'setNamedItemNS', '(', 'toNode', '(', 'args', '[', '0', ']', ')', ',', 'exception', ')', ';', 'return', 'getDOMNode', '(', 'exec', ',', 'old', '.', 'handle', '(', ')', ')', ';', '}', 'case', 'DOMNamedNodeMap', ':', ':', 'RemoveNamedItemNS', ':', '{', '/', '/', 'DOM', ':', ':', 'Node', 'old', '=', 'map', '.', 'removeNamedItemNS', '(', 'args', '[', '0', ']', '->', 'toString', '(', 'exec', ')', '.', 'domString', '(', ')', ',', 'args', '[', '1', ']', '->', 'toString', '(', 'exec', ')', '.', 'domString', '(', ')', ',', 'exception', ')', ';', 'return', 'getDOMNode', '(', 'exec', ',', 'old', '.', 'handle', '(', ')', ')', ';', '}', 'default', ':', 'break', ';', '}', 'return', 'jsUndefined', '(', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
767,"['update_state', '(', ')', '{', 'for', '(', 'int', 'i', '=', '0', ',', 'ss', '=', 'sreg', ';', 'i', '<', '8', ';', 'i', '++', ',', 'ss', '>>=', '1', ')', 'm_Q', '[', 'i', ']', '->', 'putState', '(', 'ss', '&', '1', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
768,"['decl_instconns', '(', 'struct', 'mod_t', '*', 'mdp', ')', '{', 'register', 'struct', 'cell_t', '*', 'cp', ';', 'register', 'struct', 'cell_pin_t', '*', 'cpp', ';', 'for', '(', 'cp', '=', 'mdp', '->', 'mcells', ';', 'cp', '!=', 'NULL', ';', 'cp', '=', 'cp', '->', 'cnxt', ')', '{', 'if', '(', 'cp', '->', 'cmsym', '==', 'NULL', ')', 'continue', ';', 'for', '(', 'cpp', '=', 'cp', '->', 'cpins', ';', 'cpp', '!=', 'NULL', ';', 'cpp', '=', 'cpp', '->', 'cpnxt', ')', '{', 'if', '(', 'cpp', '->', 'cpxnd', '==', 'NULL', ')', '__misc_terr', '(', '__FILE__', ',', '__LINE__', ')', ';', 'dcl_iconn_wires', '(', 'cp', ',', 'cpp', '->', 'cpxnd', ')', ';', '}', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
769,"['read_config', '(', 'void', ')', '{', 'DIR', '*', 'conf_dir', ';', 'struct', 'dirent', '*', 'dent', ';', 'char', '*', 'path', ';', 'conf_dir', '=', 'opendir', '(', 'IBV_CONFIG_DIR', ')', ';', 'if', '(', '!conf_dir', ')', '{', 'fprintf', '(', 'stderr', ',', 'PFX', '""""', ',', 'IBV_CONFIG_DIR', ')', ';', 'return', ';', '}', 'while', '(', '(', 'dent', '=', 'readdir', '(', 'conf_dir', ')', ')', ')', '{', 'struct', 'stat', 'buf', ';', 'if', '(', 'asprintf', '(', '&', 'path', ',', '""""', ',', 'IBV_CONFIG_DIR', ',', 'dent', '->', 'd_name', ')', '<', '0', ')', '{', 'fprintf', '(', 'stderr', ',', 'PFX', '""""', ',', 'IBV_CONFIG_DIR', ',', 'dent', '->', 'd_name', ')', ';', 'goto', 'out', ';', '}', 'if', '(', 'stat', '(', 'path', ',', '&', 'buf', ')', ')', '{', 'fprintf', '(', 'stderr', ',', 'PFX', '""""', ',', 'path', ')', ';', 'goto', 'next', ';', '}', 'if', '(', '!S_ISREG', '(', 'buf', '.', 'st_mode', ')', ')', 'goto', 'next', ';', 'read_config_file', '(', 'path', ')', ';', 'next', ':', 'free', '(', 'path', ')', ';', '}', 'out', ':', 'closedir', '(', 'conf_dir', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
770,"['activate_back_or_forward_menu_item', '(', 'GtkMenuItem', '*', 'menu_item', ',', 'NemoWindow', '*', 'window', ',', 'gboolean', 'back', ')', '{', 'int', 'index', ';', 'g_assert', '(', 'GTK_IS_MENU_ITEM', '(', 'menu_item', ')', ')', ';', 'index', '=', 'GPOINTER_TO_INT', '(', 'g_object_get_data', '(', 'G_OBJECT', '(', 'menu_item', ')', ',', '""""', ')', ')', ';', 'nemo_window_back_or_forward', '(', 'window', ',', 'back', ',', 'index', ',', 'should_open_in_new_tab', '(', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
771,"['option_color_command', '(', 'int', 'argc', ',', 'const', 'char', '*', 'argv', '[', ']', ')', '{', 'struct', 'line_info', '*', 'info', ';', 'if', '(', 'argc', '!=', '3', '&&', 'argc', '!=', '4', ')', '{', 'config_msg', '=', '""""', ';', 'return', 'ERR', ';', '}', 'info', '=', 'get_line_info', '(', 'argv', '[', '0', ']', ')', ';', 'if', '(', '!info', ')', '{', 'if', '(', '!string_enum_compare', '(', 'argv', '[', '0', ']', ',', '""""', ',', 'strlen', '(', '""""', ')', ')', ')', '{', 'info', '=', 'get_line_info', '(', '""""', ')', ';', '}', 'else', 'if', '(', '!string_enum_compare', '(', 'argv', '[', '0', ']', ',', '""""', ',', 'strlen', '(', '""""', ')', ')', ')', '{', 'info', '=', 'get_line_info', '(', '""""', ')', ';', '}', 'else', 'if', '(', '!string_enum_compare', '(', 'argv', '[', '0', ']', ',', '""""', ',', 'strlen', '(', '""""', ')', ')', ')', '{', 'info', '=', 'get_line_info', '(', '""""', ')', ';', '}', 'else', '{', 'config_msg', '=', '""""', ';', 'return', 'ERR', ';', '}', '}', 'if', '(', 'set_color', '(', '&', 'info', '->', 'fg', ',', 'argv', '[', '1', ']', ')', '==', 'ERR', '||', 'set_color', '(', '&', 'info', '->', 'bg', ',', 'argv', '[', '2', ']', ')', '==', 'ERR', ')', '{', 'config_msg', '=', '""""', ';', 'return', 'ERR', ';', '}', 'if', '(', 'argc', '==', '4', '&&', 'set_attribute', '(', '&', 'info', '->', 'attr', ',', 'argv', '[', '3', ']', ')', '==', 'ERR', ')', '{', 'config_msg', '=', '""""', ';', 'return', 'ERR', ';', '}', 'return', 'OK', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
772,"['mono_metadata_generic_inst_hash', '(', 'gconstpointer', 'data', ')', '{', 'const', 'MonoGenericInst', '*', 'ginst', '=', '(', 'const', 'MonoGenericInst', '*', ')', 'data', ';', 'guint', 'hash', '=', '0', ';', 'int', 'i', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'ginst', '->', 'type_argc', ';', '++', 'i', ')', '{', 'hash', '*=', '13', ';', 'hash', '+=', 'mono_metadata_type_hash', '(', 'ginst', '->', 'type_argv', '[', 'i', ']', ')', ';', '}', 'return', 'hash', '^', '(', 'ginst', '->', 'is_open', '<<', '8', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
773,"['apcmaster_status', '(', 'StonithPlugin', '*', 's', ')', '{', 'struct', 'pluginDevice', '*', '\tms', ';', 'int\trc', ';', 'ERRIFNOTCONFIGED', '(', 's', ',', 'S_OOPS', ')', ';', 'ms', '=', '(', 'struct', 'pluginDevice', '*', ')', 's', ';', 'if', '(', '(', 'rc', '=', 'MSRobustLogin', '(', 'ms', ')', '!=', 'S_OK', ')', ')', '{', 'LOG', '(', 'PIL_CRIT', ',', '""""', ',', 'ms', '->', 'idinfo', ')', ';', 'return', '(', 'rc', ')', ';', '}', 'SEND', '(', 'ms', '->', 'wrfd', ',', '""""', ')', ';', 'EXPECT', '(', 'ms', '->', 'rdfd', ',', 'Prompt', ',', '5', ')', ';', 'return', '(', 'MSLogout', '(', 'ms', ')', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
774,"['tomoyo_write_domain2', '(', 'struct', 'tomoyo_policy_namespace', '*', 'ns', ',', 'struct', 'list_head', '*', 'list', ',', 'char', '*', 'data', ',', 'const', 'bool', 'is_delete', ')', '{', 'struct', 'tomoyo_acl_param', 'param', '=', '{', '.', 'ns', '=', 'ns', ',', '.', 'list', '=', 'list', ',', '.', 'data', '=', 'data', ',', '.', 'is_delete', '=', 'is_delete', ',', '}', ';', 'static', 'const', 'struct', '{', 'const', 'char', '*', 'keyword', ';', 'int', '(', '*', 'write', ')', '(', 'struct', 'tomoyo_acl_param', '*', ')', ';', '}', 'tomoyo_callback', '[', '5', ']', '=', '{', '{', '""""', ',', 'tomoyo_write_file', '}', ',', '{', '""""', ',', 'tomoyo_write_inet_network', '}', ',', '{', '""""', ',', 'tomoyo_write_unix_network', '}', ',', '{', '""""', ',', 'tomoyo_write_misc', '}', ',', '{', '""""', ',', 'tomoyo_write_task', '}', ',', '}', ';', 'u8', 'i', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'ARRAY_SIZE', '(', 'tomoyo_callback', ')', ';', 'i', '++', ')', '{', 'if', '(', '!tomoyo_str_starts', '(', '&', 'param', '.', 'data', ',', 'tomoyo_callback', '[', 'i', ']', '.', 'keyword', ')', ')', 'continue', ';', 'return', 'tomoyo_callback', '[', 'i', ']', '.', 'write', '(', '&', 'param', ')', ';', '}', 'return', '-', 'EINVAL', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
775,"['getChangedSuperScript', '(', 'bool', '*', 'pbSuperScript', ')', '{', 'if', '(', 'pbSuperScript', ')', '*', 'pbSuperScript', '=', 'm_bSuperScript', ';', 'return', 'm_bChangedSuperScript', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
776,"['get_hw_packet_type', '(', 'struct', 'io_buffer', '*', 'iob', ')', '{', 'struct', 'ieee80211_frame', '*', 'hdr', ';', 'enum', 'ath9k_pkt_type', 'htype', ';', 'u16', 'fc', ';', 'hdr', '=', '(', 'struct', 'ieee80211_frame', '*', ')', 'iob', '->', 'data', ';', 'fc', '=', 'hdr', '->', 'fc', ';', 'if', '(', '(', 'fc', '&', '(', 'IEEE80211_FC_TYPE', '|', 'IEEE80211_FC_SUBTYPE', ')', ')', '==', '(', 'IEEE80211_TYPE_MGMT', '|', 'IEEE80211_STYPE_BEACON', ')', ')', 'htype', '=', 'ATH9K_PKT_TYPE_BEACON', ';', 'else', 'if', '(', '(', 'fc', '&', '(', 'IEEE80211_FC_TYPE', '|', 'IEEE80211_FC_SUBTYPE', ')', ')', '==', '(', 'IEEE80211_TYPE_MGMT', '|', 'IEEE80211_STYPE_PROBE_RESP', ')', ')', 'htype', '=', 'ATH9K_PKT_TYPE_PROBE_RESP', ';', 'htype', '=', 'ATH9K_PKT_TYPE_NORMAL', ';', 'return', 'htype', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
777,"['vector_add_ncols_ns', '(', 'Vector', '*', 'v', ',', 'unsigned', 'int', 'n', ')', '{', 'unsigned', 'int', 'i', ';', 'NSData', 'tmpdata', ';', 'if', '(', '!v', ')', '{', 'if', '(', 'MATR_DEBUG_MODE', ')', '{', 'fprintf', '(', 'stderr', ',', '""""', ')', ';', '}', 'return', ';', '}', 'if', '(', 'n', '<=', '0', ')', '{', 'return', ';', '}', 'if', '(', 'v', '->', 'compact', ')', '{', 'if', '(', '!', '(', 'v', '->', 'was_mapped', ')', '||', '(', 'v', '->', 'was_mapped', '&&', '(', 'void', '*', ')', 'v', '+', 'sizeof', '(', 'Vector', ')', '!=', '(', 'void', '*', ')', '(', 'v', '->', 'data', '.', 'nsarray', '.', 'compact', ')', ')', ')', '{', 'v', '->', 'data', '.', 'nsarray', '.', 'compact', '=', '(', 'int', '*', ')', 'realloc', '(', 'v', '->', 'data', '.', 'nsarray', '.', 'compact', ',', 'sizeof', '(', 'int', ')', '*', '(', 'v', '->', 'dim', '+', 'n', ')', ')', ';', '}', 'else', '{', 'tmpdata', '.', 'compact', '=', 'v', '->', 'data', '.', 'nsarray', '.', 'compact', ';', 'v', '->', 'data', '.', 'nsarray', '.', 'compact', '=', '(', 'int', '*', ')', 'malloc', '(', 'sizeof', '(', 'int', ')', '*', '(', 'v', '->', 'dim', '+', 'n', ')', ')', ';', 'if', '(', 'v', '->', 'data', '.', 'nsarray', '.', 'compact', ')', '{', 'memcpy', '(', 'v', '->', 'data', '.', 'nsarray', '.', 'compact', ',', 'tmpdata', '.', 'compact', ',', 'sizeof', '(', 'int', ')', '*', 'v', '->', 'dim', ')', ';', '}', '}', 'if', '(', '!v', '->', 'data', '.', 'nsarray', '.', 'compact', ')', '{', 'if', '(', 'MATR_DEBUG_MODE', ')', '{', 'fprintf', '(', 'stderr', ',', '""""', ')', ';', '}', 'v', '->', 'dim', '=', '0', ';', 'v', '->', 'nz', '=', '0', ';', 'return', ';', '}', '}', 'else', '{', 'if', '(', '!', '(', 'v', '->', 'was_mapped', ')', '||', '(', 'v', '->', 'was_mapped', '&&', '(', 'void', '*', ')', 'v', '+', 'sizeof', '(', 'Vector', ')', '!=', '(', 'void', '*', ')', '(', 'v', '->', 'data', '.', 'nsarray', '.', 'precise', ')', ')', ')', '{', 'v', '->', 'data', '.', 'nsarray', '.', 'precise', '=', '(', 'double', '*', ')', 'realloc', '(', 'v', '->', 'data', '.', 'nsarray', '.', 'precise', ',', 'sizeof', '(', 'double', ')', '*', '(', 'v', '->', 'dim', '+', 'n', ')', ')', ';', '}', 'else', '{', 'tmpdata', '.', 'precise', '=', 'v', '->', 'data', '.', 'nsarray', '.', 'precise', ';', 'v', '->', 'data', '.', 'nsarray', '.', 'precise', '=', '(', 'double', '*', ')', 'malloc', '(', 'sizeof', '(', 'double', ')', '*', '(', 'v', '->', 'dim', '+', 'n', ')', ')', ';', 'if', '(', 'v', '->', 'data', '.', 'nsarray', '.', 'precise', ')', '{', 'memcpy', '(', 'v', '->', 'data', '.', 'nsarray', '.', 'precise', ',', 'tmpdata', '.', 'precise', ',', 'sizeof', '(', 'double', ')', '*', 'v', '->', 'dim', ')', ';', '}', '}', 'if', '(', '!v', '->', 'data', '.', 'nsarray', '.', 'precise', ')', '{', 'if', '(', 'MATR_DEBUG_MODE', ')', '{', 'fprintf', '(', 'stderr', ',', '""""', ')', ';', '}', 'v', '->', 'dim', '=', '0', ';', 'v', '->', 'nz', '=', '0', ';', 'return', ';', '}', '}', 'v', '->', 'dim', '+=', 'n', ';', 'for', '(', 'i', '=', 'v', '->', 'dim', '-', 'n', ';', 'i', '<', 'v', '->', 'dim', ';', 'i', '++', ')', '{', 'vector_set', '(', 'v', ',', 'i', ',', '0', ')', ';', '}', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
778,"['xsh_cube_trace_diff', '(', 'const', 'cpl_table', '*', 'table', ',', 'const', 'char', '*', 'col_comp', ',', 'const', 'char', '*', 'col_ref', ',', 'cpl_propertylist', '*', 'plist', ')', '{', 'char', 'key_name', '[', '25', ']', ';', 'double', 'cmp_c0', '=', '0', ';', 'double', 'ref_c0', '=', '0', ';', 'double', 'dif_c0', '=', '0', ';', 'double', 'cmp_c1', '=', '0', ';', 'double', 'ref_c1', '=', '0', ';', 'double', 'dif_c1', '=', '0', ';', 'double', 'cmp_c2', '=', '0', ';', 'double', 'ref_c2', '=', '0', ';', 'double', 'dif_c2', '=', '0', ';', 'const', 'double', '*', 'pw', '=', 'NULL', ';', 'double', 'wav', '=', '0', ';', 'double', 'cmp_pos', '=', '0', ';', 'double', 'ref_pos', '=', '0', ';', 'double', 'dif_pos', '=', '0', ';', 'sprintf', '(', 'key_name', ',', '""""', ',', 'XSH_QC_TRACE_FIT_C0', ',', 'col_comp', ')', ';', 'check', '(', 'cmp_c0', '=', 'cpl_propertylist_get_double', '(', 'plist', ',', 'key_name', ')', ')', ';', 'sprintf', '(', 'key_name', ',', '""""', ',', 'XSH_QC_TRACE_FIT_C1', ',', 'col_comp', ')', ';', 'cmp_c1', '=', 'cpl_propertylist_get_double', '(', 'plist', ',', 'key_name', ')', ';', 'sprintf', '(', 'key_name', ',', '""""', ',', 'XSH_QC_TRACE_FIT_C2', ',', 'col_comp', ')', ';', 'cmp_c2', '=', 'cpl_propertylist_get_double', '(', 'plist', ',', 'key_name', ')', ';', 'sprintf', '(', 'key_name', ',', '""""', ',', 'XSH_QC_TRACE_FIT_C0', ',', 'col_ref', ')', ';', 'ref_c0', '=', 'cpl_propertylist_get_double', '(', 'plist', ',', 'key_name', ')', ';', 'sprintf', '(', 'key_name', ',', '""""', ',', 'XSH_QC_TRACE_FIT_C1', ',', 'col_ref', ')', ';', 'ref_c1', '=', 'cpl_propertylist_get_double', '(', 'plist', ',', 'key_name', ')', ';', 'sprintf', '(', 'key_name', ',', '""""', ',', 'XSH_QC_TRACE_FIT_C2', ',', 'col_ref', ')', ';', 'ref_c2', '=', 'cpl_propertylist_get_double', '(', 'plist', ',', 'key_name', ')', ';', 'dif_c0', '=', 'cmp_c0', '-', 'ref_c0', ';', 'dif_c1', '=', 'cmp_c1', '-', 'ref_c1', ';', 'dif_c2', '=', 'cmp_c2', '-', 'ref_c2', ';', 'pw', '=', 'cpl_table_get_data_double_const', '(', 'table', ',', '""""', ')', ';', 'wav', '=', 'pw', '[', '0', ']', ';', 'cmp_pos', '=', 'cmp_c0', '+', 'cmp_c1', '*', 'wav', '+', 'cmp_c2', '*', 'wav', '*', 'wav', ';', 'ref_pos', '=', 'ref_c0', '+', 'ref_c1', '*', 'wav', '+', 'ref_c2', '*', 'wav', '*', 'wav', ';', 'dif_pos', '=', 'cmp_pos', '-', 'ref_pos', ';', 'cpl_propertylist_append_double', '(', 'plist', ',', 'XSH_QC_TRACE_FIT_DIFF_C0', ',', 'dif_c0', ')', ';', 'cpl_propertylist_set_comment', '(', 'plist', ',', 'XSH_QC_TRACE_FIT_DIFF_C0', ',', '""""', ')', ';', 'cpl_propertylist_append_double', '(', 'plist', ',', 'XSH_QC_TRACE_FIT_DIFF_C1', ',', 'dif_c1', ')', ';', 'cpl_propertylist_set_comment', '(', 'plist', ',', 'XSH_QC_TRACE_FIT_DIFF_C1', ',', '""""', ')', ';', 'cpl_propertylist_append_double', '(', 'plist', ',', 'XSH_QC_TRACE_FIT_DIFF_C1', ',', 'dif_c2', ')', ';', 'cpl_propertylist_set_comment', '(', 'plist', ',', 'key_name', ',', '""""', ')', ';', 'cpl_propertylist_append_double', '(', 'plist', ',', 'XSH_QC_TRACE_FIT_DIFF_POS', ',', 'dif_pos', ')', ';', 'cpl_propertylist_set_comment', '(', 'plist', ',', 'key_name', ',', '""""', ')', ';', 'cleanup', ':', 'return', 'cpl_error_get_code', '(', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
779,"['window_redraw_top', '(', 'Win', '*', 'win', ')', '{', 'Line', '*', 'line', '=', 'win', '->', 'cursor', '.', 'line', ';', 'for', '(', 'Line', '*', 'cur', '=', 'win', '->', 'topline', ';', 'cur', '&&', 'cur', '!=', 'line', ';', 'cur', '=', 'cur', '->', 'next', ')', 'win', '->', 'start', '+=', 'cur', '->', 'len', ';', 'window_draw', '(', 'win', ')', ';', 'window_cursor_to', '(', 'win', ',', 'win', '->', 'cursor', '.', 'pos', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
780,"['create_context', '(', ')', '{', 'struct', 'context\t', '*', 'new_context', ';', 'if', '(', '(', 'new_context', '=', '(', 'struct', 'context', '*', ')', 'malloc', '(', 'sizeof', '(', 'struct', 'context', ')', ')', ')', '==', 'NULL', ')', 'return', 'NULL', ';', 'new_context', '->', 'match_regex_str', '=', 'NULL', ';', 'new_context', '->', 'match_regex', '=', 'NULL', ';', 'new_context', '->', 'match_not_regex_str', '=', 'NULL', ';', 'new_context', '->', 'match_not_regex', '=', 'NULL', ';', 'new_context', '->', 'max_lines', '=', 'LONG_MAX', ';', 'new_context', '->', 'min_lines', '=', '0', ';', 'new_context', '->', 'timeout_abs', '=', 'LONG_MAX', ';', 'new_context', '->', 'timeout_rel', '=', 'LONG_MAX', ';', 'new_context', '->', 'timeout_rel_offset', '=', '0', ';', 'new_context', '->', 'action_type', '=', 'ACTION_UNKNOWN', ';', 'new_context', '->', 'action_tokens', '=', 'NULL', ';', 'new_context', '->', 'body', '=', 'NULL', ';', 'new_context', '->', 'lines', '=', '0', ';', 'new_context', '->', 'last', '=', 'NULL', ';', 'new_context', '->', 'next', '=', 'NULL', ';', 'new_context', '->', 'previous', '=', 'NULL', ';', 'return', '(', 'new_context', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
781,"['DecodeBaseAddSubImm', '(', 'llvm', ':', ':', 'MCInst', '&', 'Inst', ',', 'uint32_t', 'insn', ',', 'uint64_t', 'Addr', ',', 'const', 'void', '*', 'Decoder', ')', '{', 'unsigned', 'Rd', '=', 'fieldFromInstruction', '(', 'insn', ',', '0', ',', '5', ')', ';', 'unsigned', 'Rn', '=', 'fieldFromInstruction', '(', 'insn', ',', '5', ',', '5', ')', ';', 'unsigned', 'Imm', '=', 'fieldFromInstruction', '(', 'insn', ',', '10', ',', '14', ')', ';', 'unsigned', 'S', '=', 'fieldFromInstruction', '(', 'insn', ',', '29', ',', '1', ')', ';', 'unsigned', 'Datasize', '=', 'fieldFromInstruction', '(', 'insn', ',', '31', ',', '1', ')', ';', 'unsigned', 'ShifterVal', '=', '(', 'Imm', '>>', '12', ')', '&', '3', ';', 'unsigned', 'ImmVal', '=', 'Imm', '&', '0xFFF', ';', 'const', 'AArch64Disassembler', '*', 'Dis', '=', 'static_cast', '<', 'const', 'AArch64Disassembler', '*', '>', '(', 'Decoder', ')', ';', 'if', '(', 'ShifterVal', '!=', '0', '&&', 'ShifterVal', '!=', '1', ')', 'return', 'Fail', ';', 'if', '(', 'Datasize', ')', '{', 'if', '(', 'Rd', '==', '31', '&&', '!S', ')', 'DecodeGPR64spRegisterClass', '(', 'Inst', ',', 'Rd', ',', 'Addr', ',', 'Decoder', ')', ';', 'DecodeGPR64RegisterClass', '(', 'Inst', ',', 'Rd', ',', 'Addr', ',', 'Decoder', ')', ';', 'DecodeGPR64spRegisterClass', '(', 'Inst', ',', 'Rn', ',', 'Addr', ',', 'Decoder', ')', ';', '}', 'else', '{', 'if', '(', 'Rd', '==', '31', '&&', '!S', ')', 'DecodeGPR32spRegisterClass', '(', 'Inst', ',', 'Rd', ',', 'Addr', ',', 'Decoder', ')', ';', 'DecodeGPR32RegisterClass', '(', 'Inst', ',', 'Rd', ',', 'Addr', ',', 'Decoder', ')', ';', 'DecodeGPR32spRegisterClass', '(', 'Inst', ',', 'Rn', ',', 'Addr', ',', 'Decoder', ')', ';', '}', 'if', '(', '!Dis', '->', 'tryAddingSymbolicOperand', '(', 'Inst', ',', 'Imm', ',', 'Addr', ',', 'Fail', ',', '0', ',', '4', ')', ')', 'Inst', '.', 'addOperand', '(', 'MCOperand', ':', ':', 'createImm', '(', 'ImmVal', ')', ')', ';', 'Inst', '.', 'addOperand', '(', 'MCOperand', ':', ':', 'createImm', '(', '12', '*', 'ShifterVal', ')', ')', ';', 'return', 'Success', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
782,"['server_event_connect', '(', 'jack_client_t', '*', 'client', ',', 'const', 'char', '*', 'server_name', ')', '{', 'int', 'fd', ';', 'struct', 'sockaddr_un', 'addr', ';', 'jack_client_connect_ack_request_t', 'req', ';', 'jack_client_connect_ack_result_t', 'res', ';', 'char', 'server_dir', '[', 'PATH_MAX', '+', '1', ']', '=', '""""', ';', 'if', '(', '(', 'fd', '=', 'socket', '(', 'AF_UNIX', ',', 'SOCK_STREAM', ',', '0', ')', ')', '<', '0', ')', '{', 'jack_error', '(', '""""', ',', 'strerror', '(', 'errno', ')', ')', ';', 'return', '-', '1', ';', '}', 'addr', '.', 'sun_family', '=', 'AF_UNIX', ';', 'snprintf', '(', 'addr', '.', 'sun_path', ',', 'sizeof', '(', 'addr', '.', 'sun_path', ')', '-', '1', ',', '""""', ',', 'jack_server_dir', '(', 'server_name', ',', 'server_dir', ')', ')', ';', 'if', '(', 'connect', '(', 'fd', ',', '(', 'struct', 'sockaddr', '*', ')', '&', 'addr', ',', 'sizeof', '(', 'addr', ')', ')', '<', '0', ')', '{', 'jack_error', '(', '""""', ',', 'strerror', '(', 'errno', ')', ')', ';', 'close', '(', 'fd', ')', ';', 'return', '-', '1', ';', '}', 'req', '.', 'client_id', '=', 'client', '->', 'control', '->', 'id', ';', 'if', '(', 'write', '(', 'fd', ',', '&', 'req', ',', 'sizeof', '(', 'req', ')', ')', '!=', 'sizeof', '(', 'req', ')', ')', '{', 'jack_error', '(', '""""', ',', 'strerror', '(', 'errno', ')', ')', ';', 'close', '(', 'fd', ')', ';', 'return', '-', '1', ';', '}', 'if', '(', 'read', '(', 'fd', ',', '&', 'res', ',', 'sizeof', '(', 'res', ')', ')', '!=', 'sizeof', '(', 'res', ')', ')', '{', 'jack_error', '(', '""""', ',', 'strerror', '(', 'errno', ')', ')', ';', 'close', '(', 'fd', ')', ';', 'return', '-', '1', ';', '}', 'if', '(', 'res', '.', 'status', '!=', '0', ')', '{', 'jack_error', '(', '""""', ',', 'strerror', '(', 'errno', ')', ')', ';', 'close', '(', 'fd', ')', ';', 'return', '-', '1', ';', '}', 'return', 'fd', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
783,"['AssembleOutputConnectivity', '(', 'vtkIdType', 'timeStep', ',', 'int', 'otyp', ',', 'int', 'oidx', ',', 'int', 'conntypidx', ',', 'BlockSetInfoType', '*', 'bsinfop', ',', 'vtkUnstructuredGrid', '*', 'output', ')', '{', '/', '/', 'FIXME', ':', ""Don't"", 'think', 'I', 'need', 'this', ',', 'since', 'we', 'ShallowCopy', 'over', 'it', '.', '.', '.', 'right', '?', 'output', '->', 'Reset', '(', ')', ';', 'if', '(', 'bsinfop', '->', 'CachedConnectivity', ')', '{', 'output', '->', 'ShallowCopy', '(', 'bsinfop', '->', 'CachedConnectivity', ')', ';', 'return', '1', ';', '}', '/', '/', 'OK', ',', 'we', 'needed', 'to', 'remake', 'the', 'cache', '.', '.', '.', 'bsinfop', '->', 'CachedConnectivity', '=', 'vtkUnstructuredGrid', ':', ':', 'New', '(', ')', ';', 'bsinfop', '->', 'CachedConnectivity', '->', 'Allocate', '(', 'bsinfop', '->', 'Size', ')', ';', 'if', '(', 'this', '->', 'SqueezePoints', ')', '{', 'bsinfop', '->', 'NextSqueezePoint', '=', '0', ';', 'bsinfop', '->', 'PointMap', '.', 'clear', '(', ')', ';', 'bsinfop', '->', 'ReversePointMap', '.', 'clear', '(', ')', ';', '}', '/', '/', 'Need', 'to', 'assemble', 'connectivity', 'array', 'from', 'smaller', 'ones', '.', '/', '/', 'Call', 'GetCacheOrRead', '(', ')', 'for', 'each', 'smaller', '/', '/', 'Might', 'want', 'to', 'experiment', 'with', 'the', 'effectiveness', 'of', 'caching', 'connectivity', '.', '.', '.', '/', '/', 'set', 'up', 'the', 'ExodusIICache', 'class', 'with', 'the', 'ability', 'to', 'never', 'cache', '/', '/', 'key', 'types', '.', '/', '/', 'Might', 'also', 'want', 'to', 'experiment', 'with', 'policies', 'other', 'than', 'LRU', ',', '/', '/', 'applied', 'to', 'arrays', 'that', 'are', 'not', 'time', '-', 'varying', '.', 'During', 'animations', ',', '/', '/', 'will', 'most', 'likely', 'get', 'dropped', 'even', 'though', 'that', 'might', 'not', 'be', 'wise', '.', 'if', '(', 'CONNTYPE_IS_BLOCK', '(', 'conntypidx', ')', ')', '{', 'this', '->', 'InsertBlockCells', '(', 'otyp', ',', 'oidx', ',', 'conn_types', '[', 'conntypidx', ']', ',', 'timeStep', ',', 'static_cast', '<', 'BlockInfoType', '*', '>', '(', 'bsinfop', ')', ')', ';', '}', 'else', 'if', '(', 'CONNTYPE_IS_SET', '(', 'conntypidx', ')', ')', '{', 'this', '->', 'InsertSetCells', '(', 'otyp', ',', 'oidx', ',', 'conn_types', '[', 'conntypidx', ']', ',', 'timeStep', ',', 'static_cast', '<', 'SetInfoType', '*', '>', '(', 'bsinfop', ')', ')', ';', '}', '{', 'vtkErrorMacro', '(', '""""', ')', ';', '}', '/', '/', 'OK', ',', 'now', 'copy', 'our', 'cache', 'to', 'the', 'output', '.', '.', '.', 'output', '->', 'ShallowCopy', '(', 'bsinfop', '->', 'CachedConnectivity', ')', ';', '/', '/', 'this', '->', 'CachedConnectivity', '->', 'ShallowCopy', '(', 'output', ')', ';', 'if', '(', 'this', '->', 'SqueezePoints', ')', '{', 'vtkDebugMacro', '(', '<<', '""""', '<<', 'bsinfop', '->', 'NextSqueezePoint', '<<', '""""', ')', ';', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
784,"['mdio_sync', '(', 'void', '__iomem', '*', 'ioaddr', ')', '{', 'int', 'i', ';', 'for', '(', 'i', '=', '32', ';', 'i', '>=', '0', ';', 'i', '--', ')', '{', 'RTL_W8', '(', 'Config4', ',', 'MDIO_WRITE1', ')', ';', 'mdio_delay', '(', ')', ';', 'RTL_W8', '(', 'Config4', ',', 'MDIO_WRITE1', '|', 'MDIO_CLK', ')', ';', 'mdio_delay', '(', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
785,"['jabber_handle', '(', 'void', '*', 'data', ',', 'xmlnode_t', '*', 'n', ')', '{', 'session_t', '*', 's', '=', '(', 'session_t', '*', ')', 'data', ';', 'jabber_private_t', '*', 'j', ';', 'const', 'struct', 'jabber_generic_handler', '*', 'tmp', ';', 'if', '(', '!s', '||', '!', '(', 'j', '=', 's', '->', 'priv', ')', '||', '!n', ')', '{', 'debug_error', '(', '""""', ')', ';', 'return', ';', '}', 'for', '(', 'tmp', '=', 'jabber_handlers', ';', 'tmp', '->', 'name', ';', 'tmp', '++', ')', '{', 'if', '(', '!xstrcmp', '(', 'n', '->', 'name', ',', 'tmp', '->', 'name', ')', ')', '{', 'tmp', '->', 'handler', '(', 's', ',', 'n', ')', ';', 'return', ';', '}', '}', 'if', '(', '!j', '->', 'istlen', ')', '{', 'debug_error', '(', '""""', ',', 'n', '->', 'name', ')', ';', 'return', ';', '}', 'for', '(', 'tmp', '=', 'tlen_handlers', ';', 'tmp', '->', 'name', ';', 'tmp', '++', ')', '{', 'if', '(', '!xstrcmp', '(', 'n', '->', 'name', ',', 'tmp', '->', 'name', ')', ')', '{', 'tmp', '->', 'handler', '(', 's', ',', 'n', ')', ';', 'return', ';', '}', '}', 'debug_error', '(', '""""', ',', 'n', '->', 'name', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
786,"['crypto_dequeue_request', '(', 'struct', 'crypto_queue', '*', 'queue', ')', '{', 'struct', 'list_head', '*', 'request', ';', 'if', '(', 'unlikely', '(', '!queue', '->', 'qlen', ')', ')', 'return', 'NULL', ';', 'queue', '->', 'qlen', '--', ';', 'if', '(', 'queue', '->', 'backlog', '!=', '&', 'queue', '->', 'list', ')', 'queue', '->', 'backlog', '=', 'queue', '->', 'backlog', '->', 'next', ';', 'request', '=', 'queue', '->', 'list', '.', 'next', ';', 'list_del', '(', 'request', ')', ';', 'return', 'list_entry', '(', 'request', ',', 'struct', 'crypto_async_request', ',', 'list', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
787,"['snd_usbmidi_detect_endpoints', '(', 'struct', 'snd_usb_midi', '*', 'umidi', ',', 'struct', 'snd_usb_midi_endpoint_info', '*', 'endpoint', ',', 'int', 'max_endpoints', ')', '{', 'struct', 'usb_interface', '*', 'intf', ';', 'struct', 'usb_host_interface', '*', 'hostif', ';', 'struct', 'usb_interface_descriptor', '*', 'intfd', ';', 'struct', 'usb_endpoint_descriptor', '*', 'epd', ';', 'int', 'i', ',', 'out_eps', '=', '0', ',', 'in_eps', '=', '0', ';', 'if', '(', 'USB_ID_VENDOR', '(', 'umidi', '->', 'usb_id', ')', '==', '0x0582', ')', 'snd_usbmidi_switch_roland_altsetting', '(', 'umidi', ')', ';', 'if', '(', 'endpoint', '[', '0', ']', '.', 'out_ep', '||', 'endpoint', '[', '0', ']', '.', 'in_ep', ')', 'return', '0', ';', 'intf', '=', 'umidi', '->', 'iface', ';', 'if', '(', '!intf', '||', 'intf', '->', 'num_altsetting', '<', '1', ')', 'return', '-', 'ENOENT', ';', 'hostif', '=', 'intf', '->', 'cur_altsetting', ';', 'intfd', '=', 'get_iface_desc', '(', 'hostif', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'intfd', '->', 'bNumEndpoints', ';', '++', 'i', ')', '{', 'epd', '=', 'get_endpoint', '(', 'hostif', ',', 'i', ')', ';', 'if', '(', '!usb_endpoint_xfer_bulk', '(', 'epd', ')', '&&', '!usb_endpoint_xfer_int', '(', 'epd', ')', ')', 'continue', ';', 'if', '(', 'out_eps', '<', 'max_endpoints', '&&', 'usb_endpoint_dir_out', '(', 'epd', ')', ')', '{', 'endpoint', '[', 'out_eps', ']', '.', 'out_ep', '=', 'usb_endpoint_num', '(', 'epd', ')', ';', 'if', '(', 'usb_endpoint_xfer_int', '(', 'epd', ')', ')', 'endpoint', '[', 'out_eps', ']', '.', 'out_interval', '=', 'epd', '->', 'bInterval', ';', '++', 'out_eps', ';', '}', 'if', '(', 'in_eps', '<', 'max_endpoints', '&&', 'usb_endpoint_dir_in', '(', 'epd', ')', ')', '{', 'endpoint', '[', 'in_eps', ']', '.', 'in_ep', '=', 'usb_endpoint_num', '(', 'epd', ')', ';', 'if', '(', 'usb_endpoint_xfer_int', '(', 'epd', ')', ')', 'endpoint', '[', 'in_eps', ']', '.', 'in_interval', '=', 'epd', '->', 'bInterval', ';', '++', 'in_eps', ';', '}', '}', 'return', '(', 'out_eps', '||', 'in_eps', ')', '?', '0', ':', '-', 'ENOENT', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
788,"['priestname', '(', 'mon', ',', 'pname', ')', 'register', 'struct', 'monst', '*', 'mon', ';', '{', 'const', 'char', '*', 'what', '=', 'Hallucination', '?', 'rndmonnam', '(', ')', ':', 'mon', '->', 'data', '->', 'mname', ';', 'Strcpy', '(', 'pname', ',', '""""', ')', ';', 'if', '(', 'mon', '->', 'minvis', ')', 'Strcat', '(', 'pname', ',', '""""', ')', ';', 'if', '(', 'mon', '->', 'ispriest', '||', 'mon', '->', 'data', '==', '&', 'mons', '[', 'PM_ALIGNED_PRIEST', ']', '||', 'mon', '->', 'data', '==', '&', 'mons', '[', 'PM_ANGEL', ']', ')', '{', 'if', '(', 'mon', '->', 'mtame', '&&', 'mon', '->', 'data', '==', '&', 'mons', '[', 'PM_ANGEL', ']', ')', 'Strcat', '(', 'pname', ',', '""""', ')', ';', 'if', '(', 'mon', '->', 'data', '!=', '&', 'mons', '[', 'PM_ALIGNED_PRIEST', ']', '&&', 'mon', '->', 'data', '!=', '&', 'mons', '[', 'PM_HIGH_PRIEST', ']', ')', '{', 'Strcat', '(', 'pname', ',', 'what', ')', ';', 'Strcat', '(', 'pname', ',', '""""', ')', ';', '}', 'if', '(', 'mon', '->', 'data', '!=', '&', 'mons', '[', 'PM_ANGEL', ']', ')', '{', 'if', '(', '!mon', '->', 'ispriest', '&&', 'EPRI', '(', 'mon', ')', '->', 'renegade', ')', 'Strcat', '(', 'pname', ',', '""""', ')', ';', 'if', '(', 'mon', '->', 'data', '==', '&', 'mons', '[', 'PM_HIGH_PRIEST', ']', ')', 'Strcat', '(', 'pname', ',', '""""', ')', ';', 'if', '(', 'Hallucination', ')', 'Strcat', '(', 'pname', ',', '""""', ')', ';', 'else', 'if', '(', 'mon', '->', 'female', ')', 'Strcat', '(', 'pname', ',', '""""', ')', ';', 'Strcat', '(', 'pname', ',', '""""', ')', ';', '}', 'Strcat', '(', 'pname', ',', '""""', ')', ';', 'Strcat', '(', 'pname', ',', 'halu_gname', '(', '(', 'int', ')', 'EPRI', '(', 'mon', ')', '->', 'shralign', ')', ')', ';', 'return', '(', 'pname', ')', ';', '}', 'Strcat', '(', 'pname', ',', 'what', ')', ';', 'Strcat', '(', 'pname', ',', '""""', ')', ';', 'Strcat', '(', 'pname', ',', 'halu_gname', '(', 'EMIN', '(', 'mon', ')', '->', 'min_align', ')', ')', ';', 'return', '(', 'pname', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
789,"['__pyx_pf_7sklearn_12linear_model_8sgd_fast_5Huber___init__', '(', 'PyObject', '*', '__pyx_v_self', ',', 'PyObject', '*', '__pyx_args', ',', 'PyObject', '*', '__pyx_kwds', ')', '{', 'PyObject', '*', '__pyx_v_c', '=', '0', ';', 'int', '__pyx_r', ';', 'double', '__pyx_t_1', ';', 'static', 'PyObject', '*', '*', '__pyx_pyargnames', '[', ']', '=', '{', '&', '__pyx_n_s__c', ',', '0', '}', ';', '__Pyx_RefNannySetupContext', '(', '""""', ')', ';', 'if', '(', 'unlikely', '(', '__pyx_kwds', ')', ')', '{', 'Py_ssize_t', 'kw_args', '=', 'PyDict_Size', '(', '__pyx_kwds', ')', ';', 'PyObject', '*', 'values', '[', '1', ']', '=', '{', '0', '}', ';', 'switch', '(', 'PyTuple_GET_SIZE', '(', '__pyx_args', ')', ')', '{', 'case', '1', ':', 'values', '[', '0', ']', '=', 'PyTuple_GET_ITEM', '(', '__pyx_args', ',', '0', ')', ';', 'case', '0', ':', 'break', ';', 'default', ':', 'goto', '__pyx_L5_argtuple_error', ';', '}', 'switch', '(', 'PyTuple_GET_SIZE', '(', '__pyx_args', ')', ')', '{', 'case', '0', ':', 'values', '[', '0', ']', '=', 'PyDict_GetItem', '(', '__pyx_kwds', ',', '__pyx_n_s__c', ')', ';', 'if', '(', 'likely', '(', 'values', '[', '0', ']', ')', ')', 'kw_args', '--', ';', 'else', 'goto', '__pyx_L5_argtuple_error', ';', '}', 'if', '(', 'unlikely', '(', 'kw_args', '>', '0', ')', ')', '{', 'if', '(', 'unlikely', '(', '__Pyx_ParseOptionalKeywords', '(', '__pyx_kwds', ',', '__pyx_pyargnames', ',', '0', ',', 'values', ',', 'PyTuple_GET_SIZE', '(', '__pyx_args', ')', ',', '""""', ')', '<', '0', ')', ')', '{', '__pyx_filename', '=', '__pyx_f', '[', '0', ']', ';', '__pyx_lineno', '=', '183', ';', '__pyx_clineno', '=', '__LINE__', ';', 'goto', '__pyx_L3_error', ';', '}', '}', '__pyx_v_c', '=', 'values', '[', '0', ']', ';', '}', 'else', 'if', '(', 'PyTuple_GET_SIZE', '(', '__pyx_args', ')', '!=', '1', ')', '{', 'goto', '__pyx_L5_argtuple_error', ';', '}', 'else', '{', '__pyx_v_c', '=', 'PyTuple_GET_ITEM', '(', '__pyx_args', ',', '0', ')', ';', '}', 'goto', '__pyx_L4_argument_unpacking_done', ';', '__pyx_L5_argtuple_error', ':', ';', '__Pyx_RaiseArgtupleInvalid', '(', '""""', ',', '1', ',', '1', ',', '1', ',', 'PyTuple_GET_SIZE', '(', '__pyx_args', ')', ')', ';', '{', '__pyx_filename', '=', '__pyx_f', '[', '0', ']', ';', '__pyx_lineno', '=', '183', ';', '__pyx_clineno', '=', '__LINE__', ';', 'goto', '__pyx_L3_error', ';', '}', '__pyx_L3_error', ':', ';', '__Pyx_AddTraceback', '(', '""""', ')', ';', 'return', '-', '1', ';', '__pyx_L4_argument_unpacking_done', ':', ';', '/', '*', '""""', ':', '*', '*', 'def', '__init__', '(', 'self', ',', 'c', ')', ':', '*', 'self', '.', 'c', '=', 'c', '#', '<<', '<<', '<<', '<<', '<<', '<<', '<<', '*', '*', 'cpdef', 'double', 'loss', '(', 'self', ',', 'double', 'p', ',', 'double', 'y', ')', ':', '__pyx_t_1', '=', '__pyx_PyFloat_AsDouble', '(', '__pyx_v_c', ')', ';', 'if', '(', 'unlikely', '(', '(', '__pyx_t_1', '==', '(', 'double', ')', '-', '1', ')', '&&', 'PyErr_Occurred', '(', ')', ')', ')', '{', '__pyx_filename', '=', '__pyx_f', '[', '0', ']', ';', '__pyx_lineno', '=', '184', ';', '__pyx_clineno', '=', '__LINE__', ';', 'goto', '__pyx_L1_error', ';', '}', '(', '(', 'struct', '__pyx_obj_7sklearn_12linear_model_8sgd_fast_Huber', '*', ')', '__pyx_v_self', ')', '->', 'c', '=', '__pyx_t_1', ';', '__pyx_r', '=', '0', ';', 'goto', '__pyx_L0', ';', '__pyx_L1_error', ':', ';', '__Pyx_AddTraceback', '(', '""""', ')', ';', '__pyx_r', '=', '-', '1', ';', '__pyx_L0', ':', ';', '__Pyx_RefNannyFinishContext', '(', ')', ';', 'return', '__pyx_r', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
790,"['match_job', '(', 'lList', '*', '*', 'job_list', ',', 'lList', '*', 'owner_list', ',', 'lList', '*', 'queue_list', ',', 'lList', '*', 'complex_list', ',', 'lList', '*', 'exec_host_list', ',', 'lList', '*', ')', '{', 'lListElem', '*', 'jep', ';', 'lListElem', '*', 'dep', ';', 'lListElem', '*', 'jatep', ';', 'int', 'show', ';', 'DENTER', '(', 'GUI_LAYER', ',', '""""', ')', ';', 'jep', '=', 'lFirst', '(', '*', 'job_list', ')', ';', 'while', '(', 'jep', ')', '{', '/', '*', '*', '*', 'first', 'of', 'all', 'we', 'assume', 'that', 'the', 'job', 'should', 'be', 'show', '=', '1', ';', '/', '*', '*', '*', 'all', 'tasks', 'are', 'for_each', '(', 'jatep', ',', 'lGetList', '(', 'jep', ',', 'JB_ja_tasks', ')', ')', '{', 'lSetUlong', '(', 'jatep', ',', 'JAT_suitable', ',', 'TAG_SHOW_IT', ')', ';', '}', '/', '*', '*', '*', 'check', 'if', 'job', 'fulfills', 'user_list', 'and', 'set', 'show', 'if', '(', 'show', '&&', 'owner_list', ')', 'show', '=', 'is_owner_ok', '(', 'jep', ',', 'owner_list', ')', ';', '/', '*', '*', '*', 'is', 'job', 'runnable', 'on', 'queues', 'fulfilling', 'requests', ',', 'if', '(', 'show', '&&', 'request_list', ')', '{', 'show', '=', 'is_job_runnable_on_queues', '(', 'jep', ',', 'queue_list', ',', 'exec_host_list', ',', 'complex_list', ',', 'request_list', ')', ';', '}', 'if', '(', 'show', ')', '{', 'jep', '=', 'lNext', '(', 'jep', ')', ';', '}', 'else', '{', 'dep', '=', 'jep', ';', 'jep', '=', 'lNext', '(', 'jep', ')', ';', 'lRemoveElem', '(', '*', 'job_list', ',', '&', 'dep', ')', ';', '}', '}', 'if', '(', 'lGetNumberOfElem', '(', '*', 'job_list', ')', '==', '0', ')', '{', 'lFreeList', '(', 'job_list', ')', ';', '}', 'DEXIT', ';', 'return', 'True', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
791,"['shutdown_task', '(', 'void', '*', 'cls', ',', 'const', 'struct', 'GNUNET_SCHEDULER_TaskContext', '*', 'tc', ')', '{', 'struct', 'GNUNET_SERVICE_Context', '*', 'service', '=', 'cls', ';', 'struct', 'GNUNET_SERVER_Handle', '*', 'server', '=', 'service', '->', 'server', ';', 'service', '->', 'shutdown_task', '=', 'GNUNET_SCHEDULER_NO_TASK', ';', 'if', '(', '0', '!=', '(', 'service', '->', 'options', '&', 'GNUNET_SERVICE_OPTION_SOFT_SHUTDOWN', ')', ')', 'GNUNET_SERVER_stop_listening', '(', 'server', ')', ';', 'GNUNET_SERVER_destroy', '(', 'server', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
792,"['mail_config_security_page_cert_selected', '(', 'ECertSelector', '*', 'selector', ',', 'const', 'gchar', '*', 'key', ',', 'GtkEntry', '*', 'entry', ')', '{', 'if', '(', 'key', '!=', 'NULL', ')', 'gtk_entry_set_text', '(', 'entry', ',', 'key', ')', ';', 'gtk_widget_destroy', '(', 'GTK_WIDGET', '(', 'selector', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
793,"['add_node', '(', 'struct', 'ubifs_info', '*', 'c', ',', 'void', '*', 'buf', ',', 'int', '*', 'lnum', ',', 'int', '*', 'offs', ',', 'void', '*', 'node', ')', '{', 'struct', 'ubifs_ch', '*', 'ch', '=', 'node', ';', 'int', 'len', '=', 'le32_to_cpu', '(', 'ch', '->', 'len', ')', ',', 'remains', '=', 'c', '->', 'leb_size', '-', '*', 'offs', ';', 'if', '(', 'len', '>', 'remains', ')', '{', 'int', 'sz', '=', 'ALIGN', '(', '*', 'offs', ',', 'c', '->', 'min_io_size', ')', ',', 'err', ';', 'ubifs_pad', '(', 'c', ',', 'buf', '+', '*', 'offs', ',', 'sz', '-', '*', 'offs', ')', ';', 'err', '=', 'ubifs_leb_change', '(', 'c', ',', '*', 'lnum', ',', 'buf', ',', 'sz', ')', ';', 'if', '(', 'err', ')', 'return', 'err', ';', '*', 'lnum', '=', 'ubifs_next_log_lnum', '(', 'c', ',', '*', 'lnum', ')', ';', '*', 'offs', '=', '0', ';', '}', 'memcpy', '(', 'buf', '+', '*', 'offs', ',', 'node', ',', 'len', ')', ';', '*', 'offs', '+=', 'ALIGN', '(', 'len', ',', '8', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
794,"['ReadLine', '(', 'unsigned', 'int', 'line_number', ',', 'char', '*', 'buf', ',', 'unsigned', 'int', 'nBytes', ')', '{', 'if', '(', '!fptr', ')', 'return', '0', ';', 'fseek', '(', 'fptr', ',', 'line_seek', '[', 'line_number', ']', ',', 'SEEK_SET', ')', ';', 'return', 'fgets', '(', 'buf', ',', 'nBytes', ',', 'fptr', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
795,"['drawHSeparator', '(', 'Window', 'window_', ',', 'int', 'x_', ',', 'int', 'y_', ',', 'int', 'width_', ',', 'int', 'height_', ')', '{', 'if', '(', 'height_', '>', '1', ')', '{', 'int', 'halfHeight', '=', 'height_', '/', '2', ';', 'XBFillRectangle', '(', 'display', '(', ')', ',', 'window_', ',', 'bottomShadowGC', '(', ')', ',', 'x_', ',', 'y_', ',', 'width_', ',', 'halfHeight', ')', ';', 'XFillRectangle', '(', 'display', '(', ')', ',', 'window_', ',', 'topShadowGC', '(', ')', ',', 'x_', ',', 'y_', '+', 'halfHeight', ',', 'width_', ',', 'halfHeight', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
796,"['linespec', '(', 'unsigned', 'lineIndex', ',', 'LineSpecInput', 'lineSpec', ')', '{', '/', '/', '*', 'Store', 'but', 'no', 'if', '(', 'lineIndex', '<=', '0', ')', '{', 'throw', 'out_of_range', '(', '""""', ')', ';', '}', 'this', '->', 'lineSpecInput', '.', 'push_back', '(', '{', 'lineIndex', ',', 'lineSpec', '}', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
797,"['GB_Error', '(', 'const', 'char', '*', 'error', ',', '.', '.', '.', ')', '{', 'va_list', 'args', ';', 'char', '*', 'arg', '[', '4', ']', ';', 'int', 'i', ';', 'if', '(', '!error', ')', '{', 'EXEC_set_native_error', '(', 'FALSE', ')', ';', 'return', ';', '}', 'va_start', '(', 'args', ',', 'error', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', '4', ';', 'i', '++', ')', 'arg', '[', 'i', ']', '=', 'va_arg', '(', 'args', ',', 'char', '*', ')', ';', 'ERROR_define', '(', 'error', ',', 'arg', ')', ';', 'EXEC_set_native_error', '(', 'TRUE', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
798,"['get_mortalspace', '(', 'LONGLONG', 'n', ',', 'int', 'datatype', ')', '{', 'LONGLONG', 'datalen', ';', 'SV', '*', 'work', ';', 'work', '=', 'sv_2mortal', '(', 'newSVpv', '(', '""""', ',', '0', ')', ')', ';', 'datalen', '=', 'sizeof_datatype', '(', 'datatype', ')', '*', 'n', ';', 'SvGROW', '(', 'work', ',', 'datalen', ')', ';', '/', '*', '*', 'One', 'could', 'imagine', 'allocating', 'some', 'space', 'with', 'this', 'routine', ',', '*', 'passing', 'the', 'pointer', 'off', 'to', 'cfitsio', ',', 'ending', 'up', 'with', 'an', '*', 'and', 'then', 'having', 'xsubpp', 'set', 'the', 'output', 'SV', 'to', 'the', '*', 'of', 'memory', 'pointed', 'to', 'by', 'this', 'said', 'pointer', ',', 'which', 'may', '*', 'may', 'not', 'have', 'a', 'NUL', 'in', 'its', 'random', 'contents', '.', 'if', '(', 'datalen', ')', '*', '(', '(', 'char', '*', ')', 'SvPV', '(', 'work', ',', 'PL_na', ')', ')', '=', ""''"", ';', 'return', '(', 'void', '*', ')', 'SvPV', '(', 'work', ',', 'PL_na', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
799,"['graphics_drawinfo_setsprite', '(', 'Graphics_drawinfo', '*', 'gd', ',', 'SDL_Surface', '*', 'sprite', ')', '{', 'if', '(', 'sprite', '==', 'gd', '->', 'sprite', ')', '{', 'gd', '->', 'flags', '&=', '~', '(', 'Graphics_SPRITECHANGED', ')', ';', '}', 'else', '{', 'gd', '->', 'flags', '|=', 'Graphics_SPRITECHANGED', ';', '}', 'gd', '->', 'sprite', '=', 'sprite', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
800,"['process_pmgr_scatter', '(', 'mvapich_state_t', '*', 'st', ',', 'int', '*', 'rootp', ',', 'int', '*', 'sizep', ',', 'void', '*', '*', 'bufp', ',', 'int', 'rank', ')', '{', 'if', '(', 'recv_common_value', '(', 'st', ',', 'rootp', ',', 'rank', ')', '<', '0', ')', 'return', '(', '-', '1', ')', ';', 'if', '(', 'recv_common_value', '(', 'st', ',', 'sizep', ',', 'rank', ')', '<', '0', ')', 'return', '(', '-', '1', ')', ';', 'if', '(', 'rank', '!=', '*', 'rootp', ')', 'return', '(', '0', ')', ';', 'if', '(', '*', 'bufp', '==', 'NULL', ')', '*', 'bufp', '=', 'xmalloc', '(', '*', 'sizep', '*', 'st', '->', 'nprocs', ')', ';', 'mvapich_debug3', '(', '""""', ',', 'rank', ')', ';', 'if', '(', 'mvapich_recv', '(', 'st', ',', '*', 'bufp', ',', '(', '*', 'sizep', ')', '*', 'st', '->', 'nprocs', ',', 'rank', ')', '<', '0', ')', '{', 'error', '(', '""""', ',', 'rank', ')', ';', 'return', '(', '-', '1', ')', ';', '}', 'return', '(', '0', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
801,"['btrfs_bio_counter_sub', '(', 'struct', 'btrfs_fs_info', '*', 'fs_info', ',', 's64', 'amount', ')', '{', 'percpu_counter_sub', '(', '&', 'fs_info', '->', 'bio_counter', ',', 'amount', ')', ';', 'if', '(', 'waitqueue_active', '(', '&', 'fs_info', '->', 'replace_wait', ')', ')', 'wake_up', '(', '&', 'fs_info', '->', 'replace_wait', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
802,"['GetOffersFor', '(', 'PluginType', 'type', ')', '{', 'PluginsArray', 'arr', ';', '/', '/', 'special', 'case', 'for', 'MIME', '/', '/', 'we', ""'ll"", 'add', 'the', 'default', 'MIME', 'handler', ',', 'last', 'in', 'the', 'returned', 'cbPlugin', '*', 'dflt', '=', 'nullptr', ';', 'for', '(', 'unsigned', 'int', 'i', '=', '0', ';', 'i', '<', 'm_Plugins', '.', 'GetCount', '(', ')', ';', '++', 'i', ')', '{', 'cbPlugin', '*', 'plug', '=', 'm_Plugins', '[', 'i', ']', '->', 'plugin', ';', 'if', '(', 'plug', '&&', 'plug', '->', 'IsAttached', '(', ')', '&&', 'plug', '->', 'GetType', '(', ')', '==', 'type', ')', '{', 'if', '(', 'type', '==', 'ptMime', ')', '{', '/', '/', 'default', 'MIME', 'handler', '?', 'if', '(', '(', '(', 'cbMimePlugin', '*', ')', 'plug', ')', '->', 'HandlesEverything', '(', ')', ')', 'dflt', '=', 'plug', ';', 'arr', '.', 'Add', '(', 'plug', ')', ';', '}', 'arr', '.', 'Add', '(', 'plug', ')', ';', '}', '}', '/', '/', 'add', 'default', 'MIME', 'handler', 'if', '(', 'dflt', ')', 'arr', '.', 'Add', '(', 'dflt', ')', ';', 'return', 'arr', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
803,"['nxt_stop_sound', '(', 'nxt_t', '*', 'nxt', ')', '{', 'nxt_pack_start', '(', 'nxt', ',', '0x0C', ')', ';', 'test', '(', 'nxt_con_send', '(', 'nxt', ')', ')', ';', 'test', '(', 'nxt_con_recv', '(', 'nxt', ',', '3', ')', ')', ';', 'test', '(', 'nxt_unpack_start', '(', 'nxt', ',', '0x0C', ')', ')', ';', 'return', 'nxt_unpack_error', '(', 'nxt', ')', '==', '0', '?', 'NXT_SUCC', ':', 'NXT_FAIL', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
804,"['utf8_len', '(', 'char', '*', 's', ')', '{', 'int', 'l', '=', '0', ';', 'while', '(', '*', 's', ')', 'if', '(', '(', '*', 's', '++', '&', '0xc0', ')', '!=', '0x80', ')', 'l', '++', ';', 'return', 'l', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
805,"['r_realloc', '(', 'void', '*', 'dp', ',', 'size_t', 'size', ')', '{', 'void', '*', 'result', ';', 'if', '(', 'size', '>', 'BIG', ')', '{', 'errno', '=', 'EINVAL', ';', 'return', '0', ';', '}', 'errno', '=', '0', ';', 'result', '=', 'realloc', '(', 'dp', ',', '(', 'unsigned', 'int', ')', 'size', ')', ';', 'if', '(', '!result', '&&', '!errno', ')', 'errno', '=', 'ENOMEM', ';', 'return', 'result', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
806,"['copystr', '(', 's', ')', 'const', 'char\t', '*', 's', ';', '{', 'char\t', '*', 'str', ';', 'str', '=', 'malloc', '(', '(', 'size_t', ')', '(', 'strlen', '(', 's', ')', '+', '1', ')', ')', ';', 'if', '(', 'str', '==', 'NULL', ')', '{', 'fprintf', '(', 'stderr', ',', '""""', ')', ';', 'exit', '(', '-', '1', ')', ';', '}', 'strcpy', '(', 'str', ',', 's', ')', ';', 'return', 'str', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
807,"['rtl8139_set_mac_address', '(', 'struct', 'net_device', '*', 'dev', ',', 'void', '*', 'p', ')', '{', 'struct', 'rtl8139_private', '*', 'tp', '=', 'netdev_priv', '(', 'dev', ')', ';', 'void', '__iomem', '*', 'ioaddr', '=', 'tp', '->', 'mmio_addr', ';', 'struct', 'sockaddr', '*', 'addr', '=', 'p', ';', 'if', '(', '!is_valid_ether_addr', '(', 'addr', '->', 'sa_data', ')', ')', 'return', '-', 'EADDRNOTAVAIL', ';', 'memcpy', '(', 'dev', '->', 'dev_addr', ',', 'addr', '->', 'sa_data', ',', 'dev', '->', 'addr_len', ')', ';', 'spin_lock_irq', '(', '&', 'tp', '->', 'lock', ')', ';', 'RTL_W8_F', '(', 'Cfg9346', ',', 'Cfg9346_Unlock', ')', ';', 'RTL_W32_F', '(', 'MAC0', '+', '0', ',', 'cpu_to_le32', '(', '*', '(', 'u32', '*', ')', '(', 'dev', '->', 'dev_addr', '+', '0', ')', ')', ')', ';', 'RTL_W32_F', '(', 'MAC0', '+', '4', ',', 'cpu_to_le32', '(', '*', '(', 'u32', '*', ')', '(', 'dev', '->', 'dev_addr', '+', '4', ')', ')', ')', ';', 'RTL_W8_F', '(', 'Cfg9346', ',', 'Cfg9346_Lock', ')', ';', 'spin_unlock_irq', '(', '&', 'tp', '->', 'lock', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
808,"['drawText', '(', 'const', 'FbDrawable', '&', 'w', ',', 'int', 'screen', ',', 'GC', 'gc', ',', 'const', 'char', '*', 'text', ',', 'size_t', 'len', ',', 'int', 'x', ',', 'int', 'y', ',', 'Orientation', 'orient', ')', 'const', '{', 'if', '(', '!text', '||', '!', '*', 'text', '||', 'len', '==', '0', ')', 'return', ';', '/', '/', 'draw', '""""', 'if', '(', 'm_shadow', ')', '{', 'FbTk', ':', ':', 'GContext', 'shadow_gc', '(', 'w', ')', ';', 'shadow_gc', '.', 'setForeground', '(', 'm_shadow_color', ')', ';', 'm_fontimp', '->', 'drawText', '(', 'w', ',', 'screen', ',', 'shadow_gc', '.', 'gc', '(', ')', ',', 'text', ',', 'len', ',', 'x', '+', 'm_shadow_offx', ',', 'y', '+', 'm_shadow_offy', ',', 'orient', ')', ';', '}', 'else', 'if', '(', 'm_halo', ')', '{', 'FbTk', ':', ':', 'GContext', 'halo_gc', '(', 'w', ')', ';', 'halo_gc', '.', 'setForeground', '(', 'm_halo_color', ')', ';', 'm_fontimp', '->', 'drawText', '(', 'w', ',', 'screen', ',', 'halo_gc', '.', 'gc', '(', ')', ',', 'text', ',', 'len', ',', 'x', '+', '1', ',', 'y', '+', '1', ',', 'orient', ')', ';', 'm_fontimp', '->', 'drawText', '(', 'w', ',', 'screen', ',', 'halo_gc', '.', 'gc', '(', ')', ',', 'text', ',', 'len', ',', 'x', '-', '1', ',', 'y', '+', '1', ',', 'orient', ')', ';', 'm_fontimp', '->', 'drawText', '(', 'w', ',', 'screen', ',', 'halo_gc', '.', 'gc', '(', ')', ',', 'text', ',', 'len', ',', 'x', '-', '1', ',', 'y', '-', '1', ',', 'orient', ')', ';', 'm_fontimp', '->', 'drawText', '(', 'w', ',', 'screen', ',', 'halo_gc', '.', 'gc', '(', ')', ',', 'text', ',', 'len', ',', 'x', '+', '1', ',', 'y', '-', '1', ',', 'orient', ')', ';', '}', 'm_fontimp', '->', 'drawText', '(', 'w', ',', 'screen', ',', 'gc', ',', 'text', ',', 'len', ',', 'x', ',', 'y', ',', 'orient', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
809,"['process_line', '(', 'char', '*', 'line', ',', 'gpointer', 'data', ')', '{', 'FileData', '*', 'fdata', ';', 'FrCommand', '*', 'comm', '=', 'FR_COMMAND', '(', 'data', ')', ';', 'char', '*', '*', 'fields', ';', 'int', 'date_idx', ';', 'char', '*', 'field_month', ',', '*', 'field_day', ',', '*', 'field_time', ',', '*', 'field_year', ';', 'char', '*', 'field_size', ',', '*', 'field_name', ';', 'g_return_if_fail', '(', 'line', '!=', 'NULL', ')', ';', 'fdata', '=', 'file_data_new', '(', ')', ';', 'date_idx', '=', '_g_line_get_index_from_pattern', '(', 'line', ',', '""""', ')', ';', 'field_size', '=', '_g_line_get_prev_field', '(', 'line', ',', 'date_idx', ',', '1', ')', ';', 'fdata', '->', 'size', '=', 'g_ascii_strtoull', '(', 'field_size', ',', 'NULL', ',', '10', ')', ';', 'g_free', '(', 'field_size', ')', ';', 'field_month', '=', '_g_line_get_next_field', '(', 'line', ',', 'date_idx', ',', '1', ')', ';', 'field_day', '=', '_g_line_get_next_field', '(', 'line', ',', 'date_idx', ',', '2', ')', ';', 'field_time', '=', '_g_line_get_next_field', '(', 'line', ',', 'date_idx', ',', '3', ')', ';', 'field_year', '=', '_g_line_get_next_field', '(', 'line', ',', 'date_idx', ',', '4', ')', ';', 'fdata', '->', 'modified', '=', 'mktime_from_string', '(', 'field_time', ',', 'field_day', ',', 'field_month', ',', 'field_year', ')', ';', 'g_free', '(', 'field_day', ')', ';', 'g_free', '(', 'field_month', ')', ';', 'g_free', '(', 'field_year', ')', ';', 'g_free', '(', 'field_time', ')', ';', 'field_name', '=', 'ar_get_last_field', '(', 'line', ',', 'date_idx', ',', '5', ')', ';', 'fields', '=', 'g_strsplit', '(', 'field_name', ',', '""""', ',', '2', ')', ';', 'if', '(', 'fields', '[', '0', ']', '==', 'NULL', ')', '{', 'g_strfreev', '(', 'fields', ')', ';', 'g_free', '(', 'field_name', ')', ';', 'file_data_free', '(', 'fdata', ')', ';', 'return', ';', '}', 'if', '(', 'fields', '[', '1', ']', '==', 'NULL', ')', '{', 'g_strfreev', '(', 'fields', ')', ';', 'fields', '=', 'g_strsplit', '(', 'field_name', ',', '""""', ',', '2', ')', ';', '}', 'if', '(', '*', '(', 'fields', '[', '0', ']', ')', '==', ""''"", ')', '{', 'fdata', '->', 'full_path', '=', 'g_strdup', '(', 'fields', '[', '0', ']', ')', ';', 'fdata', '->', 'original_path', '=', 'fdata', '->', 'full_path', ';', '}', 'else', '{', 'fdata', '->', 'full_path', '=', 'g_strconcat', '(', '""""', ',', 'fields', '[', '0', ']', ',', 'NULL', ')', ';', 'fdata', '->', 'original_path', '=', 'fdata', '->', 'full_path', '+', '1', ';', '}', 'if', '(', 'fields', '[', '1', ']', '!=', 'NULL', ')', 'fdata', '->', 'link', '=', 'g_strdup', '(', 'fields', '[', '1', ']', ')', ';', 'g_strfreev', '(', 'fields', ')', ';', 'g_free', '(', 'field_name', ')', ';', 'fdata', '->', 'name', '=', 'g_strdup', '(', '_g_path_get_basename', '(', 'fdata', '->', 'full_path', ')', ')', ';', 'fdata', '->', 'path', '=', '_g_path_remove_level', '(', 'fdata', '->', 'full_path', ')', ';', 'if', '(', '*', 'fdata', '->', 'name', '==', '0', ')', 'file_data_free', '(', 'fdata', ')', ';', 'fr_archive_add_file', '(', 'FR_ARCHIVE', '(', 'comm', ')', ',', 'fdata', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
810,"['Retrieve', '(', 'int', 'lineNumber', ',', 'int', 'lineCaret', ',', 'int', 'maxChars', ',', 'int', 'styleClock_', ',', 'int', 'linesOnScreen', ',', 'int', 'linesInDoc', ')', '{', 'AllocateForLevel', '(', 'linesOnScreen', ',', 'linesInDoc', ')', ';', 'if', '(', 'styleClock', '!=', 'styleClock_', ')', '{', 'Invalidate', '(', 'LineLayout', ':', ':', 'llCheckTextAndStyle', ')', ';', 'styleClock', '=', 'styleClock_', ';', '}', 'allInvalidated', '=', 'false', ';', 'int', 'pos', '=', '-', '1', ';', 'LineLayout', '*', 'ret', '=', '0', ';', 'if', '(', 'level', '==', 'llcCaret', ')', '{', 'pos', '=', '0', ';', '}', 'else', 'if', '(', 'level', '==', 'llcPage', ')', '{', 'if', '(', 'lineNumber', '==', 'lineCaret', ')', '{', 'pos', '=', '0', ';', '}', 'else', 'if', '(', 'length', '>', '1', ')', '{', 'pos', '=', '1', '+', '(', 'lineNumber', '%', '(', 'length', '-', '1', ')', ')', ';', '}', '}', 'else', 'if', '(', 'level', '==', 'llcDocument', ')', '{', 'pos', '=', 'lineNumber', ';', '}', 'if', '(', 'pos', '>=', '0', ')', '{', 'PLATFORM_ASSERT', '(', 'useCount', '==', '0', ')', ';', 'if', '(', 'cache', '&&', '(', 'pos', '<', 'length', ')', ')', '{', 'if', '(', 'cache', '[', 'pos', ']', ')', '{', 'if', '(', '(', 'cache', '[', 'pos', ']', '->', 'lineNumber', '!=', 'lineNumber', ')', '||', '(', 'cache', '[', 'pos', ']', '->', 'maxLineLength', '<', 'maxChars', ')', ')', '{', 'delete', 'cache', '[', 'pos', ']', ';', 'cache', '[', 'pos', ']', '=', '0', ';', '}', '}', 'if', '(', '!cache', '[', 'pos', ']', ')', '{', 'cache', '[', 'pos', ']', '=', 'new', 'LineLayout', '(', 'maxChars', ')', ';', '}', 'if', '(', 'cache', '[', 'pos', ']', ')', '{', 'cache', '[', 'pos', ']', '->', 'lineNumber', '=', 'lineNumber', ';', 'cache', '[', 'pos', ']', '->', 'inCache', '=', 'true', ';', 'ret', '=', 'cache', '[', 'pos', ']', ';', 'useCount', '++', ';', '}', '}', '}', 'if', '(', '!ret', ')', '{', 'ret', '=', 'new', 'LineLayout', '(', 'maxChars', ')', ';', 'ret', '->', 'lineNumber', '=', 'lineNumber', ';', '}', 'return', 'ret', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
811,"['_get_config_disk_area', '(', 'struct', 'cmd_context', '*', 'cmd', ',', 'const', 'struct', 'dm_config_node', '*', 'cn', ',', 'struct', 'dm_list', '*', 'raw_list', ')', '{', 'struct', 'device_area', 'dev_area', ';', 'const', 'char', '*', 'id_str', ';', 'struct', 'id', 'id', ';', 'if', '(', '!', '(', 'cn', '=', 'cn', '->', 'child', ')', ')', '{', 'log_error', '(', '""""', ')', ';', 'return', '0', ';', '}', 'if', '(', '!dm_config_get_uint64', '(', 'cn', ',', '""""', ',', '&', 'dev_area', '.', 'start', ')', ')', '{', 'log_error', '(', '""""', ')', ';', 'return', '0', ';', '}', 'dev_area', '.', 'start', '<<=', 'SECTOR_SHIFT', ';', 'if', '(', '!dm_config_get_uint64', '(', 'cn', ',', '""""', ',', '&', 'dev_area', '.', 'size', ')', ')', '{', 'log_error', '(', '""""', ')', ';', 'return', '0', ';', '}', 'dev_area', '.', 'size', '<<=', 'SECTOR_SHIFT', ';', 'if', '(', '!dm_config_get_str', '(', 'cn', ',', '""""', ',', '&', 'id_str', ')', ')', '{', 'log_error', '(', '""""', ')', ';', 'return', '0', ';', '}', 'if', '(', '!id_read_format', '(', '&', 'id', ',', 'id_str', ')', ')', '{', 'log_error', '(', '""""', ',', 'id_str', ')', ';', 'return', '0', ';', '}', 'if', '(', '!', '(', 'dev_area', '.', 'dev', '=', 'lvmcache_device_from_pvid', '(', 'cmd', ',', '&', 'id', ',', 'NULL', ',', 'NULL', ')', ')', ')', '{', 'char', 'buffer', '[', '64', ']', '__attribute__', '(', '(', 'aligned', '(', '8', ')', ')', ')', ';', 'if', '(', '!id_write_format', '(', '&', 'id', ',', 'buffer', ',', 'sizeof', '(', 'buffer', ')', ')', ')', 'log_error', '(', '""""', ')', ';', 'log_error', '(', '""""', ',', 'buffer', ')', ';', 'return', '0', ';', '}', 'return', '_add_raw', '(', 'raw_list', ',', '&', 'dev_area', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
812,"['findDefsUsedOutsideOfLoop', '(', 'Loop', '*', 'L', ')', '{', 'SmallVector', '<', 'Instruction', '*', ',', '8', '>', 'UsedOutside', ';', 'for', '(', 'auto', '*', 'Block', ':', 'L', '->', 'getBlocks', '(', ')', ')', '/', '/', 'FIXME', ':', 'I', 'believe', 'that', 'this', 'could', 'use', 'copy_if', 'if', 'the', 'Inst', 'reference', '/', '/', 'be', 'adapted', 'into', 'a', 'pointer', '.', 'for', '(', 'auto', '&', 'Inst', ':', '*', 'Block', ')', '{', 'auto', 'Users', '=', 'Inst', '.', 'users', '(', ')', ';', 'if', '(', 'std', ':', ':', 'any_of', '(', 'Users', '.', 'begin', '(', ')', ',', 'Users', '.', 'end', '(', ')', ',', '[', '&', ']', '(', 'User', '*', 'U', ')', '{', 'auto', '*', 'Use', '=', 'cast', '<', 'Instruction', '>', '(', 'U', ')', ';', 'return', '!L', '->', 'contains', '(', 'Use', '->', 'getParent', '(', ')', ')', ';', '}', ')', ')', 'UsedOutside', '.', 'push_back', '(', '&', 'Inst', ')', ';', '}', 'return', 'UsedOutside', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
813,"['mxf_primer_pack_add_mapping', '(', 'MXFPrimerPack', '*', 'primer', ',', 'guint16', 'local_tag', ',', 'const', 'MXFUL', '*', 'ul', ')', '{', 'MXFUL', '*', 'uid', ';', '#ifndef', 'gchar', 'str', '[', '48', ']', ';', 'guint', 'ltag_tmp', '=', 'local_tag', ';', 'if', '(', 'primer', '->', 'mappings', '==', 'NULL', ')', '{', 'primer', '->', 'mappings', '=', 'g_hash_table_new_full', '(', 'g_direct_hash', ',', 'g_direct_equal', ',', '(', 'GDestroyNotify', ')', 'NULL', ',', '(', 'GDestroyNotify', ')', '_mxf_mapping_ul_free', ')', ';', '}', 'if', '(', 'primer', '->', 'reverse_mappings', '==', 'NULL', ')', '{', 'primer', '->', 'reverse_mappings', '=', 'g_hash_table_new_full', '(', '(', 'GHashFunc', ')', 'mxf_ul_hash', ',', '(', 'GEqualFunc', ')', 'mxf_ul_is_equal', ',', '(', 'GDestroyNotify', ')', '_mxf_mapping_ul_free', ',', '(', 'GDestroyNotify', ')', 'NULL', ')', ';', '}', 'if', '(', 'primer', '->', 'next_free_tag', '==', '0xffff', '&&', 'ltag_tmp', '==', '0', ')', '{', 'GST_ERROR', '(', '""""', ')', ';', 'return', '0', ';', '}', 'if', '(', 'ltag_tmp', '==', '0', ')', '{', 'guint', 'tmp', ';', 'tmp', '=', 'GPOINTER_TO_UINT', '(', 'g_hash_table_lookup', '(', 'primer', '->', 'reverse_mappings', ',', 'ul', ')', ')', ';', 'if', '(', 'tmp', '==', '0', ')', '{', 'ltag_tmp', '=', 'primer', '->', 'next_free_tag', ';', 'primer', '->', 'next_free_tag', '++', ';', '}', '}', 'else', '{', 'if', '(', 'g_hash_table_lookup', '(', 'primer', '->', 'mappings', ',', 'GUINT_TO_POINTER', '(', 'ltag_tmp', ')', ')', ')', 'return', 'ltag_tmp', ';', '}', 'g_assert', '(', 'ltag_tmp', '!=', '0', ')', ';', 'uid', '=', 'g_slice_new', '(', 'MXFUL', ')', ';', 'memcpy', '(', 'uid', ',', 'ul', ',', '16', ')', ';', 'GST_DEBUG', '(', '""""', ',', 'ltag_tmp', ',', 'mxf_ul_to_string', '(', 'uid', ',', 'str', ')', ')', ';', 'g_hash_table_insert', '(', 'primer', '->', 'mappings', ',', 'GUINT_TO_POINTER', '(', 'ltag_tmp', ')', ',', 'uid', ')', ';', 'uid', '=', 'g_slice_dup', '(', 'MXFUL', ',', 'uid', ')', ';', 'g_hash_table_insert', '(', 'primer', '->', 'reverse_mappings', ',', 'uid', ',', 'GUINT_TO_POINTER', '(', 'ltag_tmp', ')', ')', ';', 'return', 'ltag_tmp', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
814,"['nemo_file_is_launchable', '(', 'NemoFile', '*', 'file', ')', '{', 'gboolean', 'type_can_be_executable', ';', 'type_can_be_executable', '=', 'FALSE', ';', 'if', '(', 'file', '->', 'details', '->', 'mime_type', '!=', 'NULL', ')', '{', 'type_can_be_executable', '=', 'g_content_type_can_be_executable', '(', 'eel_ref_str_peek', '(', 'file', '->', 'details', '->', 'mime_type', ')', ')', ';', '}', 'return', 'type_can_be_executable', '&&', 'nemo_file_can_get_permissions', '(', 'file', ')', '&&', 'nemo_file_can_execute', '(', 'file', ')', '&&', 'nemo_file_is_executable', '(', 'file', ')', '&&', '!nemo_file_is_directory', '(', 'file', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
815,"['bld_stmt_evxlst', '(', 'struct', 'st_t', '*', 'stp', ')', '{', 'switch', '(', '(', 'byte', ')', 'stp', '->', 'stmttyp', ')', '{', 'case', 'S_NULL', ':', 'case', 'S_STNONE', ':', 'break', ';', 'case', 'S_PROCA', ':', 'case', 'S_FORASSGN', ':', 'case', 'S_RHSDEPROCA', ':', 'case', 'S_NBPROCA', ':', 'bld_lhs_impl_evxlst', '(', 'stp', '->', 'st', '.', 'spra', '.', 'lhsx', ')', ';', 'bld_rhs_impl_evxlst', '(', 'stp', '->', 'st', '.', 'spra', '.', 'rhsx', ')', ';', 'break', ';', 'case', 'S_IF', ':', 'bld_rhs_impl_evxlst', '(', 'stp', '->', 'st', '.', 'sif', '.', 'condx', ')', ';', 'bld_stlst_evxlst', '(', 'stp', '->', 'st', '.', 'sif', '.', 'thenst', ')', ';', 'if', '(', 'stp', '->', 'st', '.', 'sif', '.', 'elsest', '!=', 'NULL', ')', 'bld_stmt_evxlst', '(', 'stp', '->', 'st', '.', 'sif', '.', 'elsest', ')', ';', 'break', ';', 'case', 'S_CASE', ':', 'bld_case_evxlst', '(', 'stp', ')', ';', 'break', ';', 'case', 'S_WAIT', ':', 'bld_stlst_evxlst', '(', 'stp', '->', 'st', '.', 'swait', '.', 'lpst', ')', ';', 'break', ';', 'case', 'S_FOREVER', ':', 'bld_stlst_evxlst', '(', 'stp', '->', 'st', '.', 'swh', '.', 'lpst', ')', ';', 'break', ';', 'case', 'S_REPEAT', ':', 'if', '(', 'stp', '->', 'st', '.', 'srpt', '.', 'repx', '!=', 'NULL', ')', '{', 'bld_rhs_impl_evxlst', '(', 'stp', '->', 'st', '.', 'srpt', '.', 'repx', ')', ';', '}', 'bld_stlst_evxlst', '(', 'stp', '->', 'st', '.', 'srpt', '.', 'repst', ')', ';', 'break', ';', 'case', 'S_WHILE', ':', 'if', '(', 'stp', '->', 'st', '.', 'swh', '.', 'lpx', '!=', 'NULL', ')', '{', 'bld_rhs_impl_evxlst', '(', 'stp', '->', 'st', '.', 'swh', '.', 'lpx', ')', ';', '}', 'bld_stlst_evxlst', '(', 'stp', '->', 'st', '.', 'swh', '.', 'lpst', ')', ';', 'break', ';', 'case', 'S_FOR', ':', '{', 'struct', 'for_t', '*', 'frs', ';', 'frs', '=', 'stp', '->', 'st', '.', 'sfor', ';', 'bld_stmt_evxlst', '(', 'frs', '->', 'forassgn', ')', ';', 'if', '(', 'frs', '->', 'fortermx', '!=', 'NULL', ')', 'bld_rhs_impl_evxlst', '(', 'frs', '->', 'fortermx', ')', ';', 'bld_stmt_evxlst', '(', 'frs', '->', 'forinc', ')', ';', 'bld_stlst_evxlst', '(', 'frs', '->', 'forbody', ')', ';', '}', 'break', ';', 'case', 'S_DELCTRL', ':', 'if', '(', 'stp', '->', 'st', '.', 'sdc', '->', 'actionst', '!=', 'NULL', ')', '{', 'bld_stlst_evxlst', '(', 'stp', '->', 'st', '.', 'sdc', '->', 'actionst', ')', ';', '}', 'break', ';', 'case', 'S_NAMBLK', ':', 'bld_stlst_evxlst', '(', 'stp', '->', 'st', '.', 'snbtsk', '->', 'tskst', ')', ';', 'break', ';', 'case', 'S_UNBLK', ':', 'bld_stlst_evxlst', '(', 'stp', '->', 'st', '.', 'sbsts', ')', ';', 'break', ';', 'case', 'S_UNFJ', ':', '{', 'register', 'int32', 'fji', ';', 'struct', 'st_t', '*', 'fjstp', ';', 'for', '(', 'fji', '=', '0', ';', ';', 'fji', '++', ')', '{', 'if', '(', '(', 'fjstp', '=', 'stp', '->', 'st', '.', 'fj', '.', 'fjstps', '[', 'fji', ']', ')', '==', 'NULL', ')', 'break', ';', 'bld_stlst_evxlst', '(', 'fjstp', ')', ';', '}', '}', 'break', ';', 'case', 'S_TSKCALL', ':', 'bld_tskenable_evxlst', '(', 'stp', ')', ';', 'break', ';', 'case', 'S_QCONTA', ':', 'case', 'S_QCONTDEA', ':', 'break', ';', 'case', 'S_DSABLE', ':', 'case', 'S_CAUSE', ':', 'break', ';', 'default', ':', '__case_terr', '(', '__FILE__', ',', '__LINE__', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
816,"['InitializeGUCOptionsFromEnvironment', '(', 'void', ')', '{', 'char\t', '*', 'env', ';', 'long\t\tstack_rlimit', ';', 'env', '=', 'getenv', '(', '""""', ')', ';', 'if', '(', 'env', '!=', 'NULL', ')', 'SetConfigOption', '(', '""""', ',', 'env', ',', 'PGC_POSTMASTER', ',', 'PGC_S_ENV_VAR', ')', ';', 'env', '=', 'getenv', '(', '""""', ')', ';', 'if', '(', 'env', '!=', 'NULL', ')', 'SetConfigOption', '(', '""""', ',', 'env', ',', 'PGC_POSTMASTER', ',', 'PGC_S_ENV_VAR', ')', ';', 'env', '=', 'getenv', '(', '""""', ')', ';', 'if', '(', 'env', '!=', 'NULL', ')', 'SetConfigOption', '(', '""""', ',', 'env', ',', 'PGC_POSTMASTER', ',', 'PGC_S_ENV_VAR', ')', ';', '/', '*', '*', 'rlimit', ""isn't"", 'exactly', 'an', '""""', ',', 'but', 'it', 'behaves', '*', 'the', 'same', '.', 'If', 'we', 'can', 'identify', 'the', 'platform', 'stack', 'depth', 'rlimit', ',', '*', 'default', 'stack', 'depth', 'setting', 'up', 'to', 'whatever', 'is', 'safe', '(', 'but', 'at', 'most', '2MB', ')', '.', 'stack_rlimit', '=', 'get_stack_depth_rlimit', '(', ')', ';', 'if', '(', 'stack_rlimit', '>', '0', ')', '{', 'long\t\tnew_limit', '=', '(', 'stack_rlimit', '-', 'STACK_DEPTH_SLOP', ')', '/', '1024L', ';', 'if', '(', 'new_limit', '>', '100', ')', '{', 'char\t\tlimbuf', '[', '16', ']', ';', 'new_limit', '=', 'Min', '(', 'new_limit', ',', '2048', ')', ';', 'sprintf', '(', 'limbuf', ',', '""""', ',', 'new_limit', ')', ';', 'SetConfigOption', '(', '""""', ',', 'limbuf', ',', 'PGC_POSTMASTER', ',', 'PGC_S_ENV_VAR', ')', ';', '}', '}', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
817,"['gwy_data_field_duplicate_real', '(', 'GObject', '*', 'object', ')', '{', 'GwyDataField', '*', 'data_field', ',', '*', 'duplicate', ';', 'g_return_val_if_fail', '(', 'GWY_IS_DATA_FIELD', '(', 'object', ')', ',', 'NULL', ')', ';', 'data_field', '=', 'GWY_DATA_FIELD', '(', 'object', ')', ';', 'duplicate', '=', 'gwy_data_field_new_alike', '(', 'data_field', ',', 'FALSE', ')', ';', 'memcpy', '(', 'duplicate', '->', 'data', ',', 'data_field', '->', 'data', ',', 'data_field', '->', 'xres', '*', 'data_field', '->', 'yres', '*', 'sizeof', '(', 'gdouble', ')', ')', ';', 'duplicate', '->', 'cached', '=', 'data_field', '->', 'cached', ';', 'memcpy', '(', 'duplicate', '->', 'cache', ',', 'data_field', '->', 'cache', ',', 'GWY_DATA_FIELD_CACHE_SIZE', '*', 'sizeof', '(', 'gdouble', ')', ')', ';', 'return', '(', 'GObject', '*', ')', 'duplicate', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
818,"['max77802_rtc_read_alarm', '(', 'struct', 'device', '*', 'dev', ',', 'struct', 'rtc_wkalrm', '*', 'alrm', ')', '{', 'struct', 'max77802_rtc_info', '*', 'info', '=', 'dev_get_drvdata', '(', 'dev', ')', ';', 'u8', 'data', '[', 'RTC_NR_TIME', ']', ';', 'unsigned', 'int', 'val', ';', 'int', 'ret', ';', 'mutex_lock', '(', '&', 'info', '->', 'lock', ')', ';', 'ret', '=', 'max77802_rtc_update', '(', 'info', ',', 'MAX77802_RTC_READ', ')', ';', 'if', '(', 'ret', '<', '0', ')', 'goto', 'out', ';', 'ret', '=', 'regmap_bulk_read', '(', 'info', '->', 'max77802', '->', 'regmap', ',', 'MAX77802_ALARM1_SEC', ',', 'data', ',', 'RTC_NR_TIME', ')', ';', 'if', '(', 'ret', '<', '0', ')', '{', 'dev_err', '(', 'info', '->', 'dev', ',', '""""', ',', '__func__', ',', '__LINE__', ',', 'ret', ')', ';', 'goto', 'out', ';', '}', 'max77802_rtc_data_to_tm', '(', 'data', ',', '&', 'alrm', '->', 'time', ',', 'info', '->', 'rtc_24hr_mode', ')', ';', 'alrm', '->', 'enabled', '=', '0', ';', 'ret', '=', 'regmap_read', '(', 'info', '->', 'max77802', '->', 'regmap', ',', 'MAX77802_RTC_AE1', ',', '&', 'val', ')', ';', 'if', '(', 'ret', '<', '0', ')', '{', 'dev_err', '(', 'info', '->', 'dev', ',', '""""', ',', '__func__', ',', '__LINE__', ',', 'ret', ')', ';', 'goto', 'out', ';', '}', 'if', '(', 'val', ')', 'alrm', '->', 'enabled', '=', '1', ';', 'alrm', '->', 'pending', '=', '0', ';', 'ret', '=', 'regmap_read', '(', 'info', '->', 'max77802', '->', 'regmap', ',', 'MAX77802_REG_STATUS2', ',', '&', 'val', ')', ';', 'if', '(', 'ret', '<', '0', ')', '{', 'dev_err', '(', 'info', '->', 'dev', ',', '""""', ',', '__func__', ',', '__LINE__', ',', 'ret', ')', ';', 'goto', 'out', ';', '}', 'alrm', '->', 'pending', '=', '1', ';', 'out', ':', 'mutex_unlock', '(', '&', 'info', '->', 'lock', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
819,"['db_load_from_stream', '(', 'dns_db_t', '*', 'db', ',', 'FILE', '*', 'fp', ')', '{', 'isc_result_t', 'result', ';', 'dns_rdatacallbacks_t', 'callbacks', ';', 'dns_rdatacallbacks_init', '(', '&', 'callbacks', ')', ';', 'result', '=', 'dns_db_beginload', '(', 'db', ',', '&', 'callbacks', ')', ';', 'if', '(', 'result', '!=', 'ISC_R_SUCCESS', ')', 'fatal', '(', '""""', ',', 'isc_result_totext', '(', 'result', ')', ')', ';', 'result', '=', 'dns_master_loadstream', '(', 'fp', ',', 'name', ',', 'name', ',', 'rdclass', ',', '0', ',', '&', 'callbacks', ',', 'mctx', ')', ';', 'if', '(', 'result', '!=', 'ISC_R_SUCCESS', ')', 'fatal', '(', '""""', ',', 'isc_result_totext', '(', 'result', ')', ')', ';', 'result', '=', 'dns_db_endload', '(', 'db', ',', '&', 'callbacks', ')', ';', 'if', '(', 'result', '!=', 'ISC_R_SUCCESS', ')', 'fatal', '(', '""""', ',', 'isc_result_totext', '(', 'result', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
820,"['ext2fs_alloc_generic_bmap', '(', 'ext2_filsys', 'fs', ',', 'errcode_t', 'magic', ',', 'int', 'type', ',', '__u64', 'start', ',', '__u64', 'end', ',', '__u64', 'real_end', ',', 'const', 'char', '*', 'descr', ',', 'ext2fs_generic_bitmap', '*', 'ret', ')', '{', 'ext2fs_generic_bitmap\tbitmap', ';', 'struct', 'ext2_bitmap_ops\t', '*', 'ops', ';', 'ext2_ino_t', 'num_dirs', ';', 'errcode_t', 'retval', ';', 'if', '(', '!type', ')', 'type', '=', 'EXT2FS_BMAP64_BITARRAY', ';', 'switch', '(', 'type', ')', '{', 'case', 'EXT2FS_BMAP64_BITARRAY', ':', 'ops', '=', '&', 'ext2fs_blkmap64_bitarray', ';', 'break', ';', 'case', 'EXT2FS_BMAP64_RBTREE', ':', 'ops', '=', '&', 'ext2fs_blkmap64_rbtree', ';', 'break', ';', 'case', 'EXT2FS_BMAP64_AUTODIR', ':', 'retval', '=', 'ext2fs_get_num_dirs', '(', 'fs', ',', '&', 'num_dirs', ')', ';', 'if', '(', 'retval', '||', 'num_dirs', '>', '(', 'fs', '->', 'super', '->', 's_inodes_count', '/', '320', ')', ')', 'ops', '=', '&', 'ext2fs_blkmap64_bitarray', ';', 'ops', '=', '&', 'ext2fs_blkmap64_rbtree', ';', 'break', ';', 'default', ':', 'return', 'EINVAL', ';', '}', 'retval', '=', 'ext2fs_get_memzero', '(', 'sizeof', '(', 'struct', 'ext2fs_struct_generic_bitmap', ')', ',', '&', 'bitmap', ')', ';', 'if', '(', 'retval', ')', 'return', 'retval', ';', '#ifdef', 'if', '(', 'gettimeofday', '(', '&', 'bitmap', '->', 'stats', '.', 'created', ',', '(', 'struct', 'timezone', '*', ')', 'NULL', ')', '==', '-', '1', ')', '{', 'perror', '(', '""""', ')', ';', 'ext2fs_free_mem', '(', '&', 'bitmap', ')', ';', 'return', '1', ';', '}', 'bitmap', '->', 'stats', '.', 'type', '=', 'type', ';', 'bitmap', '->', 'magic', '=', 'magic', ';', 'bitmap', '->', 'fs', '=', 'fs', ';', 'bitmap', '->', 'start', '=', 'start', ';', 'bitmap', '->', 'end', '=', 'end', ';', 'bitmap', '->', 'real_end', '=', 'real_end', ';', 'bitmap', '->', 'bitmap_ops', '=', 'ops', ';', 'bitmap', '->', 'cluster_bits', '=', '0', ';', 'switch', '(', 'magic', ')', '{', 'case', 'EXT2_ET_MAGIC_INODE_BITMAP64', ':', 'bitmap', '->', 'base_error_code', '=', 'EXT2_ET_BAD_INODE_MARK', ';', 'break', ';', 'case', 'EXT2_ET_MAGIC_BLOCK_BITMAP64', ':', 'bitmap', '->', 'base_error_code', '=', 'EXT2_ET_BAD_BLOCK_MARK', ';', 'bitmap', '->', 'cluster_bits', '=', 'fs', '->', 'cluster_ratio_bits', ';', 'break', ';', 'default', ':', 'bitmap', '->', 'base_error_code', '=', 'EXT2_ET_BAD_GENERIC_MARK', ';', '}', 'if', '(', 'descr', ')', '{', 'retval', '=', 'ext2fs_get_mem', '(', 'strlen', '(', 'descr', ')', '+', '1', ',', '&', 'bitmap', '->', 'description', ')', ';', 'if', '(', 'retval', ')', '{', 'ext2fs_free_mem', '(', '&', 'bitmap', ')', ';', 'return', 'retval', ';', '}', 'strcpy', '(', 'bitmap', '->', 'description', ',', 'descr', ')', ';', '}', 'bitmap', '->', 'description', '=', '0', ';', 'retval', '=', 'bitmap', '->', 'bitmap_ops', '->', 'new_bmap', '(', 'fs', ',', 'bitmap', ')', ';', 'if', '(', 'retval', ')', '{', 'ext2fs_free_mem', '(', '&', 'bitmap', '->', 'description', ')', ';', 'ext2fs_free_mem', '(', '&', 'bitmap', ')', ';', 'return', 'retval', ';', '}', '*', 'ret', '=', 'bitmap', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
821,"['load_locate_elem', '(', 'lList', '*', 'load_list', ',', 'lListElem', '*', 'global_consumable', ',', 'lListElem', '*', 'host_consumable', ',', 'lListElem', '*', 'queue_consumable', ',', 'const', 'char', '*', 'limit', ')', '{', 'lListElem', '*', 'load_elem', '=', 'NULL', ';', 'lListElem', '*', 'load', '=', 'NULL', ';', 'for_each', '(', 'load', ',', 'load_list', ')', '{', 'if', '(', '(', 'lGetPosRef', '(', 'load', ',', 'LDR_global_pos', ')', '==', 'global_consumable', ')', '&&', '(', 'lGetPosRef', '(', 'load', ',', 'LDR_host_pos', ')', '==', 'host_consumable', ')', '&&', '(', 'lGetPosRef', '(', 'load', ',', 'LDR_queue_pos', ')', '==', 'queue_consumable', ')', '&&', '(', 'strcmp', '(', 'lGetPosString', '(', 'load', ',', 'LDR_limit_pos', ')', ',', 'limit', ')', '==', '0', ')', ')', '{', 'load_elem', '=', 'load', ';', 'break', ';', '}', '}', 'return', 'load_elem', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
822,"['cf_section_parse_free', '(', 'CONF_SECTION', '*', 'cs', ',', 'void', '*', 'base', ')', '{', 'int', 'i', ';', 'const', 'CONF_PARSER', '*', 'variables', '=', 'cs', '->', 'variables', ';', '/', '*', '*', ""\tDon''re"", '*', '\tcalled', 'from', 'a', 'module', '.', 'This', 'is', 'also', 'for', 'clients', '.', 'c', ',', '*', '\twhere', 'client_free', '(', ')', 'expects', 'to', 'be', 'able', 'to', 'free', '*', '\tclient', 'structure', '.', 'If', 'we', 'moved', 'everything', 'to', 'key', '*', '\tof', 'the', 'config', 'files', ',', 'we', 'might', 'solve', 'some', 'problems', '.', '.', '.', 'if', '(', '!variables', ')', 'return', ';', '/', '*', '*', '\tFree', 'up', 'dynamically', 'allocated', 'string', 'pointers', '.', 'for', '(', 'i', '=', '0', ';', 'variables', '[', 'i', ']', '.', 'name', '!=', 'NULL', ';', 'i', '++', ')', '{', 'char', '*', '*', 'p', ';', 'if', '(', '(', 'variables', '[', 'i', ']', '.', 'type', '!=', 'PW_TYPE_STRING_PTR', ')', '&&', '(', 'variables', '[', 'i', ']', '.', 'type', '!=', 'PW_TYPE_FILENAME', ')', ')', '{', 'continue', ';', '}', '/', '*', '*', '\tNo', 'base', 'struct', 'offset', ',', 'data', 'must', 'be', 'the', 'pointer', '.', '*', '\tIf', 'data', ""doesn't"", 'exist', ',', 'ignore', 'the', 'entry', ',', '*', '\tmust', 'be', 'something', 'wrong', '.', 'if', '(', '!base', ')', '{', 'if', '(', '!variables', '[', 'i', ']', '.', 'data', ')', '{', 'continue', ';', '}', 'p', '=', '(', 'char', '*', '*', ')', 'variables', '[', 'i', ']', '.', 'data', ';', ';', '}', 'else', 'if', '(', 'variables', '[', 'i', ']', '.', 'data', ')', '{', 'p', '=', '(', 'char', '*', '*', ')', 'variables', '[', 'i', ']', '.', 'data', ';', ';', '}', 'else', '{', 'p', '=', '(', 'char', '*', '*', ')', '(', '(', '(', 'char', '*', ')', 'base', ')', '+', 'variables', '[', 'i', ']', '.', 'offset', ')', ';', '}', 'free', '(', '*', 'p', ')', ';', '*', 'p', '=', 'NULL', ';', '}', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
823,"['useredit', '(', 'void', ')', '{', 'char', 'iwho', '[', '100', ']', ';', 'int', 'il', ';', 'printf', '(', '""""', ')', ';', 'if', '(', 'H_SAM', '<', '0', ')', '{', 'printf', '(', '""""', ')', ';', 'return', ';', '}', 'list_users', '(', '1', ')', ';', 'while', '(', '1', ')', '{', 'printf', '(', '""""', ')', ';', 'printf', '(', '""""', ',', 'admuser', ')', ';', 'il', '=', 'fmyinput', '(', '""""', ',', 'iwho', ',', '32', ')', ';', 'if', '(', 'il', '==', '1', '&&', '*', 'iwho', '==', ""''"", ')', '{', 'printf', '(', '""""', ')', ';', 'list_users', '(', '1', ')', ';', 'continue', ';', '}', 'if', '(', 'il', '==', '1', '&&', '*', 'iwho', '==', ""''"", ')', 'return', ';', 'if', '(', 'il', '==', '0', ')', 'strcpy', '(', 'iwho', ',', 'admuser', ')', ';', 'find_n_change', '(', 'iwho', ')', ';', '}', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
824,"['propertyNodeToList', '(', 'LoadState', '&', 'state', ',', 'QString', 'typeName', ',', 'Node', 'pnode', ')', '{', 'Nodes', 'sequence', '=', 'sequenceStartingAt', '(', 'pnode', ')', ';', 'QVariantList', 'list', ';', 'foreach', '(', 'Node', 'node', ',', 'sequence', ')', '{', 'Nodes', 'vnodes', ';', 'vnodes', '<<', 'node', ';', 'QVariant', 'value', '=', 'propertyNodeListToVariant', '(', 'state', ',', 'typeName', ',', 'vnodes', ')', ';', 'if', '(', 'value', '.', 'isValid', '(', ')', ')', '{', 'DEBUG', '<<', '""""', '<<', 'value', '<<', 'endl', ';', 'list', '.', 'push_back', '(', 'value', ')', ';', '}', 'else', '{', 'DEBUG', '<<', '""""', '<<', 'endl', ';', '}', '}', 'DEBUG', '<<', '""""', '<<', 'list', '.', 'size', '(', ')', '<<', '""""', '<<', 'endl', ';', 'return', 'list', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
825,"['qf_free', '(', ')', '{', 'struct', 'qf_line', '*', 'qfp', ';', 'while', '(', 'qf_count', ')', '{', 'qfp', '=', 'qf_start', '->', 'qf_next', ';', 'free', '(', 'qf_start', '->', 'qf_text', ')', ';', 'free', '(', 'qf_start', ')', ';', 'qf_start', '=', 'qfp', ';', '--', 'qf_count', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
826,"['plpgsql_validator', '(', 'PG_FUNCTION_ARGS', ')', '{', 'Oid\t\t\tfuncoid', '=', 'PG_GETARG_OID', '(', '0', ')', ';', 'HeapTuple\ttuple', ';', 'Form_pg_proc', 'proc', ';', 'char\t\tfunctyptype', ';', 'int\t\t\tnumargs', ';', 'Oid\t\t', '*', 'argtypes', ';', 'char\t', '*', '*', 'argnames', ';', 'char\t', '*', 'argmodes', ';', 'bool\t\tistrigger', '=', 'false', ';', 'int\t\t\ti', ';', 'tuple', '=', 'SearchSysCache', '(', 'PROCOID', ',', 'ObjectIdGetDatum', '(', 'funcoid', ')', ',', '0', ',', '0', ',', '0', ')', ';', 'if', '(', '!HeapTupleIsValid', '(', 'tuple', ')', ')', 'elog', '(', 'ERROR', ',', '""""', ',', 'funcoid', ')', ';', 'proc', '=', '(', 'Form_pg_proc', ')', 'GETSTRUCT', '(', 'tuple', ')', ';', 'functyptype', '=', 'get_typtype', '(', 'proc', '->', 'prorettype', ')', ';', 'if', '(', 'functyptype', '==', 'TYPTYPE_PSEUDO', ')', '{', 'if', '(', 'proc', '->', 'prorettype', '==', 'TRIGGEROID', '||', '(', 'proc', '->', 'prorettype', '==', 'OPAQUEOID', '&&', 'proc', '->', 'pronargs', '==', '0', ')', ')', 'istrigger', '=', 'true', ';', 'else', 'if', '(', 'proc', '->', 'prorettype', '!=', 'RECORDOID', '&&', 'proc', '->', 'prorettype', '!=', 'VOIDOID', '&&', '!IsPolymorphicType', '(', 'proc', '->', 'prorettype', ')', ')', 'ereport', '(', 'ERROR', ',', '(', 'errcode', '(', 'ERRCODE_FEATURE_NOT_SUPPORTED', ')', ',', 'errmsg', '(', '""""', ',', 'format_type_be', '(', 'proc', '->', 'prorettype', ')', ')', ')', ')', ';', '}', 'numargs', '=', 'get_func_arg_info', '(', 'tuple', ',', '&', 'argtypes', ',', '&', 'argnames', ',', '&', 'argmodes', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'numargs', ';', 'i', '++', ')', '{', 'if', '(', 'get_typtype', '(', 'argtypes', '[', 'i', ']', ')', '==', 'TYPTYPE_PSEUDO', ')', '{', 'if', '(', '!IsPolymorphicType', '(', 'argtypes', '[', 'i', ']', ')', ')', 'ereport', '(', 'ERROR', ',', '(', 'errcode', '(', 'ERRCODE_FEATURE_NOT_SUPPORTED', ')', ',', 'errmsg', '(', '""""', ',', 'format_type_be', '(', 'argtypes', '[', 'i', ']', ')', ')', ')', ')', ';', '}', '}', 'if', '(', 'check_function_bodies', ')', '{', 'FunctionCallInfoData', 'fake_fcinfo', ';', 'FmgrInfo\tflinfo', ';', 'TriggerData', 'trigdata', ';', 'int\t\t\trc', ';', '/', '*', '*', 'Connect', 'to', 'SPI', 'manager', '(', 'is', 'this', 'needed', 'for', 'compilation', '?', ')', 'if', '(', '(', 'rc', '=', 'SPI_connect', '(', ')', ')', '!=', 'SPI_OK_CONNECT', ')', 'elog', '(', 'ERROR', ',', '""""', ',', 'SPI_result_code_string', '(', 'rc', ')', ')', ';', '/', '*', '*', 'Set', 'up', 'a', 'fake', 'fcinfo', 'with', 'just', 'enough', 'info', 'to', '*', 'plpgsql_compile', '(', ')', '.', 'MemSet', '(', '&', 'fake_fcinfo', ',', '0', ',', 'sizeof', '(', 'fake_fcinfo', ')', ')', ';', 'MemSet', '(', '&', 'flinfo', ',', '0', ',', 'sizeof', '(', 'flinfo', ')', ')', ';', 'fake_fcinfo', '.', 'flinfo', '=', '&', 'flinfo', ';', 'flinfo', '.', 'fn_oid', '=', 'funcoid', ';', 'flinfo', '.', 'fn_mcxt', '=', 'CurrentMemoryContext', ';', 'if', '(', 'istrigger', ')', '{', 'MemSet', '(', '&', 'trigdata', ',', '0', ',', 'sizeof', '(', 'trigdata', ')', ')', ';', 'trigdata', '.', 'type', '=', 'T_TriggerData', ';', 'fake_fcinfo', '.', 'context', '=', '(', 'Node', '*', ')', '&', 'trigdata', ';', '}', 'plpgsql_compile', '(', '&', 'fake_fcinfo', ',', 'true', ')', ';', '/', '*', '*', 'Disconnect', 'from', 'SPI', 'if', '(', '(', 'rc', '=', 'SPI_finish', '(', ')', ')', '!=', 'SPI_OK_FINISH', ')', 'elog', '(', 'ERROR', ',', '""""', ',', 'SPI_result_code_string', '(', 'rc', ')', ')', ';', '}', 'ReleaseSysCache', '(', 'tuple', ')', ';', 'PG_RETURN_VOID', '(', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
827,"['set_FloatPrecision', '(', 'GelETree', '*', 'a', ')', '{', 'long', 'bits', ';', 'if', 'G_UNLIKELY', '(', '!', 'check_argument_integer', '(', '&', 'a', ',', '0', ',', '""""', ')', ')', 'return', 'NULL', ';', 'bits', '=', 'mpw_get_long', '(', 'a', '->', 'val', '.', 'value', ')', ';', 'if', 'G_UNLIKELY', '(', 'gel_error_num', ')', '{', 'gel_error_num', '=', '0', ';', 'return', 'NULL', ';', '}', 'if', 'G_UNLIKELY', '(', 'bits', '<', '60', '||', 'bits', '>', '16384', ')', '{', 'gel_errorout', '(', '_', '(', '""""', ')', ',', '""""', ',', '60', ',', '16384', ')', ';', 'return', 'NULL', ';', '}', 'if', '(', 'gel_calcstate', '.', 'float_prec', '!=', 'bits', ')', '{', 'gel_calcstate', '.', 'float_prec', '=', 'bits', ';', 'mpw_set_default_prec', '(', 'gel_calcstate', '.', 'float_prec', ')', ';', 'gel_break_fp_caches', '(', ')', ';', 'gel_set_state', '(', 'gel_calcstate', ')', ';', '}', 'return', 'gel_makenum_ui', '(', 'gel_calcstate', '.', 'float_prec', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
828,"['mpt_detach', '(', 'struct', 'pci_dev', '*', 'pdev', ')', '{', 'MPT_ADAPTER', '\t', '*', 'ioc', '=', 'pci_get_drvdata', '(', 'pdev', ')', ';', 'char', 'pname', '[', '32', ']', ';', 'u8', 'cb_idx', ';', 'unsigned', 'long', 'flags', ';', 'struct', 'workqueue_struct', '*', 'wq', ';', '/', '*', '*', 'Stop', 'polling', 'ioc', 'for', 'fault', 'spin_lock_irqsave', '(', '&', 'ioc', '->', 'taskmgmt_lock', ',', 'flags', ')', ';', 'wq', '=', 'ioc', '->', 'reset_work_q', ';', 'ioc', '->', 'reset_work_q', '=', 'NULL', ';', 'spin_unlock_irqrestore', '(', '&', 'ioc', '->', 'taskmgmt_lock', ',', 'flags', ')', ';', 'cancel_delayed_work', '(', '&', 'ioc', '->', 'fault_reset_work', ')', ';', 'destroy_workqueue', '(', 'wq', ')', ';', 'spin_lock_irqsave', '(', '&', 'ioc', '->', 'fw_event_lock', ',', 'flags', ')', ';', 'wq', '=', 'ioc', '->', 'fw_event_q', ';', 'ioc', '->', 'fw_event_q', '=', 'NULL', ';', 'spin_unlock_irqrestore', '(', '&', 'ioc', '->', 'fw_event_lock', ',', 'flags', ')', ';', 'destroy_workqueue', '(', 'wq', ')', ';', 'sprintf', '(', 'pname', ',', 'MPT_PROCFS_MPTBASEDIR', '""""', ',', 'ioc', '->', 'name', ')', ';', 'remove_proc_entry', '(', 'pname', ',', 'NULL', ')', ';', 'sprintf', '(', 'pname', ',', 'MPT_PROCFS_MPTBASEDIR', '""""', ',', 'ioc', '->', 'name', ')', ';', 'remove_proc_entry', '(', 'pname', ',', 'NULL', ')', ';', 'sprintf', '(', 'pname', ',', 'MPT_PROCFS_MPTBASEDIR', '""""', ',', 'ioc', '->', 'name', ')', ';', 'remove_proc_entry', '(', 'pname', ',', 'NULL', ')', ';', 'for', '(', 'cb_idx', '=', '0', ';', 'cb_idx', '<', 'MPT_MAX_PROTOCOL_DRIVERS', ';', 'cb_idx', '++', ')', '{', 'if', '(', 'MptDeviceDriverHandlers', '[', 'cb_idx', ']', '&&', 'MptDeviceDriverHandlers', '[', 'cb_idx', ']', '->', 'remove', ')', '{', 'MptDeviceDriverHandlers', '[', 'cb_idx', ']', '->', 'remove', '(', 'pdev', ')', ';', '}', '}', 'CHIPREG_WRITE32', '(', '&', 'ioc', '->', 'chip', '->', 'IntMask', ',', '0xFFFFFFFF', ')', ';', 'ioc', '->', 'active', '=', '0', ';', 'synchronize_irq', '(', 'pdev', '->', 'irq', ')', ';', 'CHIPREG_WRITE32', '(', '&', 'ioc', '->', 'chip', '->', 'IntStatus', ',', '0', ')', ';', 'CHIPREG_READ32', '(', '&', 'ioc', '->', 'chip', '->', 'IntStatus', ')', ';', 'mpt_adapter_dispose', '(', 'ioc', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
829,"['xen_hyper_dump_xen_hyper_sched_table', '(', 'int', 'verbose', ')', '{', 'struct', 'xen_hyper_sched_context', '*', 'schc', ';', 'char', 'buf', '[', 'XEN_HYPER_CMD_BUFSIZE', ']', ';', 'int', 'len', ',', 'flag', ',', 'i', ';', 'len', '=', '21', ';', 'flag', '=', 'XEN_HYPER_PRI_R', ';', 'XEN_HYPER_PRI', '(', 'fp', ',', 'len', ',', '""""', ',', 'buf', ',', 'flag', ',', '(', 'buf', ',', '""""', ',', 'xhscht', '->', 'name', ')', ')', ';', 'XEN_HYPER_PRI', '(', 'fp', ',', 'len', ',', '""""', ',', 'buf', ',', 'flag', ',', '(', 'buf', ',', '""""', ',', 'xhscht', '->', 'opt_sched', ')', ')', ';', 'XEN_HYPER_PRI', '(', 'fp', ',', 'len', ',', '""""', ',', 'buf', ',', 'flag', ',', '(', 'buf', ',', '""""', ',', 'xhscht', '->', 'sched_id', ')', ')', ';', 'XEN_HYPER_PRI', '(', 'fp', ',', 'len', ',', '""""', ',', 'buf', ',', 'flag', ',', '(', 'buf', ',', '""""', ',', 'xhscht', '->', 'scheduler', ')', ')', ';', 'XEN_HYPER_PRI', '(', 'fp', ',', 'len', ',', '""""', ',', 'buf', ',', 'flag', ',', '(', 'buf', ',', '""""', ',', 'xhscht', '->', 'scheduler_struct', ')', ')', ';', 'XEN_HYPER_PRI', '(', 'fp', ',', 'len', ',', '""""', ',', 'buf', ',', 'flag', ',', '(', 'buf', ',', '""""', ',', 'xhscht', '->', 'sched_context_array', ')', ')', ';', 'if', '(', 'verbose', ')', '{', 'for', '(', 'i', '=', '0', ',', 'schc', '=', 'xhscht', '->', 'sched_context_array', ';', 'i', '<', 'xht', '->', 'pcpus', ';', 'i', '++', ',', 'schc', '++', ')', '{', 'XEN_HYPER_PRI', '(', 'fp', ',', 'len', ',', '""""', ',', 'buf', ',', 'flag', ',', '(', 'buf', ',', '""""', ',', 'i', ')', ')', ';', 'XEN_HYPER_PRI', '(', 'fp', ',', 'len', ',', '""""', ',', 'buf', ',', 'flag', ',', '(', 'buf', ',', '""""', ',', 'schc', '->', 'schedule_data', ')', ')', ';', 'XEN_HYPER_PRI', '(', 'fp', ',', 'len', ',', '""""', ',', 'buf', ',', 'flag', ',', '(', 'buf', ',', '""""', ',', 'schc', '->', 'curr', ')', ')', ';', 'XEN_HYPER_PRI', '(', 'fp', ',', 'len', ',', '""""', ',', 'buf', ',', 'flag', ',', '(', 'buf', ',', '""""', ',', 'schc', '->', 'idle', ')', ')', ';', 'XEN_HYPER_PRI', '(', 'fp', ',', 'len', ',', '""""', ',', 'buf', ',', 'flag', ',', '(', 'buf', ',', '""""', ',', 'schc', '->', 'sched_priv', ')', ')', ';', 'XEN_HYPER_PRI', '(', 'fp', ',', 'len', ',', '""""', ',', 'buf', ',', 'flag', ',', '(', 'buf', ',', '""""', ',', 'schc', '->', 'tick', ')', ')', ';', '}', '}', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
830,"['loader_BASIC_load', '(', 'const', 'char', '*', 'filename', ',', 'unsigned', 'char', '*', 'data', ',', 'long', 'size', ',', 'fileio_prop_t', '*', '*', 'prop', ')', '{', 'int', 'b', ';', 'long', 'xsize', ',', 'len', ';', 'unsigned', 'char', '*', 'sptr', ',', '*', 'dptr', ';', '*', 'prop', '=', '(', 'fileio_prop_t', '*', ')', 'malloc', '(', 'sizeof', '(', 'fileio_prop_t', ')', ')', ';', 'if', '(', '*', 'prop', '==', 'NULL', ')', 'return', '-', '1', ';', 'memset', '(', '*', 'prop', ',', '0', ',', 'sizeof', '(', 'fileio_prop_t', ')', ')', ';', 'switch', '(', '*', 'data', ')', '{', 'case', '0xd3', ':', '(', '*', 'prop', ')', '->', 'type', '=', 'FILEIO_TYPE_BAS', ';', 'break', ';', 'case', '0xd7', ':', '(', '*', 'prop', ')', '->', 'type', '=', 'FILEIO_TYPE_PROT_BAS', ';', 'break', ';', 'default', ':', 'return', '-', '1', ';', '}', 'xsize', '=', 'size', '+', '(', 'size', '+', '127', ')', '/', '128', ';', '(', '*', 'prop', ')', '->', 'valid', '=', 'FILEIO_V_NONE', ';', '(', '*', 'prop', ')', '->', 'load_addr', '=', '0', ';', '(', '*', 'prop', ')', '->', 'start_addr', '=', '0', ';', '(', '*', 'prop', ')', '->', 'autostart', '=', '0', ';', '(', '*', 'prop', ')', '->', 'size', '=', 'xsize', ';', 'memcpy', '(', '(', '*', 'prop', ')', '->', 'name', ',', 'data', '+', '3', ',', '8', ')', ';', '(', '*', 'prop', ')', '->', 'name', '[', '8', ']', '=', ""''"", ';', '(', '*', 'prop', ')', '->', 'data', '=', '(', 'unsigned', 'char', '*', ')', 'malloc', '(', 'xsize', ')', ';', 'if', '(', '(', '*', 'prop', ')', '->', 'data', '==', '0', ')', 'return', '-', '1', ';', 'sptr', '=', 'data', ';', 'dptr', '=', '(', '*', 'prop', ')', '->', 'data', ';', 'b', '=', '1', ';', 'while', '(', 'size', '>', '0', ')', '{', '*', 'dptr', '++', '=', 'b', '++', ';', 'len', '=', '(', 'size', '>', '128', ')', '?', '128', ':', 'size', ';', 'memcpy', '(', 'dptr', ',', 'sptr', ',', 'len', ')', ';', 'dptr', '+=', '128', ';', 'sptr', '+=', '128', ';', 'size', '-=', '128', ';', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
831,"['graphicsToDeviceCoordinates', '(', 'const', 'JsGraphics', '*', 'gfx', ',', 'short', '*', 'x', ',', 'short', '*', 'y', ')', '{', 'if', '(', 'gfx', '->', 'data', '.', 'flags', '&', 'JSGRAPHICSFLAGS_SWAP_XY', ')', '{', 'short', 't', '=', '*', 'x', ';', '*', 'x', '=', '*', 'y', ';', '*', 'y', '=', 't', ';', '}', 'if', '(', 'gfx', '->', 'data', '.', 'flags', '&', 'JSGRAPHICSFLAGS_INVERT_X', ')', '*', 'x', '=', '(', 'short', ')', '(', 'gfx', '->', 'data', '.', 'width', '-', '(', '*', 'x', '+', '1', ')', ')', ';', 'if', '(', 'gfx', '->', 'data', '.', 'flags', '&', 'JSGRAPHICSFLAGS_INVERT_Y', ')', '*', 'y', '=', '(', 'short', ')', '(', 'gfx', '->', 'data', '.', 'height', '-', '(', '*', 'y', '+', '1', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
832,"['gst_app_sink_render_common', '(', 'GstBaseSink', '*', 'psink', ',', 'GstMiniObject', '*', 'data', ',', 'gboolean', 'is_list', ')', '{', 'GstFlowReturn', 'ret', ';', 'GstAppSink', '*', 'appsink', '=', 'GST_APP_SINK_CAST', '(', 'psink', ')', ';', 'GstAppSinkPrivate', '*', 'priv', '=', 'appsink', '->', 'priv', ';', 'gboolean', 'emit', ';', 'restart', ':', 'g_mutex_lock', '(', 'priv', '->', 'mutex', ')', ';', 'if', '(', 'priv', '->', 'flushing', ')', 'goto', 'flushing', ';', 'GST_DEBUG_OBJECT', '(', 'appsink', ',', '""""', ',', 'is_list', '?', '""""', ':', '""""', ',', 'data', ',', 'priv', '->', 'queue', '->', 'length', ')', ';', 'while', '(', 'priv', '->', 'max_buffers', '>', '0', '&&', 'priv', '->', 'queue', '->', 'length', '>=', 'priv', '->', 'max_buffers', ')', '{', 'if', '(', 'priv', '->', 'drop', ')', '{', 'GstMiniObject', '*', 'obj', ';', 'obj', '=', 'g_queue_pop_head', '(', 'priv', '->', 'queue', ')', ';', 'GST_DEBUG_OBJECT', '(', 'appsink', ',', '""""', ',', 'obj', ')', ';', 'gst_mini_object_unref', '(', 'obj', ')', ';', '}', 'else', '{', 'GST_DEBUG_OBJECT', '(', 'appsink', ',', '""""', ',', 'priv', '->', 'queue', '->', 'length', ',', 'priv', '->', 'max_buffers', ')', ';', 'if', '(', 'priv', '->', 'unlock', ')', '{', 'g_mutex_unlock', '(', 'priv', '->', 'mutex', ')', ';', 'if', '(', '(', 'ret', '=', 'gst_base_sink_wait_preroll', '(', 'psink', ')', ')', '!=', 'GST_FLOW_OK', ')', 'goto', 'stopping', ';', 'goto', 'restart', ';', '}', 'g_cond_wait', '(', 'priv', '->', 'cond', ',', 'priv', '->', 'mutex', ')', ';', 'if', '(', 'priv', '->', 'flushing', ')', 'goto', 'flushing', ';', '}', '}', 'g_queue_push_tail', '(', 'priv', '->', 'queue', ',', 'gst_mini_object_ref', '(', 'data', ')', ')', ';', 'g_cond_signal', '(', 'priv', '->', 'cond', ')', ';', 'emit', '=', 'priv', '->', 'emit_signals', ';', 'g_mutex_unlock', '(', 'priv', '->', 'mutex', ')', ';', 'if', '(', 'is_list', ')', '{', 'if', '(', 'priv', '->', 'callbacks', '.', 'new_buffer_list', ')', 'priv', '->', 'callbacks', '.', 'new_buffer_list', '(', 'appsink', ',', 'priv', '->', 'user_data', ')', ';', 'else', 'if', '(', 'emit', ')', 'g_signal_emit', '(', 'appsink', ',', 'gst_app_sink_signals', '[', 'SIGNAL_NEW_BUFFER_LIST', ']', ',', '0', ')', ';', '}', 'else', '{', 'if', '(', 'priv', '->', 'callbacks', '.', 'new_buffer', ')', 'priv', '->', 'callbacks', '.', 'new_buffer', '(', 'appsink', ',', 'priv', '->', 'user_data', ')', ';', 'else', 'if', '(', 'emit', ')', 'g_signal_emit', '(', 'appsink', ',', 'gst_app_sink_signals', '[', 'SIGNAL_NEW_BUFFER', ']', ',', '0', ')', ';', '}', 'return', 'GST_FLOW_OK', ';', 'flushing', ':', '{', 'GST_DEBUG_OBJECT', '(', 'appsink', ',', '""""', ')', ';', 'g_mutex_unlock', '(', 'priv', '->', 'mutex', ')', ';', 'return', 'GST_FLOW_WRONG_STATE', ';', '}', 'stopping', ':', '{', 'GST_DEBUG_OBJECT', '(', 'appsink', ',', '""""', ')', ';', 'return', 'ret', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
833,"['draw', '(', ')', '{', 'int', 'i', ';', 'if', '(', 'active', '&&', 'visible', ')', '{', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'numcomponents', ';', 'i', '++', ')', '{', 'components', '[', 'i', ']', '->', 'draw', '(', ')', ';', '}', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
834,"['ApplyFunction', '(', 'uint64_t', 'iLODLevel', ',', 'bool', '(', '*', 'brickFunc', ')', '(', 'void', '*', 'pData', ',', 'const', 'UINT64VECTOR3', '&', 'vBrickSize', ',', 'const', 'UINT64VECTOR3', '&', 'vBrickOffset', ',', 'void', '*', 'pUserContext', ')', ',', 'void', '*', 'pUserContext', ',', 'uint64_t', 'iOverlap', ')', 'const', '{', 'if', '(', 'm_bToCBlock', ')', '{', 'bool', 'okay', '=', 'true', ';', 'for', '(', 'std', ':', ':', 'vector', '<', 'Timestep', '*', '>', ':', ':', 'const_iterator', 'ts', '=', 'm_timesteps', '.', 'begin', '(', ')', ';', 'ts', '!=', 'm_timesteps', '.', 'end', '(', ')', ';', '++', 'ts', ')', '{', 'const', 'TOCTimestep', '*', 'toc_ts', '=', 'static_cast', '<', 'TOCTimestep', '*', '>', '(', '*', 'ts', ')', ';', 'okay', '&=', 'toc_ts', '->', 'GetDB', '(', ')', '->', 'ApplyFunction', '(', 'iLODLevel', ',', 'brickFunc', ',', 'pUserContext', ',', 'uint32_t', '(', 'iOverlap', ')', ',', '&', 'Controller', ':', ':', 'Debug', ':', ':', 'Out', '(', ')', ')', ';', '}', 'return', 'okay', ';', '}', 'else', '{', 'std', ':', ':', 'vector', '<', 'uint64_t', '>', 'vLOD', ';', 'vLOD', '.', 'push_back', '(', 'iLODLevel', ')', ';', 'bool', 'okay', '=', 'true', ';', 'for', '(', 'std', ':', ':', 'vector', '<', 'Timestep', '*', '>', ':', ':', 'const_iterator', 'ts', '=', 'm_timesteps', '.', 'begin', '(', ')', ';', 'ts', '!=', 'm_timesteps', '.', 'end', '(', ')', ';', '++', 'ts', ')', '{', 'const', 'RDTimestep', '*', 'rd_ts', '=', 'static_cast', '<', 'RDTimestep', '*', '>', '(', '*', 'ts', ')', ';', 'okay', '&=', 'rd_ts', '->', 'GetDB', '(', ')', '->', 'ApplyFunction', '(', 'vLOD', ',', 'brickFunc', ',', 'pUserContext', ',', 'iOverlap', ',', '&', 'Controller', ':', ':', 'Debug', ':', ':', 'Out', '(', ')', ')', ';', '}', 'return', 'okay', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
835,"['receiveStatusMessage', '(', 'std', ':', ':', 'string', '&', 'message', ')', '{', 'message', '.', 'clear', '(', ')', ';', 'int', 'status', '=', 'receiveStatusLine', '(', 'message', ')', ';', 'if', '(', 'status', '<', '0', ')', '{', 'while', '(', 'status', '<=', '0', ')', '{', 'message', '+=', ""''"", ';', 'status', '=', 'receiveStatusLine', '(', 'message', ')', ';', '}', '}', 'return', 'status', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
836,"['ldm_validate_vmdb', '(', 'struct', 'parsed_partitions', '*', 'state', ',', 'unsigned', 'long', 'base', ',', 'struct', 'ldmdb', '*', 'ldb', ')', '{', 'Sector', 'sect', ';', 'u8', '*', 'data', ';', 'bool', 'result', '=', 'false', ';', 'struct', 'vmdb', '*', 'vm', ';', 'struct', 'tocblock', '*', 'toc', ';', 'BUG_ON', '(', '!state', '||', '!ldb', ')', ';', 'vm', '=', '&', 'ldb', '->', 'vm', ';', 'toc', '=', '&', 'ldb', '->', 'toc', ';', 'data', '=', 'read_part_sector', '(', 'state', ',', 'base', '+', 'OFF_VMDB', ',', '&', 'sect', ')', ';', 'if', '(', '!data', ')', '{', 'ldm_crit', '(', '""""', ')', ';', 'return', 'false', ';', '}', 'if', '(', '!ldm_parse_vmdb', '(', 'data', ',', 'vm', ')', ')', 'if', '(', 'get_unaligned_be16', '(', 'data', '+', '0x10', ')', '!=', '0x01', ')', '{', 'ldm_crit', '(', '""""', ')', ';', 'goto', 'out', ';', '}', 'if', '(', 'vm', '->', 'vblk_offset', '!=', '512', ')', 'ldm_info', '(', '""""', ',', 'vm', '->', 'vblk_offset', ')', ';', '/', '*', '*', 'The', 'last_vblkd_seq', 'can', 'be', 'before', 'the', 'end', 'of', 'the', 'vmdb', ',', 'just', 'make', '*', 'it', 'is', 'not', 'out', 'of', 'bounds', '.', 'if', '(', '(', 'vm', '->', 'vblk_size', '*', 'vm', '->', 'last_vblk_seq', ')', '>', '(', 'toc', '->', 'bitmap1_size', '<<', '9', ')', ')', '{', 'ldm_crit', '(', '""""', ')', ';', 'goto', 'out', ';', '}', 'result', '=', 'true', ';', 'out', ':', 'put_dev_sector', '(', 'sect', ')', ';', 'return', 'result', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
837,"['set_b_bus_req', '(', 'struct', 'device', '*', 'dev', ',', 'struct', 'device_attribute', '*', 'attr', ',', 'const', 'char', '*', 'buf', ',', 'size_t', 'count', ')', '{', 'struct', 'ci_hdrc\t', '*', 'ci', '=', 'dev_get_drvdata', '(', 'dev', ')', ';', 'if', '(', 'count', '>', '2', ')', 'return', '-', '1', ';', 'mutex_lock', '(', '&', 'ci', '->', 'fsm', '.', 'lock', ')', ';', 'if', '(', 'buf', '[', '0', ']', '==', ""''"", ')', 'ci', '->', 'fsm', '.', 'b_bus_req', '=', '0', ';', 'else', 'if', '(', 'buf', '[', '0', ']', '==', ""''"", ')', 'ci', '->', 'fsm', '.', 'b_bus_req', '=', '1', ';', 'ci_otg_queue_work', '(', 'ci', ')', ';', 'mutex_unlock', '(', '&', 'ci', '->', 'fsm', '.', 'lock', ')', ';', 'return', 'count', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
838,"['circuit_try_clearing_isolation_state', '(', 'origin_circuit_t', '*', 'circ', ')', '{', 'circ', '->', '_base', '.', 'state', '==', 'CIRCUIT_STATE_OPEN', '&&', 'circ', '->', 'isolation_values_set', '&&', '/', '*', ""It''s"", 'isolation', 'info', 'if', ""it's"", 'ever', '!circ', '->', 'isolation_any_streams_attached', ')', '{', '/', '*', 'If', 'we', 'have', 'any', 'isolation', 'information', 'set', 'on', 'this', 'circuit', ',', '*', 'we', ""didn't"", 'manage', 'to', 'attach', 'any', 'streams', 'to', 'it', ',', 'then', 'we', 'circuit_clear_isolation', '(', 'circ', ')', ';', 'return', '1', ';', '}', 'else', '{', 'return', '0', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
839,"['msp430_fetch_integer', '(', 'unsigned', 'int', 'loc', ')', '{', 'char', '*', 'm', '=', '&', 'alu', '.', 'mem', '[', '0xffff', '&', 'loc', ']', ';', 'short', 'res', ';', 'if', '(', 'wpr', '[', '0xffff', '&', 'loc', ']', ')', 'alu', '.', 'signal', '=', 'SIGTRAP', ';', 'res', '=', '(', '0xff', '&', '(', '*', 'm', ')', ')', '|', '(', 'short', ')', '(', '*', '(', 'm', '+', '1', ')', ')', '<<', '8', ';', 'return', 'res', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
840,"['chasen_standalone', '(', 'char', '*', '*', 'argv', ',', 'FILE', '*', 'output', ')', '{', '/', '*', '*', 'if', '(', 'chasen_getopt_argv', '(', 'argv', ',', 'stderr', ')', ')', 'return', '1', ';', 'argv', '+=', 'Cha_optind', ';', 'if', '(', '*', 'argv', '==', 'NULL', ')', 'do_chasen_standalone', '(', 'stdin', ',', 'output', ')', ';', 'for', '(', ';', '*', 'argv', ';', 'argv', '++', ')', 'do_chasen_standalone', '(', 'cha_fopen', '(', '*', 'argv', ',', '""""', ',', '1', ')', ',', 'output', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
841,"['CacheInvalidateRelcacheByTuple', '(', 'HeapTuple', 'classTuple', ')', '{', 'Form_pg_class', 'classtup', '=', '(', 'Form_pg_class', ')', 'GETSTRUCT', '(', 'classTuple', ')', ';', 'Oid\t\t\tdatabaseId', ';', 'Oid\t\t\trelationId', ';', 'RelFileNode', 'rnode', ';', 'relationId', '=', 'HeapTupleGetOid', '(', 'classTuple', ')', ';', 'if', '(', 'classtup', '->', 'relisshared', ')', 'databaseId', '=', 'InvalidOid', ';', 'databaseId', '=', 'MyDatabaseId', ';', 'if', '(', 'classtup', '->', 'reltablespace', ')', 'rnode', '.', 'spcNode', '=', 'classtup', '->', 'reltablespace', ';', 'rnode', '.', 'spcNode', '=', 'MyDatabaseTableSpace', ';', 'rnode', '.', 'dbNode', '=', 'databaseId', ';', 'rnode', '.', 'relNode', '=', 'classtup', '->', 'relfilenode', ';', 'RegisterRelcacheInvalidation', '(', 'databaseId', ',', 'relationId', ')', ';', 'RegisterSmgrInvalidation', '(', 'rnode', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
842,"['MaxCutRandomized', '(', 'SDPCone', 'sdpcone', ',', 'int', 'nnodes', ')', '{', 'int', 'i', ',', 'j', ',', 'derror', ',', 'info', ';', 'double', 'dd', ',', 'scal', '=', 'RAND_MAX', ',', '*', 'vv', ',', '*', 'tt', ',', '*', 'cc', ',', 'ymin', '=', '0', ';', 'vv', '=', '(', 'double', '*', ')', 'malloc', '(', 'nnodes', '*', 'sizeof', '(', 'double', ')', ')', ';', 'tt', '=', '(', 'double', '*', ')', 'malloc', '(', 'nnodes', '*', 'sizeof', '(', 'double', ')', ')', ';', 'cc', '=', '(', 'double', '*', ')', 'malloc', '(', '(', 'nnodes', '+', '2', ')', '*', 'sizeof', '(', 'double', ')', ')', ';', 'info', '=', 'SDPConeComputeXV', '(', 'sdpcone', ',', '0', ',', '&', 'derror', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'nnodes', ';', 'i', '++', ')', '{', 'for', '(', 'j', '=', '0', ';', 'j', '<', 'nnodes', ';', 'j', '++', ')', '{', 'dd', '=', '(', '(', 'rand', '(', ')', ')', '/', 'scal', '-', '.', '5', ')', ';', 'vv', '[', 'j', ']', '=', 'tan', '(', '3', '.', '1415926', '*', 'dd', ')', ';', '}', 'info', '=', 'SDPConeXVMultiply', '(', 'sdpcone', ',', '0', ',', 'vv', ',', 'tt', ',', 'nnodes', ')', ';', 'for', '(', 'j', '=', '0', ';', 'j', '<', 'nnodes', ';', 'j', '++', ')', '{', 'if', '(', 'tt', '[', 'j', ']', '<', '0', ')', 'tt', '[', 'j', ']', '=', '-', '1', ';', 'else', 'tt', '[', 'j', ']', '=', '1', ';', '}', 'for', '(', 'j', '=', '0', ';', 'j', '<', 'nnodes', '+', '2', ';', 'j', '++', ')', '{', 'cc', '[', 'j', ']', '=', '0', ';', '}', 'info', '=', 'SDPConeAddXVAV', '(', 'sdpcone', ',', '0', ',', 'tt', ',', 'nnodes', ',', 'cc', ',', 'nnodes', '+', '2', ')', ';', 'if', '(', 'cc', '[', '0', ']', '<', 'ymin', ')', 'ymin', '=', 'cc', '[', '0', ']', ';', '}', 'printf', '(', '""""', ',', 'ymin', ')', ';', 'free', '(', 'vv', ')', ';', 'free', '(', 'tt', ')', ';', 'free', '(', 'cc', ')', ';', 'return', '(', '0', ')', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
843,"['FFTHiPassFilter', '(', 'double', 'fc', ',', 'wxPlotData', ':', ':', 'FFTFilter_Type', 'filter', ',', 'double', 'n', ')', '{', 'wxCHECK_MSG', '(', 'Ok', '(', ')', '&&', '(', 'n', '>', '0', ')', ',', 'wxPlotData', '(', ')', ',', 'wxT', '(', '""""', ')', ')', ';', 'wxPlotData', 'xform', '(', 'FFT', '(', 'true', ')', ')', ';', 'int', 'i', ',', 'count', '=', 'xform', '.', 'GetCount', '(', ')', ';', 'double', 'f', ',', 'x', ';', 'double', '*', 'ydata', '=', 'xform', '.', 'GetYData', '(', ')', ',', '*', 'yidata', '=', 'xform', '.', 'GetYiData', '(', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'count', ';', 'i', '++', ')', '{', 'x', '=', 'xform', '.', 'GetXData', '(', ')', '[', 'i', ']', ';', 'if', '(', '(', 'filter', '==', 'FilterStep', ')', '&&', '(', 'x', '<', 'fc', ')', ')', '{', '*', 'ydata', '=', '0', ';', '*', 'yidata', '=', '0', ';', '}', '{', 'if', '(', 'filter', '==', 'FilterButterworth', ')', 'f', '=', '1', '.', '0', '-', '1', '.', '0', '/', '(', '1', '.', '0', '+', 'pow', '(', 'x', '/', 'fc', ',', '2', '.', '0', '*', 'n', ')', ')', ';', 'else', 'if', '(', 'filter', '==', 'FilterGaussian', ')', 'f', '=', 'exp', '(', '-', 'fc', '*', 'fc', '/', '(', '2', '.', '0', '*', 'x', '*', 'x', ')', ')', ';', 'else', '/', '/', '(', 'filter', '==', 'FilterFermi', ')', 'f', '=', '1', '.', '0', '/', '(', '1', '.', '0', '+', 'exp', '(', '(', 'fc', '-', 'x', ')', '/', '(', 'n', ')', ')', ')', ';', '*', 'ydata', '*=', 'f', ';', '*', 'yidata', '*=', 'f', ';', '}', 'ydata', '++', ';', 'yidata', '++', ';', '}', 'wxPlotData', 'dest', '(', 'xform', '.', 'FFT', '(', 'false', ')', ')', ';', 'dest', '.', 'OffsetX', '(', 'M_PLOTDATA', '->', 'm_Xdata', '[', '0', ']', ')', ';', 'dest', '.', 'CalcBoundingRect', '(', ')', ';', 'return', 'dest', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
844,"['qlcnic_82xx_get_mac_address', '(', 'struct', 'qlcnic_adapter', '*', 'adapter', ',', 'u8', '*', 'mac', ',', 'u8', 'function', ')', '{', 'int', 'err', ',', 'i', ';', 'struct', 'qlcnic_cmd_args', 'cmd', ';', 'u32', 'mac_low', ',', 'mac_high', ';', 'err', '=', 'qlcnic_alloc_mbx_args', '(', '&', 'cmd', ',', 'adapter', ',', 'QLCNIC_CMD_MAC_ADDRESS', ')', ';', 'if', '(', 'err', ')', 'return', 'err', ';', 'cmd', '.', 'req', '.', 'arg', '[', '1', ']', '=', 'function', '|', 'BIT_8', ';', 'err', '=', 'qlcnic_issue_cmd', '(', 'adapter', ',', '&', 'cmd', ')', ';', 'if', '(', 'err', '==', 'QLCNIC_RCODE_SUCCESS', ')', '{', 'mac_low', '=', 'cmd', '.', 'rsp', '.', 'arg', '[', '1', ']', ';', 'mac_high', '=', 'cmd', '.', 'rsp', '.', 'arg', '[', '2', ']', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', '2', ';', 'i', '++', ')', 'mac', '[', 'i', ']', '=', '(', 'u8', ')', '(', 'mac_high', '>>', '(', '(', '1', '-', 'i', ')', '*', '8', ')', ')', ';', 'for', '(', 'i', '=', '2', ';', 'i', '<', '6', ';', 'i', '++', ')', 'mac', '[', 'i', ']', '=', '(', 'u8', ')', '(', 'mac_low', '>>', '(', '(', '5', '-', 'i', ')', '*', '8', ')', ')', ';', '}', 'else', '{', 'dev_err', '(', '&', 'adapter', '->', 'pdev', '->', 'dev', ',', '""""', ',', 'err', ')', ';', 'err', '=', '-', 'EIO', ';', '}', 'qlcnic_free_mbx_args', '(', '&', 'cmd', ')', ';', 'return', 'err', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
845,"['init_context_stack', '(', ')', '{', 'static', 'bool', 'did_init', '=', 'false', ';', 'if', '(', '!did_init', ')', '{', 'did_init', '=', 'true', ';', 'context_stack', '[', '0', ']', '=', 'current_alloc_context', '=', '0', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
846,"['cb_search_keypress', '(', 'GtkWidget', '*', 'widget', ',', 'GdkEventKey', '*', 'event', ',', 'gpointer', 'data', ')', '{', 'gint\t\tindex', ';', 'gchar\t\ttext', '[', '20', ']', ';', 'strcpy', '(', 'text', ',', 'gtk_entry_get_text', '(', 'GTK_ENTRY', '(', 'search_entry', ')', ')', ')', ';', 'if', '(', '(', 'strlen', '(', 'text', ')', ')', '<=', '1', ')', '{', 'gimmix_update_library_with_dir', '(', '""""', ')', ';', 'return', ';', '}', 'index', '=', 'gtk_combo_box_get_active', '(', 'GTK_COMBO_BOX', '(', 'search_combo', ')', ')', ';', 'gimmix_library_search', '(', 'index', ',', 'text', ')', ';', 'return', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
847,"['srv_header', '(', 'int', 'argc', ',', 'char', '*', '*', 'argv', ')', '{', 'vaheader_t', 'header', ';', 'int', 'fd', ';', 'char', '*', 'msgname', ';', 'if', '(', '(', '!client_spool', ')', '||', '(', '!client_user', ')', '||', '(', '!', '(', 'client_access', '&', 'VBOXD_ACC_READ', ')', ')', ')', '{', 'message', '(', '""""', ',', 'VBOXD_VAL_ACCESSDENIED', ')', ';', 'return', ';', '}', 'if', '(', 'argc', '!=', '2', ')', '{', 'message', '(', '""""', ',', 'VBOXD_VAL_BADARGS', ',', 'argv', '[', '0', ']', ')', ';', 'return', ';', '}', 'if', '(', 'chdir', '(', 'client_spool', ')', '!=', '0', ')', '{', 'message', '(', '""""', ',', 'VBOXD_VAL_ACCESSDENIED', ')', ';', 'return', ';', '}', 'if', '(', '!', '(', 'msgname', '=', 'rindex', '(', 'argv', '[', '1', ']', ',', ""''"", ')', ')', ')', '{', 'msgname', '=', 'argv', '[', '1', ']', ';', '}', 'else', 'msgname', '++', ';', 'if', '(', '(', 'fd', '=', 'open', '(', 'msgname', ',', 'O_RDONLY', ')', ')', '!=', '-', '1', ')', '{', 'if', '(', 'header_get', '(', 'fd', ',', '&', 'header', ')', ')', '{', 'message', '(', '""""', ',', 'VBOXD_VAL_HEADER', ',', 'sizeof', '(', 'vaheader_t', ')', ')', ';', 'pullmsg', '(', 'stdout', ')', ';', 'write', '(', 'STDOUT_FILENO', ',', '(', 'char', '*', ')', '&', 'header', ',', 'sizeof', '(', 'vaheader_t', ')', ')', ';', 'message', '(', '""""', ',', 'VBOXD_VAL_HEADER', ')', ';', 'pullmsg', '(', 'stdout', ')', ';', '}', 'else', 'message', '(', '""""', ',', 'VBOXD_VAL_BADMESSAGE', ')', ';', '}', 'else', 'message', '(', '""""', ',', 'VBOXD_VAL_TEMPERROR', ',', 'strerror', '(', 'errno', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
848,"['ClientUserinfoChanged', '(', 'edict_t', '*', 'ent', ',', 'char', '*', 'userinfo', ')', '{', 'char', '*', 's', ',', '*', 'r', ',', 'tnick', '[', '16', ']', ';', 'qboolean', 'nickChanged', '=', 'false', ';', '/', '/', 'check', 'for', 'malformed', 'or', 'illegal', 'info', 'if', '(', '!Info_Validate', '(', 'userinfo', ')', ')', '{', 'strcpy', '(', 'userinfo', ',', '""""', ')', ';', '}', '/', '/', 'set', 's', '=', 'Info_ValueForKey', '(', 'userinfo', ',', '""""', ')', ';', 'Q_strncpyz', '(', 'tnick', ',', 's', ',', 'sizeof', '(', 'tnick', ')', ')', ';', 'if', '(', '!tnick', '[', '0', ']', ')', 'strcpy', '(', 'tnick', ',', '""""', ')', ';', 'if', '(', 'strcmp', '(', 'ent', '->', 'client', '->', 'pers', '.', 'netname', ',', 'tnick', ')', ')', '{', '/', '/', 'on', 'the', 'initial', 'update', ',', 'we', ""won't"", 'broadcast', 'the', 'message', '.', 'if', '(', 'ent', '->', 'client', '->', 'pers', '.', 'netname', '[', '0', ']', ')', '{', 'gi', '.', 'bprintf', '(', 'PRINT_MEDIUM', ',', '""""', ',', 'ent', '->', 'client', '->', 'pers', '.', 'netname', ',', 'tnick', ')', ';', '\t', '/', '/', 'IRC_printf', '(', 'IRC_T_SERVER', ',', '""""', ',', 'ent', '->', 'client', '->', 'pers', '.', 'netname', ',', 'tnick', ')', ';', 'nickChanged', '=', 'true', ';', '}', 'strcpy', '(', 'ent', '->', 'client', '->', 'pers', '.', 'netname', ',', 'tnick', ')', ';', '}', '/', '/', 's', '=', 'Info_ValueForKey', '(', 'userinfo', ',', '""""', ')', ';', 'ent', '->', 'client', '->', 'pers', '.', 'spectator', '=', '(', 'strcmp', '(', 's', ',', '""""', ')', '!=', '0', ')', ';', 'r', '=', 'Info_ValueForKey', '(', 'userinfo', ',', '""""', ')', ';', 'ent', '->', 'client', '->', 'rate', '=', 'atoi', '(', 'r', ')', ';', '/', '/', '/', '/', 'set', 's', '=', 'Info_ValueForKey', '(', 'userinfo', ',', '""""', ')', ';', '/', '/', 'AQ', ':', 'TNG', '-', 'JBravo', 'fixing', '$$', 'Skin', 'server', 'crash', 'if', '(', 'strstr', '(', 's', ',', '""""', ')', ')', '{', 'Info_SetValueForKey', '(', 'userinfo', ',', '""""', ',', '""""', ')', ';', 's', '=', 'Info_ValueForKey', '(', 'userinfo', ',', '""""', ')', ';', '}', '/', '/', 'End', '$$', 'Skin', 'server', 'crash', '/', '/', 'combine', 'name', 'and', 'skin', 'into', 'a', 'AssignSkin', '(', 'ent', ',', 's', ',', 'nickChanged', ')', ';', '/', '*', 'Not', 'used', 'in', 'Action', '.', '/', '/', 'if', '(', 'deathmatch', '->', 'value', '&&', '(', '(', 'int', ')', 'dmflags', '->', 'value', '&', 'DF_FIXED_FOV', ')', ')', '{', 'ent', '->', 'client', '->', 'ps', '.', 'fov', '=', '90', ';', '}', '{', 'ent', '->', 'client', '->', 'ps', '.', 'fov', '=', 'atoi', '(', 'Info_ValueForKey', '(', 'userinfo', ',', '""""', ')', ')', ';', 'if', '(', 'ent', '->', 'client', '->', 'ps', '.', 'fov', '<', '1', ')', 'ent', '->', 'client', '->', 'ps', '.', 'fov', '=', '90', ';', 'else', 'if', '(', 'ent', '->', 'client', '->', 'ps', '.', 'fov', '>', '160', ')', 'ent', '->', 'client', '->', 'ps', '.', 'fov', '=', '160', ';', '}', 'ent', '->', 'client', '->', 'pers', '.', 'firing_style', '=', 'ACTION_FIRING_CENTER', ';', '/', '/', 's', '=', 'Info_ValueForKey', '(', 'userinfo', ',', '""""', ')', ';', 'if', '(', 'strlen', '(', 's', ')', ')', '{', 'ent', '->', 'client', '->', 'pers', '.', 'hand', '=', 'atoi', '(', 's', ')', ';', 'if', '(', 'strstr', '(', 's', ',', '""""', ')', '!=', 'NULL', ')', 'ent', '->', 'client', '->', 'pers', '.', 'firing_style', '=', 'ACTION_FIRING_CLASSIC_HIGH', ';', 'else', 'if', '(', 'strstr', '(', 's', ',', '""""', ')', '!=', 'NULL', ')', 'ent', '->', 'client', '->', 'pers', '.', 'firing_style', '=', 'ACTION_FIRING_CLASSIC', ';', '}', '/', '/', 'save', 'off', 'the', 'userinfo', 'in', 'case', 'we', 'want', 'to', 'check', 'something', 'Q_strncpyz', '(', 'ent', '->', 'client', '->', 'pers', '.', 'userinfo', ',', 'userinfo', ',', 'sizeof', '(', 'ent', '->', 'client', '->', 'pers', '.', 'userinfo', ')', ')', ';', '/', '/', 'zucc', 'ShowGun', '(', 'ent', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  True,CWE-476  False,CWE-other  False
849,"['skipLock', '(', 'skipList', 'list', ',', 'UINT32', 'key', ',', 'skipItem', '*', 'save', ',', 'INT32', 'top', ')', '{', 'INT32', 'i', ';', 'skipItem', 'x', ',', 'y', ';', 'if', '(', 'list', '->', 'threaded', ')', 'readLock', '(', 'list', ')', ';', 'i', '>=', '0', ';', 'i', '--', ')', '{', '}', '}', 'if', '(', 'list', '->', 'threaded', ')', 'return', 'skipClosest', '(', 'x', ',', 'key', ',', '0', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
850,"['_parse_cookie', '(', 'CGI', '*', 'cgi', ')', '{', 'NEOERR', '*', 'err', ';', 'char', '*', 'cookie', ';', 'char', '*', 'k', ',', '*', 'v', ',', '*', 'l', ';', 'HDF', '*', 'obj', ';', 'err', '=', 'hdf_get_copy', '(', 'cgi', '->', 'hdf', ',', '""""', ',', '&', 'cookie', ',', 'NULL', ')', ';', 'if', '(', 'err', '!=', 'STATUS_OK', ')', 'return', 'nerr_pass', '(', 'err', ')', ';', 'if', '(', 'cookie', '==', 'NULL', ')', 'return', 'STATUS_OK', ';', 'err', '=', 'hdf_set_value', '(', 'cgi', '->', 'hdf', ',', '""""', ',', 'cookie', ')', ';', 'if', '(', 'err', '!=', 'STATUS_OK', ')', '{', 'free', '(', 'cookie', ')', ';', 'return', 'nerr_pass', '(', 'err', ')', ';', '}', 'obj', '=', 'hdf_get_obj', '(', 'cgi', '->', 'hdf', ',', '""""', ')', ';', 'k', '=', 'l', '=', 'cookie', ';', 'while', '(', '*', 'l', '&&', '*', 'l', '!=', ""''"", '&&', '*', 'l', '!=', ""''"", ')', 'l', '++', ';', 'while', '(', '*', 'k', ')', '{', 'if', '(', '*', 'l', '==', ""''"", ')', '{', 'if', '(', '*', 'l', ')', '*', 'l', '++', '=', ""''"", ';', 'v', '=', 'l', ';', 'while', '(', '*', 'l', '&&', '*', 'l', '!=', ""''"", ')', 'l', '++', ';', 'if', '(', '*', 'l', ')', '*', 'l', '++', '=', ""''"", ';', '}', '{', 'v', '=', '""""', ';', 'if', '(', '*', 'l', ')', '*', 'l', '++', '=', ""''"", ';', '}', 'k', '=', 'neos_strip', '(', 'k', ')', ';', 'v', '=', 'neos_strip', '(', 'v', ')', ';', 'if', '(', 'k', '[', '0', ']', '&&', 'v', '[', '0', ']', ')', '{', 'err', '=', 'hdf_set_value', '(', 'obj', ',', 'k', ',', 'v', ')', ';', 'if', '(', 'nerr_match', '(', 'err', ',', 'NERR_ASSERT', ')', ')', '{', 'STRING', 'str', ';', 'string_init', '(', '&', 'str', ')', ';', 'nerr_error_string', '(', 'err', ',', '&', 'str', ')', ';', 'ne_warn', '(', '""""', ',', 'k', ',', 'v', ',', 'str', '.', 'buf', ')', ';', 'string_clear', '(', '&', 'str', ')', ';', 'nerr_ignore', '(', '&', 'err', ')', ';', '}', 'if', '(', 'err', ')', 'break', ';', '}', 'k', '=', 'l', ';', 'while', '(', '*', 'l', '&&', '*', 'l', '!=', ""''"", '&&', '*', 'l', '!=', ""''"", ')', 'l', '++', ';', '}', 'free', '(', 'cookie', ')', ';', 'return', 'nerr_pass', '(', 'err', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
851,"['mxf_metadata_generic_sound_essence_descriptor_handle_tag', '(', 'MXFMetadataBase', '*', 'metadata', ',', 'MXFPrimerPack', '*', 'primer', ',', 'guint16', 'tag', ',', 'const', 'guint8', '*', 'tag_data', ',', 'guint', 'tag_size', ')', '{', 'MXFMetadataGenericSoundEssenceDescriptor', '*', 'self', '=', 'MXF_METADATA_GENERIC_SOUND_ESSENCE_DESCRIPTOR', '(', 'metadata', ')', ';', 'gboolean', 'ret', '=', 'TRUE', ';', '#ifndef', 'gchar', 'str', '[', '48', ']', ';', 'switch', '(', 'tag', ')', '{', 'case', '0x3d03', ':', 'if', '(', '!mxf_fraction_parse', '(', '&', 'self', '->', 'audio_sampling_rate', ',', 'tag_data', ',', 'tag_size', ')', ')', 'goto', 'error', ';', 'GST_DEBUG', '(', '""""', ',', 'self', '->', 'audio_sampling_rate', '.', 'n', ',', 'self', '->', 'audio_sampling_rate', '.', 'd', ')', ';', 'break', ';', 'case', '0x3d02', ':', 'if', '(', 'tag_size', '!=', '1', ')', 'goto', 'error', ';', 'self', '->', 'locked', '=', '(', 'GST_READ_UINT8', '(', 'tag_data', ')', '!=', '0', ')', ';', 'GST_DEBUG', '(', '""""', ',', '(', 'self', '->', 'locked', ')', '?', '""""', ':', '""""', ')', ';', 'break', ';', 'case', '0x3d04', ':', 'if', '(', 'tag_size', '!=', '1', ')', 'goto', 'error', ';', 'self', '->', 'audio_ref_level', '=', 'GST_READ_UINT8', '(', 'tag_data', ')', ';', 'GST_DEBUG', '(', '""""', ',', 'self', '->', 'audio_ref_level', ')', ';', 'break', ';', 'case', '0x3d05', ':', 'if', '(', 'tag_size', '!=', '1', ')', 'goto', 'error', ';', 'self', '->', 'electro_spatial_formulation', '=', 'GST_READ_UINT8', '(', 'tag_data', ')', ';', 'GST_DEBUG', '(', '""""', ',', 'self', '->', 'electro_spatial_formulation', ')', ';', 'break', ';', 'case', '0x3d07', ':', 'if', '(', 'tag_size', '!=', '4', ')', 'goto', 'error', ';', 'self', '->', 'channel_count', '=', 'GST_READ_UINT32_BE', '(', 'tag_data', ')', ';', 'GST_DEBUG', '(', '""""', ',', 'self', '->', 'channel_count', ')', ';', 'break', ';', 'case', '0x3d01', ':', 'if', '(', 'tag_size', '!=', '4', ')', 'goto', 'error', ';', 'self', '->', 'quantization_bits', '=', 'GST_READ_UINT32_BE', '(', 'tag_data', ')', ';', 'GST_DEBUG', '(', '""""', ',', 'self', '->', 'quantization_bits', ')', ';', 'break', ';', 'case', '0x3d0c', ':', 'if', '(', 'tag_size', '!=', '1', ')', 'goto', 'error', ';', 'self', '->', 'dial_norm', '=', 'GST_READ_UINT8', '(', 'tag_data', ')', ';', 'GST_DEBUG', '(', '""""', ',', 'self', '->', 'dial_norm', ')', ';', 'break', ';', 'case', '0x3d06', ':', 'if', '(', 'tag_size', '!=', '16', ')', 'goto', 'error', ';', 'memcpy', '(', '&', 'self', '->', 'sound_essence_compression', ',', 'tag_data', ',', '16', ')', ';', 'GST_DEBUG', '(', '""""', ',', 'mxf_ul_to_string', '(', '&', 'self', '->', 'sound_essence_compression', ',', 'str', ')', ')', ';', 'break', ';', 'default', ':', 'ret', '=', '(', 'mxf_metadata_generic_sound_essence_descriptor_parent_class', ')', '->', '(', 'metadata', ',', 'primer', ',', 'tag', ',', 'tag_data', ',', 'tag_size', ')', ';', 'break', ';', '}', 'return', 'ret', ';', 'error', ':', '(', '""""', ',', 'tag', ',', 'tag_size', ')', ';', 'return', 'FALSE', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
852,"['print_end_redirection', '(', 'PRN', '*', 'prn', ')', '{', 'int', 'err', '=', '0', ';', 'if', '(', 'prn', '!=', 'NULL', ')', '{', 'if', '(', 'prn', '->', 'fixed', ')', '{', 'prn', '->', 'fixed', '=', '0', ';', '}', 'else', 'if', '(', 'prn', '->', 'fp', '!=', 'NULL', ')', '{', 'if', '(', 'prn', '->', 'fp', '!=', 'stdout', '&&', 'prn', '->', 'fp', '!=', 'stderr', ')', '{', 'fclose', '(', 'prn', '->', 'fp', ')', ';', '}', 'prn', '->', 'fp', '=', 'prn', '->', 'fpaux', ';', 'prn', '->', 'fpaux', '=', 'NULL', ';', '}', '}', 'else', '{', 'err', '=', '1', ';', '}', 'return', 'err', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
853,"['free_entry', '(', 'UResourceDataEntry', '*', 'entry', ')', '{', 'UResourceDataEntry', '*', 'alias', ';', 'res_unload', '(', '&', '(', 'entry', '->', 'fData', ')', ')', ';', 'if', '(', 'entry', '->', 'fName', '!=', 'NULL', '&&', 'entry', '->', 'fName', '!=', 'entry', '->', 'fNameBuffer', ')', '{', 'uprv_free', '(', 'entry', '->', 'fName', ')', ';', '}', 'if', '(', 'entry', '->', 'fPath', '!=', 'NULL', ')', '{', 'uprv_free', '(', 'entry', '->', 'fPath', ')', ';', '}', 'if', '(', 'entry', '->', 'fPool', '!=', 'NULL', ')', '{', '--', 'entry', '->', 'fPool', '->', 'fCountExisting', ';', '}', 'alias', '=', 'entry', '->', 'fAlias', ';', 'if', '(', 'alias', '!=', 'NULL', ')', '{', 'while', '(', 'alias', '->', 'fAlias', '!=', 'NULL', ')', '{', 'alias', '=', 'alias', '->', 'fAlias', ';', '}', '--', 'alias', '->', 'fCountExisting', ';', '}', 'uprv_free', '(', 'entry', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
854,"['gx_device_copy_color_procs', '(', 'gx_device', '*', 'dev', ',', 'const', 'gx_device', '*', 'target', ')', '{', 'dev_proc_map_cmyk_color', '(', '(', '*', 'from_cmyk', ')', ')', '=', 'dev_proc', '(', 'dev', ',', 'map_cmyk_color', ')', ';', 'dev_proc_map_rgb_color', '(', '(', '*', 'from_rgb', ')', ')', '=', 'dev_proc', '(', 'dev', ',', 'map_rgb_color', ')', ';', 'dev_proc_map_color_rgb', '(', '(', '*', 'to_rgb', ')', ')', '=', 'dev_proc', '(', 'dev', ',', 'map_color_rgb', ')', ';', '/', '*', 'The', 'logic', 'in', 'this', 'function', 'seems', 'a', 'bit', 'stale', ';', 'it', 'sets', 'old', '-', 'style', 'color', 'procs', ',', 'but', 'not', 'the', 'new', '(', 'get_color_mapping_procs', ',', 'get_color_comp_index', ',', 'encode_color', ',', 'and', 'decode_color', ')', '.', 'It', 'should', 'probably', 'copy', 'those', 'as', 'well', '.', 'if', '(', 'from_cmyk', '==', 'gx_forward_map_cmyk_color', '||', 'from_cmyk', '==', 'cmyk_1bit_map_cmyk_color', '||', 'from_cmyk', '==', 'cmyk_8bit_map_cmyk_color', ')', '{', 'from_cmyk', '=', 'dev_proc', '(', 'target', ',', 'map_cmyk_color', ')', ';', 'set_dev_proc', '(', 'dev', ',', 'map_cmyk_color', ',', '(', 'from_cmyk', '==', 'cmyk_1bit_map_cmyk_color', '||', 'from_cmyk', '==', 'cmyk_8bit_map_cmyk_color', '?', 'from_cmyk', ':', 'gx_forward_map_cmyk_color', ')', ')', ';', '}', 'if', '(', 'from_rgb', '==', 'gx_forward_map_rgb_color', '||', 'from_rgb', '==', 'gx_default_rgb_map_rgb_color', ')', '{', 'from_rgb', '=', 'dev_proc', '(', 'target', ',', 'map_rgb_color', ')', ';', 'set_dev_proc', '(', 'dev', ',', 'map_rgb_color', ',', '(', 'from_rgb', '==', 'gx_default_rgb_map_rgb_color', '?', 'from_rgb', ':', 'gx_forward_map_rgb_color', ')', ')', ';', '}', 'if', '(', 'to_rgb', '==', 'gx_forward_map_color_rgb', '||', 'to_rgb', '==', 'cmyk_1bit_map_color_rgb', '||', 'to_rgb', '==', 'cmyk_8bit_map_color_rgb', ')', '{', 'to_rgb', '=', 'dev_proc', '(', 'target', ',', 'map_color_rgb', ')', ';', 'set_dev_proc', '(', 'dev', ',', 'map_color_rgb', ',', '(', 'to_rgb', '==', 'cmyk_1bit_map_color_rgb', '||', 'to_rgb', '==', 'cmyk_8bit_map_color_rgb', '?', 'to_rgb', ':', 'gx_forward_map_color_rgb', ')', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
855,"['getContextName', '(', 'const', 'DIScope', '*', 'Context', ',', 'std', ':', ':', 'string', '&', 'N', ')', '{', 'if', '(', 'auto', '*', 'NS', '=', 'dyn_cast', '<', 'DINamespace', '>', '(', 'Context', ')', ')', '{', 'if', '(', '!NS', '->', 'getName', '(', ')', '.', 'empty', '(', ')', ')', '{', 'getContextName', '(', 'NS', '->', 'getScope', '(', ')', ',', 'N', ')', ';', 'N', '=', 'N', '+', 'NS', '->', 'getName', '(', ')', '.', 'str', '(', ')', '+', '""""', ';', '}', '}', 'else', 'if', '(', 'auto', '*', 'TY', '=', 'dyn_cast', '<', 'DIType', '>', '(', 'Context', ')', ')', '{', 'if', '(', '!TY', '->', 'getName', '(', ')', '.', 'empty', '(', ')', ')', '{', 'getContextName', '(', 'TY', '->', 'getScope', '(', ')', '.', 'resolve', '(', 'TypeIdentifierMap', ')', ',', 'N', ')', ';', 'N', '=', 'N', '+', 'TY', '->', 'getName', '(', ')', '.', 'str', '(', ')', '+', '""""', ';', '}', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
856,"['removeRows', '(', 'int', 'row', ',', 'int', 'count', ',', 'const', 'QModelIndex', '&', 'parent', ')', '{', 'Q_ASSERT_X', '(', '!m_UID', '.', 'isNull', '(', ')', ',', '""""', ',', '""""', ')', ';', 'if', '(', 'WarnDebuggingData', ')', 'qWarning', '(', ')', '<<', '""""', '<<', 'row', '<<', '""""', '<<', 'count', '<<', '""""', '<<', 'parent', ';', 'if', '(', 'row', '<', '0', ')', 'return', 'false', ';', 'setEditStrategy', '(', 'QSqlTableModel', ':', ':', 'OnRowChange', ')', ';', 'bool', 'toReturn', '=', 'false', ';', 'if', '(', 'QSqlTableModel', ':', ':', 'removeRows', '(', 'row', ',', 'count', ',', 'parent', ')', ')', '{', 'int', 'i', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'count', ';', '++', 'i', ')', '{', 'if', '(', 'm_DirtyRows', '.', 'contains', '(', 'row', '+', 'i', ')', ')', 'm_DirtyRows', '.', 'remove', '(', 'row', '+', 'i', ')', ';', '}', 'toReturn', '=', 'true', ';', '}', 'setEditStrategy', '(', 'QSqlTableModel', ':', ':', 'OnManualSubmit', ')', ';', 'return', 'toReturn', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
857,"['hit_structure', '(', ')', '{', 'int', 'x1', ',', 'y1', ';', 'int', 'i', ',', 'ch', ';', '/', '/', 'Check', 'bolts', '/', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'MAX_BOLTS', ';', 'i', '++', ')', '{', 'if', '(', '!boltst', '[', 'i', ']', ')', 'continue', ';', 'x1', '=', '(', 'boltx', '[', 'i', ']', '&', '(', 'WORLD_SIZEX', '-', '1', ')', ')', '>>', '4', ';', 'y1', '=', '(', 'bolty', '[', 'i', ']', '&', '(', 'WORLD_SIZEY', '-', '1', ')', ')', '>>', '4', ';', 'ch', '=', 'screen', '.', 'get_map', '(', 'x1', ',', 'y1', ')', ';', 'if', '(', '!IS_SPACE', '(', 'ch', ')', '&&', '(', 'ch', '&', 'HIT_MASK', ')', ')', '{', 'sound', '.', 'g_bolt_hit', '(', 'x1', '<<', '12', ',', 'y1', '<<', '12', ')', ';', 'enemies', '.', 'make', '(', '&', 'boltexpl', ',', 'boltx', '[', 'i', ']', ',', 'bolty', '[', 'i', ']', ')', ';', 'boltst', '[', 'i', ']', '=', '0', ';', 'if', '(', 'bolt_objects', '[', 'i', ']', ')', 'gengine', '->', 'free_obj', '(', 'bolt_objects', '[', 'i', ']', ')', ';', 'bolt_objects', '[', 'i', ']', '=', 'NULL', ';', '}', '}', '/', '/', 'Check', 'player', '/', 'x1', '=', '(', 'x', '&', '(', 'WORLD_SIZEX', '-', '1', ')', ')', '>>', '4', ';', 'y1', '=', '(', 'y', '&', '(', 'WORLD_SIZEY', '-', '1', ')', ')', '>>', '4', ';', 'ch', '=', 'screen', '.', 'get_map', '(', 'x1', ',', 'y1', ')', ';', 'if', '(', '!IS_SPACE', '(', 'ch', ')', '&&', '(', 'ch', '&', 'HIT_MASK', ')', ')', '{', 'if', '(', 'prefs', '->', 'cmd_indicator', ')', 'sound', '.', 'g_player_damage', '(', ')', ';', '_myship', ':', ':', 'hit', '(', '1000', ')', ';', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
858,"['toDocBuffer', '(', 'OutBuffer', '*', 'buf', ',', 'Scope', '*', 'sc', ')', '{', '/', '/', 'printf', '(', '""""', ',', 'toChars', '(', ')', ')', ';', 'if', '(', 'ident', ')', '{', 'if', '(', 'isDeprecated', '(', ')', ')', 'buf', '->', 'writestring', '(', '""""', ')', ';', 'emitProtection', '(', 'buf', ',', 'protection', ')', ';', 'buf', '->', 'printf', '(', '""""', ',', 'toChars', '(', ')', ')', ';', 'if', '(', 'Dsymbol', '*', 's', '=', 'aliassym', ')', '/', '/', 'ident', '{', 'prettyPrintDsymbol', '(', 'buf', ',', 's', ',', 'parent', ')', ';', '}', 'else', 'if', '(', 'Type', '*', 'type', '=', 'getType', '(', ')', ')', '/', '/', 'type', '{', 'if', '(', 'type', '->', 'ty', '==', 'Tclass', '||', 'type', '->', 'ty', '==', 'Tstruct', '||', 'type', '->', 'ty', '==', 'Tenum', ')', '{', 'if', '(', 'Dsymbol', '*', 's', '=', 'type', '->', 'toDsymbol', '(', 'NULL', ')', ')', '/', '/', 'elaborate', 'prettyPrintDsymbol', '(', 'buf', ',', 's', ',', 'parent', ')', ';', 'buf', '->', 'writestring', '(', 'type', '->', 'toChars', '(', ')', ')', ';', '}', '{', '/', '/', 'simple', 'buf', '->', 'writestring', '(', 'type', '->', 'toChars', '(', ')', ')', ';', '}', '}', 'buf', '->', 'writestring', '(', '""""', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
859,"['sms_extract_concatenation', '(', 'const', 'struct', 'sms', '*', 'sms', ',', 'guint16', '*', 'ref_num', ',', 'guint8', '*', 'max_msgs', ',', 'guint8', '*', 'seq_num', ')', '{', 'struct', 'sms_udh_iter', 'iter', ';', 'enum', 'sms_iei', 'iei', ';', 'guint8', 'concat_hdr', '[', '4', ']', ';', 'guint16', 'uninitialized_var', '(', 'rn', ')', ';', 'guint8', 'uninitialized_var', '(', 'max', ')', ',', 'uninitialized_var', '(', 'seq', ')', ';', 'gboolean', 'concatenated', '=', 'FALSE', ';', '/', '*', 'We', 'must', 'ignore', 'the', 'entire', 'user_data', 'header', 'here', ':', '*', 'If', 'the', 'length', 'of', 'the', 'User', 'Data', 'Header', 'is', 'such', 'that', '*', 'are', 'too', 'few', 'or', 'too', 'many', 'octets', 'in', 'the', 'final', '*', 'Element', 'then', 'the', 'whole', 'User', 'Data', 'Header', 'shall', 'be', 'ignored', '.', 'if', '(', '!sms_udh_iter_init', '(', 'sms', ',', '&', 'iter', ')', ')', 'return', 'FALSE', ';', '/', '*', 'According', 'to', 'the', 'specification', ',', 'we', 'have', 'to', 'use', 'the', '*', 'useable', 'header', ':', '*', 'In', 'the', 'event', 'that', 'IEs', 'determined', 'as', 'not', 'repeatable', '*', 'duplicated', ',', 'the', 'last', 'occurrence', 'of', 'the', 'IE', 'shall', 'be', 'used', '.', '*', 'In', 'the', 'event', 'that', 'two', 'or', 'more', 'IEs', 'occur', 'which', 'have', '*', 'exclusive', 'meanings', '(', 'e', '.', 'g', '.', 'an', '8bit', 'port', 'address', 'and', 'a', '*', 'port', 'address', ')', ',', 'then', 'the', 'last', 'occurring', 'IE', 'shall', 'be', 'used', '.', 'while', '(', '(', 'iei', '=', 'sms_udh_iter_get_ie_type', '(', '&', 'iter', ')', ')', '!=', 'SMS_IEI_INVALID', ')', '{', 'switch', '(', 'iei', ')', '{', 'case', 'SMS_IEI_CONCATENATED_8BIT', ':', 'if', '(', 'sms_udh_iter_get_ie_length', '(', '&', 'iter', ')', '!=', '3', ')', 'break', ';', 'sms_udh_iter_get_ie_data', '(', '&', 'iter', ',', 'concat_hdr', ')', ';', 'if', '(', 'concat_hdr', '[', '1', ']', '==', '0', ')', 'break', ';', 'if', '(', 'concat_hdr', '[', '2', ']', '==', '0', '||', 'concat_hdr', '[', '2', ']', '>', 'concat_hdr', '[', '1', ']', ')', 'break', ';', 'rn', '=', 'concat_hdr', '[', '0', ']', ';', 'max', '=', 'concat_hdr', '[', '1', ']', ';', 'seq', '=', 'concat_hdr', '[', '2', ']', ';', 'concatenated', '=', 'TRUE', ';', 'break', ';', 'case', 'SMS_IEI_CONCATENATED_16BIT', ':', 'if', '(', 'sms_udh_iter_get_ie_length', '(', '&', 'iter', ')', '!=', '4', ')', 'break', ';', 'sms_udh_iter_get_ie_data', '(', '&', 'iter', ',', 'concat_hdr', ')', ';', 'if', '(', 'concat_hdr', '[', '2', ']', '==', '0', ')', 'break', ';', 'if', '(', 'concat_hdr', '[', '3', ']', '==', '0', '||', 'concat_hdr', '[', '3', ']', '>', 'concat_hdr', '[', '2', ']', ')', 'break', ';', 'rn', '=', '(', 'concat_hdr', '[', '0', ']', '<<', '8', ')', '|', 'concat_hdr', '[', '1', ']', ';', 'max', '=', 'concat_hdr', '[', '2', ']', ';', 'seq', '=', 'concat_hdr', '[', '3', ']', ';', 'concatenated', '=', 'TRUE', ';', 'break', ';', 'default', ':', 'break', ';', '}', 'sms_udh_iter_next', '(', '&', 'iter', ')', ';', '}', 'if', '(', '!concatenated', ')', 'return', 'FALSE', ';', 'if', '(', 'ref_num', ')', '*', 'ref_num', '=', 'rn', ';', 'if', '(', 'max_msgs', ')', '*', 'max_msgs', '=', 'max', ';', 'if', '(', 'seq_num', ')', '*', 'seq_num', '=', 'seq', ';', 'return', 'TRUE', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
860,"['i915_update_sprite_point_enable', '(', 'struct', 'gl_context', '*', 'ctx', ')', '{', 'struct', 'intel_context', '*', 'intel', '=', 'intel_context', '(', 'ctx', ')', ';', 'struct', 'i915_fragment_program', '*', 'p', '=', '(', 'struct', 'i915_fragment_program', '*', ')', 'ctx', '->', 'FragmentProgram', '.', '_Current', ';', 'const', 'GLbitfield64', 'inputsRead', '=', 'p', '->', 'FragProg', '.', 'Base', '.', 'InputsRead', ';', 'struct', 'i915_context', '*', 'i915', '=', 'i915_context', '(', 'ctx', ')', ';', 'GLuint', 's4', '=', 'i915', '->', 'state', '.', 'Ctx', '[', 'I915_CTXREG_LIS4', ']', '&', '~S4_VFMT_MASK', ';', 'int', 'i', ';', 'GLuint', 'coord_replace_bits', '=', '0x0', ';', 'GLuint', 'tex_coord_unit_bits', '=', '0x0', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'ctx', '->', 'Const', '.', 'MaxTextureCoordUnits', ';', 'i', '++', ')', '{', 'if', '(', 'ctx', '->', 'Point', '.', 'CoordReplace', '[', 'i', ']', '&&', 'ctx', '->', 'Point', '.', 'PointSprite', ')', 'coord_replace_bits', '|=', '(', '1', '<<', 'i', ')', ';', 'if', '(', 'inputsRead', '&', 'VARYING_BIT_TEX', '(', 'i', ')', ')', 'tex_coord_unit_bits', '|=', '(', '1', '<<', 'i', ')', ';', '}', '/', '*', '*', 'Here', 'we', ""can't"", 'enable', 'the', 'SPRITE_POINT_ENABLE', 'bit', 'when', 'the', 'mis', '-', '*', 'of', 'tex_coord_unit_bits', 'and', 'coord_replace_bits', ',', 'or', 'this', 'will', 'make', '*', 'the', 'other', 'non', '-', 'point', '-', 'sprite', 'coords', '(', 'like', 'varying', 'inputs', ',', 'as', 'we', 'now', '*', 'tex', 'coord', 'to', 'implement', 'varying', 'inputs', ')', 'be', 'replaced', 'to', 'value', '(', '0', ',', '0', ')', '-', '(', '1', ',', '1', ')', '.', '*', '*', 'Thus', ',', 'do', 'fallback', 'when', 'needed', '.', 'FALLBACK', '(', 'intel', ',', 'I915_FALLBACK_COORD_REPLACE', ',', 'coord_replace_bits', '&&', 'coord_replace_bits', '!=', 'tex_coord_unit_bits', ')', ';', 's4', '&=', '~S4_SPRITE_POINT_ENABLE', ';', 's4', '|=', '(', 'coord_replace_bits', '&&', 'coord_replace_bits', '==', 'tex_coord_unit_bits', ')', '?', 'S4_SPRITE_POINT_ENABLE', ':', '0', ';', 'if', '(', 's4', '!=', 'i915', '->', 'state', '.', 'Ctx', '[', 'I915_CTXREG_LIS4', ']', ')', '{', 'i915', '->', 'state', '.', 'Ctx', '[', 'I915_CTXREG_LIS4', ']', '=', 's4', ';', 'I915_STATECHANGE', '(', 'i915', ',', 'I915_UPLOAD_CTX', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
861,"['fill', '(', 'Home', 'home', ',', 'Float', ':', ':', 'Linear', ':', ':', 'Term', '*', '&', 'tf', ',', 'FloatVal', 'm', ',', 'FloatVal', '&', 'd', ')', 'const', '{', 'switch', '(', 'this', '->', 't', ')', '{', 'case', 'NT_CONST', ':', 'Float', ':', ':', 'Limits', ':', ':', 'check', '(', 'm', '*', 'c', ',', '""""', ')', ';', 'd', '+=', 'm', '*', 'c', ';', 'break', ';', 'case', 'NT_VAR', ':', 'Float', ':', ':', 'Limits', ':', ':', 'check', '(', 'm', '*', 'a', ',', '""""', ')', ';', 'tf', '->', 'a', '=', 'm', '*', 'a', ';', 'tf', '->', 'x', '=', 'x_float', ';', 'tf', '++', ';', 'break', ';', 'case', 'NT_NONLIN', ':', 'tf', '->', 'a', '=', 'm', ';', 'tf', '->', 'x', '=', 'sum', '.', 'ne', '->', 'post', '(', 'home', ',', 'NULL', ')', ';', 'tf', '++', ';', 'break', ';', 'case', 'NT_SUM', ':', 'for', '(', 'int', 'i', '=', 'n_float', ';', 'i', '--', ';', ')', '{', 'Float', ':', ':', 'Limits', ':', ':', 'check', '(', 'm', '*', 'sum', '.', 'tf', '[', 'i', ']', '.', 'a', ',', '""""', ')', ';', 'tf', '[', 'i', ']', '.', 'x', '=', 'sum', '.', 'tf', '[', 'i', ']', '.', 'x', ';', 'tf', '[', 'i', ']', '.', 'a', '=', 'm', '*', 'sum', '.', 'tf', '[', 'i', ']', '.', 'a', ';', '}', 'tf', '+=', 'n_float', ';', 'break', ';', 'case', 'NT_ADD', ':', 'if', '(', 'l', '==', 'NULL', ')', '{', 'Float', ':', ':', 'Limits', ':', ':', 'check', '(', 'm', '*', 'c', ',', '""""', ')', ';', 'd', '+=', 'm', '*', 'c', ';', '}', 'else', '{', 'l', '->', 'fill', '(', 'home', ',', 'tf', ',', 'm', ',', 'd', ')', ';', '}', 'r', '->', 'fill', '(', 'home', ',', 'tf', ',', 'm', ',', 'd', ')', ';', 'break', ';', 'case', 'NT_SUB', ':', 'if', '(', 'l', '==', 'NULL', ')', '{', 'Float', ':', ':', 'Limits', ':', ':', 'check', '(', 'm', '*', 'c', ',', '""""', ')', ';', 'd', '+=', 'm', '*', 'c', ';', '}', 'else', '{', 'l', '->', 'fill', '(', 'home', ',', 'tf', ',', 'm', ',', 'd', ')', ';', '}', 'r', '->', 'fill', '(', 'home', ',', 'tf', ',', '-', 'm', ',', 'd', ')', ';', 'break', ';', 'case', 'NT_MUL', ':', 'Float', ':', ':', 'Limits', ':', ':', 'check', '(', 'm', '*', 'a', ',', '""""', ')', ';', 'l', '->', 'fill', '(', 'home', ',', 'tf', ',', 'm', '*', 'a', ',', 'd', ')', ';', 'break', ';', 'default', ':', 'GECODE_NEVER', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
862,"['pt2258_stereo_volume_put', '(', 'struct', 'snd_kcontrol', '*', 'kcontrol', ',', 'struct', 'snd_ctl_elem_value', '*', 'ucontrol', ')', '{', 'struct', 'snd_pt2258', '*', 'pt', '=', 'kcontrol', '->', 'private_data', ';', 'int', 'base', '=', 'kcontrol', '->', 'private_value', ';', 'unsigned', 'char', 'bytes', '[', '2', ']', ';', 'int', 'val0', ',', 'val1', ';', 'val0', '=', '79', '-', 'ucontrol', '->', 'value', '.', 'integer', '.', 'value', '[', '0', ']', ';', 'val1', '=', '79', '-', 'ucontrol', '->', 'value', '.', 'integer', '.', 'value', '[', '1', ']', ';', 'if', '(', 'val0', '<', '0', '||', 'val0', '>', '79', '||', 'val1', '<', '0', '||', 'val1', '>', '79', ')', 'return', '-', 'EINVAL', ';', 'if', '(', 'val0', '==', 'pt', '->', 'volume', '[', 'base', ']', '&&', 'val1', '==', 'pt', '->', 'volume', '[', 'base', '+', '1', ']', ')', 'return', '0', ';', 'pt', '->', 'volume', '[', 'base', ']', '=', 'val0', ';', 'bytes', '[', '0', ']', '=', 'pt2258_channel_code', '[', '2', '*', 'base', ']', '|', '(', 'val0', '/', '10', ')', ';', 'bytes', '[', '1', ']', '=', 'pt2258_channel_code', '[', '2', '*', 'base', '+', '1', ']', '|', '(', 'val0', '%', '10', ')', ';', 'snd_i2c_lock', '(', 'pt', '->', 'i2c_bus', ')', ';', 'if', '(', 'snd_i2c_sendbytes', '(', 'pt', '->', 'i2c_dev', ',', 'bytes', ',', '2', ')', '!=', '2', ')', 'goto', '__error', ';', 'snd_i2c_unlock', '(', 'pt', '->', 'i2c_bus', ')', ';', 'pt', '->', 'volume', '[', 'base', '+', '1', ']', '=', 'val1', ';', 'bytes', '[', '0', ']', '=', 'pt2258_channel_code', '[', '2', '*', 'base', '+', '2', ']', '|', '(', 'val1', '/', '10', ')', ';', 'bytes', '[', '1', ']', '=', 'pt2258_channel_code', '[', '2', '*', 'base', '+', '3', ']', '|', '(', 'val1', '%', '10', ')', ';', 'snd_i2c_lock', '(', 'pt', '->', 'i2c_bus', ')', ';', 'if', '(', 'snd_i2c_sendbytes', '(', 'pt', '->', 'i2c_dev', ',', 'bytes', ',', '2', ')', '!=', '2', ')', 'goto', '__error', ';', 'snd_i2c_unlock', '(', 'pt', '->', 'i2c_bus', ')', ';', 'return', '1', ';', '__error', ':', 'snd_i2c_unlock', '(', 'pt', '->', 'i2c_bus', ')', ';', 'snd_printk', '(', 'KERN_ERR', '""""', ')', ';', 'return', '-', 'EIO', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
863,"['adjust_task_time', '(', 'offset', ')', 'int', 'offset', ';', '{', 'TaskData', '*', 'td', ';', 'int', 'st', '=', 'get_selected_task', '(', ')', ';', 'if', '(', 'st', '<', '0', ')', '{', 'create_confirm_window', '(', 'CONFIRM_ERROR', ',', 'gettext', '(', '""""', ')', ',', 'gettext', '(', '""""', ')', ',', 'gettext', '(', '""""', ')', ',', 'NULL', ',', 'NULL', ',', 'NULL', ',', 'NULL', ',', 'NULL', ',', 'NULL', ')', ';', '}', 'else', '{', 'update_tasks', '(', ')', ';', 'td', '=', 'visible_tasks', '[', 'st', ']', ';', 'if', '(', 'td', '->', 'todays_entry', '==', 'NULL', ')', 'td', '->', 'todays_entry', '=', 'taskNewTimeEntry', '(', 'td', '->', 'task', ',', 'today_year', ',', 'today_mon', ',', 'today_mday', ')', ';', 'if', '(', 'offset', '==', '0', ')', '{', 'cutBuffer', '=', 'td', '->', 'todays_entry', '->', 'seconds', ';', 'td', '->', 'todays_entry', '->', 'seconds', '=', '0', ';', '}', 'else', 'if', '(', 'offset', '<', '0', ')', '{', 'if', '(', 'td', '->', 'todays_entry', '->', 'seconds', '<', '(', '0', '-', 'offset', ')', ')', '{', 'cutBuffer', '+=', 'td', '->', 'todays_entry', '->', 'seconds', ';', 'td', '->', 'todays_entry', '->', 'seconds', '=', '0', ';', '}', 'else', '{', 'cutBuffer', '+=', '-', 'offset', ';', 'td', '->', 'todays_entry', '->', 'seconds', '+=', 'offset', ';', '}', '}', 'else', '{', 'td', '->', 'todays_entry', '->', 'seconds', '+=', 'offset', ';', '}', 'modified_since_save', '=', '1', ';', 'update_list', '(', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
864,"['writeToElement', '(', 'QDomElement', '&', 'ercElement', ',', 'QDomDocument', '&', 'doc', ')', '{', 'switch', '(', 'm_eType', ')', '{', 'case', 'Ground', ':', 'ercElement', '.', 'setAttribute', '(', '""""', ',', '""""', ')', ';', 'writeCurrent', '(', 'ercElement', ',', 'doc', ')', ';', 'break', ';', 'case', 'VCC', ':', 'ercElement', '.', 'setAttribute', '(', '""""', ',', '""""', ')', ';', 'writeCurrent', '(', 'ercElement', ',', 'doc', ')', ';', 'writeVoltage', '(', 'ercElement', ',', 'doc', ')', ';', 'break', ';', 'default', ':', 'return', 'false', ';', '}', 'return', 'true', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
865,"['{', 'char', '*', 'last_host', '=', 'NULL', ';', 'int', 'last_host_len', '=', '256', ';', 'Cglobals_get', '(', '&', 'last_host_key', ',', '(', 'void', '*', '*', ')', '&', 'last_host', ',', 'last_host_len', ')', ';', 'TRACE', '(', '4', ',', '""""', ',', '""""', ',', 'last_host', ')', ';', 'return', '(', 'last_host', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
866,"['dumpGraph', '(', 'mcGraph', '*', 'mcG', ',', 'char', '*', 'fname', ')', '{', 'FILE', '*', 'fp', '=', 'fopen', '(', 'fname', ',', '""""', ')', ';', 'int', 'id', ',', 'id2', ',', 'idx', ';', 'mcLevel', '*', 'l', ';', 'mcLevel', '*', 'nextl', ';', 'mcNode', '*', 'n', ';', 'mcNode', '*', 'nn', ';', 'mcEdge', '*', 'e', ';', 'int', 'dely', '=', '72', ';', 'int', 'delx', '=', '100', ';', 'char', '*', 'color', ';', 'char', 'buf', '[', '512', ']', ';', 'char', 'buf2', '[', '512', ']', ';', 'int', 'width', ',', 'maxl', ';', 'if', '(', '!fp', ')', '{', 'fprintf', '(', 'stderr', ',', '""""', ',', 'fname', ')', ';', 'return', ';', '}', 'fputs', '(', '""""', ',', 'fp', ')', ';', 'fputs', '(', '""""', ',', 'fp', ')', ';', 'maxl', '=', '0', ';', 'for', '(', 'idx', '=', '0', ';', 'idx', '<', 'mcG', '->', 'lvl_cnt', ';', 'idx', '++', ')', '{', 'l', '=', 'mcG', '->', 'lvls', '[', 'idx', ']', ';', 'if', '(', 'l', '->', 'nodecnt', '>', 'maxl', ')', 'maxl', '=', 'l', '->', 'nodecnt', ';', '}', 'width', '=', 'delx', '*', '(', 'maxl', '+', '2', ')', ';', 'for', '(', 'idx', '=', '0', ';', 'idx', '<', 'mcG', '->', 'lvl_cnt', ';', 'idx', '++', ')', '{', 'l', '=', 'mcG', '->', 'lvls', '[', 'idx', ']', ';', 'delx', '=', 'width', '/', '(', 'l', '->', 'nodecnt', '+', '1', ')', ';', 'for', '(', 'id', '=', '0', ';', 'id', '<', 'l', '->', 'nodecnt', ';', 'id', '++', ')', '{', 'n', '=', 'l', '->', 'nodes', '[', 'id', ']', ';', 'sprintf', '(', 'buf', ',', '""""', ',', 'agnameof', '(', 'n', '->', 'node', ')', ',', 'n', '->', 'order', ')', ';', 'if', '(', 'n', '->', 'group', ')', 'color', '=', '""""', ';', 'color', '=', '""""', ';', 'fprintf', '(', 'fp', ',', '""""', '%', 's\\""""', '%', 'd', ',', '%', 'd\\""""', ',', 'buf', ',', '(', 'id', '+', '1', ')', '*', 'delx', ',', '-', 'dely', '*', 'idx', ',', 'color', ')', ';', '}', '}', 'for', '(', 'idx', '=', '0', ';', 'idx', '<', 'mcG', '->', 'lvl_cnt', '-', '1', ';', 'idx', '++', ')', '{', 'l', '=', 'mcG', '->', 'lvls', '[', 'idx', ']', ';', 'nextl', '=', 'mcG', '->', 'lvls', '[', 'idx', '+', '1', ']', ';', 'for', '(', 'id', '=', '0', ';', 'id', '<', 'l', '->', 'nodecnt', ';', 'id', '++', ')', '{', 'n', '=', 'l', '->', 'nodes', '[', 'id', ']', ';', 'sprintf', '(', 'buf', ',', '""""', ',', 'agnameof', '(', 'n', '->', 'node', ')', ',', 'n', '->', 'order', ')', ';', 'for', '(', 'id2', '=', '0', ';', 'id2', '<', 'n', '->', 'high_edgs_cnt', ';', 'id2', '++', ')', '{', 'e', '=', 'n', '->', 'high_edgs', '[', 'id2', ']', ';', 'nn', '=', 'e', '->', 'higherN', ';', 'sprintf', '(', 'buf2', ',', '""""', ',', 'agnameof', '(', 'nn', '->', 'node', ')', ',', 'nn', '->', 'order', ')', ';', 'if', '(', 'e', '->', 'penalty', '>', '1', ')', 'color', '=', '""""', ';', 'color', '=', '""""', ';', 'fprintf', '(', 'fp', ',', '""""', '%', 's\\""""', '%', 's\\""""', ',', 'buf', ',', 'buf2', ',', 'color', ')', ';', '}', '}', '}', 'fputs', '(', '""""', ',', 'fp', ')', ';', 'fclose', '(', 'fp', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
867,"['remove_conditions_and_labels', '(', 'loop_p', 'loop', ')', '{', 'gimple_stmt_iterator', 'gsi', ';', 'unsigned', 'int', 'i', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'loop', '->', 'num_nodes', ';', 'i', '++', ')', '{', 'basic_block', 'bb', '=', 'ifc_bbs', '[', 'i', ']', ';', 'if', '(', 'bb_with_exit_edge_p', '(', 'loop', ',', 'bb', ')', '||', 'bb', '==', 'loop', '->', 'latch', ')', 'continue', ';', 'for', '(', 'gsi', '=', 'gsi_start_bb', '(', 'bb', ')', ';', '!gsi_end_p', '(', 'gsi', ')', ';', ')', 'switch', '(', 'gimple_code', '(', 'gsi_stmt', '(', 'gsi', ')', ')', ')', '{', 'case', 'GIMPLE_COND', ':', 'case', 'GIMPLE_LABEL', ':', 'gsi_remove', '(', '&', 'gsi', ',', 'true', ')', ';', 'break', ';', 'case', 'GIMPLE_DEBUG', ':', 'if', '(', 'gimple_debug_bind_p', '(', 'gsi_stmt', '(', 'gsi', ')', ')', ')', '{', 'gimple_debug_bind_reset_value', '(', 'gsi_stmt', '(', 'gsi', ')', ')', ';', 'update_stmt', '(', 'gsi_stmt', '(', 'gsi', ')', ')', ';', '}', 'gsi_next', '(', '&', 'gsi', ')', ';', 'break', ';', 'default', ':', 'gsi_next', '(', '&', 'gsi', ')', ';', '}', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
868,"['mapToSource', '(', 'const', 'QModelIndexList', '&', 'list', ')', '{', 'QModelIndexList', 'originalList', ';', 'foreach', '(', 'const', 'QModelIndex', '&', 'index', ',', 'list', ')', '{', 'QModelIndex', 'originalIndex', '=', 'mapToSource', '(', 'index', ')', ';', 'if', '(', 'originalIndex', '.', 'isValid', '(', ')', ')', 'originalList', '<<', 'originalIndex', ';', '}', 'return', 'originalList', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
869,"['kvm_io_bus_unregister_dev', '(', 'struct', 'kvm', '*', 'kvm', ',', 'enum', 'kvm_bus', 'bus_idx', ',', 'struct', 'kvm_io_device', '*', 'dev', ')', '{', 'int', 'i', ';', 'struct', 'kvm_io_bus', '*', 'new_bus', ',', '*', 'bus', ';', 'bus', '=', 'kvm', '->', 'buses', '[', 'bus_idx', ']', ';', 'if', '(', '!bus', ')', 'return', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'bus', '->', 'dev_count', ';', 'i', '++', ')', 'if', '(', 'bus', '->', 'range', '[', 'i', ']', '.', 'dev', '==', 'dev', ')', '{', 'break', ';', '}', 'if', '(', 'i', '==', 'bus', '->', 'dev_count', ')', 'return', ';', 'new_bus', '=', 'kmalloc', '(', 'sizeof', '(', '*', 'bus', ')', '+', '(', '(', 'bus', '->', 'dev_count', '-', '1', ')', '*', 'sizeof', '(', 'struct', 'kvm_io_range', ')', ')', ',', 'GFP_KERNEL', ')', ';', 'if', '(', '!new_bus', ')', '{', 'pr_err', '(', '""""', ')', ';', 'goto', 'broken', ';', '}', 'memcpy', '(', 'new_bus', ',', 'bus', ',', 'sizeof', '(', '*', 'bus', ')', '+', 'i', '*', 'sizeof', '(', 'struct', 'kvm_io_range', ')', ')', ';', 'new_bus', '->', 'dev_count', '--', ';', 'memcpy', '(', 'new_bus', '->', 'range', '+', 'i', ',', 'bus', '->', 'range', '+', 'i', '+', '1', ',', '(', 'new_bus', '->', 'dev_count', '-', 'i', ')', '*', 'sizeof', '(', 'struct', 'kvm_io_range', ')', ')', ';', 'broken', ':', 'rcu_assign_pointer', '(', 'kvm', '->', 'buses', '[', 'bus_idx', ']', ',', 'new_bus', ')', ';', 'synchronize_srcu_expedited', '(', '&', 'kvm', '->', 'srcu', ')', ';', 'kfree', '(', 'bus', ')', ';', 'return', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
870,"['sanei_genesys_set_buffer_address', '(', 'Genesys_Device', '*', 'dev', ',', 'uint32_t', 'addr', ')', '{', 'SANE_Status', 'status', ';', 'if', '(', 'dev', '->', 'model', '->', 'asic_type', '==', '||', 'dev', '->', 'model', '->', 'asic_type', '==', '||', 'dev', '->', 'model', '->', 'asic_type', '==', 'GENESYS_GL124', ')', '{', 'DBG', '(', 'DBG_warn', ',', '""""', ')', ';', 'return', 'SANE_STATUS_GOOD', ';', '}', 'DBG', '(', 'DBG_io', ',', '""""', ',', 'addr', '&', '0xfffffff0', ')', ';', 'addr', '=', 'addr', '>>', '4', ';', 'status', '=', 'sanei_genesys_write_register', '(', 'dev', ',', '0x2b', ',', '(', 'addr', '&', '0xff', ')', ')', ';', 'if', '(', 'status', '!=', 'SANE_STATUS_GOOD', ')', '{', 'DBG', '(', 'DBG_error', ',', '""""', ',', 'sane_strstatus', '(', 'status', ')', ')', ';', 'return', 'status', ';', '}', 'addr', '=', 'addr', '>>', '8', ';', 'status', '=', 'sanei_genesys_write_register', '(', 'dev', ',', '0x2a', ',', '(', 'addr', '&', '0xff', ')', ')', ';', 'if', '(', 'status', '!=', 'SANE_STATUS_GOOD', ')', '{', 'DBG', '(', 'DBG_error', ',', '""""', ',', 'sane_strstatus', '(', 'status', ')', ')', ';', 'return', 'status', ';', '}', 'DBG', '(', 'DBG_io', ',', '""""', ')', ';', 'return', 'status', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
871,"['fs_binding_get_vals', '(', 'fs_binding', '*', 'b', ',', 'const', 'char', '*', 'name', ',', 'int', '*', 'bound', ')', '{', '#ifdef', 'if', '(', '!strcmp', '(', 'DEBUG_BINDING', ',', 'name', ')', ')', 'printf', '(', '""""DEBUG_BINDING""""', ')', ';', 'int', 'i', ';', 'for', '(', 'i', '=', '0', ';', '1', ';', 'i', '++', ')', '{', 'if', '(', '!b', '[', 'i', ']', '.', 'name', ')', 'break', ';', 'if', '(', '!strcmp', '(', 'b', '[', 'i', ']', '.', 'name', ',', 'name', ')', ')', '{', 'if', '(', 'bound', ')', '*', 'bound', '=', 'b', '[', 'i', ']', '.', 'bound', ';', 'return', 'b', '[', 'i', ']', '.', 'vals', ';', '}', '}', '/', '*', 'fs_error', '(', 'LOG_ERR', ',', '""""', ',', 'name', ')', ';', 'return', 'NULL', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
872,"['spif_linked_list_done', '(', 'spif_linked_list_t', 'self', ')', '{', 'spif_linked_list_item_t', 'current', ';', 'ASSERT_RVAL', '(', '!SPIF_LIST_ISNULL', '(', 'self', ')', ',', 'FALSE', ')', ';', 'if', '(', 'self', '->', 'len', ')', '{', 'for', '(', 'current', '=', 'self', '->', 'head', ';', 'current', ';', ')', '{', 'spif_linked_list_item_t', 'tmp', ';', 'tmp', '=', 'current', ';', 'current', '=', 'current', '->', 'next', ';', 'spif_linked_list_item_del', '(', 'tmp', ')', ';', '}', 'self', '->', 'len', '=', '0', ';', 'self', '->', 'head', '=', 'SPIF_NULL_TYPE', '(', 'linked_list_item', ')', ';', '}', 'return', 'TRUE', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
873,"['left_callback', '(', 'int', 'count', ',', 'int', 'key', ')', '{', 'reset_indent', '(', ')', ';', 'if', '(', 'rl_point', '>', '0', ')', '{', 'int', 'i', '=', 'line_start', '(', 'rl_point', ')', ';', 'rl_point', '=', '(', 'i', '==', '0', '||', 'rl_point', '-', 'i', '>', 'prompt_length', ')', '?', 'rl_point', '-', '1', ':', 'i', '-', '1', ';', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
874,"['show_page_by_url', '(', 'const', 'char', '*', 'browser', ',', 'const', 'char', '*', 'url', ')', '{', 'char', 'com', '[', '1024', ']', ';', '/', '*', '*', 'Browsers', 'which', 'have', 'openURL', '(', ')', 'command', '.', 'if', '(', 'locatestring', '(', 'browser', ',', '""""', ',', 'MATCH_AT_LAST', ')', '||', 'locatestring', '(', 'browser', ',', '""""', ',', 'MATCH_AT_LAST', ')', '||', 'locatestring', '(', 'browser', ',', '""""', ',', 'MATCH_AT_LAST', ')', ')', '{', 'char', '*', 'path', ';', 'if', '(', '!', '(', 'path', '=', 'usable', '(', 'browser', ')', ')', ')', 'die', '(', '""""', ',', 'browser', ')', ';', 'snprintf', '(', 'com', ',', 'sizeof', '(', 'com', ')', ',', '""""openURL', '(', '%', 's', ')', '\\""""', ',', 'path', ',', 'url', ')', ';', '}', '/', '*', '*', 'Generic', 'browser', '.', 'else', '{', 'snprintf', '(', 'com', ',', 'sizeof', '(', 'com', ')', ',', '""""', '%', 's\\""""', ',', 'browser', ',', 'url', ')', ';', '}', 'system', '(', 'com', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
875,"['gst_caps_from_string', '(', 'const', 'gchar', '*', 'string', ')', '{', 'GstCaps', '*', 'caps', ';', 'g_return_val_if_fail', '(', 'string', ',', 'FALSE', ')', ';', 'caps', '=', 'gst_caps_new_empty', '(', ')', ';', 'if', '(', 'gst_caps_from_string_inplace', '(', 'caps', ',', 'string', ')', ')', '{', 'return', 'caps', ';', '}', 'else', '{', 'gst_caps_unref', '(', 'caps', ')', ';', 'return', 'NULL', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
876,"['data_stack_grow', '(', 'SRE_STATE', '*', 'state', ',', 'Py_ssize_t', 'size', ')', '{', 'Py_ssize_t', 'minsize', ',', 'cursize', ';', 'minsize', '=', 'state', '->', 'data_stack_base', '+', 'size', ';', 'cursize', '=', 'state', '->', 'data_stack_size', ';', 'if', '(', 'cursize', '<', 'minsize', ')', '{', 'void', '*', 'stack', ';', 'cursize', '=', 'minsize', '+', 'minsize', '/', '4', '+', '1024', ';', 'TRACE', '(', '(', '""""', ',', 'cursize', ')', ')', ';', 'stack', '=', 'PyMem_REALLOC', '(', 'state', '->', 'data_stack', ',', 'cursize', ')', ';', 'if', '(', '!stack', ')', '{', 'data_stack_dealloc', '(', 'state', ')', ';', 'return', 'SRE_ERROR_MEMORY', ';', '}', 'state', '->', 'data_stack', '=', '(', 'char', '*', ')', 'stack', ';', 'state', '->', 'data_stack_size', '=', 'cursize', ';', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
877,"['openLib', '(', 'const', 'string', '&', 'lib_name', ')', '{', 'bool', 'success', '=', '(', 'dlopen', '(', 'lib_name', '.', 'c_str', '(', ')', ',', 'RTLD_LAZY', '|', 'RTLD_GLOBAL', ')', '!=', '0', ')', ';', 'if', '(', '!success', ')', '{', 'char', 'buffer', '[', 'BUFF_SIZE', ']', ';', 'sprintf', '(', 'buffer', ',', '""""', ',', 'lib_name', '.', 'c_str', '(', ')', ',', 'dlerror', '(', ')', ')', ';', 'OpenBabel', ':', ':', 'obErrorLog', '.', 'ThrowError', '(', '__FUNCTION__', ',', 'buffer', ',', 'OpenBabel', ':', ':', 'obError', ')', ';', '}', 'return', 'success', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
878,"['cb_build_perform_until', '(', 'cb_tree', 'condition', ',', 'cb_tree', 'varying', ')', '{', 'cb_tree', 'x', ';', 'x', '=', 'cb_build_perform', '(', 'CB_PERFORM_UNTIL', ')', ';', 'CB_PERFORM', '(', 'x', ')', '->', 'test', '=', 'condition', ';', 'CB_PERFORM', '(', 'x', ')', '->', 'varying', '=', 'varying', ';', 'return', 'x', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
879,"['getElement', '(', 'const', 'int', 'position', ')', '{', 'Link', '*', 'link', ';', 'int', 'i', ';', 'ASSERT', '(', 'this', ')', ';', 'if', '(', 'position', '<', '1', 'OR', 'position', '>', 'this', '->', 'size', ')', '{', 'return', 'NUL', '(', 'const', 'void', '*', ')', ';', '}', 'else', 'if', '(', 'position', '==', '1', ')', '{', 'return', 'this', '->', 'first', '->', 'element', ';', '}', 'else', 'if', '(', 'position', '==', 'this', '->', 'size', ')', '{', 'return', 'this', '->', 'last', '->', 'element', ';', '}', '{', 'for', '(', 'link', '=', 'this', '->', 'first', ',', 'i', '=', '1', ';', 'link', 'AND', 'i', '<', 'position', ';', 'link', '=', 'link', '->', 'next', ',', 'i', '++', ')', ';', 'ASSERT', '(', 'link', ')', ';', 'return', 'link', '->', 'element', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
880,"['net_connect', '(', 'char', '*', 'host', ',', 'u_short', 'port', ',', 'int', 'binary', ',', 'int', 'strong', ')', '/', '*', '*', 'Function', ':', 'Connect', 'to', 'the', 'given', 'host', 'and', '*', 'Returns', ':', 'sock', 'if', '*', '-', '1', 'if', '*', '-', '2', 'if', 'host', 'not', '*', '*', 'Supports', 'virtual', 'hosting', '.', 'Use', 'enable_virtual_host', '(', ')', 'to', 'configure', '.', '*', 'Set', 'binary', 'to', '1', 'if', 'a', 'binary', '(', 'non', '-', 'buffered', ')', 'connection', 'is', 'needed', '.', '*', 'Set', 'strong', 'to', '1', 'if', 'a', 'connect', '(', ')', 'is', 'considered', 'successful', 'only', 'if', '*', 'detect', 'a', 'read', 'first', '.', '*', '*', 'Actually', ',', 'in', 'most', 'cases', 'we', ""don''re"", 'connected', '.', '*', 'net_connect', '(', ')', ""doesn't"", 'fail', ',', 'then', 'we', 'start', 'dumping', 'data', 'to', 'the', 'socket', '.', '*', ""We''t"", 'actually', 'connect', '.', '{', 'IP', 'inaddr', ';', 'int', 'sock', ';', 'char', 'flags', ';', 'struct', 'sockaddr_in', 'sin', ';', 'struct', 'hostent', '*', 'hp', ';', 'if', '(', 'host', '==', 'NULL', '||', '!host', '[', '0', ']', ')', '{', 'internal', '(', '""""', ')', ';', 'return', '-', '1', ';', '}', 'memset', '(', '(', 'char', '*', ')', '&', 'sin', ',', '0', ',', 'sizeof', '(', 'sin', ')', ')', ';', 'sin', '.', 'sin_family', '=', 'AF_INET', ';', 'sin', '.', 'sin_port', '=', 'htons', '(', 'port', ')', ';', 'inaddr', '=', '(', 'IP', ')', 'inet_addr', '(', 'host', ')', ';', 'if', '(', 'inaddr', '!=', 'INADDR_NONE', ')', '{', 'xmemcpy', '(', '(', 'char', '*', ')', '&', 'sin', '.', 'sin_addr', ',', '(', 'char', '*', ')', '&', 'inaddr', ',', 'sizeof', '(', 'inaddr', ')', ')', ';', '}', '{', 'hp', '=', 'gethostbyname', '(', 'host', ')', ';', 'if', '(', 'hp', '==', 'NULL', '||', '(', 'hp', '->', 'h_length', '!=', '4', '&&', 'hp', '->', 'h_length', '!=', '8', ')', ')', 'xmemcpy', '(', '(', 'char', '*', ')', '&', 'sin', '.', 'sin_addr', ',', 'hp', '->', 'h_addr', ',', 'hp', '->', 'h_length', ')', ';', '}', 'flags', '=', 'SOCK_CONNECTING', ';', 'if', '(', 'binary', ')', 'flags', '|=', 'SOCK_BINARY', ';', 'if', '(', 'strong', ')', 'flags', '|=', 'SOCK_STRONG', ';', 'sock', '=', 'new_socket', '(', 'flags', ')', ';', 'if', '(', 'sock', '==', '-', '1', ')', 'set_socket', '(', 'sock', ',', 'SO_KEEPALIVE', ',', '1', ')', ';', 'set_socket', '(', 'sock', ',', 'SO_LINGER', ',', '0', ')', ';', '/', '*', '*', 'Virtual', 'host', '?', '(', 'enabled', 'using', 'enable_virtual_host', '(', ')', ')', 'if', '(', 'vh', '.', 'vh_enabled', ')', 'bind_virtual_host', '(', 'sock', ')', ';', 'if', '(', 'connect', '(', 'sock', ',', '(', 'struct', 'sockaddr', '*', ')', '&', 'sin', ',', 'sizeof', '(', 'sin', ')', ')', '<', '0', ')', '{', 'if', '(', 'net_errno', '(', ')', '==', 'EINPROGRESS', ')', 'return', 'sock', ';', 'debug', '(', '""""', ',', 'net_errstr', '(', ')', ',', 'sock', ')', ';', 'destroy_socket', '(', 'sock', ')', ';', 'return', '-', '1', ';', '}', 'return', 'sock', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
881,"['fsl_asrc_dma_startup', '(', 'struct', 'snd_pcm_substream', '*', 'substream', ')', '{', 'struct', 'snd_soc_pcm_runtime', '*', 'rtd', '=', 'substream', '->', 'private_data', ';', 'struct', 'snd_pcm_runtime', '*', 'runtime', '=', 'substream', '->', 'runtime', ';', 'struct', 'device', '*', 'dev', '=', 'rtd', '->', 'platform', '->', 'dev', ';', 'struct', 'fsl_asrc', '*', 'asrc_priv', '=', 'dev_get_drvdata', '(', 'dev', ')', ';', 'struct', 'fsl_asrc_pair', '*', 'pair', ';', 'pair', '=', 'kzalloc', '(', 'sizeof', '(', 'struct', 'fsl_asrc_pair', ')', ',', 'GFP_KERNEL', ')', ';', 'if', '(', '!pair', ')', '{', 'dev_err', '(', 'dev', ',', '""""', ')', ';', 'return', '-', 'ENOMEM', ';', '}', 'pair', '->', 'asrc_priv', '=', 'asrc_priv', ';', 'runtime', '->', 'private_data', '=', 'pair', ';', 'snd_pcm_hw_constraint_integer', '(', 'substream', '->', 'runtime', ',', 'SNDRV_PCM_HW_PARAM_PERIODS', ')', ';', 'snd_soc_set_runtime_hwparams', '(', 'substream', ',', '&', 'snd_imx_hardware', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
882,"['parse_cli', '(', 'int', 'argc', ',', 'char', '*', 'argv', '[', ']', ',', 'int', '*', 'operation', ',', 'int', '*', 'mode', ',', 'char', '*', '*', 'hostname', ',', 'char', '*', '*', 'port', ')', '{', 'int', 'opt', ';', '*', 'operation', '=', 'OPERATION_DEFAULT', ';', '*', 'mode', '=', 'MODE_DEFAULT', ';', '*', 'port', '=', 'NULL', ';', '*', 'hostname', '=', 'NULL', ';', 'while', '(', '(', 'opt', '=', 'getopt', '(', 'argc', ',', 'argv', ',', '""""', ')', ')', '!=', '-', '1', ')', '{', 'switch', '(', 'opt', ')', '{', 'case', ""''"", ':', '*', 'operation', '=', 'OPERATION_HELP', ';', 'return', '0', ';', 'break', ';', 'case', ""''"", ':', '(', '*', 'mode', ')', '&=', '~MODE_IP6MODE', ';', '(', '*', 'mode', ')', '|=', 'MODE_IP4MODE', ';', 'break', ';', 'case', ""''"", ':', '(', '*', 'mode', ')', '&=', '~MODE_IP4MODE', ';', '(', '*', 'mode', ')', '|=', 'MODE_IP6MODE', ';', 'break', ';', 'case', ""''"", ':', '(', '*', 'mode', ')', '|=', 'MODE_RAW', ';', 'break', ';', 'case', ""''"", ':', '(', '*', 'mode', ')', '|=', 'MODE_NO_SSL', ';', 'break', ';', 'default', ':', 'return', '0', ';', 'break', ';', '}', '}', 'if', '(', 'argc', '-', 'optind', '<', '2', ')', '{', 'fprintf', '(', 'stderr', ',', '""""', ')', ';', 'return', '0', ';', '}', '*', 'hostname', '=', 'argv', '[', 'optind', ']', ';', '*', 'port', '=', 'argv', '[', 'optind', '+', '1', ']', ';', 'return', '1', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
883,"['selectsupported', '(', 'aa_context', '*', 'c', ')', '{', 'int', 'supported', '=', 'c', '->', 'params', '.', 'supported', ';', 'char', 'text', '[', '40', ']', ';', 'int', 'ch', ';', 'do', '{', 'static', 'char', '*', 'texts', '[', ']', '=', '{', '""""', ',', '""""', ',', '""""', ',', '""""', ',', '""""', ',', '""""', ',', '""""', '}', ';', 'int', 'masks', '[', ']', '=', '{', 'AA_NORMAL_MASK', ',', 'AA_DIM_MASK', ',', 'AA_BOLD_MASK', ',', 'AA_BOLDFONT_MASK', ',', 'AA_REVERSE_MASK', ',', 'AA_EIGHT', ',', 'AA_ALL', '}', ';', 'int', 'i', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', '7', ';', 'i', '++', ')', '{', 'sprintf', '(', 'text', ',', '""""', ',', 'i', '+', '1', ',', 'texts', '[', 'i', ']', ',', '(', 'SUPPORTED', '&', 'masks', '[', 'i', ']', ')', '?', '(', '(', 'supported', '&', 'masks', '[', 'i', ']', ')', '?', '""""', ':', '""""', ')', ':', '""""', ')', ';', 'aa_puts', '(', 'context', ',', '0', ',', 'i', ',', 'AA_SPECIAL', ',', 'text', ')', ';', '}', 'aa_puts', '(', 'context', ',', '0', ',', 'i', ',', 'AA_SPECIAL', ',', '""""', ')', ';', 'aa_flush', '(', 'context', ')', ';', 'while', '(', '(', 'ch', '=', 'tolower', '(', 'aa_getkey', '(', 'context', ',', '1', ')', ')', ')', '<', ""''"", '||', 'ch', '>', ""''"", ')', ';', 'ch', '-=', ""''"", ';', 'if', '(', 'ch', '<', '7', ')', 'supported', '^=', 'masks', '[', 'ch', ']', ';', '}', 'while', '(', 'ch', '<', '7', ')', ';', 'aa_setsupported', '(', 'c', ',', 'supported', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
884,"['zxid_set_epr_secmech', '(', 'zxid_conf', '*', 'cf', ',', 'zxid_epr', '*', 'epr', ',', 'const', 'char', '*', 'secmec', ')', '{', 'if', '(', '!epr', ')', '{', 'ERR', '(', '""""', ',', 'epr', ')', ';', 'return', ';', '}', 'if', '(', '!epr', '->', 'Metadata', ')', 'epr', '->', 'Metadata', '=', 'zx_NEW_a_Metadata', '(', 'cf', '->', 'ctx', ',', '&', 'epr', '->', 'gg', ')', ';', 'if', '(', '!epr', '->', 'Metadata', '->', 'SecurityContext', ')', 'epr', '->', 'Metadata', '->', 'SecurityContext', '=', 'zx_NEW_di_SecurityContext', '(', 'cf', '->', 'ctx', ',', '&', 'epr', '->', 'Metadata', '->', 'gg', ')', ';', 'if', '(', 'secmec', ')', '{', 'epr', '->', 'Metadata', '->', 'SecurityContext', '->', '=', 'zx_dup_elem', '(', 'cf', '->', 'ctx', ',', '&', 'epr', '->', 'Metadata', '->', 'SecurityContext', '->', 'gg', ',', 'zx_di_SecurityMechID_ELEM', ',', 'secmec', ')', ';', 'INFO', '(', '""""', ',', 'secmec', ')', ';', '}', 'else', '{', 'epr', '->', 'Metadata', '->', 'SecurityContext', '->', '=', 'zx_dup_elem', '(', 'cf', '->', 'ctx', ',', '&', 'epr', '->', 'Metadata', '->', 'SecurityContext', '->', 'gg', ',', 'zx_di_SecurityMechID_ELEM', ',', '0', ')', ';', 'INFO', '(', '""""', ',', '0', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
885,"['getline', '(', 'char', '*', '*', 'lineptr', ',', 'size_t', '*', 'n', ')', '{', 'ssize_t', 'ret', ';', 'switch', '(', 's_type', ')', '{', 'case', 'TEXT', ':', 'ret', '=', ':', ':', 'getline', '(', 'lineptr', ',', 'n', ',', 'text', '.', 's_fp', ')', ';', 'if', '(', 'ret', '==', '-', '1', ')', 'return', 'text_status', '(', ')', ';', 'break', ';', 'case', 'GZIP', ':', '{', 'size_t', 'offset', '=', '0', ';', 'if', '(', '!', '*', 'lineptr', ')', '{', '*', 'n', '=', '128', ';', '*', 'lineptr', '=', '(', 'char', '*', ')', 'xmalloc', '(', '*', 'n', ')', ';', '}', 'while', '(', '1', ')', '{', 'char', '*', 'line', '=', '*', 'lineptr', ';', 'if', '(', 'gzgets', '(', 'gzip', '.', 's_fp', ',', 'line', '+', 'offset', ',', '*', 'n', '-', 'offset', ')', ')', '{', 'ret', '=', 'strlen', '(', 'line', ')', ';', 'if', '(', 'line', '[', 'ret', '-', '1', ']', '==', ""''"", ')', 'return', 'ret', ';', '}', 'else', '{', 'return', 'gzip_status', '(', ')', ';', '}', 'offset', '=', '*', 'n', '-', '1', ';', '*', 'n', '*=', '2', ';', '*', 'lineptr', '=', '(', 'char', '*', ')', 'xrealloc', '(', 'line', ',', '*', 'n', ')', ';', '}', 'break', ';', '}', 'default', ':', 'assert', '(', '0', ')', ';', '}', 'return', 'ret', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
886,"['ext_tree_prepare_commit', '(', 'struct', 'nfs4_layoutcommit_args', '*', 'arg', ')', '{', 'struct', 'pnfs_block_layout', '*', 'bl', '=', 'BLK_LO2EXT', '(', 'NFS_I', '(', 'arg', '->', 'inode', ')', '->', 'layout', ')', ';', 'size_t', 'count', '=', '0', ',', 'buffer_size', '=', 'PAGE_SIZE', ';', '__be32', '*', 'start_p', ';', 'int', 'ret', ';', 'dprintk', '(', '""""', ',', '__func__', ')', ';', 'arg', '->', 'layoutupdate_page', '=', 'alloc_page', '(', 'GFP_NOFS', ')', ';', 'if', '(', '!arg', '->', 'layoutupdate_page', ')', 'return', '-', 'ENOMEM', ';', 'start_p', '=', 'page_address', '(', 'arg', '->', 'layoutupdate_page', ')', ';', 'arg', '->', 'layoutupdate_pages', '=', '&', 'arg', '->', 'layoutupdate_page', ';', 'retry', ':', 'ret', '=', 'ext_tree_encode_commit', '(', 'bl', ',', 'start_p', '+', '1', ',', 'buffer_size', ',', '&', 'count', ')', ';', 'if', '(', 'unlikely', '(', 'ret', ')', ')', '{', 'ext_tree_free_commitdata', '(', 'arg', ',', 'buffer_size', ')', ';', 'buffer_size', '=', 'ext_tree_layoutupdate_size', '(', 'count', ')', ';', 'count', '=', '0', ';', 'arg', '->', 'layoutupdate_pages', '=', 'kcalloc', '(', 'DIV_ROUND_UP', '(', 'buffer_size', ',', 'PAGE_SIZE', ')', ',', 'sizeof', '(', 'struct', 'page', '*', ')', ',', 'GFP_NOFS', ')', ';', 'if', '(', '!arg', '->', 'layoutupdate_pages', ')', 'return', '-', 'ENOMEM', ';', 'start_p', '=', '__vmalloc', '(', 'buffer_size', ',', 'GFP_NOFS', ',', 'PAGE_KERNEL', ')', ';', 'if', '(', '!start_p', ')', '{', 'kfree', '(', 'arg', '->', 'layoutupdate_pages', ')', ';', 'return', '-', 'ENOMEM', ';', '}', 'goto', 'retry', ';', '}', '*', 'start_p', '=', 'cpu_to_be32', '(', 'count', ')', ';', 'arg', '->', 'layoutupdate_len', '=', 'ext_tree_layoutupdate_size', '(', 'count', ')', ';', 'if', '(', 'unlikely', '(', 'arg', '->', 'layoutupdate_pages', '!=', '&', 'arg', '->', 'layoutupdate_page', ')', ')', '{', 'void', '*', 'p', '=', 'start_p', ',', '*', 'end', '=', 'p', '+', 'arg', '->', 'layoutupdate_len', ';', 'int', 'i', '=', '0', ';', 'for', '(', ';', 'p', '<', 'end', ';', 'p', '+=', 'PAGE_SIZE', ')', 'arg', '->', 'layoutupdate_pages', '[', 'i', '++', ']', '=', 'vmalloc_to_page', '(', 'p', ')', ';', '}', 'dprintk', '(', '""""', ',', '__func__', ',', 'count', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
887,"['disposeImpl', '(', 'void', '*', 'firstElement', ',', 'size_t', 'elementSize', ',', 'size_t', 'elementCount', ',', 'size_t', 'capacity', ',', 'void', '(', '*', 'destroyElement', ')', '(', 'void', '*', ')', ')', 'const', '{', '/', '/', 'Note', 'that', 'capacity', 'is', 'ignored', 'since', 'operator', 'delete', '(', ')', ""doesn't"", 'care', 'about', 'it', '.', 'AutoDeleter', 'deleter', '(', 'firstElement', ')', ';', 'if', '(', 'destroyElement', '!=', 'nullptr', ')', '{', 'ExceptionSafeArrayUtil', 'guard', '(', 'firstElement', ',', 'elementSize', ',', 'elementCount', ',', 'destroyElement', ')', ';', 'guard', '.', 'destroyAll', '(', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
888,"['__ecereMethod_Debugger_StepUntil', '(', 'struct', '__ecereNameSpace__ecere__com__Instance', '*', 'this', ',', 'struct', '__ecereNameSpace__ecere__com__Instance', '*', 'compiler', ',', 'struct', 'ProjectConfig', '*', 'config', ',', 'int', 'bitDepth', ',', 'unsigned', 'int', 'useValgrind', ',', 'unsigned', 'int', 'ignoreBreakpoints', ')', '{', 'struct', 'Debugger', '*', '__ecerePointer_Debugger', '=', '(', 'struct', 'Debugger', '*', ')', '(', 'this', '?', '(', '(', '(', 'char', '*', ')', 'this', ')', '+', '__ecereClass_Debugger', '->', 'offset', ')', ':', '0', ')', ';', ';', '__ecerePointer_Debugger', '->', 'userAction', '=', '10', ';', 'switch', '(', '__ecereMethod_Debugger_StartSession', '(', 'this', ',', 'compiler', ',', 'config', ',', 'bitDepth', ',', 'useValgrind', ',', '0x0', ',', 'ignoreBreakpoints', ')', ')', '{', 'case', '2', ':', '__ecereMethod_Debugger_GdbExecRun', '(', 'this', ')', ';', 'break', ';', 'case', '4', ':', '__ecereMethod_Debugger_GdbExecUntil', '(', 'this', ',', '(', '(', '(', 'void', '*', ')', '0', ')', ')', ',', '0', ')', ';', 'break', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
889,"['gd_header_bar_map', '(', 'GtkWidget', '*', 'widget', ')', '{', 'GdHeaderBar', '*', 'bar', '=', 'GD_HEADER_BAR', '(', 'widget', ')', ';', 'GdHeaderBarPrivate', '*', 'priv', '=', 'bar', '->', 'priv', ';', 'GTK_WIDGET_CLASS', '(', 'gd_header_bar_parent_class', ')', '->', 'map', '(', 'widget', ')', ';', 'if', '(', 'priv', '->', 'event_window', ')', 'gdk_window_show_unraised', '(', 'priv', '->', 'event_window', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
890,"['msg_join', '(', 'IRC_SERVER_REC', '*', 'server', ',', 'const', 'char', '*', 'channel', ',', 'const', 'char', '*', 'nick', ',', 'const', 'char', '*', 'address', ')', '{', 'NETSPLIT_REC', '*', 'split', ';', 'NETJOIN_REC', '*', 'netjoin', ';', 'GSList', '*', 'channels', ';', 'int', 'rejoin', '=', '1', ';', 'if', '(', '!IS_IRC_SERVER', '(', 'server', ')', ')', 'return', ';', 'if', '(', 'ignore_check', '(', 'SERVER', '(', 'server', ')', ',', 'nick', ',', 'address', ',', 'channel', ',', 'NULL', ',', 'MSGLEVEL_JOINS', ')', ')', 'return', ';', 'split', '=', 'netsplit_find', '(', 'server', ',', 'nick', ',', 'address', ')', ';', 'netjoin', '=', 'netjoin_find', '(', 'server', ',', 'nick', ')', ';', 'if', '(', 'split', '==', 'NULL', '&&', 'netjoin', '==', 'NULL', ')', 'return', ';', 'if', '(', 'netjoin', '!=', 'NULL', ')', '{', 'if', '(', '!gslist_find_icase_string', '(', 'netjoin', '->', 'old_channels', ',', 'channel', ')', ')', 'return', ';', '}', 'else', '{', 'channels', '=', 'split', '->', 'channels', ';', 'while', '(', 'channels', '!=', 'NULL', ')', '{', 'NETSPLIT_CHAN_REC', '*', 'schannel', '=', 'channels', '->', 'data', ';', 'if', '(', '!strcasecmp', '(', 'schannel', '->', 'name', ',', 'channel', ')', ')', 'break', ';', 'channels', '=', 'channels', '->', 'next', ';', '}', '/', '*', 'we', 'still', 'need', 'to', 'create', 'a', 'NETJOIN_REC', 'now', 'as', 'if', '(', 'channels', '==', 'NULL', ')', 'rejoin', '=', '0', ';', '}', 'if', '(', 'join_tag', '==', '-', '1', ')', '{', 'join_tag', '=', 'g_timeout_add', '(', '1000', ',', '(', 'GSourceFunc', ')', 'sig_check_netjoins', ',', 'NULL', ')', ';', 'signal_add', '(', '""""', ',', '(', 'SIGNAL_FUNC', ')', 'sig_print_starting', ')', ';', '}', 'if', '(', 'netjoin', '==', 'NULL', ')', 'netjoin', '=', 'netjoin_add', '(', 'server', ',', 'nick', ',', 'split', '->', 'channels', ')', ';', 'if', '(', 'rejoin', ')', '{', 'netjoin', '->', 'now_channels', '=', 'g_slist_append', '(', 'netjoin', '->', 'now_channels', ',', 'g_strconcat', '(', '""""', ',', 'channel', ',', 'NULL', ')', ')', ';', 'signal_stop', '(', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
891,"['get_handler_index', '(', 'struct', 'handler_data', '*', 'table', ',', 'void', '*', 'handler', ',', 'offs_t', 'start', ')', '{', 'int', 'i', ';', 'if', '(', 'HANDLER_IS_STATIC', '(', 'handler', ')', ')', 'return', '(', 'FPTR', ')', 'handler', ';', 'for', '(', 'i', '=', 'STATIC_COUNT', ';', 'i', '<', 'SUBTABLE_BASE', ';', 'i', '++', ')', '{', 'if', '(', 'table', '[', 'i', ']', '.', 'handler', '==', 'NULL', ')', '{', 'table', '[', 'i', ']', '.', 'handler', '=', 'handler', ';', 'table', '[', 'i', ']', '.', 'offset', '=', 'start', ';', '}', 'if', '(', 'table', '[', 'i', ']', '.', 'handler', '==', 'handler', '&&', 'table', '[', 'i', ']', '.', 'offset', '==', 'start', ')', 'return', 'i', ';', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
892,"['updateFilteredView', '(', 'int', 'nbMatches', ',', 'int', 'progress', ')', '{', 'LOG', '(', 'logDEBUG', ')', '<<', '""""', ';', 'if', '(', 'progress', '==', '100', ')', '{', '/', '/', 'Searching', 'printSearchInfoMessage', '(', 'nbMatches', ')', ';', 'searchInfoLine', '->', 'hideGauge', '(', ')', ';', '/', '/', 'De', '-', 'activate', 'the', 'stop', 'stopButton', '->', 'setEnabled', '(', 'false', ')', ';', '}', 'else', '{', '/', '/', 'Search', 'in', '/', '/', 'We', 'ignore', '0', '%', 'and', '100', '%', 'to', 'avoid', 'a', 'flash', 'when', 'the', 'search', 'is', 'very', 'if', '(', 'progress', '>', '0', ')', '{', 'searchInfoLine', '->', 'setText', '(', 'tr', '(', '""""', ')', '.', 'arg', '(', 'progress', ')', '.', 'arg', '(', 'nbMatches', ')', '.', 'arg', '(', 'nbMatches', '>', '1', '?', '""""', ':', '""""', ')', ')', ';', 'searchInfoLine', '->', 'displayGauge', '(', 'progress', ')', ';', '}', '}', '/', '/', 'Recompute', 'the', 'content', 'of', 'the', 'filtered', 'window', '.', 'filteredView', '->', 'updateData', '(', ')', ';', '/', '/', 'Update', 'the', 'match', 'overview_', '->', 'updateData', '(', 'logData_', '->', 'getNbLine', '(', ')', ')', ';', '/', '/', 'Also', 'update', 'the', 'top', 'window', 'for', 'the', 'coloured', 'bullets', '.', 'update', '(', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
893,"['dpm_insert_spcmd_entry', '(', 'dbfd', ',', 'dpm_spcmd', ')', 'struct', 'dpm_dbfd', '*', 'dbfd', ';', 'struct', 'dpm_space_reserv', '*', 'dpm_spcmd', ';', '{', 'char', 'escaped_name', '[', '255', '*', '2', '+', '1', ']', ';', 'char', 'func', '[', '23', ']', ';', 'char', 'g_space_str', '[', '21', ']', ';', 'static', 'char', 'insert_stmt', '[', ']', '=', '""INSERT', 'INTO', 'dpm_space_reserv', '(', 'S_TOKEN', ',', 'CLIENT_DN', ',', 'S_UID', ',', 'S_GID', ',', 'RET_POLICY', ',', 'AC_LATENCY', ',', 'S_TYPE', ',', 'U_TOKEN', ',', 'T_SPACE', ',', 'G_SPACE', ',', 'U_SPACE', ',', 'POOLNAME', ',', 'ASSIGN_TIME', ',', 'EXPIRE_TIME', ',', 'GROUPS', ')', 'VALUES', '(', ""''"", ',', ""''"", ',', '%', 'd', ',', '%', 'd', ',', ""''"", ',', ""''"", ',', ""''"", ',', ""''"", ',', '%', 's', ',', '%', 's', ',', '%', 's', ',', ""''"", ',', '%', 'd', ',', '%', 'd', ',', ""''"", ')', '""', ';', 'PGresult', '*', 'res', ';', 'char', 'sql_stmt', '[', '1416', ']', ';', 'char', 't_space_str', '[', '21', ']', ';', 'char', 'u_space_str', '[', '21', ']', ';', 'strcpy', '(', 'func', ',', '""""', ')', ';', 'PQescapeStringConn', '(', 'dbfd', '->', 'Pconn', ',', 'escaped_name', ',', 'dpm_spcmd', '->', 'client_dn', ',', 'strlen', '(', 'dpm_spcmd', '->', 'client_dn', ')', ',', 'NULL', ')', ';', 'sprintf', '(', 'sql_stmt', ',', 'insert_stmt', ',', 'dpm_spcmd', '->', 's_token', ',', 'escaped_name', ',', 'dpm_spcmd', '->', 's_uid', ',', 'dpm_spcmd', '->', 's_gid', ',', 'dpm_spcmd', '->', 'ret_policy', ',', 'dpm_spcmd', '->', 'ac_latency', ',', 'dpm_spcmd', '->', 's_type', ',', 'dpm_spcmd', '->', 'u_token', ',', 'u64tostr', '(', 'dpm_spcmd', '->', 't_space', ',', 't_space_str', ',', '-', '1', ')', ',', 'u64tostr', '(', 'dpm_spcmd', '->', 'g_space', ',', 'g_space_str', ',', '-', '1', ')', ',', 'i64tostr', '(', 'dpm_spcmd', '->', 'u_space', ',', 'u_space_str', ',', '-', '1', ')', ',', 'dpm_spcmd', '->', 'poolname', ',', 'dpm_spcmd', '->', 'assign_time', ',', 'dpm_spcmd', '->', 'expire_time', ',', 'dpm_spcmd', '->', 'groups', ')', ';', 'res', '=', 'PQexec', '(', 'dbfd', '->', 'Pconn', ',', 'sql_stmt', ')', ';', 'if', '(', 'PQresultStatus', '(', 'res', ')', '!=', 'PGRES_COMMAND_OK', ')', '{', 'if', '(', 'strstr', '(', 'PQresultErrorMessage', '(', 'res', ')', ',', '""""', ')', ')', '{', 'serrno', '=', 'EEXIST', ';', 'PQclear', '(', 'res', ')', ';', '}', 'dpm_libpq_error', '(', 'func', ',', '""""', ',', 'res', ',', 'dbfd', ')', ';', 'return', '(', '-', '1', ')', ';', '}', 'PQclear', '(', 'res', ')', ';', 'return', '(', '0', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
894,"['addToMyParts', '(', 'ModelPart', '*', 'modelPart', ')', '{', 'if', '(', 'modelPart', '!=', 'NULL', ')', 'm_binManager', '->', 'addToMyParts', '(', 'modelPart', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
895,"['socket_new_ipcmsg', '(', 'IPC_Channel', '*', 'ch', ',', 'const', 'void', '*', 'data', ',', 'int', 'len', ',', 'void', '*', 'private', ')', '{', 'IPC_Message', '*', '\thdr', ';', 'if', '(', 'ch', '==', 'NULL', '||', 'len', '<', '0', ')', '{', 'cl_log', '(', 'LOG_ERR', ',', '""""', ')', ';', 'return', 'NULL', ';', '}', 'if', '(', 'ch', '->', 'msgpad', '>', 'MAX_MSGPAD', ')', '{', 'cl_log', '(', 'LOG_ERR', ',', '""""', ')', ';', 'return', 'NULL', ';', '}', 'hdr', '=', 'ipcmsg_new', '(', 'ch', ',', 'data', ',', 'len', ',', 'private', ',', 'socket_del_ipcmsg', ')', ';', 'if', '(', 'hdr', ')', 'ipcmsg_count_allocated', '++', ';', 'return', 'hdr', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
896,"['getMeanChildLogOdds', '(', ')', 'const', '{', 'double', 'mean', '=', '0', ';', 'char', 'c', '=', '0', ';', 'for', '(', 'unsigned', 'int', 'i', '=', '0', ';', 'i', '<', '8', ';', 'i', '++', ')', '{', 'if', '(', 'childExists', '(', 'i', ')', ')', '{', 'mean', '+=', 'getChild', '(', 'i', ')', '->', 'getOccupancy', '(', ')', ';', 'c', '++', ';', '}', '}', 'if', '(', 'c', ')', 'mean', '/=', '(', 'double', ')', 'c', ';', 'return', 'log', '(', 'mean', '/', '(', '1', '-', 'mean', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
897,"['Compile', '(', 'v8', ':', ':', 'Handle', '<', 'String', '>', 'source', ',', 'v8', ':', ':', 'ScriptOrigin', '*', 'origin', ',', 'v8', ':', ':', 'ScriptData', '*', 'pre_data', ',', 'v8', ':', ':', 'Handle', '<', 'String', '>', 'script_data', ')', '{', 'ON_BAILOUT', '(', '""""', ',', 'return', 'Local', '<', 'Script', '>', '(', ')', ')', ';', 'LOG_API', '(', '""""', ')', ';', 'ENTER_V8', ';', 'Local', '<', 'Script', '>', 'generic', '=', 'New', '(', 'source', ',', 'origin', ',', 'pre_data', ',', 'script_data', ')', ';', 'if', '(', 'generic', '.', 'IsEmpty', '(', ')', ')', 'return', 'generic', ';', 'i', ':', ':', 'Handle', '<', 'i', ':', ':', 'Object', '>', 'obj', '=', 'Utils', ':', ':', 'OpenHandle', '(', '*', 'generic', ')', ';', 'i', ':', ':', 'Handle', '<', 'i', ':', ':', 'SharedFunctionInfo', '>', 'function', '=', 'i', ':', ':', 'Handle', '<', 'i', ':', ':', 'SharedFunctionInfo', '>', '(', 'i', ':', ':', 'SharedFunctionInfo', ':', ':', 'cast', '(', '*', 'obj', ')', ')', ';', 'i', ':', ':', 'Handle', '<', 'i', ':', ':', 'JSFunction', '>', 'result', '=', 'i', ':', ':', 'Factory', ':', ':', 'NewFunctionFromSharedFunctionInfo', '(', 'function', ',', 'i', ':', ':', 'Top', ':', ':', 'global_context', '(', ')', ')', ';', 'return', 'Local', '<', 'Script', '>', '(', 'ToApi', '<', 'Script', '>', '(', 'result', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
898,"['HPDF_FreeCCITTFax3', '(', 'struct', '_HPDF_CCITT_Data', '*', 'pData', ')', '{', 'if', '(', 'pData', '->', 'tif_data', '!=', 'NULL', ')', '{', 'HPDF_Fax3CodecState', '*', 'esp', '=', 'pData', '->', 'tif_data', ';', 'if', '(', 'esp', '->', 'refline', '!=', 'NULL', ')', '{', 'free', '(', 'esp', '->', 'refline', ')', ';', 'esp', '->', 'refline', '=', 'NULL', ';', '}', 'if', '(', 'esp', '->', 'runs', '!=', 'NULL', ')', '{', 'free', '(', 'esp', '->', 'runs', ')', ';', 'esp', '->', 'runs', '=', 'NULL', ';', '}', 'free', '(', 'pData', '->', 'tif_data', ')', ';', 'pData', '->', 'tif_data', '=', 'NULL', ';', '}', 'if', '(', 'pData', '->', 'tif_rawdata', '!=', 'NULL', ')', '{', 'free', '(', 'pData', '->', 'tif_rawdata', ')', ';', 'pData', '->', 'tif_rawdata', '=', 'NULL', ';', '}', 'return', 'HPDF_OK', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
899,"['getClones', '(', 'UT_GenericVector', '<', 'XAP_Frame', '*', '>', '*', 'pvClonesCopy', ',', 'XAP_Frame', '*', 'pFrame', ')', '{', 'UT_ASSERT', '(', 'pvClonesCopy', ')', ';', 'UT_return_val_if_fail', '(', 'pFrame', ',', 'false', ')', ';', 'UT_ASSERT', '(', 'pFrame', '->', 'getViewNumber', '(', ')', '>', '0', ')', ';', '/', '/', 'locate', 'vector', 'of', 'this', ""frame's"", 'CloneMap', ':', ':', 'const_iterator', 'iter', '=', 'm_hashClones', '.', 'find', '(', 'pFrame', '->', 'getViewKey', '(', ')', ')', ';', 'UT_GenericVector', '<', 'XAP_Frame', '*', '>', '*', 'pvClones', '=', 'NULL', ';', 'if', '(', 'iter', '!=', 'm_hashClones', '.', 'end', '(', ')', ')', '{', 'pvClones', '=', 'iter', '->', 'second', ';', '}', 'UT_ASSERT', '(', 'pvClones', ')', ';', 'return', 'pvClonesCopy', '->', 'copy', '(', 'pvClones', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
900,"['createTextElement', '(', 'const', 'QString', '&', 'ns', ',', 'const', 'QString', '&', 'tagName', ',', 'const', 'QString', '&', 'text', ')', '{', 'QDomElement', 'e', '=', 'd', '->', 's', '->', 'doc', '(', ')', '.', 'createElementNS', '(', 'ns', ',', 'tagName', ')', ';', 'e', '.', 'appendChild', '(', 'd', '->', 's', '->', 'doc', '(', ')', '.', 'createTextNode', '(', 'text', ')', ')', ';', 'return', 'e', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
901,"['process', '(', 'ast_procdef', '*', 'p', ')', '{', 'gps_opt_edge_iteration_t', 'T', ';', 'p', '->', 'traverse_post', '(', '&', 'T', ')', ';', 'if', '(', 'T', '.', 'has_targets', '(', ')', ')', 'T', '.', 'post_process', '(', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
902,"['get_user_func_name', '(', 'xp', ',', 'idx', ')', 'expand_T\t', '*', 'xp', ';', 'int\t\tidx', ';', '{', 'static', 'long_u\tdone', ';', 'static', 'hashitem_T\t', '*', 'hi', ';', 'ufunc_T\t\t', '*', 'fp', ';', 'if', '(', 'idx', '==', '0', ')', '{', 'done', '=', '0', ';', 'hi', '=', 'func_hashtab', '.', 'ht_array', ';', '}', 'if', '(', 'done', '<', 'func_hashtab', '.', 'ht_used', ')', '{', 'if', '(', 'done', '++', '>', '0', ')', '++', 'hi', ';', 'while', '(', 'HASHITEM_EMPTY', '(', 'hi', ')', ')', '++', 'hi', ';', 'fp', '=', 'HI2UF', '(', 'hi', ')', ';', 'if', '(', 'STRLEN', '(', 'fp', '->', 'uf_name', ')', '+', '4', '>=', 'IOSIZE', ')', 'cat_func_name', '(', 'IObuff', ',', 'fp', ')', ';', 'if', '(', 'xp', '->', 'xp_context', '!=', 'EXPAND_USER_FUNC', ')', '{', 'STRCAT', '(', 'IObuff', ',', '""""', ')', ';', 'if', '(', '!fp', '->', 'uf_varargs', '&&', 'fp', '->', 'uf_args', '.', 'ga_len', '==', '0', ')', 'STRCAT', '(', 'IObuff', ',', '""""', ')', ';', '}', 'return', 'IObuff', ';', '}', 'return', 'NULL', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
903,"['cb_build_perform_once', '(', 'cb_tree', 'body', ')', '{', 'cb_tree', 'x', ';', 'if', '(', 'body', '==', 'cb_error_node', ')', '{', 'return', 'cb_error_node', ';', '}', 'x', '=', 'cb_build_perform', '(', 'CB_PERFORM_ONCE', ')', ';', 'CB_PERFORM', '(', 'x', ')', '->', 'body', '=', 'body', ';', 'return', 'x', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
904,"['TRANS_mid', '(', ')', '{', 'PATTERN', '*', 'str', ';', 'PATTERN', '*', 'pos', ';', 'PATTERN', '*', 'len', ';', 'PATTERN', '*', 'save', ';', 'TRANS_want', '(', 'RS_LBRA', ',', '""""', ')', ';', 'str', '=', 'JOB', '->', 'current', ';', 'TRANS_expression', '(', 'FALSE', ')', ';', 'TRANS_want', '(', 'RS_COMMA', ',', '""""', ')', ';', 'pos', '=', 'JOB', '->', 'current', ';', 'TRANS_expression', '(', 'FALSE', ')', ';', 'CODE_push_number', '(', '1', ')', ';', 'CODE_op', '(', 'C_SUB', ',', '0', ',', '2', ',', 'TRUE', ')', ';', 'TRANS_subr', '(', 'TS_SUBR_LEFT', ',', '2', ')', ';', 'if', '(', 'TRANS_is', '(', 'RS_COMMA', ')', ')', '{', 'len', '=', 'JOB', '->', 'current', ';', 'TRANS_ignore_expression', '(', ')', ';', '}', '{', 'len', '=', 'NULL', ';', '}', 'TRANS_want', '(', 'RS_RBRA', ',', '""""', ')', ';', 'TRANS_want', '(', 'RS_EQUAL', ',', '""""', ')', ';', 'TRANS_expression', '(', 'FALSE', ')', ';', 'save', '=', 'JOB', '->', 'current', ';', 'if', '(', 'len', ')', '{', 'JOB', '->', 'current', '=', 'str', ';', 'TRANS_expression', '(', 'FALSE', ')', ';', 'JOB', '->', 'current', '=', 'pos', ';', 'TRANS_expression', '(', 'FALSE', ')', ';', 'JOB', '->', 'current', '=', 'len', ';', 'TRANS_expression', '(', 'FALSE', ')', ';', 'CODE_op', '(', 'C_ADD', ',', '0', ',', '2', ',', 'TRUE', ')', ';', 'TRANS_subr', '(', 'TS_SUBR_MID', ',', '2', ')', ';', '}', 'CODE_op', '(', 'C_CAT', ',', '0', ',', 'len', '?', '3', ':', '2', ',', 'FALSE', ')', ';', 'JOB', '->', 'current', '=', 'str', ';', 'TRANS_reference', '(', ')', ';', 'JOB', '->', 'current', '=', 'save', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
905,"['plugin_print_lists', '(', 'void', ')', '{', 'int', 'i', ';', 'struct', 'slapdplugin', '*', 'list', '=', 'NULL', ';', 'struct', 'slapdplugin', '*', 'tmp', '=', 'NULL', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'PLUGIN_LIST_GLOBAL_MAX', ';', 'i', '++', ')', '{', 'if', '(', '(', 'list', '=', 'get_plugin_list', '(', 'i', ')', ')', ')', '{', 'slapi_log_error', '(', 'SLAPI_LOG_PLUGIN', ',', 'NULL', ',', '""""', ',', 'i', ')', ';', 'for', '(', 'tmp', '=', 'list', ';', 'tmp', ';', 'tmp', '=', 'tmp', '->', 'plg_next', ')', '{', 'slapi_log_error', '(', 'SLAPI_LOG_PLUGIN', ',', 'NULL', ',', '""""', ',', 'tmp', '->', 'plg_name', ',', 'tmp', '->', 'plg_precedence', ')', ';', '}', '}', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
906,"['isl_ast_node_alloc', '(', 'isl_ctx', '*', 'ctx', ',', 'enum', 'isl_ast_node_type', 'type', ')', '{', 'isl_ast_node', '*', 'node', ';', 'node', '=', 'isl_calloc_type', '(', 'ctx', ',', 'isl_ast_node', ')', ';', 'if', '(', '!node', ')', 'return', 'NULL', ';', 'node', '->', 'ctx', '=', 'ctx', ';', 'isl_ctx_ref', '(', 'ctx', ')', ';', 'node', '->', 'ref', '=', '1', ';', 'node', '->', 'type', '=', 'type', ';', 'return', 'node', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
907,"['reference_create', '(', 'git_reference', '*', '*', 'ref_out', ',', 'git_repository', '*', 'repo', ',', 'const', 'char', '*', 'name', ',', 'git_rtype', 'type', ')', '{', 'char', 'normalized', '[', 'MAX_GITDIR_TREE_STRUCTURE_PATH_LENGTH', ']', ';', 'int', 'error', '=', 'GIT_SUCCESS', ',', 'size', ';', 'git_reference', '*', 'reference', '=', 'NULL', ';', 'assert', '(', 'ref_out', '&&', 'repo', '&&', 'name', ')', ';', 'if', '(', 'type', '==', 'GIT_REF_SYMBOLIC', ')', 'size', '=', 'sizeof', '(', 'reference_symbolic', ')', ';', 'else', 'if', '(', 'type', '==', 'GIT_REF_OID', ')', 'size', '=', 'sizeof', '(', 'reference_oid', ')', ';', 'return', 'GIT_EINVALIDREFSTATE', ';', 'reference', '=', 'git__malloc', '(', 'size', ')', ';', 'if', '(', 'reference', '==', 'NULL', ')', 'return', 'GIT_ENOMEM', ';', 'memset', '(', 'reference', ',', '0x0', ',', 'size', ')', ';', 'reference', '->', 'owner', '=', 'repo', ';', 'reference', '->', 'type', '=', 'type', ';', 'error', '=', 'normalize_name', '(', 'normalized', ',', 'name', ',', '(', 'type', '&', 'GIT_REF_OID', ')', ')', ';', 'if', '(', 'error', '<', 'GIT_SUCCESS', ')', 'goto', 'cleanup', ';', 'reference', '->', 'name', '=', 'git__strdup', '(', 'normalized', ')', ';', 'if', '(', 'reference', '->', 'name', '==', 'NULL', ')', '{', 'error', '=', 'GIT_ENOMEM', ';', 'goto', 'cleanup', ';', '}', '*', 'ref_out', '=', 'reference', ';', 'return', 'error', ';', 'cleanup', ':', 'reference_free', '(', 'reference', ')', ';', 'return', 'error', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
908,"['queueMultiCommand', '(', 'redisClient', '*', 'c', ',', 'struct', 'redisCommand', '*', 'cmd', ')', '{', 'multiCmd', '*', 'mc', ';', 'int', 'j', ';', 'c', '->', 'mstate', '.', 'commands', '=', 'zrealloc', '(', 'c', '->', 'mstate', '.', 'commands', ',', 'sizeof', '(', 'multiCmd', ')', '*', '(', 'c', '->', 'mstate', '.', 'count', '+', '1', ')', ')', ';', 'mc', '=', 'c', '->', 'mstate', '.', 'commands', '+', 'c', '->', 'mstate', '.', 'count', ';', 'mc', '->', 'cmd', '=', 'cmd', ';', 'mc', '->', 'argc', '=', 'c', '->', 'argc', ';', 'mc', '->', 'argv', '=', 'zmalloc', '(', 'sizeof', '(', 'robj', '*', ')', '*', 'c', '->', 'argc', ')', ';', 'memcpy', '(', 'mc', '->', 'argv', ',', 'c', '->', 'argv', ',', 'sizeof', '(', 'robj', '*', ')', '*', 'c', '->', 'argc', ')', ';', 'for', '(', 'j', '=', '0', ';', 'j', '<', 'c', '->', 'argc', ';', 'j', '++', ')', 'incrRefCount', '(', 'mc', '->', 'argv', '[', 'j', ']', ')', ';', 'c', '->', 'mstate', '.', 'count', '++', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
909,"['processingStarted', '(', ')', '{', 'ProgressDialog', '->', 'setLabelText', '(', 'tr', '(', '""""', ')', ')', ';', 'ProgressDialog', '->', 'setMinimum', '(', '0', ')', ';', 'ProgressDialog', '->', 'setMaximum', '(', '0', ')', ';', 'ProgressDialog', '->', 'exec', '(', ')', ';', 'ProgressDialog', '->', 'setValue', '(', '0', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
910,"['unpack_broken_parameters', '(', 'ParseContext', '*', 'context', ',', 'Octstr', '*', 'decoded', ')', '{', 'int', 'ret', '=', '0', ';', 'int', 'first', '=', '1', ';', 'long', 'pos', ';', 'while', '(', 'ret', '>=', '0', '&&', '!parse_error', '(', 'context', ')', '&&', 'parse_octets_left', '(', 'context', ')', '>', '0', ')', '{', 'pos', '=', 'octstr_len', '(', 'decoded', ')', ';', 'ret', '=', 'unpack_parameter', '(', 'context', ',', 'decoded', ')', ';', 'if', '(', 'ret', '>=', '0', ')', '{', 'if', '(', 'first', ')', '{', 'octstr_delete', '(', 'decoded', ',', 'pos', ',', '1', ')', ';', 'first', '=', '0', ';', '}', 'else', '{', 'octstr_set_char', '(', 'decoded', ',', 'pos', ',', 'first', '?', ""''"", ':', ""''"", ')', ';', '}', '}', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
911,"['shell_exec_memory_show_options', '(', 'struct', 'gnutella_shell', '*', 'sh', ',', 'int', 'argc', ',', 'const', 'char', '*', 'argv', '[', ']', ')', '{', 'show_vec_t', 'v', '[', '3', ']', ';', 'shell_check', '(', 'sh', ')', ';', 'g_assert', '(', 'argv', ')', ';', 'g_assert', '(', 'argc', '>', '0', ')', ';', 'v', '[', '0', ']', '.', 'cb', '=', 'xmalloc_show_settings_log', ';', 'v', '[', '0', ']', '.', 'prefix', '=', 'NULL', ';', 'v', '[', '1', ']', '.', 'cb', '=', 'malloc_show_settings_log', ';', 'v', '[', '1', ']', '.', 'prefix', '=', '""""', ';', 'v', '[', '2', ']', '.', 'cb', '=', 'shell_vtable_settings_log', ';', 'v', '[', '2', ']', '.', 'prefix', '=', 'NULL', ';', 'return', 'memory_run_showerv', '(', 'sh', ',', 'v', ',', 'G_N_ELEMENTS', '(', 'v', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
912,"['set_nports', '(', 'int', 'new_ninputs', ',', 'int', 'new_noutputs', ')', '{', '/', '/', 'exit', 'on', 'bad', 'counts', ',', 'or', 'if', 'already', 'if', '(', 'new_ninputs', '<', '0', '||', 'new_noutputs', '<', '0', ')', 'return', '-', 'EINVAL', ';', 'if', '(', '_router', '&&', '_router', '->', '_have_connections', ')', '{', 'if', '(', '_router', '->', '_state', '>=', 'Router', ':', ':', 'ROUTER_PREINITIALIZE', ')', 'return', '-', 'EBUSY', ';', '_router', '->', '_have_connections', '=', 'false', ';', '}', '/', '/', 'decide', 'if', 'inputs', '&', 'outputs', 'were', 'bool', 'old_in_inline', '=', '(', '_ports', '[', '0', ']', '==', '_inline_ports', ')', ';', 'bool', 'old_out_inline', '=', '(', '_ports', '[', '1', ']', '==', '_inline_ports', '||', '_ports', '[', '1', ']', '==', '_inline_ports', '+', '_nports', '[', '0', ']', ')', ';', '/', '/', 'decide', 'if', 'inputs', '&', 'outputs', 'should', 'be', 'bool', 'new_in_inline', '=', '(', 'new_ninputs', '==', '||', 'new_ninputs', '+', 'new_noutputs', '<=', '||', '(', 'new_ninputs', '<=', 'INLINE_PORTS', '&&', 'new_noutputs', '>', 'INLINE_PORTS', ')', '||', '(', 'new_ninputs', '<=', 'INLINE_PORTS', '&&', 'new_ninputs', '>', '&&', 'processing', '(', ')', '==', 'PULL', ')', ')', ';', 'bool', 'new_out_inline', '=', '(', 'new_noutputs', '==', '||', 'new_ninputs', '+', 'new_noutputs', '<=', '||', '(', 'new_noutputs', '<=', 'INLINE_PORTS', '&&', '!new_in_inline', ')', ')', ';', '/', '/', 'create', 'new', 'port', 'Port', '*', 'new_inputs', '=', '(', 'new_in_inline', '?', '_inline_ports', ':', 'new', 'Port', '[', 'new_ninputs', ']', ')', ';', 'if', '(', '!new_inputs', ')', '\t\t', '/', '/', 'out', 'of', 'memory', '--', 'return', '-', 'ENOMEM', ';', 'Port', '*', 'new_outputs', '=', '(', 'new_out_inline', '?', '_inline_ports', '+', '(', 'new_in_inline', '?', 'new_ninputs', ':', '0', ')', ':', 'new', 'Port', '[', 'new_noutputs', ']', ')', ';', 'if', '(', '!new_outputs', ')', '{', '\t\t', '/', '/', 'out', 'of', 'memory', '--', 'if', '(', '!new_in_inline', ')', 'delete', '[', ']', 'new_inputs', ';', 'return', '-', 'ENOMEM', ';', '}', '/', '/', 'install', 'if', '(', '!old_in_inline', ')', 'delete', '[', ']', '_ports', '[', '0', ']', ';', 'if', '(', '!old_out_inline', ')', 'delete', '[', ']', '_ports', '[', '1', ']', ';', '_ports', '[', '0', ']', '=', 'new_inputs', ';', '_ports', '[', '1', ']', '=', 'new_outputs', ';', '_nports', '[', '0', ']', '=', 'new_ninputs', ';', '_nports', '[', '1', ']', '=', 'new_noutputs', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
913,"['main', '(', 'int', 'argc', ',', 'char', '*', '*', 'argv', ')', '{', 'GError', '*', 'error', '=', 'NULL', ';', 'char', '*', 'base', ';', 'const', 'char', '*', 'clients', '[', '2', ']', '[', '2', ']', '=', '{', '{', 'DHCLIENT_PATH', ',', '""""', '}', ',', '{', 'DHCPCD_PATH', ',', '""""', '}', '}', ';', 'guint32', 'i', ';', 'g_type_init', '(', ')', ';', 'if', '(', '!nm_utils_init', '(', '&', 'error', ')', ')', 'FAIL', '(', '""""', ',', '""""', ',', 'error', '->', 'message', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', '2', ';', 'i', '++', ')', '{', 'const', 'char', '*', 'client_path', '=', 'clients', '[', 'i', ']', '[', '0', ']', ';', 'const', 'char', '*', 'client', '=', 'clients', '[', 'i', ']', '[', '1', ']', ';', 'if', '(', '!client_path', '||', '!strlen', '(', 'client_path', ')', ')', 'continue', ';', 'test_generic_options', '(', 'client', ')', ';', 'test_wins_options', '(', 'client', ')', ';', 'test_classless_static_routes_1', '(', 'client', ')', ';', 'test_classless_static_routes_2', '(', 'client', ')', ';', 'test_fedora_dhclient_classless_static_routes', '(', 'client', ')', ';', 'test_dhclient_invalid_classless_routes_1', '(', 'client', ')', ';', 'test_dhcpcd_invalid_classless_routes_1', '(', 'client', ')', ';', 'test_dhclient_invalid_classless_routes_2', '(', 'client', ')', ';', 'test_dhcpcd_invalid_classless_routes_2', '(', 'client', ')', ';', 'test_dhclient_invalid_classless_routes_3', '(', 'client', ')', ';', 'test_dhcpcd_invalid_classless_routes_3', '(', 'client', ')', ';', 'test_dhclient_gw_in_classless_routes', '(', 'client', ')', ';', 'test_dhcpcd_gw_in_classless_routes', '(', 'client', ')', ';', 'test_escaped_domain_searches', '(', 'client', ')', ';', 'test_invalid_escaped_domain_searches', '(', 'client', ')', ';', 'test_ip4_missing_prefix', '(', 'client', ',', '""""', ',', '24', ')', ';', 'test_ip4_missing_prefix', '(', 'client', ',', '""""', ',', '16', ')', ';', 'test_ip4_missing_prefix', '(', 'client', ',', '""""', ',', '8', ')', ';', 'test_ip4_prefix_classless', '(', 'client', ')', ';', '}', 'base', '=', 'g_path_get_basename', '(', 'argv', '[', '0', ']', ')', ';', 'fprintf', '(', 'stdout', ',', '""""', ',', 'base', ')', ';', 'g_free', '(', 'base', ')', ';', 'return', '0', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
914,"['_slurm_rpc_dump_jobs', '(', 'slurm_msg_t', '*', 'msg', ')', '{', 'DEF_TIMERS', ';', 'char', '*', 'dump', ';', 'int', 'dump_size', ';', 'slurm_msg_t', 'response_msg', ';', 'job_info_request_msg_t', '*', 'job_info_request_msg', '=', '(', 'job_info_request_msg_t', '*', ')', 'msg', '->', 'data', ';', 'slurmctld_lock_t', 'job_read_lock', '=', '{', 'READ_LOCK', ',', 'READ_LOCK', ',', 'NO_LOCK', ',', 'WRITE_LOCK', '}', ';', 'uid_t', 'uid', '=', 'g_slurm_auth_get_uid', '(', 'msg', '->', 'auth_cred', ',', 'NULL', ')', ';', 'START_TIMER', ';', 'debug3', '(', '""""', ',', 'uid', ')', ';', 'lock_slurmctld', '(', 'job_read_lock', ')', ';', 'if', '(', '(', 'job_info_request_msg', '->', 'last_update', '-', '1', ')', '>=', 'last_job_update', ')', '{', 'unlock_slurmctld', '(', 'job_read_lock', ')', ';', 'debug3', '(', '""""', ')', ';', 'slurm_send_rc_msg', '(', 'msg', ',', 'SLURM_NO_CHANGE_IN_DATA', ')', ';', '}', 'else', '{', 'pack_all_jobs', '(', '&', 'dump', ',', '&', 'dump_size', ',', 'job_info_request_msg', '->', 'show_flags', ',', 'g_slurm_auth_get_uid', '(', 'msg', '->', 'auth_cred', ',', 'NULL', ')', ',', 'msg', '->', 'protocol_version', ')', ';', 'unlock_slurmctld', '(', 'job_read_lock', ')', ';', 'END_TIMER2', '(', '""""', ')', ';', 'slurm_msg_t_init', '(', '&', 'response_msg', ')', ';', 'response_msg', '.', 'flags', '=', 'msg', '->', 'flags', ';', 'response_msg', '.', 'protocol_version', '=', 'msg', '->', 'protocol_version', ';', 'response_msg', '.', 'address', '=', 'msg', '->', 'address', ';', 'response_msg', '.', 'msg_type', '=', 'RESPONSE_JOB_INFO', ';', 'response_msg', '.', 'data', '=', 'dump', ';', 'response_msg', '.', 'data_size', '=', 'dump_size', ';', 'slurm_send_node_msg', '(', 'msg', '->', 'conn_fd', ',', '&', 'response_msg', ')', ';', 'xfree', '(', 'dump', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
915,"['gc_menu_board_free', '(', 'GcomprisBoard', '*', 'board', ')', '{', 'g_free', '(', 'board', '->', 'type', ')', ';', 'g_free', '(', 'board', '->', 'mode', ')', ';', 'g_free', '(', 'board', '->', 'name', ')', ';', 'g_free', '(', 'board', '->', 'title', ')', ';', 'g_free', '(', 'board', '->', 'description', ')', ';', 'g_free', '(', 'board', '->', 'icon_name', ')', ';', 'g_free', '(', 'board', '->', 'author', ')', ';', 'g_free', '(', 'board', '->', 'boarddir', ')', ';', 'g_free', '(', 'board', '->', 'filename', ')', ';', 'g_free', '(', 'board', '->', 'difficulty', ')', ';', 'g_free', '(', 'board', '->', 'mandatory_sound_file', ')', ';', 'g_free', '(', 'board', '->', 'mandatory_sound_dataset', ')', ';', 'g_free', '(', 'board', '->', 'section', ')', ';', 'g_free', '(', 'board', '->', 'menuposition', ')', ';', 'g_free', '(', 'board', '->', 'prerequisite', ')', ';', 'g_free', '(', 'board', '->', 'goal', ')', ';', 'g_free', '(', 'board', '->', 'manual', ')', ';', 'g_free', '(', 'board', '->', 'credit', ')', ';', 'if', '(', 'board', '->', 'gmodule', ')', 'g_module_close', '(', 'board', '->', 'gmodule', ')', ';', 'g_free', '(', 'board', '->', 'gmodule_file', ')', ';', 'g_free', '(', 'board', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
916,"['gee_read_only_sorted_set_real_sub_set', '(', 'GeeSortedSet', '*', 'base', ',', 'gconstpointer', 'from', ',', 'gconstpointer', 'to', ')', '{', 'GeeReadOnlySortedSet', '*', 'self', ';', 'GeeSortedSet', '*', 'result', '=', 'NULL', ';', 'GeeCollection', '*', '_tmp0_', '=', 'NULL', ';', 'gconstpointer', '_tmp1_', '=', 'NULL', ';', 'gconstpointer', '_tmp2_', '=', 'NULL', ';', 'GeeSortedSet', '*', '_tmp3_', '=', 'NULL', ';', 'GeeSortedSet', '*', '_tmp4_', '=', 'NULL', ';', 'GeeSortedSet', '*', '_tmp5_', '=', 'NULL', ';', 'GeeSortedSet', '*', '_tmp6_', '=', 'NULL', ';', 'GeeSortedSet', '*', '_tmp7_', '=', 'NULL', ';', 'self', '=', '(', 'GeeReadOnlySortedSet', '*', ')', 'base', ';', '_tmp0_', '=', '(', '(', 'GeeReadOnlyCollection', '*', ')', 'self', ')', '->', '_collection', ';', '_tmp1_', '=', 'from', ';', '_tmp2_', '=', 'to', ';', '_tmp3_', '=', 'gee_sorted_set_sub_set', '(', 'G_TYPE_CHECK_INSTANCE_TYPE', '(', '_tmp0_', ',', 'GEE_TYPE_SORTED_SET', ')', '?', '(', '(', 'GeeSortedSet', '*', ')', '_tmp0_', ')', ':', 'NULL', ',', '_tmp1_', ',', '_tmp2_', ')', ';', '_tmp4_', '=', '_tmp3_', ';', '_tmp5_', '=', 'gee_sorted_set_get_read_only_view', '(', '_tmp4_', ')', ';', '_tmp6_', '=', '_tmp5_', ';', '_tmp7_', '=', '_tmp6_', ';', '_g_object_unref0', '(', '_tmp4_', ')', ';', 'result', '=', '_tmp7_', ';', 'return', 'result', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
917,"['write_one_cache_group', '(', 'struct', 'btrfs_trans_handle', '*', 'trans', ',', 'struct', 'btrfs_root', '*', 'root', ',', 'struct', 'btrfs_path', '*', 'path', ',', 'struct', 'btrfs_block_group_cache', '*', 'cache', ')', '{', 'int', 'ret', ';', 'struct', 'btrfs_root', '*', 'extent_root', '=', 'root', '->', 'fs_info', '->', 'extent_root', ';', 'unsigned', 'long', 'bi', ';', 'struct', 'extent_buffer', '*', 'leaf', ';', 'ret', '=', 'btrfs_search_slot', '(', 'trans', ',', 'extent_root', ',', '&', 'cache', '->', 'key', ',', 'path', ',', '0', ',', '1', ')', ';', 'if', '(', 'ret', ')', '{', 'if', '(', 'ret', '>', '0', ')', 'ret', '=', '-', 'ENOENT', ';', 'goto', 'fail', ';', '}', 'leaf', '=', 'path', '->', 'nodes', '[', '0', ']', ';', 'bi', '=', 'btrfs_item_ptr_offset', '(', 'leaf', ',', 'path', '->', 'slots', '[', '0', ']', ')', ';', 'write_extent_buffer', '(', 'leaf', ',', '&', 'cache', '->', 'item', ',', 'bi', ',', 'sizeof', '(', 'cache', '->', 'item', ')', ')', ';', 'btrfs_mark_buffer_dirty', '(', 'leaf', ')', ';', 'fail', ':', 'btrfs_release_path', '(', 'path', ')', ';', 'return', 'ret', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
918,"['build_x_compound_expr_from_vec', '(', 'vec', '<', 'tree', ',', 'va_gc', '>', '*', 'vec', ',', 'const', 'char', '*', 'msg', ',', 'tsubst_flags_t', 'complain', ')', '{', 'if', '(', 'vec_safe_is_empty', '(', 'vec', ')', ')', 'return', 'NULL_TREE', ';', 'else', 'if', '(', 'vec', '->', 'length', '(', ')', '==', '1', ')', 'return', '(', '*', 'vec', ')', '[', '0', ']', ';', '{', 'tree', 'expr', ';', 'unsigned', 'int', 'ix', ';', 'tree', 't', ';', 'if', '(', 'msg', '!=', 'NULL', ')', '{', 'if', '(', 'complain', '&', 'tf_error', ')', 'permerror', '(', 'input_location', ',', '""""', ',', 'msg', ')', ';', 'return', 'error_mark_node', ';', '}', 'expr', '=', '(', '*', 'vec', ')', '[', '0', ']', ';', 'for', '(', 'ix', '=', '1', ';', 'vec', '->', 'iterate', '(', 'ix', ',', '&', 't', ')', ';', '++', 'ix', ')', 'expr', '=', 'build_x_compound_expr', '(', 'EXPR_LOCATION', '(', 't', ')', ',', 'expr', ',', 't', ',', 'complain', ')', ';', 'return', 'expr', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
919,"['tls_get_addr_tail', '(', 'GET_ADDR_ARGS', ',', 'dtv_t', '*', 'dtv', ',', 'struct', 'link_map', '*', 'the_map', ')', '{', 'if', '(', 'the_map', '==', 'NULL', ')', '{', 'size_t', 'idx', '=', 'GET_ADDR_MODULE', ';', 'struct', 'dtv_slotinfo_list', '*', 'listp', '=', 'GL', '(', 'dl_tls_dtv_slotinfo_list', ')', ';', 'while', '(', 'idx', '>=', 'listp', '->', 'len', ')', '{', 'idx', '-=', 'listp', '->', 'len', ';', 'listp', '=', 'listp', '->', 'next', ';', '}', 'the_map', '=', 'listp', '->', 'slotinfo', '[', 'idx', ']', '.', 'map', ';', '}', 'again', ':', '/', '*', 'Make', 'sure', 'that', ',', 'if', 'a', 'dlopen', 'running', 'in', 'parallel', 'forces', 'variable', 'into', 'static', 'storage', ',', ""we'll"", 'wait', 'until', 'the', 'address', 'in', 'static', 'TLS', 'block', 'is', 'set', 'up', ',', 'and', 'use', 'that', '.', 'If', ""we're"", 'if', '(', '__builtin_expect', '(', 'the_map', '->', '!=', 'FORCED_DYNAMIC_TLS_OFFSET', ',', '0', ')', ')', '{', '__rtld_lock_lock_recursive', '(', 'GL', '(', 'dl_load_lock', ')', ')', ';', 'if', '(', '__builtin_expect', '(', 'the_map', '->', 'l_tls_offset', '==', 'NO_TLS_OFFSET', ',', '1', ')', ')', '{', 'the_map', '->', 'l_tls_offset', '=', 'FORCED_DYNAMIC_TLS_OFFSET', ';', '__rtld_lock_unlock_recursive', '(', 'GL', '(', 'dl_load_lock', ')', ')', ';', '}', '{', '__rtld_lock_unlock_recursive', '(', 'GL', '(', 'dl_load_lock', ')', ')', ';', 'if', '(', '__builtin_expect', '(', 'the_map', '->', '!=', 'FORCED_DYNAMIC_TLS_OFFSET', ',', '1', ')', ')', '{', 'void', '*', 'p', '=', 'dtv', '[', 'GET_ADDR_MODULE', ']', '.', 'pointer', '.', 'val', ';', 'if', '(', '__builtin_expect', '(', 'p', '==', 'TLS_DTV_UNALLOCATED', ',', '0', ')', ')', 'goto', 'again', ';', 'return', '(', 'char', '*', ')', 'p', '+', 'GET_ADDR_OFFSET', ';', '}', '}', '}', 'void', '*', 'p', '=', 'dtv', '[', 'GET_ADDR_MODULE', ']', '.', 'pointer', '.', 'val', '=', 'allocate_and_init', '(', 'the_map', ')', ';', 'dtv', '[', 'GET_ADDR_MODULE', ']', '.', 'pointer', '.', 'is_static', '=', 'false', ';', 'return', '(', 'char', '*', ')', 'p', '+', 'GET_ADDR_OFFSET', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
920,"['adjust_panel_help', '(', 'int', 'y', ',', 'int', 'x', ',', 'bool', 'help', ')', '{', 'bool', 'changed', '=', 'FALSE', ';', 'int', 'j', ';', 'int', 'screen_hgt_main', '=', 'help', '?', '(', 'Term', '->', 'hgt', '-', 'ROW_MAP', '-', '3', ')', ':', '(', 'Term', '->', 'hgt', '-', 'ROW_MAP', '-', '1', ')', ';', 'for', '(', 'j', '=', '0', ';', 'j', '<', 'ANGBAND_TERM_MAX', ';', 'j', '++', ')', '{', 'int', 'wx', ',', 'wy', ';', 'int', 'screen_hgt', ',', 'screen_wid', ';', 'term', '*', 't', '=', 'angband_term', '[', 'j', ']', ';', 'if', '(', '!t', ')', 'continue', ';', 'if', '(', '(', 'j', '>', '0', ')', '&&', '!', '(', 'op_ptr', '->', 'window_flag', '[', 'j', ']', '&', 'PW_MAP', ')', ')', 'continue', ';', 'wy', '=', 't', '->', 'offset_y', ';', 'wx', '=', 't', '->', 'offset_x', ';', 'screen_hgt', '=', '(', 'j', '==', '0', ')', '?', 'screen_hgt_main', ':', 't', '->', 'hgt', ';', 'screen_wid', '=', '(', 'j', '==', '0', ')', '?', '(', 'Term', '->', 'wid', '-', 'COL_MAP', '-', '1', ')', ':', 't', '->', 'wid', ';', 'screen_wid', '=', 'screen_wid', '/', 'tile_width', ';', 'screen_hgt', '=', 'screen_hgt', '/', 'tile_height', ';', 'while', '(', 'y', '>=', 'wy', '+', 'screen_hgt', ')', 'wy', '+=', 'screen_hgt', '/', '2', ';', 'while', '(', 'y', '<', 'wy', ')', 'wy', '-=', 'screen_hgt', '/', '2', ';', 'while', '(', 'x', '>=', 'wx', '+', 'screen_wid', ')', 'wx', '+=', 'screen_wid', '/', '2', ';', 'while', '(', 'x', '<', 'wx', ')', 'wx', '-=', 'screen_wid', '/', '2', ';', 'if', '(', 'modify_panel', '(', 't', ',', 'wy', ',', 'wx', ')', ')', 'changed', '=', 'TRUE', ';', '}', 'return', '(', 'changed', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
921,"['nonce_nonceg_create', '(', ')', '{', 'private_nonce_nonceg_t', '*', 'this', ';', 'INIT', '(', 'this', ',', '.', 'public', '=', '{', '.', 'nonce_gen', '=', '{', '.', 'get_nonce', '=', '_get_nonce', ',', '.', 'allocate_nonce', '=', '_allocate_nonce', ',', '.', 'destroy', '=', '_destroy', ',', '}', ',', '}', ',', ')', ';', 'this', '->', 'rng', '=', 'lib', '->', 'crypto', '->', 'create_rng', '(', 'lib', '->', 'crypto', ',', 'RNG_WEAK', ')', ';', 'if', '(', '!this', '->', 'rng', ')', '{', 'DBG1', '(', 'DBG_LIB', ',', '""""', ',', 'rng_quality_names', ',', 'RNG_WEAK', ')', ';', 'destroy', '(', 'this', ')', ';', 'return', 'NULL', ';', '}', 'return', '&', 'this', '->', 'public', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
922,"['AddCompositionOffset', '(', 'GF_CompositionOffsetBox', '*', 'ctts', ',', 'u32', 'offset', ')', '{', 'if', '(', '!ctts', ')', 'return', 'GF_BAD_PARAM', ';', 'if', '(', 'ctts', '->', 'nb_entries', '&&', '(', 'ctts', '->', 'entries', '[', 'ctts', '->', 'nb_entries', '-', '1', ']', '.', 'decodingOffset', '==', 'offset', ')', ')', '{', 'ctts', '->', 'entries', '[', 'ctts', '->', 'nb_entries', '-', '1', ']', '.', 'sampleCount', '++', ';', '}', 'else', '{', 'if', '(', 'ctts', '->', 'alloc_size', '==', 'ctts', '->', 'nb_entries', ')', '{', 'ALLOC_INC', '(', 'ctts', '->', 'alloc_size', ')', ';', 'ctts', '->', 'entries', '=', 'gf_realloc', '(', 'ctts', '->', 'entries', ',', 'sizeof', '(', 'GF_DttsEntry', ')', '*', 'ctts', '->', 'alloc_size', ')', ';', 'if', '(', '!ctts', '->', 'entries', ')', 'return', 'GF_OUT_OF_MEM', ';', 'memset', '(', '&', 'ctts', '->', 'entries', '[', 'ctts', '->', 'nb_entries', ']', ',', '0', ',', 'sizeof', '(', 'GF_DttsEntry', ')', '*', '(', 'ctts', '->', 'alloc_size', '-', 'ctts', '->', 'nb_entries', ')', ')', ';', '}', 'ctts', '->', 'entries', '[', 'ctts', '->', 'nb_entries', ']', '.', 'decodingOffset', '=', 'offset', ';', 'ctts', '->', 'entries', '[', 'ctts', '->', 'nb_entries', ']', '.', 'sampleCount', '=', '1', ';', 'ctts', '->', 'nb_entries', '++', ';', '}', 'ctts', '->', 'w_LastSampleNumber', '++', ';', 'return', 'GF_OK', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
923,"['new_performance_monitor', '(', 'struct', 'gl_context', '*', 'ctx', ',', 'GLuint', 'index', ')', '{', 'unsigned', 'i', ';', 'struct', 'gl_perf_monitor_object', '*', 'm', '=', 'ctx', '->', 'Driver', '.', 'NewPerfMonitor', '(', 'ctx', ')', ';', 'if', '(', 'm', '==', 'NULL', ')', 'return', 'NULL', ';', 'm', '->', 'Name', '=', 'index', ';', 'm', '->', 'Active', '=', 'false', ';', 'm', '->', 'ActiveGroups', '=', 'rzalloc_array', '(', 'NULL', ',', 'unsigned', ',', 'ctx', '->', 'PerfMonitor', '.', 'NumGroups', ')', ';', 'm', '->', 'ActiveCounters', '=', 'ralloc_array', '(', 'NULL', ',', 'BITSET_WORD', '*', ',', 'ctx', '->', 'PerfMonitor', '.', 'NumGroups', ')', ';', 'if', '(', 'm', '->', 'ActiveGroups', '==', 'NULL', '||', 'm', '->', 'ActiveCounters', '==', 'NULL', ')', 'goto', 'fail', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'ctx', '->', 'PerfMonitor', '.', 'NumGroups', ';', 'i', '++', ')', '{', 'const', 'struct', 'gl_perf_monitor_group', '*', 'g', '=', '&', 'ctx', '->', 'PerfMonitor', '.', 'Groups', '[', 'i', ']', ';', 'm', '->', 'ActiveCounters', '[', 'i', ']', '=', 'rzalloc_array', '(', 'm', '->', 'ActiveCounters', ',', 'BITSET_WORD', ',', 'BITSET_WORDS', '(', 'g', '->', 'NumCounters', ')', ')', ';', 'if', '(', 'm', '->', 'ActiveCounters', '[', 'i', ']', '==', 'NULL', ')', 'goto', 'fail', ';', '}', 'return', 'm', ';', 'fail', ':', 'ralloc_free', '(', 'm', '->', 'ActiveGroups', ')', ';', 'ralloc_free', '(', 'm', '->', 'ActiveCounters', ')', ';', 'ctx', '->', 'Driver', '.', 'DeletePerfMonitor', '(', 'ctx', ',', 'm', ')', ';', 'return', 'NULL', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
924,"['gamgi_chem_atom_color', '(', 'gamgi_atom_class', '*', 'atom_class', ')', '{', 'float', '*', 'red', '=', 'atom_class', '->', 'red', ';', 'float', '*', 'green', '=', 'atom_class', '->', 'green', ';', 'float', '*', 'blue', '=', 'atom_class', '->', 'blue', ';', 'int', 'element', ',', 'offset', ';', '/', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', 'set', 'default', 'color', 'for', 'Dummy', 'atoms', '(', 'Z', '=', '0', ')', '*', '*', '*', '*', 'set', 'default', 'color', 'for', 'all', 'elements', '*', 'red', '[', 'GAMGI_CHEM_DU', ']', '=', 'GAMGI_CHEM_DU_R', ';', 'green', '[', 'GAMGI_CHEM_DU', ']', '=', 'GAMGI_CHEM_DU_G', ';', 'blue', '[', 'GAMGI_CHEM_DU', ']', '=', 'GAMGI_CHEM_DU_B', ';', '/', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', 'set', 'all', 'the', 'default', 'element', 'colors', '*', 'for', '(', 'element', '=', '1', ';', 'element', '<=', 'GAMGI_CHEM_ATOM_MAX', ';', 'element', '++', ')', '{', 'offset', '=', 'element', '-', '1', ';', 'red', '[', 'element', ']', '=', 'gamgi_chem_property_color', '[', '3', '*', 'offset', '+', '0', ']', ';', 'green', '[', 'element', ']', '=', 'gamgi_chem_property_color', '[', '3', '*', 'offset', '+', '1', ']', ';', 'blue', '[', 'element', ']', '=', 'gamgi_chem_property_color', '[', '3', '*', 'offset', '+', '2', ']', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
925,"['krb5_is_enctype_weak', '(', 'krb5_context', 'context', ',', 'krb5_enctype', 'enctype', ')', '{', 'struct', '_krb5_encryption_type', '*', 'et', '=', '_krb5_find_enctype', '(', 'enctype', ')', ';', 'if', '(', 'et', '==', 'NULL', '||', '(', 'et', '->', 'flags', '&', 'F_WEAK', ')', ')', 'return', 'TRUE', ';', 'return', 'FALSE', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
926,"['icon_list_modify_with_splash', '(', 'icon_list_t', '*', 'icons', ',', 'char', '*', 'dirname', ',', 'char', '*', 'newdirname', ')', '{', 'g_assert', '(', 'icons', '!=', 'NULL', ')', ';', 'splash_show', '(', 'icons', '->', 'iconsel', '->', 'apwal', '->', 'splash', ')', ';', 'icon_list_modify', '(', 'icons', ',', 'dirname', ',', 'newdirname', ')', ';', 'splash_hide', '(', 'icons', '->', 'iconsel', '->', 'apwal', '->', 'splash', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
927,"['ckh_evict_reloc_insert', '(', 'ckh_t', '*', 'ckh', ',', 'size_t', 'argbucket', ',', 'void', 'const', '*', '*', 'argkey', ',', 'void', 'const', '*', '*', 'argdata', ')', '{', 'const', 'void', '*', 'key', ',', '*', 'data', ',', '*', 'tkey', ',', '*', 'tdata', ';', 'ckhc_t', '*', 'cell', ';', 'size_t', 'hash1', ',', 'hash2', ',', 'bucket', ',', 'tbucket', ';', 'unsigned', 'i', ';', 'bucket', '=', 'argbucket', ';', 'key', '=', '*', 'argkey', ';', 'data', '=', '*', 'argdata', ';', 'while', '(', 'true', ')', '{', '/', '*', '*', 'Choose', 'a', 'random', 'item', 'within', 'the', 'bucket', 'to', 'evict', '.', 'This', '*', 'critical', 'to', 'correct', 'function', ',', 'because', 'without', '(', 'eventually', ')', '*', 'evicting', 'all', 'items', 'within', 'a', 'bucket', 'during', 'iteration', ',', '*', 'would', 'be', 'possible', 'to', 'get', 'stuck', 'in', 'an', 'infinite', 'loop', 'if', '*', 'were', 'an', 'item', 'for', 'which', 'both', 'hashes', 'indicated', 'the', '*', 'bucket', '.', 'prn32', '(', 'i', ',', 'LG_CKH_BUCKET_CELLS', ',', 'ckh', '->', 'prn_state', ',', 'CKH_A', ',', 'CKH_C', ')', ';', 'cell', '=', '&', 'ckh', '->', 'tab', '[', '(', 'bucket', '<<', 'LG_CKH_BUCKET_CELLS', ')', '+', 'i', ']', ';', 'assert', '(', 'cell', '->', 'key', '!=', 'NULL', ')', ';', 'tkey', '=', 'cell', '->', 'key', ';', 'tdata', '=', 'cell', '->', 'data', ';', 'cell', '->', 'key', '=', 'key', ';', 'cell', '->', 'data', '=', 'data', ';', 'key', '=', 'tkey', ';', 'data', '=', 'tdata', ';', '#ifdef', 'ckh', '->', 'nrelocs', '++', ';', 'ckh', '->', 'hash', '(', 'key', ',', 'ckh', '->', 'lg_curbuckets', ',', '&', 'hash1', ',', '&', 'hash2', ')', ';', 'tbucket', '=', 'hash2', '&', '(', '(', 'ZU', '(', '1', ')', '<<', 'ckh', '->', 'lg_curbuckets', ')', '-', '1', ')', ';', 'if', '(', 'tbucket', '==', 'bucket', ')', '{', 'tbucket', '=', 'hash1', '&', '(', '(', 'ZU', '(', '1', ')', '<<', 'ckh', '->', 'lg_curbuckets', ')', '-', '1', ')', ';', '/', '*', '*', 'It', 'may', 'be', 'that', '(', 'tbucket', '==', 'bucket', ')', 'still', ',', 'if', '*', ""item's"", 'hashes', 'both', 'indicate', 'this', 'bucket', '.', 'However', ',', '*', 'we', 'are', 'guaranteed', 'to', 'eventually', 'escape', 'this', '*', 'during', 'iteration', ',', 'assuming', 'pseudo', '-', 'random', '*', 'selection', '(', 'true', 'randomness', 'would', 'make', '*', 'looping', 'a', 'remote', 'possibility', ')', '.', 'The', 'reason', 'we', '*', 'never', 'get', 'trapped', 'forever', 'is', 'that', 'there', 'are', '*', 'cases', ':', '*', '*', '1', ')', 'This', 'bucket', '==', 'argbucket', ',', 'so', 'we', 'will', '*', 'detect', 'an', 'eviction', 'cycle', 'and', 'terminate', '.', '*', '2', ')', 'An', 'item', 'was', 'evicted', 'to', 'this', 'bucket', 'from', 'another', ',', '*', 'which', 'means', 'that', 'at', 'least', 'one', 'item', 'in', 'this', '*', 'has', 'hashes', 'that', 'indicate', 'distinct', 'buckets', '.', '}', 'if', '(', 'tbucket', '==', 'argbucket', ')', '{', '*', 'argkey', '=', 'key', ';', '*', 'argdata', '=', 'data', ';', 'return', '(', 'true', ')', ';', '}', 'bucket', '=', 'tbucket', ';', 'if', '(', 'ckh_try_bucket_insert', '(', 'ckh', ',', 'bucket', ',', 'key', ',', 'data', ')', '==', 'false', ')', 'return', '(', 'false', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
928,"['_plug_iovec_to_buf', '(', 'const', 'sasl_utils_t', '*', 'utils', ',', 'const', 'struct', 'iovec', '*', 'vec', ',', 'unsigned', 'numiov', ',', 'buffer_info_t', '*', '*', 'output', ')', '{', 'unsigned', 'i', ';', 'int', 'ret', ';', 'buffer_info_t', '*', 'out', ';', 'char', '*', 'pos', ';', 'if', '(', '!utils', '||', '!vec', '||', '!output', ')', '{', 'if', '(', 'utils', ')', 'PARAMERROR', '(', 'utils', ')', ';', 'return', 'SASL_BADPARAM', ';', '}', 'if', '(', '!', '(', '*', 'output', ')', ')', '{', '*', 'output', '=', 'utils', '->', 'malloc', '(', 'sizeof', '(', 'buffer_info_t', ')', ')', ';', 'if', '(', '!', '*', 'output', ')', '{', 'MEMERROR', '(', 'utils', ')', ';', 'return', 'SASL_NOMEM', ';', '}', 'memset', '(', '*', 'output', ',', '0', ',', 'sizeof', '(', 'buffer_info_t', ')', ')', ';', '}', 'out', '=', '*', 'output', ';', 'out', '->', 'curlen', '=', '0', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'numiov', ';', 'i', '++', ')', 'out', '->', 'curlen', '+=', 'vec', '[', 'i', ']', '.', 'iov_len', ';', 'ret', '=', '_plug_buf_alloc', '(', 'utils', ',', '&', 'out', '->', 'data', ',', '&', 'out', '->', 'reallen', ',', 'out', '->', 'curlen', ')', ';', 'if', '(', 'ret', '!=', 'SASL_OK', ')', '{', 'MEMERROR', '(', 'utils', ')', ';', 'return', 'SASL_NOMEM', ';', '}', 'memset', '(', 'out', '->', 'data', ',', '0', ',', 'out', '->', 'reallen', ')', ';', 'pos', '=', 'out', '->', 'data', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'numiov', ';', 'i', '++', ')', '{', 'memcpy', '(', 'pos', ',', 'vec', '[', 'i', ']', '.', 'iov_base', ',', 'vec', '[', 'i', ']', '.', 'iov_len', ')', ';', 'pos', '+=', 'vec', '[', 'i', ']', '.', 'iov_len', ';', '}', 'return', 'SASL_OK', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
929,"['string_from_fortran', '(', 'char', '*', 'c', ',', 'long', 'int', '*', 'pn', ')', '{', 'char', '*', 'p', ',', '*', 't', ';', 'string', '*', 'out', ';', 'int', 'n', '=', '*', 'pn', ';', 'if', '(', 'n', '<', '0', ')', '{', 'n', '=', 'strlen', '(', 'c', ')', ';', '}', 'p', '=', '(', 'char', '*', ')', 'malloc', '(', 'sizeof', '(', 'char', ')', '*', '(', 'n', '+', '1', ')', ')', ';', 'p', '[', '0', ']', '=', ""''"", ';', 'p', '=', 'strncpy', '(', 'p', ',', 'c', ',', 'n', ')', ';', 'p', '[', 'n', ']', '=', ""''"", ';', 't', '=', 'strchr_reverse_isnot', '(', 'p', ',', 'n', ',', ""''"", ')', ';', 't', '[', '1', ']', '=', ""''"", ';', 'out', '=', 'string_new', '(', 'p', ')', ';', 'free', '(', 'p', ')', ';', 'return', 'out', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
930,"['templates_load', '(', 'AutoFormatState', '*', 'state', ')', '{', 'GSList', '*', 'l', ';', 'gint', 'n_templates', ';', 'g_return_val_if_fail', '(', 'state', '!=', 'NULL', ',', 'FALSE', ')', ';', 'if', '(', 'state', '->', 'category_groups', '==', 'NULL', ')', 'return', 'FALSE', ';', 'state', '->', 'templates', '=', 'category_group_get_templates_list', '(', 'state', '->', 'current_category_group', ',', 'GO_CMD_CONTEXT', '(', 'state', '->', 'wbcg', ')', ')', ';', 'for', '(', 'l', '=', 'state', '->', 'templates', ';', 'l', '!=', 'NULL', ';', 'l', '=', 'l', '->', 'next', ')', '{', 'GnmFormatTemplate', '*', 'ft', '=', 'l', '->', 'data', ';', 'range_init', '(', '&', 'ft', '->', 'dimension', ',', '0', ',', '0', ',', 'PREVIEW_COLS', '-', '1', ',', 'PREVIEW_ROWS', '-', '1', ')', ';', 'ft', '->', 'invalidate_hash', '=', 'TRUE', ';', '}', 'n_templates', '=', 'g_slist_length', '(', 'state', '->', 'templates', ')', ';', '/', '*', '*', 'We', 'need', 'to', 'temporary', 'lock', 'the', 'preview', 'loading', '/', 'freeing', '*', 'else', 'our', 'scrollbar', 'will', 'trigger', 'an', 'event', '(', 'value_changed', ')', 'and', 'create', '*', 'previews', '.', '(', 'which', 'we', ""don't"", 'want', 'to', 'happen', 'at', 'this', 'moment', ')', 'state', '->', 'previews_locked', '=', 'TRUE', ';', '{', 'GtkAdjustment', '*', 'adjustment', '=', 'gtk_range_get_adjustment', '(', 'GTK_RANGE', '(', 'state', '->', 'scroll', ')', ')', ';', 'gtk_adjustment_configure', '(', 'adjustment', ',', '0', ',', '0', ',', 'n_templates', '/', '2', ',', '1', ',', '3', ',', '3', ')', ';', '}', 'state', '->', 'previews_locked', '=', 'FALSE', ';', '/', '*', '*', 'Hide', 'the', 'scrollbar', 'when', ""it's"", 'not', 'gtk_widget_set_visible', '(', 'GTK_WIDGET', '(', 'state', '->', 'scroll', ')', ',', 'n_templates', '>', 'NUM_PREVIEWS', ')', ';', 'return', 'TRUE', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
931,"['PrintSelf', '(', 'ostream', '&', 'os', ',', 'vtkIndent', 'indent', ')', '{', 'int', 'idx', ';', 'this', '->', 'Superclass', ':', ':', 'PrintSelf', '(', 'os', ',', 'indent', ')', ';', '/', '/', 'this', '->', 'File', ',', 'this', '->', 'Colors', 'need', 'not', 'be', 'os', '<<', 'indent', '<<', '""""', '<<', '(', 'this', '->', 'FileName', '?', 'this', '->', 'FileName', ':', '""""', ')', '<<', '""""', ';', 'os', '<<', 'indent', '<<', '""""', '<<', 'this', '->', 'FileNames', '<<', '""""', ';', 'os', '<<', 'indent', '<<', '""""', '<<', '(', 'this', '->', 'FilePrefix', '?', 'this', '->', 'FilePrefix', ':', '""""', ')', '<<', '""""', ';', 'os', '<<', 'indent', '<<', '""""', '<<', '(', 'this', '->', 'FilePattern', '?', 'this', '->', 'FilePattern', ':', '""""', ')', '<<', '""""', ';', 'os', '<<', 'indent', '<<', '<<', 'this', '->', 'FileNameSliceOffset', '<<', '""""', ';', 'os', '<<', 'indent', '<<', '<<', 'this', '->', 'FileNameSliceSpacing', '<<', '""""', ';', 'os', '<<', 'indent', '<<', '<<', 'vtkImageScalarTypeNameMacro', '(', 'this', '->', 'DataScalarType', ')', '<<', '""""', ';', 'os', '<<', 'indent', '<<', '<<', 'this', '->', 'NumberOfScalarComponents', '<<', '""""', ';', 'os', '<<', 'indent', '<<', '""""', '<<', 'this', '->', 'FileDimensionality', '<<', '""""', ';', 'os', '<<', 'indent', '<<', '""""', '<<', '(', 'this', '->', 'FileLowerLeft', '?', '""""', ':', '""""', ')', ';', 'os', '<<', 'indent', '<<', '""""', '<<', '(', 'this', '->', 'SwapBytes', '?', '""""', ':', '""""', ')', ';', 'os', '<<', 'indent', '<<', '""""', '<<', 'this', '->', 'DataIncrements', '[', '0', ']', ';', 'for', '(', 'idx', '=', '1', ';', 'idx', '<', '2', ';', '++', 'idx', ')', '{', 'os', '<<', '""""', '<<', 'this', '->', 'DataIncrements', '[', 'idx', ']', ';', '}', 'os', '<<', '""""', ';', 'os', '<<', 'indent', '<<', '""""', '<<', 'this', '->', 'DataExtent', '[', '0', ']', ';', 'for', '(', 'idx', '=', '1', ';', 'idx', '<', '6', ';', '++', 'idx', ')', '{', 'os', '<<', '""""', '<<', 'this', '->', 'DataExtent', '[', 'idx', ']', ';', '}', 'os', '<<', '""""', ';', 'os', '<<', 'indent', '<<', '""""', '<<', 'this', '->', 'DataSpacing', '[', '0', ']', ';', 'for', '(', 'idx', '=', '1', ';', 'idx', '<', '3', ';', '++', 'idx', ')', '{', 'os', '<<', '""""', '<<', 'this', '->', 'DataSpacing', '[', 'idx', ']', ';', '}', 'os', '<<', '""""', ';', 'os', '<<', 'indent', '<<', '""""', '<<', 'this', '->', 'DataOrigin', '[', '0', ']', ';', 'for', '(', 'idx', '=', '1', ';', 'idx', '<', '3', ';', '++', 'idx', ')', '{', 'os', '<<', '""""', '<<', 'this', '->', 'DataOrigin', '[', 'idx', ']', ';', '}', 'os', '<<', '""""', ';', 'os', '<<', 'indent', '<<', '""""', '<<', 'this', '->', 'HeaderSize', '<<', '""""', ';', 'if', '(', 'this', '->', 'InternalFileName', ')', '{', 'os', '<<', 'indent', '<<', '""""', '<<', 'this', '->', 'InternalFileName', '<<', '""""', ';', '}', '{', 'os', '<<', 'indent', '<<', '""""', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
932,"['aic3x_i2c_remove', '(', 'struct', 'i2c_client', '*', 'client', ')', '{', 'struct', 'aic3x_priv', '*', 'aic3x', '=', 'i2c_get_clientdata', '(', 'client', ')', ';', 'snd_soc_unregister_codec', '(', '&', 'client', '->', 'dev', ')', ';', 'if', '(', 'gpio_is_valid', '(', 'aic3x', '->', 'gpio_reset', ')', '&&', '!aic3x_is_shared_reset', '(', 'aic3x', ')', ')', '{', 'gpio_set_value', '(', 'aic3x', '->', 'gpio_reset', ',', '0', ')', ';', 'gpio_free', '(', 'aic3x', '->', 'gpio_reset', ')', ';', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
933,"['decode_range', '(', 'unsigned', 'range_state', ',', 'unsigned', 'range_label', ',', 'unsigned', 'range_level', ',', 'word_t', '*', '*', 'domain', ',', 'wfa_t', '*', 'wfa', ')', '/', '*', '*', 'Compute', ""''"", 'image', 'of', 'range', '(', 'identified', 'by', ""''"", 'and', ""''"", ')', '*', 'at', ""'range_level"", '(', 'works', 'as', 'function', 'decode_image', '(', ')', ')', '.', '*', '*', 'Return', 'value', ':', '*', '\tpointer', 'to', 'the', 'pixels', 'in', 'SHORT', '*', '*', 'Side', 'effects', ':', '*', '\tif', ""''"", '!=', 'NULL', 'then', 'also', 'the', 'domain', '*', '\tof', 'the', 'corresponding', 'range', 'blocks', 'are', '*', 'and', 'returned', 'in', 'domain', '[', ']', '*', ""\t''"", 'is', '{', 'word_t', '*', '*', 'images', ';', '\t\t\t', '/', '*', 'pointer', 'to', 'array', 'of', 'u_word_t', '*', 'offsets', ';', '\t\t\t', '/', '*', 'pointer', 'to', 'array', 'of', 'state', 'word_t', '*', 'range', ';', 'enlarge_image', '(', 'range_level', '-', '(', 'wfa', '->', 'level_of_state', '[', 'range_state', ']', '-', '1', ')', ',', 'FORMAT_4_4_4', ',', '-', '1', ',', 'wfa', ')', ';', 'root_state', '[', '0', ']', '=', 'range_state', ';', 'state_image', '=', 'alloc_image', '(', 'width_of_level', '(', 'range_level', '+', '1', ')', ',', 'height_of_level', '(', 'range_level', '+', '1', ')', ',', 'NO', ',', 'FORMAT_4_4_4', ')', ';', 'alloc_state_images', '(', '&', 'images', ',', '&', 'offsets', ',', 'state_image', ',', 'NULL', ',', 'range_state', ',', 'range_level', '+', '1', ',', 'NO', ',', 'wfa', ')', ';', 'compute_state_images', '(', 'range_level', '+', '1', ',', 'images', ',', 'offsets', ',', 'wfa', ')', ';', 'range', '=', 'fiasco_calloc', '(', 'size_of_level', '(', 'range_level', ')', ',', 'sizeof', '(', 'word_t', ')', ')', ';', '{', 'memcpy', '(', 'range', ',', 'images', '[', 'range_state', '+', '(', 'range_level', '+', '1', ')', '*', 'wfa', '->', 'states', ']', '+', 'range_label', '*', 'size_of_level', '(', 'range_level', ')', ',', 'size_of_level', '(', 'range_level', ')', '*', 'sizeof', '(', 'word_t', ')', ')', ';', '}', '{', 'word_t', '*', 'src', ',', '*', 'dst', ';', 'unsigned', 'y', ';', 'src', '=', 'images', '[', 'range_state', '+', '(', 'range_level', '+', '1', ')', '*', 'wfa', '->', 'states', ']', '+', 'range_label', '*', 'width_of_level', '(', 'range_level', ')', ';', 'dst', '=', 'range', ';', 'for', '(', 'y', '=', 'height_of_level', '(', 'range_level', ')', ';', 'y', ';', 'y', '--', ')', '{', 'memcpy', '(', 'dst', ',', 'src', ',', 'width_of_level', '(', 'range_level', ')', '*', 'sizeof', '(', 'word_t', ')', ')', ';', 'dst', '+=', 'width_of_level', '(', 'range_level', ')', ';', 'src', '+=', 'width_of_level', '(', 'range_level', '+', '1', ')', ';', '}', '}', '{', 'if', '(', 'ischild', '(', 's', '=', 'wfa', '->', 'tree', '[', 'range_state', ']', '[', 'range_label', ']', ')', ')', '*', 'domain', '++', '=', 'duplicate_state_image', '(', 'images', '[', 's', '+', '(', 'range_level', ')', '*', 'wfa', '->', 'states', ']', ',', 'offsets', '[', 's', '+', '(', 'range_level', ')', '*', 'wfa', '->', 'states', ']', ',', 'range_level', ')', ';', 'for', '(', 'edge', '=', '0', ';', 'isedge', '(', 's', '=', 'wfa', '->', 'into', '[', 'range_state', ']', '[', 'range_label', ']', '[', 'edge', ']', ')', ';', 'edge', '++', ')', '*', 'domain', '++', '=', 'duplicate_state_image', '(', 'images', '[', 's', '+', '(', 'range_level', ')', '*', 'wfa', '->', 'states', ']', ',', 'offsets', '[', 's', '+', '(', 'range_level', ')', '*', 'wfa', '->', 'states', ']', ',', 'range_level', ')', ';', '*', 'domain', '=', 'NULL', ';', '}', 'free_state_images', '(', 'range_level', '+', '1', ',', 'NO', ',', 'images', ',', 'offsets', ',', 'NULL', ',', 'range_state', ',', 'NO', ',', 'wfa', ')', ';', 'free_image', '(', 'state_image', ')', ';', 'return', 'range', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
934,"['__ecereMethod___ecereNameSpace__ecere__sys__BufferedFile_Seek', '(', 'struct', '__ecereNameSpace__ecere__com__Instance', '*', 'this', ',', 'int', 'pos', ',', 'int', 'mode', ')', '{', 'struct', '__ecereNameSpace__ecere__sys__BufferedFile', '*', '__ecerePointer___ecereNameSpace__ecere__sys__BufferedFile', '=', '(', 'struct', '__ecereNameSpace__ecere__sys__BufferedFile', '*', ')', '(', 'this', '?', '(', '(', '(', 'char', '*', ')', 'this', ')', '+', '20', ')', ':', '0', ')', ';', 'unsigned', 'int', 'newPosition', '=', '__ecerePointer___ecereNameSpace__ecere__sys__BufferedFile', '->', 'pos', ';', 'switch', '(', 'mode', ')', '{', 'case', '0', ':', 'newPosition', '=', 'pos', ';', 'break', ';', 'case', '1', ':', 'newPosition', '+=', 'pos', ';', 'break', ';', 'case', '2', ':', '{', 'newPosition', '=', '__ecerePointer___ecereNameSpace__ecere__sys__BufferedFile', '->', 'fileSize', '+', 'pos', ';', 'break', ';', '}', '}', 'if', '(', '__ecerePointer___ecereNameSpace__ecere__sys__BufferedFile', '->', 'pos', '!=', 'newPosition', ')', '{', 'if', '(', 'newPosition', '>=', '__ecerePointer___ecereNameSpace__ecere__sys__BufferedFile', '->', 'pos', '-', '__ecerePointer___ecereNameSpace__ecere__sys__BufferedFile', '->', 'bufferPos', '&&', 'newPosition', '<', '__ecerePointer___ecereNameSpace__ecere__sys__BufferedFile', '->', 'pos', '+', '__ecerePointer___ecereNameSpace__ecere__sys__BufferedFile', '->', 'bufferSize', ')', '{', 'if', '(', 'newPosition', '<', '__ecerePointer___ecereNameSpace__ecere__sys__BufferedFile', '->', 'pos', '-', '__ecerePointer___ecereNameSpace__ecere__sys__BufferedFile', '->', 'bufferPos', '+', '__ecerePointer___ecereNameSpace__ecere__sys__BufferedFile', '->', 'bufferCount', ')', '__ecerePointer___ecereNameSpace__ecere__sys__BufferedFile', '->', 'bufferPos', '+=', 'newPosition', '-', '__ecerePointer___ecereNameSpace__ecere__sys__BufferedFile', '->', 'pos', ';', '{', 'unsigned', 'int', 'read', '=', 'newPosition', '-', '__ecerePointer___ecereNameSpace__ecere__sys__BufferedFile', '->', 'pos', '-', '__ecerePointer___ecereNameSpace__ecere__sys__BufferedFile', '->', 'bufferCount', ';', 'if', '(', 'read', '<', '__ecerePointer___ecereNameSpace__ecere__sys__BufferedFile', '->', 'bufferCount', '*', '2', ')', '{', 'if', '(', 'read', '>', '__ecerePointer___ecereNameSpace__ecere__sys__BufferedFile', '->', 'bufferSize', ')', '{', '__ecerePointer___ecereNameSpace__ecere__sys__BufferedFile', '->', 'bufferCount', '=', '0', ';', '__ecerePointer___ecereNameSpace__ecere__sys__BufferedFile', '->', 'bufferPos', '=', '0', ';', '}', '{', '(', '(', 'unsigned', 'int', '(', '*', ')', '(', 'struct', '__ecereNameSpace__ecere__com__Instance', '*', ',', 'int', 'pos', ',', 'int', 'mode', ')', ')', '__ecerePointer___ecereNameSpace__ecere__sys__BufferedFile', '->', 'handle', '->', '_vTbl', '[', '__ecereVMethodID___ecereNameSpace__ecere__sys__File_Seek', ']', ')', '(', '__ecerePointer___ecereNameSpace__ecere__sys__BufferedFile', '->', 'handle', ',', '__ecerePointer___ecereNameSpace__ecere__sys__BufferedFile', '->', 'pos', '-', '__ecerePointer___ecereNameSpace__ecere__sys__BufferedFile', '->', 'bufferPos', '+', '__ecerePointer___ecereNameSpace__ecere__sys__BufferedFile', '->', 'bufferCount', ',', '0', ')', ';', 'read', '=', '(', '(', 'int', '(', '*', ')', '(', 'struct', '__ecereNameSpace__ecere__com__Instance', '*', ',', 'void', '*', 'buffer', ',', 'unsigned', 'int', 'size', ',', 'unsigned', 'int', 'count', ')', ')', '__ecerePointer___ecereNameSpace__ecere__sys__BufferedFile', '->', 'handle', '->', '_vTbl', '[', '__ecereVMethodID___ecereNameSpace__ecere__sys__File_Read', ']', ')', '(', '__ecerePointer___ecereNameSpace__ecere__sys__BufferedFile', '->', 'handle', ',', '__ecerePointer___ecereNameSpace__ecere__sys__BufferedFile', '->', 'buffer', '+', '__ecerePointer___ecereNameSpace__ecere__sys__BufferedFile', '->', 'bufferCount', ',', '1', ',', 'read', ')', ';', '__ecerePointer___ecereNameSpace__ecere__sys__BufferedFile', '->', 'bufferPos', '+=', 'newPosition', '-', '__ecerePointer___ecereNameSpace__ecere__sys__BufferedFile', '->', 'pos', ';', '__ecerePointer___ecereNameSpace__ecere__sys__BufferedFile', '->', 'bufferCount', '+=', 'read', ';', '}', '}', '{', '__ecerePointer___ecereNameSpace__ecere__sys__BufferedFile', '->', 'bufferCount', '=', '0', ';', '__ecerePointer___ecereNameSpace__ecere__sys__BufferedFile', '->', 'bufferPos', '=', '0', ';', '}', '}', '}', '{', '__ecerePointer___ecereNameSpace__ecere__sys__BufferedFile', '->', 'bufferCount', '=', '0', ';', '__ecerePointer___ecereNameSpace__ecere__sys__BufferedFile', '->', 'bufferPos', '=', '0', ';', '}', '__ecerePointer___ecereNameSpace__ecere__sys__BufferedFile', '->', 'eof', '=', 'newPosition', '>', '__ecerePointer___ecereNameSpace__ecere__sys__BufferedFile', '->', 'fileSize', ';', '__ecerePointer___ecereNameSpace__ecere__sys__BufferedFile', '->', 'pos', '=', 'newPosition', ';', '}', 'return', '0x1', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  True,CWE-other  True
935,"['camel_folder_get_quota_info_finish', '(', 'CamelFolder', '*', 'folder', ',', 'GAsyncResult', '*', 'result', ',', 'GError', '*', '*', 'error', ')', '{', 'CamelFolderClass', '*', 'class', ';', 'g_return_val_if_fail', '(', 'CAMEL_IS_FOLDER', '(', 'folder', ')', ',', 'NULL', ')', ';', 'class', '=', 'CAMEL_FOLDER_GET_CLASS', '(', 'folder', ')', ';', 'g_return_val_if_fail', '(', 'class', '->', 'get_quota_info_finish', '!=', 'NULL', ',', 'NULL', ')', ';', 'return', 'class', '->', 'get_quota_info_finish', '(', 'folder', ',', 'result', ',', 'error', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
936,"['printThreadsDump', '(', 'Thread', '*', 'self', ')', '{', 'char', 'buffer', '[', '256', ']', ';', 'Thread', '*', 'thread', ';', 'suspendAllThreads', '(', 'self', ')', ';', 'jam_printf', '(', '""""', ',', 'VERSION', ')', ';', 'for', '(', 'thread', '=', '&', 'main_thread', ';', 'thread', '!=', 'NULL', ';', 'thread', '=', 'thread', '->', 'next', ')', '{', 'Object', '*', 'jThread', '=', 'thread', '->', 'ee', '->', 'thread', ';', 'int', 'priority', '=', 'INST_DATA', '(', 'jThread', ',', 'int', ',', 'priority_offset', ')', ';', 'int', 'daemon', '=', 'INST_DATA', '(', 'jThread', ',', 'int', ',', 'daemon_offset', ')', ';', 'Frame', '*', 'last', '=', 'thread', '->', 'ee', '->', 'last_frame', ';', '/', '*', 'Get', 'thread', 'name', ';', 'we', ""don't"", 'use', 'String2Cstr', '(', ')', ',', 'as', 'this', 'memory', 'and', 'may', 'deadlock', 'with', 'a', 'thread', 'suspended', 'classlibThreadName2Buff', '(', 'jThread', ',', 'buffer', ',', 'sizeof', '(', 'buffer', ')', ')', ';', 'jam_printf', '(', '""""', '%', '""""', ',', 'buffer', ',', 'daemon', '?', '""""', ':', '""""', ',', 'thread', ',', 'priority', ',', 'thread', '->', 'tid', ',', 'thread', '->', 'id', ',', 'getThreadStateString', '(', 'thread', ')', ',', 'classlibGetThreadState', '(', 'thread', ')', ')', ';', 'while', '(', 'last', '->', 'prev', '!=', 'NULL', ')', '{', 'for', '(', ';', 'last', '->', 'mb', '!=', 'NULL', ';', 'last', '=', 'last', '->', 'prev', ')', '{', 'MethodBlock', '*', 'mb', '=', 'last', '->', 'mb', ';', 'ClassBlock', '*', 'cb', '=', 'CLASS_CB', '(', 'mb', '->', 'class', ')', ';', '/', '*', 'Convert', 'slashes', 'in', 'class', 'name', 'to', 'dots', '.', 'Similar', 'above', ',', 'we', ""don't"", 'use', 'slash2DotsDup', '(', ')', ',', 'as', 'this', 'slash2DotsBuff', '(', 'cb', '->', 'name', ',', 'buffer', ',', 'sizeof', '(', 'buffer', ')', ')', ';', 'jam_printf', '(', '""""', ',', 'buffer', ',', 'mb', '->', 'name', ')', ';', 'if', '(', 'mb', '->', 'access_flags', '&', 'ACC_NATIVE', ')', 'jam_printf', '(', '""""', ')', ';', 'if', '(', 'cb', '->', 'source_file_name', '==', 'NULL', ')', 'jam_printf', '(', '""""', ')', ';', 'else', '{', 'int', 'line', '=', 'mapPC2LineNo', '(', 'mb', ',', 'last', '->', 'last_pc', ')', ';', 'jam_printf', '(', '""""', ',', 'cb', '->', 'source_file_name', ')', ';', 'if', '(', 'line', '!=', '-', '1', ')', 'jam_printf', '(', '""""', ',', 'line', ')', ';', '}', 'jam_printf', '(', '""""', ')', ';', '}', 'last', '=', 'last', '->', 'prev', ';', '}', '}', 'resumeAllThreads', '(', 'self', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
937,"['kwsysProcessClosePipes', '(', 'kwsysProcess', '*', 'cp', ')', '{', 'int', 'i', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'KWSYSPE_PIPE_COUNT', ';', '++', 'i', ')', '{', 'if', '(', 'cp', '->', 'PipeReadEnds', '[', 'i', ']', '>=', '0', ')', '{', '#if', '/', '*', 'If', 'the', 'pipe', 'was', 'reported', 'by', 'the', 'last', 'call', 'to', 'select', ',', 'we', 'read', 'from', 'it', '.', 'This', 'is', 'needed', 'to', 'satisfy', 'the', 'suggestions', '""""', 'and', 'is', 'not', 'needed', 'for', 'the', 'if', '(', 'FD_ISSET', '(', 'cp', '->', 'PipeReadEnds', '[', 'i', ']', ',', '&', 'cp', '->', 'PipeSet', ')', ')', '{', 'FD_CLR', '(', 'cp', '->', 'PipeReadEnds', '[', 'i', ']', ',', '&', 'cp', '->', 'PipeSet', ')', ';', '/', '*', 'The', 'pipe', 'is', 'ready', 'to', 'read', 'without', 'blocking', '.', 'Keep', 'trying', 'while', '(', '(', 'read', '(', 'cp', '->', 'PipeReadEnds', '[', 'i', ']', ',', 'cp', '->', 'PipeBuffer', ',', 'KWSYSPE_PIPE_BUFFER_SIZE', ')', '<', '0', ')', '&&', '(', 'errno', '==', 'EINTR', ')', ')', ';', '}', 'kwsysProcessCleanupDescriptor', '(', '&', 'cp', '->', 'PipeReadEnds', '[', 'i', ']', ')', ';', '--', 'cp', '->', 'PipesLeft', ';', '}', '}', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
938,"['{', 'int', 'n', ';', 'char', '*', '*', 'strv', '=', 'NULL', ';', 'char', '*', '_str', ',', '*', 'p', ';', 'char', '_delim', '[', '2', ']', '=', '{', '0', ',', '0', '}', ';', 'cdio_assert', '(', 'str', '!=', 'NULL', ')', ';', '_str', '=', 'strdup', '(', 'str', ')', ';', '_delim', '[', '0', ']', '=', 'delim', ';', 'cdio_assert', '(', '_str', '!=', 'NULL', ')', ';', 'n', '=', '1', ';', 'p', '=', '_str', ';', 'while', '(', '*', 'p', ')', 'if', '(', '*', '(', 'p', '++', ')', '==', 'delim', ')', 'n', '++', ';', 'strv', '=', 'calloc', '(', '1', ',', 'sizeof', '(', 'char', '*', ')', '*', '(', 'n', '+', '1', ')', ')', ';', 'n', '=', '0', ';', 'while', '(', '(', 'p', '=', 'strtok', '(', 'n', '?', 'NULL', ':', '_str', ',', '_delim', ')', ')', '!=', 'NULL', ')', 'strv', '[', 'n', '++', ']', '=', 'strdup', '(', 'p', ')', ';', 'free', '(', '_str', ')', ';', 'return', 'strv', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
939,"['gpk_modal_dialog_make_progressbar_pulse', '(', 'GpkModalDialog', '*', 'dialog', ')', '{', 'GtkProgressBar', '*', 'progress_bar', ';', 'if', '(', 'dialog', '->', 'priv', '->', 'pulse_timer_id', '==', '0', ')', '{', 'progress_bar', '=', 'GTK_PROGRESS_BAR', '(', 'gtk_builder_get_object', '(', 'dialog', '->', 'priv', '->', 'builder', ',', '""""', ')', ')', ';', 'gtk_progress_bar_set_pulse_step', '(', 'progress_bar', ',', '0', '.', '04', ')', ';', 'dialog', '->', 'priv', '->', 'pulse_timer_id', '=', 'g_timeout_add', '(', '75', ',', '(', 'GSourceFunc', ')', 'gpk_modal_dialog_pulse_progress', ',', 'dialog', ')', ';', 'g_source_set_name_by_id', '(', 'dialog', '->', 'priv', '->', 'pulse_timer_id', ',', '""""', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
940,"['test_cant_write_private_without_login', '(', 'Test', '*', 'test', ',', 'gconstpointer', 'unused', ')', '{', 'GkmDataResult', 'res', ';', 'res', '=', 'gkm_gnome2_file_create_entry', '(', 'test', '->', 'data_file', ',', '""""', ',', 'GKM_GNOME2_FILE_SECTION_PRIVATE', ')', ';', 'g_assert', '(', 'res', '==', 'GKM_DATA_SUCCESS', ')', ';', 'res', '=', 'gkm_gnome2_file_write_fd', '(', 'test', '->', 'data_file', ',', 'test', '->', 'write_fd', ',', 'NULL', ')', ';', 'g_assert', '(', 'res', '==', 'GKM_DATA_LOCKED', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
941,"['v4l2_buffers_mapped', '(', 'int', 'index', ')', '{', 'unsigned', 'int', 'i', ';', 'if', '(', '!v4l2_needs_conversion', '(', 'index', ')', ')', '{', 'struct', 'v4l2_buffer', 'buf', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'devices', '[', 'index', ']', '.', 'no_frames', ';', 'i', '++', ')', '{', 'buf', '.', 'type', '=', 'V4L2_BUF_TYPE_VIDEO_CAPTURE', ';', 'buf', '.', 'memory', '=', 'V4L2_MEMORY_MMAP', ';', 'buf', '.', 'index', '=', 'i', ';', 'if', '(', 'devices', '[', 'index', ']', '.', 'dev_ops', '->', 'ioctl', '(', 'devices', '[', 'index', ']', '.', 'dev_ops_priv', ',', 'devices', '[', 'index', ']', '.', 'fd', ',', 'VIDIOC_QUERYBUF', ',', '&', 'buf', ')', ')', '{', 'int', 'saved_err', '=', 'errno', ';', 'V4L2_PERROR', '(', '""""', ',', 'i', ')', ';', 'errno', '=', 'saved_err', ';', 'break', ';', '}', 'if', '(', 'buf', '.', 'flags', '&', 'V4L2_BUF_FLAG_MAPPED', ')', 'break', ';', '}', '}', 'else', '{', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'devices', '[', 'index', ']', '.', 'no_frames', ';', 'i', '++', ')', 'if', '(', 'devices', '[', 'index', ']', '.', 'frame_map_count', '[', 'i', ']', ')', 'break', ';', '}', 'if', '(', 'i', '!=', 'devices', '[', 'index', ']', '.', 'no_frames', ')', 'V4L2_LOG', '(', '""""', ')', ';', 'return', 'i', '!=', 'devices', '[', 'index', ']', '.', 'no_frames', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
942,"['chise_make_hash_table', '(', 'size_t', 'size', ')', '{', 'CHISE_HASH_TABLE', '*', '=', '(', 'CHISE_HASH_TABLE', '*', ')', 'malloc', '(', 'sizeof', '(', 'CHISE_HASH_TABLE', ')', ')', ';', 'if', '(', 'hash', '==', 'NULL', ')', 'return', 'NULL', ';', 'hash', '->', '=', '(', 'CHISE_HASH_TABLE_ENTRY', '*', ')', 'malloc', '(', 'sizeof', '(', 'CHISE_HASH_TABLE_ENTRY', ')', '*', 'size', ')', ';', 'if', '(', 'hash', '->', 'data', '==', 'NULL', ')', '{', 'free', '(', 'hash', ')', ';', 'return', 'NULL', ';', '}', 'hash', '->', 'size', '=', 'size', ';', 'memset', '(', 'hash', '->', 'data', ',', '0', ',', 'sizeof', '(', 'CHISE_HASH_TABLE_ENTRY', ')', '*', 'size', ')', ';', 'return', 'hash', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
943,"['test_config_read__local_config_overrides_global_config_overrides_system_config', '(', 'void', ')', '{', 'git_config', '*', 'cfg', ';', 'int32_t', 'i', ';', 'cl_git_pass', '(', 'git_config_new', '(', '&', 'cfg', ')', ')', ';', 'cl_git_pass', '(', 'git_config_add_file_ondisk', '(', 'cfg', ',', 'cl_fixture', '(', '""""', ')', ',', 'GIT_CONFIG_LEVEL_SYSTEM', ',', '0', ')', ')', ';', 'cl_git_pass', '(', 'git_config_add_file_ondisk', '(', 'cfg', ',', 'cl_fixture', '(', '""""', ')', ',', 'GIT_CONFIG_LEVEL_GLOBAL', ',', '0', ')', ')', ';', 'cl_git_pass', '(', 'git_config_add_file_ondisk', '(', 'cfg', ',', 'cl_fixture', '(', '""""', ')', ',', 'GIT_CONFIG_LEVEL_LOCAL', ',', '0', ')', ')', ';', 'cl_git_pass', '(', 'git_config_get_int32', '(', '&', 'i', ',', 'cfg', ',', '""""', ')', ')', ';', 'cl_assert_equal_i', '(', '28', ',', 'i', ')', ';', 'git_config_free', '(', 'cfg', ')', ';', 'cl_git_pass', '(', 'git_config_new', '(', '&', 'cfg', ')', ')', ';', 'cl_git_pass', '(', 'git_config_add_file_ondisk', '(', 'cfg', ',', 'cl_fixture', '(', '""""', ')', ',', 'GIT_CONFIG_LEVEL_SYSTEM', ',', '0', ')', ')', ';', 'cl_git_pass', '(', 'git_config_add_file_ondisk', '(', 'cfg', ',', 'cl_fixture', '(', '""""', ')', ',', 'GIT_CONFIG_LEVEL_GLOBAL', ',', '0', ')', ')', ';', 'cl_git_pass', '(', 'git_config_get_int32', '(', '&', 'i', ',', 'cfg', ',', '""""', ')', ')', ';', 'cl_assert_equal_i', '(', '7', ',', 'i', ')', ';', 'git_config_free', '(', 'cfg', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
944,"['bnx2x_restart_autoneg', '(', 'struct', 'bnx2x_phy', '*', 'phy', ',', 'struct', 'link_params', '*', 'params', ',', 'u8', 'enable_cl73', ')', '{', 'struct', 'bnx2x', '*', 'bp', '=', 'params', '->', 'bp', ';', 'u16', 'mii_control', ';', 'DP', '(', 'NETIF_MSG_LINK', ',', '""""', ')', ';', 'if', '(', 'enable_cl73', ')', '{', 'CL22_RD_OVER_CL45', '(', 'bp', ',', 'phy', ',', 'MDIO_REG_BANK_CL73_IEEEB0', ',', 'MDIO_CL73_IEEEB0_CL73_AN_CONTROL', ',', '&', 'mii_control', ')', ';', 'CL22_WR_OVER_CL45', '(', 'bp', ',', 'phy', ',', 'MDIO_REG_BANK_CL73_IEEEB0', ',', 'MDIO_CL73_IEEEB0_CL73_AN_CONTROL', ',', '(', 'mii_control', '|', 'MDIO_CL73_IEEEB0_CL73_AN_CONTROL_AN_EN', '|', 'MDIO_CL73_IEEEB0_CL73_AN_CONTROL_RESTART_AN', ')', ')', ';', '}', 'else', '{', 'CL22_RD_OVER_CL45', '(', 'bp', ',', 'phy', ',', 'MDIO_REG_BANK_COMBO_IEEE0', ',', 'MDIO_COMBO_IEEE0_MII_CONTROL', ',', '&', 'mii_control', ')', ';', 'DP', '(', 'NETIF_MSG_LINK', ',', '""""', ',', 'mii_control', ')', ';', 'CL22_WR_OVER_CL45', '(', 'bp', ',', 'phy', ',', 'MDIO_REG_BANK_COMBO_IEEE0', ',', 'MDIO_COMBO_IEEE0_MII_CONTROL', ',', '(', 'mii_control', '|', 'MDIO_COMBO_IEEO_MII_CONTROL_AN_EN', '|', 'MDIO_COMBO_IEEO_MII_CONTROL_RESTART_AN', ')', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
945,"['stp_set_boolean_parameter', '(', 'stp_vars_t', '*', 'v', ',', 'const', 'char', '*', 'parameter', ',', 'int', 'ival', ')', '{', 'stp_list_t', '*', 'list', '=', 'v', '->', 'params', '[', 'STP_PARAMETER_TYPE_BOOLEAN', ']', ';', 'value_t', '*', 'val', ';', 'stp_list_item_t', '*', 'item', '=', 'stp_list_get_item_by_name', '(', 'list', ',', 'parameter', ')', ';', 'stp_deprintf', '(', 'STP_DBG_VARS', ',', '""""', ',', '(', 'const', 'void', '*', ')', 'v', ',', 'parameter', ',', 'ival', ')', ';', 'if', '(', 'item', ')', '{', 'val', '=', '(', 'value_t', '*', ')', 'stp_list_item_get_data', '(', 'item', ')', ';', 'if', '(', 'val', '->', 'active', '==', 'STP_PARAMETER_DEFAULTED', ')', 'val', '->', 'active', '=', 'STP_PARAMETER_ACTIVE', ';', '}', '{', 'val', '=', 'stp_malloc', '(', 'sizeof', '(', 'value_t', ')', ')', ';', 'val', '->', 'name', '=', 'stp_strdup', '(', 'parameter', ')', ';', 'val', '->', 'typ', '=', 'STP_PARAMETER_TYPE_BOOLEAN', ';', 'val', '->', 'active', '=', 'STP_PARAMETER_ACTIVE', ';', 'stp_list_item_create', '(', 'list', ',', 'NULL', ',', 'val', ')', ';', '}', 'if', '(', 'ival', ')', 'val', '->', 'value', '.', 'ival', '=', '1', ';', 'val', '->', 'value', '.', 'ival', '=', '0', ';', 'stp_set_verified', '(', 'v', ',', '0', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
946,"['__ecereMethod___ecereNameSpace__ecere__gfx3D__Camera_Project', '(', 'struct', '__ecereNameSpace__ecere__com__Instance', '*', 'this', ',', 'struct', '__ecereNameSpace__ecere__gfx3D__Vector3D', '*', 'vector', ',', 'struct', '__ecereNameSpace__ecere__gfx3D__Vector3D', '*', 'point', ')', '{', 'struct', '__ecereNameSpace__ecere__gfx3D__Camera', '*', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Camera', '=', '(', 'struct', '__ecereNameSpace__ecere__gfx3D__Camera', '*', ')', '(', 'this', '?', '(', '(', '(', 'char', '*', ')', 'this', ')', '+', '__ecereClass___ecereNameSpace__ecere__gfx3D__Camera', '->', 'offset', ')', ':', '0', ')', ';', 'if', '(', 'vector', '->', 'z', '>=', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Camera', '->', 'zMin', ')', '{', 'float', 'floatZ', ';', 'point', '->', 'x', '=', '(', 'vector', '->', 'x', '*', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Camera', '->', 'focalX', '/', 'vector', '->', 'z', ')', ';', 'point', '->', 'y', '=', '(', 'vector', '->', 'y', '*', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Camera', '->', 'focalY', '/', 'vector', '->', 'z', ')', ';', 'point', '->', 'z', '=', '(', '(', '(', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Camera', '->', 'zMax', '*', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Camera', '->', 'zMin', '/', '-', 'vector', '->', 'z', ')', '+', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Camera', '->', 'zMax', ')', '/', '(', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Camera', '->', 'zMax', '-', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Camera', '->', 'zMin', ')', ')', ';', 'floatZ', '=', '(', '(', '(', '(', 'float', ')', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Camera', '->', 'zMax', '*', '(', 'float', ')', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Camera', '->', 'zMin', '/', '-', '(', 'float', ')', 'vector', '->', 'z', ')', '+', '(', 'float', ')', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Camera', '->', 'zMax', ')', '/', '(', '(', 'float', ')', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Camera', '->', 'zMax', '-', '(', 'float', ')', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Camera', '->', 'zMin', ')', ')', ';', 'point', '->', 'x', '+=', '(', 'double', ')', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Camera', '->', 'origin', '.', 'x', ';', 'point', '->', 'y', '+=', '(', 'double', ')', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Camera', '->', 'origin', '.', 'y', ';', 'return', '(', 'point', '->', 'x', '>=', '(', 'double', ')', '0', '&&', 'point', '->', 'y', '>=', '(', 'double', ')', '0', '&&', 'point', '->', 'x', '<', '(', 'double', ')', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Camera', '->', 'width', '&&', 'point', '->', 'y', '<', '(', 'double', ')', '__ecerePointer___ecereNameSpace__ecere__gfx3D__Camera', '->', 'height', ')', ';', '}', 'return', '0x0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
947,"['mod_secdownload_patch_connection', '(', 'server', '*', 'srv', ',', 'connection', '*', 'con', ',', 'plugin_data', '*', 'p', ')', '{', 'size_t', 'i', ',', 'j', ';', 'plugin_config', '*', 's', '=', 'p', '->', 'config_storage', '[', '0', ']', ';', 'PATCH', '(', 'secret', ')', ';', 'PATCH', '(', 'doc_root', ')', ';', 'PATCH', '(', 'uri_prefix', ')', ';', 'PATCH', '(', 'timeout', ')', ';', 'for', '(', 'i', '=', '1', ';', 'i', '<', 'srv', '->', 'config_context', '->', 'used', ';', 'i', '++', ')', '{', 'data_config', '*', 'dc', '=', '(', 'data_config', '*', ')', 'srv', '->', 'config_context', '->', 'data', '[', 'i', ']', ';', 's', '=', 'p', '->', 'config_storage', '[', 'i', ']', ';', 'if', '(', '!config_check_cond', '(', 'srv', ',', 'con', ',', 'dc', ')', ')', 'continue', ';', 'for', '(', 'j', '=', '0', ';', 'j', '<', 'dc', '->', 'value', '->', 'used', ';', 'j', '++', ')', '{', 'data_unset', '*', 'du', '=', 'dc', '->', 'value', '->', 'data', '[', 'j', ']', ';', 'if', '(', 'buffer_is_equal_string', '(', 'du', '->', 'key', ',', 'CONST_STR_LEN', '(', '""""', ')', ')', ')', '{', 'PATCH', '(', 'secret', ')', ';', '}', 'else', 'if', '(', 'buffer_is_equal_string', '(', 'du', '->', 'key', ',', 'CONST_STR_LEN', '(', '""""', ')', ')', ')', '{', 'PATCH', '(', 'doc_root', ')', ';', '}', 'else', 'if', '(', 'buffer_is_equal_string', '(', 'du', '->', 'key', ',', 'CONST_STR_LEN', '(', '""""', ')', ')', ')', '{', 'PATCH', '(', 'uri_prefix', ')', ';', '}', 'else', 'if', '(', 'buffer_is_equal_string', '(', 'du', '->', 'key', ',', 'CONST_STR_LEN', '(', '""""', ')', ')', ')', '{', 'PATCH', '(', 'timeout', ')', ';', '}', '}', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
948,"['iodbcdm_drvconn_dialbox', '(', 'HWND', 'hwnd', ',', 'LPSTR', 'szInOutConnStr', ',', 'DWORD', 'cbInOutConnStr', ',', 'int', '*', 'sqlStat', ',', 'SQLUSMALLINT', 'fDriverCompletion', ',', 'UWORD', '*', 'config', ')', '{', 'RETCODE', 'retcode', '=', 'SQL_ERROR', ';', 'wchar_t', '*', '_string_w', '=', 'NULL', ';', 'if', '(', 'cbInOutConnStr', '>', '0', ')', '{', 'if', '(', '(', '_string_w', '=', 'malloc', '(', 'cbInOutConnStr', '*', 'sizeof', '(', 'wchar_t', ')', '+', '1', ')', ')', '==', 'NULL', ')', 'goto', 'done', ';', '}', 'dm_StrCopyOut2_A2W', '(', 'szInOutConnStr', ',', '_string_w', ',', 'cbInOutConnStr', '*', 'sizeof', '(', 'wchar_t', ')', ',', 'NULL', ')', ';', 'retcode', '=', 'iodbcdm_drvconn_dialboxw', '(', 'hwnd', ',', '_string_w', ',', 'cbInOutConnStr', ',', 'sqlStat', ',', 'fDriverCompletion', ',', 'config', ')', ';', 'if', '(', 'retcode', '==', 'SQL_SUCCESS', ')', '{', 'dm_StrCopyOut2_W2A', '(', '_string_w', ',', 'szInOutConnStr', ',', 'cbInOutConnStr', '-', '1', ',', 'NULL', ')', ';', '}', 'done', ':', 'MEM_FREE', '(', '_string_w', ')', ';', 'return', 'retcode', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
949,"['init_handles_slot', '(', 'int', 'idx', ')', '{', 'int', 'thr_ret', ';', 'thr_ret', '=', 'mono_os_mutex_lock', '(', '&', 'scan_mutex', ')', ';', 'g_assert', '(', 'thr_ret', '==', '0', ')', ';', 'if', '(', '_wapi_private_handles', '[', 'idx', ']', '==', 'NULL', ')', '{', '_wapi_private_handles', '[', 'idx', ']', '=', 'g_new0', '(', 'struct', '_WapiHandleUnshared', ',', '_WAPI_HANDLE_INITIAL_COUNT', ')', ';', 'g_assert', '(', '_wapi_private_handles', '[', 'idx', ']', ')', ';', '}', 'thr_ret', '=', 'mono_os_mutex_unlock', '(', '&', 'scan_mutex', ')', ';', 'g_assert', '(', 'thr_ret', '==', '0', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
950,"['main', '(', 'int', 'argc', ',', 'char', '*', 'argv', '[', ']', ')', '{', 'if', '(', 'argc', '<', '2', ')', '{', 'fprintf', '(', 'stderr', ',', '""""', ',', 'argv', '[', '0', ']', ')', ';', 'return', '-', '1', ';', '}', 'if', '(', 'load_matrix', '(', 'argv', '[', '1', ']', ')', '<', '0', ')', '{', 'fprintf', '(', 'stderr', ',', '""""', ',', 'argv', '[', '1', ']', ')', ';', 'return', '-', '1', ';', '}', '/', '/', 'vertex_vertices_dump', '(', ')', ';', '/', '/', 'edge_dump', '(', ')', ';', 'int', 'min_cuts', '=', 'random_contraction_min_cut', '(', ')', ';', 'printf', '(', '""""', ',', 'min_cuts', ')', ';', 'return', 'min_cuts', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
951,"['kona_peri_clk_determine_rate', '(', 'struct', 'clk_hw', '*', 'hw', ',', 'struct', 'clk_rate_request', '*', 'req', ')', '{', 'struct', 'kona_clk', '*', 'bcm_clk', '=', 'to_kona_clk', '(', 'hw', ')', ';', 'struct', 'clk_hw', '*', 'current_parent', ';', 'unsigned', 'long', 'parent_rate', ';', 'unsigned', 'long', 'best_delta', ';', 'unsigned', 'long', 'best_rate', ';', 'u32', 'parent_count', ';', 'long', 'rate', ';', 'u32', 'which', ';', '/', '*', '*', 'If', 'there', 'is', 'no', 'other', 'parent', 'to', 'choose', ',', 'use', 'the', 'current', 'one', '.', '*', 'Note', ':', 'We', ""don't"", 'honor', '(', 'or', 'use', ')', 'CLK_SET_RATE_NO_REPARENT', '.', 'WARN_ON_ONCE', '(', 'bcm_clk', '->', 'init_data', '.', 'flags', '&', 'CLK_SET_RATE_NO_REPARENT', ')', ';', 'parent_count', '=', '(', 'u32', ')', 'bcm_clk', '->', 'init_data', '.', 'num_parents', ';', 'if', '(', 'parent_count', '<', '2', ')', '{', 'rate', '=', 'kona_peri_clk_round_rate', '(', 'hw', ',', 'req', '->', 'rate', ',', '&', 'req', '->', 'best_parent_rate', ')', ';', 'if', '(', 'rate', '<', '0', ')', 'return', 'rate', ';', 'req', '->', 'rate', '=', 'rate', ';', 'return', '0', ';', '}', 'current_parent', '=', 'clk_hw_get_parent', '(', 'hw', ')', ';', 'parent_rate', '=', 'clk_hw_get_rate', '(', 'current_parent', ')', ';', 'best_rate', '=', 'kona_peri_clk_round_rate', '(', 'hw', ',', 'req', '->', 'rate', ',', '&', 'parent_rate', ')', ';', 'best_delta', '=', 'abs', '(', 'best_rate', '-', 'req', '->', 'rate', ')', ';', 'for', '(', 'which', '=', '0', ';', 'which', '<', 'parent_count', ';', 'which', '++', ')', '{', 'struct', 'clk_hw', '*', 'parent', '=', 'clk_hw_get_parent_by_index', '(', 'hw', ',', 'which', ')', ';', 'unsigned', 'long', 'delta', ';', 'unsigned', 'long', 'other_rate', ';', 'BUG_ON', '(', '!parent', ')', ';', 'if', '(', 'parent', '==', 'current_parent', ')', 'continue', ';', 'parent_rate', '=', 'clk_hw_get_rate', '(', 'parent', ')', ';', 'other_rate', '=', 'kona_peri_clk_round_rate', '(', 'hw', ',', 'req', '->', 'rate', ',', '&', 'parent_rate', ')', ';', 'delta', '=', 'abs', '(', 'other_rate', '-', 'req', '->', 'rate', ')', ';', 'if', '(', 'delta', '<', 'best_delta', ')', '{', 'best_delta', '=', 'delta', ';', 'best_rate', '=', 'other_rate', ';', 'req', '->', 'best_parent_hw', '=', 'parent', ';', 'req', '->', 'best_parent_rate', '=', 'parent_rate', ';', '}', '}', 'req', '->', 'rate', '=', 'best_rate', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
952,"['InitVolumeBounds', '(', 'int', 'NBounds', ',', 'int', 'N', ',', 'Geometry_t', '*', 'RTElements', ')', '{', 'int', 'i', ';', 'VolumeBounds', '=', '(', 'VolumeBounds_t', '*', ')', 'calloc', '(', '1', ',', 'sizeof', '(', 'VolumeBounds_t', ')', ')', ';', 'VolumeBounds', '->', 'n', '=', 'N', ';', 'VolumeBounds', '->', 'Elements', '=', '(', 'int', '*', ')', 'malloc', '(', 'N', '*', 'sizeof', '(', 'int', ')', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'N', ';', 'i', '++', ')', 'VolumeBounds', '->', 'Elements', '[', 'i', ']', '=', 'i', ';', 'VolumeBBox', '(', 'VolumeBounds', ',', 'RTElements', ')', ';', 'VolumeDivide', '(', 'VolumeBounds', ',', 'NBounds', ',', 'RTElements', ',', '0', ')', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
953,"['crlf_load_attributes', '(', 'struct', 'crlf_attrs', '*', 'ca', ',', 'git_repository', '*', 'repo', ',', 'const', 'char', '*', 'path', ')', '{', '#define', 'NUM_CONV_ATTRS', 'static', 'const', 'char', '*', 'attr_names', '[', 'NUM_CONV_ATTRS', ']', '=', '{', '""""', ',', '""""', ',', '""""', ',', '}', ';', 'const', 'char', '*', 'attr_vals', '[', 'NUM_CONV_ATTRS', ']', ';', 'int', 'error', ';', 'error', '=', 'git_attr_get_many', '(', 'attr_vals', ',', 'repo', ',', '0', ',', 'path', ',', 'NUM_CONV_ATTRS', ',', 'attr_names', ')', ';', 'if', '(', 'error', '==', 'GIT_ENOTFOUND', ')', '{', 'ca', '->', 'crlf_action', '=', 'GIT_CRLF_GUESS', ';', 'ca', '->', 'eol', '=', 'GIT_EOL_UNSET', ';', 'return', '0', ';', '}', 'if', '(', 'error', '==', '0', ')', '{', 'if', '(', 'ca', '->', 'crlf_action', '==', 'GIT_CRLF_GUESS', ')', 'return', '0', ';', '}', 'return', '-', '1', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
954,"['gionbana_scrolly_w', '(', 'int', 'data', ')', '{', 'if', '(', 'gionbana_flipscreen', ')', 'gionbana_scrolly1', '=', '-', '2', ';', 'else', 'gionbana_scrolly1', '=', '0', ';', 'if', '(', 'gionbana_flipscreen', ')', 'gionbana_scrolly2', '=', '(', 'data', '^', '0xff', ')', '&', '0xff', ';', 'else', 'gionbana_scrolly2', '=', '(', 'data', '-', '1', ')', '&', '0xff', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
955,"['dpm_srv_inc_reqctr', '(', 'magic', ',', 'req_data', ',', 'clienthost', ',', 'thip', ')', 'int', 'magic', ';', 'char', '*', 'req_data', ';', 'char', '*', 'clienthost', ';', 'struct', 'dpm_srv_thread_info', '*', 'thip', ';', '{', 'int', 'c', ';', 'char', 'func', '[', '19', ']', ';', 'gid_t', 'gid', ';', 'gid_t', '*', 'gids', ';', 'char', 'groups', '[', '256', ']', ';', 'int', 'nbgids', ';', 'char', '*', 'p', ';', 'char', '*', 'rbp', ';', 'uid_t', 'uid', ';', 'char', '*', 'user', ';', 'strcpy', '(', 'func', ',', '""""', ')', ';', 'rbp', '=', 'req_data', ';', 'unmarshall_LONG', '(', 'rbp', ',', 'uid', ')', ';', 'unmarshall_LONG', '(', 'rbp', ',', 'gid', ')', ';', 'get_client_actual_id', '(', 'thip', ',', '&', 'uid', ',', '&', 'gid', ',', '&', 'nbgids', ',', '&', 'gids', ',', '&', 'user', ')', ';', 'p', '=', 'Cencode_groups', '(', 'nbgids', ',', 'gids', ',', 'groups', ',', 'sizeof', '(', 'groups', ')', ')', ';', 'dpmlogit', '(', 'func', ',', 'DP092', ',', '""""', ',', 'user', ',', 'uid', ',', 'groups', ',', 'clienthost', ')', ';', 'if', '(', '!', 'p', ')', '{', 'sendrep', '(', 'thip', '->', 's', ',', 'MSG_ERR', ',', '""""', ')', ';', 'RETURN', '(', 'EINVAL', ')', ';', '}', 'c', '=', 'inc_reqctr', '(', ')', ';', 'RETURN', '(', 'c', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
956,"['phm_set_power_state', '(', 'struct', 'pp_hwmgr', '*', 'hwmgr', ',', 'const', 'struct', 'pp_hw_power_state', '*', 'pcurrent_state', ',', 'const', 'struct', 'pp_hw_power_state', '*', 'pnew_power_state', ')', '{', 'struct', 'phm_set_power_state_input', 'states', ';', 'PHM_FUNC_CHECK', '(', 'hwmgr', ')', ';', 'states', '.', 'pcurrent_state', '=', 'pcurrent_state', ';', 'states', '.', 'pnew_state', '=', 'pnew_power_state', ';', 'if', '(', 'phm_cap_enabled', '(', 'hwmgr', '->', 'platform_descriptor', '.', 'platformCaps', ',', 'PHM_PlatformCaps_TablelessHardwareInterface', ')', ')', '{', 'if', '(', 'NULL', '!=', 'hwmgr', '->', 'hwmgr_func', '->', 'power_state_set', ')', 'return', 'hwmgr', '->', 'hwmgr_func', '->', 'power_state_set', '(', 'hwmgr', ',', '&', 'states', ')', ';', '}', 'else', '{', 'return', 'phm_dispatch_table', '(', 'hwmgr', ',', '&', '(', 'hwmgr', '->', 'set_power_state', ')', ',', '&', 'states', ',', 'NULL', ')', ';', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
957,"['gretl_int_from_string', '(', 'const', 'char', '*', 's', ',', 'int', '*', 'err', ')', '{', 'char', '*', 'test', ';', 'double', 'x', ';', 'int', 'n', '=', '0', ';', 'if', '(', 's', '==', 'NULL', '||', '*', 's', '==', '0', ')', '{', '*', 'err', '=', 'E_DATA', ';', 'return', '0', ';', '}', 'errno', '=', '0', ';', 'n', '=', 'strtol', '(', 's', ',', '&', 'test', ',', '10', ')', ';', 'if', '(', 'errno', '==', 'ERANGE', ')', '{', '*', 'err', '=', 'E_DATA', ';', 'errno', '=', '0', ';', 'return', '0', ';', '}', 'if', '(', '*', 'test', '==', ""''"", ')', '{', 'return', 'n', ';', '}', 'else', 'if', '(', 'gretl_is_scalar', '(', 's', ')', ')', '{', 'x', '=', 'gretl_scalar_get_value', '(', 's', ',', 'NULL', ')', ';', 'if', '(', 'na', '(', 'x', ')', ')', '{', '*', 'err', '=', 'E_MISSDATA', ';', '}', 'else', 'if', '(', 'fabs', '(', 'x', ')', '>', 'INT_MAX', ')', '{', '*', 'err', '=', 'E_DATA', ';', '}', 'else', '{', 'n', '=', '(', 'int', ')', 'x', ';', '}', '}', 'else', '{', '*', 'err', '=', 'E_DATA', ';', '}', 'return', 'n', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
958,"['gic_iter', '(', 'kadm5_server_handle_t', 'handle', ',', 'enum', 'init_type', 'init_type', ',', 'krb5_ccache', 'ccache', ',', 'krb5_principal', 'client', ',', 'char', '*', 'pass', ',', 'char', '*', 'svcname', ',', 'char', '*', 'realm', ',', 'char', '*', 'full_svcname', ',', 'unsigned', 'int', 'full_svcname_len', ')', '{', 'kadm5_ret_t', 'code', ';', 'krb5_context', 'ctx', ';', 'krb5_keytab', 'kt', ';', 'krb5_get_init_creds_opt', '*', 'opt', '=', 'NULL', ';', 'krb5_creds', 'mcreds', ',', 'outcreds', ';', 'int', 'n', ';', 'ctx', '=', 'handle', '->', 'context', ';', 'kt', '=', 'NULL', ';', 'memset', '(', 'full_svcname', ',', '0', ',', 'full_svcname_len', ')', ';', 'memset', '(', '&', 'opt', ',', '0', ',', 'sizeof', '(', 'opt', ')', ')', ';', 'memset', '(', '&', 'mcreds', ',', '0', ',', 'sizeof', '(', 'mcreds', ')', ')', ';', 'memset', '(', '&', 'outcreds', ',', '0', ',', 'sizeof', '(', 'outcreds', ')', ')', ';', 'code', '=', 'ENOMEM', ';', 'if', '(', 'realm', ')', '{', 'n', '=', 'snprintf', '(', 'full_svcname', ',', 'full_svcname_len', ',', '""""', ',', 'svcname', ',', 'realm', ')', ';', 'if', '(', 'n', '<', '0', '||', 'n', '>=', '(', 'int', ')', 'full_svcname_len', ')', 'goto', 'error', ';', '}', 'else', '{', 'n', '=', 'snprintf', '(', 'full_svcname', ',', 'full_svcname_len', ',', '""""', ',', 'svcname', ',', 'krb5_princ_realm', '(', 'ctx', ',', 'client', ')', '->', 'length', ',', 'krb5_princ_realm', '(', 'ctx', ',', 'client', ')', '->', 'data', ')', ';', 'if', '(', 'n', '<', '0', '||', 'n', '>=', '(', 'int', ')', 'full_svcname_len', ')', 'goto', 'error', ';', '}', 'if', '(', 'init_type', '!=', 'INIT_CREDS', ')', '{', 'code', '=', 'krb5_get_init_creds_opt_alloc', '(', 'ctx', ',', '&', 'opt', ')', ';', 'krb5_get_init_creds_opt_set_forwardable', '(', 'opt', ',', '0', ')', ';', 'krb5_get_init_creds_opt_set_proxiable', '(', 'opt', ',', '0', ')', ';', 'krb5_get_init_creds_opt_set_out_ccache', '(', 'ctx', ',', 'opt', ',', 'ccache', ')', ';', 'if', '(', 'init_type', '==', 'INIT_ANONYMOUS', ')', 'krb5_get_init_creds_opt_set_anonymous', '(', 'opt', ',', '1', ')', ';', '}', 'if', '(', 'init_type', '==', 'INIT_PASS', '||', 'init_type', '==', 'INIT_ANONYMOUS', ')', '{', 'code', '=', 'krb5_get_init_creds_password', '(', 'ctx', ',', '&', 'outcreds', ',', 'client', ',', 'pass', ',', 'krb5_prompter_posix', ',', 'NULL', ',', '0', ',', 'full_svcname', ',', 'opt', ')', ';', 'if', '(', 'code', ')', 'goto', 'error', ';', '}', 'else', 'if', '(', 'init_type', '==', 'INIT_SKEY', ')', '{', 'if', '(', 'pass', ')', '{', 'code', '=', 'krb5_kt_resolve', '(', 'ctx', ',', 'pass', ',', '&', 'kt', ')', ';', 'if', '(', 'code', ')', 'goto', 'error', ';', '}', 'code', '=', 'krb5_get_init_creds_keytab', '(', 'ctx', ',', '&', 'outcreds', ',', 'client', ',', 'kt', ',', '0', ',', 'full_svcname', ',', 'opt', ')', ';', 'if', '(', 'pass', ')', 'krb5_kt_close', '(', 'ctx', ',', 'kt', ')', ';', 'if', '(', 'code', ')', 'goto', 'error', ';', '}', 'else', 'if', '(', 'init_type', '==', 'INIT_CREDS', ')', '{', 'mcreds', '.', 'client', '=', 'client', ';', 'code', '=', 'krb5_parse_name', '(', 'ctx', ',', 'full_svcname', ',', '&', 'mcreds', '.', 'server', ')', ';', 'if', '(', 'code', ')', 'goto', 'error', ';', 'code', '=', 'krb5_cc_retrieve_cred', '(', 'ctx', ',', 'ccache', ',', '0', ',', '&', 'mcreds', ',', '&', 'outcreds', ')', ';', 'krb5_free_principal', '(', 'ctx', ',', 'mcreds', '.', 'server', ')', ';', 'if', '(', 'code', ')', 'goto', 'error', ';', '}', 'error', ':', 'krb5_free_cred_contents', '(', 'ctx', ',', '&', 'outcreds', ')', ';', 'if', '(', 'opt', ')', 'krb5_get_init_creds_opt_free', '(', 'ctx', ',', 'opt', ')', ';', 'return', 'code', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
959,"['aes_crypt_cbc', '(', 'aes_context', '*', 'ctx', ',', 'int', 'mode', ',', 'int', 'length', ',', 'unsigned', 'char', 'iv', '[', '16', ']', ',', 'const', 'unsigned', 'char', '*', 'input', ',', 'unsigned', 'char', '*', 'output', ')', '{', 'int', 'i', ';', 'unsigned', 'char', 'temp', '[', '16', ']', ';', '#if', 'defined', '(', 'XYSSL_PADLOCK_C', ')', '&&', 'defined', '(', 'XYSSL_HAVE_X86', ')', 'if', '(', 'padlock_supports', '(', 'PADLOCK_ACE', ')', ')', '{', 'if', '(', 'padlock_xcryptcbc', '(', 'ctx', ',', 'mode', ',', 'length', ',', 'iv', ',', 'input', ',', 'output', ')', '==', '0', ')', 'return', ';', '}', 'if', '(', 'mode', '==', 'AES_DECRYPT', ')', '{', 'while', '(', 'length', '>', '0', ')', '{', 'memcpy', '(', 'temp', ',', 'input', ',', '16', ')', ';', 'aes_crypt_ecb', '(', 'ctx', ',', 'mode', ',', 'input', ',', 'output', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', '16', ';', 'i', '++', ')', 'output', '[', 'i', ']', '=', '(', 'unsigned', 'char', ')', '(', 'output', '[', 'i', ']', '^', 'iv', '[', 'i', ']', ')', ';', 'memcpy', '(', 'iv', ',', 'temp', ',', '16', ')', ';', 'input', '+=', '16', ';', 'output', '+=', '16', ';', 'length', '-=', '16', ';', '}', '}', '{', 'while', '(', 'length', '>', '0', ')', '{', 'for', '(', 'i', '=', '0', ';', 'i', '<', '16', ';', 'i', '++', ')', 'output', '[', 'i', ']', '=', '(', 'unsigned', 'char', ')', '(', 'input', '[', 'i', ']', '^', 'iv', '[', 'i', ']', ')', ';', 'aes_crypt_ecb', '(', 'ctx', ',', 'mode', ',', 'output', ',', 'output', ')', ';', 'memcpy', '(', 'iv', ',', 'output', ',', '16', ')', ';', 'input', '+=', '16', ';', 'output', '+=', '16', ';', 'length', '-=', '16', ';', '}', '}', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
960,"['object_read_xml', '(', 'AmitkObject', '*', 'object', ',', 'xmlNodePtr', 'nodes', ',', 'FILE', '*', 'study_file', ',', 'gchar', '*', 'error_buf', ')', '{', 'AmitkSpace', '*', 'space', ';', 'xmlNodePtr', 'children_nodes', ';', 'GList', '*', 'children', ';', 'AmitkSelection', 'i_selection', ';', 'space', '=', 'amitk_space_read_xml', '(', 'nodes', ',', '""""', ',', '&', 'error_buf', ')', ';', 'amitk_space_copy_in_place', '(', 'AMITK_SPACE', '(', 'object', ')', ',', 'space', ')', ';', 'g_object_unref', '(', 'space', ')', ';', 'children_nodes', '=', 'xml_get_node', '(', 'nodes', ',', '""""', ')', ';', 'children', '=', 'amitk_objects_read_xml', '(', 'children_nodes', '->', 'children', ',', 'study_file', ',', '&', 'error_buf', ')', ';', 'amitk_object_add_children', '(', 'object', ',', 'children', ')', ';', 'children', '=', 'amitk_objects_unref', '(', 'children', ')', ';', 'for', '(', 'i_selection', '=', '0', ';', 'i_selection', '<', 'AMITK_SELECTION_NUM', ';', 'i_selection', '++', ')', 'object', '->', 'selected', '[', 'i_selection', ']', '=', 'xml_get_boolean', '(', 'nodes', ',', 'amitk_selection_get_name', '(', 'i_selection', ')', ',', '&', 'error_buf', ')', ';', 'return', 'error_buf', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
961,"['SwLedOff', '(', 'struct', '_adapter', '*', 'padapter', ',', 'struct', 'LED_871x', '*', 'pLed', ')', '{', 'u8\tLedCfg', ';', 'if', '(', 'padapter', '->', 'bSurpriseRemoved', '||', 'padapter', '->', 'bDriverStopped', ')', 'return', ';', 'LedCfg', '=', 'r8712_read8', '(', 'padapter', ',', 'LEDCFG', ')', ';', 'switch', '(', 'pLed', '->', 'LedPin', ')', '{', 'case', 'LED_PIN_GPIO0', ':', 'break', ';', 'case', 'LED_PIN_LED0', ':', 'r8712_write8', '(', 'padapter', ',', 'LEDCFG', ',', '(', 'LedCfg', '|', 'BIT', '(', '3', ')', ')', ')', ';', 'break', ';', 'case', 'LED_PIN_LED1', ':', 'r8712_write8', '(', 'padapter', ',', 'LEDCFG', ',', '(', 'LedCfg', '|', 'BIT', '(', '7', ')', ')', ')', ';', 'break', ';', 'default', ':', 'break', ';', '}', 'pLed', '->', 'bLedOn', '=', 'false', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
962,"['synaptics_report_ext_buttons', '(', 'struct', 'psmouse', '*', 'psmouse', ',', 'const', 'struct', 'synaptics_hw_state', '*', 'hw', ')', '{', 'struct', 'input_dev', '*', 'dev', '=', 'psmouse', '->', 'dev', ';', 'struct', 'synaptics_data', '*', 'priv', '=', 'psmouse', '->', 'private', ';', 'int', 'ext_bits', '=', '(', 'SYN_CAP_MULTI_BUTTON_NO', '(', 'priv', '->', 'ext_cap', ')', '+', '1', ')', '>>', '1', ';', 'char', 'buf', '[', '6', ']', '=', '{', '0x00', ',', '0x00', ',', '0x00', ',', '0x00', ',', '0x00', ',', '0x00', '}', ';', 'int', 'i', ';', 'if', '(', '!SYN_CAP_MULTI_BUTTON_NO', '(', 'priv', '->', 'ext_cap', ')', ')', 'return', ';', 'if', '(', '(', 'SYN_ID_FULL', '(', 'priv', '->', 'identity', ')', '==', '0x801', '||', 'SYN_ID_FULL', '(', 'priv', '->', 'identity', ')', '==', '0x802', ')', '&&', '!', '(', '(', 'psmouse', '->', 'packet', '[', '0', ']', '^', 'psmouse', '->', 'packet', '[', '3', ']', ')', '&', '0x02', ')', ')', 'return', ';', 'if', '(', '!SYN_CAP_EXT_BUTTONS_STICK', '(', 'priv', '->', 'ext_cap_10', ')', ')', '{', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'ext_bits', ';', 'i', '++', ')', '{', 'input_report_key', '(', 'dev', ',', 'BTN_0', '+', '2', '*', 'i', ',', 'hw', '->', 'ext_buttons', '&', '(', '1', '<<', 'i', ')', ')', ';', 'input_report_key', '(', 'dev', ',', 'BTN_1', '+', '2', '*', 'i', ',', 'hw', '->', 'ext_buttons', '&', '(', '1', '<<', '(', 'i', '+', 'ext_bits', ')', ')', ')', ';', '}', 'return', ';', '}', '/', '*', '*', 'This', 'generation', 'of', 'touchpads', 'has', 'the', 'trackstick', '*', 'physically', 'wired', 'to', 'the', 'touchpad', '.', 'Re', '-', 'route', 'them', '*', 'the', 'pass', '-', 'through', 'interface', '.', 'if', '(', '!priv', '->', 'pt_port', ')', 'return', ';', 'priv', '->', 'pt_buttons', '=', 'SYN_CAP_EXT_BUTTON_STICK_L', '(', 'hw', '->', 'ext_buttons', ')', '|', 'SYN_CAP_EXT_BUTTON_STICK_R', '(', 'hw', '->', 'ext_buttons', ')', '<<', '1', '|', 'SYN_CAP_EXT_BUTTON_STICK_M', '(', 'hw', '->', 'ext_buttons', ')', '<<', '2', ';', 'synaptics_pass_pt_packet', '(', 'psmouse', ',', 'priv', '->', 'pt_port', ',', 'buf', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
963,"['update_recv_order', '(', 'rdpUpdate', '*', 'update', ',', 'STREAM', '*', 's', ')', '{', 'uint8', 'controlFlags', ';', 'switch', '(', 'controlFlags', '&', 'ORDER_CLASS_MASK', ')', '{', 'case', 'ORDER_PRIMARY_CLASS', ':', 'update_recv_primary_order', '(', 'update', ',', 's', ',', 'controlFlags', ')', ';', 'break', ';', 'case', 'ORDER_SECONDARY_CLASS', ':', 'update_recv_secondary_order', '(', 'update', ',', 's', ',', 'controlFlags', ')', ';', 'break', ';', 'case', 'ORDER_ALTSEC_CLASS', ':', 'update_recv_altsec_order', '(', 'update', ',', 's', ',', 'controlFlags', ')', ';', 'break', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
964,"['execute', '(', ')', '{', 'static', 'int', 'before_symval', '=', 'symbol_add', '(', '""""', ')', ';', 'ComValue', 'beforev', '(', 'stack_key', '(', 'before_symval', ')', ')', ';', 'reset_stack', '(', ')', ';', 'if', '(', 'editor', '(', ')', ')', '{', 'CreateMoveFrameCmd', '*', 'cmd', '=', 'new', 'CreateMoveFrameCmd', '(', 'editor', '(', ')', ',', 'beforev', '.', 'is_false', '(', ')', ')', ';', 'execute_log', '(', 'cmd', ')', ';', 'ComValue', 'retval', '(', 'cmd', '->', 'moveframecmd', '(', ')', '->', 'actualmotion', '(', ')', ',', 'ComValue', ':', ':', 'IntType', ')', ';', 'push_stack', '(', 'retval', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
965,"['VFilter16', '(', 'uint8_t', '*', 'p', ',', 'int', 'stride', ',', 'int', 'thresh', ',', 'int', 'ithresh', ',', 'int', 'hev_thresh', ')', '{', '__m128i', 't1', ';', '__m128i', 'mask', ';', '__m128i', 'p2', ',', 'p1', ',', 'p0', ',', 'q0', ',', 'q1', ',', 'q2', ';', '/', '/', 'Load', 'p3', ',', 'p2', ',', 'p1', ',', 'LOAD_H_EDGES4', '(', 'p', '-', '4', '*', 'stride', ',', 'stride', ',', 't1', ',', 'p2', ',', 'p1', ',', 'p0', ')', ';', 'MAX_DIFF1', '(', 't1', ',', 'p2', ',', 'p1', ',', 'p0', ',', 'mask', ')', ';', '/', '/', 'Load', 'q0', ',', 'q1', ',', 'q2', ',', 'LOAD_H_EDGES4', '(', 'p', ',', 'stride', ',', 'q0', ',', 'q1', ',', 'q2', ',', 't1', ')', ';', 'MAX_DIFF2', '(', 't1', ',', 'q2', ',', 'q1', ',', 'q0', ',', 'mask', ')', ';', 'ComplexMask', '(', '&', 'p1', ',', '&', 'p0', ',', '&', 'q0', ',', '&', 'q1', ',', 'thresh', ',', 'ithresh', ',', '&', 'mask', ')', ';', 'DoFilter6', '(', '&', 'p2', ',', '&', 'p1', ',', '&', 'p0', ',', '&', 'q0', ',', '&', 'q1', ',', '&', 'q2', ',', '&', 'mask', ',', 'hev_thresh', ')', ';', '/', '/', '_mm_storeu_si128', '(', '(', '__m128i', '*', ')', '&', 'p', '[', '-', '3', '*', 'stride', ']', ',', 'p2', ')', ';', '_mm_storeu_si128', '(', '(', '__m128i', '*', ')', '&', 'p', '[', '-', '2', '*', 'stride', ']', ',', 'p1', ')', ';', '_mm_storeu_si128', '(', '(', '__m128i', '*', ')', '&', 'p', '[', '-', '1', '*', 'stride', ']', ',', 'p0', ')', ';', '_mm_storeu_si128', '(', '(', '__m128i', '*', ')', '&', 'p', '[', '+', '0', '*', 'stride', ']', ',', 'q0', ')', ';', '_mm_storeu_si128', '(', '(', '__m128i', '*', ')', '&', 'p', '[', '+', '1', '*', 'stride', ']', ',', 'q1', ')', ';', '_mm_storeu_si128', '(', '(', '__m128i', '*', ')', '&', 'p', '[', '+', '2', '*', 'stride', ']', ',', 'q2', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
966,"['sq_newclass', '(', 'HSQUIRRELVM', 'v', ',', 'SQBool', 'hasbase', ')', '{', 'SQClass', '*', 'baseclass', '=', 'NULL', ';', 'if', '(', 'hasbase', ')', '{', 'SQObjectPtr', '&', 'base', '=', 'stack_get', '(', 'v', ',', '-', '1', ')', ';', 'if', '(', 'type', '(', 'base', ')', '!=', 'OT_CLASS', ')', 'return', 'sq_throwerror', '(', 'v', ',', '_SC', '(', '""""', ')', ')', ';', 'baseclass', '=', '_class', '(', 'base', ')', ';', '}', 'SQClass', '*', 'newclass', '=', 'SQClass', ':', ':', 'Create', '(', '_ss', '(', 'v', ')', ',', 'baseclass', ')', ';', 'if', '(', 'baseclass', ')', 'v', '->', 'Pop', '(', ')', ';', 'v', '->', 'Push', '(', 'newclass', ')', ';', 'return', 'SQ_OK', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
967,"['StripSlash', '(', 'char', '*', 'topdest', ',', 'unsigned', 'char', '*', 'source', ')', '{', 'char', '*', 'dest', ';', 'int', 'englen', ';', 'unsigned', 'char', '*', 'parse', '=', 'source', ';', 'if', '(', '*', 'parse', '!=', ""''"", ')', '{', 'topdest', '=', ""''"", ';', 'return', '1', ';', '}', 'parse', '=', 'strrchr', '(', 'source', ',', ""''"", ')', ';', 'if', '(', 'parse', '<', '&', 'source', '[', '2', ']', ')', '{', 'fprintf', '(', 'stderr', ',', '""""', ')', ';', 'fprintf', '(', 'stderr', ',', '""""', ',', 'source', ')', ';', 'return', '1', ';', '}', 'englen', '=', 'parse', '-', 'source', '-', '1', ';', 'strncpy', '(', 'topdest', ',', '&', 'source', '[', '1', ']', ',', 'parse', '-', 'source', '-', '1', ')', ';', 'topdest', '[', 'englen', ']', '=', ""''"", ';', '/', '*', ""we've"", 'copied', 'the', 'relavant', 'part', 'over', 'to', 'topdest', '.', 'Now', '*', 'in', '-', 'dest', '=', 'topdest', ';', 'dest', '=', 'strchr', '(', 'dest', ',', ""''"", ')', ';', 'while', '(', 'dest', '!=', 'NULL', ')', '{', '*', 'dest', '=', ""''"", ';', 'dest', '=', 'strchr', '(', 'dest', ',', ""''"", ')', ';', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
968,"['fs_rtp_bitrate_adapter_get_suggested_caps', '(', 'FsRtpBitrateAdapter', '*', 'self', ')', '{', 'GstCaps', '*', 'allowed_caps', ';', 'GstCaps', '*', 'wanted_caps', ';', 'GstCaps', '*', 'caps', '=', 'NULL', ';', 'GST_OBJECT_LOCK', '(', 'self', ')', ';', 'if', '(', 'self', '->', 'caps', ')', 'caps', '=', 'gst_caps_ref', '(', 'self', '->', 'caps', ')', ';', 'GST_OBJECT_UNLOCK', '(', 'self', ')', ';', 'if', '(', '!caps', ')', 'return', 'NULL', ';', 'allowed_caps', '=', 'gst_pad_get_allowed_caps', '(', 'self', '->', 'sinkpad', ')', ';', 'if', '(', '!allowed_caps', ')', '{', 'gst_caps_unref', '(', 'caps', ')', ';', 'return', 'NULL', ';', '}', 'wanted_caps', '=', 'gst_caps_intersect_full', '(', 'caps', ',', 'allowed_caps', ',', 'GST_CAPS_INTERSECT_FIRST', ')', ';', 'gst_caps_unref', '(', 'allowed_caps', ')', ';', 'gst_caps_unref', '(', 'caps', ')', ';', 'return', 'gst_caps_fixate', '(', 'wanted_caps', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
969,"['cmd_pls_ignore', '(', 'struct', 'userrec', '*', 'u', ',', 'int', 'idx', ',', 'char', '*', 'par', ')', '{', 'char', '*', 'who', ',', 's', '[', 'UHOSTLEN', ']', ';', 'unsigned', 'long', 'int', 'expire_time', '=', '0', ';', 'if', '(', '!par', '[', '0', ']', ')', '{', 'dprintf', '(', 'idx', ',', '""""', ')', ';', 'return', ';', '}', 'who', '=', 'newsplit', '(', '&', 'par', ')', ';', 'if', '(', 'par', '[', '0', ']', '==', ""''"", ')', '{', 'char', '*', 'p', ',', '*', 'p_expire', ';', 'unsigned', 'long', 'int', 'expire_foo', ';', 'p', '=', 'newsplit', '(', '&', 'par', ')', ';', 'p_expire', '=', 'p', '+', '1', ';', 'while', '(', '*', '(', '++', 'p', ')', '!=', '0', ')', '{', 'switch', '(', 'tolower', '(', '*', 'p', ')', ')', '{', 'case', ""''"", ':', '*', 'p', '=', '0', ';', 'expire_foo', '=', 'strtol', '(', 'p_expire', ',', 'NULL', ',', '10', ')', ';', 'if', '(', 'expire_foo', '>', '365', ')', 'expire_foo', '=', '365', ';', 'expire_time', '+=', '86400', '*', 'expire_foo', ';', 'p_expire', '=', 'p', '+', '1', ';', 'break', ';', 'case', ""''"", ':', '*', 'p', '=', '0', ';', 'expire_foo', '=', 'strtol', '(', 'p_expire', ',', 'NULL', ',', '10', ')', ';', 'if', '(', 'expire_foo', '>', '8760', ')', 'expire_foo', '=', '8760', ';', 'expire_time', '+=', '3600', '*', 'expire_foo', ';', 'p_expire', '=', 'p', '+', '1', ';', 'break', ';', 'case', ""''"", ':', '*', 'p', '=', '0', ';', 'expire_foo', '=', 'strtol', '(', 'p_expire', ',', 'NULL', ',', '10', ')', ';', 'if', '(', 'expire_foo', '>', '525600', ')', 'expire_foo', '=', '525600', ';', 'expire_time', '+=', '60', '*', 'expire_foo', ';', 'p_expire', '=', 'p', '+', '1', ';', '}', '}', '}', 'if', '(', '!par', '[', '0', ']', ')', 'par', '=', '""""', ';', 'else', 'if', '(', 'strlen', '(', 'par', ')', '>', '65', ')', 'par', '[', '65', ']', '=', '0', ';', 'if', '(', 'strlen', '(', 'who', ')', '>', 'UHOSTMAX', '-', '4', ')', 'who', '[', 'UHOSTMAX', '-', '4', ']', '=', '0', ';', 'if', '(', '!strchr', '(', 'who', ',', ""''"", ')', ')', '{', 'if', '(', '!strchr', '(', 'who', ',', ""''"", ')', ')', 'simple_sprintf', '(', 's', ',', '""""', ',', 'who', ')', ';', 'simple_sprintf', '(', 's', ',', '""""', ',', 'who', ')', ';', '}', 'else', 'if', '(', '!strchr', '(', 'who', ',', ""''"", ')', ')', 'simple_sprintf', '(', 's', ',', '""""', ',', 'who', ')', ';', 'strcpy', '(', 's', ',', 'who', ')', ';', 'if', '(', 'match_ignore', '(', 's', ')', ')', 'dprintf', '(', 'idx', ',', '""""', ')', ';', 'else', '{', 'dprintf', '(', 'idx', ',', '""""', ',', 's', ',', 'par', ')', ';', 'addignore', '(', 's', ',', 'dcc', '[', 'idx', ']', '.', 'nick', ',', 'par', ',', 'expire_time', '?', 'now', '+', 'expire_time', ':', '0L', ')', ';', 'putlog', '(', 'LOG_CMDS', ',', '""""', ',', '""""', ',', 'dcc', '[', 'idx', ']', '.', 'nick', ',', 's', ',', 'par', ')', ';', '}', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
970,"['ast_sockaddr_is_any', '(', 'const', 'struct', 'ast_sockaddr', '*', 'addr', ')', '{', 'union', '{', 'struct', 'sockaddr_storage', 'ss', ';', 'struct', 'sockaddr_in', 'sin', ';', 'struct', 'sockaddr_in6', 'sin6', ';', '}', 'tmp_addr', '=', '{', '.', 'ss', '=', 'addr', '->', 'ss', ',', '}', ';', 'return', '(', 'ast_sockaddr_is_ipv4', '(', 'addr', ')', '&&', '(', 'tmp_addr', '.', 'sin', '.', 'sin_addr', '.', 's_addr', '==', 'INADDR_ANY', ')', ')', '||', '(', 'ast_sockaddr_is_ipv6', '(', 'addr', ')', '&&', 'IN6_IS_ADDR_UNSPECIFIED', '(', '&', 'tmp_addr', '.', 'sin6', '.', 'sin6_addr', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
971,"['mostViolated', '(', 'ConstraintList', '&', 'l', ')', '{', 'double', 'minSlack', '=', 'DBL_MAX', ';', 'Constraint', '*', 'v', '=', 'NULL', ';', '#ifdef', 'ofstream', 'f', '(', 'LOGFILE', ',', 'ios', ':', ':', 'app', ')', ';', 'f', '<<', '""""', '<<', 'endl', ';', 'ConstraintList', ':', ':', 'iterator', 'end', '=', 'l', '.', 'end', '(', ')', ';', 'ConstraintList', ':', ':', 'iterator', 'deletePoint', '=', 'end', ';', 'for', '(', 'ConstraintList', ':', ':', 'iterator', 'i', '=', 'l', '.', 'begin', '(', ')', ';', 'i', '!=', 'end', ';', '++', 'i', ')', '{', 'Constraint', '*', 'c', '=', '*', 'i', ';', 'double', 'slack', '=', 'c', '->', 'slack', '(', ')', ';', 'if', '(', 'c', '->', 'equality', '||', 'slack', '<', 'minSlack', ')', '{', 'minSlack', '=', 'slack', ';', 'v', '=', 'c', ';', 'deletePoint', '=', 'i', ';', 'if', '(', 'c', '->', 'equality', ')', 'break', ';', '}', '}', '/', '/', 'Because', 'the', 'constraint', 'list', 'is', 'not', 'order', 'dependent', 'we', '/', '/', 'move', 'the', 'last', 'element', 'over', 'the', 'deletePoint', 'and', '/', '/', 'downwards', '.', 'There', 'is', 'always', 'at', 'least', '1', 'element', 'in', '/', '/', 'vector', 'because', 'of', 'search', '.', 'if', '(', 'deletePoint', '!=', 'end', '&&', '(', 'minSlack', '<', 'ZERO_UPPERBOUND', '||', 'v', '->', 'equality', ')', ')', '{', '*', 'deletePoint', '=', 'l', '[', 'l', '.', 'size', '(', ')', '-', '1', ']', ';', 'l', '.', 'resize', '(', 'l', '.', 'size', '(', ')', '-', '1', ')', ';', '}', '#ifdef', 'f', '<<', '""""', '<<', '*', 'v', '<<', 'endl', ';', 'return', 'v', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
972,"['get_buffer_lines', '(', 'buf', ',', 'start', ',', 'end', ',', 'retlist', ',', 'rettv', ')', 'buf_T\t', '*', 'buf', ';', 'linenr_T\tstart', ';', 'linenr_T\tend', ';', 'int\t\tretlist', ';', 'typval_T\t', '*', 'rettv', ';', '{', 'char_u\t', '*', 'p', ';', 'if', '(', 'retlist', '&&', 'rettv_list_alloc', '(', 'rettv', ')', '==', 'FAIL', ')', 'return', ';', 'if', '(', 'buf', '==', 'NULL', '||', 'buf', '->', 'b_ml', '.', 'ml_mfp', '==', 'NULL', '||', 'start', '<', '0', ')', 'return', ';', 'if', '(', '!retlist', ')', '{', 'if', '(', 'start', '>=', '1', '&&', 'start', '<=', 'buf', '->', 'b_ml', '.', 'ml_line_count', ')', 'p', '=', 'ml_get_buf', '(', 'buf', ',', 'start', ',', 'FALSE', ')', ';', 'p', '=', '(', 'char_u', '*', ')', '""""', ';', 'rettv', '->', 'v_type', '=', 'VAR_STRING', ';', 'rettv', '->', 'vval', '.', 'v_string', '=', 'vim_strsave', '(', 'p', ')', ';', '}', '{', 'if', '(', 'end', '<', 'start', ')', 'return', ';', 'if', '(', 'start', '<', '1', ')', 'start', '=', '1', ';', 'if', '(', 'end', '>', 'buf', '->', 'b_ml', '.', 'ml_line_count', ')', 'end', '=', 'buf', '->', 'b_ml', '.', 'ml_line_count', ';', 'while', '(', 'start', '<=', 'end', ')', 'if', '(', 'list_append_string', '(', 'rettv', '->', 'vval', '.', 'v_list', ',', 'ml_get_buf', '(', 'buf', ',', 'start', '++', ',', 'FALSE', ')', ',', '-', '1', ')', '==', 'FAIL', ')', 'break', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
973,"['char_val', '(', 'gunichar', 'c', ',', 'gint', 'number_base', ')', '{', 'gint', 'result', '=', '0', ';', 'gunichar', '_tmp0_', '=', '0U', ';', 'gboolean', '_tmp1_', '=', 'FALSE', ';', 'gint', 'value', '=', '0', ';', 'gunichar', '_tmp2_', '=', '0U', ';', 'gint', '_tmp3_', '=', '0', ';', 'gint', '_tmp4_', '=', '0', ';', 'gint', '_tmp5_', '=', '0', ';', '_tmp0_', '=', 'c', ';', '_tmp1_', '=', 'g_unichar_isxdigit', '(', '_tmp0_', ')', ';', 'if', '(', '!_tmp1_', ')', '{', 'result', '=', '-', '1', ';', 'return', 'result', ';', '}', '_tmp2_', '=', 'c', ';', '_tmp3_', '=', 'g_unichar_xdigit_value', '(', '_tmp2_', ')', ';', 'value', '=', '_tmp3_', ';', '_tmp4_', '=', 'value', ';', '_tmp5_', '=', 'number_base', ';', 'if', '(', '_tmp4_', '>=', '_tmp5_', ')', '{', 'result', '=', '-', '1', ';', 'return', 'result', ';', '}', 'result', '=', 'value', ';', 'return', 'result', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
974,"['cciss_getluninfo', '(', 'ctlr_info_t', '*', 'h', ',', 'struct', 'gendisk', '*', 'disk', ',', 'void', '__user', '*', 'argp', ')', '{', 'LogvolInfo_struct', 'luninfo', ';', 'drive_info_struct', '*', 'drv', '=', 'get_drv', '(', 'disk', ')', ';', 'if', '(', '!argp', ')', 'return', '-', 'EINVAL', ';', 'memcpy', '(', '&', 'luninfo', '.', 'LunID', ',', 'drv', '->', 'LunID', ',', 'sizeof', '(', 'luninfo', '.', 'LunID', ')', ')', ';', 'luninfo', '.', 'num_opens', '=', 'drv', '->', 'usage_count', ';', 'luninfo', '.', 'num_parts', '=', '0', ';', 'if', '(', 'copy_to_user', '(', 'argp', ',', '&', 'luninfo', ',', 'sizeof', '(', 'LogvolInfo_struct', ')', ')', ')', 'return', '-', 'EFAULT', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
975,"['Map_Task', '(', 'Pointer', 'taskPtr', ')', '{', 'MapTask', '*', 'task', ';', 'Object', 'map', ';', 'task', '=', '(', 'MapTask', '*', ')', 'taskPtr', ';', 'if', '(', 'DXGetObjectClass', '(', 'task', '->', 'map', ')', '==', 'CLASS_INTERPOLATOR', ')', '{', 'if', '(', '!', '(', 'map', '=', 'DXCopy', '(', 'task', '->', 'map', ',', 'COPY_STRUCTURE', ')', ')', ')', 'return', 'ERROR', ';', '}', 'map', '=', 'task', '->', 'map', ';', 'DXReference', '(', 'map', ')', ';', 'if', '(', 'ERROR', '==', 'DXMap', '(', 'task', '->', 'target', ',', 'map', ',', 'task', '->', 'srcComponent', ',', 'task', '->', 'dstComponent', ')', ')', '{', 'DXDelete', '(', 'map', ')', ';', 'return', 'ERROR', ';', '}', 'DXDelete', '(', 'map', ')', ';', 'return', 'OK', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
976,"['handleNewgen', '(', 'action', ',', 'arg', ')', 'char', '*', 'action', ',', '*', 'arg', ';', '{', 'int', 'i', '=', '0', ';', 'while', '(', 'i', '<', 'actionCount', ')', '{', 'if', '(', 'actionList', '[', 'i', '++', ']', '==', 'VADM_NEWGEN', ')', '{', 'sprintf', '(', 'stMessage', ',', '""""', ',', 'action', ')', ';', 'stLog', '(', 'stMessage', ',', 'ST_LOG_WARNING', ')', ';', 'return', '(', '0', ')', ';', '}', '}', 'return', '(', 'addToActionList', '(', 'action', ',', 'VADM_NEWGEN', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
977,"['parse_next_regex', '(', 'char', '*', 'ptr', ')', '{', 'assert', '(', 'ptr', '!=', 'NULL', ')', ';', '/', '*', 'Continue', 'until', 'the', 'end', 'of', 'the', 'line', ',', 'or', 'a', '""', 'followed', 'by', 'a', 'space', ',', 'while', '(', '(', '*', 'ptr', '!=', ""''"", '||', '(', '!isblank', '(', '*', '(', 'ptr', '+', '1', ')', ')', '&&', '*', '(', 'ptr', '+', '1', ')', '!=', ""''"", ')', ')', '&&', '*', 'ptr', '!=', ""''"", ')', 'ptr', '++', ';', 'assert', '(', '*', 'ptr', '==', ""''"", '||', '*', 'ptr', '==', ""''"", ')', ';', 'if', '(', '*', 'ptr', '==', ""''"", ')', '{', 'rcfile_error', '(', 'N_', '(', '""""', 'character""', ')', ')', ';', 'return', 'NULL', ';', '}', '*', 'ptr', '++', '=', ""''"", ';', 'while', '(', 'isblank', '(', '*', 'ptr', ')', ')', 'ptr', '++', ';', 'return', 'ptr', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
978,"[')', '{', 'ELEMENT_INFO', '*', 'elInfo', '=', '&', 'aacEnc', '->', 'elInfo', ';', 'Word16', 'globUsedBits', ';', 'Word16', 'ancDataBytes', ',', 'ancDataBytesLeft', ';', 'ancDataBytes', '=', 'ancDataBytesLeft', '=', '*', 'numAncBytes', ';', 'aacEnc', '->', 'hBitStream', '=', 'CreateBitBuffer', '(', '&', 'aacEnc', '->', 'bitStream', ',', 'outBytes', ',', '*', 'numOutBytes', ')', ';', 'psyMain', '(', 'aacEnc', '->', 'config', '.', 'nChannelsOut', ',', 'elInfo', ',', 'timeSignal', ',', '&', 'aacEnc', '->', 'psyKernel', '.', 'psyData', '[', 'elInfo', '->', 'ChannelIndex', '[', '0', ']', ']', ',', '&', 'aacEnc', '->', 'psyKernel', '.', 'tnsData', '[', 'elInfo', '->', 'ChannelIndex', '[', '0', ']', ']', ',', '&', 'aacEnc', '->', 'psyKernel', '.', 'psyConfLong', ',', '&', 'aacEnc', '->', 'psyKernel', '.', 'psyConfShort', ',', '&', 'aacEnc', '->', 'psyOut', '.', 'psyOutChannel', '[', 'elInfo', '->', 'ChannelIndex', '[', '0', ']', ']', ',', '&', 'aacEnc', '->', 'psyOut', '.', 'psyOutElement', ',', 'aacEnc', '->', 'psyKernel', '.', 'pScratchTns', ',', 'aacEnc', '->', 'config', '.', 'sampleRate', ')', ';', 'AdjustBitrate', '(', '&', 'aacEnc', '->', 'qcKernel', ',', 'aacEnc', '->', 'config', '.', 'bitRate', ',', 'aacEnc', '->', 'config', '.', 'sampleRate', ')', ';', 'QCMain', '(', '&', 'aacEnc', '->', 'qcKernel', ',', '&', 'aacEnc', '->', 'qcKernel', '.', 'elementBits', ',', '&', 'aacEnc', '->', 'qcKernel', '.', 'adjThr', '.', 'adjThrStateElem', ',', '&', 'aacEnc', '->', 'psyOut', '.', 'psyOutChannel', '[', 'elInfo', '->', 'ChannelIndex', '[', '0', ']', ']', ',', '&', 'aacEnc', '->', 'psyOut', '.', 'psyOutElement', ',', '&', 'aacEnc', '->', 'qcOut', '.', 'qcChannel', '[', 'elInfo', '->', 'ChannelIndex', '[', '0', ']', ']', ',', '&', 'aacEnc', '->', 'qcOut', '.', 'qcElement', ',', 'elInfo', '->', 'nChannelsInEl', ',', 'min', '(', 'ancDataBytesLeft', ',', 'ancDataBytes', ')', ')', ';', 'ancDataBytesLeft', '=', 'ancDataBytesLeft', '-', 'ancDataBytes', ';', 'globUsedBits', '=', 'FinalizeBitConsumption', '(', '&', 'aacEnc', '->', 'qcKernel', ',', '&', 'aacEnc', '->', 'qcOut', ')', ';', 'WriteBitstream', '(', 'aacEnc', '->', 'hBitStream', ',', '*', 'elInfo', ',', '&', 'aacEnc', '->', 'qcOut', ',', '&', 'aacEnc', '->', 'psyOut', ',', '&', 'globUsedBits', ',', 'ancBytes', ',', 'aacEnc', '->', 'psyKernel', '.', 'sampleRateIdx', ')', ';', 'updateBitres', '(', '&', 'aacEnc', '->', 'qcKernel', ',', '&', 'aacEnc', '->', 'qcOut', ')', ';', '*', 'numOutBytes', '=', 'GetBitsAvail', '(', 'aacEnc', '->', 'hBitStream', ')', '>>', '3', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
979,"['StoreRsaKey', '(', 'DecodedCert', '*', 'cert', ')', '{', 'int', 'length', ';', 'word32', 'read', '=', 'cert', '->', 'srcIdx', ';', 'if', '(', 'GetSequence', '(', 'cert', '->', 'source', ',', '&', 'cert', '->', 'srcIdx', ',', '&', 'length', ')', '<', '0', ')', 'return', 'ASN_PARSE_E', ';', 'read', '=', 'cert', '->', 'srcIdx', '-', 'read', ';', 'length', '+=', 'read', ';', 'while', '(', 'read', '--', ')', 'cert', '->', 'srcIdx', '--', ';', 'cert', '->', 'pubKeySize', '=', 'length', ';', 'cert', '->', 'publicKey', '=', 'cert', '->', 'source', '+', 'cert', '->', 'srcIdx', ';', 'cert', '->', 'srcIdx', '+=', 'length', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
980,"['lu', '(', 'int', 'count', ')', '{', 'Polynomial', '*', 'buf', '=', 'this', '->', 'dup', '(', '0', ',', '0', ',', 'count', ')', ';', 'Polynomial', '*', 'ret', '=', 'buf', '->', '_lu', '(', 'buf', ')', ';', 'if', '(', '!ret', ')', 'delete', 'buf', ';', 'return', '(', 'ret', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
981,"['initio_build_scb', '(', 'struct', 'initio_host', '*', 'host', ',', 'struct', 'scsi_ctrl_blk', '*', 'cblk', ',', 'struct', 'scsi_cmnd', '*', 'cmnd', ')', 'struct', 'scatterlist', '*', 'sglist', ';', 'int', 'i', ',', 'nseg', ';', 'long', 'total_len', ';', 'dma_addr_t', 'dma_addr', ';', 'cblk', '->', 'srb', '=', 'cmnd', ';', 'cblk', '->', 'opcode', '=', 'ExecSCSI', ';', 'cblk', '->', 'target', '=', 'cmnd', '->', 'device', '->', 'id', ';', 'cblk', '->', 'lun', '=', 'cmnd', '->', 'device', '->', 'lun', ';', 'cblk', '->', 'ident', '=', 'cmnd', '->', 'device', '->', 'lun', '|', 'DISC_ALLOW', ';', 'dma_addr', '=', 'dma_map_single', '(', '&', 'host', '->', 'pci_dev', '->', 'dev', ',', 'cmnd', '->', 'sense_buffer', ',', 'SENSE_SIZE', ',', 'DMA_FROM_DEVICE', ')', ';', 'cblk', '->', 'senseptr', '=', '(', 'u32', ')', 'dma_addr', ';', 'cblk', '->', 'senselen', '=', 'SENSE_SIZE', ';', 'cmnd', '->', 'SCp', '.', 'ptr', '=', '(', 'char', '*', ')', '(', 'unsigned', 'long', ')', 'dma_addr', ';', 'cblk', '->', 'cdblen', '=', 'cmnd', '->', 'cmd_len', ';', 'cblk', '->', 'hastat', '=', '0', ';', 'cblk', '->', 'tastat', '=', '0', ';', 'memcpy', '(', 'cblk', '->', 'cdb', ',', 'cmnd', '->', 'cmnd', ',', 'cmnd', '->', 'cmd_len', ')', ';', '}', 'else', '{', '}', 'nseg', '=', 'scsi_dma_map', '(', 'cmnd', ')', ';', 'BUG_ON', '(', 'nseg', '<', '0', ')', ';', 'if', '(', 'nseg', ')', '{', 'dma_addr', '=', 'dma_map_single', '(', '&', 'host', '->', 'pci_dev', '->', 'dev', ',', '&', 'cblk', '->', 'sglist', '[', '0', ']', ',', 'sizeof', '(', 'struct', 'sg_entry', ')', '*', 'TOTAL_SG_ENTRY', ',', 'DMA_BIDIRECTIONAL', ')', ';', 'cblk', '->', 'bufptr', '=', '(', 'u32', ')', 'dma_addr', ';', 'cmnd', '->', 'SCp', '.', 'dma_handle', '=', 'dma_addr', ';', 'cblk', '->', 'sglen', '=', 'nseg', ';', 'total_len', '=', '0', ';', 'sg', '=', '&', 'cblk', '->', 'sglist', '[', '0', ']', ';', 'scsi_for_each_sg', '(', 'cmnd', ',', 'sglist', ',', 'cblk', '->', 'sglen', ',', 'i', ')', '{', 'sg', '->', 'data', '=', 'cpu_to_le32', '(', '(', 'u32', ')', 'sg_dma_address', '(', 'sglist', ')', ')', ';', 'sg', '->', 'len', '=', 'cpu_to_le32', '(', '(', 'u32', ')', 'sg_dma_len', '(', 'sglist', ')', ')', ';', 'total_len', '+=', 'sg_dma_len', '(', 'sglist', ')', ';', '++', 'sg', ';', '}', 'cblk', '->', 'buflen', '=', '(', 'scsi_bufflen', '(', 'cmnd', ')', '>', 'total_len', ')', '?', 'total_len', ':', 'scsi_bufflen', '(', 'cmnd', ')', ';', 'cblk', '->', 'buflen', '=', '0', ';', 'cblk', '->', 'sglen', '=', '0', ';', '}', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
982,"['ipmi_fru_parse_dump_obj', '(', 'ipmi_fru_parse_ctx_t', 'ctx', ',', 'fiid_obj_t', 'obj', ',', 'const', 'char', '*', 'debug_hdr', ')', '{', 'assert', '(', 'ctx', ')', ';', 'assert', '(', 'ctx', '->', 'magic', '==', 'IPMI_FRU_PARSE_CTX_MAGIC', ')', ';', 'assert', '(', 'obj', ')', ';', 'assert', '(', 'debug_hdr', ')', ';', 'if', '(', 'ctx', '->', 'flags', '&', 'IPMI_FRU_PARSE_FLAGS_DEBUG_DUMP', ')', '{', 'char', 'hdrbuf', '[', 'DEBUG_UTIL_HDR_BUFLEN', ']', ';', 'debug_hdr_str', '(', 'DEBUG_UTIL_TYPE_NONE', ',', 'DEBUG_UTIL_DIRECTION_NONE', ',', 'DEBUG_UTIL_FLAGS_DEFAULT', ',', 'debug_hdr', ',', 'hdrbuf', ',', 'DEBUG_UTIL_HDR_BUFLEN', ')', ';', 'if', '(', 'ipmi_obj_dump', '(', 'STDERR_FILENO', ',', 'ctx', '->', 'debug_prefix', ',', 'hdrbuf', ',', 'NULL', ',', 'obj', ')', '<', '0', ')', '{', 'FRU_PARSE_ERRNO_TO_FRU_PARSE_ERRNUM', '(', 'ctx', ',', 'errno', ')', ';', 'return', '(', '-', '1', ')', ';', '}', '}', 'return', '(', '0', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
983,"['ldl_getfields', '(', 'char', '*', 'statementp', ',', 'char', '*', 'firstfieldp', ',', 'char', '*', 'secondfieldp', ',', 'char', '*', 'thirdfieldp', ')', '{', 'int', 'delim', '=', 'g_delim', ';', 'char', '*', 'tempfirst', ';', 'char', '*', 'tempsecond', ';', 'char', '*', 'tempthird', ';', 'char', '*', 'bufp', '=', 'statementp', ';', 'tempfirst', '=', 'mystrsep', '(', '&', 'bufp', ',', 'delim', ')', ';', 'tempsecond', '=', 'mystrsep', '(', '&', 'bufp', ',', 'delim', ')', ';', 'tempthird', '=', 'mystrsep', '(', '&', 'bufp', ',', 'delim', ')', ';', 'if', '(', 'tempfirst', '==', 'NULL', ')', 'tempfirst', '=', '""""', ';', 'if', '(', 'tempsecond', '==', 'NULL', ')', 'tempsecond', '=', '""""', ';', 'if', '(', 'tempthird', '==', 'NULL', ')', 'tempthird', '=', '""""', ';', 'strcpy', '(', 'firstfieldp', ',', 'tempfirst', ')', ';', 'strcpy', '(', 'secondfieldp', ',', 'tempsecond', ')', ';', 'strcpy', '(', 'thirdfieldp', ',', 'tempthird', ')', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
984,"['incrByU32', '(', 'U64', '*', 'pu64', ',', 'unsigned', 'int', 'u32', ')', '{', 'uint32_t', 'tmp', ';', 'tmp', '=', 'pu64', '->', 'low', ';', 'pu64', '->', 'low', '=', '(', 'uint32_t', ')', '(', 'tmp', '+', 'u32', ')', ';', 'if', '(', 'pu64', '->', 'low', '<', 'tmp', ')', 'pu64', '->', 'high', '=', '(', 'uint32_t', ')', '(', 'pu64', '->', 'high', '+', '1', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
985,"['RecordX86Relocation', '(', 'MachObjectWriter', '*', 'Writer', ',', 'const', 'MCAssembler', '&', 'Asm', ',', 'const', 'MCAsmLayout', '&', 'Layout', ',', 'const', 'MCFragment', '*', 'Fragment', ',', 'const', 'MCFixup', '&', 'Fixup', ',', 'MCValue', 'Target', ',', 'uint64_t', '&', 'FixedValue', ')', '{', 'unsigned', 'IsPCRel', '=', 'Writer', '->', 'isFixupKindPCRel', '(', 'Asm', ',', 'Fixup', '.', 'getKind', '(', ')', ')', ';', 'unsigned', 'Log2Size', '=', 'getFixupKindLog2Size', '(', 'Fixup', '.', 'getKind', '(', ')', ')', ';', '/', '/', 'If', 'this', 'is', 'a', '32', '-', 'bit', 'TLVP', 'reloc', ""it's"", 'handled', 'a', 'bit', 'differently', '.', 'if', '(', 'Target', '.', 'getSymA', '(', ')', '&&', 'Target', '.', 'getSymA', '(', ')', '->', 'getKind', '(', ')', '==', 'MCSymbolRefExpr', ':', ':', 'VK_TLVP', ')', '{', 'RecordTLVPRelocation', '(', 'Writer', ',', 'Asm', ',', 'Layout', ',', 'Fragment', ',', 'Fixup', ',', 'Target', ',', 'FixedValue', ')', ';', 'return', ';', '}', '/', '/', 'If', 'this', 'is', 'a', 'difference', 'or', 'a', 'defined', 'symbol', 'plus', 'an', 'offset', ',', 'then', 'we', 'need', '/', '/', 'scattered', 'relocation', 'entry', '.', 'Differences', 'always', 'require', '/', '/', 'relocations', '.', 'if', '(', 'Target', '.', 'getSymB', '(', ')', ')', 'return', 'RecordScatteredRelocation', '(', 'Writer', ',', 'Asm', ',', 'Layout', ',', 'Fragment', ',', 'Fixup', ',', 'Target', ',', 'Log2Size', ',', 'FixedValue', ')', ';', '/', '/', 'Get', 'the', 'symbol', 'data', ',', 'if', 'any', '.', 'MCSymbolData', '*', 'SD', '=', '0', ';', 'if', '(', 'Target', '.', 'getSymA', '(', ')', ')', 'SD', '=', '&', 'Asm', '.', 'getSymbolData', '(', 'Target', '.', 'getSymA', '(', ')', '->', 'getSymbol', '(', ')', ')', ';', '/', '/', 'If', 'this', 'is', 'an', 'internal', 'relocation', 'with', 'an', 'offset', ',', 'it', 'also', 'needs', 'a', '/', '/', 'relocation', 'entry', '.', 'uint32_t', 'Offset', '=', 'Target', '.', 'getConstant', '(', ')', ';', 'if', '(', 'IsPCRel', ')', 'Offset', '+=', '1', '<<', 'Log2Size', ';', 'if', '(', 'Offset', '&&', 'SD', '&&', '!Writer', '->', 'doesSymbolRequireExternRelocation', '(', 'SD', ')', ')', 'return', 'RecordScatteredRelocation', '(', 'Writer', ',', 'Asm', ',', 'Layout', ',', 'Fragment', ',', 'Fixup', ',', 'Target', ',', 'Log2Size', ',', 'FixedValue', ')', ';', '/', '/', 'See', '<', 'reloc', '.', 'h', '>', '.', 'uint32_t', 'FixupOffset', '=', 'Layout', '.', 'getFragmentOffset', '(', 'Fragment', ')', '+', 'Fixup', '.', 'getOffset', '(', ')', ';', 'unsigned', 'Index', '=', '0', ';', 'unsigned', 'IsExtern', '=', '0', ';', 'unsigned', 'Type', '=', '0', ';', 'if', '(', 'Target', '.', 'isAbsolute', '(', ')', ')', '{', '/', '/', '/', '/', 'SymbolNum', 'of', '0', 'indicates', 'the', 'absolute', 'section', '.', '/', '/', '/', '/', 'FIXME', ':', 'Currently', ',', 'these', 'are', 'never', 'generated', '(', 'see', 'code', 'below', ')', '.', 'I', '/', '/', 'find', 'a', 'case', 'where', 'they', 'are', 'actually', 'emitted', '.', 'Type', '=', 'macho', ':', ':', 'RIT_Vanilla', ';', '}', 'else', '{', '/', '/', 'Resolve', 'constant', 'variables', '.', 'if', '(', 'SD', '->', 'getSymbol', '(', ')', '.', 'isVariable', '(', ')', ')', '{', 'int64_t', 'Res', ';', 'if', '(', 'SD', '->', 'getSymbol', '(', ')', '.', 'getVariableValue', '(', ')', '->', 'EvaluateAsAbsolute', '(', 'Res', ',', 'Layout', ',', 'Writer', '->', 'getSectionAddressMap', '(', ')', ')', ')', '{', 'FixedValue', '=', 'Res', ';', 'return', ';', '}', '}', '/', '/', 'Check', 'whether', 'we', 'need', 'an', 'external', 'or', 'internal', 'relocation', '.', 'if', '(', 'Writer', '->', 'doesSymbolRequireExternRelocation', '(', 'SD', ')', ')', '{', 'IsExtern', '=', '1', ';', 'Index', '=', 'SD', '->', 'getIndex', '(', ')', ';', '/', '/', 'For', 'external', 'relocations', ',', 'make', 'sure', 'to', 'offset', 'the', 'fixup', 'value', '/', '/', 'compensate', 'for', 'the', 'addend', 'of', 'the', 'symbol', 'address', ',', 'if', 'it', '/', '/', 'undefined', '.', 'This', 'occurs', 'with', 'weak', 'definitions', ',', 'for', 'example', '.', 'if', '(', '!SD', '->', 'Symbol', '->', 'isUndefined', '(', ')', ')', 'FixedValue', '-=', 'Layout', '.', 'getSymbolOffset', '(', 'SD', ')', ';', '}', 'else', '{', '/', '/', 'The', 'index', 'is', 'the', 'section', 'ordinal', '(', '1', '-', 'based', ')', '.', 'const', 'MCSectionData', '&', 'SymSD', '=', 'Asm', '.', 'getSectionData', '(', 'SD', '->', 'getSymbol', '(', ')', '.', 'getSection', '(', ')', ')', ';', 'Index', '=', 'SymSD', '.', 'getOrdinal', '(', ')', '+', '1', ';', 'FixedValue', '+=', 'Writer', '->', 'getSectionAddress', '(', '&', 'SymSD', ')', ';', '}', 'if', '(', 'IsPCRel', ')', 'FixedValue', '-=', 'Writer', '->', 'getSectionAddress', '(', 'Fragment', '->', 'getParent', '(', ')', ')', ';', 'Type', '=', 'macho', ':', ':', 'RIT_Vanilla', ';', '}', '/', '/', 'struct', 'relocation_info', '(', '8', 'bytes', ')', 'macho', ':', ':', 'RelocationEntry', 'MRE', ';', 'MRE', '.', 'Word0', '=', 'FixupOffset', ';', 'MRE', '.', 'Word1', '=', '(', '(', 'Index', '<<', '0', ')', '|', '(', 'IsPCRel', '<<', '24', ')', '|', '(', 'Log2Size', '<<', '25', ')', '|', '(', 'IsExtern', '<<', '27', ')', '|', '(', 'Type', '<<', '28', ')', ')', ';', 'Writer', '->', 'addRelocation', '(', 'Fragment', '->', 'getParent', '(', ')', ',', 'MRE', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
986,"['draw_vline', '(', 'GtkStyle', '*', 'style', ',', 'GdkWindow', '*', 'window', ',', 'GtkStateType', 'state_type', ',', 'GdkRectangle', '*', 'area', ',', 'GtkWidget', '*', 'widget', ',', 'const', 'gchar', '*', 'detail', ',', 'gint', 'y1', ',', 'gint', 'y2', ',', 'gint', 'x', ')', '{', 'BluecurveStyle', '*', 'bluecurve_style', '=', 'BLUECURVE_STYLE', '(', 'style', ')', ';', 'gint', 'thickness_light', ';', 'gint', 'thickness_dark', ';', 'g_return_if_fail', '(', 'GTK_IS_STYLE', '(', 'style', ')', ')', ';', 'g_return_if_fail', '(', 'window', '!=', 'NULL', ')', ';', 'thickness_light', '=', 'style', '->', 'xthickness', '/', '2', ';', 'thickness_dark', '=', 'style', '->', 'xthickness', '-', 'thickness_light', ';', 'if', '(', 'area', ')', '{', 'gdk_gc_set_clip_rectangle', '(', 'bluecurve_style', '->', 'gray_gc', '[', '2', ']', ',', 'area', ')', ';', '}', 'gdk_draw_line', '(', 'window', ',', 'style', '->', 'dark_gc', '[', 'state_type', ']', ',', 'x', ',', 'y1', ',', 'x', ',', 'y2', '-', '1', ')', ';', 'if', '(', 'area', ')', '{', 'gdk_gc_set_clip_rectangle', '(', 'bluecurve_style', '->', 'gray_gc', '[', '2', ']', ',', 'NULL', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
987,"['mmc_eject_media', '(', 'const', 'CdIo_t', '*', 'p_cdio', ')', '{', 'int', 'i_status', '=', '0', ';', 'i_status', '=', 'mmc_prevent_allow_medium_removal', '(', 'p_cdio', ',', 'false', ',', 'false', ',', '0', ')', ';', 'if', '(', '0', '!=', 'i_status', ')', 'return', 'i_status', ';', 'return', 'mmc_start_stop_unit', '(', 'p_cdio', ',', 'true', ',', 'false', ',', '0', ',', '0', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
988,"['case_6_7_helper', '(', 'struct', 'connection_data', '*', 'conn', ',', 'int', 'color', ')', '{', 'struct', 'heap_entry', '*', 'data', '=', 'conn', '->', 'heap', '[', '0', ']', ';', 'int', 'pos', '=', 'data', '->', 'coming_from', ';', 'int', 'apos', '=', 'data', '->', 'target', ';', 'int', 'other', '=', 'OTHER_COLOR', '(', 'color', ')', ';', 'if', '(', 'ladder_capturable', '(', 'apos', ',', 'other', ')', ')', 'ENQUEUE', '(', 'conn', ',', 'pos', ',', 'apos', ',', 'data', '->', 'distance', ',', 'FP', '(', '0', '.', '6', ')', ',', 'apos', ',', 'NO_MOVE', ')', ';', 'else', '{', 'int', '=', 'FP', '(', '0', '.', '85', ')', '+', 'FP', '(', '0', '.', '05', ')', '*', 'gg_min', '(', 'approxlib', '(', 'apos', ',', 'other', ',', '5', ',', 'NULL', ')', ',', '5', ')', ';', 'ENQUEUE', '(', 'conn', ',', 'pos', ',', 'apos', ',', 'data', '->', 'distance', '+', 'this_delta', '-', 'FP', '(', '0', '.', '6', ')', ',', 'this_delta', ',', 'NO_MOVE', ',', 'NO_MOVE', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
989,"['ensure_polling', '(', 'UDisksLinuxMDRaid', '*', 'mdraid', ',', 'gboolean', 'polling_on', ')', '{', 'if', '(', 'polling_on', ')', '{', 'if', '(', 'mdraid', '->', 'polling_timeout', '==', '0', ')', '{', 'mdraid', '->', 'polling_timeout', '=', 'g_timeout_add_seconds', '(', '1', ',', 'on_polling_timout', ',', 'mdraid', ')', ';', '}', '}', '{', 'if', '(', 'mdraid', '->', 'polling_timeout', '!=', '0', ')', '{', 'g_source_remove', '(', 'mdraid', '->', 'polling_timeout', ')', ';', 'mdraid', '->', 'polling_timeout', '=', '0', ';', '}', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
990,"['gm_world_log_allowed', '(', 'GmWorld', '*', 'world', ',', 'GmLogType', 'type', ')', '{', 'GmOptions', '*', 'options', '=', 'gm_app_options', '(', 'gm_app_instance', '(', ')', ')', ';', 'if', '(', '!gm_options_get_int', '(', 'options', ',', '""""', ')', ')', '{', 'return', 'FALSE', ';', '}', 'if', '(', 'gm_options_get_int', '(', 'world', '->', 'priv', '->', 'options', ',', '""""', ')', ')', '{', 'options', '=', 'world', '->', 'priv', '->', 'options', ';', '}', 'switch', '(', 'type', ')', '{', 'case', 'LOG_IN', ':', 'return', 'gm_options_get_int', '(', 'options', ',', '""""', ')', ';', 'break', ';', 'case', 'LOG_OUT', ':', 'return', 'gm_options_get_int', '(', 'options', ',', '""""', ')', ';', 'break', ';', 'case', 'LOG_STATUS', ':', 'return', 'gm_options_get_int', '(', 'options', ',', '""""', ')', ';', 'break', ';', 'case', 'LOG_MCP_IN', ':', 'return', 'gm_options_get_int', '(', 'options', ',', '""""', ')', ';', 'break', ';', 'case', 'LOG_MCP_OUT', ':', 'return', 'gm_options_get_int', '(', 'options', ',', '""""', ')', ';', 'break', ';', 'case', 'LOG_MCP_STATUS', ':', 'return', 'gm_options_get_int', '(', 'options', ',', '""""', ')', ';', 'break', ';', 'default', ':', 'return', 'FALSE', ';', 'break', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
991,"['hpi_outstream_get_info_ex', '(', 'u32', 'h_outstream', ',', 'u16', '*', 'pw_state', ',', 'u32', '*', 'pbuffer_size', ',', 'u32', '*', 'pdata_to_play', ',', 'u32', '*', 'psamples_played', ',', 'u32', '*', 'pauxiliary_data_to_play', ')', '{', 'struct', 'hpi_message', 'hm', ';', 'struct', 'hpi_response', 'hr', ';', 'hpi_init_message_response', '(', '&', 'hm', ',', '&', 'hr', ',', 'HPI_OBJ_OSTREAM', ',', 'HPI_OSTREAM_GET_INFO', ')', ';', 'if', '(', 'hpi_handle_indexes', '(', 'h_outstream', ',', '&', 'hm', '.', 'adapter_index', ',', '&', 'hm', '.', 'obj_index', ')', ')', 'return', 'HPI_ERROR_INVALID_HANDLE', ';', 'hpi_send_recv', '(', '&', 'hm', ',', '&', 'hr', ')', ';', 'if', '(', 'pw_state', ')', '*', 'pw_state', '=', 'hr', '.', 'u', '.', 'd', '.', 'u', '.', 'stream_info', '.', 'state', ';', 'if', '(', 'pbuffer_size', ')', '*', 'pbuffer_size', '=', 'hr', '.', 'u', '.', 'd', '.', 'u', '.', 'stream_info', '.', 'buffer_size', ';', 'if', '(', 'pdata_to_play', ')', '*', 'pdata_to_play', '=', 'hr', '.', 'u', '.', 'd', '.', 'u', '.', 'stream_info', '.', 'data_available', ';', 'if', '(', 'psamples_played', ')', '*', 'psamples_played', '=', 'hr', '.', 'u', '.', 'd', '.', 'u', '.', 'stream_info', '.', 'samples_transferred', ';', 'if', '(', 'pauxiliary_data_to_play', ')', '*', 'pauxiliary_data_to_play', '=', 'hr', '.', 'u', '.', 'd', '.', 'u', '.', 'stream_info', '.', 'auxiliary_data_available', ';', 'return', 'hr', '.', 'error', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
992,"['DoTerminalPty', '(', 'int', 'master', ')', '{', 'unsigned', 'char', 'term_buf', '[', '1024', ']', '=', '{', '0', ',', '0', ',', '}', ';', 'ssize_t', 'len', '=', 'read', '(', 'master', ',', 'term_buf', ',', 'sizeof', '(', 'term_buf', ')', ')', ';', 'if', '(', 'len', '==', '-', '1', '&&', 'errno', '==', 'EIO', ')', '{', '/', '/', 'this', 'happens', 'when', 'the', 'child', 'is', 'about', 'to', 'exit', ',', '/', '/', 'give', 'it', 'time', 'to', 'actually', 'exit', ',', 'otherwise', 'we', '/', '/', 'into', 'a', 'race', 'so', 'we', 'sleep', 'for', 'half', 'a', 'second', '.', 'struct', 'timespec', 'sleepfor', '=', '{', '0', ',', '500000000', '}', ';', 'nanosleep', '(', '&', 'sleepfor', ',', 'NULL', ')', ';', 'return', ';', '}', 'if', '(', 'len', '<=', '0', ')', 'return', ';', 'FileFd', ':', ':', 'Write', '(', '1', ',', 'term_buf', ',', 'len', ')', ';', 'if', '(', 'd', '->', 'term_out', ')', 'fwrite', '(', 'term_buf', ',', 'len', ',', 'sizeof', '(', 'char', ')', ',', 'd', '->', 'term_out', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
993,"['getMaterialDesc', '(', ')', '{', '/', '/', 'Each', 'material', 'request', 'a', 'new', 'object', '.', '/', '/', 'Sometimes', 'the', 'object', 'is', 'already', 'created', '(', 'see', ""''"", 'tag', 'by', 'example', ')', ',', 'but', 'it', 'is', 'not', 'initialized', '/', '/', 'So', ',', 'we', 'create', 'a', 'new', 'object', 'only', 'if', 'the', 'current', 'on', 'is', 'already', 'initialized', 'if', '(', 'm_pModel', '->', 'm_pCurrent', '!=', 'NULL', '&&', '(', '\tm_pModel', '->', 'm_pCurrent', '->', 'm_Meshes', '.', 'size', '(', ')', '>', '1', '||', '(', 'm_pModel', '->', 'm_pCurrent', '->', 'm_Meshes', '.', 'size', '(', ')', '==', '1', '&&', 'm_pModel', '->', 'm_Meshes', '[', 'm_pModel', '->', 'm_pCurrent', '->', 'm_Meshes', '[', '0', ']', ']', '->', 'm_Faces', '.', 'size', '(', ')', '!=', '0', ')', '\t', ')', ')', 'm_pModel', '->', 'm_pCurrent', '=', 'NULL', ';', '/', '/', 'Get', 'next', 'data', 'for', 'material', 'm_DataIt', '=', 'getNextToken', '<', 'DataArrayIt', '>', '(', 'm_DataIt', ',', 'm_DataItEnd', ')', ';', 'if', '(', 'm_DataIt', '==', 'm_DataItEnd', ')', 'return', ';', 'char', '*', 'pStart', '=', '&', '(', '*', 'm_DataIt', ')', ';', 'while', '(', 'm_DataIt', '!=', 'm_DataItEnd', '&&', '!isSeparator', '(', '*', 'm_DataIt', ')', ')', '++', 'm_DataIt', ';', '/', '/', 'Get', 'std', ':', ':', 'string', 'strName', '(', 'pStart', ',', '&', '(', '*', 'm_DataIt', ')', ')', ';', 'if', '(', 'strName', '.', 'empty', '(', ')', ')', 'return', ';', '/', '/', 'Search', 'for', 'std', ':', ':', 'map', '<', 'std', ':', ':', 'string', ',', 'ObjFile', ':', ':', 'Material', '*', '>', ':', ':', 'iterator', 'it', '=', 'm_pModel', '->', 'm_MaterialMap', '.', 'find', '(', 'strName', ')', ';', 'if', '(', 'it', '==', 'm_pModel', '->', 'm_MaterialMap', '.', 'end', '(', ')', ')', '{', '/', '/', 'Not', 'found', ',', 'use', 'default', 'm_pModel', '->', 'm_pCurrentMaterial', '=', 'm_pModel', '->', 'm_pDefaultMaterial', ';', 'DefaultLogger', ':', ':', 'get', '(', ')', '->', 'error', '(', '""""', '+', 'strName', '+', '""""', ')', ';', '}', '{', '/', '/', 'Found', ',', 'using', 'detected', 'm_pModel', '->', 'm_pCurrentMaterial', '=', '(', '*', 'it', ')', '.', 'second', ';', 'if', '(', 'needsNewMesh', '(', 'strName', ')', ')', '{', 'createMesh', '(', ')', ';', '}', 'm_pModel', '->', 'm_pCurrentMesh', '->', 'm_uiMaterialIndex', '=', 'getMaterialIndex', '(', 'strName', ')', ';', '}', '/', '/', 'Skip', 'rest', 'of', 'm_DataIt', '=', 'skipLine', '<', 'DataArrayIt', '>', '(', 'm_DataIt', ',', 'm_DataItEnd', ',', 'm_uiLine', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
994,"['backsql_delete_attr_f', '(', 'void', '*', 'v_at', ',', 'void', '*', 'v_bda', ')', '{', 'backsql_at_map_rec\t', '*', 'at', '=', '(', 'backsql_at_map_rec', '*', ')', 'v_at', ';', 'backsql_delete_attr_t\t', '*', 'bda', '=', '(', 'backsql_delete_attr_t', '*', ')', 'v_bda', ';', 'int\t\t\trc', ';', 'rc', '=', 'backsql_modify_delete_all_values', '(', 'bda', '->', 'op', ',', 'bda', '->', 'rs', ',', 'bda', '->', 'dbh', ',', 'bda', '->', 'e_id', ',', 'at', ')', ';', 'if', '(', 'rc', '!=', 'LDAP_SUCCESS', ')', '{', 'return', 'BACKSQL_AVL_STOP', ';', '}', 'return', 'BACKSQL_AVL_CONTINUE', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
995,"['ReadValue', '(', 'XMLReadingMachine', '&', 'reader', ',', 'const', 'pugi', ':', ':', 'xml_node', '&', 'element', ')', '{', 'std', ':', ':', 'string', 'text', ';', 'reader', '.', 'ReadTextNode', '(', 'text', ',', 'element', ')', ';', 'int', 'number', ';', 'sscanf', '(', 'text', '.', 'c_str', '(', ')', ',', '""""', ',', '&', 'number', ')', ';', 'return', 'new', 'TreeBool', '(', 'number', '?', 'true', ':', 'false', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
996,"['gf_isom_new_generic_subtitle_description', '(', 'GF_ISOFile', '*', 'movie', ',', 'u32', 'trackNumber', ',', 'char', '*', 'content_encoding', ',', 'char', '*', 'xml_schema_loc', ',', 'char', '*', 'mime_type_or_namespace', ',', 'Bool', 'is_xml', ',', 'char', '*', 'URLname', ',', 'char', '*', 'URNname', ',', 'u32', '*', 'outDescriptionIndex', ')', '{', 'GF_TrackBox', '*', 'trak', ';', 'GF_Err', 'e', ';', 'u32', 'dataRefIndex', ';', 'GF_MetaDataSampleEntryBox', '*', 'metasd', ';', 'e', '=', 'CanAccessMovie', '(', 'movie', ',', 'GF_ISOM_OPEN_WRITE', ')', ';', 'if', '(', 'e', ')', 'return', 'e', ';', 'trak', '=', 'gf_isom_get_track_from_file', '(', 'movie', ',', 'trackNumber', ')', ';', 'if', '(', '!trak', '||', '!trak', '->', 'Media', ')', 'return', 'GF_BAD_PARAM', ';', 'switch', '(', 'trak', '->', 'Media', '->', 'handler', '->', 'handlerType', ')', '{', 'case', 'GF_ISOM_MEDIA_SUBM', ':', 'break', ';', 'default', ':', 'return', 'GF_BAD_PARAM', ';', '}', '/', '/', 'get', 'or', 'create', 'the', 'data', 'e', '=', 'Media_FindDataRef', '(', 'trak', '->', 'Media', '->', 'information', '->', 'dataInformation', '->', 'dref', ',', 'URLname', ',', 'URNname', ',', '&', 'dataRefIndex', ')', ';', 'if', '(', 'e', ')', 'return', 'e', ';', 'if', '(', '!dataRefIndex', ')', '{', 'e', '=', 'Media_CreateDataRef', '(', 'trak', '->', 'Media', '->', 'information', '->', 'dataInformation', '->', 'dref', ',', 'URLname', ',', 'URNname', ',', '&', 'dataRefIndex', ')', ';', 'if', '(', 'e', ')', 'return', 'e', ';', '}', 'trak', '->', 'Media', '->', 'mediaHeader', '->', 'modificationTime', '=', 'gf_isom_get_mp4time', '(', ')', ';', 'metasd', '=', '(', 'GF_MetaDataSampleEntryBox', '*', ')', 'gf_isom_box_new', '(', '(', 'is_xml', '?', 'GF_ISOM_BOX_TYPE_METX', ':', 'GF_ISOM_BOX_TYPE_METT', ')', ')', ';', 'metasd', '->', 'dataReferenceIndex', '=', 'dataRefIndex', ';', 'gf_list_add', '(', 'trak', '->', 'Media', '->', 'information', '->', 'sampleTable', '->', 'SampleDescription', '->', 'other_boxes', ',', 'metasd', ')', ';', 'if', '(', 'outDescriptionIndex', ')', '*', 'outDescriptionIndex', '=', 'gf_list_count', '(', 'trak', '->', 'Media', '->', 'information', '->', 'sampleTable', '->', 'SampleDescription', '->', 'other_boxes', ')', ';', 'metasd', '->', 'content_encoding', '=', 'gf_strdup', '(', 'content_encoding', ')', ';', 'metasd', '->', 'xml_schema_loc', '=', 'gf_strdup', '(', 'xml_schema_loc', ')', ';', 'metasd', '->', 'mime_type_or_namespace', '=', 'gf_strdup', '(', 'mime_type_or_namespace', ')', ';', 'return', 'e', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
997,"['tools_make_date', '(', 'const', 'string', '&', 'chemin', ',', 'infinint', 'access', ',', 'infinint', 'modif', ')', '{', 'struct', 'utimbuf', 'temps', ';', 'time_t', 'tmp', '=', '0', ';', 'access', '.', 'unstack', '(', 'tmp', ')', ';', 'temps', '.', 'actime', '=', 'tmp', ';', 'tmp', '=', '0', ';', 'modif', '.', 'unstack', '(', 'tmp', ')', ';', 'temps', '.', 'modtime', '=', 'tmp', ';', 'if', '(', 'utime', '(', 'chemin', '.', 'c_str', '(', ')', ',', '&', 'temps', ')', '<', '0', ')', 'Erange', '(', '""""', ',', 'string', '(', 'dar_gettext', '(', '""""', ')', ')', '+', 'strerror', '(', 'errno', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
998,"['copy_signature', '(', 'PKT_signature', '*', 'd', ',', 'PKT_signature', '*', 's', ')', '{', 'int', 'n', ',', 'i', ';', 'if', '(', '!d', ')', 'd', '=', 'xmalloc', '(', 'sizeof', '*', 'd', ')', ';', 'memcpy', '(', 'd', ',', 's', ',', 'sizeof', '*', 'd', ')', ';', 'n', '=', 'pubkey_get_nsig', '(', 's', '->', 'pubkey_algo', ')', ';', 'if', '(', '!n', ')', 'd', '->', 'data', '[', '0', ']', '=', 'mpi_copy', '(', 's', '->', 'data', '[', '0', ']', ')', ';', 'else', '{', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'n', ';', 'i', '++', ')', 'd', '->', 'data', '[', 'i', ']', '=', 'mpi_copy', '(', 's', '->', 'data', '[', 'i', ']', ')', ';', '}', 'd', '->', 'pka_info', '=', 's', '->', 'pka_info', '?', 'cp_pka_info', '(', 's', '->', 'pka_info', ')', ':', 'NULL', ';', 'd', '->', 'hashed', '=', 'cp_subpktarea', '(', 's', '->', 'hashed', ')', ';', 'd', '->', 'unhashed', '=', 'cp_subpktarea', '(', 's', '->', 'unhashed', ')', ';', 'if', '(', 's', '->', 'numrevkeys', ')', '{', 'd', '->', 'revkey', '=', 'NULL', ';', 'd', '->', 'numrevkeys', '=', '0', ';', 'parse_revkeys', '(', 'd', ')', ';', '}', 'return', 'd', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
999,"['egg_buffer_set_allocator', '(', 'EggBuffer', '*', 'buffer', ',', 'EggBufferAllocator', 'allocator', ')', '{', 'unsigned', 'char', '*', 'buf', '=', 'NULL', ';', 'if', '(', '!allocator', ')', 'allocator', '=', 'DEFAULT_ALLOCATOR', ';', 'if', '(', 'buffer', '->', 'allocator', '==', 'allocator', ')', 'return', '1', ';', 'if', '(', 'buffer', '->', 'allocated_len', ')', '{', 'buf', '=', '(', 'allocator', ')', '(', 'NULL', ',', 'buffer', '->', 'allocated_len', ')', ';', 'if', '(', 'buf', '==', 'NULL', ')', 'return', '0', ';', 'memcpy', '(', 'buf', ',', 'buffer', '->', 'buf', ',', 'buffer', '->', 'allocated_len', ')', ';', '}', 'if', '(', 'buffer', '->', 'allocator', '&&', 'buffer', '->', 'buf', ')', '(', 'buffer', '->', 'allocator', ')', '(', 'buffer', '->', 'buf', ',', '0', ')', ';', 'buffer', '->', 'buf', '=', 'buf', ';', 'buffer', '->', 'allocator', '=', 'allocator', ';', 'return', '1', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1000,"['entry_find_oldest', '(', 'void', '*', 'data', ',', 'void', '*', 'cookie', ')', '{', 'struct', 'cache_entry', '*', 'entry', '=', '(', 'struct', 'cache_entry', '*', ')', 'data', ';', 'struct', 'cache_entry', '*', '*', 'oldest', '=', '(', 'struct', 'cache_entry', '*', '*', ')', 'cookie', ';', 'if', '(', '*', 'oldest', '==', 'NULL', ')', '{', '*', 'oldest', '=', 'entry', ';', 'return', ';', '}', 'if', '(', 'entry', '->', 'data', '->', 'refcount', '>', '(', '*', 'oldest', ')', '->', 'data', '->', 'refcount', ')', 'return', ';', 'if', '(', 'entry', '->', 'lastused', '>', '(', '*', 'oldest', ')', '->', 'lastused', ')', 'return', ';', '*', 'oldest', '=', 'data', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1001,"['VehicleTypeSelectionItemFactory', '(', 'Resources', 'plantResources', ',', 'const', 'Container', '&', 'types', ',', 'const', 'Player', '&', 'player', ')', ':', 'actplayer', '(', 'player', ')', ',', 'showResourcesForUnit', '(', 'true', ')', ',', 'original_items', '(', 'types', ')', '{', 'restart', '(', ')', ';', 'setAvailableResource', '(', 'plantResources', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1002,"['gst_base_video_decoder_get_frame', '(', 'GstBaseVideoDecoder', '*', 'base_video_decoder', ',', 'int', 'frame_number', ')', '{', 'GList', '*', 'g', ';', 'GstVideoFrame', '*', 'frame', '=', 'NULL', ';', 'GST_BASE_VIDEO_CODEC_STREAM_LOCK', '(', 'base_video_decoder', ')', ';', 'for', '(', 'g', '=', 'g_list_first', '(', 'GST_BASE_VIDEO_CODEC', '(', 'base_video_decoder', ')', '->', 'frames', ')', ';', 'g', ';', 'g', '=', 'g_list_next', '(', 'g', ')', ')', '{', 'GstVideoFrame', '*', 'tmp', '=', 'g', '->', 'data', ';', 'if', '(', 'frame', '->', 'system_frame_number', '==', 'frame_number', ')', '{', 'frame', '=', 'tmp', ';', 'break', ';', '}', '}', 'GST_BASE_VIDEO_CODEC_STREAM_UNLOCK', '(', 'base_video_decoder', ')', ';', 'return', 'frame', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
1003,"['session_query_cname', '(', 'dns_session_t', '*', 'session', ',', 'dns_msg_question_t', '*', 'q', ',', 'dns_cache_rrset_t', '*', 'rrset', ',', 'int', 'nlevel', ')', '{', 'dns_cache_res_t', '*', 'cache', ';', 'dns_cache_rrset_t', '*', 'rr_cname', ';', 'dns_config_zone_t', '*', 'zone', ';', 'dns_msg_question_t', 'q_cname', ';', 'if', '(', 'nlevel', '>', 'DNS_CNAME_NEST_MAX', ')', '{', 'plog', '(', 'LOG_DEBUG', ',', '""""', ',', 'MODULE', ')', ';', 'return', ';', '}', 'if', '(', '(', 'cache', '=', 'DNS_CACHE_LIST_HEAD', '(', '&', 'rrset', '->', 'rrset_list_cname', ')', ')', '==', 'NULL', ')', 'return', ';', 'memcpy', '(', '&', 'q_cname', ',', 'q', ',', 'sizeof', '(', 'q_cname', ')', ')', ';', 'dns_msg_parse_name', '(', 'q_cname', '.', 'mq_name', ',', '&', 'cache', '->', 'cache_res', ')', ';', 'memcpy', '(', '&', 'session', '->', 'sess_qlast', ',', '&', 'q_cname', ',', 'sizeof', '(', 'q_cname', ')', ')', ';', 'if', '(', '(', 'zone', '=', 'dns_config_find_zone', '(', '&', 'session', '->', 'sess_zone_exact', ',', 'q_cname', '.', 'mq_name', ',', 'q_cname', '.', 'mq_class', ')', ')', '==', 'NULL', ')', '{', 'session', '->', 'sess_iflags', '|=', 'SESSION_NO_NEGCACHE', ';', 'return', ';', '}', 'plog', '(', 'LOG_DEBUG', ',', '""""', ',', 'MODULE', ',', 'q_cname', '.', 'mq_name', ')', ';', 'if', '(', '(', 'rr_cname', '=', 'session_query_recursive', '(', 'session', ',', 'zone', ',', '&', 'q_cname', ',', 'nlevel', ')', ')', '!=', 'NULL', ')', '{', 'plog', '(', 'LOG_DEBUG', ',', '""""', ',', 'MODULE', ',', 'dns_list_count', '(', '&', 'rr_cname', '->', 'rrset_list_answer', ')', ')', ';', 'dns_cache_merge', '(', 'rrset', ',', 'q', ',', 'rr_cname', ',', '&', 'session', '->', 'sess_tls', ')', ';', 'dns_cache_release', '(', 'rr_cname', ',', '&', 'session', '->', 'sess_tls', ')', ';', '}', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1004,"['make_object_born', '(', 'ira_object_t', 'obj', ')', '{', 'live_range_t', 'lr', '=', 'OBJECT_LIVE_RANGES', '(', 'obj', ')', ';', 'sparseset_set_bit', '(', 'objects_live', ',', 'OBJECT_CONFLICT_ID', '(', 'obj', ')', ')', ';', 'IOR_HARD_REG_SET', '(', 'OBJECT_CONFLICT_HARD_REGS', '(', 'obj', ')', ',', 'hard_regs_live', ')', ';', 'IOR_HARD_REG_SET', '(', 'OBJECT_TOTAL_CONFLICT_HARD_REGS', '(', 'obj', ')', ',', 'hard_regs_live', ')', ';', 'if', '(', 'lr', '==', '||', '(', 'lr', '->', 'finish', '!=', 'curr_point', '&&', 'lr', '->', 'finish', '+', '1', '!=', 'curr_point', ')', ')', 'ira_add_live_range_to_object', '(', 'obj', ',', 'curr_point', ',', '-', '1', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1005,"['AVM_card_msg', '(', 'struct', 'IsdnCardState', '*', 'cs', ',', 'int', 'mt', ',', 'void', '*', 'arg', ')', '{', 'u_long', 'flags', ';', 'switch', '(', 'mt', ')', '{', 'case', 'CARD_RESET', ':', 'spin_lock_irqsave', '(', '&', 'cs', '->', 'lock', ',', 'flags', ')', ';', 'byteout', '(', 'cs', '->', 'hw', '.', 'avm', '.', 'cfg_reg', '+', 'ASL0_OFFSET', ',', '0x00', ')', ';', 'HZDELAY', '(', 'HZ', '/', '5', '+', '1', ')', ';', 'byteout', '(', 'cs', '->', 'hw', '.', 'avm', '.', 'cfg_reg', '+', 'ASL0_OFFSET', ',', 'ASL0_W_RESET', ')', ';', 'HZDELAY', '(', 'HZ', '/', '5', '+', '1', ')', ';', 'byteout', '(', 'cs', '->', 'hw', '.', 'avm', '.', 'cfg_reg', '+', 'ASL0_OFFSET', ',', '0x00', ')', ';', 'spin_unlock_irqrestore', '(', '&', 'cs', '->', 'lock', ',', 'flags', ')', ';', 'return', '0', ';', 'case', 'CARD_RELEASE', ':', 'return', '0', ';', 'case', 'CARD_INIT', ':', 'spin_lock_irqsave', '(', '&', 'cs', '->', 'lock', ',', 'flags', ')', ';', 'byteout', '(', 'cs', '->', 'hw', '.', 'avm', '.', 'cfg_reg', '+', 'ASL0_OFFSET', ',', 'ASL0_W_TDISABLE', '|', 'ASL0_W_TRESET', '|', 'ASL0_W_IRQENABLE', ')', ';', 'clear_pending_isac_ints', '(', 'cs', ')', ';', 'clear_pending_hscx_ints', '(', 'cs', ')', ';', 'inithscxisac', '(', 'cs', ',', '1', ')', ';', 'inithscxisac', '(', 'cs', ',', '2', ')', ';', 'spin_unlock_irqrestore', '(', '&', 'cs', '->', 'lock', ',', 'flags', ')', ';', 'return', '0', ';', 'case', 'CARD_TEST', ':', 'return', '0', ';', 'default', ':', 'return', '0', ';', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1006,"['put_directory', '(', 'const', 'char', '*', 'dirname', ',', 'const', 'char', '*', 'remotedirname', ',', 'struct', 'work_queue', '*', 'q', ',', 'struct', 'work_queue_worker', '*', 'w', ',', 'int', 'taskid', ',', 'INT64_T', '*', 'total_bytes', ',', 'int', 'flags', ')', '{', 'DIR', '*', 'dir', '=', 'opendir', '(', 'dirname', ')', ';', 'if', '(', '!dir', ')', 'return', '0', ';', 'struct', 'dirent', '*', 'file', ';', 'char', 'buffer', '[', 'WORK_QUEUE_LINE_MAX', ']', ';', 'char', '*', 'localname', ',', '*', 'remotename', ';', 'int', 'result', ';', 'struct', 'stat', 'local_info', ';', 'if', '(', 'stat', '(', 'dirname', ',', '&', 'local_info', ')', '<', '0', ')', 'return', '0', ';', 'local_info', '.', 'st_mode', '|=', '0700', ';', 'local_info', '.', 'st_mode', '&=', '0777', ';', '/', '/', 'When', 'putting', 'a', 'file', 'its', 'parent', 'directories', 'are', '/', '/', 'created', 'by', 'the', 'worker', ',', 'so', 'no', 'need', 'to', 'manually', 'create', 'them', '.', 'while', '(', '(', 'file', '=', 'readdir', '(', 'dir', ')', ')', ')', '{', 'char', '*', 'filename', '=', 'file', '->', 'd_name', ';', 'if', '(', '!strcmp', '(', 'filename', ',', '""""', ')', '||', '!strcmp', '(', 'filename', ',', '""""', ')', ')', '{', 'continue', ';', '}', '*', 'buffer', '=', ""''"", ';', 'sprintf', '(', 'buffer', ',', '""""', ',', 'dirname', ',', 'filename', ')', ';', 'localname', '=', 'xxstrdup', '(', 'buffer', ')', ';', '*', 'buffer', '=', ""''"", ';', 'sprintf', '(', 'buffer', ',', '""""', ',', 'remotedirname', ',', 'filename', ')', ';', 'remotename', '=', 'xxstrdup', '(', 'buffer', ')', ';', 'if', '(', 'stat', '(', 'localname', ',', '&', 'local_info', ')', '<', '0', ')', '{', 'closedir', '(', 'dir', ')', ';', 'return', '0', ';', '}', 'if', '(', 'local_info', '.', 'st_mode', '&', 'S_IFDIR', ')', '{', 'result', '=', 'put_directory', '(', 'localname', ',', 'remotename', ',', 'q', ',', 'w', ',', 'taskid', ',', 'total_bytes', ',', 'flags', ')', ';', '}', 'else', '{', 'result', '=', 'put_file', '(', 'localname', ',', 'remotename', ',', '0', ',', '0', ',', 'q', ',', 'w', ',', 'taskid', ',', 'total_bytes', ',', 'flags', ')', ';', '}', 'if', '(', 'result', '==', '0', ')', '{', 'closedir', '(', 'dir', ')', ';', 'return', '0', ';', '}', 'free', '(', 'localname', ')', ';', 'free', '(', 'remotename', ')', ';', '}', 'closedir', '(', 'dir', ')', ';', 'return', '1', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1007,"['openoverlay_cb', '(', 'Fl_Object', '*', ',', 'void', '*', 'i', ')', '{', 'IMAGEPARM', '*', 'pp', '=', '(', 'IMAGEPARM', '*', ')', 'mainMenuBar', '->', 'getSelectedItemArgument', '(', 'IMAGE_LIST_ID', ')', ';', 'static', 'const', 'char', '*', 'currentfile', '=', '0', ',', '*', 'p', '=', '0', ';', '#ifdef', 'char', 'locfilename', '[', 'DFLTSTRLEN', ']', ';', 'ImviewNFC', '->', 'type', '(', 'Fl_Native_File_Chooser', ':', ':', 'BROWSE_FILE', ')', ';', 'ImviewNFC', '->', 'title', '(', '""""', ')', ';', 'switch', '(', 'ImviewNFC', '->', 'show', '(', ')', ')', '{', 'case', '-', '1', ':', '/', '/', 'warnprintf', '(', '""""', ',', 'ImviewNFC', '->', 'errmsg', '(', ')', ')', ';', 'break', ';', 'case', '1', ':', '/', '/', 'dbgprintf', '(', '""""', ')', ';', 'break', ';', 'default', ':', '/', '/', 'USER', 'PICKED', 'A', 'dbgprintf', '(', '""""', ',', 'ImviewNFC', '->', 'filename', '(', ')', ')', ';', 'fl_filename_expand', '(', 'locfilename', ',', 'sizeof', '(', 'locfilename', ')', ',', 'ImviewNFC', '->', 'filename', '(', ')', ')', ';', 'pp', '->', 'ovlpath', '=', 'strdup', '(', 'locfilename', ')', ';', '/', '/', 'apply', 'overlay', 'to', 'current', 'int', 'retval', '=', 'IOBlackBox', '->', 'readOverlay', '(', 'currentfile', ')', ';', 'if', '(', 'retval', '==', '0', ')', '{', '/', '/', 'redisplay', 'image', 'with', 'overlay', '/', '/', ""don't"", 'call', '/', '/', 'IOBlackBox', '->', 'applyOverlayToCurrentImage', '(', ')', ';', '/', '/', 'call', 'that', 'IOBlackBox', '->', 'applyImageParameters', '(', 'pp', ',', '0', ',', '0', ',', 'true', ')', ';', 'mainViewer', '->', 'displayCurrentImage', '(', ')', ';', '}', 'openimage', '(', 'locfilename', ')', ';', 'break', ';', '}', 'dbgprintf', '(', '""""', ',', '(', 'long', ')', 'i', ')', ';', 'p', '=', 'fl_file_chooser', '(', '""""', ',', '""""', ',', 'currentfile', ')', ';', 'if', '(', 'p', ')', 'currentfile', '=', 'p', ';', 'if', '(', 'p', '==', '0', ')', '{', 'dbgprintf', '(', '""""', ')', ';', '}', 'else', '{', 'dbgprintf', '(', '""""', ',', 'currentfile', ')', ';', 'pp', '->', 'ovlpath', '=', 'strdup', '(', 'p', ')', ';', '/', '/', 'apply', 'overlay', 'to', 'current', 'int', 'retval', '=', 'IOBlackBox', '->', 'readOverlay', '(', 'currentfile', ')', ';', 'if', '(', 'retval', '==', '0', ')', '{', '/', '/', 'redisplay', 'image', 'with', 'overlay', '/', '/', ""don't"", 'call', '/', '/', 'IOBlackBox', '->', 'applyOverlayToCurrentImage', '(', ')', ';', '/', '/', 'call', 'that', 'IOBlackBox', '->', 'applyImageParameters', '(', 'pp', ',', '0', ',', '0', ',', 'true', ')', ';', 'mainViewer', '->', 'displayCurrentImage', '(', ')', ';', '}', '}', 'return', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1008,"['vevop', '(', 'l', ',', 'r', ',', 'f', ')', 'vari', '*', 'l', ',', '*', 'r', ';', 'double', '(', '*', 'f', ')', '(', ')', ';', '{', 'INT', 'i', ',', 'n', ';', 'vari', '*', 'v', ';', 'double', 'z', ';', 'if', '(', '(', 'l', '==', 'NULL', ')', '|', '(', 'r', '==', 'NULL', ')', ')', 'return', '(', 'NULL', ')', ';', 'n', '=', 'vlength', '(', 'l', ')', ';', 'if', '(', 'n', '<', 'vlength', '(', 'r', ')', ')', 'n', '=', 'vlength', '(', 'r', ')', ';', 'v', '=', 'createvar', '(', '""""', ',', 'STHIDDEN', ',', 'n', ',', 'VDOUBLE', ')', ';', 'if', '(', 'lf_error', ')', 'return', '(', 'NULL', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'n', ';', 'i', '++', ')', '{', 'z', '=', 'f', '(', 'vitem', '(', 'l', ',', 'i', ')', ',', 'vitem', '(', 'r', ',', 'i', ')', ')', ';', 'vassn', '(', 'v', ',', 'i', ',', 'z', ')', ';', '}', 'deleteifhidden', '(', 'l', ')', ';', 'deleteifhidden', '(', 'r', ')', ';', 'return', '(', 'v', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1009,"['crypto_init_ablkcipher_ops', '(', 'struct', 'crypto_tfm', '*', 'tfm', ',', 'u32', 'type', ',', 'u32', 'mask', ')', '{', 'struct', 'ablkcipher_alg', '*', 'alg', '=', '&', 'tfm', '->', '__crt_alg', '->', 'cra_ablkcipher', ';', 'struct', 'ablkcipher_tfm', '*', 'crt', '=', '&', 'tfm', '->', 'crt_ablkcipher', ';', 'if', '(', 'alg', '->', 'ivsize', '>', 'PAGE_SIZE', '/', '8', ')', 'return', '-', 'EINVAL', ';', 'crt', '->', 'setkey', '=', 'setkey', ';', 'crt', '->', 'encrypt', '=', 'alg', '->', 'encrypt', ';', 'crt', '->', 'decrypt', '=', 'alg', '->', 'decrypt', ';', 'if', '(', '!alg', '->', 'ivsize', ')', '{', 'crt', '->', 'givencrypt', '=', 'skcipher_null_givencrypt', ';', 'crt', '->', 'givdecrypt', '=', 'skcipher_null_givdecrypt', ';', '}', 'crt', '->', 'base', '=', '__crypto_ablkcipher_cast', '(', 'tfm', ')', ';', 'crt', '->', 'ivsize', '=', 'alg', '->', 'ivsize', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1010,"['piece_button_press', '(', 'GooCanvasItem', '*', 'item', ',', 'GooCanvasItem', '*', 'target', ',', 'GdkEventButton', '*', 'event', ',', 'gpointer', 'data', ')', '{', 'GooCanvas', '*', 'canvas', ';', 'GooCanvasItem', '*', '*', 'board', ';', 'GooCanvasItem', '*', 'text', 'G_GNUC_UNUSED', ';', 'int', 'num', 'G_GNUC_UNUSED', ',', 'pos', ',', 'newpos', ';', 'int', 'x', ',', 'y', ';', 'double', 'dx', '=', '0', '.', '0', ',', 'dy', '=', '0', '.', '0', ';', 'int', 'move', ';', 'canvas', '=', 'goo_canvas_item_get_canvas', '(', 'item', ')', ';', 'board', '=', 'g_object_get_data', '(', 'G_OBJECT', '(', 'canvas', ')', ',', '""""', ')', ';', 'num', '=', 'GPOINTER_TO_INT', '(', 'g_object_get_data', '(', 'G_OBJECT', '(', 'item', ')', ',', '""""', ')', ')', ';', 'pos', '=', 'GPOINTER_TO_INT', '(', 'g_object_get_data', '(', 'G_OBJECT', '(', 'item', ')', ',', '""""', ')', ')', ';', 'text', '=', 'g_object_get_data', '(', 'G_OBJECT', '(', 'item', ')', ',', '""""', ')', ';', '#if', 'g_print', '(', '""""', ',', 'pos', '%', '4', ',', 'pos', '/', '4', ',', 'num', '+', '1', ')', ';', 'y', '=', 'pos', '/', '4', ';', 'x', '=', 'pos', '%', '4', ';', 'move', '=', 'TRUE', ';', 'if', '(', '(', 'y', '>', '0', ')', '&&', '(', 'board', '[', '(', 'y', '-', '1', ')', '*', '4', '+', 'x', ']', '==', 'NULL', ')', ')', '{', 'dx', '=', '0', '.', '0', ';', 'dy', '=', '-', '1', '.', '0', ';', 'y', '--', ';', '}', 'else', 'if', '(', '(', 'y', '<', '3', ')', '&&', '(', 'board', '[', '(', 'y', '+', '1', ')', '*', '4', '+', 'x', ']', '==', 'NULL', ')', ')', '{', 'dx', '=', '0', '.', '0', ';', 'dy', '=', '1', '.', '0', ';', 'y', '++', ';', '}', 'else', 'if', '(', '(', 'x', '>', '0', ')', '&&', '(', 'board', '[', 'y', '*', '4', '+', 'x', '-', '1', ']', '==', 'NULL', ')', ')', '{', 'dx', '=', '-', '1', '.', '0', ';', 'dy', '=', '0', '.', '0', ';', 'x', '--', ';', '}', 'else', 'if', '(', '(', 'x', '<', '3', ')', '&&', '(', 'board', '[', 'y', '*', '4', '+', 'x', '+', '1', ']', '==', 'NULL', ')', ')', '{', 'dx', '=', '1', '.', '0', ';', 'dy', '=', '0', '.', '0', ';', 'x', '++', ';', '}', 'move', '=', 'FALSE', ';', 'if', '(', 'move', ')', '{', 'newpos', '=', 'y', '*', '4', '+', 'x', ';', 'board', '[', 'pos', ']', '=', 'NULL', ';', 'board', '[', 'newpos', ']', '=', 'item', ';', 'g_object_set_data', '(', 'G_OBJECT', '(', 'item', ')', ',', '""""', ',', 'GINT_TO_POINTER', '(', 'newpos', ')', ')', ';', 'goo_canvas_item_translate', '(', 'item', ',', 'dx', '*', 'PIECE_SIZE', ',', 'dy', '*', 'PIECE_SIZE', ')', ';', 'test_win', '(', 'board', ')', ';', '}', 'return', 'FALSE', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1011,"['ar5523_hwconfig', '(', 'struct', 'ieee80211_hw', '*', 'hw', ',', 'u32', 'changed', ')', '{', 'struct', 'ar5523', '*', 'ar', '=', 'hw', '->', 'priv', ';', 'ar5523_dbg', '(', 'ar', ',', '""""', ')', ';', 'mutex_lock', '(', '&', 'ar', '->', 'mutex', ')', ';', 'if', '(', 'changed', '&', 'IEEE80211_CONF_CHANGE_CHANNEL', ')', '{', 'ar5523_dbg', '(', 'ar', ',', '""""', ')', ';', 'ar5523_flush_tx', '(', 'ar', ')', ';', 'ar5523_switch_chan', '(', 'ar', ')', ';', '}', 'mutex_unlock', '(', '&', 'ar', '->', 'mutex', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1012,"['client_challenge', '(', 'GuiWidget', '*', 'widget', ',', 'GuiEvent', '*', 'event', ')', '{', '#ifdef', 'if', '(', 'event', '->', 'type', '!=', 'GUI_CLICKED', ')', 'return', ';', 'if', '(', 'client_user', '==', '0', ')', '{', 'client_popup_info', '(', '_', '(', '""""', ')', ')', ';', 'return', ';', '}', 'if', '(', 'client_levelset', '==', '0', ')', '{', 'client_popup_info', '(', '_', '(', '""""', ')', ')', ';', 'return', ';', '}', 'if', '(', 'client_user', '->', 'id', '==', 'client_id', ')', '{', 'client_popup_info', '(', '_', '(', '""""', ')', ')', ';', 'return', ';', '}', 'strcpy', '(', 'mp_peer_name', ',', 'client_user', '->', 'name', ')', ';', 'mp_peer_id', '=', 'client_user', '->', 'id', ';', 'strcpy', '(', 'mp_levelset', ',', 'client_levelset', ')', ';', 'mp_diff', '=', 'config', '.', 'mp_diff', ';', 'mp_rounds', '=', 'config', '.', 'mp_rounds', ';', 'mp_balls', '=', 'config', '.', 'mp_balls', ';', 'mp_frags', '=', 'config', '.', 'mp_frags', ';', 'msg_begin_writing', '(', 'msgbuf', ',', '&', 'msglen', ',', 'MAX_MSG_SIZE', ')', ';', 'msg_write_int8', '(', 'MSG_OPEN_GAME', ')', ';', 'msg_write_int32', '(', 'mp_peer_id', ')', ';', 'msg_write_string', '(', 'mp_levelset', ')', ';', 'msg_write_int8', '(', 'mp_diff', ')', ';', 'msg_write_int8', '(', 'mp_rounds', ')', ';', 'msg_write_int8', '(', 'mp_frags', ')', ';', 'msg_write_int8', '(', 'mp_balls', ')', ';', 'client_transmit', '(', 'CODE_BLUE', ',', 'msglen', ',', 'msgbuf', ')', ';', 'client_popup_info', '(', '_', '(', '""""', ')', ',', 'mp_peer_name', ')', ';', 'client_state', '=', 'CLIENT_AWAIT_ANSWER', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1013,"['print_uptime', '(', 'const', 'struct', 'ap_session', '*', 'ses', ',', 'char', '*', 'buf', ')', '{', 'time_t', 'uptime', ';', 'int', 'day', ',', 'hour', ',', 'min', ',', 'sec', ';', 'char', 'time_str', '[', '14', ']', ';', 'if', '(', 'ses', '->', 'stop_time', ')', 'uptime', '=', 'ses', '->', 'stop_time', '-', 'ses', '->', 'start_time', ';', 'else', '{', 'uptime', '=', '_time', '(', ')', ';', 'uptime', '-=', 'ses', '->', 'start_time', ';', '}', 'day', '=', 'uptime', '/', '(', '24', '*', '60', '*', '60', ')', ';', 'uptime', '%=', '(', '24', '*', '60', '*', '60', ')', ';', 'hour', '=', 'uptime', '/', '(', '60', '*', '60', ')', ';', 'uptime', '%=', '(', '60', '*', '60', ')', ';', 'min', '=', 'uptime', '/', '60', ';', 'sec', '=', 'uptime', '%', '60', ';', 'if', '(', 'day', ')', 'snprintf', '(', 'time_str', ',', '13', ',', '""""', ',', 'day', ',', 'hour', ',', 'min', ',', 'sec', ')', ';', 'snprintf', '(', 'time_str', ',', '13', ',', '""""', ',', 'hour', ',', 'min', ',', 'sec', ')', ';', 'sprintf', '(', 'buf', ',', '""""', ',', 'time_str', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1014,"['gtk_meter_adjustment_value_changed', '(', 'GtkAdjustment', '*', 'adjustment', ',', 'gpointer', 'data', ')', '{', 'GtkMeter', '*', 'meter', ';', 'g_return_if_fail', '(', 'adjustment', '!=', 'NULL', ')', ';', 'g_return_if_fail', '(', 'data', '!=', 'NULL', ')', ';', 'meter', '=', 'GTK_METER', '(', 'data', ')', ';', 'if', '(', 'meter', '->', 'old_value', '!=', 'adjustment', '->', 'value', ')', '{', 'gtk_meter_update', '(', 'meter', ')', ';', 'meter', '->', 'old_value', '=', 'adjustment', '->', 'value', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1015,"['netsys_queue_add', '(', 'struct', 'nqueue', '*', 'q', ',', 'void', '*', 'elem', ')', '{', 'int', 'code', ';', 'unsigned', 'long', 'new_end', ';', 'new_end', '=', 'q', '->', 'table_end', '+', '1', ';', 'if', '(', 'new_end', '==', 'q', '->', 'table_size', ')', 'new_end', '=', '0', ';', 'if', '(', 'new_end', '==', 'q', '->', 'table_start', ')', '{', 'struct', 'nqueue', 'q1', ';', 'int', 'n', ';', 'code', '=', 'netsys_queue_init', '(', '&', 'q1', ',', 'q', '->', 'table_size', '*', '2', ')', ';', 'if', '(', 'code', '!=', '0', ')', 'return', 'code', ';', 'if', '(', 'q', '->', 'table_start', '<=', 'q', '->', 'table_end', ')', '{', 'n', '=', 'q', '->', 'table_end', '-', 'q', '->', 'table_start', ';', 'memcpy', '(', 'q1', '.', 'table', ',', 'q', '->', 'table', '+', 'q', '->', 'table_start', ',', 'n', '*', 'sizeof', '(', 'void', '*', ')', ')', ';', '}', 'else', '{', 'int', 'n1', ';', 'n1', '=', 'q', '->', 'table_size', '-', 'q', '->', 'table_start', ';', 'memcpy', '(', 'q1', '.', 'table', ',', 'q', '->', 'table', '+', 'q', '->', 'table_start', ',', 'n1', '*', 'sizeof', '(', 'void', '*', ')', ')', ';', 'memcpy', '(', 'q1', '.', 'table', '+', 'n1', ',', 'q', '->', 'table', ',', 'q', '->', 'table_end', '*', 'sizeof', '(', 'void', '*', ')', ')', ';', 'n', '=', 'n1', '+', 'q', '->', 'table_end', ';', '}', 'free', '(', 'q', '->', 'table', ')', ';', 'q', '->', 'table', '=', 'q1', '.', 'table', ';', 'q', '->', 'table_size', '=', 'q1', '.', 'table_size', ';', 'q', '->', 'table_start', '=', '0', ';', 'q', '->', 'table_end', '=', 'n', ';', 'new_end', '=', 'n', '+', '1', ';', '}', '*', '(', 'q', '->', 'table', '+', 'q', '->', 'table_end', ')', '=', 'elem', ';', 'q', '->', 'table_end', '=', 'new_end', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1016,"['deprecated_attr_warn', '(', 'const', 'char', '*', 'name', ')', '{', 'pr_warn_once', '(', '""""', ',', 'task_pid_nr', '(', 'current', ')', ',', 'current', '->', 'comm', ',', 'name', ',', '""""', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1017,"['ois_expand_gsm7', '(', 'char', '*', 'raw8', ',', 'const', 'char', '*', 'raw7', ',', 'int', 'len', ')', '{', 'int', 'i', ';', 'char', 'bits', '[', '8', '*', '(', 'BUFLEN', '+', '1', ')', ']', ';', 'SAY2', '(', '3', ',', '""""', ',', 'len', ')', ';', 'ois_expand_gsm7_to_bits', '(', 'bits', ',', 'raw7', ',', 'len', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'len', ';', '++', 'i', ')', '{', 'raw8', '[', 'i', ']', '=', 'ois_expand_gsm7_from_bits', '(', 'bits', ',', 'i', ')', ';', '}', 'SAY2', '(', '5', ',', '""""', ',', 'ois_debug_str', '(', 'raw8', ',', 'i', ')', ')', ';', 'return', 'i', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1018,"['fs_rtp_bitrate_adapter_query', '(', 'GstPad', '*', 'pad', ',', 'GstObject', '*', 'parent', ',', 'GstQuery', '*', 'query', ')', '{', 'FsRtpBitrateAdapter', '*', 'self', '=', 'FS_RTP_BITRATE_ADAPTER', '(', 'parent', ')', ';', 'gboolean', 'res', ';', 'switch', '(', 'GST_QUERY_TYPE', '(', 'query', ')', ')', '{', 'case', 'GST_QUERY_CAPS', ':', '{', 'GstCaps', '*', 'caps', ',', '*', 'filter', ';', 'gst_query_parse_caps', '(', 'query', ',', '&', 'filter', ')', ';', 'caps', '=', 'fs_rtp_bitrate_adapter_getcaps', '(', 'self', ',', 'pad', ',', 'filter', ')', ';', 'gst_query_set_caps_result', '(', 'query', ',', 'caps', ')', ';', 'gst_caps_unref', '(', 'caps', ')', ';', 'res', '=', 'TRUE', ';', 'break', ';', '}', 'default', ':', 'res', '=', 'gst_pad_query_default', '(', 'pad', ',', 'parent', ',', 'query', ')', ';', 'break', ';', '}', 'return', 'res', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1019,"['Ns_IndexFindMultiple', '(', 'Ns_Index', '*', 'indexPtr', ',', 'void', '*', 'key', ')', '{', 'void', '*', '*', 'firstPtrPtr', ';', 'void', '*', '*', 'retPtrPtr', ';', 'int', 'i', ';', 'int', 'n', ';', '/', '*', '*', 'Find', 'a', 'place', 'in', 'the', 'array', 'that', 'matches', 'the', 'firstPtrPtr', '=', '(', 'void', '*', '*', ')', 'bsearch', '(', 'key', ',', 'indexPtr', '->', 'el', ',', '(', 'size_t', ')', 'indexPtr', '->', 'n', ',', 'sizeof', '(', 'void', '*', ')', ',', 'indexPtr', '->', 'CmpKeyWithEl', ')', ';', 'if', '(', 'firstPtrPtr', '==', 'NULL', ')', '{', 'return', 'NULL', ';', '}', 'else', '{', '/', '*', '*', 'Search', 'linearly', 'back', 'to', 'make', 'sure', ""we've"", 'got', 'the', 'first', 'while', '(', 'firstPtrPtr', '!=', 'indexPtr', '->', '&&', 'indexPtr', '->', 'CmpKeyWithEl', '(', 'key', ',', 'firstPtrPtr', '-', '1', ')', '==', '0', ')', '{', 'firstPtrPtr', '--', ';', '}', '/', '*', '*', 'Search', 'linearly', 'forward', 'to', 'find', 'out', 'how', 'many', 'there', 'n', '=', 'indexPtr', '->', 'n', '-', '(', 'firstPtrPtr', '-', 'indexPtr', '->', 'el', ')', ';', 'for', '(', 'i', '=', '1', ';', 'i', '<', 'n', '&&', 'indexPtr', '->', 'CmpKeyWithEl', '(', 'key', ',', 'firstPtrPtr', '+', 'i', ')', '==', '0', ';', 'i', '++', ')', ';', '/', '*', '*', 'Build', 'array', 'of', 'values', 'to', 'retPtrPtr', '=', 'ns_malloc', '(', '(', 'i', '+', '1', ')', '*', 'sizeof', '(', 'void', '*', ')', ')', ';', 'memcpy', '(', 'retPtrPtr', ',', 'firstPtrPtr', ',', 'i', '*', 'sizeof', '(', 'void', '*', ')', ')', ';', 'retPtrPtr', '[', 'i', ']', '=', 'NULL', ';', 'return', 'retPtrPtr', ';', '}', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1020,"['operator', '(', ')', '(', 'int', 'm', ',', 'int', 'n', ')', '{', 'int', 'w', '=', 'lower_val', '+', '1', ';', 'int', 'i', '=', 'lower_val', '+', 'n', '-', 'm', ';', 'if', '(', 'm', '<=', '0', '||', 'm', '>', 'nrows_val', '||', 'n', '<=', '0', '||', 'n', '>', 'ncols_val', '||', 'i', '<', '0', '||', 'i', '>=', 'w', ')', 'Throw', '(', 'IndexException', '(', 'm', ',', 'n', ',', '*', 'this', ')', ')', ';', 'return', 'store', '[', 'w', '*', '(', 'm', '-', '1', ')', '+', 'i', ']', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1021,"['parse_time', '(', 'const', 'Glib', ':', ':', 'ustring', '&', 'text', ',', 'const', 'std', ':', ':', 'locale', '&', 'locale', ',', 'bool', '&', 'success', ')', '{', '/', '/', 'std', ':', ':', 'cout', '<<', '""""', '<<', 'G_STRFUNC', '<<', '""""', '<<', 'text', '<<', 'std', ':', ':', 'endl', ';', '/', '/', 'The', 'sequence', 'of', 'statements', 'here', 'seems', 'to', 'be', 'very', 'fragile', '.', 'If', 'you', 'move', 'things', 'then', 'it', 'stops', 'working', '.', '/', '/', 'return', 'parse_tm', '(', 'text', ',', 'locale', ',', ""''"", '/', '*', 'time', '*', '/', ')', ';', '/', '/', 'This', 'is', 'based', 'on', 'docs', 'found', 'here', ':', '/', '/', 'http', ':', '/', '/', 'www', '.', 'roguewave', '.', 'com', '/', 'support', '/', 'docs', '/', 'sourcepro', '/', 'stdlibref', '/', 'time', '-', 'get', '.', '/', '/', 'Format', 'it', 'into', 'this', 'stream', ':', 'typedef', 'std', ':', ':', 'stringstream', 'type_stream', ';', '/', '/', 'tm', 'the_c_time', '=', '{', '0', ',', '0', ',', '0', ',', '0', ',', '0', ',', '0', ',', '0', ',', '0', ',', '0', ',', '0', ',', '0', '}', ';', '/', '*', 'This', 'seems', 'to', 'be', 'necessary', '-', 'when', 'I', 'do', 'this', ',', 'as', 'found', 'here', '(', 'http', ':', '/', '/', 'www', '.', 'tacc', '.', 'utexas', '.', 'edu', '/', 'services', '/', 'userguides', '/', 'pgi', '/', 'pgC', '++', '_lib', '/', 'stdlibcr', '/', 'tim_0622', '.', 'htm', ')', 'then', 'the', 'time', 'is', 'correctly', 'parsed', '(', 'it', 'is', 'changed', ')', '.', '*', 'When', 'not', ',', 'I', 'get', 'just', 'zeros', '.', '/', '/', 'tm', 'the_c_time', '=', '{', '0', ',', '0', ',', '0', ',', '0', ',', '0', ',', '0', ',', '0', ',', '0', ',', '0', ',', '0', ',', '0', '}', ';', 'tm', 'the_c_time', ';', 'memset', '(', '&', 'the_c_time', ',', '0', ',', 'sizeof', '(', 'the_c_time', ')', ')', ';', 'std', ':', ':', 'ios_base', ':', ':', 'iostate', 'err', '=', 'std', ':', ':', 'ios_base', ':', ':', 'goodbit', ';', '/', '/', 'The', 'initialization', 'is', 'essential', 'because', 'time_get', 'seems', 'to', 'a', ')', 'not', 'initialize', 'this', 'output', 'argument', 'and', 'b', ')', 'check', 'its', 'value', '.', 'type_stream', 'the_stream', ';', 'the_stream', '.', 'imbue', '(', 'locale', ')', ';', '/', '/', 'Make', 'it', 'format', 'things', 'for', 'this', 'locale', '.', '(', 'Actually', ',', 'I', ""don't"", 'know', 'if', 'this', 'is', 'necessary', ',', 'because', 'we', 'mention', 'the', 'locale', 'in', 'the', 'time_put', '<', '>', 'constructor', '.', 'the_stream', '<<', 'text', ';', '/', '/', 'Get', 'a', 'time_get', 'facet', ':', 'typedef', 'std', ':', ':', 'istreambuf_iterator', '<', 'char', ',', 'std', ':', ':', 'char_traits', '<', 'char', '>', '>', 'type_iterator', ';', 'typedef', 'std', ':', ':', 'time_get', '<', 'char', ',', 'type_iterator', '>', 'type_time_get', ';', 'const', 'type_time_get', '&', 'tg', '=', 'std', ':', ':', 'use_facet', '<', 'type_time_get', '>', '(', 'locale', ')', ';', 'type_iterator', 'the_begin', '(', 'the_stream', ')', ';', 'type_iterator', 'the_end', ';', 'tg', '.', 'get_time', '(', 'the_begin', ',', 'the_end', ',', 'the_stream', ',', 'err', ',', '&', 'the_c_time', ')', ';', 'if', '(', 'err', '!=', 'std', ':', ':', 'ios_base', ':', ':', 'failbit', ')', '{', 'success', '=', 'true', ';', 'return', 'the_c_time', ';', '}', '#ifdef', '/', '/', 'Fall', 'back', 'to', 'strptime', '(', ')', ':', '/', '/', 'This', 'fallback', 'will', 'be', 'used', 'in', 'most', 'cases', '.', 'TODO', ':', 'Remove', 'the', 'useless', '?', 'time_get', '<', '>', 'code', 'then', '?', '/', '/', 'It', 'seems', 'to', 'be', 'well', 'known', 'that', 'time_get', '<', '>', 'can', 'parse', 'much', 'less', 'than', 'what', 'time_put', '<', '>', 'can', 'generate', ':', '/', '/', 'http', ':', '/', '/', 'www', '.', 'open', '-', 'std', '.', 'org', '/', 'jtc1', '/', 'sc22', '/', 'wg21', '/', 'docs', '/', 'papers', '/', '2006', '/', 'n2070', '.', '/', '/', '/', '/', 'Try', 'various', 'formats', ':', 'memset', '(', '&', 'the_c_time', ',', '0', ',', 'sizeof', '(', 'the_c_time', ')', ')', ';', 'char', '*', 'lastchar', '=', 'strptime', '(', 'text', '.', 'c_str', '(', ')', ',', '""""', '/', '*', '12', '-', 'hour', 'clock', 'time', 'using', 'the', 'AM', '/', 'PM', 'notation', '*', '/', ',', '&', 'the_c_time', ')', ';', 'if', '(', 'lastchar', ')', '{', 'success', '=', 'true', ';', 'return', 'the_c_time', ';', '}', 'memset', '(', '&', 'the_c_time', ',', '0', ',', 'sizeof', '(', 'the_c_time', ')', ')', ';', 'lastchar', '=', 'strptime', '(', 'text', '.', 'c_str', '(', ')', ',', '""""', '/', '*', 'The', 'time', ',', 'using', 'the', ""locale's"", 'time', 'format', '.', '*', '/', ',', '&', 'the_c_time', ')', ';', 'if', '(', 'lastchar', ')', '{', '/', '/', 'std', ':', ':', 'cout', '<<', '""""', '<<', 'G_STRFUNC', '<<', '""""', '<<', 'text', '<<', '""""', '<<', 'the_c_time', '.', 'tm_hour', '<<', '""""', '<<', 'the_c_time', '.', 'tm_min', '<<', '""""', '<<', 'the_c_time', '.', 'tm_sec', '<<', 'std', ':', ':', 'endl', ';', 'success', '=', 'true', ';', 'return', 'the_c_time', ';', '}', '/', '/', 'Note', ':', 'strptime', '(', ')', 'with', '""""', 'parses', '""""', 'incorrectly', 'as', '01', ':', '00', ',', 'though', 'it', 'claims', 'to', 'parse', 'successfully', '.', 'memset', '(', '&', 'the_c_time', ',', '0', ',', 'sizeof', '(', 'the_c_time', ')', ')', ';', 'lastchar', '=', 'strptime', '(', 'text', '.', 'c_str', '(', ')', ',', '""""', '/', '*', 'alternative', '12', '-', 'hour', 'clock', '*', '/', ',', '&', 'the_c_time', ')', ';', 'if', '(', 'lastchar', ')', '{', '/', '/', 'std', ':', ':', 'cout', '<<', '""""', '<<', 'G_STRFUNC', '<<', '""""', '<<', 'text', '<<', '""""', '<<', 'the_c_time', '.', 'tm_hour', '<<', '""""', '<<', 'the_c_time', '.', 'tm_min', '<<', '""""', '<<', 'the_c_time', '.', 'tm_sec', '<<', 'std', ':', ':', 'endl', ';', 'success', '=', 'true', ';', 'return', 'the_c_time', ';', '}', '/', '/', 'This', 'seems', 'to', 'be', 'the', 'only', 'one', 'that', 'can', 'parse', '""""', ':', 'memset', '(', '&', 'the_c_time', ',', '0', ',', 'sizeof', '(', 'the_c_time', ')', ')', ';', 'lastchar', '=', 'strptime', '(', 'text', '.', 'c_str', '(', ')', ',', '""""', '/', '*', '12', 'hours', 'clock', 'with', 'AM', '/', 'PM', ',', 'without', 'seconds', '.', '*', '/', ',', '&', 'the_c_time', ')', ';', 'if', '(', 'lastchar', ')', '{', '/', '/', 'std', ':', ':', 'cout', '<<', '""""', '<<', 'G_STRFUNC', '<<', '""""', '<<', 'text', '<<', '""""', '<<', 'the_c_time', '.', 'tm_hour', '<<', '""""', '<<', 'the_c_time', '.', 'tm_min', '<<', '""""', '<<', 'the_c_time', '.', 'tm_sec', '<<', 'std', ':', ':', 'endl', ';', 'success', '=', 'true', ';', 'return', 'the_c_time', ';', '}', '/', '/', 'std', ':', ':', 'cout', '<<', '""""', '<<', 'text', '<<', 'std', ':', ':', 'endl', ';', '#endif', '/', '/', '/', '/', 'Nothing', 'worked', ':', '/', '/', 'tm', 'blank_time', '=', '{', '0', ',', '0', ',', '0', ',', '0', ',', '0', ',', '0', ',', '0', ',', '0', ',', '0', ',', '0', ',', '0', '}', ';', 'tm', 'blank_time', ';', 'memset', '(', '&', 'blank_time', ',', '0', ',', 'sizeof', '(', 'blank_time', ')', ')', ';', 'success', '=', 'false', ';', 'return', 'blank_time', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1022,"['cpr_get_utf8', '(', 'const', 'char', '*', 'keyword', ',', 'const', 'char', '*', 'prompt', ')', '{', 'char', '*', 'p', ';', 'p', '=', 'cpr_get', '(', 'keyword', ',', 'prompt', ')', ';', 'if', '(', 'p', ')', '{', 'char', '*', 'utf8', '=', 'native_to_utf8', '(', 'p', ')', ';', 'xfree', '(', 'p', ')', ';', 'p', '=', 'utf8', ';', '}', 'return', 'p', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1023,"['remove_address_replacements', '(', 'rtx', 'in_rtx', ')', '{', 'int', 'i', ',', 'j', ';', 'char', 'reload_flags', '[', 'MAX_RELOADS', ']', ';', 'int', 'something_changed', '=', '0', ';', 'memset', '(', 'reload_flags', ',', '0', ',', 'sizeof', 'reload_flags', ')', ';', 'for', '(', 'i', '=', '0', ',', 'j', '=', '0', ';', 'i', '<', 'n_replacements', ';', 'i', '++', ')', '{', 'if', '(', 'loc_mentioned_in_p', '(', 'replacements', '[', 'i', ']', '.', 'where', ',', 'in_rtx', ')', ')', 'reload_flags', '[', 'replacements', '[', 'i', ']', '.', 'what', ']', '|=', '1', ';', '{', 'replacements', '[', 'j', '++', ']', '=', 'replacements', '[', 'i', ']', ';', 'reload_flags', '[', 'replacements', '[', 'i', ']', '.', 'what', ']', '|=', '2', ';', '}', '}', 'n_replacements', '=', 'j', ';', 'for', '(', 'i', '=', 'n_reloads', '-', '1', ';', 'i', '>=', '0', ';', 'i', '--', ')', '{', 'if', '(', 'reload_flags', '[', 'i', ']', '==', '1', ')', '{', 'deallocate_reload_reg', '(', 'i', ')', ';', 'remove_address_replacements', '(', 'rld', '[', 'i', ']', '.', 'in', ')', ';', 'rld', '[', 'i', ']', '.', 'in', '=', '0', ';', 'something_changed', '=', '1', ';', '}', '}', 'return', 'something_changed', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1024,"['ad_conn_set_method', '(', 'ad_conn_t', '*', 'conn', ',', 'char', '*', 'method', ')', '{', 'char', '*', 'prev', '=', 'conn', '->', 'method', ';', 'if', '(', 'conn', '->', 'method', ')', '{', 'free', '(', 'conn', '->', 'method', ')', ';', '}', 'conn', '->', 'method', '=', 'strdup', '(', 'method', ')', ';', 'return', 'prev', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1025,"['gst_queue2_chain_buffer_or_buffer_list', '(', 'GstQueue2', '*', 'queue', ',', 'GstMiniObject', '*', 'item', ',', 'GstQueue2ItemType', 'item_type', ')', '{', 'GST_QUEUE2_MUTEX_LOCK_CHECK', '(', 'queue', ',', 'queue', '->', 'sinkresult', ',', 'out_flushing', ')', ';', 'if', '(', 'queue', '->', 'is_eos', ')', 'goto', 'out_eos', ';', 'if', '(', 'queue', '->', 'unexpected', ')', 'goto', 'out_unexpected', ';', 'if', '(', '!gst_queue2_wait_free_space', '(', 'queue', ')', ')', 'goto', 'out_flushing', ';', 'gst_queue2_locked_enqueue', '(', 'queue', ',', 'item', ',', 'item_type', ')', ';', 'GST_QUEUE2_MUTEX_UNLOCK', '(', 'queue', ')', ';', 'return', 'GST_FLOW_OK', ';', 'out_flushing', ':', '{', 'GstFlowReturn', 'ret', '=', 'queue', '->', 'sinkresult', ';', 'GST_CAT_LOG_OBJECT', '(', 'queue_dataflow', ',', 'queue', ',', '""""', ',', 'gst_flow_get_name', '(', 'ret', ')', ')', ';', 'GST_QUEUE2_MUTEX_UNLOCK', '(', 'queue', ')', ';', 'gst_mini_object_unref', '(', 'item', ')', ';', 'return', 'ret', ';', '}', 'out_eos', ':', '{', 'GST_CAT_LOG_OBJECT', '(', 'queue_dataflow', ',', 'queue', ',', '""""', ')', ';', 'GST_QUEUE2_MUTEX_UNLOCK', '(', 'queue', ')', ';', 'gst_mini_object_unref', '(', 'item', ')', ';', 'return', 'GST_FLOW_UNEXPECTED', ';', '}', 'out_unexpected', ':', '{', 'GST_CAT_LOG_OBJECT', '(', 'queue_dataflow', ',', 'queue', ',', '""""', ')', ';', 'GST_QUEUE2_MUTEX_UNLOCK', '(', 'queue', ')', ';', 'gst_mini_object_unref', '(', 'item', ')', ';', 'return', 'GST_FLOW_UNEXPECTED', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1026,"['vlv_power_sequencer_pipe', '(', 'struct', 'intel_dp', '*', 'intel_dp', ')', '{', 'struct', 'intel_digital_port', '*', 'intel_dig_port', '=', 'dp_to_dig_port', '(', 'intel_dp', ')', ';', 'struct', 'drm_device', '*', 'dev', '=', 'intel_dig_port', '->', 'base', '.', 'base', '.', 'dev', ';', 'struct', 'drm_i915_private', '*', 'dev_priv', '=', 'dev', '->', 'dev_private', ';', 'struct', 'intel_encoder', '*', 'encoder', ';', 'unsigned', 'int', 'pipes', '=', '(', '1', '<<', 'PIPE_A', ')', '|', '(', '1', '<<', 'PIPE_B', ')', ';', 'enum', 'pipe', 'pipe', ';', 'lockdep_assert_held', '(', '&', 'dev_priv', '->', 'pps_mutex', ')', ';', 'WARN_ON', '(', '!is_edp', '(', 'intel_dp', ')', ')', ';', 'if', '(', 'intel_dp', '->', 'pps_pipe', '!=', 'INVALID_PIPE', ')', 'return', 'intel_dp', '->', 'pps_pipe', ';', '/', '*', '*', 'We', ""don't"", 'have', 'power', 'sequencer', 'currently', '.', '*', 'Pick', 'one', ""that's"", 'not', 'used', 'by', 'other', 'ports', '.', 'list_for_each_entry', '(', 'encoder', ',', '&', 'dev', '->', 'mode_config', '.', 'encoder_list', ',', 'base', '.', 'head', ')', '{', 'struct', 'intel_dp', '*', 'tmp', ';', 'if', '(', 'encoder', '->', 'type', '!=', 'INTEL_OUTPUT_EDP', ')', 'continue', ';', 'tmp', '=', 'enc_to_intel_dp', '(', '&', 'encoder', '->', 'base', ')', ';', 'if', '(', 'tmp', '->', 'pps_pipe', '!=', 'INVALID_PIPE', ')', 'pipes', '&=', '~', '(', '1', '<<', 'tmp', '->', 'pps_pipe', ')', ';', '}', '/', '*', '*', ""Didn't"", 'find', 'one', '.', 'This', 'should', 'not', 'happen', 'since', '*', 'are', 'two', 'power', 'sequencers', 'and', 'up', 'to', 'two', 'eDP', 'ports', '.', 'if', '(', 'WARN_ON', '(', 'pipes', '==', '0', ')', ')', 'pipe', '=', 'PIPE_A', ';', 'pipe', '=', 'ffs', '(', 'pipes', ')', '-', '1', ';', 'vlv_steal_power_sequencer', '(', 'dev', ',', 'pipe', ')', ';', 'intel_dp', '->', 'pps_pipe', '=', 'pipe', ';', 'DRM_DEBUG_KMS', '(', '""""', ',', 'pipe_name', '(', 'intel_dp', '->', 'pps_pipe', ')', ',', 'port_name', '(', 'intel_dig_port', '->', 'port', ')', ')', ';', 'intel_dp_init_panel_power_sequencer', '(', 'dev', ',', 'intel_dp', ')', ';', 'intel_dp_init_panel_power_sequencer_registers', '(', 'dev', ',', 'intel_dp', ')', ';', '/', '*', '*', 'Even', 'vdd', 'force', ""doesn''ve"", '*', 'the', 'power', 'sequencer', 'lock', 'in', 'on', 'the', 'port', '.', 'vlv_power_sequencer_kick', '(', 'intel_dp', ')', ';', 'return', 'intel_dp', '->', 'pps_pipe', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1027,"['findMeter', '(', 'char', '*', 's', ')', '{', 'int', 'i', '=', '1', ';', 'while', '(', 'strcmp', '(', 'meters', '[', 'i', ']', ',', '""""', ')', ')', 'if', '(', '!strcasecmp', '(', 's', ',', '(', 'char', '*', ')', 'meters', '[', 'i', ']', ')', ')', 'return', '(', 'i', ')', ';', 'i', '++', ';', 'return', 'LX_ERROR_BYTE', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1028,"['copy_file', '(', 'char', '*', 'src', ',', 'char', '*', 'dst', ')', '{', 'FILE', '*', 'fpin', ',', '*', 'fpout', ';', 'char', 'buf', '[', '512', ']', ';', 'int', 'n', ';', 'fpin', '=', 'fopen', '(', 'src', ',', '""""', ')', ';', 'fpout', '=', 'fopen', '(', 'dst', ',', '""""', ')', ';', 'if', '(', 'fpin', '==', 'NULL', '||', 'fpout', '==', 'NULL', ')', '{', 'fprintf', '(', 'stderr', ',', '""""', ',', 'src', ',', 'dst', ')', ';', 'return', ';', '}', 'for', '(', ';', ';', ')', '{', 'n', '=', 'fread', '(', 'buf', ',', '1', ',', '512', ',', 'fpin', ')', ';', 'if', '(', 'n', '==', '0', ')', 'break', ';', 'fwrite', '(', 'buf', ',', '1', ',', 'n', ',', 'fpout', ')', ';', '}', 'fclose', '(', 'fpin', ')', ';', 'fclose', '(', 'fpout', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  True,CWE-476  False,CWE-other  False
1029,"['wi_thread_block_signals', '(', 'int', 'signal', ',', '.', '.', '.', ')', '{', 'sigset_t\tsignals', ';', 'va_list\t\tap', ';', 'va_start', '(', 'ap', ',', 'signal', ')', ';', 'sigemptyset', '(', '&', 'signals', ')', ';', 'sigaddset', '(', '&', 'signals', ',', 'signal', ')', ';', 'while', '(', '(', 'signal', '=', 'va_arg', '(', 'ap', ',', 'int', ')', ')', ')', 'sigaddset', '(', '&', 'signals', ',', 'signal', ')', ';', 'va_end', '(', 'ap', ')', ';', '#ifdef', 'pthread_sigmask', '(', 'SIG_SETMASK', ',', '&', 'signals', ',', 'NULL', ')', ';', 'sigprocmask', '(', 'SIG_SETMASK', ',', '&', 'signals', ',', 'NULL', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1030,"['Cbuf_Execute', '(', 'void', ')', '{', 'int\t\ti', ';', 'char\t', '*', 'text', ';', 'char\tline', '[', '1024', ']', ';', 'int\t\tquotes', ';', 'alias_count', '=', '0', ';', '\t\t', '/', '/', ""don't"", 'allow', 'infinite', 'alias', 'while', '(', 'cmd_text', '.', 'cursize', ')', '{', '/', '/', 'find', 'a', '\\n', 'or', ';', 'line', 'text', '=', '(', 'char', '*', ')', 'cmd_text', '.', 'data', ';', 'quotes', '=', '0', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'cmd_text', '.', 'cursize', ';', 'i', '++', ')', '{', 'if', '(', 'text', '[', 'i', ']', '==', ""''"", ')', 'quotes', '++', ';', 'if', '(', '!', '(', 'quotes', '&', '1', ')', '&&', 'text', '[', 'i', ']', '==', ""''"", ')', 'break', ';', '\t', '/', '/', ""don't"", 'break', 'if', 'inside', 'a', 'quoted', 'if', '(', 'text', '[', 'i', ']', '==', ""''"", ')', 'break', ';', '}', '/', '/', 'sku', '-', 'removed', 'potentional', 'buffer', 'overflow', 'if', '(', 'i', '>', 'sizeof', '(', 'line', ')', '-', '1', ')', '{', 'i', '=', 'sizeof', '(', 'line', ')', '-', '1', ';', '}', 'memcpy', '(', 'line', ',', 'text', ',', 'i', ')', ';', 'line', '[', 'i', ']', '=', '0', ';', '/', '/', 'delete', 'the', 'text', 'from', 'the', 'command', 'buffer', 'and', 'move', 'remaining', 'commands', '/', '/', 'this', 'is', 'necessary', 'because', 'commands', '(', 'exec', ',', 'alias', ')', 'can', 'insert', 'data', 'at', '/', '/', 'beginning', 'of', 'the', 'text', 'if', '(', 'i', '==', 'cmd_text', '.', 'cursize', ')', 'cmd_text', '.', 'cursize', '=', '0', ';', '{', 'i', '++', ';', 'cmd_text', '.', 'cursize', '-=', 'i', ';', 'memmove', '(', 'text', ',', 'text', '+', 'i', ',', 'cmd_text', '.', 'cursize', ')', ';', '}', '/', '/', 'execute', 'the', 'command', 'Cmd_ExecuteString', '(', 'line', ')', ';', 'if', '(', 'cmd_wait', ')', '{', '/', '/', 'skip', 'out', 'while', 'text', 'still', 'remains', 'in', 'buffer', ',', 'leaving', '/', '/', 'for', 'next', 'cmd_wait', '=', 'false', ';', 'break', ';', '}', '}', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1031,"['READUINTPAIR', '(', 'BIO', '*', 'fd', ',', 'unsigned', 'int', '*', 'val1', ',', 'unsigned', 'int', '*', 'val2', ')', '{', 'unsigned', 'char', 'c', ';', 'signed', 'char', 'd', ';', 'unsigned', 'char', 'v', '[', '4', ']', ';', 'if', '(', '-', '1', '==', 'READALL', '(', 'fd', ',', '&', 'c', ',', 'sizeof', '(', 'unsigned', 'char', ')', ')', ')', 'return', '-', '1', ';', 'if', '(', '(', '(', 'c', '&', '15', ')', '>', '4', ')', '||', '(', '(', 'c', '>>', '4', ')', '>', '4', ')', ')', '{', 'fd', '->', 'log', '(', 'fd', '->', 'context', ',', 'DOODLE_LOG_CRITICAL', ',', '_', '(', '""""', ')', ',', '__FILE__', ',', '__LINE__', ')', ';', 'return', '-', '1', ';', '}', '*', 'val1', '=', '0', ';', '*', 'val2', '=', '0', ';', 'if', '(', '-', '1', '==', 'READALL', '(', 'fd', ',', '&', 'v', '[', '0', ']', ',', '(', 'unsigned', 'char', ')', 'c', '&', '15', ')', ')', 'return', '-', '1', ';', 'for', '(', 'd', '=', '(', 'c', '&', '15', ')', '-', '1', ';', 'd', '>=', '0', ';', 'd', '--', ')', '(', '*', 'val2', ')', '+=', '(', 'v', '[', '(', 'unsigned', 'char', ')', 'd', ']', '<<', '(', '8', '*', 'd', ')', ')', ';', 'if', '(', '-', '1', '==', 'READALL', '(', 'fd', ',', '&', 'v', '[', '0', ']', ',', '(', 'unsigned', 'char', ')', 'c', '>>', '4', ')', ')', 'return', '-', '1', ';', 'for', '(', 'd', '=', '(', 'c', '>>', '4', ')', '-', '1', ';', 'd', '>=', '0', ';', 'd', '--', ')', '(', '*', 'val1', ')', '+=', '(', 'v', '[', '(', 'unsigned', 'char', ')', 'd', ']', '<<', '(', '8', '*', 'd', ')', ')', ';', 'return', '0', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1032,"['option_set_toggle_button', '(', 'GtkBuilder', '*', 'builder', ',', 'const', 'gchar', '*', 'name', ',', 'gboolean', 'dflt', ')', '{', 'gboolean', 'active', ';', 'GtkWidget', '*', 'button', ';', 'g_return_if_fail', '(', 'builder', '&&', 'name', ')', ';', 'if', '(', '!prefs_get_int_value', '(', 'name', ',', '&', 'active', ')', ')', 'active', '=', 'dflt', ';', 'button', '=', 'GTK_WIDGET', '(', 'gtk_builder_get_object', '(', 'builder', ',', 'name', ')', ')', ';', 'if', '(', 'button', ')', 'gtk_toggle_button_set_active', '(', 'GTK_TOGGLE_BUTTON', '(', 'button', ')', ',', 'active', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1033,"['dsc_add_page', '(', 'CDSC', '*', 'dsc', ',', 'int', 'ordinal', ',', 'char', '*', 'label', ')', '{', 'dsc', '->', 'page', '[', 'dsc', '->', 'page_count', ']', '.', 'ordinal', '=', 'ordinal', ';', 'dsc', '->', 'page', '[', 'dsc', '->', 'page_count', ']', '.', 'label', '=', 'dsc_alloc_string', '(', 'dsc', ',', 'label', ',', '(', 'int', ')', 'strlen', '(', 'label', ')', '+', '1', ')', ';', 'dsc', '->', 'page', '[', 'dsc', '->', 'page_count', ']', '.', 'begin', '=', '0', ';', 'dsc', '->', 'page', '[', 'dsc', '->', 'page_count', ']', '.', 'end', '=', '0', ';', 'dsc', '->', 'page', '[', 'dsc', '->', 'page_count', ']', '.', 'orientation', '=', 'CDSC_ORIENT_UNKNOWN', ';', 'dsc', '->', 'page', '[', 'dsc', '->', 'page_count', ']', '.', 'media', '=', 'NULL', ';', 'dsc', '->', 'page', '[', 'dsc', '->', 'page_count', ']', '.', 'bbox', '=', 'NULL', ';', 'dsc', '->', 'page', '[', 'dsc', '->', 'page_count', ']', '.', 'viewing_orientation', '=', 'NULL', ';', 'dsc', '->', 'page', '[', 'dsc', '->', 'page_count', ']', '.', 'crop_box', '=', 'NULL', ';', 'dsc', '->', 'page_count', '++', ';', 'if', '(', 'dsc', '->', 'page_count', '>=', 'dsc', '->', 'page_chunk_length', ')', '{', 'CDSCPAGE', '*', 'new_page', '=', '(', 'CDSCPAGE', '*', ')', 'dsc_memalloc', '(', 'dsc', ',', '(', 'CDSC_PAGE_CHUNK', '+', 'dsc', '->', 'page_count', ')', '*', 'sizeof', '(', 'CDSCPAGE', ')', ')', ';', 'if', '(', 'new_page', '==', 'NULL', ')', 'memcpy', '(', 'new_page', ',', 'dsc', '->', 'page', ',', 'dsc', '->', 'page_count', '*', 'sizeof', '(', 'CDSCPAGE', ')', ')', ';', 'dsc_memfree', '(', 'dsc', ',', 'dsc', '->', 'page', ')', ';', 'dsc', '->', 'page', '=', 'new_page', ';', 'dsc', '->', 'page_chunk_length', '=', 'CDSC_PAGE_CHUNK', '+', 'dsc', '->', 'page_count', ';', '}', 'return', 'CDSC_OK', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1034,"['printableHtml', '(', 'bool', 'withValues', ')', '{', 'Q_UNUSED', '(', 'withValues', ')', ';', 'if', '(', 'm_FormItem', '->', 'getOptions', '(', ')', '.', 'contains', '(', 'Constants', ':', ':', 'NOT_PRINTABLE', ')', ')', 'return', 'QString', '(', ')', ';', 'return', 'QString', '(', '""""margin', ':', '""""vertical', '-', 'align', ':', 'top', ';', 'padding', '-', 'left', ':', '2em', ';', 'padding', '-', 'top', ':', '5px', ';', 'padding', '-', 'bottom', ':', '5px', ';', 'padding', '-', 'right', ':', '""""', ')', '.', 'arg', '(', 'm_FormItem', '->', 'spec', '(', ')', '->', 'label', '(', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1035,"['playlist', '(', ')', '{', 'return', 'Playlist', ':', ':', 'ModelStack', ':', ':', 'instance', '(', ')', '->', 'groupingProxy', '(', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1036,"['__mcam_cam_reset', '(', 'struct', 'mcam_camera', '*', 'cam', ')', '{', 'return', 'sensor_call', '(', 'cam', ',', 'core', ',', 'reset', ',', '0', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1037,"['INFTL_trydeletechain', '(', 'struct', 'INFTLrecord', '*', 'inftl', ',', 'unsigned', 'thisVUC', ')', '{', 'struct', 'mtd_info', '*', 'mtd', '=', 'inftl', '->', 'mbd', '.', 'mtd', ';', 'unsigned', 'char', 'BlockUsed', '[', 'MAX_SECTORS_PER_UNIT', ']', ';', 'unsigned', 'char', 'BlockDeleted', '[', 'MAX_SECTORS_PER_UNIT', ']', ';', 'unsigned', 'int', 'thisEUN', ',', 'status', ';', 'int', 'block', ',', 'silly', ';', 'struct', 'inftl_bci', 'bci', ';', 'size_t', 'retlen', ';', 'pr_debug', '(', '""""', ',', 'inftl', ',', 'thisVUC', ')', ';', 'memset', '(', 'BlockUsed', ',', '0', ',', 'sizeof', '(', 'BlockUsed', ')', ')', ';', 'memset', '(', 'BlockDeleted', ',', '0', ',', 'sizeof', '(', 'BlockDeleted', ')', ')', ';', 'thisEUN', '=', 'inftl', '->', 'VUtable', '[', 'thisVUC', ']', ';', 'if', '(', 'thisEUN', '==', 'BLOCK_NIL', ')', '{', 'printk', '(', 'KERN_WARNING', '""""', ',', 'thisVUC', ')', ';', 'return', ';', '}', '/', '*', '*', 'Scan', 'through', 'the', 'Erase', 'Units', 'to', 'determine', 'whether', 'any', 'data', 'is', '*', 'each', 'of', 'the', '512', '-', 'byte', 'blocks', 'within', 'the', 'Chain', '.', 'silly', '=', 'MAX_LOOPS', ';', 'while', '(', 'thisEUN', '<', 'inftl', '->', 'nb_blocks', ')', '{', 'for', '(', 'block', '=', '0', ';', 'block', '<', 'inftl', '->', 'EraseSize', '/', 'SECTORSIZE', ';', 'block', '++', ')', '{', 'if', '(', 'BlockUsed', '[', 'block', ']', '||', 'BlockDeleted', '[', 'block', ']', ')', 'continue', ';', 'if', '(', 'inftl_read_oob', '(', 'mtd', ',', '(', 'thisEUN', '*', 'inftl', '->', 'EraseSize', ')', '+', '(', 'block', '*', 'SECTORSIZE', ')', ',', '8', ',', '&', 'retlen', ',', '(', 'char', '*', ')', '&', 'bci', ')', '<', '0', ')', 'status', '=', 'SECTOR_IGNORE', ';', 'status', '=', 'bci', '.', 'Status', '|', 'bci', '.', 'Status1', ';', 'switch', '(', 'status', ')', '{', 'case', 'SECTOR_FREE', ':', 'case', 'SECTOR_IGNORE', ':', 'break', ';', 'case', 'SECTOR_USED', ':', 'BlockUsed', '[', 'block', ']', '=', '1', ';', 'continue', ';', 'case', 'SECTOR_DELETED', ':', 'BlockDeleted', '[', 'block', ']', '=', '1', ';', 'continue', ';', 'default', ':', 'printk', '(', 'KERN_WARNING', '""""', ',', 'block', ',', 'thisEUN', ',', 'status', ')', ';', '}', '}', 'if', '(', '!silly', '--', ')', '{', 'printk', '(', 'KERN_WARNING', '""""', ',', 'thisVUC', ')', ';', 'return', ';', '}', 'thisEUN', '=', 'inftl', '->', 'PUtable', '[', 'thisEUN', ']', ';', '}', 'for', '(', 'block', '=', '0', ';', 'block', '<', 'inftl', '->', 'EraseSize', '/', 'SECTORSIZE', ';', 'block', '++', ')', 'if', '(', 'BlockUsed', '[', 'block', ']', ')', 'return', ';', '/', '*', '*', 'For', 'each', 'block', 'in', 'the', 'chain', 'free', 'it', 'and', 'make', 'it', '*', 'for', 'future', 'use', '.', 'Erase', 'from', 'the', 'oldest', 'unit', 'first', '.', 'pr_debug', '(', '""""', ',', 'thisVUC', ')', ';', 'for', '(', ';', ';', ')', '{', 'u16', '*', 'prevEUN', '=', '&', 'inftl', '->', 'VUtable', '[', 'thisVUC', ']', ';', 'thisEUN', '=', '*', 'prevEUN', ';', 'if', '(', 'thisEUN', '==', 'BLOCK_NIL', ')', '{', 'pr_debug', '(', '""""', ',', 'thisEUN', ')', ';', 'return', ';', '}', 'while', '(', 'inftl', '->', 'PUtable', '[', 'thisEUN', ']', '!=', 'BLOCK_NIL', ')', '{', 'BUG_ON', '(', 'thisEUN', '>=', 'inftl', '->', 'nb_blocks', ')', ';', 'prevEUN', '=', '&', 'inftl', '->', 'PUtable', '[', 'thisEUN', ']', ';', 'thisEUN', '=', '*', 'prevEUN', ';', '}', 'pr_debug', '(', '""""', ',', 'thisEUN', ',', 'thisVUC', ')', ';', 'if', '(', 'INFTL_formatblock', '(', 'inftl', ',', 'thisEUN', ')', '<', '0', ')', '{', '/', '*', '*', 'Could', 'not', 'erase', ':', 'mark', 'block', 'as', 'reserved', '.', 'inftl', '->', 'PUtable', '[', 'thisEUN', ']', '=', 'BLOCK_RESERVED', ';', '}', 'else', '{', 'inftl', '->', 'PUtable', '[', 'thisEUN', ']', '=', 'BLOCK_FREE', ';', 'inftl', '->', 'numfreeEUNs', '++', ';', '}', '*', 'prevEUN', '=', 'BLOCK_NIL', ';', '/', '*', 'Ideally', ""we'd"", 'actually', 'be', 'responsive', 'to', 'requests', 'while', 'cond_resched', '(', ')', ';', '}', 'inftl', '->', 'VUtable', '[', 'thisVUC', ']', '=', 'BLOCK_NIL', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1038,"['command_from', '(', 'const', 'char', '*', 'cmd', ')', '{', 'STACK_CONTEXT', '*', 'sc', '=', 'GB_DEBUG', '.', 'GetStack', '(', '0', ')', ';', '/', '/', 'STACK_get_current', '(', ')', ';', 'if', '(', 'sc', '&&', 'sc', '->', 'pc', ')', '{', 'GB', '.', 'Signal', '(', 'GB_SIGNAL_DEBUG_FORWARD', ',', '0', ')', ';', 'DEBUG_info', '.', 'stop', '=', 'TRUE', ';', 'DEBUG_info', '.', 'leave', '=', 'FALSE', ';', 'DEBUG_info', '.', 'fp', '=', 'sc', '->', 'fp', ';', 'DEBUG_info', '.', 'bp', '=', 'sc', '->', 'bp', ';', '}', '{', 'GB', '.', 'Signal', '(', 'GB_SIGNAL_DEBUG_FORWARD', ',', '0', ')', ';', 'DEBUG_info', '.', 'stop', '=', 'TRUE', ';', 'DEBUG_info', '.', 'leave', '=', 'TRUE', ';', 'DEBUG_info', '.', 'fp', '=', 'FP', ';', 'DEBUG_info', '.', 'bp', '=', 'BP', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1039,"['Download', '(', 'const', 'std', ':', ':', 'string', '&', 'filename', ',', 'std', ':', ':', 'string', 'url', ',', 'IO_MODE', 'outputMode', ',', 'curl_progress_callback', 'fprogress', ',', 'void', '*', 'fprogress_data', ',', 'const', 'char', '*', 'authentication', ')', '{', 'std', ':', ':', 'string', 'URL', '=', 'url', ';', 'if', '(', '!m_ServerUrl', '.', 'empty', '(', ')', ')', '{', 'URL', '=', 'm_ServerUrl', '+', 'URL', ';', '}', 'm_OutputMode', '=', 'outputMode', ';', '/', '/', 'prepare', 'switch', '(', 'm_OutputMode', ')', '{', 'case', 'BUFFER', ':', 'ResetOutputBuffer', '(', ')', ';', 'break', ';', 'case', 'FILE', ':', 'this', '->', 'output_filestream', '=', 'new', 'std', ':', ':', 'ofstream', ';', 'this', '->', 'output_filestream', '->', 'open', '(', 'filename', '.', 'c_str', '(', ')', ',', 'std', ':', ':', 'ios', ':', ':', 'binary', ')', ';', 'if', '(', '!this', '->', 'output_filestream', '->', 'is_open', '(', ')', ')', '{', 'std', ':', ':', 'cerr', '<<', '""""', '<<', 'filename', '.', 'c_str', '(', ')', '<<', 'std', ':', ':', 'endl', ';', 'return', 'false', ';', '}', 'break', ';', '}', 'curl_easy_reset', '(', 'm_cURL', ')', ';', 'this', '->', 'SetCurlOptions', '(', 'URL', '.', 'c_str', '(', ')', ',', 'authentication', ')', ';', 'curl_easy_setopt', '(', 'm_cURL', ',', 'CURLOPT_HTTPGET', ',', '1', ')', ';', 'curl_easy_setopt', '(', 'm_cURL', ',', 'CURLOPT_PROGRESSDATA', ',', 'fprogress_data', '==', 'NULL', '?', 'this', '->', 'fprogress_data', ':', 'fprogress_data', ')', ';', 'curl_easy_setopt', '(', 'm_cURL', ',', 'CURLOPT_PROGRESSFUNCTION', ',', 'fprogress', '==', 'NULL', '?', 'this', '->', 'fprogress', ':', 'fprogress', ')', ';', 'bool', 'success', '=', 'this', '->', 'PerformCurl', '(', ')', ';', 'switch', '(', 'm_OutputMode', ')', '{', 'case', 'BUFFER', ':', 'break', ';', 'case', 'FILE', ':', 'this', '->', 'output_filestream', '->', 'close', '(', ')', ';', 'this', '->', 'output_filestream', '=', 'NULL', ';', 'break', ';', '}', 'return', 'success', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1040,"['camlidl_environment_ap_environment_var_of_dim', '(', 'value', '_v_e', ',', 'value', '_v_dim', ')', '{', 'ap_var_t', '_res', ';', 'value', '_vres', ';', 'struct', 'camlidl_ctx_struct', '_ctxs', '=', '{', 'CAMLIDL_TRANSIENT', ',', 'NULL', '}', ';', 'camlidl_ctx', '_ctx', '=', '&', '_ctxs', ';', 'camlidl_ml2c_environment_ap_environment_ptr', '(', '_v_e', ',', '&', 'e', ',', '_ctx', ')', ';', 'camlidl_ml2c_dim_ap_dim_t', '(', '_v_dim', ',', '&', 'dim', ',', '_ctx', ')', ';', 'if', '(', 'dim', '>=', 'e', '->', 'intdim', '+', 'e', '->', 'realdim', ')', '{', 'caml_failwith', '(', '""""', ')', ';', '}', '_res', '=', 'ap_var_operations', '->', 'copy', '(', 'e', '->', 'var_of_dim', '[', 'dim', ']', ')', ';', '_vres', '=', 'camlidl_c2ml_var_ap_var_t', '(', '&', '_res', ',', '_ctx', ')', ';', 'camlidl_free', '(', '_ctx', ')', ';', 'return', '_vres', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1041,"['m2bus_serial_open', '(', 'struct', 'gn_statemachine', '*', 'state', ')', '{', 'int', 'type', ';', 'if', '(', '!state', ')', 'return', 'false', ';', 'if', '(', 'state', '->', 'config', '.', 'connection_type', '==', 'GN_CT_TCP', ')', 'type', '=', 'GN_CT_TCP', ';', 'type', '=', 'GN_CT_Serial', ';', 'if', '(', '!device_open', '(', 'state', '->', 'config', '.', 'port_device', ',', 'true', ',', 'false', ',', 'false', ',', 'type', ',', 'state', ')', ')', '{', 'perror', '(', '_', '(', '""""', ')', ')', ';', 'return', 'false', ';', '}', 'device_changespeed', '(', '9600', ',', 'state', ')', ';', 'device_setdtrrts', '(', '0', ',', '1', ',', 'state', ')', ';', 'return', 'true', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1042,"['sigbuffer_make_room', '(', 'SigBuffer', '*', 'buf', ',', 'int', 'size', ')', '{', 'if', '(', 'buf', '->', 'end', '-', 'buf', '->', 'p', '<', 'size', ')', '{', 'int', 'new_size', '=', 'buf', '->', 'end', '-', 'buf', '->', 'buf', '+', 'size', '+', '32', ';', 'char', '*', 'p', '=', 'g_realloc', '(', 'buf', '->', 'buf', ',', 'new_size', ')', ';', 'size', '=', 'buf', '->', 'p', '-', 'buf', '->', 'buf', ';', 'buf', '->', 'buf', '=', 'p', ';', 'buf', '->', 'p', '=', 'p', '+', 'size', ';', 'buf', '->', 'end', '=', 'buf', '->', 'buf', '+', 'new_size', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1043,"['computeCubicForces', '(', 'VibCorrections', '*', 'vibCorrections', ')', '{', 'gdouble', 'derivP', ';', 'gdouble', 'derivM', ';', 'gint', 'nf', '=', 'vibCorrections', '->', 'numberOfFrequences', ';', 'gdouble', 'f', '=', '2', '*', 'vibCorrections', '->', 'delta', '*', 'sqrt', '(', 'AMU_TO_AU', ')', ';', 'gdouble', 'f2', '=', 'vibCorrections', '->', 'delta', '*', 'vibCorrections', '->', 'delta', '*', 'AMU_TO_AU', ';', 'gint', 'i', ',', 'j', ';', 'if', '(', 'nf', '<', '1', ')', 'return', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'nf', ';', 'i', '++', ')', '{', 'gdouble', 'f2m', '=', '1', '/', '(', 'f2', '*', 'vibCorrections', '->', 'mass', '[', 'i', ']', ')', ';', 'for', '(', 'j', '=', '0', ';', 'j', '<', 'nf', ';', 'j', '++', ')', '{', 'gdouble', 'fm', '=', '1', '/', '(', 'f', '*', 'sqrt', '(', 'vibCorrections', '->', 'mass', '[', 'j', ']', ')', ')', ';', 'deriv0', '=', '(', 'vibCorrections', '->', 'energies', '[', '0', ']', '[', '2', '*', 'j', '+', '1', ']', '-', 'vibCorrections', '->', 'energies', '[', '0', ']', '[', '2', '*', 'j', '+', '2', ']', ')', '*', 'fm', ';', 'derivP', '=', '(', 'vibCorrections', '->', 'energies', '[', '2', '*', 'i', '+', '1', ']', '[', '2', '*', 'j', '+', '1', ']', '-', 'vibCorrections', '->', 'energies', '[', '2', '*', 'i', '+', '1', ']', '[', '2', '*', 'j', '+', '2', ']', ')', '*', 'fm', ';', 'derivM', '=', '(', 'vibCorrections', '->', 'energies', '[', '2', '*', 'i', '+', '2', ']', '[', '2', '*', 'j', '+', '1', ']', '-', 'vibCorrections', '->', 'energies', '[', '2', '*', 'i', '+', '2', ']', '[', '2', '*', 'j', '+', '2', ']', ')', '*', 'fm', ';', 'vibCorrections', '->', 'F', '[', 'i', ']', '[', 'j', ']', '=', '(', 'derivP', '+', 'derivM', '-', '2', '*', 'deriv0', ')', '*', 'f2m', ';', '}', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1044,"['xmlrpc_server_info_copy', '(', 'xmlrpc_env', '*', 'env', ',', 'xmlrpc_server_info', '*', 'aserver', ')', '{', 'xmlrpc_server_info', '*', 'server', ';', 'char', '*', 'url_copy', ',', '*', 'auth_copy', ';', 'XMLRPC_ASSERT_ENV_OK', '(', 'env', ')', ';', 'XMLRPC_ASSERT_PTR_OK', '(', 'aserver', ')', ';', 'url_copy', '=', 'NULL', ';', 'auth_copy', '=', 'NULL', ';', 'server', '=', '(', 'xmlrpc_server_info', '*', ')', 'malloc', '(', 'sizeof', '(', 'xmlrpc_server_info', ')', ')', ';', 'XMLRPC_FAIL_IF_NULL', '(', 'server', ',', 'env', ',', 'XMLRPC_INTERNAL_ERROR', ',', '""""', ')', ';', 'url_copy', '=', '(', 'char', '*', ')', 'malloc', '(', 'strlen', '(', 'aserver', '->', '_server_url', ')', '+', '1', ')', ';', 'XMLRPC_FAIL_IF_NULL', '(', 'url_copy', ',', 'env', ',', 'XMLRPC_INTERNAL_ERROR', ',', '""""', ')', ';', 'auth_copy', '=', '(', 'char', '*', ')', 'malloc', '(', 'strlen', '(', 'aserver', '->', '_http_basic_auth', ')', '+', '1', ')', ';', 'XMLRPC_FAIL_IF_NULL', '(', 'auth_copy', ',', 'env', ',', 'XMLRPC_INTERNAL_ERROR', ',', '""""', ')', ';', 'strcpy', '(', 'url_copy', ',', 'aserver', '->', '_server_url', ')', ';', 'server', '->', '_server_url', '=', 'url_copy', ';', 'strcpy', '(', 'auth_copy', ',', 'aserver', '->', '_http_basic_auth', ')', ';', 'server', '->', '_http_basic_auth', '=', 'auth_copy', ';', 'cleanup', ':', 'if', '(', 'env', '->', 'fault_occurred', ')', '{', 'if', '(', 'url_copy', ')', 'free', '(', 'url_copy', ')', ';', 'if', '(', 'auth_copy', ')', 'free', '(', 'auth_copy', ')', ';', 'if', '(', 'server', ')', 'free', '(', 'server', ')', ';', 'return', 'NULL', ';', '}', 'return', 'server', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
1045,"['__pyx_pf_6Cython_8Compiler_7Visitor_15CythonTransform_4visit_CompilerDirectivesNode', '(', 'struct', '__pyx_obj_6Cython_8Compiler_7Visitor_CythonTransform', '*', '__pyx_v_self', ',', 'PyObject', '*', '__pyx_v_node', ')', '{', 'PyObject', '*', '__pyx_v_old', '=', 'NULL', ';', 'PyObject', '*', '__pyx_r', '=', 'NULL', ';', 'PyObject', '*', '__pyx_t_1', '=', 'NULL', ';', 'int', '__pyx_lineno', '=', '0', ';', 'const', 'char', '*', '__pyx_filename', '=', 'NULL', ';', 'int', '__pyx_clineno', '=', '0', ';', '__Pyx_RefNannySetupContext', '(', '""""', ',', '0', ')', ';', '/', '*', '""""', ':', '*', '*', 'def', 'visit_CompilerDirectivesNode', '(', 'self', ',', 'node', ')', ':', '*', 'old', '=', 'self', '.', 'current_directives', '#', '<<', '<<', '<<', '<<', '<<', '<<', '<<', '*', 'self', '.', 'current_directives', '=', 'node', '.', '*', 'self', '.', 'visitchildren', '(', 'node', ')', '__pyx_t_1', '=', '__pyx_v_self', '->', 'current_directives', ';', '__Pyx_INCREF', '(', '__pyx_t_1', ')', ';', '__pyx_v_old', '=', '__pyx_t_1', ';', '__pyx_t_1', '=', '0', ';', '/', '*', '""""', ':', '*', 'def', 'visit_CompilerDirectivesNode', '(', 'self', ',', 'node', ')', ':', '*', 'old', '=', 'self', '.', '*', 'self', '.', 'current_directives', '=', 'node', '.', 'directives', '#', '<<', '<<', '<<', '<<', '<<', '<<', '<<', '*', 'self', '.', 'visitchildren', '(', 'node', ')', '*', 'self', '.', 'current_directives', '=', '__pyx_t_1', '=', '__Pyx_PyObject_GetAttrStr', '(', '__pyx_v_node', ',', '__pyx_n_s_directives', ')', ';', 'if', '(', 'unlikely', '(', '!__pyx_t_1', ')', ')', '{', '__pyx_filename', '=', '__pyx_f', '[', '0', ']', ';', '__pyx_lineno', '=', '283', ';', '__pyx_clineno', '=', '__LINE__', ';', 'goto', '__pyx_L1_error', ';', '}', '__Pyx_GOTREF', '(', '__pyx_t_1', ')', ';', '__Pyx_GIVEREF', '(', '__pyx_t_1', ')', ';', '__Pyx_GOTREF', '(', '__pyx_v_self', '->', 'current_directives', ')', ';', '__Pyx_DECREF', '(', '__pyx_v_self', '->', 'current_directives', ')', ';', '__pyx_v_self', '->', 'current_directives', '=', '__pyx_t_1', ';', '__pyx_t_1', '=', '0', ';', '/', '*', '""""', ':', '*', 'old', '=', 'self', '.', '*', 'self', '.', 'current_directives', '=', 'node', '.', '*', 'self', '.', 'visitchildren', '(', 'node', ')', '#', '<<', '<<', '<<', '<<', '<<', '<<', '<<', '*', 'self', '.', 'current_directives', '=', '*', 'return', '__pyx_t_1', '=', '(', '(', 'struct', '__pyx_vtabstruct_6Cython_8Compiler_7Visitor_CythonTransform', '*', ')', '__pyx_v_self', '->', '__pyx_base', '.', '__pyx_base', '.', '__pyx_vtab', ')', '->', '__pyx_base', '.', '__pyx_base', '.', 'visitchildren', '(', '(', '(', 'struct', '__pyx_obj_6Cython_8Compiler_7Visitor_TreeVisitor', '*', ')', '__pyx_v_self', ')', ',', '__pyx_v_node', ',', '0', ',', 'NULL', ')', ';', 'if', '(', 'unlikely', '(', '!__pyx_t_1', ')', ')', '{', '__pyx_filename', '=', '__pyx_f', '[', '0', ']', ';', '__pyx_lineno', '=', '284', ';', '__pyx_clineno', '=', '__LINE__', ';', 'goto', '__pyx_L1_error', ';', '}', '__Pyx_GOTREF', '(', '__pyx_t_1', ')', ';', '__Pyx_DECREF', '(', '__pyx_t_1', ')', ';', '__pyx_t_1', '=', '0', ';', '/', '*', '""""', ':', '*', 'self', '.', 'current_directives', '=', 'node', '.', '*', 'self', '.', 'visitchildren', '(', 'node', ')', '*', 'self', '.', 'current_directives', '=', 'old', '#', '<<', '<<', '<<', '<<', '<<', '<<', '<<', '*', 'return', '*', '__Pyx_INCREF', '(', '__pyx_v_old', ')', ';', '__Pyx_GIVEREF', '(', '__pyx_v_old', ')', ';', '__Pyx_GOTREF', '(', '__pyx_v_self', '->', 'current_directives', ')', ';', '__Pyx_DECREF', '(', '__pyx_v_self', '->', 'current_directives', ')', ';', '__pyx_v_self', '->', 'current_directives', '=', '__pyx_v_old', ';', '/', '*', '""""', ':', '*', 'self', '.', 'visitchildren', '(', 'node', ')', '*', 'self', '.', 'current_directives', '=', '*', 'return', 'node', '#', '<<', '<<', '<<', '<<', '<<', '<<', '<<', '*', '*', 'def', 'visit_Node', '(', 'self', ',', 'node', ')', ':', '__Pyx_XDECREF', '(', '__pyx_r', ')', ';', '__Pyx_INCREF', '(', '__pyx_v_node', ')', ';', '__pyx_r', '=', '__pyx_v_node', ';', 'goto', '__pyx_L0', ';', '/', '*', '""""', ':', '*', 'return', 'super', '(', 'CythonTransform', ',', 'self', ')', '.', '__call__', '(', 'node', ')', '*', '*', 'def', 'visit_CompilerDirectivesNode', '(', 'self', ',', 'node', ')', ':', '#', '<<', '<<', '<<', '<<', '<<', '<<', '<<', '*', 'old', '=', 'self', '.', '*', 'self', '.', 'current_directives', '=', 'node', '.', '__pyx_L1_error', ':', ';', '__Pyx_XDECREF', '(', '__pyx_t_1', ')', ';', '__Pyx_AddTraceback', '(', '""""', ',', '__pyx_clineno', ',', '__pyx_lineno', ',', '__pyx_filename', ')', ';', '__pyx_r', '=', 'NULL', ';', '__pyx_L0', ':', ';', '__Pyx_XDECREF', '(', '__pyx_v_old', ')', ';', '__Pyx_XGIVEREF', '(', '__pyx_r', ')', ';', '__Pyx_RefNannyFinishContext', '(', ')', ';', 'return', '__pyx_r', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1046,"['getTimeoutSetting', '(', 'mail', ':', ':', 'loginInfo', '&', 'loginInfo', ',', 'const', 'char', '*', 'name', ',', 'time_t', 'defaultValue', ',', 'time_t', 'minValue', ',', 'time_t', 'maxValue', ')', '{', 'map', '<', 'string', ',', 'string', '>', ':', ':', 'iterator', 'p', '=', 'loginInfo', '.', 'options', '.', 'find', '(', 'name', ')', ';', 'if', '(', 'p', '!=', 'loginInfo', '.', 'options', '.', 'end', '(', ')', ')', '{', 'istringstream', 'i', '(', 'p', '->', 'second', ')', ';', 'i', '>>', 'defaultValue', ';', '}', 'if', '(', 'defaultValue', '<', 'minValue', ')', 'defaultValue', '=', 'minValue', ';', 'if', '(', 'defaultValue', '>', 'maxValue', ')', 'defaultValue', '=', 'maxValue', ';', 'return', 'defaultValue', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1047,"['rpcsvc_transport_peer_check_name', '(', 'dict_t', '*', 'options', ',', 'char', '*', 'volname', ',', 'rpc_transport_t', '*', 'trans', ')', '{', 'int', 'ret', '=', 'RPCSVC_AUTH_REJECT', ';', 'int', 'aret', '=', 'RPCSVC_AUTH_REJECT', ';', 'int', 'rjret', '=', 'RPCSVC_AUTH_REJECT', ';', 'char', 'clstr', '[', 'RPCSVC_PEER_STRLEN', ']', ';', 'char', '*', 'hostname', '=', 'NULL', ';', 'if', '(', '!trans', ')', 'return', 'ret', ';', 'ret', '=', 'rpcsvc_transport_peername', '(', 'trans', ',', 'clstr', ',', 'RPCSVC_PEER_STRLEN', ')', ';', 'if', '(', 'ret', '!=', '0', ')', '{', 'gf_log', '(', 'GF_RPCSVC', ',', 'GF_LOG_ERROR', ',', '""""', ',', 'gai_strerror', '(', 'ret', ')', ')', ';', 'ret', '=', 'RPCSVC_AUTH_REJECT', ';', 'goto', 'err', ';', '}', 'ret', '=', 'gf_get_hostname_from_ip', '(', 'clstr', ',', '&', 'hostname', ')', ';', 'if', '(', '!ret', ')', 'ret', '=', 'dict_set_dynstr', '(', 'options', ',', '""""', ',', 'hostname', ')', ';', 'aret', '=', 'rpcsvc_transport_peer_check_allow', '(', 'options', ',', 'volname', ',', 'clstr', ')', ';', 'rjret', '=', 'rpcsvc_transport_peer_check_reject', '(', 'options', ',', 'volname', ',', 'clstr', ')', ';', 'ret', '=', 'rpcsvc_combine_allow_reject_volume_check', '(', 'aret', ',', 'rjret', ')', ';', 'err', ':', 'return', 'ret', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1048,"['parse', '(', 'int', 'argc', ',', 'char', '*', 'argv', '[', ']', ')', '{', 'int', 'opt', ';', 'while', '(', '(', 'opt', '=', 'getopt', '(', 'argc', ',', 'argv', ',', '""""', ')', ')', '!=', '-', '1', ')', '{', 'switch', '(', 'opt', ')', '{', 'case', ""''"", ':', 'iter', '=', 'atoi', '(', 'optarg', ')', ';', 'break', ';', 'case', ""''"", ':', 'num_contexts', '=', 'atoi', '(', 'optarg', ')', ';', 'break', ';', 'case', ""''"", ':', 'multiple_fds', '=', '1', ';', 'break', ';', 'case', ""''"", ':', 'uncontexted', '=', '1', ';', 'break', ';', 'case', ""''"", ':', 'case', ""''"", ':', 'default', ':', 'exit', '(', 'EXIT_SUCCESS', ')', ';', 'break', ';', '}', '}', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1049,"['java_lang_VMClass_getDeclaredMethods', '(', 'jobject', 'clazz', ',', 'jboolean', 'public_only', ')', '{', 'struct', 'vm_class', '*', 'vmc', ';', 'int', 'count', ';', 'vmc', '=', 'vm_object_to_vm_class', '(', 'clazz', ')', ';', 'if', '(', '!vmc', ')', 'return', 'NULL', ';', 'if', '(', 'vm_class_is_primitive_class', '(', 'vmc', ')', '||', 'vm_class_is_array_class', '(', 'vmc', ')', ')', 'return', 'vm_object_alloc_array', '(', 'vm_array_of_java_lang_reflect_Method', ',', '0', ')', ';', 'count', '=', '0', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'vmc', '->', 'class', '->', 'methods_count', ';', 'i', '++', ')', '{', 'struct', 'vm_method', '*', 'vmm', '=', '&', 'vmc', '->', 'methods', '[', 'i', ']', ';', 'if', '(', 'public_only', '&&', '!vm_method_is_public', '(', 'vmm', ')', ')', 'continue', ';', 'if', '(', 'vm_method_is_special', '(', 'vmm', ')', ')', 'continue', ';', 'count', '++', ';', '}', 'struct', 'vm_object', '*', '=', 'vm_object_alloc_array', '(', 'vm_array_of_java_lang_reflect_Method', ',', 'count', ')', ';', 'if', '(', '!array', ')', 'return', 'rethrow_exception', '(', ')', ';', 'int', 'index', '=', '0', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'vmc', '->', 'class', '->', 'methods_count', ';', 'i', '++', ')', '{', 'struct', 'vm_method', '*', 'vmm', '=', '&', 'vmc', '->', 'methods', '[', 'i', ']', ';', 'if', '(', 'public_only', '&&', '!vm_method_is_public', '(', 'vmm', ')', ')', 'continue', ';', 'if', '(', 'vm_method_is_special', '(', 'vmm', ')', ')', 'continue', ';', 'array_set_field_ptr', '(', 'array', ',', 'index', '++', ',', 'vm_method_to_java_lang_reflect_method', '(', 'vmm', ',', 'clazz', ',', 'i', ')', ')', ';', '}', 'return', 'array', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1050,"['TagsAdd', '(', 'const', 'char', '*', 'FileName', ')', '{', 'int', '*', 'NewT', ';', 'int', 'NewF', ';', 'if', '(', '!AllocMem', '(', 'FileName', ',', 'strlen', '(', 'FileName', ')', '+', '1', ',', '&', 'NewF', ')', ')', 'return', '0', ';', 'if', '(', '!', '(', 'NewT', '=', '(', 'int', '*', ')', 'realloc', '(', '(', 'void', '*', ')', 'TagFiles', ',', '(', 'TagFileCount', '+', '1', ')', '*', 'sizeof', '(', 'int', ')', ')', ')', ')', 'return', '0', ';', 'TagFiles', '=', 'NewT', ';', 'TagFiles', '[', 'TagFileCount', '++', ']', '=', 'NewF', ';', 'return', '1', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1051,"['sci_controller_link_up', '(', 'struct', 'isci_host', '*', 'ihost', ',', 'struct', 'isci_port', '*', 'iport', ',', 'struct', 'isci_phy', '*', 'iphy', ')', '{', 'switch', '(', 'ihost', '->', 'sm', '.', 'current_state_id', ')', '{', 'case', 'SCIC_STARTING', ':', 'sci_del_timer', '(', '&', 'ihost', '->', 'phy_timer', ')', ';', 'ihost', '->', 'phy_startup_timer_pending', '=', 'false', ';', 'ihost', '->', 'port_agent', '.', 'link_up_handler', '(', 'ihost', ',', '&', 'ihost', '->', 'port_agent', ',', 'iport', ',', 'iphy', ')', ';', 'sci_controller_start_next_phy', '(', 'ihost', ')', ';', 'break', ';', 'case', 'SCIC_READY', ':', 'ihost', '->', 'port_agent', '.', 'link_up_handler', '(', 'ihost', ',', '&', 'ihost', '->', 'port_agent', ',', 'iport', ',', 'iphy', ')', ';', 'break', ';', 'default', ':', 'dev_dbg', '(', '&', 'ihost', '->', 'pdev', '->', 'dev', ',', '""""', ',', '__func__', ',', 'iphy', '->', 'phy_index', ',', 'ihost', '->', 'sm', '.', 'current_state_id', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1052,"['add', '(', 'boost', ':', ':', 'shared_ptr', '<', 'Account', '>', 'account', ')', '{', 'account', '->', 'trigger_saving', '.', 'connect', '(', 'boost', ':', ':', 'bind', '(', '&', 'LM', ':', ':', 'Bank', ':', ':', 'save', ',', 'this', ')', ')', ';', 'add_account', '(', 'account', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1053,"['_handle_source_request', '(', 'client_t', '*', 'client', ',', 'const', 'char', '*', 'uri', ')', '{', 'INFO1', '(', '""""', '%', 's\\""""', ',', 'uri', ')', ';', 'if', '(', 'uri', '[', '0', ']', '!=', ""''"", ')', '{', 'WARN0', '(', '""""', ')', ';', 'client_send_401', '(', 'client', ')', ';', 'return', ';', '}', 'switch', '(', 'client_check_source_auth', '(', 'client', ',', 'uri', ')', ')', '{', 'source_startup', '(', 'client', ',', 'uri', ',', 'ICECAST_SOURCE_AUTH', ')', ';', 'break', ';', 'break', ';', 'INFO1', '(', '""""', ',', 'uri', ')', ';', 'client_send_401', '(', 'client', ')', ';', 'break', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1054,"['cbf_read_line', '(', 'cbf_file', '*', 'file', ',', 'const', 'char', '*', '*', 'line', ')', '{', 'int', 'c', ';', 'char', 'buffer', '[', '80', ']', ';', 'if', '(', '!file', ')', 'return', 'CBF_ARGUMENT', ';', 'file', '->', 'buffer_used', '=', '0', ';', 'file', '->', 'column', '=', '0', ';', '{', 'c', '=', 'cbf_read_character', '(', 'file', ')', ';', 'if', '(', 'c', '==', 'EOF', ')', 'return', 'CBF_FILEREAD', ';', 'if', '(', 'file', '->', 'column', '==', 'file', '->', 'columnlimit', '+', '1', ')', '{', 'sprintf', '(', 'buffer', ',', '""""', ',', '1', '+', 'file', '->', 'line', ')', ';', 'cbf_flog', '(', 'file', ',', 'buffer', ',', 'CBF_LOGWARNING', '|', 'CBF_LOGCURRENTLOC', ')', ';', '}', 'cbf_failnez', '(', 'cbf_save_character', '(', 'file', ',', 'c', ')', ')', '}', 'while', '(', 'c', '!=', ""''"", ')', ';', 'if', '(', 'line', ')', '*', 'line', '=', 'file', '->', 'buffer', ';', 'return', '0', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1055,"['createRoot', '(', 'const', 'char', '*', 'name', ',', 'GLESubArgNames', '*', 'argNames', ')', '{', 'GLERC', '<', 'GLEString', '>', 'strName', '(', 'new', 'GLEString', '(', 'name', ')', ')', ';', 'GLESubRoot', '*', 'root', '=', '(', 'GLESubRoot', '*', ')', 'm_SubRoots', '->', 'getObjectByKey', '(', 'strName', ')', ';', 'if', '(', 'root', '!=', 'NULL', ')', '{', 'root', '->', 'updateArgNames', '(', 'argNames', ')', ';', 'return', 'root', ';', '}', 'else', '{', 'GLESubRoot', '*', 'newRoot', '=', 'new', 'GLESubRoot', '(', 'strName', '.', 'get', '(', ')', ',', 'argNames', ')', ';', 'm_SubRoots', '->', 'setObjectByKey', '(', 'strName', ',', 'newRoot', ')', ';', 'return', 'newRoot', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1056,"['cgi_initialize_cookies', '(', 'void', ')', '{', 'if', '(', '(', 'cookie', '=', 'getenv', '(', '""""', ')', ')', '==', 'NULL', ')', 'return', ';', 'while', '(', '*', 'cookie', ')', '{', '/', '*', '*', 'Skip', 'leading', 'whitespace', '.', '.', '.', 'while', '(', 'isspace', '(', '*', 'cookie', '&', '255', ')', ')', 'cookie', '++', ';', 'if', '(', '!', '*', 'cookie', ')', 'break', ';', '/', '*', '*', 'Copy', 'the', 'name', '.', '.', '.', 'for', '(', 'ptr', '=', 'name', ';', '*', 'cookie', '&&', '*', 'cookie', '!=', ""''"", ';', ')', 'if', '(', 'ptr', '<', '(', 'name', '+', 'sizeof', '(', 'name', ')', '-', '1', ')', ')', '*', 'ptr', '++', '=', '*', 'cookie', '++', ';', 'break', ';', 'if', '(', '*', 'cookie', '!=', ""''"", ')', 'break', ';', '*', 'ptr', '=', ""''"", ';', 'cookie', '++', ';', '/', '*', '*', 'Then', 'the', 'value', '.', '.', '.', 'if', '(', '*', 'cookie', '==', ""''"", ')', '{', 'for', '(', 'cookie', '++', ',', 'ptr', '=', 'value', ';', '*', 'cookie', '&&', '*', 'cookie', '!=', ""''"", ';', ')', 'if', '(', 'ptr', '<', '(', 'value', '+', 'sizeof', '(', 'value', ')', '-', '1', ')', ')', '*', 'ptr', '++', '=', '*', 'cookie', '++', ';', 'break', ';', 'if', '(', '*', 'cookie', '==', ""''"", ')', 'cookie', '++', ';', '}', '{', 'for', '(', 'ptr', '=', 'value', ';', '*', 'cookie', '&&', '*', 'cookie', '!=', ""''"", ';', ')', 'if', '(', 'ptr', '<', '(', 'value', '+', 'sizeof', '(', 'value', ')', '-', '1', ')', ')', '*', 'ptr', '++', '=', '*', 'cookie', '++', ';', 'break', ';', '}', 'if', '(', '*', 'cookie', '==', ""''"", ')', 'cookie', '++', ';', 'else', 'if', '(', '*', 'cookie', ')', 'break', ';', '*', 'ptr', '=', ""''"", ';', '/', '*', '*', 'Then', 'add', 'the', 'cookie', 'to', 'an', 'array', 'as', 'long', 'as', 'the', 'name', ""doesn't"", 'start', '*', '""""', '.', '.', '.', 'if', '(', 'name', '[', '0', ']', '!=', ""''"", ')', 'num_cookies', '=', 'cupsAddOption', '(', 'name', ',', 'value', ',', 'num_cookies', ',', '&', 'cookies', ')', ';', '}', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1057,"['brasero_app_indicator_init', '(', 'BraseroAppIndicator', '*', 'obj', ')', '{', 'GtkWidget', '*', 'indicator_menu', ';', 'obj', '->', 'priv', '=', 'g_new0', '(', 'BraseroAppIndicatorPrivate', ',', '1', ')', ';', 'indicator_menu', '=', 'brasero_app_indicator_build_menu', '(', 'obj', ')', ';', 'if', '(', 'indicator_menu', '!=', 'NULL', ')', '{', 'obj', '->', 'priv', '->', 'indicator', '=', 'app_indicator_new_with_path', '(', '""""', ',', '""""', ',', 'APP_INDICATOR_CATEGORY_APPLICATION_STATUS', ',', 'BRASERO_DATADIR', '""""', ')', ';', 'app_indicator_set_status', '(', 'obj', '->', 'priv', '->', 'indicator', ',', 'APP_INDICATOR_STATUS_ACTIVE', ')', ';', 'app_indicator_set_menu', '(', 'obj', '->', 'priv', '->', 'indicator', ',', 'GTK_MENU', '(', 'indicator_menu', ')', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1058,"['WriteDataChunks', '(', 'ArchiveHandle', '*', 'AH', ')', '{', 'TocEntry', '*', 'te', ';', 'StartDataPtr', 'startPtr', ';', 'EndDataPtr\tendPtr', ';', 'for', '(', 'te', '=', 'AH', '->', 'toc', '->', 'next', ';', 'te', '!=', 'AH', '->', 'toc', ';', 'te', '=', 'te', '->', 'next', ')', '{', 'if', '(', 'te', '->', 'dataDumper', '!=', 'NULL', ')', '{', 'AH', '->', 'currToc', '=', 'te', ';', 'if', '(', 'strcmp', '(', 'te', '->', 'desc', ',', '""""', ')', '==', '0', ')', '{', 'startPtr', '=', 'AH', '->', 'StartBlobsPtr', ';', 'endPtr', '=', 'AH', '->', 'EndBlobsPtr', ';', '}', '{', 'startPtr', '=', 'AH', '->', 'StartDataPtr', ';', 'endPtr', '=', 'AH', '->', 'EndDataPtr', ';', '}', 'if', '(', 'startPtr', '!=', 'NULL', ')', '(', '*', 'startPtr', ')', '(', 'AH', ',', 'te', ')', ';', '/', '*', '*', 'printf', '(', '""""', ',', 'te', '->', 'id', ',', 'te', '->', 'dataDumperArg', ')', ';', '/', '*', '*', 'The', 'user', '-', 'provided', 'DataDumper', 'routine', 'needs', 'to', '*', 'AH', '->', '(', '*', 'te', '->', 'dataDumper', ')', '(', '(', 'Archive', '*', ')', 'AH', ',', 'te', '->', 'dataDumperArg', ')', ';', 'if', '(', 'endPtr', '!=', 'NULL', ')', '(', '*', 'endPtr', ')', '(', 'AH', ',', 'te', ')', ';', 'AH', '->', 'currToc', '=', 'NULL', ';', '}', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1059,"['calc_equal_probs', '(', 'void', ')', '{', 'FILEDESC', '*', 'fiddlylist', ';', 'Num_files', '=', 'Num_kids', '=', '0', ';', 'fiddlylist', '=', 'File_list', ';', 'while', '(', 'fiddlylist', '!=', 'NULL', ')', '{', 'Num_files', '++', ';', 'Num_kids', '+=', 'fiddlylist', '->', 'num_children', ';', 'fiddlylist', '=', 'fiddlylist', '->', 'next', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1060,"['Add', '(', 'TreeMap', '*', 'tree', ',', 'void', '*', 'Data', ',', 'void', '*', 'ExtraArgs', ')', '{', 'struct', 'Node', '*', 'p', ';', 'CompareInfo', 'cInfo', ';', 'cInfo', '.', 'ExtraArgs', '=', 'ExtraArgs', ';', 'cInfo', '.', 'ContainerLeft', '=', 'tree', ';', 'p', '=', 'iHeap', '.', 'NewObject', '(', 'tree', '->', 'Heap', ')', ';', 'if', '(', 'p', ')', '{', 'memcpy', '(', 'p', '->', 'data', ',', 'Data', ',', 'tree', '->', 'ElementSize', ')', ';', '}', 'else', '{', 'iError', '.', 'RaiseError', '(', '""""', ',', 'CONTAINER_ERROR_NOMEMORY', ')', ';', 'return', 'CONTAINER_ERROR_NOMEMORY', ';', '}', 'tree', '->', 'aux', '=', '&', 'cInfo', ';', 'insert', '(', 'tree', ',', 'p', ',', 'ExtraArgs', ')', ';', 'tree', '->', 'aux', '=', 'NULL', ';', 'return', '1', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1061,"['getChar', '(', ')', '{', 'if', '(', 'length', '>=', '0', '&&', 'count', '>=', 'length', ')', 'return', 'EOF', ';', '++', 'count', ';', 'return', 'str', '->', 'getChar', '(', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1062,"['UpdateFile', '(', 'bool', 'doSafeUpdate', ')', '{', 'bool', 'updated', '=', 'false', ';', 'if', '(', '!', 'this', '->', 'needsUpdate', ')', 'return', ';', 'LFA_FileRef', 'fileRef', '(', 'this', '->', 'parent', '->', 'fileRef', ')', ';', 'if', '(', 'fileRef', '==', '0', ')', 'return', ';', 'ASF_Support', 'support', ';', 'ASF_Support', ':', ':', 'ObjectState', 'objectState', ';', 'long', 'numTags', '=', 'support', '.', 'OpenASF', '(', 'fileRef', ',', 'objectState', ')', ';', 'if', '(', 'numTags', '==', '0', ')', 'return', ';', 'XMP_StringLen', 'packetLen', '=', '(', 'XMP_StringLen', ')', 'xmpPacket', '.', 'size', '(', ')', ';', 'this', '->', 'legacyManager', '.', 'ExportLegacy', '(', 'this', '->', 'xmpObj', ')', ';', 'if', '(', 'this', '->', 'legacyManager', '.', 'hasLegacyChanged', '(', ')', ')', '{', 'this', '->', 'legacyManager', '.', 'SetDigest', '(', '&', 'this', '->', 'xmpObj', ')', ';', '/', '/', 'serialize', 'with', 'updated', 'if', '(', 'objectState', '.', 'xmpLen', '==', '0', ')', '{', '/', '/', 'XMP', 'does', 'not', 'exist', ',', 'use', 'standard', 'this', '->', 'xmpObj', '.', 'SerializeToBuffer', '(', '&', 'this', '->', 'xmpPacket', ',', 'kXMP_UseCompactFormat', ')', ';', '}', 'else', '{', '/', '/', 're', '-', 'use', 'padding', 'with', 'static', 'XMP', 'try', '{', 'XMP_OptionBits', 'compactExact', '=', '(', 'kXMP_UseCompactFormat', '|', 'kXMP_ExactPacketLength', ')', ';', 'this', '->', 'xmpObj', '.', 'SerializeToBuffer', '(', '&', 'this', '->', 'xmpPacket', ',', 'compactExact', ',', 'XMP_StringLen', '(', 'objectState', '.', 'xmpLen', ')', ')', ';', '}', 'catch', '(', '.', '.', '.', ')', '{', '/', '/', 're', '-', 'use', 'padding', 'with', 'exact', 'packet', 'length', 'failed', '(', 'legacy', '-', 'digest', 'needed', 'too', 'much', 'space', ')', ':', 'try', 'again', 'using', 'standard', 'this', '->', 'xmpObj', '.', 'SerializeToBuffer', '(', '&', 'this', '->', 'xmpPacket', ',', 'kXMP_UseCompactFormat', ')', ';', '}', '}', '}', 'XMP_StringPtr', 'packetStr', '=', 'xmpPacket', '.', 'c_str', '(', ')', ';', 'packetLen', '=', '(', 'XMP_StringLen', ')', 'xmpPacket', '.', 'size', '(', ')', ';', 'if', '(', 'packetLen', '==', '0', ')', 'return', ';', '/', '/', 'value', ',', 'when', 'guessing', 'for', 'sufficient', 'legacy', 'padding', '(', 'line', '-', 'ending', 'conversion', 'etc', '.', ')', 'const', 'int', 'paddingTolerance', '=', '50', ';', 'bool', 'xmpGrows', '=', '(', 'objectState', '.', 'xmpLen', '&&', '(', 'packetLen', '>', 'objectState', '.', 'xmpLen', ')', '&&', '(', '!', 'objectState', '.', 'xmpIsLastObject', ')', ')', ';', 'bool', 'legacyGrows', '=', '(', 'this', '->', 'legacyManager', '.', 'hasLegacyChanged', '(', ')', '&&', '(', 'this', '->', 'legacyManager', '.', 'getLegacyDiff', '(', ')', '>', '(', 'this', '->', 'legacyManager', '.', 'GetPadding', '(', ')', '-', 'paddingTolerance', ')', ')', ')', ';', 'if', '(', 'doSafeUpdate', '||', 'legacyGrows', '||', 'xmpGrows', ')', '{', '/', '/', 'do', 'a', 'safe', 'update', 'in', 'any', 'updated', '=', 'SafeWriteFile', '(', ')', ';', '}', 'else', '{', '/', '/', 'possibly', 'we', 'can', 'do', 'an', 'in', '-', 'place', 'if', '(', 'objectState', '.', 'xmpLen', '<', 'packetLen', ')', '{', 'updated', '=', 'SafeWriteFile', '(', ')', ';', '}', 'else', '{', '/', '/', 'current', 'XMP', 'chunk', 'size', 'is', 'sufficient', '->', 'write', '(', 'in', 'place', 'update', ')', 'updated', '=', 'ASF_Support', ':', ':', 'WriteBuffer', '(', 'fileRef', ',', 'objectState', '.', 'xmpPos', ',', 'packetLen', ',', 'packetStr', ')', ';', '/', '/', 'legacy', 'if', '(', 'updated', '&&', 'this', '->', 'legacyManager', '.', 'hasLegacyChanged', '(', ')', ')', '{', 'ASF_Support', ':', ':', 'ObjectIterator', 'curPos', '=', 'objectState', '.', 'objects', '.', 'begin', '(', ')', ';', 'ASF_Support', ':', ':', 'ObjectIterator', 'endPos', '=', 'objectState', '.', 'objects', '.', 'end', '(', ')', ';', 'for', '(', ';', 'curPos', '!=', 'endPos', ';', '++', 'curPos', ')', '{', 'ASF_Support', ':', ':', 'ObjectData', 'object', '=', '*', 'curPos', ';', '/', '/', 'find', 'header', '-', 'if', '(', 'IsEqualGUID', '(', 'ASF_Header_Object', ',', 'object', '.', 'guid', ')', ')', '{', '/', '/', 'update', 'header', 'updated', '=', 'support', '.', 'UpdateHeaderObject', '(', 'fileRef', ',', 'object', ',', 'legacyManager', ')', ';', '}', '}', '}', '}', '}', 'if', '(', '!', 'updated', ')', 'return', ';', '\t', '/', '/', 'If', ""there's"", 'an', 'error', 'writing', 'the', 'chunk', ',', 'bail', '.', 'this', '->', 'needsUpdate', '=', 'false', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1063,"['clutter_im_context_filter_keypress', '(', 'ClutterIMContext', '*', 'context', ',', 'ClutterKeyEvent', '*', 'key', ')', '{', 'ClutterIMContextClass', '*', 'klass', ';', 'STEP', '(', ')', ';', 'g_return_val_if_fail', '(', 'CLUTTER_IS_IM_CONTEXT', '(', 'context', ')', ',', 'FALSE', ')', ';', 'g_return_val_if_fail', '(', 'key', '!=', 'NULL', ',', 'FALSE', ')', ';', 'klass', '=', 'CLUTTER_IM_CONTEXT_GET_CLASS', '(', 'context', ')', ';', 'return', 'klass', '->', 'filter_keypress', '(', 'context', ',', 'key', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
1064,"['dirserv_have_any_microdesc', '(', 'const', 'smartlist_t', '*', 'fps', ')', '{', 'microdesc_cache_t', '*', 'cache', '=', 'get_microdesc_cache', '(', ')', ';', 'SMARTLIST_FOREACH', '(', 'fps', ',', 'const', 'char', '*', ',', 'fp', ',', 'if', '(', 'microdesc_cache_lookup_by_digest256', '(', 'cache', ',', 'fp', ')', ')', 'return', '1', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1065,"['symbol_bd_cobol_purge_file', '(', 'Symbolizable', '*', 'self', ',', 'gchar', '*', 'filename', ')', '{', 'gphpedit_debug', '(', 'DEBUG_SYMBOLIZABLE', ')', ';', 'SymbolBdCOBOLDetails', '*', 'symbolbddet', ';', 'symbolbddet', '=', 'SYMBOL_BD_COBOL_GET_PRIVATE', '(', 'self', ')', ';', 'if', '(', '!filename', ')', 'return', ';', 'g_return_if_fail', '(', 'self', ')', ';', 'symbolbddet', '->', 'completion_prefix', '=', 'filename', ';', 'if', '(', '!g_hash_table_remove', '(', 'symbolbddet', '->', 'db_file_table', ',', 'filename', ')', ')', 'return', ';', 'g_hash_table_foreach', '(', 'symbolbddet', '->', 'functionlist', ',', 'remove_custom_function_item', ',', 'symbolbddet', ')', ';', 'g_hash_table_foreach', '(', 'symbolbddet', '->', 'cobol_class_tree', ',', 'remove_custom_class_item', ',', 'symbolbddet', ')', ';', 'g_hash_table_foreach', '(', 'symbolbddet', '->', 'cobol_variables_tree', ',', 'remove_custom_var_item', ',', 'symbolbddet', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1066,"['fileputs', '(', 'const', 'char', '*', 'str', ',', 'FILE', '*', 'fp', ')', '{', 'for', '(', ';', '*', 'str', ';', 'str', '++', ')', '{', 'register', 'char', 'c', '=', '*', 'str', '==', ""''"", '?', ""''"", ':', '*', 'str', ';', 'putc', '(', 'c', ',', 'fp', ')', ';', '}', 'putc', '(', ""''"", ',', 'fp', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1067,"['abituguru_remove', '(', 'struct', 'platform_device', '*', 'pdev', ')', '{', 'int', 'i', ';', 'struct', 'abituguru_data', '*', 'data', '=', 'platform_get_drvdata', '(', 'pdev', ')', ';', 'hwmon_device_unregister', '(', 'data', '->', 'hwmon_dev', ')', ';', 'for', '(', 'i', '=', '0', ';', 'data', '->', 'sysfs_attr', '[', 'i', ']', '.', 'dev_attr', '.', 'attr', '.', 'name', ';', 'i', '++', ')', 'device_remove_file', '(', '&', 'pdev', '->', 'dev', ',', '&', 'data', '->', 'sysfs_attr', '[', 'i', ']', '.', 'dev_attr', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'ARRAY_SIZE', '(', 'abituguru_sysfs_attr', ')', ';', 'i', '++', ')', 'device_remove_file', '(', '&', 'pdev', '->', 'dev', ',', '&', 'abituguru_sysfs_attr', '[', 'i', ']', '.', 'dev_attr', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1068,"['slotServiceReady', '(', 'Plasma', ':', ':', 'Service', '*', 'service', ')', '{', 'KConfigGroup', 'op', '=', 'service', '->', 'operationDescription', '(', '""""', ')', ';', 'service', '->', 'startOperationCall', '(', 'op', ')', ';', 'q', '->', 'connect', '(', 'service', ',', 'SIGNAL', '(', 'finished', '(', 'Plasma', ':', ':', 'ServiceJob', '*', ')', ')', ',', 'q', ',', 'SLOT', '(', 'slotPackageDownloaded', '(', 'Plasma', ':', ':', 'ServiceJob', '*', ')', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1069,"['unload_plugin_cb', '(', 'char', '*', 'word', '[', ']', ',', 'char', '*', 'word_eol', '[', ']', ',', 'void', '*', 'userdata', ')', '{', 'RemoteObject', '*', 'obj', ';', 'obj', '=', 'g_hash_table_find', '(', 'clients', ',', 'clients_find_filename_foreach', ',', 'word', '[', '2', ']', ')', ';', 'if', '(', 'obj', '!=', 'NULL', ')', '{', 'g_signal_emit', '(', 'obj', ',', 'signals', '[', 'UNLOAD_SIGNAL', ']', ',', '0', ')', ';', 'return', 'HEXCHAT_EAT_ALL', ';', '}', 'return', 'HEXCHAT_EAT_NONE', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1070,"['vmw_surface_define_encode', '(', 'const', 'struct', 'vmw_surface', '*', 'srf', ',', 'void', '*', 'cmd_space', ')', '{', 'struct', 'vmw_surface_define', '*', 'cmd', '=', '(', 'struct', 'vmw_surface_define', '*', ')', 'cmd_space', ';', 'struct', 'drm_vmw_size', '*', 'src_size', ';', 'SVGA3dSize', '*', 'cmd_size', ';', 'uint32_t', 'cmd_len', ';', 'int', 'i', ';', 'cmd_len', '=', 'sizeof', '(', 'cmd', '->', 'body', ')', '+', 'srf', '->', 'num_sizes', '*', 'sizeof', '(', 'SVGA3dSize', ')', ';', 'cmd', '->', 'header', '.', 'id', '=', 'SVGA_3D_CMD_SURFACE_DEFINE', ';', 'cmd', '->', 'header', '.', 'size', '=', 'cmd_len', ';', 'cmd', '->', 'body', '.', 'sid', '=', 'srf', '->', 'res', '.', 'id', ';', 'cmd', '->', 'body', '.', 'surfaceFlags', '=', 'srf', '->', 'flags', ';', 'cmd', '->', 'body', '.', 'format', '=', 'srf', '->', 'format', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'DRM_VMW_MAX_SURFACE_FACES', ';', '++', 'i', ')', 'cmd', '->', 'body', '.', 'face', '[', 'i', ']', '.', 'numMipLevels', '=', 'srf', '->', 'mip_levels', '[', 'i', ']', ';', 'cmd', '+=', '1', ';', 'cmd_size', '=', '(', 'SVGA3dSize', '*', ')', 'cmd', ';', 'src_size', '=', 'srf', '->', 'sizes', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'srf', '->', 'num_sizes', ';', '++', 'i', ',', 'cmd_size', '++', ',', 'src_size', '++', ')', '{', 'cmd_size', '->', 'width', '=', 'src_size', '->', 'width', ';', 'cmd_size', '->', 'height', '=', 'src_size', '->', 'height', ';', 'cmd_size', '->', 'depth', '=', 'src_size', '->', 'depth', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1071,"['load_colors', '(', 'name', ')', 'char_u\t', '*', 'name', ';', '{', 'char_u\t', '*', 'buf', ';', 'int\t\tretval', '=', 'FAIL', ';', 'static', 'int\trecursive', '=', 'FALSE', ';', '/', '*', 'When', 'being', 'called', 'recursively', ',', 'this', 'is', 'probably', 'because', '*', ""''"", 'caused', 'the', 'highlighting', 'to', 'be', 'reloaded', '.', 'This', 'means', 'it', 'if', '(', 'recursive', ')', 'return', 'OK', ';', 'recursive', '=', 'TRUE', ';', 'buf', '=', 'alloc', '(', '(', 'unsigned', ')', '(', 'STRLEN', '(', 'name', ')', '+', '12', ')', ')', ';', 'if', '(', 'buf', '!=', 'NULL', ')', '{', 'sprintf', '(', '(', 'char', '*', ')', 'buf', ',', '""""', ',', 'name', ')', ';', 'retval', '=', 'source_runtime', '(', 'buf', ',', 'FALSE', ')', ';', 'vim_free', '(', 'buf', ')', ';', '#ifdef', 'apply_autocmds', '(', 'EVENT_COLORSCHEME', ',', 'NULL', ',', 'NULL', ',', 'FALSE', ',', 'curbuf', ')', ';', '}', 'recursive', '=', 'FALSE', ';', 'return', 'retval', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1072,"['i915_gem_object_fence_ok', '(', 'struct', 'drm_i915_gem_object', '*', 'obj', ',', 'int', 'tiling_mode', ')', '{', 'u32', 'size', ';', 'if', '(', 'tiling_mode', '==', 'I915_TILING_NONE', ')', 'return', 'true', ';', 'if', '(', 'INTEL_INFO', '(', 'obj', '->', 'base', '.', 'dev', ')', '->', 'gen', '>=', '4', ')', 'return', 'true', ';', 'if', '(', 'INTEL_INFO', '(', 'obj', '->', 'base', '.', 'dev', ')', '->', 'gen', '==', '3', ')', '{', 'if', '(', 'i915_gem_obj_ggtt_offset', '(', 'obj', ')', '&', '~I915_FENCE_START_MASK', ')', 'return', 'false', ';', '}', 'else', '{', 'if', '(', 'i915_gem_obj_ggtt_offset', '(', 'obj', ')', '&', '~I830_FENCE_START_MASK', ')', 'return', 'false', ';', '}', 'size', '=', 'i915_gem_get_gtt_size', '(', 'obj', '->', 'base', '.', 'dev', ',', 'obj', '->', 'base', '.', 'size', ',', 'tiling_mode', ')', ';', 'if', '(', 'i915_gem_obj_ggtt_size', '(', 'obj', ')', '!=', 'size', ')', 'return', 'false', ';', 'if', '(', 'i915_gem_obj_ggtt_offset', '(', 'obj', ')', '&', '(', 'size', '-', '1', ')', ')', 'return', 'false', ';', 'return', 'true', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1073,"['rd_port_tchk', '(', 'FILE', '*', 'f', ',', 'struct', 'tcterm_t', '*', 'tctp', ')', '{', 'char', 'pnam', '[', 'IDLEN', ']', ';', 'int32', 'i1', ',', 'i2', ',', 'eval', ',', 'ettyp', ';', 'tctp', '->', 'ti1', '=', 'tctp', '->', 'ti2', '=', '-', '1', ';', 'tctp', '->', 'cndnam', '=', 'NULL', ';', 'tctp', '->', 'cndi1', '=', 'tctp', '->', 'cndi2', '=', '-', '1', ';', 'tctp', '->', 'cnd_op', '=', 'UNDEF', ';', 'tctp', '->', 'cnd_const', '=', '-', '1', ';', 'tctp', '->', 'eval', '=', 'NOEDGE', ';', 'if', '(', '__toktyp', '==', 'LPAR', ')', '{', 'ettyp', '=', 'rd_edge_ident', '(', 'f', ')', ';', 'if', '(', 'ettyp', '==', '-', '1', '&&', '__toktyp', '==', 'SDF_COND', ')', 'return', '(', 'rd_tchk_cond', '(', 'f', ',', 'tctp', ')', ')', ';', 'if', '(', 'ettyp', '==', '-', '1', ')', '{', '__pv_ferr', '(', '1386', ',', '""""', ',', 'prt_sdftok', '(', ')', ')', ';', 'return', '(', 'FALSE', ')', ';', '}', 'tctp', '->', 'eval', '=', 'ettyp', ';', 'get_sdftok', '(', 'f', ')', ';', 'if', '(', '!rd_port_spec', '(', 'f', ',', 'pnam', ',', '&', 'i1', ',', '&', 'i2', ',', '&', 'eval', ',', 'TRUE', ')', ')', 'return', '(', 'FALSE', ')', ';', 'tctp', '->', 'tnam', '=', '__pv_stralloc', '(', 'pnam', ')', ';', 'tctp', '->', 'ti1', '=', 'i1', ';', 'tctp', '->', 'ti2', '=', 'i2', ';', 'tctp', '->', 'eval', '=', 'eval', ';', 'if', '(', '__toktyp', '!=', 'RPAR', ')', '{', '__pv_ferr', '(', '1363', ',', '""""', ',', 'prt_sdftok', '(', ')', ')', ';', 'return', '(', 'FALSE', ')', ';', '}', 'get_sdftok', '(', 'f', ')', ';', 'return', '(', 'TRUE', ')', ';', '}', 'if', '(', '!rd_port', '(', 'f', ',', 'pnam', ',', '&', 'i1', ',', '&', 'i2', ')', ')', 'return', '(', 'FALSE', ')', ';', 'tctp', '->', 'tnam', '=', '__pv_stralloc', '(', 'pnam', ')', ';', 'tctp', '->', 'ti1', '=', 'i1', ';', 'tctp', '->', 'ti2', '=', 'i2', ';', 'return', '(', 'TRUE', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1074,"['basic_map_identity', '(', '__isl_take', 'isl_space', '*', 'dims', ')', '{', 'struct', 'isl_basic_map', '*', 'bmap', ';', 'unsigned', 'nparam', ';', 'unsigned', 'dim', ';', 'int', 'i', ';', 'if', '(', '!dims', ')', 'return', 'NULL', ';', 'nparam', '=', 'dims', '->', 'nparam', ';', 'dim', '=', 'dims', '->', 'n_out', ';', 'bmap', '=', 'isl_basic_map_alloc_space', '(', 'dims', ',', '0', ',', 'dim', ',', '0', ')', ';', 'if', '(', '!bmap', ')', 'goto', 'error', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'dim', ';', '++', 'i', ')', '{', 'int', 'j', '=', 'isl_basic_map_alloc_equality', '(', 'bmap', ')', ';', 'if', '(', 'j', '<', '0', ')', 'goto', 'error', ';', 'isl_seq_clr', '(', 'bmap', '->', 'eq', '[', 'j', ']', ',', '1', '+', 'isl_basic_map_total_dim', '(', 'bmap', ')', ')', ';', 'isl_int_set_si', '(', 'bmap', '->', 'eq', '[', 'j', ']', '[', '1', '+', 'nparam', '+', 'i', ']', ',', '1', ')', ';', 'isl_int_set_si', '(', 'bmap', '->', 'eq', '[', 'j', ']', '[', '1', '+', 'nparam', '+', 'dim', '+', 'i', ']', ',', '-', '1', ')', ';', '}', 'return', 'isl_basic_map_finalize', '(', 'bmap', ')', ';', 'error', ':', 'isl_basic_map_free', '(', 'bmap', ')', ';', 'return', 'NULL', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1075,"['polkit_authority_enumerate_actions_finish', '(', 'PolkitAuthority', '*', 'authority', ',', 'GAsyncResult', '*', 'res', ',', 'GError', '*', '*', 'error', ')', '{', 'GList', '*', 'ret', ';', 'GVariant', '*', 'value', ';', 'GVariantIter', 'iter', ';', 'GVariant', '*', 'child', ';', 'GVariant', '*', 'array', ';', 'GAsyncResult', '*', '_res', ';', 'g_return_val_if_fail', '(', 'POLKIT_IS_AUTHORITY', '(', 'authority', ')', ',', 'NULL', ')', ';', 'g_return_val_if_fail', '(', 'G_IS_SIMPLE_ASYNC_RESULT', '(', 'res', ')', ',', 'NULL', ')', ';', 'g_return_val_if_fail', '(', 'error', '==', 'NULL', '||', '*', 'error', '==', 'NULL', ',', 'NULL', ')', ';', 'ret', '=', 'NULL', ';', 'g_warn_if_fail', '(', 'g_simple_async_result_get_source_tag', '(', 'G_SIMPLE_ASYNC_RESULT', '(', 'res', ')', ')', '==', 'polkit_authority_enumerate_actions', ')', ';', '_res', '=', 'G_ASYNC_RESULT', '(', 'g_simple_async_result_get_op_res_gpointer', '(', 'G_SIMPLE_ASYNC_RESULT', '(', 'res', ')', ')', ')', ';', 'value', '=', 'g_dbus_proxy_call_finish', '(', 'authority', '->', 'proxy', ',', '_res', ',', 'error', ')', ';', 'if', '(', 'value', '==', 'NULL', ')', 'goto', 'out', ';', 'array', '=', 'g_variant_get_child_value', '(', 'value', ',', '0', ')', ';', 'g_variant_iter_init', '(', '&', 'iter', ',', 'array', ')', ';', 'while', '(', '(', 'child', '=', 'g_variant_iter_next_value', '(', '&', 'iter', ')', ')', '!=', 'NULL', ')', '{', 'ret', '=', 'g_list_prepend', '(', 'ret', ',', 'polkit_action_description_new_for_gvariant', '(', 'child', ')', ')', ';', 'g_variant_unref', '(', 'child', ')', ';', '}', 'ret', '=', 'g_list_reverse', '(', 'ret', ')', ';', 'g_variant_unref', '(', 'array', ')', ';', 'g_variant_unref', '(', 'value', ')', ';', 'out', ':', 'return', 'ret', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1076,"['so_request', '(', 'SO_HANDLE', 'h', ',', 'const', 'char', '*', 'reqstr', ',', 'long', '*', 'length', ')', '{', 'string', 'res', '=', 'TKawariShioriFactory', ':', ':', 'GetFactory', '(', ')', '.', 'RequestInstance', '(', '(', 'int', ')', 'h', ',', 'string', '(', 'reqstr', ',', '*', 'length', ')', ')', ';', 'return', 'string2cstr', '(', 'res', ',', 'length', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1077,"['php_ereg', '(', 'INTERNAL_FUNCTION_PARAMETERS', ',', 'int', 'icase', ')', '{', 'int', 'findin_len', ';', 'regex_t', 're', ';', 'regmatch_t', '*', 'subs', ';', 'int', 'err', ',', 'match_len', ',', 'string_len', ';', 'uint', 'i', ';', 'int', 'copts', '=', '0', ';', 'off_t', 'start', ',', 'end', ';', 'char', '*', 'buf', '=', 'NULL', ';', 'char', '*', 'string', '=', 'NULL', ';', 'int', 'argc', '=', 'ZEND_NUM_ARGS', '(', ')', ';', 'if', '(', 'zend_parse_parameters', '(', 'argc', 'TSRMLS_CC', ',', '""""', ',', '&', 'regex', ',', '&', 'findin', ',', '&', 'findin_len', ',', '&', 'array', ')', '==', 'FAILURE', ')', '{', 'return', ';', '}', 'if', '(', 'icase', ')', '{', 'copts', '|=', 'REG_ICASE', ';', '}', 'if', '(', 'argc', '==', '2', ')', '{', 'copts', '|=', 'REG_NOSUB', ';', '}', 'if', '(', 'Z_TYPE_PP', '(', 'regex', ')', '==', 'IS_STRING', ')', '{', 'err', '=', 'regcomp', '(', '&', 're', ',', 'Z_STRVAL_PP', '(', 'regex', ')', ',', 'REG_EXTENDED', '|', 'copts', ')', ';', '}', 'else', '{', 'if', '(', 'Z_TYPE_PP', '(', 'regex', ')', '==', 'IS_DOUBLE', ')', '{', '}', 'convert_to_string_ex', '(', 'regex', ')', ';', 'err', '=', 'regcomp', '(', '&', 're', ',', 'Z_STRVAL_PP', '(', 'regex', ')', ',', 'copts', ')', ';', '}', 'if', '(', 'err', ')', '{', 'php_ereg_eprint', '(', 'err', ',', '&', 're', ')', ';', 'RETURN_FALSE', ';', '}', 'string', '=', 'estrndup', '(', 'findin', ',', 'findin_len', ')', ';', 'subs', '=', '(', 'regmatch_t', '*', ')', 'ecalloc', '(', 'sizeof', '(', 'regmatch_t', ')', ',', 're', '.', 're_nsub', '+', '1', ')', ';', 'err', '=', 'regexec', '(', '&', 're', ',', 'string', ',', 're', '.', 're_nsub', '+', '1', ',', 'subs', ',', '0', ')', ';', 'if', '(', 'err', '&&', 'err', '!=', 'REG_NOMATCH', ')', '{', 'php_ereg_eprint', '(', 'err', ',', '&', 're', ')', ';', 'regfree', '(', '&', 're', ')', ';', 'efree', '(', 'subs', ')', ';', 'RETURN_FALSE', ';', '}', 'match_len', '=', '1', ';', 'if', '(', 'array', '&&', 'err', '!=', 'REG_NOMATCH', ')', '{', 'match_len', '=', '(', 'int', ')', '(', 'subs', '[', '0', ']', '.', 'rm_eo', '-', 'subs', '[', '0', ']', '.', 'rm_so', ')', ';', 'string_len', '=', 'findin_len', '+', '1', ';', 'buf', '=', 'emalloc', '(', 'string_len', ')', ';', 'array_init', '(', '*', 'array', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<=', 're', '.', 're_nsub', ';', 'i', '++', ')', '{', 'start', '=', 'subs', '[', 'i', ']', '.', 'rm_so', ';', 'end', '=', 'subs', '[', 'i', ']', '.', 'rm_eo', ';', 'if', '(', 'start', '!=', '-', '1', '&&', 'end', '>', '0', '&&', 'start', '<', 'string_len', '&&', 'end', '<', 'string_len', '&&', 'start', '<', 'end', ')', '{', 'add_index_stringl', '(', '*', 'array', ',', 'i', ',', 'string', '+', 'start', ',', 'end', '-', 'start', ',', '1', ')', ';', '}', 'else', '{', 'add_index_bool', '(', '*', 'array', ',', 'i', ',', '0', ')', ';', '}', '}', 'efree', '(', 'buf', ')', ';', '}', 'efree', '(', 'subs', ')', ';', 'efree', '(', 'string', ')', ';', 'if', '(', 'err', '==', 'REG_NOMATCH', ')', '{', 'RETVAL_FALSE', ';', '}', 'else', '{', 'if', '(', 'match_len', '==', '0', ')', 'match_len', '=', '1', ';', 'RETVAL_LONG', '(', 'match_len', ')', ';', '}', 'regfree', '(', '&', 're', ')', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1078,"['bc_push_arg', '(', 'const', 'struct', 'buildcmd_control', '*', 'ctl', ',', 'struct', 'buildcmd_state', '*', 'state', ',', 'const', 'char', '*', 'arg', ',', 'size_t', 'len', ',', 'const', 'char', '*', 'prefix', ',', 'size_t', 'pfxlen', ',', 'int', 'initial_args', ')', '{', 'if', '(', '!initial_args', ')', '{', 'state', '->', 'todo', '=', '1', ';', '}', 'if', '(', 'arg', ')', '{', '/', '*', 'XXX_SOC', ':', 'if', 'do_exec', '(', ')', 'is', 'only', 'guaranteeed', 'to', 'free', 'up', '*', 'argument', ',', 'this', 'if', 'statement', 'may', 'need', 'to', 'become', 'a', 'while', 'loop', '.', '*', 'If', 'it', 'becomes', 'a', 'while', 'loop', ',', 'it', 'needs', 'not', 'to', 'be', 'an', '*', 'loop', '.', '.', '.', 'if', '(', 'state', '->', 'cmd_argv_chars', '+', 'len', '>', 'ctl', '->', 'arg_max', ')', '{', 'if', '(', 'initial_args', '||', 'state', '->', 'cmd_argc', '==', 'ctl', '->', 'initial_argc', ')', 'error', '(', '1', ',', '0', ',', '_', '(', '""""', ')', ')', ';', 'if', '(', 'ctl', '->', '||', '(', 'ctl', '->', 'exit_if_size_exceeded', '&&', '(', 'ctl', '->', 'lines_per_exec', '||', 'ctl', '->', 'args_per_exec', ')', ')', ')', 'error', '(', '1', ',', '0', ',', '_', '(', '""""', ')', ')', ';', 'do_exec', '(', 'ctl', ',', 'state', ')', ';', '}', '/', '*', 'XXX_SOC', ':', 'this', 'if', 'may', 'also', 'need', 'to', 'become', 'a', 'while', 'loop', '.', 'fact', 'perhaps', 'it', 'is', 'best', 'to', 'factor', 'this', 'out', 'into', 'a', 'function', 'which', 'ceeps', 'calling', 'the', 'exec', 'handler', 'until', 'there', 'space', 'for', 'our', 'next', 'argument', '.', 'Each', 'exec', 'will', 'free', 'one', '""""', 'so', 'the', 'main', 'thing', 'to', 'worry', 'about', 'repeated', 'exec', 'for', 'would', 'be', 'total', 'argument', 'length', '.', 'if', '(', 'bc_argc_limit_reached', '(', 'initial_args', ',', 'ctl', ',', 'state', ')', ')', 'do_exec', '(', 'ctl', ',', 'state', ')', ';', '}', 'if', '(', 'state', '->', 'cmd_argc', '>=', 'state', '->', 'cmd_argv_alloc', ')', '{', 'if', '(', '!state', '->', 'cmd_argv', ')', '{', 'state', '->', 'cmd_argv_alloc', '=', '64', ';', 'state', '->', 'cmd_argv', '=', 'xmalloc', '(', 'sizeof', '(', 'char', '*', ')', '*', 'state', '->', 'cmd_argv_alloc', ')', ';', '}', '{', 'state', '->', 'cmd_argv_alloc', '*=', '2', ';', 'state', '->', 'cmd_argv', '=', 'xrealloc', '(', 'state', '->', 'cmd_argv', ',', 'sizeof', '(', 'char', '*', ')', '*', 'state', '->', 'cmd_argv_alloc', ')', ';', '}', '}', 'if', '(', '!arg', ')', 'state', '->', 'cmd_argv', '[', 'state', '->', 'cmd_argc', '++', ']', '=', 'NULL', ';', '{', 'state', '->', 'cmd_argv', '[', 'state', '->', 'cmd_argc', '++', ']', '=', 'state', '->', 'argbuf', '+', 'state', '->', 'cmd_argv_chars', ';', 'if', '(', 'prefix', ')', '{', 'strcpy', '(', 'state', '->', 'argbuf', '+', 'state', '->', 'cmd_argv_chars', ',', 'prefix', ')', ';', 'state', '->', 'cmd_argv_chars', '+=', 'pfxlen', ';', '}', 'strcpy', '(', 'state', '->', 'argbuf', '+', 'state', '->', 'cmd_argv_chars', ',', 'arg', ')', ';', 'state', '->', 'cmd_argv_chars', '+=', 'len', ';', '/', '*', 'If', 'we', 'have', 'now', 'collected', 'enough', 'arguments', ',', '*', 'do', 'the', 'exec', 'immediately', '.', 'This', 'must', '*', 'conditional', 'on', 'arg', '!=', 'NULL', ',', 'since', 'do_exec', '(', ')', '*', 'actually', 'calls', 'bc_push_arg', '(', 'ctl', ',', 'state', ',', 'NULL', ',', '0', ',', 'false', ')', '.', 'if', '(', 'bc_argc_limit_reached', '(', 'initial_args', ',', 'ctl', ',', 'state', ')', ')', 'do_exec', '(', 'ctl', ',', 'state', ')', ';', '}', 'if', '(', 'initial_args', ')', '{', 'state', '->', 'cmd_initial_argv_chars', '=', 'state', '->', 'cmd_argv_chars', ';', '}', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1079,"['_ecore_con_server_timer_update', '(', 'Ecore_Con_Server', '*', 'svr', ')', '{', 'if', '(', 'svr', '->', 'disconnect_time', ')', '{', 'if', '(', 'svr', '->', 'disconnect_time', '>', '0', ')', '{', 'if', '(', 'svr', '->', 'until_deletion', ')', 'ecore_timer_interval_set', '(', 'svr', '->', 'until_deletion', ',', 'svr', '->', 'disconnect_time', ')', ';', 'svr', '->', 'until_deletion', '=', 'ecore_timer_add', '(', 'svr', '->', 'disconnect_time', ',', '(', 'Ecore_Task_Cb', ')', '_ecore_con_server_timer', ',', 'svr', ')', ';', '}', 'else', 'if', '(', 'svr', '->', 'until_deletion', ')', '{', 'ecore_timer_del', '(', 'svr', '->', 'until_deletion', ')', ';', 'svr', '->', 'until_deletion', '=', 'NULL', ';', '}', '}', '{', 'if', '(', 'svr', '->', 'until_deletion', ')', '{', 'ecore_timer_del', '(', 'svr', '->', 'until_deletion', ')', ';', 'svr', '->', 'until_deletion', '=', 'NULL', ';', '}', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1080,"['caml_hash_mix_float', '(', 'uint32', 'hash', ',', 'float', 'd', ')', '{', 'union', '{', 'float', 'f', ';', 'uint32', 'i', ';', '}', 'u', ';', 'uint32', 'n', ';', 'u', '.', 'f', '=', 'd', ';', 'n', '=', 'u', '.', 'i', ';', 'if', '(', '(', 'n', '&', '0x7F800000', ')', '==', '0x7F800000', '&&', '(', 'n', '&', '0x007FFFFF', ')', '!=', '0', ')', '{', 'n', '=', '0x7F800001', ';', '}', 'else', 'if', '(', 'n', '==', '0x80000000', ')', '{', 'n', '=', '0', ';', '}', 'MIX', '(', 'hash', ',', 'n', ')', ';', 'return', 'hash', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1081,"['io_stats_writev', '(', 'call_frame_t', '*', 'frame', ',', 'xlator_t', '*', 'this', ',', 'fd_t', '*', 'fd', ',', 'struct', 'iovec', '*', 'vector', ',', 'int32_t', 'count', ',', 'off_t', 'offset', ',', 'struct', 'iobref', '*', 'iobref', ')', '{', 'int', 'len', '=', '0', ';', 'if', '(', 'fd', '->', 'inode', ')', 'frame', '->', 'local', '=', 'fd', '->', 'inode', ';', 'len', '=', 'iov_length', '(', 'vector', ',', 'count', ')', ';', 'BUMP_WRITE', '(', 'fd', ',', 'len', ')', ';', 'START_FOP_LATENCY', '(', 'frame', ')', ';', 'STACK_WIND', '(', 'frame', ',', 'io_stats_writev_cbk', ',', 'FIRST_CHILD', '(', 'this', ')', ',', 'FIRST_CHILD', '(', 'this', ')', '->', 'fops', '->', 'writev', ',', 'fd', ',', 'vector', ',', 'count', ',', 'offset', ',', 'iobref', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1082,"['xg_apply_userdef_op_fn', '(', 'OpType', 'op', ',', 'long', 'a', ')', '{', 'switch', '(', 'op', ')', '{', 'case', 'OP_OPERAND_F32MINUS', ':', 'return', 'operand_function_F32MINUS', '(', 'a', ')', ';', 'case', 'OP_OPERAND_LOW8', ':', 'return', 'operand_function_LOW8', '(', 'a', ')', ';', 'case', 'OP_OPERAND_HI24S', ':', 'return', 'operand_function_HI24S', '(', 'a', ')', ';', 'case', 'OP_OPERAND_LOW16U', ':', 'return', 'operand_function_LOW16U', '(', 'a', ')', ';', 'case', 'OP_OPERAND_HI16U', ':', 'return', 'operand_function_HI16U', '(', 'a', ')', ';', 'default', ':', 'break', ';', '}', 'return', 'FALSE', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1083,"['will_collide_pp', '(', 'vec3d', '*', 'p0', ',', 'vec3d', '*', 'p1', ',', 'float', 'radius', ',', 'object', '*', 'big_objp', ',', 'vec3d', '*', 'collision_point', ')', '{', 'mc_info\tmc', ';', 'polymodel', '*', 'pm', '=', 'model_get', '(', 'Ship_info', '[', 'Ships', '[', 'big_objp', '->', 'instance', ']', '.', 'ship_info_index', ']', '.', 'model_num', ')', ';', 'mc', '.', 'model_instance_num', '=', '-', '1', ';', 'mc', '.', 'model_num', '=', 'pm', '->', 'id', ';', '\t\t\t\t', '/', '/', 'Fill', 'in', 'the', 'model', 'to', 'mc', '.', 'orient', '=', '&', 'big_objp', '->', 'orient', ';', '\t\t\t', '/', '/', 'The', ""object's"", 'mc', '.', 'pos', '=', '&', 'big_objp', '->', 'pos', ';', '\t\t\t\t\t', '/', '/', 'The', ""object's"", 'mc', '.', 'p0', '=', 'p0', ';', '\t\t\t\t\t\t\t\t\t\t', '/', '/', 'Point', '1', 'of', 'ray', 'to', 'mc', '.', 'p1', '=', 'p1', ';', 'mc', '.', 'flags', '=', 'MC_CHECK_MODEL', '|', 'MC_CHECK_SPHERELINE', '|', 'MC_SUBMODEL', ';', '\t\t\t\t\t', '/', '/', 'mc', '.', 'radius', '=', 'radius', ';', '/', '/', 'Only', 'check', 'the', '2nd', 'lowest', 'hull', 'mc', '.', 'submodel_num', '=', 'pm', '->', 'detail', '[', '0', ']', ';', 'model_collide', '(', '&', 'mc', ')', ';', 'if', '(', 'mc', '.', 'num_hits', ')', '*', 'collision_point', '=', 'mc', '.', 'hit_point_world', ';', 'return', 'mc', '.', 'num_hits', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1084,"['getWhere', '(', 'ImageWindow', '*', 'iw', ',', 'char', '*', 'oldWhere', ')', '{', 'Object', 'where', ';', 'if', '(', 'oldWhere', ')', '{', 'char', 'buf', '[', '1024', ']', ';', 'sprintf', '(', 'buf', ',', '""""', ',', 'iw', '->', 'where', ',', 'oldWhere', ')', ';', 'where', '=', '(', 'Object', ')', 'DXNewString', '(', 'buf', ')', ';', '}', 'where', '=', '(', 'Object', ')', 'DXNewString', '(', 'iw', '->', 'where', ')', ';', 'return', 'where', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1085,"['Curl_cookie_getlist', '(', 'struct', 'CookieInfo', '*', 'c', ',', 'const', 'char', '*', 'host', ',', 'const', 'char', '*', 'path', ',', 'bool', 'secure', ')', '{', 'struct', 'Cookie', '*', 'newco', ';', 'struct', 'Cookie', '*', 'co', ';', 'time_t', 'now', '=', 'time', '(', 'NULL', ')', ';', 'struct', 'Cookie', '*', 'mainco', '=', 'NULL', ';', 'size_t', 'matches', '=', '0', ';', 'if', '(', '!c', '||', '!c', '->', 'cookies', ')', 'remove_expired', '(', 'c', ')', ';', 'co', '=', 'c', '->', 'cookies', ';', 'while', '(', 'co', ')', '{', '/', '*', 'only', 'process', 'this', 'cookie', 'if', 'it', 'is', 'not', 'expired', 'or', 'had', 'no', 'date', 'AND', 'that', 'if', 'the', 'cookie', 'requires', ""we're"", 'secure', 'we', 'must', 'if', '(', '(', '!co', '->', 'expires', '||', '(', 'co', '->', 'expires', '>', 'now', ')', ')', '&&', '(', 'co', '->', 'secure', '?', 'secure', ':', 'TRUE', ')', ')', '{', 'if', '(', '!co', '->', 'domain', '||', '(', 'co', '->', 'tailmatch', '&&', 'tailmatch', '(', 'co', '->', 'domain', ',', 'host', ')', ')', '||', '(', '!co', '->', 'tailmatch', '&&', 'Curl_raw_equal', '(', 'host', ',', 'co', '->', 'domain', ')', ')', ')', '{', '/', '*', 'the', 'right', 'part', 'of', 'the', 'host', 'matches', 'the', 'domain', 'stuff', 'in', '/', '*', 'now', 'check', 'the', 'left', 'part', 'of', 'the', 'path', 'with', 'the', 'cookies', 'if', '(', '!co', '->', 'spath', '||', 'pathmatch', '(', 'co', '->', 'spath', ',', 'path', ')', ')', '{', '/', '*', 'and', 'now', ',', 'we', 'know', 'this', 'is', 'a', 'match', 'and', 'we', 'should', 'create', 'newco', '=', 'malloc', '(', 'sizeof', '(', 'struct', 'Cookie', ')', ')', ';', 'if', '(', 'newco', ')', '{', 'memcpy', '(', 'newco', ',', 'co', ',', 'sizeof', '(', 'struct', 'Cookie', ')', ')', ';', 'newco', '->', 'next', '=', 'mainco', ';', 'mainco', '=', 'newco', ';', 'matches', '++', ';', '}', 'else', '{', 'fail', ':', 'while', '(', 'mainco', ')', '{', 'co', '=', 'mainco', '->', 'next', ';', 'free', '(', 'mainco', ')', ';', 'mainco', '=', 'co', ';', '}', 'return', 'NULL', ';', '}', '}', '}', '}', 'co', '=', 'co', '->', 'next', ';', '}', 'if', '(', 'matches', ')', '{', '/', '*', 'Now', 'we', 'need', 'to', 'make', 'sure', 'that', 'if', 'there', 'is', 'a', 'name', 'appearing', 'more', 'once', ',', 'the', 'longest', 'specified', 'path', 'version', 'comes', 'first', '.', 'To', 'make', 'struct', 'Cookie', '*', '*', 'array', ';', 'size_t', 'i', ';', 'array', '=', 'malloc', '(', 'sizeof', '(', 'struct', 'Cookie', '*', ')', '*', 'matches', ')', ';', 'if', '(', '!array', ')', 'goto', 'fail', ';', 'co', '=', 'mainco', ';', 'for', '(', 'i', '=', '0', ';', 'co', ';', 'co', '=', 'co', '->', 'next', ')', 'array', '[', 'i', '++', ']', '=', 'co', ';', 'qsort', '(', 'array', ',', 'matches', ',', 'sizeof', '(', 'struct', 'Cookie', '*', ')', ',', 'cookie_sort', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'matches', '-', '1', ';', 'i', '++', ')', 'array', '[', 'i', ']', '->', 'next', '=', 'array', '[', 'i', '+', '1', ']', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1086,"['caml_lazy_make_forward', '(', 'value', 'v', ')', '{', 'CAMLparam1', '(', 'v', ')', ';', 'CAMLlocal1', '(', 'res', ')', ';', 'res', '=', 'caml_alloc_small', '(', '1', ',', 'Forward_tag', ')', ';', 'Field', '(', 'res', ',', '0', ')', '=', 'v', ';', 'CAMLreturn', '(', 'res', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1087,"['parseContentType', '(', 'String', '&', 'params', ',', 'MaterialScriptContext', '&', 'context', ')', '{', 'StringVector', 'vecparams', '=', 'StringUtil', ':', ':', 'tokenise', '(', 'params', ',', '""""', ')', ';', 'if', '(', 'vecparams', '.', 'empty', '(', ')', ')', '{', 'logParseError', '(', '""""', ',', 'context', ')', ';', 'return', 'false', ';', '}', 'String', '&', 'paramType', '=', 'vecparams', '[', '0', ']', ';', 'if', '(', 'paramType', '==', '""""', ')', '{', 'context', '.', 'textureUnit', '->', 'setContentType', '(', 'TextureUnitState', ':', ':', 'CONTENT_NAMED', ')', ';', '}', 'else', 'if', '(', 'paramType', '==', '""""', ')', '{', 'context', '.', 'textureUnit', '->', 'setContentType', '(', 'TextureUnitState', ':', ':', 'CONTENT_SHADOW', ')', ';', '}', 'else', 'if', '(', 'paramType', '==', '""""', ')', '{', 'context', '.', 'textureUnit', '->', 'setContentType', '(', 'TextureUnitState', ':', ':', 'CONTENT_COMPOSITOR', ')', ';', 'if', '(', 'vecparams', '.', 'size', '(', ')', '==', '3', ')', '{', 'context', '.', 'textureUnit', '->', 'setCompositorReference', '(', 'vecparams', '[', '1', ']', ',', 'vecparams', '[', '2', ']', ')', ';', '}', 'else', 'if', '(', 'vecparams', '.', 'size', '(', ')', '==', '4', ')', '{', 'context', '.', 'textureUnit', '->', 'setCompositorReference', '(', 'vecparams', '[', '1', ']', ',', 'vecparams', '[', '2', ']', ',', 'StringConverter', ':', ':', 'parseUnsignedInt', '(', 'vecparams', '[', '3', ']', ')', ')', ';', '}', '{', 'logParseError', '(', '""""', ',', 'context', ')', ';', '}', '}', '{', 'logParseError', '(', '""""', '+', 'paramType', ',', 'context', ')', ';', '}', 'return', 'false', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1088,"['MGD77_Path_Init', '(', 'struct', 'MGD77_CONTROL', '*', 'F', ')', '{', 'size_t', 'n_alloc', '=', 'GMT_SMALL_CHUNK', ';', 'char', 'file', '[', 'BUFSIZ', ']', ',', 'line', '[', 'BUFSIZ', ']', ';', 'FILE', '*', 'fp', '=', 'NULL', ';', 'MGD77_Set_Home', '(', 'F', ')', ';', 'sprintf', '(', 'file', ',', '""""', ',', 'F', '->', 'MGD77_HOME', ')', ';', 'F', '->', 'n_MGD77_paths', '=', '0', ';', 'if', '(', '(', 'fp', '=', 'GMT_fopen', '(', 'file', ',', '""""', ')', ')', '==', 'NULL', ')', '{', 'fprintf', '(', 'stderr', ',', '""""', ',', 'GMT_program', ',', 'file', ')', ';', 'fprintf', '(', 'stderr', ',', '""""', ',', 'GMT_program', ',', 'F', '->', 'MGD77_HOME', ')', ';', 'F', '->', 'MGD77_datadir', '=', '(', 'char', '*', '*', ')', 'GMT_memory', '(', 'VNULL', ',', '1', ',', 'sizeof', '(', 'char', '*', ')', ',', '""""', ')', ';', 'F', '->', 'MGD77_datadir', '[', '0', ']', '=', 'GMT_memory', '(', 'VNULL', ',', '(', 'size_t', ')', '1', ',', '(', 'size_t', ')', '(', 'strlen', '(', 'F', '->', 'MGD77_HOME', ')', '+', '1', ')', ',', '""""', ')', ';', 'strcpy', '(', 'F', '->', 'MGD77_datadir', '[', '0', ']', ',', 'F', '->', 'MGD77_HOME', ')', ';', 'F', '->', 'n_MGD77_paths', '=', '1', ';', 'return', ';', '}', 'F', '->', 'MGD77_datadir', '=', '(', 'char', '*', '*', ')', 'GMT_memory', '(', 'VNULL', ',', 'n_alloc', ',', 'sizeof', '(', 'char', '*', ')', ',', '""""', ')', ';', 'while', '(', 'GMT_fgets', '(', 'line', ',', 'BUFSIZ', ',', 'fp', ')', ')', '{', 'GMT_chop', '(', 'line', ')', ';', '#ifdef', 'DOS_path_fix', '(', 'line', ')', ';', 'F', '->', 'MGD77_datadir', '[', 'F', '->', 'n_MGD77_paths', ']', '=', 'GMT_memory', '(', 'VNULL', ',', '(', 'size_t', ')', '1', ',', '(', 'size_t', ')', '(', 'strlen', '(', 'line', ')', '+', '1', ')', ',', '""""', ')', ';', 'strcpy', '(', 'F', '->', 'MGD77_datadir', '[', 'F', '->', 'n_MGD77_paths', ']', ',', 'line', ')', ';', 'F', '->', 'n_MGD77_paths', '++', ';', 'if', '(', 'F', '->', 'n_MGD77_paths', '==', '(', 'int', ')', 'n_alloc', ')', '{', 'n_alloc', '<<=', '1', ';', 'F', '->', 'MGD77_datadir', '=', '(', 'char', '*', '*', ')', 'GMT_memory', '(', '(', 'void', '*', ')', 'F', '->', 'MGD77_datadir', ',', 'n_alloc', ',', 'sizeof', '(', 'char', '*', ')', ',', '""""', ')', ';', '}', '}', 'GMT_fclose', '(', 'fp', ')', ';', 'F', '->', 'MGD77_datadir', '=', '(', 'char', '*', '*', ')', 'GMT_memory', '(', '(', 'void', '*', ')', 'F', '->', 'MGD77_datadir', ',', '(', 'size_t', ')', 'F', '->', 'n_MGD77_paths', ',', 'sizeof', '(', 'char', '*', ')', ',', '""""', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1089,"['restore_custom_agacolors', '(', 'uae_u8', '*', 'src', ')', '{', 'int', 'i', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', '256', ';', 'i', '++', ')', '{', '#ifdef', 'uae_u32', 'v', '=', 'RL', ';', 'color_regs_aga_genlock', '[', 'i', ']', '=', '0', ';', 'if', '(', 'v', '&', '0x80000000', ')', 'color_regs_aga_genlock', '[', 'i', ']', '=', '1', ';', 'v', '&=', '0x00ffffff', ';', 'current_colors', '.', 'color_regs_aga', '[', 'i', ']', '=', 'v', ';', 'RL', ';', '}', 'return', 'src', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1090,"['perform_c2', '(', 'InfAdoptedOperation', '*', '*', 'begin', ',', 'InfAdoptedOperation', '*', '*', 'end', ',', 'test_result', '*', 'result', ')', '{', 'InfAdoptedOperation', '*', '*', '_1', ';', 'InfAdoptedOperation', '*', '*', '_2', ';', 'InfAdoptedOperation', '*', '*', '_3', ';', 'for', '(', '_1', '=', 'begin', ';', '_1', '!=', 'end', ';', '++', '_1', ')', '{', 'for', '(', '_2', '=', 'begin', ';', '_2', '!=', 'end', ';', '++', '_2', ')', '{', 'for', '(', '_3', '=', 'begin', ';', '_3', '!=', 'end', ';', '++', '_3', ')', '{', 'if', '(', '_1', '!=', '_2', '&&', '_1', '!=', '_3', '&&', '_2', '!=', '_3', ')', '{', '++', 'result', '->', 'total', ';', 'if', '(', 'test_c2', '(', '*', '_1', ',', '*', '_2', ',', '*', '_3', ',', 'cid', '(', '_1', ',', '_2', ')', ',', 'cid', '(', '_1', ',', '_3', ')', ',', 'cid', '(', '_2', ',', '_3', ')', ')', ')', '++', 'result', '->', 'passed', ';', '}', '}', '}', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1091,"['adf4350_read', '(', 'struct', 'iio_dev', '*', 'indio_dev', ',', 'uintptr_t', 'private', ',', 'const', 'struct', 'iio_chan_spec', '*', 'chan', ',', 'char', '*', 'buf', ')', '{', 'struct', 'adf4350_state', '*', 'st', '=', 'iio_priv', '(', 'indio_dev', ')', ';', 'unsigned', 'long', 'long', 'val', ';', 'int', 'ret', '=', '0', ';', 'mutex_lock', '(', '&', 'indio_dev', '->', 'mlock', ')', ';', 'switch', '(', '(', 'u32', ')', 'private', ')', '{', 'case', 'ADF4350_FREQ', ':', 'val', '=', '(', 'u64', ')', '(', '(', 'st', '->', 'r0_int', '*', 'st', '->', 'r1_mod', ')', '+', 'st', '->', 'r0_fract', ')', '*', '(', 'u64', ')', 'st', '->', 'fpfd', ';', 'do_div', '(', 'val', ',', 'st', '->', 'r1_mod', '*', '(', '1', '<<', 'st', '->', 'r4_rf_div_sel', ')', ')', ';', 'if', '(', 'gpio_is_valid', '(', 'st', '->', 'pdata', '->', 'gpio_lock_detect', ')', ')', 'if', '(', '!gpio_get_value', '(', 'st', '->', 'pdata', '->', 'gpio_lock_detect', ')', ')', '{', 'dev_dbg', '(', '&', 'st', '->', 'spi', '->', 'dev', ',', '""""', ')', ';', 'ret', '=', '-', 'EBUSY', ';', '}', 'break', ';', 'case', 'ADF4350_FREQ_REFIN', ':', 'if', '(', 'st', '->', 'clk', ')', 'st', '->', 'clkin', '=', 'clk_get_rate', '(', 'st', '->', 'clk', ')', ';', 'val', '=', 'st', '->', 'clkin', ';', 'break', ';', 'case', 'ADF4350_FREQ_RESOLUTION', ':', 'val', '=', 'st', '->', 'chspc', ';', 'break', ';', 'case', 'ADF4350_PWRDOWN', ':', 'val', '=', '!!', '(', 'st', '->', 'regs', '[', 'ADF4350_REG2', ']', '&', 'ADF4350_REG2_POWER_DOWN_EN', ')', ';', 'break', ';', 'default', ':', 'ret', '=', '-', 'EINVAL', ';', 'val', '=', '0', ';', '}', 'mutex_unlock', '(', '&', 'indio_dev', '->', 'mlock', ')', ';', 'return', 'ret', '<', '0', '?', 'ret', ':', 'sprintf', '(', 'buf', ',', '""""', ',', 'val', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1092,"['tsi721_irqhandler', '(', 'int', 'irq', ',', 'void', '*', 'ptr', ')', '{', 'struct', 'rio_mport', '*', 'mport', '=', '(', 'struct', 'rio_mport', '*', ')', 'ptr', ';', 'struct', 'tsi721_device', '*', 'priv', '=', 'mport', '->', 'priv', ';', 'u32', 'dev_int', ';', 'u32', 'dev_ch_int', ';', 'u32', 'intval', ';', 'u32', 'ch_inte', ';', 'if', '(', 'priv', '->', 'flags', '&', 'TSI721_USING_MSI', ')', 'iowrite32', '(', '0', ',', 'priv', '->', 'regs', '+', 'TSI721_DEV_INTE', ')', ';', 'dev_int', '=', 'ioread32', '(', 'priv', '->', 'regs', '+', 'TSI721_DEV_INT', ')', ';', 'if', '(', '!dev_int', ')', 'return', 'IRQ_NONE', ';', 'dev_ch_int', '=', 'ioread32', '(', 'priv', '->', 'regs', '+', 'TSI721_DEV_CHAN_INT', ')', ';', 'if', '(', 'dev_int', '&', 'TSI721_DEV_INT_SR2PC_CH', ')', '{', 'if', '(', 'dev_ch_int', '&', 'TSI721_INT_SR2PC_CHAN', '(', 'IDB_QUEUE', ')', ')', '{', 'intval', '=', 'ioread32', '(', 'priv', '->', 'regs', '+', 'TSI721_SR_CHINT', '(', 'IDB_QUEUE', ')', ')', ';', 'if', '(', 'intval', '&', 'TSI721_SR_CHINT_IDBQRCV', ')', 'tsi721_dbell_handler', '(', 'mport', ')', ';', 'dev_info', '(', '&', 'priv', '->', 'pdev', '->', 'dev', ',', '""""', ',', 'intval', ')', ';', 'iowrite32', '(', 'intval', ',', 'priv', '->', 'regs', '+', 'TSI721_SR_CHINT', '(', 'IDB_QUEUE', ')', ')', ';', 'ioread32', '(', 'priv', '->', 'regs', '+', 'TSI721_SR_CHINT', '(', 'IDB_QUEUE', ')', ')', ';', '}', '}', 'if', '(', 'dev_int', '&', 'TSI721_DEV_INT_SMSG_CH', ')', '{', 'int', 'ch', ';', '/', '*', '*', 'Service', 'channel', 'interrupts', 'from', 'Messaging', 'ch_inte', '=', 'ioread32', '(', 'priv', '->', 'regs', '+', 'TSI721_DEV_CHAN_INTE', ')', ';', 'ch_inte', '&=', '~', '(', 'dev_ch_int', '&', 'TSI721_INT_IMSG_CHAN_M', ')', ';', 'iowrite32', '(', 'ch_inte', ',', 'priv', '->', 'regs', '+', 'TSI721_DEV_CHAN_INTE', ')', ';', '/', '*', '*', 'Process', 'Inbound', 'Message', 'interrupt', 'for', 'each', 'for', '(', 'ch', '=', '4', ';', 'ch', '<', 'RIO_MAX_MBOX', '+', '4', ';', 'ch', '++', ')', '{', 'if', '(', '!', '(', 'dev_ch_int', '&', 'TSI721_INT_IMSG_CHAN', '(', 'ch', ')', ')', ')', 'continue', ';', 'tsi721_imsg_handler', '(', 'priv', ',', 'ch', ')', ';', '}', '}', 'ch_inte', '=', 'ioread32', '(', 'priv', '->', 'regs', '+', 'TSI721_DEV_CHAN_INTE', ')', ';', 'ch_inte', '&=', '~', '(', 'dev_ch_int', '&', 'TSI721_INT_OMSG_CHAN_M', ')', ';', 'iowrite32', '(', 'ch_inte', ',', 'priv', '->', 'regs', '+', 'TSI721_DEV_CHAN_INTE', ')', ';', '/', '*', '*', 'Process', 'Outbound', 'Message', 'interrupts', 'for', 'each', 'for', '(', 'ch', '=', '0', ';', 'ch', '<', 'RIO_MAX_MBOX', ';', 'ch', '++', ')', '{', 'if', '(', '!', '(', 'dev_ch_int', '&', 'TSI721_INT_OMSG_CHAN', '(', 'ch', ')', ')', ')', 'continue', ';', 'tsi721_omsg_handler', '(', 'priv', ',', 'ch', ')', ';', '}', '}', '}', 'if', '(', 'dev_int', '&', 'TSI721_DEV_INT_SRIO', ')', '{', 'intval', '=', 'ioread32', '(', 'priv', '->', 'regs', '+', 'TSI721_RIO_EM_INT_STAT', ')', ';', 'if', '(', 'intval', '&', 'TSI721_RIO_EM_INT_STAT_PW_RX', ')', 'tsi721_pw_handler', '(', 'mport', ')', ';', '}', '#ifdef', 'if', '(', 'dev_int', '&', 'TSI721_DEV_INT_BDMA_CH', ')', '{', 'int', 'ch', ';', 'if', '(', 'dev_ch_int', '&', 'TSI721_INT_BDMA_CHAN_M', ')', '{', 'dev_dbg', '(', '&', 'priv', '->', 'pdev', '->', 'dev', ',', '""""', ',', 'dev_ch_int', ')', ';', 'for', '(', 'ch', '=', '0', ';', 'ch', '<', 'TSI721_DMA_MAXCH', ';', 'ch', '++', ')', '{', 'if', '(', '!', '(', 'dev_ch_int', '&', 'TSI721_INT_BDMA_CHAN', '(', 'ch', ')', ')', ')', 'continue', ';', 'tsi721_bdma_handler', '(', '&', 'priv', '->', 'bdma', '[', 'ch', ']', ')', ';', '}', '}', '}', 'if', '(', 'priv', '->', 'flags', '&', 'TSI721_USING_MSI', ')', '{', 'dev_int', '=', 'TSI721_DEV_INT_SR2PC_CH', '|', 'TSI721_DEV_INT_SRIO', '|', 'TSI721_DEV_INT_SMSG_CH', '|', 'TSI721_DEV_INT_BDMA_CH', ';', 'iowrite32', '(', 'dev_int', ',', 'priv', '->', 'regs', '+', 'TSI721_DEV_INTE', ')', ';', '}', 'return', 'IRQ_HANDLED', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1093,"['getFEN', '(', ')', '{', 'static', 'string', 'fen', ';', 'int', 'i', ',', 'j', ',', 'ec', ';', 'piece', 'p', ',', 'c', '=', 'EMPTY', ';', 'char', 'n', '=', '0', ';', 'fen', '=', '""""', ';', 'for', '(', 'i', '=', '7', ';', 'i', '>=', '0', ';', 'i', '--', ')', '{', 'ec', '=', '0', ';', 'for', '(', 'j', '=', '0', ';', 'j', '<', '8', ';', 'j', '++', ')', '{', 'p', '=', 'square', '[', 'j', ']', '[', 'i', ']', '&', 'PIECE_MASK', ';', 'c', '=', 'square', '[', 'j', ']', '[', 'i', ']', '&', 'COLOR_MASK', ';', 'if', '(', '(', 'p', '!=', 'EMPTY', ')', '&&', '(', 'ec', ')', ')', '{', 'fen', '+=', '(', 'char', ')', '(', ""''"", '+', 'ec', ')', ';', 'ec', '=', '0', ';', '}', 'switch', '(', 'p', ')', '{', 'case', 'PAWN', ':', 'n', '=', ""''"", ';', 'break', ';', 'case', 'ROOK', ':', 'n', '=', ""''"", ';', 'break', ';', 'case', 'KNIGHT', ':', 'n', '=', ""''"", ';', 'break', ';', 'case', 'BISHOP', ':', 'n', '=', ""''"", ';', 'break', ';', 'case', 'QUEEN', ':', 'n', '=', ""''"", ';', 'break', ';', 'case', 'KING', ':', 'n', '=', ""''"", ';', 'break', ';', 'case', 'EMPTY', ':', '++', 'ec', ';', 'n', '=', '0', ';', 'break', ';', '}', 'if', '(', 'n', ')', '{', 'if', '(', 'c', '==', 'BLACK', ')', 'n', '=', '(', 'char', ')', 'tolower', '(', 'n', ')', ';', 'fen', '+=', 'n', ';', '}', '}', 'if', '(', 'ec', ')', 'fen', '+=', '(', 'char', ')', '(', ""''"", '+', 'ec', ')', ';', 'if', '(', 'i', '>', '0', ')', 'fen', '+=', ""''"", ';', '}', 'if', '(', 'sidehint', ')', 'fen', '+=', '""""', ';', 'fen', '+=', '""""', ';', 'ec', '=', '0', ';', 'if', '(', 'maycastle', '[', '0', ']', ')', '{', 'fen', '+=', '""""', ';', '++', 'ec', ';', '}', 'if', '(', 'maycastle', '[', '2', ']', ')', '{', 'fen', '+=', '""""', ';', '++', 'ec', ';', '}', 'if', '(', 'maycastle', '[', '1', ']', ')', '{', 'fen', '+=', '""""', ';', '++', 'ec', ';', '}', 'if', '(', 'maycastle', '[', '3', ']', ')', '{', 'fen', '+=', '""""', ';', '++', 'ec', ';', '}', 'if', '(', '!ec', ')', 'fen', '+=', '""""', ';', 'fen', '+=', '""""', ';', 'if', '(', 'ep', '[', '0', ']', '>=', '0', ')', '{', 'fen', '+=', ""''"", '+', 'ep', '[', '0', ']', ';', 'fen', '+=', ""''"", '+', 'ep', '[', '1', ']', ';', '}', 'else', '{', 'fen', '+=', ""''"", ';', '}', 'fen', '+=', '""""', ';', 'fen', '+=', '""""', ';', 'return', '(', 'fen', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1094,"['tr_ilg', '(', 'saidx_t', 'n', ')', '{', '#if', 'defined', '(', 'BUILD_DIVSUFSORT64', ')', 'return', '(', 'n', '>>', '32', ')', '?', '(', '(', 'n', '>>', '48', ')', '?', '(', '(', 'n', '>>', '56', ')', '?', '56', '+', 'lg_table', '[', '(', 'n', '>>', '56', ')', '&', '0xff', ']', ':', '48', '+', 'lg_table', '[', '(', 'n', '>>', '48', ')', '&', '0xff', ']', ')', ':', '(', '(', 'n', '>>', '40', ')', '?', '40', '+', 'lg_table', '[', '(', 'n', '>>', '40', ')', '&', '0xff', ']', ':', '32', '+', 'lg_table', '[', '(', 'n', '>>', '32', ')', '&', '0xff', ']', ')', ')', ':', '(', '(', 'n', '&', '0xffff0000', ')', '?', '(', '(', 'n', '&', '0xff000000', ')', '?', '24', '+', 'lg_table', '[', '(', 'n', '>>', '24', ')', '&', '0xff', ']', ':', '16', '+', 'lg_table', '[', '(', 'n', '>>', '16', ')', '&', '0xff', ']', ')', ':', '(', '(', 'n', '&', '0x0000ff00', ')', '?', '8', '+', 'lg_table', '[', '(', 'n', '>>', '8', ')', '&', '0xff', ']', ':', '0', '+', 'lg_table', '[', '(', 'n', '>>', '0', ')', '&', '0xff', ']', ')', ')', ';', 'return', '(', 'n', '&', '0xffff0000', ')', '?', '(', '(', 'n', '&', '0xff000000', ')', '?', '24', '+', 'lg_table', '[', '(', 'n', '>>', '24', ')', '&', '0xff', ']', ':', '16', '+', 'lg_table', '[', '(', 'n', '>>', '16', ')', '&', '0xff', ']', ')', ':', '(', '(', 'n', '&', '0x0000ff00', ')', '?', '8', '+', 'lg_table', '[', '(', 'n', '>>', '8', ')', '&', '0xff', ']', ':', '0', '+', 'lg_table', '[', '(', 'n', '>>', '0', ')', '&', '0xff', ']', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1095,"['print_hindexed', '(', 'int', 'dtype', ',', 'struct', 'trdtype', '*', '*', 'dtrace', ',', 'int', 'nlev', ',', 'int', 'fl_idx', ')', '{', 'indent', '(', 'nlev', ')', ';', 'count', '=', '(', '*', 'dtrace', ')', '->', 'trd_count', ';', '++', '(', '*', 'dtrace', ')', ';', 'sprintf', '(', 'fmtbuf', ',', '""""', ',', 'dtbasic', '[', 'dtype', ']', ',', 'count', ')', ';', 'if', '(', 'obuf', ')', 'strcat', '(', 'obuf', ',', 'fmtbuf', ')', ';', 'else', 'printf', '(', '""""', ',', 'fmtbuf', ')', ';', 'colcount', '+=', 'strlen', '(', 'fmtbuf', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'count', ';', '++', 'i', ')', '{', 'sprintf', '(', 'fmtbuf', ',', '""""', ',', '(', '*', 'dtrace', ')', '->', 'trd_length', ',', 'DISP', '(', 'fl_idx', ',', '(', '*', 'dtrace', ')', '->', 'trd_disp', ')', ')', ';', 'if', '(', 'obuf', ')', 'strcat', '(', 'obuf', ',', 'fmtbuf', ')', ';', 'else', 'printf', '(', '""""', ',', 'fmtbuf', ')', ';', 'colcount', '+=', 'strlen', '(', 'fmtbuf', ')', ';', '++', '(', '*', 'dtrace', ')', ';', '}', 'nlifconst', '=', '1', ';', 'print_datatype', '(', 'dtrace', ',', 'nlev', '+', '1', ')', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1096,"['allGray', '(', ')', '{', '#ifndef', 'if', '(', 'depth', '(', ')', '==', '32', ')', '{', 'int', 'p', '=', 'width', '(', ')', '*', 'height', '(', ')', ';', 'QRgb', '*', 'b', '=', '(', 'QRgb', '*', ')', 'bits', '(', ')', ';', 'while', '(', 'p', '--', ')', 'if', '(', '!isGray', '(', '*', 'b', '++', ')', ')', 'return', 'false', ';', '#ifndef', '}', 'else', 'if', '(', 'depth', '(', ')', '==', '16', ')', '{', 'int', 'p', '=', 'width', '(', ')', '*', 'height', '(', ')', ';', 'ushort', '*', 'b', '=', '(', 'ushort', '*', ')', 'bits', '(', ')', ';', 'while', '(', 'p', '--', ')', 'if', '(', '!is16BitGray', '(', '*', 'b', '++', ')', ')', 'return', 'false', ';', '}', '#endif', '/', '/', '{', 'if', '(', '!data', '->', 'ctbl', ')', 'return', 'true', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'numColors', '(', ')', ';', 'i', '++', ')', 'if', '(', '!isGray', '(', 'data', '->', 'ctbl', '[', 'i', ']', ')', ')', 'return', 'false', ';', '}', 'return', 'false', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1097,"['ReadNodeTransformation', '(', 'Node', '*', 'pNode', ',', 'TransformType', 'pType', ')', '{', 'if', '(', 'mReader', '->', 'isEmptyElement', '(', ')', ')', 'return', ';', 'std', ':', ':', 'string', 'tagName', '=', 'mReader', '->', 'getNodeName', '(', ')', ';', 'Transform', 'tf', ';', 'tf', '.', 'mType', '=', 'pType', ';', '/', '/', 'read', 'int', 'indexSID', '=', 'TestAttribute', '(', '""""', ')', ';', 'if', '(', 'indexSID', '>=', '0', ')', 'tf', '.', 'mID', '=', 'mReader', '->', 'getAttributeValue', '(', 'indexSID', ')', ';', '/', '/', 'how', 'many', 'parameters', 'to', 'read', 'per', 'transformation', 'static', 'const', 'unsigned', 'int', 'sNumParameters', '[', ']', '=', '{', '9', ',', '4', ',', '3', ',', '3', ',', '7', ',', '16', '}', ';', 'const', 'char', '*', 'content', '=', 'GetTextContent', '(', ')', ';', '/', '/', 'read', 'as', 'many', 'parameters', 'and', 'store', 'in', 'the', 'for', '(', 'unsigned', 'int', 'a', '=', '0', ';', 'a', '<', 'sNumParameters', '[', 'pType', ']', ';', 'a', '++', ')', '{', '/', '/', 'read', 'a', 'content', '=', 'fast_atoreal_move', '<', 'float', '>', '(', 'content', ',', 'tf', '.', 'f', '[', 'a', ']', ')', ';', '/', '/', 'skip', 'whitespace', 'after', 'SkipSpacesAndLineEnd', '(', '&', 'content', ')', ';', '}', '/', '/', 'place', 'the', 'transformation', 'at', 'the', 'queue', 'of', 'the', 'pNode', '->', 'mTransforms', '.', 'push_back', '(', 'tf', ')', ';', '/', '/', 'and', 'consume', 'the', 'closing', 'TestClosing', '(', 'tagName', '.', 'c_str', '(', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1098,"['prefs_themes_free_names', '(', 'ThemesData', '*', 'tdata', ')', '{', 'GList', '*', 'names', ';', 'names', '=', 'tdata', '->', 'names', ';', 'while', '(', 'names', '!=', 'NULL', ')', '{', 'ThemeName', '*', 'tn', '=', '(', 'ThemeName', '*', ')', '(', 'names', '->', 'data', ')', ';', 'tn', '->', 'item', '=', 'NULL', ';', 'g_free', '(', 'tn', '->', 'name', ')', ';', 'g_free', '(', 'tn', ')', ';', 'names', '=', 'g_list_next', '(', 'names', ')', ';', '}', 'g_list_free', '(', 'names', ')', ';', 'tdata', '->', 'names', '=', 'NULL', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1099,"['aim_odc_connect', '(', 'aim_session_t', '*', 'sess', ',', 'const', 'char', '*', 'sn', ',', 'const', 'char', '*', 'addr', ',', 'const', 'fu8_t', '*', 'cookie', ')', '{', 'aim_conn_t', '*', 'newconn', ';', 'struct', 'aim_odc_intdata', '*', 'intdata', ';', 'if', '(', '!sess', '||', '!sn', ')', 'return', 'NULL', ';', 'if', '(', '!', '(', 'intdata', '=', 'calloc', '(', '1', ',', 'sizeof', '(', 'struct', 'aim_odc_intdata', ')', ')', ')', ')', 'return', 'NULL', ';', 'memcpy', '(', 'intdata', '->', 'cookie', ',', 'cookie', ',', '8', ')', ';', 'strncpy', '(', 'intdata', '->', 'sn', ',', 'sn', ',', 'sizeof', '(', 'intdata', '->', 'sn', ')', ')', ';', 'if', '(', 'addr', ')', 'strncpy', '(', 'intdata', '->', 'ip', ',', 'addr', ',', 'sizeof', '(', 'intdata', '->', 'ip', ')', ')', ';', 'if', '(', '!', '(', 'newconn', '=', 'aim_newconn', '(', 'sess', ',', 'AIM_CONN_TYPE_RENDEZVOUS', ',', 'addr', ')', ')', ')', '{', 'free', '(', 'intdata', ')', ';', 'return', 'NULL', ';', '}', 'newconn', '->', 'internal', '=', 'intdata', ';', 'newconn', '->', 'subtype', '=', 'AIM_CONN_SUBTYPE_OFT_DIRECTIM', ';', 'return', 'newconn', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1100,"['dump_entries', '(', 'ENTRY', '*', 'list', ')', '{', 'static', 'const', 'char', '*', 'flag_name', '[', ']', '=', '{', 'ENTRY', '*', 'entry', ';', 'char', 'addr_buf', '[', 'MAX_ATM_ADDR_LEN', '+', '1', ']', ';', 'char', 'qos_buf', '[', 'MAX_ATM_QOS_LEN', '+', '1', ']', ';', 'unsigned', 'char', '*', 'ipp', ';', 'int', 'i', ';', 'for', '(', 'entry', '=', 'list', ';', 'entry', ';', 'entry', '=', 'entry', '->', 'next', ')', '{', 'if', '(', '!entry', '->', 'addr', ')', 'strcpy', '(', 'addr_buf', ',', '""""', ')', ';', 'else', 'if', '(', 'atm2text', '(', 'addr_buf', ',', 'MAX_ATM_ADDR_LEN', '+', '1', ',', '(', 'struct', 'sockaddr', '*', ')', 'entry', '->', 'addr', ',', 'pretty', ')', '<', '0', ')', 'strcpy', '(', 'addr_buf', ',', '""""', ')', ';', 'ipp', '=', '(', 'unsigned', 'char', '*', ')', '&', 'entry', '->', 'ip', ';', '*', 'tmp', '=', '0', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', '16', ';', 'i', '++', ')', 'if', '(', 'entry', '->', 'flags', '&', '(', '1', '<<', 'i', ')', ')', '{', 'if', '(', '*', 'tmp', ')', 'strcat', '(', 'tmp', ',', '""""', ')', ';', 'strcat', '(', 'tmp', ',', 'flag_name', '[', 'i', ']', ')', ';', '}', 'output', '(', '""""', ',', 'ipp', '[', '0', ']', ',', 'ipp', '[', '1', ']', ',', 'ipp', '[', '2', ']', ',', 'ipp', '[', '3', ']', ',', 'entry_state_name', '[', 'entry', '->', 'state', ']', ',', 'addr_buf', ',', 'entry', '->', 'flags', ',', 'tmp', ')', ';', 'if', '(', 'entry', '->', 'itf', '&&', '!qos_equal', '(', '&', 'entry', '->', 'itf', '->', 'qos', ',', '&', 'entry', '->', 'qos', ')', ')', '{', 'if', '(', 'qos2text', '(', 'qos_buf', ',', 'sizeof', '(', 'qos_buf', ')', ',', '&', 'entry', '->', 'qos', ',', '0', ')', '<', '0', ')', 'strcpy', '(', 'qos_buf', ',', '""""', ')', ';', 'output', '(', '""""', ',', 'qos_buf', ')', ';', '}', 'if', '(', 'entry', '->', 'itf', '&&', 'entry', '->', 'sndbuf', '&&', 'entry', '->', 'sndbuf', '!=', 'entry', '->', 'itf', '->', 'sndbuf', ')', 'output', '(', '""""', ',', 'entry', '->', 'sndbuf', ')', ';', 'if', '(', 'entry', '->', 'notify', ')', '{', 'NOTIFY', '*', 'notify', ';', 'int', 'count', ';', 'count', '=', '0', ';', 'for', '(', 'notify', '=', 'entry', '->', 'notify', ';', 'notify', ';', 'notify', '=', 'notify', '->', 'next', ')', 'count', '++', ';', 'output', '(', '""""', ',', 'count', ',', 'count', '==', '1', '?', '""""', ':', '""""', ')', ';', '}', 'dump_vccs', '(', 'entry', '->', 'vccs', ')', ';', '}', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1101,"['vnl_bignum_from_string', '(', 'vnl_bignum', '&', 'b', ',', 'const', 'vcl_string', '&', 's', ')', '{', '/', '/', 'decimal', ':', '/', '/', 'Infinity', ':', 'if', '(', 'is_plus_inf', '(', 's', '.', 'c_str', '(', ')', ')', ')', 'b', '=', 'vnl_bignum', '(', '""""', ')', ';', 'else', 'if', '(', 'is_minus_inf', '(', 's', '.', 'c_str', '(', ')', ')', ')', 'b', '=', 'vnl_bignum', '(', '""""', ')', ';', 'b', '.', 'dtoBigNum', '(', 's', '.', 'c_str', '(', ')', ')', ';', '/', '/', 'convert', 'decimal', 'to', 'return', 'b', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1102,"['CopyStringUntilChar', '(', 'char', '*', 'text', ',', 'unsigned', 'out_len', ',', 'int', 'c', ',', 'char', '*', 'out', ')', '{', 'char', '*', 'endptr', ';', 'if', '(', '!ExtractUntilChar', '(', 'text', ',', 'c', ',', '&', 'endptr', ')', ')', 'return', 'NULL', ';', 'strncpy', '(', 'out', ',', 'text', ',', 'out_len', ')', ';', 'out', '[', 'out_len', '-', '1', ']', '=', ""''"", ';', '*', 'endptr', '=', 'c', ';', 'SkipWhileWhitespace', '(', '&', 'endptr', ',', 'c', ')', ';', 'return', 'endptr', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1103,"['finished', '(', 'struct', 'common', '*', 'common', ')', '{', 'DXlock', '(', '&', 'common', '->', 'DXlock', ',', '0', ')', ';', 'if', '(', '--', '(', 'common', '->', 'count', ')', '==', '0', ')', 'DXunlock', '(', '&', 'common', '->', 'done', ',', '0', ')', ';', 'DXunlock', '(', '&', 'common', '->', 'DXlock', ',', '0', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1104,"['_list_item_cb', '(', 'void', '*', 'data', '__UNUSED__', ',', 'Evas_Object', '*', 'obj', ',', 'void', '*', 'event_info', '__UNUSED__', ')', '{', 'Evas_Object', '*', 'ctxpopup', ',', '*', 'ic', ';', 'Elm_Object_Item', '*', 'it', ';', 'Evas_Coord', 'x', ',', 'y', ';', 'ctxpopup', '=', 'elm_ctxpopup_add', '(', 'obj', ')', ';', 'evas_object_smart_callback_add', '(', 'ctxpopup', ',', '""""', ',', '_dismissed', ',', 'NULL', ')', ';', 'ITEM_NEW', '(', 'ctxpopup', ',', '""""', ',', '""""', ')', ';', 'ITEM_NEW', '(', 'ctxpopup', ',', '""""', ',', '""""', ')', ';', 'ITEM_NEW', '(', 'ctxpopup', ',', '""""', ',', '""""', ')', ';', 'ITEM_NEW', '(', 'ctxpopup', ',', '""""', ',', '""""', ')', ';', 'elm_object_item_disabled_set', '(', 'it', ',', 'EINA_TRUE', ')', ';', 'ITEM_NEW', '(', 'ctxpopup', ',', '""""', ',', '""""', ')', ';', 'ITEM_NEW', '(', 'ctxpopup', ',', '""""', ',', '""""', ')', ';', 'elm_object_item_disabled_set', '(', 'it', ',', 'EINA_TRUE', ')', ';', 'evas_pointer_canvas_xy_get', '(', 'evas_object_evas_get', '(', 'obj', ')', ',', '&', 'x', ',', '&', 'y', ')', ';', 'evas_object_size_hint_max_set', '(', 'ctxpopup', ',', '240', ',', '240', ')', ';', 'evas_object_move', '(', 'ctxpopup', ',', 'x', ',', 'y', ')', ';', 'evas_object_show', '(', 'ctxpopup', ')', ';', '_print_current_dir', '(', 'ctxpopup', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1105,"['dpcm_fe_dai_hw_params', '(', 'struct', 'snd_pcm_substream', '*', 'substream', ',', 'struct', 'snd_pcm_hw_params', '*', 'params', ')', '{', 'struct', 'snd_soc_pcm_runtime', '*', 'fe', '=', 'substream', '->', 'private_data', ';', 'int', 'ret', ',', 'stream', '=', 'substream', '->', 'stream', ';', 'mutex_lock_nested', '(', '&', 'fe', '->', 'card', '->', 'mutex', ',', 'SND_SOC_CARD_CLASS_RUNTIME', ')', ';', 'dpcm_set_fe_update_state', '(', 'fe', ',', 'stream', ',', 'SND_SOC_DPCM_UPDATE_FE', ')', ';', 'memcpy', '(', '&', 'fe', '->', 'dpcm', '[', 'substream', '->', 'stream', ']', '.', 'hw_params', ',', 'params', ',', 'sizeof', '(', 'struct', 'snd_pcm_hw_params', ')', ')', ';', 'ret', '=', 'dpcm_be_dai_hw_params', '(', 'fe', ',', 'substream', '->', 'stream', ')', ';', 'if', '(', 'ret', '<', '0', ')', '{', 'dev_err', '(', 'fe', '->', 'dev', ',', '""""', ',', 'ret', ')', ';', 'goto', 'out', ';', '}', 'dev_dbg', '(', 'fe', '->', 'dev', ',', '""""', ',', 'fe', '->', 'dai_link', '->', 'name', ',', 'params_rate', '(', 'params', ')', ',', 'params_channels', '(', 'params', ')', ',', 'params_format', '(', 'params', ')', ')', ';', 'ret', '=', 'soc_pcm_hw_params', '(', 'substream', ',', 'params', ')', ';', 'if', '(', 'ret', '<', '0', ')', '{', 'dev_err', '(', 'fe', '->', 'dev', ',', '""""', ',', 'ret', ')', ';', 'dpcm_be_dai_hw_free', '(', 'fe', ',', 'stream', ')', ';', '}', 'fe', '->', 'dpcm', '[', 'stream', ']', '.', 'state', '=', 'SND_SOC_DPCM_STATE_HW_PARAMS', ';', 'out', ':', 'dpcm_set_fe_update_state', '(', 'fe', ',', 'stream', ',', 'SND_SOC_DPCM_UPDATE_NO', ')', ';', 'mutex_unlock', '(', '&', 'fe', '->', 'card', '->', 'mutex', ')', ';', 'return', 'ret', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1106,"['MyAddEventHandler', '(', 'dpy', ',', 'window', ',', 'type', ',', 'mask', ',', 'func', ',', 'data', ')', 'Display', '*', 'dpy', ';', 'Window', 'window', ';', 'int', 'type', ';', 'unsigned', 'long', 'mask', ';', 'void', '(', '*', 'func', ')', '(', ')', ';', 'XtPointer', 'data', ';', '{', 'WindowRec', '*', 'wp', ';', 'HandlerRec', '*', 'hp', ';', 'caddr_t', 'cdata', ';', 'TRACE', '(', '(', '""""', ',', 'window', ',', 'type', ')', ')', ';', 'if', '(', '!Initialized', ')', 'initialize', '(', ')', ';', 'hp', '=', 'XtNew', '(', 'HandlerRec', ')', ';', 'hp', '->', 'type', '=', 'type', ';', 'hp', '->', 'mask', '=', 'mask', ';', 'hp', '->', 'handler', '=', 'func', ';', 'hp', '->', 'data', '=', 'data', ';', 'hp', '->', 'next', '=', 'NULL', ';', 'if', '(', '!XFindContext', '(', 'dpy', ',', 'window', ',', 'Context', ',', '&', 'cdata', ')', ')', '{', 'wp', '=', '(', 'WindowRec', '*', ')', 'cdata', ';', 'hp', '->', 'next', '=', 'wp', '->', 'handlers', ';', 'wp', '->', 'handlers', '=', 'hp', ';', '}', 'else', '{', 'wp', '=', 'XtNew', '(', 'WindowRec', ')', ';', 'wp', '->', 'mask', '=', '0L', ';', 'wp', '->', 'dispatching', '=', 'False', ';', 'wp', '->', 'handlers', '=', 'hp', ';', '(', 'void', ')', 'XSaveContext', '(', 'dpy', ',', 'window', ',', 'Context', ',', '(', 'caddr_t', ')', 'wp', ')', ';', '}', 'resetEventMask', '(', 'dpy', ',', 'window', ',', 'wp', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1107,"['get_program_memory_at_address', '(', 'unsigned', 'int', 'address', ')', '{', 'unsigned', 'int', 'uIndex', '=', 'map_pm_address2index', '(', 'address', ')', ';', 'return', '(', 'uIndex', '<', 'program_memory_size', '(', ')', '&&', 'program_memory', '[', 'uIndex', ']', ')', '?', 'program_memory', '[', 'uIndex', ']', '->', 'get_opcode', '(', ')', ':', '0xffffffff', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1108,"['report_error', '(', 'MPI_Comm', 'comm', ',', 'int', 'errcode', ',', 'char', '*', 'errmsg', ',', 'char', '*', 'type', ')', '{', 'char\t\tmpierrmsg', '[', 'MPI_MAX_ERROR_STRING', ']', ';', 'char\t\tname', '[', 'MPI_MAX_OBJECT_NAME', '+', '1', ']', ';', 'int\t\trank', ';', 'int\t\tcid', ';', 'int\t\tlen', ';', 'MPI_Error_string', '(', 'errcode', ',', 'mpierrmsg', ',', '&', 'len', ')', ';', 'if', '(', 'comm', '!=', 'MPI_COMM_NULL', ')', '{', 'MPI_Comm_rank', '(', 'comm', ',', '&', 'rank', ')', ';', 'if', '(', 'comm', '->', 'c_name', '[', '0', ']', ')', '{', 'lam_strncpy', '(', 'name', ',', 'comm', '->', 'c_name', ',', 'MPI_MAX_OBJECT_NAME', ')', ';', '}', 'else', '{', 'MPIL_Comm_id', '(', 'comm', ',', '&', 'cid', ')', ';', 'cid', '=', 'lam_mpi_coll2pt', '(', 'cid', ')', ';', 'sprintf', '(', 'name', ',', '""""', ',', 'type', ',', 'cid', ')', ';', '}', 'if', '(', '_kio', '.', 'ki_rtf', '&', 'RTF_IO', ')', '{', 'if', '(', '*', 'errmsg', ')', '{', 'printf', '(', '""""', ',', 'mpierrmsg', ',', 'errmsg', ',', 'rank', ',', 'name', ')', ';', '}', 'else', '{', 'printf', '(', '""""', ',', 'mpierrmsg', ',', 'rank', ',', 'name', ')', ';', '}', 'fflush', '(', 'stdout', ')', ';', '}', 'else', '{', 'if', '(', '*', 'errmsg', ')', '{', 'tprintf', '(', '""""', ',', 'mpierrmsg', ',', 'errmsg', ',', 'rank', ',', 'name', ')', ';', '}', 'else', '{', 'tprintf', '(', '""""', ',', 'mpierrmsg', ',', 'rank', ',', 'name', ')', ';', '}', '}', '}', 'else', '{', 'if', '(', '_kio', '.', 'ki_rtf', '&', 'RTF_IO', ')', '{', 'if', '(', '*', 'errmsg', ')', '{', 'printf', '(', '""""', ',', 'mpierrmsg', ',', 'errmsg', ',', 'getnodeid', '(', ')', ',', '(', 'int', ')', 'lam_getpid', '(', ')', ')', ';', '}', 'else', '{', 'printf', '(', '""""', ',', 'mpierrmsg', ',', 'getnodeid', '(', ')', ',', '(', 'int', ')', 'lam_getpid', '(', ')', ')', ';', '}', 'fflush', '(', 'stdout', ')', ';', '}', 'else', '{', 'if', '(', '*', 'errmsg', ')', '{', 'tprintf', '(', '""""', ',', 'mpierrmsg', ',', 'errmsg', ',', 'getnodeid', '(', ')', ',', '(', 'int', ')', 'lam_getpid', '(', ')', ')', ';', '}', 'else', '{', 'tprintf', '(', '""""', ',', 'mpierrmsg', ',', 'getnodeid', '(', ')', ',', '(', 'int', ')', 'lam_getpid', '(', ')', ')', ';', '}', '}', '}', '/', '*', '*', 'print', 'out', 'the', 'LAM', '/', 'MPI', 'call', 'lam_printfunc', '(', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1109,"['evemu_device', '(', 'FILE', '*', 'fp', ')', '{', 'struct', 'evemu_device', '*', 'dev', ';', 'int', 'ret', '=', '-', 'ENOMEM', ';', 'int', 'fd', ';', 'dev', '=', 'evemu_new', '(', 'NULL', ')', ';', 'if', '(', '!dev', ')', 'goto', 'out', ';', 'ret', '=', 'evemu_read', '(', 'dev', ',', 'fp', ')', ';', 'if', '(', 'ret', '<=', '0', ')', 'goto', 'out', ';', 'if', '(', 'strlen', '(', 'evemu_get_name', '(', 'dev', ')', ')', '==', '0', ')', '{', 'char', 'name', '[', '64', ']', ';', 'sprintf', '(', 'name', ',', '""""', ',', 'getpid', '(', ')', ')', ';', 'evemu_set_name', '(', 'dev', ',', 'name', ')', ';', '}', 'ret', '=', 'fd', '=', 'open', '(', 'UINPUT_NODE', ',', 'O_WRONLY', ')', ';', 'if', '(', 'ret', '<', '0', ')', 'goto', 'out', ';', 'ret', '=', 'evemu_create', '(', 'dev', ',', 'fd', ')', ';', 'if', '(', 'ret', '<', '0', ')', 'goto', 'out_close', ';', 'hold_device', '(', 'dev', ')', ';', 'evemu_destroy', '(', 'fd', ')', ';', 'out_close', ':', 'close', '(', 'fd', ')', ';', 'out', ':', 'evemu_delete', '(', 'dev', ')', ';', 'return', 'ret', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1110,"['SetHintBits', '(', 'HeapTupleHeader', 'tuple', ',', 'Buffer', 'buffer', ',', 'uint16', 'infomask', ',', 'TransactionId', 'xid', ')', '{', 'if', '(', 'TransactionIdIsValid', '(', 'xid', ')', ')', '{', 'XLogRecPtr\tcommitLSN', '=', 'TransactionIdGetCommitLSN', '(', 'xid', ')', ';', 'if', '(', 'XLogNeedsFlush', '(', 'commitLSN', ')', ')', '}', 'tuple', '->', 't_infomask', '|=', 'infomask', ';', 'SetBufferCommitInfoNeedsSave', '(', 'buffer', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1111,"['linkGlobalProto', '(', 'GlobalVariable', '*', 'SGV', ')', '{', 'GlobalValue', '*', 'DGV', '=', 'getLinkedToGlobal', '(', 'SGV', ')', ';', 'if', '(', 'DGV', ')', '{', '/', '/', 'Concatenation', 'of', 'appending', 'linkage', 'variables', 'is', 'magic', 'and', 'handled', 'later', '.', 'if', '(', 'DGV', '->', 'hasAppendingLinkage', '(', ')', '||', 'SGV', '->', 'hasAppendingLinkage', '(', ')', ')', 'return', 'linkAppendingVarProto', '(', 'cast', '<', 'GlobalVariable', '>', '(', 'DGV', ')', ',', 'SGV', ')', ';', '/', '/', 'Determine', 'whether', 'linkage', 'of', 'these', 'two', 'globals', 'follows', 'the', '/', '/', ""module''s"", 'definition', '.', 'GlobalValue', ':', ':', 'LinkageTypes', 'NewLinkage', '=', 'GlobalValue', ':', ':', 'InternalLinkage', ';', 'bool', 'LinkFromSrc', '=', 'false', ';', 'if', '(', 'getLinkageResult', '(', 'DGV', ',', 'SGV', ',', 'NewLinkage', ',', 'LinkFromSrc', ')', ')', 'return', 'true', ';', '/', '/', 'If', ""we're"", 'not', 'linking', 'from', 'the', 'source', ',', 'then', 'keep', 'the', 'definition', 'that', '/', '/', 'have', '.', 'if', '(', '!LinkFromSrc', ')', '{', '/', '/', 'Special', 'case', 'for', 'const', 'propagation', '.', 'if', '(', 'GlobalVariable', '*', 'DGVar', '=', 'dyn_cast', '<', 'GlobalVariable', '>', '(', 'DGV', ')', ')', 'if', '(', 'DGVar', '->', 'isDeclaration', '(', ')', '&&', 'SGV', '->', 'isConstant', '(', ')', '&&', '!DGVar', '->', 'isConstant', '(', ')', ')', 'DGVar', '->', 'setConstant', '(', 'true', ')', ';', '/', '/', 'Set', 'calculated', 'linkage', '.', 'DGV', '->', 'setLinkage', '(', 'NewLinkage', ')', ';', '/', '/', 'Make', 'sure', 'to', 'remember', 'this', 'mapping', '.', 'ValueMap', '[', 'SGV', ']', '=', 'ConstantExpr', ':', ':', 'getBitCast', '(', 'DGV', ',', 'TypeMap', '.', 'get', '(', 'SGV', '->', 'getType', '(', ')', ')', ')', ';', '/', '/', 'Track', 'the', 'source', 'global', 'so', 'that', 'we', ""don't"", 'attempt', 'to', 'copy', 'it', 'over', '/', '/', 'processing', 'global', 'initializers', '.', 'DoNotLinkFromSource', '.', 'insert', '(', 'SGV', ')', ';', 'return', 'false', ';', '}', '}', '/', '/', 'No', 'linking', 'to', 'be', 'performed', 'or', 'linking', 'from', 'the', 'source', ':', 'simply', 'create', '/', '/', 'identical', 'version', 'of', 'the', 'symbol', 'over', 'in', 'the', 'dest', 'module', '.', '.', '.', '/', '/', 'initializer', 'will', 'be', 'filled', 'in', 'later', 'by', 'LinkGlobalInits', '.', 'GlobalVariable', '*', 'NewDGV', '=', 'new', 'GlobalVariable', '(', '*', 'DstM', ',', 'TypeMap', '.', 'get', '(', 'SGV', '->', 'getType', '(', ')', '->', 'getElementType', '(', ')', ')', ',', 'SGV', '->', 'isConstant', '(', ')', ',', 'SGV', '->', 'getLinkage', '(', ')', ',', '/', '*', 'init', '*', '/', '0', ',', 'SGV', '->', 'getName', '(', ')', ',', '/', '*', 'insertbefore', '*', '/', '0', ',', 'SGV', '->', 'isThreadLocal', '(', ')', ',', 'SGV', '->', 'getType', '(', ')', '->', 'getAddressSpace', '(', ')', ')', ';', '/', '/', 'Propagate', 'alignment', ',', 'visibility', 'and', 'section', 'info', '.', 'CopyGVAttributes', '(', 'NewDGV', ',', 'SGV', ')', ';', 'if', '(', 'DGV', ')', '{', 'DGV', '->', 'replaceAllUsesWith', '(', 'ConstantExpr', ':', ':', 'getBitCast', '(', 'NewDGV', ',', 'DGV', '->', 'getType', '(', ')', ')', ')', ';', 'DGV', '->', 'eraseFromParent', '(', ')', ';', '}', '/', '/', 'Make', 'sure', 'to', 'remember', 'this', 'mapping', '.', 'ValueMap', '[', 'SGV', ']', '=', 'NewDGV', ';', 'return', 'false', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1112,"['NonNullIdentSeqs', '(', 'register', 'e_type', 'E1', ',', 'register', 'e_type', 'E2', ')', '{', 'register', 'long\ts', ',', 'r1', ',', 'r2', ';', 'if', '(', 'E1', '->', 'n', '!=', 'E2', '->', 'n', ')', 'return', 'FALSE', ';', 'for', '(', 's', '=', '1', ';', 's', '<=', '(', 'long', ')', 'E1', '->', 'n', ';', 's', '++', ')', '{', 'r1', '=', 'E1', '->', 'X', '[', 's', ']', ';', 'r2', '=', 'E2', '->', 'X', '[', 's', ']', ';', 'if', '(', 'r1', '!=', '0', '&&', 'r2', '!=', '0', '&&', 'r1', '!=', 'r2', ')', 'return', 'FALSE', ';', '}', 'return', 'TRUE', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1113,"['mainwin_destroy_cb', '(', 'GtkObject', '*', 'object', 'UNUSED', ',', 'gpointer', 'data', 'UNUSED', ')', '{', 'full_screen', '=', 'FALSE', ';', 'gui', '.', 'mainwin', '=', 'NULL', ';', 'gui', '.', 'drawarea', '=', 'NULL', ';', '{', 'vim_strncpy', '(', 'IObuff', ',', '(', 'char_u', '*', ')', '_', '(', '""""', ')', ',', 'IOSIZE', '-', '1', ')', ';', 'preserve_exit', '(', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1114,"['test_round_near_x', '(', 'void', ')', '{', 'mpfr_t', 'x', ',', 'y', ',', 'z', ',', 'eps', ';', 'mpfr_exp_t', 'e', ';', 'int', 'failures', '=', '0', ',', 'mx', ',', 'neg', ',', 'err', ',', 'dir', ',', 'r', ',', 'inex', ',', 'inex2', ';', 'char', 'buffer', '[', '7', ']', ',', '*', 'p', ';', 'mpfr_inits', '(', 'x', ',', 'y', ',', 'z', ',', 'eps', ',', '(', 'mpfr_ptr', ')', '0', ')', ';', 'mpfr_set_prec', '(', 'x', ',', '5', ')', ';', 'mpfr_set_prec', '(', 'y', ',', '3', ')', ';', 'mpfr_set_prec', '(', 'z', ',', '3', ')', ';', 'mpfr_set_prec', '(', 'eps', ',', '2', ')', ';', 'mpfr_set_ui_2exp', '(', 'eps', ',', '1', ',', '-', '32', ',', 'MPFR_RNDN', ')', ';', 'for', '(', 'mx', '=', '16', ';', 'mx', '<', '32', ';', 'mx', '++', ')', '{', 'mpfr_set_ui_2exp', '(', 'x', ',', 'mx', ',', '-', '2', ',', 'MPFR_RNDN', ')', ';', 'for', '(', 'p', '=', 'buffer', ',', 'neg', '=', '0', ';', 'neg', '<=', '1', ';', 'mpfr_neg', '(', 'x', ',', 'x', ',', 'MPFR_RNDN', ')', ',', 'p', '++', ',', 'neg', '++', ')', 'for', '(', 'err', '=', '2', ';', 'err', '<=', '6', ';', 'err', '++', ')', 'for', '(', 'dir', '=', '0', ';', 'dir', '<=', '1', ';', 'dir', '++', ')', 'RND_LOOP', '(', 'r', ')', '{', 'inex', '=', 'mpfr_round_near_x', '(', 'y', ',', 'x', ',', 'err', ',', 'dir', ',', '(', 'mpfr_rnd_t', ')', 'r', ')', ';', 'if', '(', 'inex', '==', '0', '&&', 'err', '<', '6', ')', '{', '/', '*', 'The', 'test', 'is', 'more', 'restrictive', 'than', 'necessary', '.', 'continue', ';', '}', 'inex2', '=', '(', '(', 'dir', '^', 'neg', ')', '?', 'mpfr_add', ':', 'mpfr_sub', ')', '(', 'z', ',', 'x', ',', 'eps', ',', '(', 'mpfr_rnd_t', ')', 'r', ')', ';', 'if', '(', 'inex', '*', 'inex2', '<=', '0', ')', 'printf', '(', '""""', ',', 'inex', ',', 'inex2', ')', ';', 'else', 'if', '(', 'mpfr_equal_p', '(', 'y', ',', 'z', ')', ')', '{', 'printf', '(', '""""', ')', ';', 'mpfr_out_str', '(', 'stdout', ',', '2', ',', '3', ',', 'z', ',', 'MPFR_RNDZ', ')', ';', 'printf', '(', '""""', ')', ';', '}', 'if', '(', '!mpfr_get_str', '(', 'buffer', ',', '&', 'e', ',', '2', ',', '5', ',', 'x', ',', 'MPFR_RNDZ', ')', '||', 'e', '!=', '3', ')', '{', 'printf', '(', '""""', ')', ';', 'exit', '(', '1', ')', ';', '}', 'printf', '(', '""""', ',', 'neg', '?', ""''"", ':', ""''"", ',', 'p', '[', '0', ']', ',', 'p', '[', '1', ']', ',', 'p', '[', '2', ']', ',', 'p', '[', '3', ']', ',', 'p', '[', '4', ']', ')', ';', 'printf', '(', '""""', ',', 'err', ',', 'dir', ',', 'mpfr_print_rnd_mode', '(', '(', 'mpfr_rnd_t', ')', 'r', ')', ',', 'inex', ')', ';', 'if', '(', 'inex', '!=', '0', ')', '{', 'printf', '(', '""""', ')', ';', 'mpfr_out_str', '(', 'stdout', ',', '2', ',', '3', ',', 'y', ',', 'MPFR_RNDZ', ')', ';', '}', 'printf', '(', '""""', ')', ';', 'if', '(', 'inex', '==', '0', ')', 'printf', '(', '""""', ')', ';', 'exit', '(', '1', ')', ';', '}', '}', 'if', '(', 'failures', ')', 'exit', '(', '1', ')', ';', 'mpfr_clears', '(', 'x', ',', 'y', ',', 'z', ',', 'eps', ',', '(', 'mpfr_ptr', ')', '0', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1115,"['named_datatype_free', '(', 'named_dt_t', '*', '*', 'named_dt_head_p', ',', 'int', 'ignore_err', ')', '{', 'named_dt_t', '*', 'dt', '=', '*', 'named_dt_head_p', ';', 'while', '(', 'dt', ')', '{', 'if', '(', 'H5Tclose', '(', 'dt', '->', 'id_out', ')', '<', '0', '&&', '!ignore_err', ')', 'goto', 'error', ';', 'dt', '=', 'dt', '->', 'next', ';', 'HDfree', '(', '*', 'named_dt_head_p', ')', ';', '*', 'named_dt_head_p', '=', 'dt', ';', 'return', '0', ';', 'error', ':', 'return', '-', '1', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1116,"['template_setup', '(', 'GuTemplate', '*', 't', ')', '{', 'const', 'gchar', '*', 'filename', ';', 'char', '*', 'filepath', '=', 'NULL', ';', 'GError', '*', 'error', '=', 'NULL', ';', 'GtkTreeIter', 'iter', ';', 'gchar', '*', 'dirpath', '=', 'g_build_filename', '(', 'g_get_user_config_dir', '(', ')', ',', '""""', ',', '""""', ',', 'NULL', ')', ';', 'GDir', '*', 'dir', '=', 'g_dir_open', '(', 'dirpath', ',', '0', ',', '&', 'error', ')', ';', 'if', '(', 'error', ')', '{', 'slog', '(', 'L_INFO', ',', '""""', ')', ';', 'g_mkdir_with_parents', '(', 'dirpath', ',', 'DIR_PERMS', ')', ';', 'g_free', '(', 'dirpath', ')', ';', 'return', ';', '}', 'while', '(', '(', 'filename', '=', 'g_dir_read_name', '(', 'dir', ')', ')', ')', '{', 'filepath', '=', 'g_build_filename', '(', 'dirpath', ',', 'filename', ',', 'NULL', ')', ';', 'gtk_list_store_append', '(', 't', '->', 'list_templates', ',', '&', 'iter', ')', ';', 'gtk_list_store_set', '(', 't', '->', 'list_templates', ',', '&', 'iter', ',', '0', ',', 'filename', ',', '1', ',', 'filepath', ',', '-', '1', ')', ';', 'g_free', '(', 'filepath', ')', ';', '}', 'g_free', '(', 'dirpath', ')', ';', '/', '/', 'disable', 'the', 'add', 'button', 'when', 'there', 'are', 'no', 'tabs', 'opened', '(', '#388', ')', 'if', '(', '!tabmanager_has_tabs', '(', ')', ')', '{', 'gtk_widget_set_sensitive', '(', 't', '->', 'template_add', ',', 'FALSE', ')', ';', '}', 'gtk_widget_set_sensitive', '(', 't', '->', 'template_open', ',', 'FALSE', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1117,"['GetInternalType', '(', 'char', '*', 'pName', ',', 'STABCOFFMAP', '*', 'pMap', ')', '{', 'int', 'n', ',', 'found', ',', 'i', ';', 'if', '(', '!pName', ')', '{', 'return', '(', 'False', ')', ';', '}', 'found', '=', 'False', ';', 'n', '=', 'strlen', '(', 'pName', ')', ';', 'for', '(', 'i', '=', '0', ';', 'FundamentalTypes', '[', 'i', ']', '.', 'pString', '!=', '0', ';', 'i', '++', ')', '{', 'if', '(', '!strncmp', '(', 'pName', ',', 'FundamentalTypes', '[', 'i', ']', '.', 'pString', ',', 'n', ')', ')', '{', 'pMap', '->', 'CoffType', '=', 'FundamentalTypes', '[', 'i', ']', '.', 'Type', ';', 'pMap', '->', 'ByteSize', '=', 'FundamentalTypes', '[', 'i', ']', '.', 'Size', ';', 'found', '=', 'True', ';', '}', '}', 'return', '(', 'found', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1118,"['grl_registry_add_directory', '(', 'GrlRegistry', '*', 'registry', ',', 'const', 'gchar', '*', 'path', ')', '{', 'g_return_if_fail', '(', 'GRL_IS_REGISTRY', '(', 'registry', ')', ')', ';', 'g_return_if_fail', '(', 'path', ')', ';', '/', '*', 'Use', 'append', 'instead', 'of', 'prepend', 'so', 'plugins', 'are', 'loaded', 'in', 'the', 'same', 'order', 'registry', '->', 'priv', '->', 'plugins_dir', '=', 'g_slist_append', '(', 'registry', '->', 'priv', '->', 'plugins_dir', ',', 'g_strdup', '(', 'path', ')', ')', ';', 'registry', '->', 'priv', '->', 'all_plugins_preloaded', '=', 'FALSE', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1119,"['maildir_shared_fparse', '(', 'char', '*', 'p', ',', 'char', '*', '*', 'name', ',', 'char', '*', '*', 'dir', ')', '{', 'char\t', '*', 'q', ';', '*', 'name', '=', '0', ';', '*', 'dir', '=', '0', ';', 'if', '(', '(', 'q', '=', 'strchr', '(', 'p', ',', ""''"", ')', ')', '!=', '0', ')', '\t', '*', 'q', '=', '0', ';', 'if', '(', '(', 'q', '=', 'strchr', '(', 'p', ',', ""''"", ')', ')', '!=', '0', ')', '\t', '*', 'q', '=', '0', ';', 'for', '(', 'q', '=', 'p', ';', '*', 'q', ';', 'q', '++', ')', 'if', '(', 'isspace', '(', '(', 'int', ')', '(', 'unsigned', 'char', ')', '*', 'q', ')', ')', '\tbreak', ';', 'if', '(', '!', '*', 'q', ')', '\treturn', ';', '*', 'q', '++', '=', '0', ';', 'while', '(', '*', 'q', '&&', 'isspace', '(', '(', 'int', ')', '(', 'unsigned', 'char', ')', '*', 'q', ')', ')', '++', 'q', ';', 'if', '(', '*', 'q', ')', '{', '*', 'name', '=', 'p', ';', '*', 'dir', '=', 'q', ';', '}', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1120,"['{', 'DEBUG_printf', '(', '(', '""""', '%', 's\\""""', '%', '""""', '%', 's\\""""', ',', 'ppd', ',', 'keyword', ',', 'spec', ',', 'll_CC', ')', ')', ';', '/', '*', '*', 'Look', 'for', 'Keyword', '.', 'll_CC', ',', 'then', 'Keyword', '.', 'll', '.', '.', '.', 'snprintf', '(', 'lkeyword', ',', 'sizeof', '(', 'lkeyword', ')', ',', '""""', ',', 'll_CC', ',', 'keyword', ')', ';', 'if', '(', '(', 'attr', '=', 'ppdFindAttr', '(', 'ppd', ',', 'lkeyword', ',', 'spec', ')', ')', '==', 'NULL', ')', '{', 'snprintf', '(', 'lkeyword', ',', 'sizeof', '(', 'lkeyword', ')', ',', '""""', ',', 'll_CC', ',', 'keyword', ')', ';', 'attr', '=', 'ppdFindAttr', '(', 'ppd', ',', 'lkeyword', ',', 'spec', ')', ';', 'if', '(', '!attr', ')', '{', 'if', '(', '!strncmp', '(', 'll_CC', ',', '""""', ',', '2', ')', ')', '{', '/', '*', '*', 'Due', 'to', 'a', 'bug', 'in', 'the', 'CUPS', 'DDK', '1', '.', '1', '.', '0', 'ppdmerge', 'program', ',', '*', 'PPD', 'files', 'were', 'incorrectly', 'assigned', '""""', 'as', 'the', 'locale', '*', 'instead', 'of', '""""', '.', 'Support', 'both', 'the', 'old', '(', 'incorrect', ')', 'and', '*', 'locale', 'names', 'for', 'Japanese', '.', '.', '.', 'snprintf', '(', 'lkeyword', ',', 'sizeof', '(', 'lkeyword', ')', ',', '""""', ',', 'keyword', ')', ';', 'attr', '=', 'ppdFindAttr', '(', 'ppd', ',', 'lkeyword', ',', 'spec', ')', ';', '}', 'else', 'if', '(', '!strncmp', '(', 'll_CC', ',', '""""', ',', '2', ')', ')', '{', '/', '*', '*', 'Norway', 'has', 'two', 'languages', ',', '""""', '(', 'the', 'primary', 'one', ')', '*', 'and', '""""', '(', 'new', 'Norwegian', ')', ';', 'we', 'map', '""""', 'to', '""""', 'here', '*', 'recommended', 'by', 'the', 'locale', 'folks', '.', '.', '.', 'snprintf', '(', 'lkeyword', ',', 'sizeof', '(', 'lkeyword', ')', ',', '""""', ',', 'keyword', ')', ';', 'attr', '=', 'ppdFindAttr', '(', 'ppd', ',', 'lkeyword', ',', 'spec', ')', ';', '}', '}', '}', '#ifdef', 'if', '(', 'attr', ')', 'DEBUG_printf', '(', '(', '""""', '%', 's\\""""', ',', 'attr', '->', 'name', ',', 'attr', '->', 'spec', ',', 'attr', '->', 'text', ',', 'attr', '->', 'value', '?', 'attr', '->', 'value', ':', '""""', ')', ')', ';', 'DEBUG_puts', '(', '""""', ')', ';', 'return', '(', 'attr', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1121,"['gnm_style_get_align_h', '(', 'GnmStyle', 'const', '*', 'style', ')', '{', 'g_return_val_if_fail', '(', 'style', '!=', 'NULL', ',', 'GNM_HALIGN_LEFT', ')', ';', 'g_return_val_if_fail', '(', 'elem_is_set', '(', 'style', ',', 'MSTYLE_ALIGN_H', ')', ',', 'GNM_HALIGN_LEFT', ')', ';', 'return', 'style', '->', 'h_align', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1122,"['restore', '(', 'const', 'char', '*', 'filename', ')', '{', 'static', 'char', '*', 'path', ';', 'static', 'size_t', 'path_size', ';', 'FILE', '*', 'file', ';', 'char', '*', 'l', ';', 'int', 'line', '=', '0', ',', 'backup_line', ',', 'status', '=', '0', ';', 'if', '(', 'strcmp', '(', 'filename', ',', '""""', ')', '==', '0', ')', 'file', '=', 'stdin', ';', 'else', '{', 'file', '=', 'fopen', '(', 'filename', ',', '""""', ')', ';', 'if', '(', 'file', '==', 'NULL', ')', '{', 'fprintf', '(', 'stderr', ',', '""""', ',', 'progname', ',', 'filename', ',', 'strerror_ea', '(', 'errno', ')', ')', ';', 'return', '1', ';', '}', '}', 'for', '(', ';', ';', ')', '{', 'backup_line', '=', 'line', ';', 'while', '(', '(', 'l', '=', 'next_line', '(', 'file', ')', ')', '!=', 'NULL', '&&', '*', 'l', '==', ""''"", ')', 'line', '++', ';', 'if', '(', 'l', '==', 'NULL', ')', 'break', ';', 'line', '++', ';', 'if', '(', 'strncmp', '(', 'l', ',', '""""', ',', '8', ')', '!=', '0', ')', '{', 'if', '(', 'file', '!=', 'stdin', ')', '{', 'fprintf', '(', 'stderr', ',', '_', '(', '""""', ')', ',', 'progname', ',', 'filename', ',', 'backup_line', ')', ';', '}', 'else', '{', 'fprintf', '(', 'stderr', ',', '_', '(', '""""', ')', ',', 'progname', ',', 'backup_line', ')', ';', '}', 'status', '=', '1', ';', 'goto', 'cleanup', ';', '}', 'l', '+=', '8', ';', 'l', '=', 'unquote', '(', 'l', ')', ';', 'if', '(', 'high_water_alloc', '(', '(', 'void', '*', '*', ')', '&', 'path', ',', '&', 'path_size', ',', 'strlen', '(', 'l', ')', '+', '1', ')', ')', '{', 'perror', '(', 'progname', ')', ';', 'status', '=', '1', ';', 'goto', 'cleanup', ';', '}', 'strcpy', '(', 'path', ',', 'l', ')', ';', 'while', '(', '(', 'l', '=', 'next_line', '(', 'file', ')', ')', '!=', 'NULL', '&&', '*', 'l', '!=', ""''"", ')', '{', 'char', '*', 'name', '=', 'l', ',', '*', 'value', '=', 'strchr', '(', 'l', ',', ""''"", ')', ';', 'line', '++', ';', 'if', '(', 'value', ')', '*', 'value', '++', '=', ""''"", ';', 'status', '=', 'do_set', '(', 'path', ',', 'unquote', '(', 'name', ')', ',', 'value', ')', ';', '}', 'if', '(', 'l', '==', 'NULL', ')', 'break', ';', 'line', '++', ';', '}', 'if', '(', '!feof', '(', 'file', ')', ')', '{', 'fprintf', '(', 'stderr', ',', '""""', ',', 'progname', ',', 'filename', ',', 'strerror', '(', 'errno', ')', ')', ';', 'if', '(', '!status', ')', 'status', '=', '1', ';', '}', 'cleanup', ':', 'if', '(', 'path', ')', 'free', '(', 'path', ')', ';', 'if', '(', 'file', '!=', 'stdin', ')', 'fclose', '(', 'file', ')', ';', 'if', '(', 'status', ')', 'had_errors', '++', ';', 'return', 'status', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  True,CWE-476  False,CWE-other  False
1123,"['find_first_table_item', '(', 'ETableGroup', '*', 'group', ')', '{', 'GnomeCanvasGroup', '*', 'cgroup', ';', 'GList', '*', 'l', ';', 'cgroup', '=', 'GNOME_CANVAS_GROUP', '(', 'group', ')', ';', 'for', '(', 'l', '=', 'cgroup', '->', 'item_list', ';', 'l', ';', 'l', '=', 'l', '->', 'next', ')', '{', 'GnomeCanvasItem', '*', 'i', ';', 'i', '=', 'GNOME_CANVAS_ITEM', '(', 'l', '->', 'data', ')', ';', 'if', '(', 'E_IS_TABLE_GROUP', '(', 'i', ')', ')', 'return', 'find_first_table_item', '(', 'E_TABLE_GROUP', '(', 'i', ')', ')', ';', 'else', 'if', '(', 'E_IS_TABLE_ITEM', '(', 'i', ')', ')', '{', 'return', 'E_TABLE_ITEM', '(', 'i', ')', ';', '}', '}', 'return', 'NULL', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1124,"['accelCalReset', '(', ')', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', '3', ';', 'i', '++', ')', '{', 'if', '(', 'm_accelCalEnable', '[', 'i', ']', ')', '{', 'm_accelMin', '.', 'setData', '(', 'i', ',', 'RTIMUCALDEFS_DEFAULT_MIN', ')', ';', 'm_accelMax', '.', 'setData', '(', 'i', ',', 'RTIMUCALDEFS_DEFAULT_MAX', ')', ';', '}', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1125,"['mem_copy', '(', 'void', '*', 'dest', ',', 'const', 'void', '*', 'src', ',', 'size_t', 'size', ')', '{', 'size_t', 'count', ';', 'if', '(', 'dest', '==', 'src', ')', '{', 'return', '(', '(', 'u8', '*', ')', 'dest', ')', '+', 'size', ';', '}', 'if', '(', 'ADDR_IS_ALIGN', '(', 'src', ',', '8', ')', '&&', 'ADDR_IS_ALIGN', '(', 'dest', ',', '8', ')', ')', '{', 'count', '=', 'size', '>>', '3', ';', 'dest', '=', 'mem_copy64', '(', 'dest', ',', 'src', ',', 'count', ')', ';', 'src', '=', '(', '(', 'const', 'u64', '*', ')', 'src', ')', '+', 'count', ';', 'count', '=', 'size', '&', '0x07', ';', '}', 'else', 'if', '(', 'ADDR_IS_ALIGN', '(', 'src', ',', '4', ')', '&&', 'ADDR_IS_ALIGN', '(', 'dest', ',', '4', ')', ')', '{', 'count', '=', 'size', '>>', '2', ';', 'dest', '=', 'mem_copy32', '(', 'dest', ',', 'src', ',', 'count', ')', ';', 'src', '=', '(', '(', 'const', 'u32', '*', ')', 'src', ')', '+', 'count', ';', 'count', '=', 'size', '&', '0x03', ';', '}', 'else', 'if', '(', 'ADDR_IS_ALIGN', '(', 'src', ',', '2', ')', '&&', 'ADDR_IS_ALIGN', '(', 'dest', ',', '2', ')', ')', '{', 'count', '=', 'size', '>>', '1', ';', 'dest', '=', 'mem_copy16', '(', 'dest', ',', 'src', ',', 'count', ')', ';', 'src', '=', '(', '(', 'const', 'u16', '*', ')', 'src', ')', '+', 'count', ';', 'count', '=', 'size', '&', '0x01', ';', '}', '{', 'count', '=', 'size', ';', '}', 'return', 'mem_copy8', '(', 'dest', ',', 'src', ',', 'count', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1126,"['config_renumber_one', '(', 'Operation', '*', 'op', ',', 'SlapReply', '*', 'rs', ',', 'CfEntryInfo', '*', 'parent', ',', 'Entry', '*', 'e', ',', 'int', 'idx', ',', 'int', 'tailindex', ',', 'int', 'use_ldif', ')', '{', 'struct', 'berval', 'ival', ',', 'newrdn', ',', 'nnewrdn', ';', 'struct', 'berval', 'rdn', ';', 'Attribute', '*', 'a', ';', 'char', 'ibuf', '[', '32', ']', ',', '*', 'ptr1', ',', '*', 'ptr2', '=', 'NULL', ';', 'int', 'rc', '=', '0', ';', 'rc', '=', 'config_rename_attr', '(', 'rs', ',', 'e', ',', '&', 'rdn', ',', '&', 'a', ')', ';', 'if', '(', 'rc', ')', 'return', 'rc', ';', 'ival', '.', 'bv_val', '=', 'ibuf', ';', 'ival', '.', 'bv_len', '=', 'snprintf', '(', 'ibuf', ',', 'sizeof', '(', 'ibuf', ')', ',', 'SLAP_X_ORDERED_FMT', ',', 'idx', ')', ';', 'if', '(', 'ival', '.', 'bv_len', '>=', 'sizeof', '(', 'ibuf', ')', ')', '{', 'return', 'LDAP_NAMING_VIOLATION', ';', '}', 'newrdn', '.', 'bv_len', '=', 'rdn', '.', 'bv_len', '+', 'ival', '.', 'bv_len', ';', 'newrdn', '.', 'bv_val', '=', 'ch_malloc', '(', 'newrdn', '.', 'bv_len', '+', '1', ')', ';', 'if', '(', 'tailindex', ')', '{', 'ptr1', '=', 'lutil_strncopy', '(', 'newrdn', '.', 'bv_val', ',', 'rdn', '.', 'bv_val', ',', 'rdn', '.', 'bv_len', ')', ';', 'ptr1', '=', 'lutil_strcopy', '(', 'ptr1', ',', 'ival', '.', 'bv_val', ')', ';', '}', 'else', '{', 'int', 'xlen', ';', 'ptr2', '=', 'ber_bvchr', '(', '&', 'rdn', ',', ""''"", ')', ';', 'if', '(', 'ptr2', ')', '{', 'ptr2', '++', ';', '}', 'else', '{', 'ptr2', '=', 'rdn', '.', 'bv_val', '+', 'a', '->', 'a_desc', '->', 'ad_cname', '.', 'bv_len', '+', '1', ';', '}', 'xlen', '=', 'rdn', '.', 'bv_len', '-', '(', 'ptr2', '-', 'rdn', '.', 'bv_val', ')', ';', 'ptr1', '=', 'lutil_strncopy', '(', 'newrdn', '.', 'bv_val', ',', 'a', '->', 'a_desc', '->', 'ad_cname', '.', 'bv_val', ',', 'a', '->', 'a_desc', '->', 'ad_cname', '.', 'bv_len', ')', ';', '*', 'ptr1', '++', '=', ""''"", ';', 'ptr1', '=', 'lutil_strcopy', '(', 'ptr1', ',', 'ival', '.', 'bv_val', ')', ';', 'ptr1', '=', 'lutil_strncopy', '(', 'ptr1', ',', 'ptr2', ',', 'xlen', ')', ';', '*', 'ptr1', '=', ""''"", ';', '}', 'newrdn', '.', 'bv_len', '=', 'ptr1', '-', 'newrdn', '.', 'bv_val', ';', 'rdnNormalize', '(', '0', ',', 'NULL', ',', 'NULL', ',', '&', 'newrdn', ',', '&', 'nnewrdn', ',', 'NULL', ')', ';', 'rc', '=', 'config_rename_one', '(', 'op', ',', 'rs', ',', 'e', ',', 'parent', ',', 'a', ',', '&', 'newrdn', ',', '&', 'nnewrdn', ',', 'use_ldif', ')', ';', 'free', '(', 'nnewrdn', '.', 'bv_val', ')', ';', 'free', '(', 'newrdn', '.', 'bv_val', ')', ';', 'return', 'rc', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1127,"['nm_system_compat_get_iface_type', '(', 'int', 'ifindex', ',', 'const', 'char', '*', 'name', ')', '{', 'int', 'res', '=', 'NM_IFACE_TYPE_UNSPEC', ';', 'char', '*', 'ifname', '=', 'NULL', ',', '*', 'path', '=', 'NULL', ';', 'struct', 'vlan_ioctl_args', 'ifv', ';', 'struct', 'ifreq', 'ifr', ';', 'struct', 'ifbond', 'ifb', ';', 'struct', 'stat', 'st', ';', 'int', 'fd', ';', 'g_return_val_if_fail', '(', 'ifindex', '>', '0', '||', 'name', ',', 'NM_IFACE_TYPE_UNSPEC', ')', ';', 'if', '(', '(', 'fd', '=', 'socket', '(', 'AF_INET', ',', 'SOCK_STREAM', ',', '0', ')', ')', '<', '0', ')', '{', 'nm_log_err', '(', 'LOGD_DEVICE', ',', '""""', ')', ';', 'goto', 'out', ';', '}', 'if', '(', '!name', ')', '{', 'g_assert', '(', 'ifindex', '>', '0', ')', ';', 'ifname', '=', 'nm_netlink_index_to_iface', '(', 'ifindex', ')', ';', '}', 'memset', '(', '&', 'ifv', ',', '0', ',', 'sizeof', '(', 'ifv', ')', ')', ';', 'ifv', '.', 'cmd', '=', 'GET_VLAN_VID_CMD', ';', 'strncpy', '(', 'ifv', '.', 'device1', ',', 'ifname', '?', 'ifname', ':', 'name', ',', 'sizeof', '(', 'ifv', '.', 'device1', ')', '-', '1', ')', ';', 'if', '(', 'ioctl', '(', 'fd', ',', 'SIOCGIFVLAN', ',', '&', 'ifv', ')', '==', '0', ')', '{', 'res', '=', 'NM_IFACE_TYPE_VLAN', ';', 'goto', 'out', ';', '}', 'memset', '(', '&', 'ifr', ',', '0', ',', 'sizeof', '(', 'ifr', ')', ')', ';', 'strncpy', '(', 'ifr', '.', 'ifr_name', ',', 'ifname', '?', 'ifname', ':', 'name', ',', 'sizeof', '(', 'ifr', '.', 'ifr_name', ')', '-', '1', ')', ';', 'memset', '(', '&', 'ifb', ',', '0', ',', 'sizeof', '(', 'ifb', ')', ')', ';', 'ifr', '.', 'ifr_data', '=', '(', 'caddr_t', ')', '&', 'ifb', ';', 'if', '(', 'ioctl', '(', 'fd', ',', 'SIOCBONDINFOQUERY', ',', '&', 'ifr', ')', '==', '0', ')', '{', 'res', '=', 'NM_IFACE_TYPE_BOND', ';', 'goto', 'out', ';', '}', 'path', '=', 'g_strdup_printf', '(', '""""', ',', 'ifname', '?', 'ifname', ':', 'name', ')', ';', 'if', '(', '(', 'stat', '(', 'path', ',', '&', 'st', ')', '==', '0', ')', '&&', 'S_ISDIR', '(', 'st', '.', 'st_mode', ')', ')', '{', 'res', '=', 'NM_IFACE_TYPE_BRIDGE', ';', 'goto', 'out', ';', '}', 'out', ':', 'g_free', '(', 'path', ')', ';', 'close', '(', 'fd', ')', ';', 'g_free', '(', 'ifname', ')', ';', 'return', 'res', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1128,"['AdCreateTableHeader', '(', 'char', '*', 'Filename', ',', 'ACPI_TABLE_HEADER', '*', 'Table', ')', '{', 'char', '*', 'NewFilename', ';', 'UINT8', 'Checksum', ';', '/', '*', '*', 'Print', 'file', 'header', 'and', 'dump', 'original', 'table', 'AdDisassemblerHeader', '(', 'Filename', ')', ';', 'AcpiOsPrintf', '(', '""""', ')', ';', 'AcpiOsPrintf', '(', '""""', '%', '4', '.', '4s\\""""', ',', 'Table', '->', 'Signature', ')', ';', 'AcpiOsPrintf', '(', '""""', ',', 'Table', '->', 'Length', ',', 'Table', '->', 'Length', ')', ';', 'AcpiOsPrintf', '(', '""""', ',', 'Table', '->', 'Revision', ')', ';', 'switch', '(', 'Table', '->', 'Revision', ')', '{', 'case', '0', ':', 'AcpiOsPrintf', '(', '""""', ')', ';', 'break', ';', 'case', '1', ':', 'if', '(', 'ACPI_COMPARE_NAME', '(', 'Table', '->', 'Signature', ',', 'ACPI_SIG_DSDT', ')', ')', '{', 'AcpiOsPrintf', '(', '""""', ')', ';', '}', 'break', ';', 'default', ':', 'break', ';', '}', 'AcpiOsPrintf', '(', '""""', ')', ';', 'AcpiOsPrintf', '(', '""""', ',', 'Table', '->', 'Checksum', ')', ';', 'Checksum', '=', 'AcpiTbChecksum', '(', 'ACPI_CAST_PTR', '(', 'UINT8', ',', 'Table', ')', ',', 'Table', '->', 'Length', ')', ';', 'if', '(', 'Checksum', ')', '{', 'AcpiOsPrintf', '(', '""""', ',', '(', 'UINT8', ')', '(', 'Table', '->', 'Checksum', '-', 'Checksum', ')', ')', ';', '}', 'AcpiOsPrintf', '(', '""""', ')', ';', 'AcpiOsPrintf', '(', '""""', '%', '.', '6s\\""""', ',', 'Table', '->', 'OemId', ')', ';', 'AcpiOsPrintf', '(', '""""', '%', '.', '8s\\""""', ',', 'Table', '->', 'OemTableId', ')', ';', 'AcpiOsPrintf', '(', '""""', ',', 'Table', '->', 'OemRevision', ',', 'Table', '->', 'OemRevision', ')', ';', 'AcpiOsPrintf', '(', '""""', '%', '.', '4s\\""""', ',', 'Table', '->', 'AslCompilerId', ')', ';', 'AcpiOsPrintf', '(', '""""', ',', 'Table', '->', 'AslCompilerRevision', ',', 'Table', '->', 'AslCompilerRevision', ')', ';', 'AcpiOsPrintf', '(', '""""', ')', ';', 'if', '(', 'Filename', ')', '{', 'NewFilename', '=', 'FlGenerateFilename', '(', 'Filename', ',', '""""', ')', ';', '}', '{', 'NewFilename', '=', 'ACPI_ALLOCATE_ZEROED', '(', '9', ')', ';', 'if', '(', 'NewFilename', ')', '{', 'strncat', '(', 'NewFilename', ',', 'Table', '->', 'Signature', ',', '4', ')', ';', 'strcat', '(', 'NewFilename', ',', '""""', ')', ';', '}', '}', 'if', '(', '!NewFilename', ')', '{', 'AcpiOsPrintf', '(', '""""', ')', ';', 'return', ';', '}', 'AcpiOsPrintf', '(', '""""', '%', 's\\""""', '%', '4', '.', '4s\\""""', '%', '.', '6s\\""""', '%', '.', '8s\\""""', ',', 'NewFilename', ',', 'Table', '->', 'Signature', ',', 'Table', '->', 'Revision', ',', 'Table', '->', 'OemId', ',', 'Table', '->', 'OemTableId', ',', 'Table', '->', 'OemRevision', ')', ';', 'ACPI_FREE', '(', 'NewFilename', ')', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1129,"['parse_commit', '(', 'struct', 'commit', '*', 'item', ')', '{', 'enum', 'object_type', 'type', ';', 'void', '*', 'buffer', ';', 'unsigned', 'long', 'size', ';', 'int', 'ret', ';', 'if', '(', 'item', '->', 'object', '.', 'parsed', ')', 'return', '0', ';', 'buffer', '=', 'read_sha1_file', '(', 'item', '->', 'object', '.', 'sha1', ',', '&', 'type', ',', '&', 'size', ')', ';', 'if', '(', '!buffer', ')', 'return', 'error', '(', '""""', ',', 'sha1_to_hex', '(', 'item', '->', 'object', '.', 'sha1', ')', ')', ';', 'if', '(', 'type', '!=', 'OBJ_COMMIT', ')', '{', 'free', '(', 'buffer', ')', ';', 'return', 'error', '(', '""""', ',', 'sha1_to_hex', '(', 'item', '->', 'object', '.', 'sha1', ')', ')', ';', '}', 'ret', '=', 'parse_commit_buffer', '(', 'item', ',', 'buffer', ',', 'size', ')', ';', 'if', '(', 'save_commit_buffer', '&&', '!ret', ')', '{', 'item', '->', 'buffer', '=', 'buffer', ';', 'return', '0', ';', '}', 'free', '(', 'buffer', ')', ';', 'return', 'ret', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1130,"['homebank_save_xml', '(', 'gchar', '*', 'filename', ')', '{', 'GIOChannel', '*', 'io', ';', 'char', 'buf1', '[', 'G_ASCII_DTOSTR_BUF_SIZE', ']', ';', 'gchar', '*', 'outstr', ';', 'gint', 'retval', '=', 'XML_OK', ';', 'io', '=', 'g_io_channel_new_file', '(', 'filename', ',', '""""', ',', 'NULL', ')', ';', 'if', '(', 'io', '==', 'NULL', ')', '{', 'g_message', '(', '""""', ',', 'filename', ')', ';', 'retval', '=', 'XML_IO_ERROR', ';', '}', '{', 'g_io_channel_write_chars', '(', 'io', ',', '""""1', '.', '0\\""""', ',', '-', '1', ',', 'NULL', ',', 'NULL', ')', ';', 'outstr', '=', 'g_strdup_printf', '(', '""""', '%', 's\\""""', ',', 'g_ascii_dtostr', '(', 'buf1', ',', 'sizeof', '(', 'buf1', ')', ',', 'FILE_VERSION', ')', ')', ';', 'g_io_channel_write_chars', '(', 'io', ',', 'outstr', ',', '-', '1', ',', 'NULL', ',', 'NULL', ')', ';', 'g_free', '(', 'outstr', ')', ';', 'homebank_save_xml_prop', '(', 'io', ')', ';', '/', '/', 'homebank_save_xml_cur', '(', 'io', ')', ';', 'homebank_save_xml_acc', '(', 'io', ')', ';', 'homebank_save_xml_pay', '(', 'io', ')', ';', 'homebank_save_xml_cat', '(', 'io', ')', ';', 'homebank_save_xml_tag', '(', 'io', ')', ';', 'homebank_save_xml_asg', '(', 'io', ')', ';', 'homebank_save_xml_arc', '(', 'io', ')', ';', 'homebank_save_xml_ope', '(', 'io', ')', ';', 'g_io_channel_write_chars', '(', 'io', ',', '""""', ',', '-', '1', ',', 'NULL', ',', 'NULL', ')', ';', 'g_io_channel_unref', '(', 'io', ')', ';', '}', 'return', 'retval', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1131,"['focusblur_brush_render_oversamp', '(', 'gfloat', '*', 'dlp', ',', 'gsize', 'rowstride', ',', 'gint', 'width', ',', 'FblurBrush', '*', 'brush', ',', 'gfloat', 'factor', ',', 'gfloat', 'fx', ',', 'gfloat', 'fx_incx', ',', 'gfloat', 'fx_incy', ',', 'gfloat', 'fy', ',', 'gfloat', 'fy_incx', ',', 'gfloat', 'fy_incy', ')', '{', 'const', 'gfloat', 'color_fnum', '=', '1', '.', '0f', '/', '255', '.', '0f', ';', 'gfloat', 'density', '=', '0', '.', '0f', ';', 'gfloat', '*', 'dp', ';', 'gint', 'rx', ',', 'ry', ',', 'sx', ',', 'sy', ';', 'gfloat', 'tran_sin', ',', 'tran_cos', ';', 'gint', 'div', ';', 'gfloat', 'div_fac', ';', 'gfloat', 'val', ',', 'sum', ';', 'gfloat', 'bit_sin', ',', 'bit_cos', ';', 'gfloat', 'bx', ',', 'by', ';', 'gfloat', 'bx_incx', ',', 'by_incx', ';', 'gfloat', 'bx_incy', ',', 'by_incy', ';', 'gfloat', 'bx_d', ',', 'by_d', ';', 'div', '=', '(', '(', 'gint', ')', 'floorf', '(', 'factor', ')', ')', '*', '2', '+', '1', ';', 'if', '(', 'div', '>', '15', ')', 'div', '=', '15', ';', 'div_fac', '=', '1', '.', '0', '/', '(', 'div', '*', 'div', ')', ';', 'tran_sin', '=', '-', 'fy_incx', ';', 'tran_cos', '=', 'fx_incx', ';', 'bit_sin', '=', 'tran_sin', '/', 'div', ';', 'bit_cos', '=', 'tran_cos', '/', 'div', ';', 'bx_incx', '=', 'bit_cos', ';', 'by_incx', '=', '-', 'bit_sin', ';', 'bx_incy', '=', 'bit_sin', '-', 'tran_cos', ';', 'by_incy', '=', 'bit_cos', '+', 'tran_sin', ';', 'bx_d', '=', '(', 'bit_cos', '+', 'bit_sin', ')', '*', '(', 'div', '/', '2', ')', ';', 'by_d', '=', '(', 'bit_cos', '-', 'bit_sin', ')', '*', '(', 'div', '/', '2', ')', ';', 'for', '(', 'ry', '=', 'width', ';', 'ry', '--', ';', 'dlp', '+=', 'rowstride', ',', 'fx', '+=', 'fx_incy', ',', 'fy', '+=', 'fy_incy', ')', 'for', '(', 'rx', '=', 'width', ',', 'dp', '=', 'dlp', ';', 'rx', '--', ';', 'dp', '++', ',', 'fx', '+=', 'fx_incx', ',', 'fy', '+=', 'fy_incx', ')', '{', 'if', '(', 'fx', '+', 'factor', '<', '0', '.', '0f', '||', 'fx', '-', 'factor', '>', '(', 'brush', '->', 'width', '-', '1', ')', '||', 'fy', '+', 'factor', '<', '0', '.', '0f', '||', 'fy', '-', 'factor', '>', '(', 'brush', '->', 'height', '-', '1', ')', ')', 'continue', ';', 'bx', '=', 'fx', '-', 'bx_d', ';', 'by', '=', 'fy', '-', 'by_d', ';', 'sum', '=', '0', '.', '0f', ';', 'for', '(', 'sy', '=', 'div', ';', 'sy', '--', ';', 'bx', '+=', 'bx_incy', ',', 'by', '+=', 'by_incy', ')', 'for', '(', 'sx', '=', 'div', ';', 'sx', '--', ';', 'bx', '+=', 'bx_incx', ',', 'by', '+=', 'by_incx', ')', 'sum', '+=', 'focusblur_brush_get_pixel', '(', 'brush', ',', 'rintf', '(', 'bx', ')', ',', 'rintf', '(', 'by', ')', ')', ';', 'val', '=', 'sum', '*', 'div_fac', ';', 'density', '+=', '*', 'dp', '=', 'val', '*', 'color_fnum', ';', '}', 'g_assert', '(', 'density', '>', '0', '.', '0f', ')', ';', 'return', 'density', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1132,"['parse_xml_make_state', '(', 'Parse_xml_acs_state_code', 'code', ',', 'void', '*', 'object', ')', '{', 'Parse_xml_acs_state', '*', 's', ';', 's', '=', 'ALLOC', '(', 'Parse_xml_acs_state', ')', ';', 's', '->', 'code', '=', 'code', ';', 'switch', '(', 'code', ')', '{', 'case', 'ACS_PARSE_ACL_INDEX', ':', 's', '->', 'object', '.', 'acl_index', '=', '(', 'Acl_index', '*', ')', 'object', ';', 'break', ';', 'case', 'ACS_PARSE_ACL_MAP', ':', 's', '->', 'object', '.', 'acl_map', '=', '(', 'Acl_map', '*', ')', 'object', ';', 'break', ';', 'case', 'ACS_PARSE_SERVICES', ':', 's', '->', 'object', '.', 'services', '=', '(', 'Services', '*', ')', 'object', ';', 'break', ';', 'case', 'ACS_PARSE_SERVICE', ':', 's', '->', 'object', '.', 'service', '=', '(', 'Service', '*', ')', 'object', ';', 'break', ';', 'default', ':', 'return', '(', 'NULL', ')', ';', '}', 'return', '(', 's', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1133,"['BIO_nread0', '(', 'BIO', '*', 'bio', ',', 'char', '*', '*', 'buf', ')', '{', 'long', 'ret', ';', 'if', '(', '!bio', '->', 'init', ')', '{', 'BIOerr', '(', 'BIO_F_BIO_NREAD0', ',', 'BIO_R_UNINITIALIZED', ')', ';', 'return', '-', '2', ';', '}', 'ret', '=', 'BIO_ctrl', '(', 'bio', ',', 'BIO_C_NREAD0', ',', '0', ',', 'buf', ')', ';', 'if', '(', 'ret', '>', 'INT_MAX', ')', 'return', 'INT_MAX', ';', 'return', '(', 'int', ')', 'ret', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1134,"['__ecereMethod_Debugger_UpdateRemovedBreakpoint', '(', 'struct', '__ecereNameSpace__ecere__com__Instance', '*', 'this', ',', 'struct', 'Breakpoint', '*', 'bp', ')', '{', 'struct', 'Debugger', '*', '__ecerePointer_Debugger', '=', '(', 'struct', 'Debugger', '*', ')', '(', 'this', '?', '(', '(', '(', 'char', '*', ')', 'this', ')', '+', '__ecereClass_Debugger', '->', 'offset', ')', ':', '0', ')', ';', ';', 'if', '(', '__ecerePointer_Debugger', '->', 'targeted', '&&', 'bp', '->', 'inserted', ')', '{', 'int', 'oldState', '=', '__ecerePointer_Debugger', '->', 'state', ';', 'switch', '(', '__ecerePointer_Debugger', '->', 'state', ')', '{', 'case', '3', ':', 'if', '(', 'targetProcessId', ')', '__ecereMethod_Debugger_GdbDebugBreak', '(', 'this', ',', '0x1', ')', ';', 'case', '4', ':', 'case', '2', ':', '__ecereMethod_Debugger_UnsetBreakpoint', '(', 'this', ',', 'bp', ')', ';', 'break', ';', '}', 'if', '(', 'oldState', '==', '3', ')', '__ecereMethod_Debugger_GdbExecContinue', '(', 'this', ',', '0x0', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
1135,"['soc_remove_component', '(', 'struct', 'snd_soc_component', '*', 'component', ')', '{', 'if', '(', '!component', '->', 'card', ')', 'return', ';', 'if', '(', 'component', '->', 'codec', ')', 'list_del', '(', '&', 'component', '->', 'codec', '->', 'card_list', ')', ';', 'if', '(', 'component', '->', 'remove', ')', 'component', '->', 'remove', '(', 'component', ')', ';', 'snd_soc_dapm_free', '(', 'snd_soc_component_get_dapm', '(', 'component', ')', ')', ';', 'soc_cleanup_component_debugfs', '(', 'component', ')', ';', 'component', '->', 'card', '=', 'NULL', ';', 'module_put', '(', 'component', '->', 'dev', '->', 'driver', '->', 'owner', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1136,"['singleCompactStage3', '(', 'MBCSData', '*', 'mbcsData', ')', '{', 'uint16_t', '*', 'stage3', '=', '(', 'uint16_t', '*', ')', 'mbcsData', '->', 'fromUBytes', ';', 'uint16_t', 'map', '[', '0x1000', ']', ';', 'uint16_t', 'i', ',', 'start', ',', 'prevEnd', ',', 'newStart', ';', 'map', '[', '0', ']', '=', '0', ';', 'start', '=', 'newStart', '=', '16', ';', 'while', '(', 'start', '<', 'mbcsData', '->', 'stage3Top', ')', '{', 'prevEnd', '=', '(', 'uint16_t', ')', '(', 'newStart', '-', '1', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', '16', '&&', 'stage3', '[', 'start', '+', 'i', ']', '==', '0', '&&', 'stage3', '[', 'prevEnd', '-', 'i', ']', '==', '0', ';', '++', 'i', ')', '{', '}', 'if', '(', 'i', '>', '0', ')', '{', 'map', '[', 'start', '>>', '4', ']', '=', '(', 'uint16_t', ')', '(', 'newStart', '-', 'i', ')', ';', 'start', '+=', 'i', ';', 'for', '(', 'i', '=', '(', 'uint16_t', ')', '(', '16', '-', 'i', ')', ';', 'i', '>', '0', ';', '--', 'i', ')', '{', 'stage3', '[', 'newStart', '++', ']', '=', 'stage3', '[', 'start', '++', ']', ';', '}', '}', 'else', 'if', '(', 'newStart', '<', 'start', ')', '{', 'map', '[', 'start', '>>', '4', ']', '=', 'newStart', ';', 'for', '(', 'i', '=', '16', ';', 'i', '>', '0', ';', '--', 'i', ')', '{', 'stage3', '[', 'newStart', '++', ']', '=', 'stage3', '[', 'start', '++', ']', ';', '}', '}', 'else', '/', '*', 'no', 'overlap', '&&', 'newStart', '==', 'start', '*', '/', '{', 'map', '[', 'start', '>>', '4', ']', '=', 'start', ';', 'start', '=', 'newStart', '+=', '16', ';', '}', '}', 'if', '(', 'VERBOSE', '&&', 'newStart', '<', 'mbcsData', '->', 'stage3Top', ')', '{', 'printf', '(', '""""', ',', '(', 'unsigned', 'long', ')', 'mbcsData', '->', 'stage3Top', ',', '(', 'unsigned', 'long', ')', 'newStart', ',', '(', 'long', ')', '(', 'mbcsData', '->', 'stage3Top', '-', 'newStart', ')', '*', '2', ')', ';', '}', 'mbcsData', '->', 'stage3Top', '=', 'newStart', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'mbcsData', '->', 'stage2Top', ';', '++', 'i', ')', '{', 'mbcsData', '->', 'stage2Single', '[', 'i', ']', '=', 'map', '[', 'mbcsData', '->', 'stage2Single', '[', 'i', ']', '>>', '4', ']', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1137,"['full_daytime_range', '(', 'lList', '*', '*', 'dtrl', ')', '{', 'lListElem', '*', 'tmr', ';', 'DENTER', '(', 'TOP_LAYER', ',', '""""', ')', ';', 'if', '(', '!', '*', 'dtrl', ')', '*', 'dtrl', '=', 'lCreateList', '(', '""""', ',', 'TMR_Type', ')', ';', 'tmr', '=', 'lCreateElem', '(', 'TMR_Type', ')', ';', 'lAddSubUlong', '(', 'tmr', ',', 'TM_hour', ',', '0', ',', 'TMR_begin', ',', 'TM_Type', ')', ';', 'lAddSubUlong', '(', 'tmr', ',', 'TM_hour', ',', '24', ',', 'TMR_end', ',', 'TM_Type', ')', ';', 'lAppendElem', '(', '*', 'dtrl', ',', 'tmr', ')', ';', 'DRETURN_VOID', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1138,"['_discover_create_message', '(', 'discover_error_t', '*', '*', 'status', ',', 'char', '*', 'message', ')', '{', 'if', '(', '(', '*', 'status', ')', '->', 'message', ')', '{', 'free', '(', '(', '*', 'status', ')', '->', 'message', ')', ';', '}', '(', '*', 'status', ')', '->', 'message', '=', '_discover_xmalloc', '(', 'strlen', '(', 'message', ')', '+', '1', ')', ';', 'strcpy', '(', '(', '*', 'status', ')', '->', 'message', ',', 'message', ')', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1139,"['add_substrings', '(', 'char', '*', 'buffer', ',', 'size_t', '*', 'length', ',', 'ms_MediaCode', '*', 'code', ',', 'const', 'ms_Flag', '*', 'flag_list', ')', '{', 'int', 'j', ';', 'size_t', 'l', ';', 'j', '=', '0', ';', 'buffer', '=', 'strchr', '(', 'buffer', ',', ""''"", ')', ';', 'while', '(', 'flag_list', '[', 'j', ']', '.', 'code', '!=', '0', ')', '{', 'if', '(', 'flag_list', '[', 'j', ']', '.', 'code', '&', '*', 'code', ')', '{', 'l', '=', 'strlen', '(', 'flag_list', '[', 'j', ']', '.', 'name', ')', ';', 'if', '(', '*', 'length', '<', 'l', ')', '{', 'errno', '=', 'ERANGE', ';', 'return', '-', '1', ';', '}', '*', 'code', '&=', '~flag_list', '[', 'j', ']', '.', 'code', ';', 'strcpy', '(', 'buffer', ',', 'flag_list', '[', 'j', ']', '.', 'name', ')', ';', 'buffer', '+=', 'l', ';', '*', 'length', '-=', 'l', ';', '}', 'j', '++', ';', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1140,"['cin_isfuncdecl', '(', 'sp', ',', 'first_lnum', ')', 'char_u\t', '*', '*', 'sp', ';', 'linenr_T\tfirst_lnum', ';', '{', 'char_u\t', '*', 's', ';', 'linenr_T\tlnum', '=', 'first_lnum', ';', 'int\t\tretval', '=', 'FALSE', ';', 'if', '(', 'sp', '==', 'NULL', ')', 's', '=', 'ml_get', '(', 'lnum', ')', ';', 's', '=', '*', 'sp', ';', 'while', '(', '*', 's', '&&', '*', 's', '!=', ""''"", '&&', '*', 's', '!=', ""''"", '&&', '*', 's', '!=', '\'\'\'\'""\'', ')', '{', 's', '=', 'cin_skipcomment', '(', 's', ')', ';', '++', 's', ';', '}', 'if', '(', '*', 's', '!=', ""''"", ')', 'while', '(', '*', 's', '&&', '*', 's', '!=', ""''"", '&&', '*', 's', '!=', '\'\'\'\'""\'', ')', '{', 'if', '(', '*', 's', '==', ""''"", '&&', 'cin_nocode', '(', 's', '+', '1', ')', ')', '{', '/', '*', ""''"", 'at', 'the', 'end', ':', 'may', 'have', 'found', 'a', '*', 'Check', 'for', 'he', 'previous', 'line', 'not', 'to', 'end', 'in', 'a', 'backslash', ':', '*', '#if', 'defined', '(', 'x', ')', '&&', '*', '\t\t', 'defined', '(', 'y', ')', 'lnum', '=', 'first_lnum', '-', '1', ';', 's', '=', 'ml_get', '(', 'lnum', ')', ';', 'if', '(', '*', 's', '==', 'NUL', '||', 's', '[', 'STRLEN', '(', 's', ')', '-', '1', ']', '!=', ""''"", ')', 'retval', '=', 'TRUE', ';', 'goto', 'done', ';', '}', 'if', '(', '*', 's', '==', ""''"", '&&', 'cin_nocode', '(', 's', '+', '1', ')', ')', '{', 'if', '(', 'lnum', '>=', 'curbuf', '->', 'b_ml', '.', 'ml_line_count', ')', 'break', ';', 's', '=', 'ml_get', '(', '++', 'lnum', ')', ';', '}', 's', '=', 'cin_skipcomment', '(', 's', ')', ';', '++', 's', ';', '}', 'done', ':', 'if', '(', 'lnum', '!=', 'first_lnum', '&&', 'sp', '!=', 'NULL', ')', '*', 'sp', '=', 'ml_get', '(', 'first_lnum', ')', ';', 'return', 'retval', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1141,"['addJobs', '(', 'AbstractJobProvider', '*', 'provider', ',', 'int', 'count', ')', '{', 'QMutexLocker', 'locker', '(', '&', 'm_mutex', ')', ';', 'int', 'pos', '=', '0', ';', 'int', 'priority', '=', 'provider', '->', 'priority', '(', ')', ';', 'while', '(', 'pos', '<', 'm_pendingProviders', '.', 'count', '(', ')', '&&', 'm_pendingProviders', '[', 'pos', ']', '->', 'priority', '(', ')', '>=', 'priority', ')', 'pos', '++', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'count', ';', 'i', '++', ')', 'm_pendingProviders', '.', 'insert', '(', 'pos', ',', 'provider', ')', ';', 'm_hasPendingProviders', '.', 'wakeAll', '(', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1142,"['mimetype', '(', 'const', 'KUrl', '&', 'url', ')', '{', 'kDebug', '(', '7113', ')', '<<', 'url', ';', 'if', '(', '!maybeSetRequestUrl', '(', 'url', ')', ')', 'return', ';', 'resetSessionSettings', '(', ')', ';', 'm_request', '.', 'method', '=', 'HTTP_HEAD', ';', 'm_request', '.', 'cacheTag', '.', 'policy', '=', 'CC_Cache', ';', 'if', '(', 'proceedUntilResponseHeader', '(', ')', ')', '{', 'httpClose', '(', 'm_request', '.', 'isKeepAlive', ')', ';', 'finished', '(', ')', ';', '}', 'kDebug', '(', '7113', ')', '<<', 'm_mimeType', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1143,"['PK11_DigestFinal', '(', 'PK11Context', '*', 'context', ',', 'unsigned', 'char', '*', 'data', ',', 'unsigned', 'int', '*', 'outLen', ',', 'unsigned', 'int', 'length', ')', '{', 'CK_ULONG', 'len', ';', 'CK_RV', 'crv', ';', 'SECStatus', 'rv', ';', '/', '*', 'if', 'we', 'ran', 'out', 'of', 'session', ',', 'we', 'need', 'to', 'restore', 'our', 'previously', '*', 'state', '.', 'PK11_EnterContextMonitor', '(', 'context', ')', ';', 'if', '(', '!context', '->', 'ownSession', ')', '{', 'rv', '=', 'pk11_restoreContext', '(', 'context', ',', 'context', '->', 'savedData', ',', 'context', '->', 'savedLength', ')', ';', 'if', '(', 'rv', '!=', 'SECSuccess', ')', '{', 'PK11_ExitContextMonitor', '(', 'context', ')', ';', 'return', 'rv', ';', '}', '}', 'len', '=', 'length', ';', 'switch', '(', 'context', '->', 'operation', ')', '{', 'case', 'CKA_SIGN', ':', 'crv', '=', 'PK11_GETTAB', '(', 'context', '->', 'slot', ')', '->', 'C_SignFinal', '(', 'context', '->', 'session', ',', 'data', ',', '&', 'len', ')', ';', 'break', ';', 'case', 'CKA_VERIFY', ':', 'crv', '=', 'PK11_GETTAB', '(', 'context', '->', 'slot', ')', '->', 'C_VerifyFinal', '(', 'context', '->', 'session', ',', 'data', ',', 'len', ')', ';', 'break', ';', 'case', 'CKA_DIGEST', ':', 'crv', '=', 'PK11_GETTAB', '(', 'context', '->', 'slot', ')', '->', 'C_DigestFinal', '(', 'context', '->', 'session', ',', 'data', ',', '&', 'len', ')', ';', 'break', ';', 'case', 'CKA_ENCRYPT', ':', 'crv', '=', 'PK11_GETTAB', '(', 'context', '->', 'slot', ')', '->', 'C_EncryptFinal', '(', 'context', '->', 'session', ',', 'data', ',', '&', 'len', ')', ';', 'break', ';', 'case', 'CKA_DECRYPT', ':', 'crv', '=', 'PK11_GETTAB', '(', 'context', '->', 'slot', ')', '->', 'C_DecryptFinal', '(', 'context', '->', 'session', ',', 'data', ',', '&', 'len', ')', ';', 'break', ';', 'default', ':', 'crv', '=', 'CKR_OPERATION_NOT_INITIALIZED', ';', 'break', ';', '}', 'PK11_ExitContextMonitor', '(', 'context', ')', ';', '*', 'outLen', '=', '(', 'unsigned', 'int', ')', 'len', ';', 'if', '(', 'crv', '!=', 'CKR_OK', ')', '{', 'PORT_SetError', '(', 'PK11_MapError', '(', 'crv', ')', ')', ';', 'return', 'SECFailure', ';', '}', 'return', 'SECSuccess', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1144,"['_gst_array_hasvalue_accumulator', '(', 'GSignalInvocationHint', '*', 'ihint', ',', 'GValue', '*', 'return_accu', ',', 'const', 'GValue', '*', 'handler_return', ',', 'gpointer', 'dummy', ')', '{', 'gpointer', 'array', ';', 'array', '=', 'g_value_get_boxed', '(', 'handler_return', ')', ';', 'if', '(', '!', '(', 'ihint', '->', 'run_type', '&', 'G_SIGNAL_RUN_CLEANUP', ')', ')', 'g_value_set_boxed', '(', 'return_accu', ',', 'array', ')', ';', 'if', '(', 'array', '!=', 'NULL', ')', 'return', 'FALSE', ';', 'return', 'TRUE', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1145,"['ai_goal_find_dockpoint', '(', 'int', 'shipnum', ',', 'int', 'dock_type', ')', '{', 'int', 'dock_index', '=', '-', '1', ';', 'int', 'loop_count', '=', '0', ';', 'ship', '*', 'shipp', '=', '&', 'Ships', '[', 'shipnum', ']', ';', 'object', '*', 'objp', '=', '&', 'Objects', '[', 'shipp', '->', 'objnum', ']', ';', '/', '/', 'only', 'check', '100', 'points', 'for', ""sanity's"", 'while', '(', 'loop_count', '<', '100', ')', '{', 'dock_index', '=', 'model_find_dock_index', '(', 'Ship_info', '[', 'shipp', '->', 'ship_info_index', ']', '.', 'model_num', ',', 'dock_type', ',', 'dock_index', '+', '1', ')', ';', '/', '/', 'not', 'found', '?', 'if', '(', 'dock_index', '==', '-', '1', ')', '{', 'if', '(', 'loop_count', '==', '0', ')', '{', '/', '/', 'first', 'time', 'around', '.', '.', '.', 'there', 'are', 'no', 'slots', 'fitting', 'this', 'return', '-', '1', ';', '}', '{', '/', '/', 'every', 'slot', 'is', 'break', ';', '}', '}', '/', '/', ""we''s"", 'if', '(', 'dock_find_object_at_dockpoint', '(', 'objp', ',', 'dock_index', ')', '==', 'NULL', ')', '{', '/', '/', 'not', 'occupied', '.', '.', '.', 'yay', ',', ""we've"", 'found', 'an', 'return', 'dock_index', ';', '}', '/', '/', 'keep', 'loop_count', '++', ';', '}', '/', '/', 'insanity', '?', 'if', '(', 'loop_count', '>=', '100', ')', 'Warning', '(', 'LOCATION', ',', '""""', ',', 'shipp', '->', 'ship_name', ')', ';', '/', '/', 'if', ""we're"", 'here', ',', 'just', 'return', 'the', 'first', 'return', 'model_find_dock_index', '(', 'Ship_info', '[', 'shipp', '->', 'ship_info_index', ']', '.', 'model_num', ',', 'dock_type', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1146,"['AED_undo_cb', '(', 'AW_window', '*', 'aw', ',', 'AW_CL', 'cd1', ',', 'AW_CL', 'undo_type', ')', '{', 'GB_ERROR', 'error', '=', 'GB_undo', '(', 'GLOBAL_gb_main', ',', '(', 'GB_UNDO_TYPE', ')', 'undo_type', ')', ';', 'if', '(', 'error', ')', 'aw_message', '(', 'error', ')', ';', 'else', '{', 'GB_begin_transaction', '(', 'GLOBAL_gb_main', ')', ';', 'GB_commit_transaction', '(', 'GLOBAL_gb_main', ')', ';', 'aed_expose', '(', 'aw', ',', 'cd1', ',', '0', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1147,"['image_loaded', '(', 'MonoProfiler', '*', 'prof', ',', 'MonoImage', '*', 'image', ',', 'int', 'result', ')', '{', 'uint64_t', 'now', ';', 'const', 'char', '*', 'name', ';', 'int', 'nlen', ';', 'LogBuffer', '*', 'logbuffer', ';', 'if', '(', 'result', '!=', 'MONO_PROFILE_OK', ')', 'return', ';', 'name', '=', 'mono_image_get_filename', '(', 'image', ')', ';', 'nlen', '=', 'strlen', '(', 'name', ')', '+', '1', ';', 'logbuffer', '=', 'ensure_logbuf', '(', 'EVENT_SIZE', '/', '*', 'event', '*', '/', '+', 'LEB128_SIZE', '/', '*', 'time', '*', '/', '+', 'EVENT_SIZE', '/', '*', 'type', '*', '/', '+', 'LEB128_SIZE', '/', '*', 'image', '*', '/', '+', 'LEB128_SIZE', '/', '*', 'flags', '*', '/', '+', ')', ';', 'now', '=', 'current_time', '(', ')', ';', 'ENTER_LOG', '(', 'logbuffer', ',', '""""', ')', ';', 'emit_byte', '(', 'logbuffer', ',', 'TYPE_END_LOAD', '|', 'TYPE_METADATA', ')', ';', 'emit_time', '(', 'logbuffer', ',', 'now', ')', ';', 'emit_byte', '(', 'logbuffer', ',', 'TYPE_IMAGE', ')', ';', 'emit_ptr', '(', 'logbuffer', ',', 'image', ')', ';', 'memcpy', '(', 'logbuffer', '->', 'data', ',', 'name', ',', 'nlen', ')', ';', 'logbuffer', '->', 'data', '+=', 'nlen', ';', '/', '/', 'printf', '(', '""""', ',', 'image', ',', 'name', ')', ';', 'EXIT_LOG', '(', 'logbuffer', ')', ';', 'if', '(', 'logbuffer', '->', 'next', ')', 'safe_send', '(', 'prof', ',', 'logbuffer', ')', ';', 'process_requests', '(', 'prof', ')', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1148,"['SQLGetPrivateProfileString', '(', 'LPCSTR', 'lpszSection', ',', 'LPCSTR', 'lpszEntry', ',', 'LPCSTR', 'lpszDefault', ',', 'LPSTR', 'lpszRetBuffer', ',', 'int', 'cbRetBuffer', ',', 'LPCSTR', 'lpszFilename', ')', '{', 'char', 'pathbuf', '[', '1024', ']', ';', 'int', 'len', '=', '0', ';', 'CLEAR_ERROR', '(', ')', ';', 'if', '(', '!lpszRetBuffer', '||', '!cbRetBuffer', ')', '{', 'PUSH_ERROR', '(', 'ODBC_ERROR_INVALID_BUFF_LEN', ')', ';', 'goto', 'quit', ';', '}', 'if', '(', '!lpszDefault', ')', '{', 'PUSH_ERROR', '(', 'ODBC_ERROR_GENERAL_ERR', ')', ';', 'goto', 'quit', ';', '}', 'switch', '(', 'configMode', ')', '{', 'case', 'ODBC_USER_DSN', ':', 'wSystemDSN', '=', 'USERDSN_ONLY', ';', 'if', '(', 'lpszFilename', ')', '{', 'len', '=', 'GetPrivateProfileString', '(', 'lpszSection', ',', 'lpszEntry', ',', 'lpszDefault', ',', 'lpszRetBuffer', ',', 'cbRetBuffer', ',', 'lpszFilename', ')', ';', 'goto', 'quit', ';', '}', 'if', '(', '_iodbcadm_getinifile', '(', 'pathbuf', ',', 'sizeof', '(', 'pathbuf', ')', ',', 'FALSE', ',', 'FALSE', ')', ')', 'len', '=', 'GetPrivateProfileString', '(', 'lpszSection', ',', 'lpszEntry', ',', 'lpszDefault', ',', 'lpszRetBuffer', ',', 'cbRetBuffer', ',', 'pathbuf', ')', ';', 'goto', 'quit', ';', 'case', 'ODBC_SYSTEM_DSN', ':', 'wSystemDSN', '=', 'SYSTEMDSN_ONLY', ';', 'if', '(', 'lpszFilename', ')', '{', 'len', '=', 'GetPrivateProfileString', '(', 'lpszSection', ',', 'lpszEntry', ',', 'lpszDefault', ',', 'lpszRetBuffer', ',', 'cbRetBuffer', ',', 'lpszFilename', ')', ';', 'goto', 'quit', ';', '}', 'if', '(', '_iodbcadm_getinifile', '(', 'pathbuf', ',', 'sizeof', '(', 'pathbuf', ')', ',', 'FALSE', ',', 'FALSE', ')', ')', 'len', '=', 'GetPrivateProfileString', '(', 'lpszSection', ',', 'lpszEntry', ',', 'lpszDefault', ',', 'lpszRetBuffer', ',', 'cbRetBuffer', ',', 'pathbuf', ')', ';', 'goto', 'quit', ';', 'case', 'ODBC_BOTH_DSN', ':', 'wSystemDSN', '=', 'USERDSN_ONLY', ';', 'if', '(', 'lpszFilename', ')', '{', 'len', '=', 'GetPrivateProfileString', '(', 'lpszSection', ',', 'lpszEntry', ',', 'lpszDefault', ',', 'lpszRetBuffer', ',', 'cbRetBuffer', ',', 'lpszFilename', ')', ';', 'if', '(', '!len', ')', '{', 'CLEAR_ERROR', '(', ')', ';', 'wSystemDSN', '=', 'SYSTEMDSN_ONLY', ';', 'len', '=', 'GetPrivateProfileString', '(', 'lpszSection', ',', 'lpszEntry', ',', 'lpszDefault', ',', 'lpszRetBuffer', ',', 'cbRetBuffer', ',', 'lpszFilename', ')', ';', '}', 'goto', 'quit', ';', '}', 'if', '(', '_iodbcadm_getinifile', '(', 'pathbuf', ',', 'sizeof', '(', 'pathbuf', ')', ',', 'FALSE', ',', 'FALSE', ')', ')', '{', 'len', '=', 'GetPrivateProfileString', '(', 'lpszSection', ',', 'lpszEntry', ',', 'lpszDefault', ',', 'lpszRetBuffer', ',', 'cbRetBuffer', ',', 'pathbuf', ')', ';', 'if', '(', 'len', ')', 'goto', 'quit', ';', '}', 'CLEAR_ERROR', '(', ')', ';', 'wSystemDSN', '=', 'SYSTEMDSN_ONLY', ';', 'if', '(', '_iodbcadm_getinifile', '(', 'pathbuf', ',', 'sizeof', '(', 'pathbuf', ')', ',', 'FALSE', ',', 'FALSE', ')', ')', '{', 'len', '=', 'GetPrivateProfileString', '(', 'lpszSection', ',', 'lpszEntry', ',', 'lpszDefault', ',', 'lpszRetBuffer', ',', 'cbRetBuffer', ',', 'pathbuf', ')', ';', '}', 'goto', 'quit', ';', '}', 'PUSH_ERROR', '(', 'ODBC_ERROR_GENERAL_ERR', ')', ';', 'goto', 'quit', ';', 'quit', ':', 'wSystemDSN', '=', 'USERDSN_ONLY', ';', 'configMode', '=', 'ODBC_BOTH_DSN', ';', 'return', 'len', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1149,"['WildCardListMatch', '(', 'wxString', 'list', ',', 'wxString', 'name', ',', 'bool', 'strip', ')', '{', 'if', '(', 'list', '==', '_T', '(', '""""', ')', ')', '/', '/', 'any', 'empty', 'list', 'matches', 'everything', 'by', 'return', 'true', ';', 'wxString', 'wildlist', '=', 'list', ';', 'wxString', 'wild', '=', 'list', '.', 'BeforeFirst', '(', ""''"", ')', ';', 'if', '(', 'strip', ')', 'wild', '=', 'wild', '.', 'Strip', '(', 'wxString', ':', ':', 'both', ')', ';', 'while', '(', 'wildlist', '!=', '_T', '(', '""""', ')', ')', '{', 'if', '(', 'wild', '!=', '_T', '(', '""""', ')', '&&', ':', ':', 'wxMatchWild', '(', 'wild', ',', 'name', ')', ')', 'return', 'true', ';', 'wildlist', '=', 'wildlist', '.', 'AfterFirst', '(', ""''"", ')', ';', 'wild', '=', 'wildlist', '.', 'BeforeFirst', '(', ""''"", ')', ';', 'if', '(', 'strip', ')', 'wild', '=', 'wild', '.', 'Strip', '(', 'wxString', ':', ':', 'both', ')', ';', '}', 'return', 'false', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1150,"['propagate_block', '(', 'basic_block', 'bb', ',', 'regset', 'live', ',', 'regset', 'local_set', ',', 'regset', 'cond_local_set', ',', 'int', 'flags', ')', '{', 'struct', 'propagate_block_info', '*', 'pbi', ';', 'rtx', 'insn', ',', 'prev', ';', 'int', 'changed', ';', 'pbi', '=', 'init_propagate_block_info', '(', 'bb', ',', 'live', ',', 'local_set', ',', 'cond_local_set', ',', 'flags', ')', ';', 'if', '(', 'flags', '&', 'PROP_REG_INFO', ')', '{', 'int', 'i', ';', '/', '*', 'Process', 'the', 'regs', 'live', 'at', 'the', 'end', 'of', 'the', 'block', '.', 'EXECUTE_IF_SET_IN_REG_SET', '(', 'live', ',', '0', ',', 'i', ',', '{', 'REG_BASIC_BLOCK', '(', 'i', ')', '=', 'REG_BLOCK_GLOBAL', ';', '}', ')', ';', '}', 'changed', '=', '0', ';', 'for', '(', 'insn', '=', 'BB_END', '(', 'bb', ')', ';', ';', 'insn', '=', 'prev', ')', '{', '/', '*', 'If', 'this', 'is', 'a', 'call', 'to', ""`setjmp'"", 'et', 'al', ',', 'warn', 'if', 'if', '(', '(', 'flags', '&', 'PROP_REG_INFO', ')', '&&', 'GET_CODE', '(', 'insn', ')', '==', '&&', 'find_reg_note', '(', 'insn', ',', 'REG_SETJMP', ',', 'NULL', ')', ')', 'IOR_REG_SET', '(', 'regs_live_at_setjmp', ',', 'pbi', '->', 'reg_live', ')', ';', 'prev', '=', 'propagate_one_insn', '(', 'pbi', ',', 'insn', ')', ';', 'if', '(', '!prev', ')', 'changed', '|=', 'insn', '!=', 'get_insns', '(', ')', ';', 'changed', '|=', 'NEXT_INSN', '(', 'prev', ')', '!=', 'insn', ';', 'if', '(', 'insn', '==', 'BB_HEAD', '(', 'bb', ')', ')', 'break', ';', '}', 'free_propagate_block_info', '(', 'pbi', ')', ';', 'return', 'changed', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
1151,"['SparseMatrix_exclude_submatrix', '(', 'SparseMatrix', 'A', ',', 'int', 'nrow', ',', 'int', 'ncol', ',', 'int', '*', 'rindices', ',', 'int', '*', 'cindices', ')', '{', 'int', '*', 'r', ',', '*', 'c', ',', 'nr', ',', 'nc', ',', 'i', ';', 'SparseMatrix', 'B', ';', 'if', '(', 'nrow', '<=', '0', '&&', 'ncol', '<=', '0', ')', 'return', 'A', ';', 'r', '=', 'MALLOC', '(', 'sizeof', '(', 'int', ')', '*', '(', '(', 'size_t', ')', 'A', '->', 'm', ')', ')', ';', 'c', '=', 'MALLOC', '(', 'sizeof', '(', 'int', ')', '*', '(', '(', 'size_t', ')', 'A', '->', 'n', ')', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'A', '->', 'm', ';', 'i', '++', ')', 'r', '[', 'i', ']', '=', 'i', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'A', '->', 'n', ';', 'i', '++', ')', 'c', '[', 'i', ']', '=', 'i', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'nrow', ';', 'i', '++', ')', '{', 'if', '(', 'rindices', '[', 'i', ']', '>=', '0', '&&', 'rindices', '[', 'i', ']', '<', 'A', '->', 'm', ')', '{', 'r', '[', 'rindices', '[', 'i', ']', ']', '=', '-', '1', ';', '}', '}', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'ncol', ';', 'i', '++', ')', '{', 'if', '(', 'cindices', '[', 'i', ']', '>=', '0', '&&', 'cindices', '[', 'i', ']', '<', 'A', '->', 'n', ')', '{', 'c', '[', 'cindices', '[', 'i', ']', ']', '=', '-', '1', ';', '}', '}', 'nr', '=', 'nc', '=', '0', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'A', '->', 'm', ';', 'i', '++', ')', '{', 'if', '(', 'r', '[', 'i', ']', '>', '0', ')', 'r', '[', 'nr', '++', ']', '=', 'r', '[', 'i', ']', ';', '}', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'A', '->', 'n', ';', 'i', '++', ')', '{', 'if', '(', 'c', '[', 'i', ']', '>', '0', ')', 'c', '[', 'nc', '++', ']', '=', 'c', '[', 'i', ']', ';', '}', 'B', '=', 'SparseMatrix_get_submatrix', '(', 'A', ',', 'nr', ',', 'nc', ',', 'r', ',', 'c', ')', ';', 'FREE', '(', 'r', ')', ';', 'FREE', '(', 'c', ')', ';', 'return', 'B', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1152,"['px_put_u', '(', 'stream', '*', 's', ',', 'uint', 'i', ')', '{', 'if', '(', 'i', '<=', '255', ')', 'px_put_ub', '(', 's', ',', '(', 'byte', ')', 'i', ')', ';', 'px_put_us', '(', 's', ',', 'i', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1153,"['INET_rresolve', '(', 'struct', 'sockaddr_in', '*', 's_in', ',', 'int', 'numeric', ',', 'uint32_t', 'netmask', ')', '{', 'struct', 'addr', '{', 'struct', 'addr', '*', 'next', ';', 'struct', 'sockaddr_in', 'addr', ';', 'int', 'host', ';', 'char', 'name', '[', '1', ']', ';', '}', ';', 'static', 'struct', 'addr', '*', 'cache', '=', 'NULL', ';', 'struct', 'addr', '*', 'pn', ';', 'char', '*', 'name', ';', 'uint32_t', 'ad', ',', 'host_ad', ';', 'int', 'host', '=', '0', ';', 'if', '(', 's_in', '->', 'sin_family', '!=', 'AF_INET', ')', '{', '#ifdef', 'bb_error_msg', '(', '""""', ',', 's_in', '->', 'sin_family', ')', ';', 'errno', '=', 'EAFNOSUPPORT', ';', 'return', 'NULL', ';', '}', 'ad', '=', 's_in', '->', 'sin_addr', '.', 's_addr', ';', '#ifdef', 'bb_error_msg', '(', '""""', ',', '(', 'unsigned', ')', 'ad', ',', 'netmask', ',', 'numeric', ')', ';', 'if', '(', 'ad', '==', 'INADDR_ANY', ')', '{', 'if', '(', '(', 'numeric', '&', '0x0FFF', ')', '==', '0', ')', '{', 'if', '(', 'numeric', '&', '0x8000', ')', 'return', 'xstrdup', '(', '""""', ')', ';', 'return', 'xstrdup', '(', '""""', ')', ';', '}', '}', 'if', '(', 'numeric', '&', '0x0FFF', ')', 'return', 'xstrdup', '(', 'inet_ntoa', '(', 's_in', '->', 'sin_addr', ')', ')', ';', 'if', '(', '(', 'ad', '&', '(', '~netmask', ')', ')', '!=', '0', '||', '(', 'numeric', '&', '0x4000', ')', ')', 'host', '=', '1', ';', 'pn', '=', 'cache', ';', 'while', '(', 'pn', ')', '{', 'if', '(', 'pn', '->', 'addr', '.', 'sin_addr', '.', 's_addr', '==', 'ad', '&&', 'pn', '->', 'host', '==', 'host', ')', '{', '#ifdef', 'bb_error_msg', '(', '""""', ',', '(', 'host', '?', '""""', ':', '""""', ')', ',', '(', 'unsigned', ')', 'ad', ')', ';', 'return', 'xstrdup', '(', 'pn', '->', 'name', ')', ';', '}', 'pn', '=', 'pn', '->', 'next', ';', '}', 'host_ad', '=', 'ntohl', '(', 'ad', ')', ';', 'name', '=', 'NULL', ';', 'if', '(', 'host', ')', '{', 'struct', 'hostent', '*', 'ent', ';', '#ifdef', 'bb_error_msg', '(', '""""', ',', '(', 'unsigned', ')', 'ad', ')', ';', 'ent', '=', 'gethostbyaddr', '(', '(', 'char', '*', ')', '&', 'ad', ',', '4', ',', 'AF_INET', ')', ';', 'if', '(', 'ent', ')', 'name', '=', 'xstrdup', '(', 'ent', '->', 'h_name', ')', ';', '}', 'else', 'if', '(', 'ENABLE_FEATURE_ETC_NETWORKS', ')', '{', 'struct', 'netent', '*', 'np', ';', '#ifdef', 'bb_error_msg', '(', '""""', ',', '(', 'unsigned', ')', 'host_ad', ')', ';', 'np', '=', 'getnetbyaddr', '(', 'host_ad', ',', 'AF_INET', ')', ';', 'if', '(', 'np', ')', 'name', '=', 'xstrdup', '(', 'np', '->', 'n_name', ')', ';', '}', 'if', '(', '!name', ')', 'name', '=', 'xstrdup', '(', 'inet_ntoa', '(', 's_in', '->', 'sin_addr', ')', ')', ';', 'pn', '->', 'next', '=', 'cache', ';', 'pn', '->', 'addr', '=', '*', 's_in', ';', 'pn', '->', 'host', '=', 'host', ';', 'strcpy', '(', 'pn', '->', 'name', ',', 'name', ')', ';', 'cache', '=', 'pn', ';', 'return', 'name', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1154,"['clone_req_option_list', '(', 'ReqOption', '*', 'req_option', ')', '{', 'ReqOption', '*', 'new_req_option', ';', 'if', '(', 'req_option', '==', 'NULL', ')', 'return', 'NULL', ';', 'new_req_option', '=', '(', 'ReqOption', '*', ')', 'xmalloc', '(', 'sizeof', '(', 'ReqOption', ')', ')', ';', 'new_req_option', '->', 'or_option_terms', '=', 'NULL', ';', 'new_req_option', '->', 'next', '=', 'NULL', ';', 'new_req_option', '->', 'or_option_terms', '=', 'clone_req_or_option_list', '(', 'req_option', '->', 'or_option_terms', ')', ';', 'new_req_option', '->', 'next', '=', 'clone_req_option_list', '(', 'req_option', '->', 'next', ')', ';', 'return', 'new_req_option', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1155,"['vpd_macaddress_get', '(', 'adapter_t', '*', 'adapter', ',', 'int', 'index', ',', 'u8', 'mac_addr', '[', ']', ')', '{', 'struct', 'chelsio_vpd_t', 'vpd', ';', 'if', '(', 't1_eeprom_vpd_get', '(', 'adapter', ',', '&', 'vpd', ')', ')', 'return', '1', ';', 'memcpy', '(', 'mac_addr', ',', 'vpd', '.', 'mac_base_address', ',', '5', ')', ';', 'mac_addr', '[', '5', ']', '=', 'vpd', '.', 'mac_base_address', '[', '5', ']', '+', 'index', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1156,"['explain_buffer_in_addr', '(', 'explain_string_buffer_t', '*', 'sb', ',', 'const', 'struct', 'in_addr', '*', 'addr', ')', '{', 'explain_string_buffer_puts', '(', 'sb', ',', 'inet_ntoa', '(', '*', 'addr', ')', ')', ';', 'if', '(', 'ntohl', '(', 'addr', '->', 's_addr', ')', '==', 'INADDR_ANY', ')', '{', 'explain_string_buffer_puts', '(', 'sb', ',', '""""', ')', ';', '}', 'else', 'if', '(', 'ntohl', '(', 'addr', '->', 's_addr', ')', '==', 'INADDR_BROADCAST', ')', '{', 'explain_string_buffer_puts', '(', 'sb', ',', '""""', ')', ';', '}', 'else', 'if', '(', 'explain_option_dialect_specific', '(', ')', ')', '{', 'struct', 'hostent', '*', 'hep', ';', '/', '*', '*', 'We', 'make', 'this', 'dialect', 'specific', ',', 'because', 'different', 'systems', '*', 'have', 'different', 'entries', 'in', 'their', '/', 'etc', '/', 'hosts', 'file', ',', 'or', '*', 'could', 'be', 'transient', 'DNS', 'failures', ',', 'and', 'these', 'could', 'cause', '*', 'negatives', 'for', 'automated', 'testing', '.', 'hep', '=', 'gethostbyaddr', '(', 'addr', ',', 'sizeof', '(', 'addr', ')', ',', 'AF_INET', ')', ';', 'if', '(', 'hep', ')', '{', 'explain_string_buffer_putc', '(', 'sb', ',', ""''"", ')', ';', 'explain_string_buffer_puts_quoted', '(', 'sb', ',', 'hep', '->', 'h_name', ')', ';', '}', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1157,"['opLineTo', '(', 'Object', 'args', '[', ']', ',', 'int', 'numArgs', ')', '{', 'if', '(', '!state', '->', 'isCurPt', '(', ')', ')', '{', 'error', '(', 'getPos', '(', ')', ',', '""""', ')', ';', 'return', ';', '}', 'state', '->', 'lineTo', '(', 'args', '[', '0', ']', '.', 'getNum', '(', ')', ',', 'args', '[', '1', ']', '.', 'getNum', '(', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1158,"['pj_init_plus', '(', 'const', 'char', '*', 'definition', ')', '{', '#define', 'MAX_ARG', 'char\t', '*', 'argv', '[', 'MAX_ARG', ']', ';', 'char\t', '*', 'defn_copy', ';', 'int\t\targc', '=', '0', ',', 'i', ';', 'PJ\t', '*', 'result', ';', 'defn_copy', '=', '(', 'char', '*', ')', 'pj_malloc', '(', 'strlen', '(', 'definition', ')', '+', '1', ')', ';', 'strcpy', '(', 'defn_copy', ',', 'definition', ')', ';', 'for', '(', 'i', '=', '0', ';', 'defn_copy', '[', 'i', ']', '!=', ""''"", ';', 'i', '++', ')', '{', 'switch', '(', 'defn_copy', '[', 'i', ']', ')', '{', 'case', ""''"", ':', 'if', '(', 'i', '==', '0', '||', 'defn_copy', '[', 'i', '-', '1', ']', '==', ""''"", ')', '{', 'if', '(', 'argc', '+', '1', '==', 'MAX_ARG', ')', '{', 'pj_errno', '=', '-', '44', ';', 'return', 'NULL', ';', '}', 'argv', '[', 'argc', '++', ']', '=', 'defn_copy', '+', 'i', '+', '1', ';', '}', 'break', ';', 'case', ""''"", ':', 'case', ""''"", ':', 'case', ""''"", ':', 'defn_copy', '[', 'i', ']', '=', ""''"", ';', 'break', ';', 'default', ':', '/', '*', 'do', 'nothing', '*', '/', ';', '}', '}', 'result', '=', 'pj_init', '(', 'argc', ',', 'argv', ')', ';', 'pj_dalloc', '(', 'defn_copy', ')', ';', 'return', 'result', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1159,"['kvm_pv_enable_async_pf', '(', 'struct', 'kvm_vcpu', '*', 'vcpu', ',', 'u64', 'data', ')', '{', 'gpa_t', 'gpa', '=', 'data', '&', '~0x3f', ';', 'if', '(', 'data', '&', '0x3c', ')', 'return', '1', ';', 'vcpu', '->', 'arch', '.', 'apf', '.', 'msr_val', '=', 'data', ';', 'if', '(', '!', '(', 'data', '&', 'KVM_ASYNC_PF_ENABLED', ')', ')', '{', 'kvm_clear_async_pf_completion_queue', '(', 'vcpu', ')', ';', 'kvm_async_pf_hash_reset', '(', 'vcpu', ')', ';', 'return', '0', ';', '}', 'if', '(', 'kvm_gfn_to_hva_cache_init', '(', 'vcpu', '->', 'kvm', ',', '&', 'vcpu', '->', 'arch', '.', 'apf', '.', 'data', ',', 'gpa', ',', 'sizeof', '(', 'u32', ')', ')', ')', 'return', '1', ';', 'vcpu', '->', 'arch', '.', 'apf', '.', 'send_user_only', '=', '!', '(', 'data', '&', 'KVM_ASYNC_PF_SEND_ALWAYS', ')', ';', 'kvm_async_pf_wakeup_all', '(', 'vcpu', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1160,"['PropertyOfSameObject', '(', 'Expression', '*', 'e1', ',', 'Expression', '*', 'e2', ')', '{', 'Property', '*', 'p1', '=', 'e1', '->', 'AsProperty', '(', ')', ';', 'Property', '*', 'p2', '=', 'e2', '->', 'AsProperty', '(', ')', ';', 'if', '(', '(', 'p1', '==', 'NULL', ')', '||', '(', 'p2', '==', 'NULL', ')', ')', 'return', 'false', ';', 'return', 'SameObject', '(', 'p1', '->', 'obj', '(', ')', ',', 'p2', '->', 'obj', '(', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1161,"['CreateRhombicosidodecahedron', '(', 'double', 'radius', ')', '\t', '{', 'return', 'CreateIcosahedron', '(', 'radius', '*', 'sqrt', '(', '10', '.', '0', '/', '(', '35', '.', '0', '+', '9', '.', '0', '*', 'sqrt', '(', '5', '.', '0', ')', ')', ')', ')', '->', 'cantellate', '(', '1', '.', '5', '*', '(', 'sqrt', '(', '5', '.', '0', ')', '-', '1', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1162,"['RenameRelation', '(', 'Oid', 'myrelid', ',', 'const', 'char', '*', 'newrelname', ',', 'ObjectType', 'reltype', ')', '{', 'Relation\ttargetrelation', ';', 'Oid\t\t\tnamespaceId', ';', 'char\t\trelkind', ';', '/', '*', '*', 'Grab', 'an', 'exclusive', 'lock', 'on', 'the', 'target', 'table', ',', 'index', ',', 'sequence', 'or', 'view', ',', '*', 'which', 'we', 'will', 'NOT', 'release', 'until', 'end', 'of', 'transaction', '.', 'targetrelation', '=', 'relation_open', '(', 'myrelid', ',', 'AccessExclusiveLock', ')', ';', 'namespaceId', '=', 'RelationGetNamespace', '(', 'targetrelation', ')', ';', 'relkind', '=', 'targetrelation', '->', 'rd_rel', '->', 'relkind', ';', '/', '*', '*', 'For', 'compatibility', 'with', 'prior', 'releases', ',', 'we', ""don't"", 'complain', 'if', 'ALTER', '*', 'or', 'ALTER', 'INDEX', 'is', 'used', 'to', 'rename', 'some', 'other', 'type', 'of', 'relation', '.', '*', 'ALTER', 'SEQUENCE', '/', 'VIEW', '/', 'FOREIGN', 'TABLE', 'are', 'only', 'to', 'be', 'used', 'with', 'relations', '*', 'that', 'type', '.', 'if', '(', 'reltype', '==', 'OBJECT_SEQUENCE', '&&', 'relkind', '!=', 'RELKIND_SEQUENCE', ')', 'ereport', '(', 'ERROR', ',', '(', 'errcode', '(', 'ERRCODE_WRONG_OBJECT_TYPE', ')', ',', 'errmsg', '(', '""""', '%', 's\\""""', ',', 'RelationGetRelationName', '(', 'targetrelation', ')', ')', ')', ')', ';', 'if', '(', 'reltype', '==', 'OBJECT_VIEW', '&&', 'relkind', '!=', 'RELKIND_VIEW', ')', 'ereport', '(', 'ERROR', ',', '(', 'errcode', '(', 'ERRCODE_WRONG_OBJECT_TYPE', ')', ',', 'errmsg', '(', '""""', '%', 's\\""""', ',', 'RelationGetRelationName', '(', 'targetrelation', ')', ')', ')', ')', ';', 'if', '(', 'reltype', '==', 'OBJECT_FOREIGN_TABLE', '&&', 'relkind', '!=', 'RELKIND_FOREIGN_TABLE', ')', 'ereport', '(', 'ERROR', ',', '(', 'errcode', '(', 'ERRCODE_WRONG_OBJECT_TYPE', ')', ',', 'errmsg', '(', '""""', '%', 's\\""""', ',', 'RelationGetRelationName', '(', 'targetrelation', ')', ')', ')', ')', ';', '/', '*', '*', ""Don't"", 'allow', 'ALTER', 'TABLE', 'on', 'composite', 'types', '.', 'We', 'want', 'people', 'to', 'use', '*', 'TYPE', 'for', 'that', '.', 'if', '(', 'relkind', '==', 'RELKIND_COMPOSITE_TYPE', ')', 'ereport', '(', 'ERROR', ',', '(', 'errcode', '(', 'ERRCODE_WRONG_OBJECT_TYPE', ')', ',', 'errmsg', '(', '""""', '%', 's\\""""', ',', 'RelationGetRelationName', '(', 'targetrelation', ')', ')', ',', 'errhint', '(', '""""', ')', ')', ')', ';', 'RenameRelationInternal', '(', 'myrelid', ',', 'newrelname', ',', 'namespaceId', ')', ';', '/', '*', '*', 'Close', 'rel', ',', 'but', 'keep', 'exclusive', 'relation_close', '(', 'targetrelation', ',', 'NoLock', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1163,"['parser_scan_multipart_subparts', '(', 'GMimeParser', '*', 'parser', ',', 'GMimeMultipart', '*', 'multipart', ')', '{', 'struct', '_GMimeParserPrivate', '*', 'priv', '=', 'parser', '->', 'priv', ';', 'ContentType', '*', 'content_type', ';', 'GMimeObject', '*', 'subpart', ';', 'int', 'found', ';', 'do', '{', 'if', '(', 'parser_skip_line', '(', 'parser', ')', '==', '-', '1', ')', '{', 'found', '=', 'FOUND_EOS', ';', 'break', ';', '}', 'priv', '->', 'state', '=', 'GMIME_PARSER_STATE_HEADERS', ';', 'if', '(', 'parser_step', '(', 'parser', ')', '==', 'GMIME_PARSER_STATE_ERROR', ')', '{', 'found', '=', 'FOUND_EOS', ';', 'break', ';', '}', 'if', '(', 'priv', '->', 'state', '==', 'GMIME_PARSER_STATE_COMPLETE', '&&', 'priv', '->', 'headers', '==', 'NULL', ')', '{', 'found', '=', 'FOUND_END_BOUNDARY', ';', 'break', ';', '}', 'content_type', '=', 'parser_content_type', '(', 'parser', ',', '(', '(', 'GMimeObject', '*', ')', 'multipart', ')', '->', 'content_type', ')', ';', 'if', '(', 'content_type_is_type', '(', 'content_type', ',', '""""', ',', '""""', ')', ')', 'subpart', '=', 'parser_construct_multipart', '(', 'parser', ',', 'content_type', ',', 'FALSE', ',', '&', 'found', ')', ';', 'subpart', '=', 'parser_construct_leaf_part', '(', 'parser', ',', 'content_type', ',', 'FALSE', ',', '&', 'found', ')', ';', 'g_mime_multipart_add', '(', 'multipart', ',', 'subpart', ')', ';', 'content_type_destroy', '(', 'content_type', ')', ';', 'g_object_unref', '(', 'subpart', ')', ';', '}', 'while', '(', 'found', '==', 'FOUND_BOUNDARY', '&&', 'found_immediate_boundary', '(', 'priv', ',', 'FALSE', ')', ')', ';', 'return', 'found', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1164,"['FCEU_DrawLagCounter', '(', 'uint8', '*', 'XBuf', ')', '{', 'if', '(', 'lagCounterDisplay', ')', '{', '/', '/', 'If', 'currently', 'lagging', '-', 'display', 'red', ',', 'else', 'display', 'uint8', 'color', '=', '(', 'lagFlag', ')', '?', '(', '0x16', '+', '0x80', ')', ':', '(', '0x2A', '+', '0x80', ')', ';', 'sprintf', '(', 'lagcounterbuf', ',', '""""', ',', 'lagCounter', ')', ';', 'if', '(', 'lagcounterbuf', '[', '0', ']', ')', 'DrawTextTrans', '(', 'ClipSidesOffset', '+', 'XBuf', '+', 'FCEU_TextScanlineOffsetFromBottom', '(', '40', ')', '+', '1', ',', '256', ',', '(', 'uint8', '*', ')', 'lagcounterbuf', ',', 'color', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1165,"['calcBorderThickness', '(', 'void', ')', '{', 'calcLeftBorderThick', '(', ')', ';', 'calcRightBorderThick', '(', ')', ';', 'calcTopBorderThick', '(', ')', ';', 'calcBotBorderThick', '(', ')', ';', '/', '/', 'set', 'the', 'boolean', 'flags', 'm_bIsAlongTopBorder', 'and', 'if', '(', 'canDrawTopBorder', '(', ')', ')', '{', 'if', '(', 'isFirstLineInBlock', '(', ')', ')', '{', 'm_bIsAlongTopBorder', '=', 'true', ';', '}', 'if', '(', 'isSameYAsPrevious', '(', ')', ')', '{', 'fp_Line', '*', 'ppLine', '=', 'static_cast', '<', 'fp_Line', '*', '>', '(', 'getPrev', '(', ')', ')', ';', 'while', '(', 'ppLine', '&&', 'ppLine', '->', 'isSameYAsPrevious', '(', ')', ')', '{', 'ppLine', '=', 'static_cast', '<', 'fp_Line', '*', '>', '(', 'ppLine', '->', 'getPrev', '(', ')', ')', ';', '}', 'if', '(', 'ppLine', '&&', 'ppLine', '->', 'isFirstLineInBlock', '(', ')', ')', '{', 'm_bIsAlongTopBorder', '=', 'true', ';', '}', '}', '}', 'if', '(', 'canDrawBotBorder', '(', ')', ')', '{', 'if', '(', 'isLastLineInBlock', '(', ')', ')', '{', 'm_bIsAlongBotBorder', '=', 'true', ';', '}', 'if', '(', 'isWrapped', '(', ')', ')', '{', 'fp_Line', '*', 'npLine', '=', 'static_cast', '<', 'fp_Line', '*', '>', '(', 'getNext', '(', ')', ')', ';', ';', 'if', '(', 'npLine', '&&', 'isSameYAsPrevious', '(', ')', ')', '{', '{', 'if', '(', 'npLine', '->', 'isLastLineInBlock', '(', ')', ')', '{', 'm_bIsAlongBotBorder', '=', 'true', ';', 'break', ';', '}', 'npLine', '=', 'static_cast', '<', 'fp_Line', '*', '>', '(', 'npLine', '->', 'getNext', '(', ')', ')', ';', '}', 'while', '(', 'npLine', '&&', 'npLine', '->', 'isSameYAsPrevious', '(', ')', ')', ';', '}', '}', 'if', '(', 'm_bIsAlongBotBorder', ')', '{', 'fp_Line', '*', 'ppLine', '=', 'this', ';', 'while', '(', 'ppLine', '&&', 'ppLine', '->', 'isSameYAsPrevious', '(', ')', ')', '{', 'ppLine', '=', 'static_cast', '<', 'fp_Line', '*', '>', '(', 'ppLine', '->', 'getPrev', '(', ')', ')', ';', '}', 'if', '(', 'ppLine', ')', 'ppLine', '=', 'static_cast', '<', 'fp_Line', '*', '>', '(', 'ppLine', '->', 'getPrev', '(', ')', ')', ';', 'while', '(', 'ppLine', '&&', 'ppLine', '->', 'isAlongBotBorder', '(', ')', ')', '{', 'ppLine', '->', 'setAlongBotBorder', '(', 'false', ')', ';', 'ppLine', '->', 'recalcHeight', '(', ')', ';', '}', '}', '}', 'if', '(', 'isFirstLineInBlock', '(', ')', '&&', '!canDrawTopBorder', '(', ')', ')', '{', 'fl_BlockLayout', '*', 'pBl', '=', 'static_cast', '<', 'fl_BlockLayout', '*', '>', '(', 'getBlock', '(', ')', '->', 'getPrev', '(', ')', ')', ';', 'fp_Line', '*', 'pLine', '=', 'static_cast', '<', 'fp_Line', '*', '>', '(', 'pBl', '->', 'getLastContainer', '(', ')', ')', ';', 'if', '(', 'pLine', '&&', 'pLine', '->', 'isAlongBotBorder', '(', ')', ')', '{', 'pBl', '->', 'setLineHeightBlockWithBorders', '(', '-', '1', ')', ';', '}', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1166,"['intel_pstate_verify_policy', '(', 'struct', 'cpufreq_policy', '*', 'policy', ')', '{', 'cpufreq_verify_within_cpu_limits', '(', 'policy', ')', ';', 'if', '(', 'policy', '->', 'policy', '!=', 'CPUFREQ_POLICY_POWERSAVE', '&&', 'policy', '->', 'policy', '!=', 'CPUFREQ_POLICY_PERFORMANCE', ')', 'return', '-', 'EINVAL', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1167,"['con_set_trans_old', '(', 'unsigned', 'char', '__user', '*', 'arg', ')', '{', 'int', 'i', ';', 'unsigned', 'short', '*', 'p', '=', 'translations', '[', 'USER_MAP', ']', ';', 'if', '(', '!access_ok', '(', 'VERIFY_READ', ',', 'arg', ',', 'E_TABSZ', ')', ')', 'return', '-', 'EFAULT', ';', 'console_lock', '(', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'E_TABSZ', ';', 'i', '++', ')', '{', 'unsigned', 'char', 'uc', ';', '__get_user', '(', 'uc', ',', 'arg', '+', 'i', ')', ';', 'p', '[', 'i', ']', '=', 'UNI_DIRECT_BASE', '|', 'uc', ';', '}', 'update_user_maps', '(', ')', ';', 'console_unlock', '(', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1168,"['build_chassis', '(', 'ibnd_node_t', '*', 'node', ',', 'ibnd_chassis_t', '*', 'chassis', ')', '{', 'int', 'p', '=', '0', ';', 'ibnd_node_t', '*', 'remnode', '=', '0', ';', 'ibnd_port_t', '*', 'port', '=', '0', ';', 'if', '(', 'insert_spine', '(', 'node', ',', 'chassis', ')', ')', 'return', '-', '1', ';', 'for', '(', 'p', '=', '1', ';', 'p', '<=', 'node', '->', 'numports', ';', 'p', '++', ')', '{', 'port', '=', 'node', '->', 'ports', '[', 'p', ']', ';', 'if', '(', '!port', '||', '!port', '->', 'remoteport', ')', 'continue', ';', '/', '*', '*', 'ISR4700', 'double', 'density', 'fabric', 'board', 'ports', '19', '-', '36', '*', 'chassis', 'external', 'ports', ',', 'so', 'skip', 'if', '(', 'is_spine_4700x2', '(', 'node', ')', '&&', '(', 'port', '->', 'portnum', '>', '18', ')', ')', 'continue', ';', 'remnode', '=', 'port', '->', 'remoteport', '->', 'node', ';', 'if', '(', '!remnode', '->', 'ch_found', ')', 'insert_line_router', '(', 'remnode', ',', 'chassis', ')', ';', '}', 'if', '(', 'pass_on_lines_catch_spines', '(', 'chassis', ')', ')', 'return', '-', '1', ';', 'if', '(', 'pass_on_spines_catch_lines', '(', 'chassis', ')', ')', 'return', '-', '1', ';', 'if', '(', 'pass_on_lines_catch_spines', '(', 'chassis', ')', ')', 'return', '-', '1', ';', 'if', '(', 'pass_on_spines_catch_lines', '(', 'chassis', ')', ')', 'return', '-', '1', ';', 'pass_on_spines_interpolate_chguid', '(', 'chassis', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1169,"['text_property_to_utf8', '(', 'Display', '*', 'display', ',', 'const', 'XTextProperty', '*', 'prop', ')', '{', 'GdkDisplay', '*', 'gdkdisplay', ';', 'char', '*', '*', 'list', ';', 'int', 'count', ';', 'char', '*', 'retval', ';', 'list', '=', 'NULL', ';', 'gdkdisplay', '=', '_wnck_gdk_display_lookup_from_display', '(', 'display', ')', ';', 'if', '(', '!gdkdisplay', ')', 'return', 'NULL', ';', 'count', '=', 'gdk_text_property_to_utf8_list_for_display', '(', 'gdkdisplay', ',', 'gdk_x11_xatom_to_atom', '(', 'prop', '->', 'encoding', ')', ',', 'prop', '->', 'format', ',', 'prop', '->', 'value', ',', 'prop', '->', 'nitems', ',', '&', 'list', ')', ';', 'if', '(', 'count', '==', '0', ')', 'retval', '=', 'NULL', ';', '{', 'retval', '=', 'list', '[', '0', ']', ';', '}', 'g_strfreev', '(', 'list', ')', ';', 'return', 'retval', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1170,"['client3_1_mkdir', '(', 'call_frame_t', '*', 'frame', ',', 'xlator_t', '*', 'this', ',', 'void', '*', 'data', ')', '{', 'clnt_local_t', '*', 'local', '=', 'NULL', ';', 'clnt_conf_t', '*', 'conf', '=', 'NULL', ';', 'clnt_args_t', '*', 'args', '=', 'NULL', ';', 'gfs3_mkdir_req', 'req', '=', '{', '{', '0', ',', '}', ',', '}', ';', 'int', 'ret', '=', '0', ';', 'int', 'op_errno', '=', 'ESTALE', ';', 'if', '(', '!frame', '||', '!this', '||', '!data', ')', 'goto', 'unwind', ';', 'args', '=', 'data', ';', 'local', '=', 'mem_get0', '(', 'this', '->', 'local_pool', ')', ';', 'if', '(', '!local', ')', '{', 'op_errno', '=', 'ENOMEM', ';', 'goto', 'unwind', ';', '}', 'if', '(', '!', '(', 'args', '->', 'loc', '&&', 'args', '->', 'loc', '->', 'parent', ')', ')', 'goto', 'unwind', ';', 'loc_copy', '(', '&', 'local', '->', 'loc', ',', 'args', '->', 'loc', ')', ';', 'frame', '->', 'local', '=', 'local', ';', 'if', '(', '!uuid_is_null', '(', 'args', '->', 'loc', '->', 'parent', '->', 'gfid', ')', ')', 'memcpy', '(', 'req', '.', 'pargfid', ',', 'args', '->', 'loc', '->', 'parent', '->', 'gfid', ',', '16', ')', ';', 'memcpy', '(', 'req', '.', 'pargfid', ',', 'args', '->', 'loc', '->', 'pargfid', ',', '16', ')', ';', 'GF_ASSERT_AND_GOTO_WITH_ERROR', '(', 'this', '->', 'name', ',', '!uuid_is_null', '(', '*', '(', '(', 'uuid_t', '*', ')', 'req', '.', 'pargfid', ')', ')', ',', 'unwind', ',', 'op_errno', ',', 'EINVAL', ')', ';', 'req', '.', 'bname', '=', '(', 'char', '*', ')', 'args', '->', 'loc', '->', 'name', ';', 'req', '.', 'mode', '=', 'args', '->', 'mode', ';', 'req', '.', 'umask', '=', 'args', '->', 'umask', ';', 'conf', '=', 'this', '->', 'private', ';', 'GF_PROTOCOL_DICT_SERIALIZE', '(', 'this', ',', 'args', '->', 'xdata', ',', '(', '&', 'req', '.', 'xdata', '.', 'xdata_val', ')', ',', 'req', '.', 'xdata', '.', 'xdata_len', ',', 'op_errno', ',', 'unwind', ')', ';', 'ret', '=', 'client_submit_request', '(', 'this', ',', '&', 'req', ',', 'frame', ',', 'conf', '->', 'fops', ',', 'GFS3_OP_MKDIR', ',', 'client3_1_mkdir_cbk', ',', 'NULL', ',', 'NULL', ',', '0', ',', 'NULL', ',', '0', ',', 'NULL', ',', '(', 'xdrproc_t', ')', 'xdr_gfs3_mkdir_req', ')', ';', 'if', '(', 'ret', ')', '{', 'gf_log', '(', 'this', '->', 'name', ',', 'GF_LOG_WARNING', ',', '""""', ')', ';', '}', 'if', '(', 'req', '.', 'xdata', '.', 'xdata_val', ')', 'GF_FREE', '(', 'req', '.', 'xdata', '.', 'xdata_val', ')', ';', 'return', '0', ';', 'unwind', ':', 'CLIENT_STACK_UNWIND', '(', 'mkdir', ',', 'frame', ',', '-', '1', ',', 'op_errno', ',', 'NULL', ',', 'NULL', ',', 'NULL', ',', 'NULL', ',', 'NULL', ')', ';', 'if', '(', 'req', '.', 'xdata', '.', 'xdata_val', ')', 'GF_FREE', '(', 'req', '.', 'xdata', '.', 'xdata_val', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  True,CWE-other  True
1171,"['Init', '(', ')', '{', 'm_lastsearchtime', '=', '0', ';', 'lastpurgetime', '=', ':', ':', 'GetTickCount', '(', ')', ';', 'm_paused', '=', 'false', ';', 'm_stopped', '=', 'false', ';', 'm_insufficient', '=', 'false', ';', 'status', '=', 'PS_EMPTY', ';', 'transferred', '=', '0', ';', 'm_iLastPausePurge', '=', 'time', '(', 'NULL', ')', ';', 'if', '(', 'thePrefs', ':', ':', 'GetNewAutoDown', '(', ')', ')', '{', 'm_iDownPriority', '=', 'PR_HIGH', ';', 'm_bAutoDownPriority', '=', 'true', ';', '}', 'else', '{', 'm_iDownPriority', '=', 'PR_NORMAL', ';', 'm_bAutoDownPriority', '=', 'false', ';', '}', 'transferingsrc', '=', '0', ';', '/', '/', 'kBpsDown', '=', '0', '.', '0', ';', 'm_hashsetneeded', '=', 'true', ';', 'm_count', '=', '0', ';', 'percentcompleted', '=', '0', ';', 'completedsize', '=', '0', ';', 'lastseencomplete', '=', '0', ';', 'm_availablePartsCount', '=', '0', ';', 'm_ClientSrcAnswered', '=', '0', ';', 'm_LastNoNeededCheck', '=', '0', ';', 'm_iRating', '=', '0', ';', 'm_nTotalBufferData', '=', '0', ';', 'm_nLastBufferFlushTime', '=', '0', ';', 'm_bPercentUpdated', '=', 'false', ';', 'm_iGainDueToCompression', '=', '0', ';', 'm_iLostDueToCorruption', '=', '0', ';', 'm_iTotalPacketsSavedDueToICH', '=', '0', ';', 'm_category', '=', '0', ';', 'm_lastRefreshedDLDisplay', '=', '0', ';', 'm_nDlActiveTime', '=', '0', ';', 'm_tActivated', '=', '0', ';', 'm_is_A4AF_auto', '=', 'false', ';', 'm_localSrcReqQueued', '=', 'false', ';', 'm_nCompleteSourcesTime', '=', 'time', '(', 'NULL', ')', ';', 'm_nCompleteSourcesCount', '=', '0', ';', 'm_nCompleteSourcesCountLo', '=', '0', ';', 'm_nCompleteSourcesCountHi', '=', '0', ';', 'm_validSources', '=', '0', ';', 'm_notCurrentSources', '=', '0', ';', '/', '/', 'm_LastSearchTimeKad', '=', '0', ';', 'm_TotalSearchesKad', '=', '0', ';', '#ifndef', 'm_CorruptionBlackBox', '=', 'new', 'CCorruptionBlackBox', '(', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1172,"['return_handler2', '(', 'struct', 'kretprobe_instance', '*', 'ri', ',', 'struct', 'pt_regs', '*', 'regs', ')', '{', 'unsigned', 'long', 'ret', '=', 'regs_return_value', '(', 'regs', ')', ';', 'if', '(', 'ret', '!=', '(', 'rand1', '/', 'div_factor', ')', '+', '1', ')', '{', 'handler_errors', '++', ';', 'pr_err', '(', '""""', ')', ';', '}', 'if', '(', 'krph_val', '==', '0', ')', '{', 'handler_errors', '++', ';', 'pr_err', '(', '""""', ')', ';', '}', 'krph_val', '=', 'rand1', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1173,"['bnx2x_setup_tc', '(', 'struct', 'net_device', '*', 'dev', ',', 'u8', 'num_tc', ')', '{', 'struct', 'bnx2x', '*', 'bp', '=', 'netdev_priv', '(', 'dev', ')', ';', 'u8', 'c2s_map', '[', 'BNX2X_MAX_PRIORITY', ']', ',', 'c2s_def', ';', 'int', 'cos', ',', 'prio', ',', 'count', ',', 'offset', ';', 'ASSERT_RTNL', '(', ')', ';', 'if', '(', '!num_tc', ')', '{', 'netdev_reset_tc', '(', 'dev', ')', ';', 'return', '0', ';', '}', 'if', '(', 'num_tc', '>', 'bp', '->', 'max_cos', ')', '{', 'BNX2X_ERR', '(', '""""', ',', 'num_tc', ',', 'bp', '->', 'max_cos', ')', ';', 'return', '-', 'EINVAL', ';', '}', 'if', '(', 'netdev_set_num_tc', '(', 'dev', ',', 'num_tc', ')', ')', '{', 'BNX2X_ERR', '(', '""""', ',', 'num_tc', ')', ';', 'return', '-', 'EINVAL', ';', '}', 'bnx2x_get_c2s_mapping', '(', 'bp', ',', 'c2s_map', ',', '&', 'c2s_def', ')', ';', 'for', '(', 'prio', '=', '0', ';', 'prio', '<', 'BNX2X_MAX_PRIORITY', ';', 'prio', '++', ')', '{', 'int', 'outer_prio', '=', 'c2s_map', '[', 'prio', ']', ';', 'netdev_set_prio_tc_map', '(', 'dev', ',', 'prio', ',', 'bp', '->', 'prio_to_cos', '[', 'outer_prio', ']', ')', ';', 'DP', '(', 'BNX2X_MSG_SP', '|', 'NETIF_MSG_IFUP', ',', '""""', ',', 'outer_prio', ',', 'bp', '->', 'prio_to_cos', '[', 'outer_prio', ']', ')', ';', '}', '/', '*', 'Use', 'this', 'configuration', 'to', 'differentiate', 'tc0', 'from', 'other', 'This', 'can', 'be', 'used', 'for', 'ets', 'or', 'pfc', ',', 'and', 'save', 'the', 'effort', 'of', 'up', 'a', 'multio', 'class', 'queue', 'disc', 'or', 'negotiating', 'DCBX', 'with', 'a', 'netdev_set_prio_tc_map', '(', 'dev', ',', '0', ',', '0', ')', ';', 'DP', '(', 'BNX2X_MSG_SP', ',', '""""', ',', '0', ',', '0', ')', ';', 'for', '(', 'prio', '=', '1', ';', 'prio', '<', '16', ';', 'prio', '++', ')', '{', 'netdev_set_prio_tc_map', '(', 'dev', ',', 'prio', ',', '1', ')', ';', 'DP', '(', 'BNX2X_MSG_SP', ',', '""""', ',', 'prio', ',', '1', ')', ';', 'for', '(', 'cos', '=', '0', ';', 'cos', '<', 'bp', '->', 'max_cos', ';', 'cos', '++', ')', '{', 'count', '=', 'BNX2X_NUM_ETH_QUEUES', '(', 'bp', ')', ';', 'offset', '=', 'cos', '*', 'BNX2X_NUM_NON_CNIC_QUEUES', '(', 'bp', ')', ';', 'netdev_set_tc_queue', '(', 'dev', ',', 'cos', ',', 'count', ',', 'offset', ')', ';', 'DP', '(', 'BNX2X_MSG_SP', '|', 'NETIF_MSG_IFUP', ',', '""""', ',', 'cos', ',', 'offset', ',', 'count', ')', ';', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1174,"['WillCreateCycle', '(', 'SUnit', '*', 'SU', ',', 'SUnit', '*', 'TargetSU', ')', '{', 'if', '(', 'IsReachable', '(', 'TargetSU', ',', 'SU', ')', ')', 'return', 'true', ';', 'for', '(', 'SUnit', ':', ':', 'pred_iterator', 'I', '=', 'SU', '->', 'Preds', '.', 'begin', '(', ')', ',', 'E', '=', 'SU', '->', 'Preds', '.', 'end', '(', ')', ';', 'I', '!=', 'E', ';', '++', 'I', ')', 'if', '(', 'I', '->', 'isAssignedRegDep', '(', ')', '&&', 'IsReachable', '(', 'TargetSU', ',', 'I', '->', 'getSUnit', '(', ')', ')', ')', 'return', 'true', ';', 'return', 'false', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1175,"['anlist_unparse', '(', 'AttributeName', '*', 'an', ',', 'char', '*', 'ptr', ',', 'ber_len_t', 'buflen', ')', '{', 'int', 'comma', '=', '0', ';', 'char', '*', 'start', '=', 'ptr', ';', 'for', '(', ';', '!BER_BVISNULL', '(', '&', 'an', '->', 'an_name', ')', ';', 'an', '++', ')', '{', '/', '*', 'if', 'buflen', '==', '0', ',', 'assume', 'the', 'buffer', 'size', 'has', 'if', '(', 'buflen', '>', '0', '&&', 'buflen', '-', '(', 'ptr', '-', 'start', ')', '<', 'comma', '+', 'an', '->', 'an_name', '.', 'bv_len', ')', 'return', 'NULL', ';', 'if', '(', 'comma', ')', '*', 'ptr', '++', '=', ""''"", ';', 'ptr', '=', 'lutil_strcopy', '(', 'ptr', ',', 'an', '->', 'an_name', '.', 'bv_val', ')', ';', 'comma', '=', '1', ';', '}', 'return', 'ptr', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1176,"['idetape_ioctl', '(', 'struct', 'block_device', '*', 'bdev', ',', 'fmode_t', 'mode', ',', 'unsigned', 'int', 'cmd', ',', 'unsigned', 'long', 'arg', ')', '{', 'struct', 'ide_tape_obj', '*', 'tape', '=', 'ide_drv_g', '(', 'bdev', '->', 'bd_disk', ',', 'ide_tape_obj', ')', ';', 'ide_drive_t', '*', 'drive', '=', 'tape', '->', 'drive', ';', 'int', 'err', ';', 'mutex_lock', '(', '&', 'ide_tape_mutex', ')', ';', 'err', '=', 'generic_ide_ioctl', '(', 'drive', ',', 'bdev', ',', 'cmd', ',', 'arg', ')', ';', 'if', '(', 'err', '==', '-', 'EINVAL', ')', 'err', '=', 'idetape_blkdev_ioctl', '(', 'drive', ',', 'cmd', ',', 'arg', ')', ';', 'mutex_unlock', '(', '&', 'ide_tape_mutex', ')', ';', 'return', 'err', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1177,"['freeEndNode', '(', 'EndNode', '*', 'endNode', ')', '{', 'EndNode', '*', 'tmp', ';', 'tmp', '=', 'endNode', ';', 'while', '(', 'tmp', '!=', 'NULL', ')', '{', 'EndNode', '*', 'next', ';', 'next', '=', 'tmp', '->', 'nextEN', ';', 'if', '(', 'tmp', '->', 'edit', '!=', 'NULL', ')', '{', 'free', '(', 'tmp', '->', 'edit', ')', ';', '}', 'free', '(', 'tmp', ')', ';', 'tmp', '=', 'next', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1178,"['fso_gsm_throwAppropriateError', '(', 'FsoGsmConstantsAtResponse', 'code', ',', 'const', 'gchar', '*', 'detail', ',', 'GError', '*', '*', 'error', ')', '{', 'GError', '*', '_error_', '=', 'NULL', ';', 'FsoGsmConstantsAtResponse', '_tmp0_', '=', '0', ';', 'const', 'gchar', '*', '_tmp1_', '=', 'NULL', ';', 'GError', '*', '_tmp2_', '=', 'NULL', ';', 'GError', '*', '_tmp3_', '=', 'NULL', ';', 'GError', '*', '_inner_error_', '=', 'NULL', ';', 'g_return_if_fail', '(', 'detail', '!=', 'NULL', ')', ';', '_tmp0_', '=', 'code', ';', '_tmp1_', '=', 'detail', ';', '_tmp2_', '=', 'fso_gsm_constants_atResponseCodeToError', '(', '_tmp0_', ',', '_tmp1_', ')', ';', '_error_', '=', '_tmp2_', ';', '_tmp3_', '=', '_g_error_copy0', '(', '_error_', ')', ';', '_inner_error_', '=', '_tmp3_', ';', 'if', '(', '(', '_inner_error_', '->', 'domain', '==', 'FREE_SMARTPHONE_GSM_ERROR', ')', '||', '(', '_inner_error_', '->', 'domain', '==', 'FREE_SMARTPHONE_ERROR', ')', ')', '{', 'g_propagate_error', '(', 'error', ',', '_inner_error_', ')', ';', '_g_error_free0', '(', '_error_', ')', ';', 'return', ';', '}', 'else', '{', '_g_error_free0', '(', '_error_', ')', ';', 'g_critical', '(', '""""', ',', '__FILE__', ',', '__LINE__', ',', '_inner_error_', '->', 'message', ',', 'g_quark_to_string', '(', '_inner_error_', '->', 'domain', ')', ',', '_inner_error_', '->', 'code', ')', ';', 'g_clear_error', '(', '&', '_inner_error_', ')', ';', 'return', ';', '}', '_g_error_free0', '(', '_error_', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1179,"['xgetgrnam', '(', 'const', 'char', '*', 'name', ')', '{', 'int', 'i', ';', 'if', '(', '!gtable', ')', 'create_group_table', '(', ')', ';', 'for', '(', 'i', '=', '0', ';', 'gtable', '[', 'i', ']', '.', 'gr_name', ';', 'i', '++', ')', '{', 'if', '(', '!strcmp', '(', 'name', ',', 'gtable', '[', 'i', ']', '.', 'gr_name', ')', ')', 'return', '&', '(', 'gtable', '[', 'i', ']', ')', ';', '}', 'return', 'NULL', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1180,"['_want_format', '(', 'struct', 'dmraid_format', '*', 'fmt', ',', 'const', 'char', '*', 'format', ',', 'enum', 'fmt_type', 'type', ')', '{', 'return', 'fmt', '->', 'format', '!=', 'type', '||', '(', 'format', '&&', 'strncmp', '(', 'format', ',', 'fmt', '->', 'name', ',', 'strlen', '(', 'format', ')', ')', ')', '?', '0', ':', '1', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1181,"['ajStrIsCharsetCaseS', '(', 'const', 'AjPStr', 'str', ',', 'const', 'AjPStr', 'str2', ')', '{', 'const', 'char', '*', 'cp', ';', 'const', 'char', '*', 'cq', ';', 'if', '(', '!str', ')', 'return', 'ajFalse', ';', 'if', '(', '!str', '->', 'Len', ')', 'return', 'ajFalse', ';', 'if', '(', '!str2', ')', 'return', 'ajFalse', ';', 'cq', '=', 'str2', '->', 'Ptr', ';', 'while', '(', '*', 'cq', ')', '{', 'filter', '[', 'tolower', '(', '(', 'int', ')', '*', 'cq', ')', ']', '=', '1', ';', 'filter', '[', 'toupper', '(', '(', 'int', ')', '*', 'cq', '++', ')', ']', '=', '1', ';', '}', 'cp', '=', 'str', '->', 'Ptr', ';', 'while', '(', '*', 'cp', ')', 'if', '(', '!filter', '[', '(', 'int', ')', '*', 'cp', '++', ']', ')', 'return', 'ajFalse', ';', 'return', 'ajTrue', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1182,"['gst_nuv_demux_read_head_frame', '(', 'GstNuvDemux', '*', 'nuv', ')', '{', 'GstFlowReturn', 'ret', '=', 'GST_FLOW_OK', ';', 'ret', '=', 'gst_nuv_demux_frame_header_load', '(', 'nuv', ',', '&', 'nuv', '->', 'fh', ')', ';', 'if', '(', 'ret', '!=', 'GST_FLOW_OK', ')', 'return', 'ret', ';', 'nuv', '->', 'state', '=', 'GST_NUV_DEMUX_MOVI', ';', 'return', 'ret', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1183,"['augment', '(', 'double', 'height', ',', 'size_t', 'numVertices', ')', 'const\t', '{', 'size_t', 'NV', '=', 'mVertices', '.', 'size', '(', ')', ';', 'size_t', 'NF', '=', 'mFaces', '.', 'size', '(', ')', ';', 'size_t', 'tnf', '=', '0', ';', 'size_t', 'tnv', '=', 'NV', ';', 'for', '(', 'vector', '<', 'TPolyhedronFace', '>', ':', ':', 'const_iterator', 'it', '=', 'mFaces', '.', 'begin', '(', ')', ';', 'it', '!=', 'mFaces', '.', 'end', '(', ')', ';', '++', 'it', ')', 'if', '(', 'it', '->', 'vertices', '.', 'size', '(', ')', '==', 'numVertices', ')', '\t', '{', 'tnf', '+=', 'numVertices', ';', 'tnv', '++', ';', '}', '\telse', 'tnf', '++', ';', 'if', '(', 'tnv', '==', 'NV', ')', 'return', 'CreateNoCheck', '(', 'mVertices', ',', 'mFaces', ')', ';', 'vector', '<', 'TPoint3D', '>', 'vertices', '(', 'tnv', ')', ';', 'std', ':', ':', 'copy', '(', 'mVertices', '.', 'begin', '(', ')', ',', 'mVertices', '.', 'end', '(', ')', ',', 'vertices', '.', 'begin', '(', ')', ')', ';', 'vector', '<', 'TPolyhedronFace', '>', 'faces', '(', 'tnf', ')', ';', 'TPolygon3D', 'tmp', '(', 'numVertices', ')', ';', 'TPlane', 'pTmp', ';', 'TPoint3D', 'cTmp', ';', 'size_t', 'iF', '=', '0', ';', 'size_t', 'iV', '=', 'NV', ';', 'TPoint3D', 'phCenter', ';', 'getCenter', '(', 'phCenter', ')', ';', 'TPolyhedronFace', 'fTmp', ';', 'fTmp', '.', 'vertices', '.', 'resize', '(', '3', ')', ';', 'for', '(', 'size_t', 'i', '=', '0', ';', 'i', '<', 'NF', ';', 'i', '++', ')', '\t', '{', 'const', 'vector', '<', 'uint32_t', '>', '&', 'face', '=', 'mFaces', '[', 'i', ']', '.', 'vertices', ';', 'size_t', 'N', '=', 'face', '.', 'size', '(', ')', ';', 'if', '(', 'N', '!=', 'numVertices', ')', '\t', '{', 'faces', '[', 'iF', ']', '.', 'vertices', '=', 'face', ';', 'iF', '++', ';', 'continue', ';', '}', 'TPoint3D', '&', 'vertex', '=', 'vertices', '[', 'iV', ']', ';', 'for', '(', 'size_t', 'j', '=', '0', ';', 'j', '<', 'numVertices', ';', 'j', '++', ')', 'tmp', '[', 'j', ']', '=', 'mVertices', '[', 'face', '[', 'j', ']', ']', ';', 'tmp', '.', 'getBestFittingPlane', '(', 'pTmp', ')', ';', 'pTmp', '.', 'unitarize', '(', ')', ';', 'tmp', '.', 'getCenter', '(', 'cTmp', ')', ';', 'if', '(', 'pTmp', '.', 'evaluatePoint', '(', 'phCenter', ')', '>', '0', ')', 'for', '(', 'size_t', 'j', '=', '0', ';', 'j', '<', '3', ';', 'j', '++', ')', 'vertex', '[', 'j', ']', '=', 'cTmp', '[', 'j', ']', '-', 'height', '*', 'pTmp', '.', 'coefs', '[', 'j', ']', ';', 'else', 'for', '(', 'size_t', 'j', '=', '0', ';', 'j', '<', '3', ';', 'j', '++', ')', 'vertex', '[', 'j', ']', '=', 'cTmp', '[', 'j', ']', '+', 'height', '*', 'pTmp', '.', 'coefs', '[', 'j', ']', ';', 'fTmp', '.', 'vertices', '[', '0', ']', '=', 'iV', ';', 'for', '(', 'size_t', 'j', '=', '0', ';', 'j', '<', 'N', ';', 'j', '++', ')', '\t', '{', 'fTmp', '.', 'vertices', '[', '1', ']', '=', 'face', '[', 'j', ']', ';', 'fTmp', '.', 'vertices', '[', '2', ']', '=', 'face', '[', '(', 'j', '+', '1', ')', '%', 'N', ']', ';', 'faces', '[', 'iF', '+', 'j', ']', '=', 'fTmp', ';', '}', 'iF', '+=', 'N', ';', 'iV', '++', ';', '}', 'return', 'CreateNoCheck', '(', 'vertices', ',', 'faces', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1184,"['fileio_fputs', '(', 'const', 'fn_call', '&', 'fn', ')', '{', '/', '/', 'GNASH_REPORT_FUNCTION', ';', 'FileIO', '*', 'ptr', '=', 'ensure', '<', 'ThisIsNative', '<', 'FileIO', '>', '>', '(', 'fn', ')', ';', 'string', 'str', '=', 'fn', '.', 'arg', '(', '0', ')', '.', 'to_string', '(', ')', ';', 'return', 'as_value', '(', 'ptr', '->', 'fputs', '(', 'str', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1185,"['_dbus_message_get_network_data', '(', 'DBusMessage', '*', 'message', ',', 'const', 'DBusString', '*', '*', 'header', ',', 'const', 'DBusString', '*', '*', 'body', ')', '{', '_dbus_assert', '(', 'message', '->', 'locked', ')', ';', '*', 'header', '=', '&', 'message', '->', 'header', '.', 'data', ';', '*', 'body', '=', '&', 'message', '->', 'body', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1186,"['cb_testsuggs_button', '(', 'Fl_Button', '*', ',', 'void', '*', ')', '{', 'const', 'char', '*', 'helpmsg', '=', '""""', ';', 'static', 'Fl_Double_Window', '*', 'helpwin', '=', '0', ';', 'static', 'Fl_Text_Display', '*', 'helpdisp', '=', '0', ';', 'static', 'Fl_Text_Buffer', '*', 'helpbuff', '=', '0', ';', 'if', '(', '!helpwin', ')', '{', 'Fl_Group', ':', ':', 'current', '(', '0', ')', ';', '/', '/', 'ensure', 'we', ""don't"", 'become', 'child', 'of', 'other', 'helpwin', '=', 'new', 'Fl_Double_Window', '(', '600', ',', '600', ',', '""""', ')', ';', 'helpdisp', '=', 'new', 'Fl_Text_Display', '(', '0', ',', '0', ',', 'helpwin', '->', 'w', '(', ')', ',', 'helpwin', '->', 'h', '(', ')', ')', ';', 'helpbuff', '=', 'new', 'Fl_Text_Buffer', '(', ')', ';', 'helpdisp', '->', 'buffer', '(', 'helpbuff', ')', ';', 'helpdisp', '->', 'textfont', '(', 'FL_COURIER', ')', ';', 'helpdisp', '->', 'textsize', '(', '12', ')', ';', 'helpbuff', '->', 'text', '(', 'helpmsg', ')', ';', 'helpwin', '->', 'end', '(', ')', ';', '}', 'helpwin', '->', 'resizable', '(', 'helpdisp', ')', ';', 'helpwin', '->', 'show', '(', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1187,"['inputcategories', '(', 'rawdata', '*', 'rdta', ')', 'int', 'i', ',', 'j', ',', 'ch', ',', 'ci', ';', 'if', '(', 'rdta', '->', 'categs', '>=', '0', ')', '{', 'printf', '(', '""""', ')', ';', 'return', 'FALSE', ';', '}', 'if', '(', 'fscanf', '(', 'INFILE', ',', '""""', ',', '&', 'rdta', '->', 'categs', ')', '!=', '1', ')', '{', 'printf', '(', '""""', ')', ';', 'return', 'FALSE', ';', '}', 'if', '(', 'rdta', '->', 'categs', '<', '1', '||', 'rdta', '->', 'categs', '>', 'maxcategories', ')', '{', 'printf', '(', '""""', ',', 'rdta', '->', 'categs', ')', ';', 'printf', '(', '""""', ',', 'maxcategories', ')', ';', 'return', 'FALSE', ';', '}', 'for', '(', 'j', '=', '1', ';', 'j', '<=', 'rdta', '->', '&&', 'fscanf', '(', 'INFILE', ',', '""""', ',', '&', '(', 'rdta', '->', 'catrat', '[', 'j', ']', ')', ')', '==', '1', ';', 'j', '++', ')', ';', 'if', '(', '(', 'j', '<=', 'rdta', '->', 'categs', ')', '||', '(', 'findch', '(', ""''"", ')', '==', 'EOF', ')', ')', '{', 'printf', '(', '""""', ')', ';', 'return', 'FALSE', ';', '}', 'for', '(', 'i', '=', '1', ';', 'i', '<=', 'nmlngth', ';', 'i', '++', ')', '(', 'void', ')', 'getc', '(', 'INFILE', ')', ';', 'i', '=', '1', ';', 'while', '(', 'i', '<=', 'rdta', '->', 'sites', ')', '{', 'ch', '=', 'getc', '(', 'INFILE', ')', ';', 'ci', '=', 'base36', '(', 'ch', ')', ';', 'if', '(', 'ci', '>=', '0', '&&', 'ci', '<=', 'rdta', '->', 'categs', ')', 'rdta', '->', 'sitecat', '[', 'i', '++', ']', '=', 'ci', ';', 'else', 'if', '(', '!', 'whitechar', '(', 'ch', ')', ')', '{', 'printf', '(', '""""', ',', 'ch', ',', 'i', ')', ';', 'return', 'FALSE', ';', '}', '}', 'printf', '(', '""""', ')', ';', 'return', 'FALSE', ';', '}', 'return', 'TRUE', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1188,"['iscsi_add_portal', '(', 'char', '*', 'addr', ',', 'int', 'port', ',', 'int', 'tpgt', ',', 'int', 'do_create', ')', '{', 'struct', 'iscsi_portal', '*', 'new_portal', ';', 'list_for_each_entry', '(', 'new_portal', ',', '&', 'iscsi_portals_list', ',', 'iscsi_portal_siblings', ')', '{', 'if', '(', '!strcmp', '(', 'addr', ',', 'new_portal', '->', 'addr', ')', '&&', 'port', '==', 'new_portal', '->', 'port', ')', '{', 'eprintf', '(', '""""', ',', 'addr', ',', 'port', ')', ';', 'return', '-', '1', ';', '}', '}', 'new_portal', '=', 'zalloc', '(', 'sizeof', '(', 'struct', 'iscsi_portal', ')', ')', ';', 'new_portal', '->', 'addr', '=', 'strdup', '(', 'addr', ')', ';', 'new_portal', '->', 'port', '=', 'port', '?', 'port', ':', 'ISCSI_LISTEN_PORT', ';', 'new_portal', '->', 'tpgt', '=', 'tpgt', ';', 'new_portal', '->', 'fd', '=', '-', '1', ';', 'if', '(', 'do_create', '&&', 'iscsi_tcp_init_portal', '(', 'new_portal', ')', ')', '{', 'eprintf', '(', '""""', ',', 'addr', ',', 'port', ')', ';', 'free', '(', 'new_portal', '->', 'addr', ')', ';', 'free', '(', 'new_portal', ')', ';', 'return', '-', '1', ';', '}', 'list_add', '(', '&', 'new_portal', '->', 'iscsi_portal_siblings', ',', '&', 'iscsi_portals_list', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
1189,"['parser_term_2', '(', 'Parser', '*', 'self', ')', '{', 'gboolean', 'result', '=', 'FALSE', ';', 'LexerToken', '*', 'token', '=', 'NULL', ';', 'Lexer', '*', '_tmp0_', '=', 'NULL', ';', 'LexerToken', '*', '_tmp1_', '=', 'NULL', ';', 'Lexer', '*', '_tmp2_', '=', 'NULL', ';', 'gboolean', '_tmp3_', '=', 'FALSE', ';', 'LexerToken', '*', '_tmp4_', '=', 'NULL', ';', 'LexerTokenType', '_tmp5_', '=', '0', ';', 'gboolean', '_tmp8_', '=', 'FALSE', ';', 'LexerToken', '*', '_tmp9_', '=', 'NULL', ';', 'LexerTokenType', '_tmp10_', '=', '0', ';', 'g_return_val_if_fail', '(', 'self', '!=', 'NULL', ',', 'FALSE', ')', ';', '_tmp0_', '=', 'self', '->', 'priv', '->', 'lexer', ';', '_tmp1_', '=', 'lexer_get_next_token', '(', '_tmp0_', ')', ';', 'token', '=', '_tmp1_', ';', '_tmp2_', '=', 'self', '->', 'priv', '->', 'lexer', ';', 'lexer_roll_back', '(', '_tmp2_', ')', ';', '_tmp4_', '=', 'token', ';', '_tmp5_', '=', '_tmp4_', '->', 'type', ';', 'if', '(', '_tmp5_', '==', 'LEXER_TOKEN_TYPE_PL_EOS', ')', '{', '_tmp3_', '=', 'TRUE', ';', '}', 'else', '{', 'LexerToken', '*', '_tmp6_', '=', 'NULL', ';', 'LexerTokenType', '_tmp7_', '=', '0', ';', '_tmp6_', '=', 'token', ';', '_tmp7_', '=', '_tmp6_', '->', 'type', ';', '_tmp3_', '=', '_tmp7_', '==', 'LEXER_TOKEN_TYPE_ASSIGN', ';', '}', '_tmp8_', '=', '_tmp3_', ';', 'if', '(', '_tmp8_', ')', '{', 'result', '=', 'TRUE', ';', '_lexer_token_unref0', '(', 'token', ')', ';', 'return', 'result', ';', '}', '_tmp9_', '=', 'token', ';', '_tmp10_', '=', '_tmp9_', '->', 'type', ';', 'if', '(', '_tmp10_', '==', 'LEXER_TOKEN_TYPE_VARIABLE', ')', '{', 'guint', '_tmp11_', '=', '0U', ';', 'Associativity', '_tmp12_', '=', '0', ';', 'MultiplyNode', '*', '_tmp13_', '=', 'NULL', ';', 'MultiplyNode', '*', '_tmp14_', '=', 'NULL', ';', 'gboolean', '_tmp15_', '=', 'FALSE', ';', '_tmp11_', '=', 'parser_make_precedence_p', '(', 'self', ',', 'PRECEDENCE_MULTIPLY', ')', ';', '_tmp12_', '=', 'parser_get_associativity_p', '(', 'self', ',', 'PRECEDENCE_MULTIPLY', ')', ';', '_tmp13_', '=', 'multiply_node_new', '(', 'self', ',', 'NULL', ',', '_tmp11_', ',', '_tmp12_', ')', ';', '_tmp14_', '=', '_tmp13_', ';', 'parser_insert_into_tree', '(', 'self', ',', '(', 'ParseNode', '*', ')', '_tmp14_', ')', ';', '_parse_node_unref0', '(', '_tmp14_', ')', ';', '_tmp15_', '=', 'parser_term', '(', 'self', ')', ';', 'if', '(', '!_tmp15_', ')', '{', 'result', '=', 'FALSE', ';', '_lexer_token_unref0', '(', 'token', ')', ';', 'return', 'result', ';', '}', 'result', '=', 'TRUE', ';', '_lexer_token_unref0', '(', 'token', ')', ';', 'return', 'result', ';', '}', 'else', '{', 'result', '=', 'TRUE', ';', '_lexer_token_unref0', '(', 'token', ')', ';', 'return', 'result', ';', '}', '_lexer_token_unref0', '(', 'token', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1190,"['rl_old_menu_complete', '(', 'count', ',', 'invoking_key', ')', 'int', 'count', ',', 'invoking_key', ';', '{', 'rl_compentry_func_t', '*', 'our_func', ';', 'int', 'matching_filenames', ',', 'found_quote', ';', 'static', 'char', '*', 'orig_text', ';', 'static', 'char', '*', '*', 'matches', '=', '(', 'char', '*', '*', ')', '0', ';', 'static', 'int', 'match_list_index', '=', '0', ';', 'static', 'int', 'match_list_size', '=', '0', ';', 'static', 'int', 'orig_start', ',', 'orig_end', ';', 'static', 'char', 'quote_char', ';', 'static', 'int', 'delimiter', ';', '/', '*', 'The', 'first', 'time', 'through', ',', 'we', 'generate', 'the', 'list', 'of', 'matches', 'and', 'set', 'if', '(', 'rl_last_func', '!=', 'rl_old_menu_complete', ')', '{', 'FREE', '(', 'orig_text', ')', ';', 'if', '(', 'matches', ')', '_rl_free_match_list', '(', 'matches', ')', ';', 'match_list_index', '=', 'match_list_size', '=', '0', ';', 'matches', '=', '(', 'char', '*', '*', ')', 'NULL', ';', 'rl_completion_invoking_key', '=', 'invoking_key', ';', 'RL_SETSTATE', '(', 'RL_STATE_COMPLETING', ')', ';', 'set_completion_defaults', '(', ""''"", ')', ';', 'our_func', '=', 'rl_menu_completion_entry_function', ';', 'if', '(', 'our_func', '==', '0', ')', 'our_func', '=', '?', ':', 'rl_filename_completion_function', ';', 'orig_end', '=', 'rl_point', ';', 'found_quote', '=', 'delimiter', '=', '0', ';', 'quote_char', '=', ""''"", ';', 'if', '(', 'rl_point', ')', '/', '*', 'This', '(', 'possibly', ')', 'changes', 'rl_point', '.', 'If', 'it', 'returns', 'a', 'non', '-', 'zero', 'char', ',', 'quote_char', '=', '_rl_find_completion_word', '(', '&', 'found_quote', ',', '&', 'delimiter', ')', ';', 'orig_start', '=', 'rl_point', ';', 'rl_point', '=', 'orig_end', ';', 'orig_text', '=', 'rl_copy_text', '(', 'orig_start', ',', 'orig_end', ')', ';', 'matches', '=', 'gen_completion_matches', '(', 'orig_text', ',', 'orig_start', ',', 'orig_end', ',', 'our_func', ',', 'found_quote', ',', 'quote_char', ')', ';', '/', '*', 'If', 'we', 'are', 'matching', 'filenames', ',', 'the', 'attempted', 'completion', 'function', 'have', 'set', 'rl_filename_completion_desired', 'to', 'a', 'non', '-', 'zero', 'value', '.', 'The', 'matching_filenames', '=', 'rl_filename_completion_desired', ';', 'if', '(', 'matches', '==', '0', '||', 'postprocess_matches', '(', '&', 'matches', ',', 'matching_filenames', ')', '==', '0', ')', '{', 'rl_ding', '(', ')', ';', 'FREE', '(', 'matches', ')', ';', 'matches', '=', '(', 'char', '*', '*', ')', '0', ';', 'FREE', '(', 'orig_text', ')', ';', 'orig_text', '=', '(', 'char', '*', ')', '0', ';', 'completion_changed_buffer', '=', '0', ';', 'RL_UNSETSTATE', '(', 'RL_STATE_COMPLETING', ')', ';', 'return', '(', '0', ')', ';', '}', 'RL_UNSETSTATE', '(', 'RL_STATE_COMPLETING', ')', ';', 'for', '(', 'match_list_size', '=', '0', ';', 'matches', '[', 'match_list_size', ']', ';', 'match_list_size', '++', ')', ';', '/', '*', 'matches', '[', '0', ']', 'is', 'lcd', 'if', 'match_list_size', '>', '1', ',', 'but', 'the', 'circular', 'if', '(', 'match_list_size', '>', '1', '&&', '_rl_complete_show_all', ')', 'display_matches', '(', 'matches', ')', ';', '}', '/', '*', 'Now', 'we', 'have', 'the', 'list', 'of', 'matches', '.', 'Replace', 'the', 'text', 'rl_line_buffer', '[', 'orig_start', ']', 'and', 'rl_line_buffer', '[', 'rl_point', ']', 'if', '(', 'matches', '==', '0', '||', 'match_list_size', '==', '0', ')', '{', 'rl_ding', '(', ')', ';', 'FREE', '(', 'matches', ')', ';', 'matches', '=', '(', 'char', '*', '*', ')', '0', ';', 'completion_changed_buffer', '=', '0', ';', 'return', '(', '0', ')', ';', '}', 'match_list_index', '+=', 'count', ';', 'if', '(', 'match_list_index', '<', '0', ')', 'match_list_index', '+=', 'match_list_size', ';', 'match_list_index', '%=', 'match_list_size', ';', 'if', '(', 'match_list_index', '==', '0', '&&', 'match_list_size', '>', '1', ')', '{', 'rl_ding', '(', ')', ';', 'insert_match', '(', 'orig_text', ',', 'orig_start', ',', 'MULT_MATCH', ',', '&', 'quote_char', ')', ';', '}', '{', 'insert_match', '(', 'matches', '[', 'match_list_index', ']', ',', 'orig_start', ',', 'SINGLE_MATCH', ',', '&', 'quote_char', ')', ';', 'append_to_match', '(', 'matches', '[', 'match_list_index', ']', ',', 'delimiter', ',', 'quote_char', ',', 'strcmp', '(', 'orig_text', ',', 'matches', '[', 'match_list_index', ']', ')', ')', ';', '}', 'completion_changed_buffer', '=', '1', ';', 'return', '(', '0', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1191,"['test_upload_simple', '(', 'UploadData', '*', 'data', ',', 'gconstpointer', 'service', ')', '{', 'GDataUploadStream', '*', 'upload_stream', ';', 'GFileInputStream', '*', 'file_stream', ';', 'const', 'gchar', '*', 'const', '*', 'tags', ',', '*', 'const', '*', 'tags2', ';', 'gssize', 'transfer_size', ';', 'GError', '*', 'error', '=', 'NULL', ';', 'gdata_test_mock_server_start_trace', '(', 'mock_server', ',', '""""', ')', ';', 'upload_stream', '=', 'gdata_youtube_service_upload_video', '(', 'GDATA_YOUTUBE_SERVICE', '(', 'service', ')', ',', 'data', '->', 'video', ',', 'data', '->', 'slug', ',', 'data', '->', 'content_type', ',', 'NULL', ',', '&', 'error', ')', ';', 'g_assert_no_error', '(', 'error', ')', ';', 'g_assert', '(', 'GDATA_IS_UPLOAD_STREAM', '(', 'upload_stream', ')', ')', ';', 'file_stream', '=', 'g_file_read', '(', 'data', '->', 'video_file', ',', 'NULL', ',', '&', 'error', ')', ';', 'g_assert_no_error', '(', 'error', ')', ';', 'g_assert', '(', 'G_IS_FILE_INPUT_STREAM', '(', 'file_stream', ')', ')', ';', 'transfer_size', '=', 'g_output_stream_splice', '(', 'G_OUTPUT_STREAM', '(', 'upload_stream', ')', ',', 'G_INPUT_STREAM', '(', 'file_stream', ')', ',', 'G_OUTPUT_STREAM_SPLICE_CLOSE_SOURCE', '|', 'G_OUTPUT_STREAM_SPLICE_CLOSE_TARGET', ',', 'NULL', ',', '&', 'error', ')', ';', 'g_assert_no_error', '(', 'error', ')', ';', 'g_assert_cmpint', '(', 'transfer_size', ',', '>', ',', '0', ')', ';', 'data', '->', 'updated_video', '=', 'gdata_youtube_service_finish_video_upload', '(', 'GDATA_YOUTUBE_SERVICE', '(', 'service', ')', ',', 'upload_stream', ',', '&', 'error', ')', ';', 'g_assert_no_error', '(', 'error', ')', ';', 'g_assert', '(', 'GDATA_IS_YOUTUBE_VIDEO', '(', 'data', '->', 'updated_video', ')', ')', ';', 'g_object_unref', '(', 'file_stream', ')', ';', 'g_object_unref', '(', 'upload_stream', ')', ';', 'g_assert', '(', 'gdata_entry_is_inserted', '(', 'GDATA_ENTRY', '(', 'data', '->', 'updated_video', ')', ')', ')', ';', 'g_assert_cmpstr', '(', 'gdata_entry_get_title', '(', 'GDATA_ENTRY', '(', 'data', '->', 'updated_video', ')', ')', ',', '==', ',', 'gdata_entry_get_title', '(', 'GDATA_ENTRY', '(', 'data', '->', 'video', ')', ')', ')', ';', 'g_assert_cmpstr', '(', 'gdata_youtube_video_get_description', '(', 'data', '->', 'updated_video', ')', ',', '==', ',', 'gdata_youtube_video_get_description', '(', 'data', '->', 'video', ')', ')', ';', 'g_assert_cmpstr', '(', 'gdata_media_category_get_category', '(', 'gdata_youtube_video_get_category', '(', 'data', '->', 'updated_video', ')', ')', ',', '==', ',', 'gdata_media_category_get_category', '(', 'gdata_youtube_video_get_category', '(', 'data', '->', 'video', ')', ')', ')', ';', 'tags', '=', 'gdata_youtube_video_get_keywords', '(', 'data', '->', 'video', ')', ';', 'tags2', '=', 'gdata_youtube_video_get_keywords', '(', 'data', '->', 'updated_video', ')', ';', 'g_assert_cmpuint', '(', 'g_strv_length', '(', '(', 'gchar', '*', '*', ')', 'tags2', ')', ',', '==', ',', 'g_strv_length', '(', '(', 'gchar', '*', '*', ')', 'tags', ')', ')', ';', 'g_assert_cmpstr', '(', 'tags2', '[', '0', ']', ',', '==', ',', 'tags', '[', '0', ']', ')', ';', 'g_assert_cmpstr', '(', 'tags2', '[', '1', ']', ',', '==', ',', 'tags', '[', '1', ']', ')', ';', 'g_assert_cmpstr', '(', 'tags2', '[', '2', ']', ',', '==', ',', 'tags', '[', '2', ']', ')', ';', 'gdata_mock_server_end_trace', '(', 'mock_server', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1192,"['schedule', '(', ')', '{', 'Ulong', 'stime', ';', 'long', 'interval', '=', '0', ';', 'char', '*', 'proc', ';', 'evptr', 'new', ';', 'int', 'procidx', '=', '2', ';', 'if', '(', 'targc', '!=', '3', ')', '{', 'if', '(', 'targc', '!=', '4', '||', 'targv', '[', '0', ']', '[', '0', ']', '!=', ""''"", ')', '{', 'rsimerror', '(', 'filename', ',', 'lineno', ',', '""""', ')', ';', 'return', '(', '0', ')', ';', '}', '}', 'else', 'if', '(', 'targc', '==', '3', ')', '{', 'if', '(', '!strcmp', '(', 'targv', '[', '1', ']', ',', '""""', ')', ')', '{', 'short', 'schedidx', '=', 'atoi', '(', 'targv', '[', '2', ']', ')', ';', 'DequeueScheduled', '(', 'schedidx', ')', ';', 'return', '(', '0', ')', ';', '}', 'else', 'if', '(', '!strcmp', '(', 'targv', '[', '1', ']', ',', '""""', ')', ')', '{', 'evptr', 'ev', ';', 'short', 'schedidx', '=', 'atoi', '(', 'targv', '[', '2', ']', ')', ';', 'ev', '=', 'FindScheduled', '(', 'schedidx', ')', ';', 'if', '(', 'ev', ')', 'lprintf', '(', 'stdout', ',', '""""', ',', '(', 'char', '*', ')', 'ev', '->', 'enode', ')', ';', 'return', '(', '0', ')', ';', '}', '}', 'stime', '=', 'ns2d', '(', 'atof', '(', 'targv', '[', '1', ']', ')', ')', ';', '{', 'interval', '=', '(', 'long', ')', 'stime', ';', 'if', '(', 'targc', '==', '4', ')', '{', 'procidx', '++', ';', 'if', '(', 'targv', '[', '2', ']', '[', '0', ']', '==', ""''"", ')', '}', '}', 'else', 'if', '(', 'targv', '[', '1', ']', '[', '0', ']', '==', ""''"", ')', 'if', '(', 'stime', '<', 'cur_delta', ')', '{', 'rsimerror', '(', 'filename', ',', 'lineno', ',', '""""', ',', 'targv', '[', '1', ']', ')', ';', 'return', '(', '0', ')', ';', '}', 'proc', '=', 'strdup', '(', 'targv', '[', 'procidx', ']', ')', ';', 'new', '=', 'EnqueueOther', '(', 'TIMED_EV', ',', 'stime', ')', ';', 'new', '->', 'enode', '=', '(', 'nptr', ')', 'proc', ';', 'new', '->', 'delay', '=', 'interval', ';', 'new', '->', 'rtime', '=', 'scheduletag', ';', '#ifdef', 'Tcl_SetObjResult', '(', 'irsiminterp', ',', 'Tcl_NewIntObj', '(', '(', 'int', ')', 'scheduletag', '++', ')', ')', ';', 'return', '(', '0', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1193,"['update_pool_references', '(', 'JCR', '*', 'jcr', ',', 'B_DB', '*', 'db', ',', 'POOL', '*', 'pool', ')', '{', 'POOL_DBR', 'pr', ';', 'if', '(', '!pool', '->', 'RecyclePool', '&&', '!pool', '->', 'ScratchPool', ')', '{', 'return', '1', ';', '}', 'memset', '(', '&', 'pr', ',', '0', ',', 'sizeof', '(', 'POOL_DBR', ')', ')', ';', 'bstrncpy', '(', 'pr', '.', 'Name', ',', 'pool', '->', 'name', '(', ')', ',', 'sizeof', '(', 'pr', '.', 'Name', ')', ')', ';', 'if', '(', '!db_get_pool_record', '(', 'jcr', ',', 'db', ',', '&', 'pr', ')', ')', '{', '}', 'set_pooldbr_from_poolres', '(', '&', 'pr', ',', 'pool', ',', 'POOL_OP_UPDATE', ')', ';', 'if', '(', '!set_pooldbr_references', '(', 'jcr', ',', 'db', ',', '&', 'pr', ',', 'pool', ')', ')', '{', '}', 'if', '(', '!db_update_pool_record', '(', 'jcr', ',', 'db', ',', '&', 'pr', ')', ')', '{', '}', 'return', '1', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1194,"['decode_ftime', '(', 'uint8_t', '*', 'buf', ')', '{', 'int', 'raw', ';', 'struct', 'tm', 'datetime', ';', 'raw', '=', '(', 'int', ')', 'lha_decode_uint32', '(', 'buf', ')', ';', 'if', '(', 'raw', '==', '0', ')', '{', 'return', '0', ';', '}', '/', '/', 'Deconstruct', 'the', 'contents', 'of', 'the', 'MS', '-', 'DOS', 'time', 'value', 'and', 'populate', '/', '/', ""''"", 'structure', '.', 'Note', 'that', ""''"", 'generates', 'a', 'timestamp', '/', '/', 'the', 'local', 'time', 'zone', ':', 'this', 'is', 'unfortunate', ',', 'but', 'probably', 'the', '/', '/', 'that', 'can', 'be', 'done', ',', 'due', 'to', 'the', 'limited', 'data', 'stored', 'in', 'MS', '-', 'DOS', '/', '/', 'values', '.', 'memset', '(', '&', 'datetime', ',', '0', ',', 'sizeof', '(', 'struct', 'tm', ')', ')', ';', 'datetime', '.', 'tm_sec', '=', '(', 'raw', '<<', '1', ')', '&', '0x3e', ';', 'datetime', '.', 'tm_min', '=', '(', 'raw', '>>', '5', ')', '&', '0x3f', ';', 'datetime', '.', 'tm_hour', '=', '(', 'raw', '>>', '11', ')', '&', '0x1f', ';', 'datetime', '.', 'tm_mday', '=', '(', 'raw', '>>', '16', ')', '&', '0x1f', ';', 'datetime', '.', 'tm_mon', '=', '(', '(', 'raw', '>>', '21', ')', '&', '0xf', ')', '-', '1', ';', 'datetime', '.', 'tm_year', '=', '80', '+', '(', '(', 'raw', '>>', '25', ')', '&', '0x7f', ')', ';', 'datetime', '.', 'tm_wday', '=', '0', ';', 'datetime', '.', 'tm_yday', '=', '0', ';', 'datetime', '.', 'tm_isdst', '=', '-', '1', ';', 'return', '(', 'unsigned', 'int', ')', 'mktime', '(', '&', 'datetime', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1195,"['map_name', '(', 'const', 'char', '*', 'arg', ',', 'char', '*', '*', 'result', ',', 'int', 'reserve', ',', 'const', 'char', '*', 'in', ',', 'const', 'char', '*', 'out', ')', '{', 'char', '*', 'p', ';', 'int', 'i', ',', 'l', ',', 'll', ',', 'num', ',', 'inl', ',', 'outl', ';', 'l', '=', 'strlen', '(', 'arg', ')', ';', 'if', '(', '!in', ')', '{', 'copy', ':', '*', 'result', '=', 'nfmalloc', '(', 'reserve', '+', 'l', '+', '1', ')', ';', 'memcpy', '(', '*', 'result', '+', 'reserve', ',', 'arg', ',', 'l', '+', '1', ')', ';', 'return', '0', ';', '}', 'inl', '=', 'strlen', '(', 'in', ')', ';', 'if', '(', 'out', ')', '{', 'outl', '=', 'strlen', '(', 'out', ')', ';', 'if', '(', 'inl', '==', 'outl', '&&', '!memcmp', '(', 'in', ',', 'out', ',', 'inl', ')', ')', 'goto', 'copy', ';', '}', 'for', '(', 'num', '=', '0', ',', 'i', '=', '0', ';', 'i', '<', 'l', ';', ')', '{', 'for', '(', 'll', '=', '0', ';', 'll', '<', 'inl', ';', 'll', '++', ')', 'if', '(', 'arg', '[', 'i', '+', 'll', ']', '!=', 'in', '[', 'll', ']', ')', 'goto', 'fout', ';', 'num', '++', ';', 'i', '+=', 'inl', ';', 'continue', ';', 'fout', ':', 'if', '(', 'out', ')', '{', 'for', '(', 'll', '=', '0', ';', 'll', '<', 'outl', ';', 'll', '++', ')', 'if', '(', 'arg', '[', 'i', '+', 'll', ']', '!=', 'out', '[', 'll', ']', ')', 'goto', 'fnexti', ';', 'return', '-', '1', ';', '}', 'fnexti', ':', 'i', '++', ';', '}', 'if', '(', '!num', ')', 'goto', 'copy', ';', 'if', '(', '!out', ')', 'return', '-', '2', ';', '*', 'result', '=', 'nfmalloc', '(', 'reserve', '+', 'l', '+', 'num', '*', '(', 'outl', '-', 'inl', ')', '+', '1', ')', ';', 'p', '=', '*', 'result', '+', 'reserve', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'l', ';', ')', '{', 'for', '(', 'll', '=', '0', ';', 'll', '<', 'inl', ';', 'll', '++', ')', 'if', '(', 'arg', '[', 'i', '+', 'll', ']', '!=', 'in', '[', 'll', ']', ')', 'goto', 'rnexti', ';', 'memcpy', '(', 'p', ',', 'out', ',', 'outl', ')', ';', 'p', '+=', 'outl', ';', 'i', '+=', 'inl', ';', 'continue', ';', 'rnexti', ':', '*', 'p', '++', '=', 'arg', '[', 'i', '++', ']', ';', '}', '*', 'p', '=', '0', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1196,"['view_new', '(', 'PopplerDocument', '*', 'doc', ')', '{', 'View', '*', 'view', ';', 'GtkWidget', '*', 'window', ';', 'GtkWidget', '*', 'sw', ';', 'GtkWidget', '*', 'vbox', ',', '*', 'hbox', ';', 'guint', 'n_pages', ';', 'view', '=', 'g_slice_new0', '(', 'View', ')', ';', 'view', '->', 'doc', '=', 'doc', ';', 'window', '=', 'gtk_window_new', '(', 'GTK_WINDOW_TOPLEVEL', ')', ';', 'g_signal_connect', '(', 'window', ',', '""""', ',', 'G_CALLBACK', '(', 'destroy_window_callback', ')', ',', 'view', ')', ';', 'vbox', '=', 'gtk_vbox_new', '(', 'FALSE', ',', '5', ')', ';', 'view', '->', 'drawing_area', '=', 'gtk_drawing_area_new', '(', ')', ';', 'sw', '=', 'gtk_scrolled_window_new', '(', 'NULL', ',', 'NULL', ')', ';', 'gtk_scrolled_window_set_policy', '(', 'GTK_SCROLLED_WINDOW', '(', 'sw', ')', ',', 'GTK_POLICY_AUTOMATIC', ',', 'GTK_POLICY_AUTOMATIC', ')', ';', 'gtk_scrolled_window_add_with_viewport', '(', 'GTK_SCROLLED_WINDOW', '(', 'sw', ')', ',', 'view', '->', 'drawing_area', ')', ';', 'gtk_widget_show', '(', 'view', '->', 'drawing_area', ')', ';', 'gtk_box_pack_end', '(', 'GTK_BOX', '(', 'vbox', ')', ',', 'sw', ',', 'TRUE', ',', 'TRUE', ',', '0', ')', ';', 'gtk_widget_show', '(', 'sw', ')', ';', 'hbox', '=', 'gtk_hbox_new', '(', 'FALSE', ',', '5', ')', ';', 'n_pages', '=', 'poppler_document_get_n_pages', '(', 'doc', ')', ';', 'view', '->', 'spin_button', '=', 'gtk_spin_button_new_with_range', '(', '0', ',', 'n_pages', '-', '1', ',', '1', ')', ';', 'g_signal_connect', '(', 'view', '->', 'spin_button', ',', '""""', ',', 'G_CALLBACK', '(', 'page_changed_callback', ')', ',', 'view', ')', ';', 'gtk_box_pack_end', '(', 'GTK_BOX', '(', 'hbox', ')', ',', 'view', '->', 'spin_button', ',', 'FALSE', ',', 'TRUE', ',', '0', ')', ';', 'gtk_widget_show', '(', 'view', '->', 'spin_button', ')', ';', 'gtk_box_pack_end', '(', 'GTK_BOX', '(', 'vbox', ')', ',', 'hbox', ',', 'FALSE', ',', 'TRUE', ',', '0', ')', ';', 'gtk_widget_show', '(', 'hbox', ')', ';', 'gtk_container_add', '(', 'GTK_CONTAINER', '(', 'window', ')', ',', 'vbox', ')', ';', 'gtk_widget_show', '(', 'vbox', ')', ';', 'gtk_widget_show', '(', 'window', ')', ';', 'if', '(', '!cairo_output', ')', '{', 'SplashColor', 'sc', '=', '{', '255', ',', '255', ',', '255', '}', ';', 'view', '->', 'out', '=', 'new', 'GDKSplashOutputDev', '(', 'gtk_widget_get_screen', '(', 'window', ')', ',', 'redraw_callback', ',', '(', 'void', '*', ')', 'view', ',', 'sc', ')', ';', 'view', '->', 'out', '->', 'startDoc', '(', 'view', '->', 'doc', '->', 'doc', '->', 'getXRef', '(', ')', ')', ';', '}', 'g_signal_connect', '(', 'view', '->', 'drawing_area', ',', '""""', ',', 'G_CALLBACK', '(', 'drawing_area_expose', ')', ',', 'view', ')', ';', 'return', 'view', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1197,"['acpi_ns_check_reference', '(', 'struct', 'acpi_evaluate_info', '*', 'info', ',', 'union', 'acpi_operand_object', '*', 'return_object', ')', '{', '/', '*', '*', 'Check', 'the', 'reference', 'object', 'for', 'the', 'correct', 'reference', 'type', '(', 'opcode', ')', '.', '*', 'The', 'only', 'type', 'of', 'reference', 'that', 'can', 'be', 'converted', 'to', 'an', 'union', 'acpi_object', '*', 'a', 'reference', 'to', 'a', 'named', 'object', '(', 'reference', 'class', ':', 'NAME', ')', 'if', '(', 'return_object', '->', 'reference', '.', 'class', '==', 'ACPI_REFCLASS_NAME', ')', '{', 'return', '(', 'AE_OK', ')', ';', '}', 'ACPI_WARN_PREDEFINED', '(', '(', 'AE_INFO', ',', 'info', '->', 'full_pathname', ',', 'info', '->', 'node_flags', ',', '""""', ',', 'acpi_ut_get_reference_name', '(', 'return_object', ')', ',', 'return_object', '->', 'reference', '.', 'class', ')', ')', ';', 'return', '(', 'AE_AML_OPERAND_TYPE', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
1198,"['opal_malloc_init', '(', 'void', ')', '{', '#if', 'OBJ_CONSTRUCT', '(', '&', 'malloc_stream', ',', 'opal_output_stream_t', ')', ';', 'malloc_stream', '.', 'lds_is_debugging', '=', 'true', ';', 'malloc_stream', '.', 'lds_verbose_level', '=', '5', ';', 'malloc_stream', '.', 'lds_prefix', '=', '""""', ';', 'malloc_stream', '.', 'lds_want_stderr', '=', 'true', ';', 'opal_malloc_output', '=', 'opal_output_open', '(', '&', 'malloc_stream', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1199,"['ast_dtmf_detect_init', '(', 'dtmf_detect_state_t', '*', 's', ',', 'unsigned', 'int', 'sample_rate', ')', '{', 'int', 'i', ';', 's', '->', 'lasthit', '=', '0', ';', 's', '->', 'current_hit', '=', '0', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', '4', ';', 'i', '++', ')', '{', 'goertzel_init', '(', '&', 's', '->', 'row_out', '[', 'i', ']', ',', 'dtmf_row', '[', 'i', ']', ',', 'DTMF_GSIZE', ',', 'sample_rate', ')', ';', 'goertzel_init', '(', '&', 's', '->', 'col_out', '[', 'i', ']', ',', 'dtmf_col', '[', 'i', ']', ',', 'DTMF_GSIZE', ',', 'sample_rate', ')', ';', 's', '->', 'energy', '=', '0', '.', '0', ';', '}', 's', '->', 'current_sample', '=', '0', ';', 's', '->', 'hits', '=', '0', ';', 's', '->', 'misses', '=', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1200,"['imProcessCalcAutoGamma', '(', 'const', 'imImage', '*', 'image', ')', '{', 'float', 'mean', ',', 'min', ',', 'max', ';', 'imStats', 'stats', '[', '4', ']', ';', 'imCalcImageStatistics', '(', 'image', ',', 'stats', ')', ';', 'mean', '=', 'stats', '[', '0', ']', '.', 'mean', ';', 'min', '=', 'stats', '[', '0', ']', '.', 'min', ';', 'max', '=', 'stats', '[', '0', ']', '.', 'max', ';', 'for', '(', 'int', 'i', '=', '1', ';', 'i', '<', 'image', '->', 'depth', ';', 'i', '++', ')', '{', 'if', '(', 'stats', '[', 'i', ']', '.', 'min', '<', 'min', ')', 'min', '=', 'stats', '[', 'i', ']', '.', 'min', ';', 'if', '(', 'stats', '[', 'i', ']', '.', 'max', '>', 'max', ')', 'max', '=', 'stats', '[', 'i', ']', '.', 'max', ';', 'mean', '+=', 'stats', '[', 'i', ']', '.', 'mean', ';', '}', 'mean', '/=', '(', 'float', ')', 'image', '->', 'depth', ';', 'return', '(', 'float', ')', '(', 'log', '(', '(', 'double', ')', '(', '(', 'mean', '-', 'min', ')', '/', '(', 'max', '-', 'min', ')', ')', ')', '/', 'log', '(', '0', '.', '5', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1201,"['get', '(', ')', '{', 'unsigned', 'int', 'v', '=', 'getReplaced', '(', ')', '->', 'get', '(', ')', ';', 'if', '(', 'm_pfnIsBreak', '(', 'v', ',', 'break_mask', ',', 'break_value', ')', ')', 'invokeAction', '(', ')', ';', 'return', 'v', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1202,"['bkread', '(', 'int', 'fi', ',', 'unsigned', 'char', '*', 'buff', ',', 'int', 'size', ')', '{', 'int', 'a', ',', 'b', ';', 'if', '(', '!size', ')', '{', 'error', '=', '0', ';', 'return', '0', ';', '}', 'for', '(', 'a', '=', 'b', '=', '0', ';', '(', 'a', '<', 'size', ')', '&&', '(', '(', 'b', '=', 'joe_read', '(', 'fi', ',', 'buff', '+', 'a', ',', 'size', '-', 'a', ')', ')', '>', '0', ')', ';', 'a', '+=', 'b', ')', ';', 'if', '(', 'b', '<', '0', ')', 'error', '=', '-', '2', ';', 'error', '=', '0', ';', 'return', 'a', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1203,"['EndSelectAction', '(', 'vtkAbstractWidget', '*', 'w', ')', '{', 'vtkBoxWidget2', '*', 'self', '=', 'reinterpret_cast', '<', 'vtkBoxWidget2', '*', '>', '(', 'w', ')', ';', 'if', '(', 'self', '->', 'WidgetState', '==', 'vtkBoxWidget2', ':', ':', 'Start', ')', '{', 'return', ';', '}', '/', '/', 'Return', 'state', 'to', 'not', 'self', '->', 'WidgetState', '=', 'vtkBoxWidget2', ':', ':', 'Start', ';', 'reinterpret_cast', '<', 'vtkBoxRepresentation', '*', '>', '(', 'self', '->', 'WidgetRep', ')', '->', 'SetInteractionState', '(', 'vtkBoxRepresentation', ':', ':', 'Outside', ')', ';', 'self', '->', 'ReleaseFocus', '(', ')', ';', 'self', '->', 'EventCallbackCommand', '->', 'SetAbortFlag', '(', '1', ')', ';', 'self', '->', 'EndInteraction', '(', ')', ';', 'self', '->', 'InvokeEvent', '(', 'vtkCommand', ':', ':', 'EndInteractionEvent', ',', 'NULL', ')', ';', 'self', '->', 'Render', '(', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1204,"['icon_theme_changed', '(', 'GtkIconTheme', '*', 'theme', ',', 'CcShellModel', '*', 'self', ')', '{', 'GtkTreeIter', 'iter', ';', 'GtkTreeModel', '*', 'model', ';', 'gboolean', 'cont', ';', 'model', '=', 'GTK_TREE_MODEL', '(', 'self', ')', ';', 'cont', '=', 'gtk_tree_model_get_iter_first', '(', 'model', ',', '&', 'iter', ')', ';', 'while', '(', 'cont', ')', '{', 'GdkPixbuf', '*', 'pixbuf', ';', 'GIcon', '*', 'icon', ';', 'gtk_tree_model_get', '(', 'model', ',', '&', 'iter', ',', 'COL_GICON', ',', '&', 'icon', ',', '-', '1', ')', ';', 'pixbuf', '=', 'load_pixbuf_for_gicon', '(', 'icon', ')', ';', 'g_object_unref', '(', 'icon', ')', ';', 'gtk_list_store_set', '(', 'GTK_LIST_STORE', '(', 'model', ')', ',', '&', 'iter', ',', 'COL_PIXBUF', ',', 'pixbuf', ',', '-', '1', ')', ';', 'cont', '=', 'gtk_tree_model_iter_next', '(', 'model', ',', '&', 'iter', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1205,"['compare', '(', 'const', 'Basic', '&', 'o', ')', '{', 'CSYMPY_ASSERT', '(', 'is_a', '<', 'Pow', '>', '(', 'o', ')', ')', 'const', 'Pow', '&', 's', '=', 'static_cast', '<', 'const', 'Pow', '&', '>', '(', 'o', ')', ';', 'int', 'base_cmp', '=', 'base_', '->', '__cmp__', '(', '*', 's', '.', 'base_', ')', ';', 'if', '(', 'base_cmp', '==', '0', ')', 'return', 'exp_', '->', '__cmp__', '(', '*', 's', '.', 'exp_', ')', ';', 'return', 'base_cmp', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1206,"['checkbutton_toggled_cb', '(', 'GtkWidget', '*', 'widget', ',', 'CcWacomMappingPanel', '*', 'self', ')', '{', 'gboolean', 'active', ';', 'active', '=', 'gtk_toggle_button_get_active', '(', 'GTK_TOGGLE_BUTTON', '(', 'widget', ')', ')', ';', 'set_combobox_sensitive', '(', 'self', ',', 'active', ')', ';', 'if', '(', '!active', ')', 'gtk_switch_set_active', '(', 'GTK_SWITCH', '(', 'self', '->', 'priv', '->', 'aspectswitch', ')', ',', 'FALSE', ')', ';', 'update_mapping', '(', 'self', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1207,"['CreateTimer', '(', 'int', 'timerType', ')', '{', 'int', 'platformTimerId', ',', 'timerId', ';', 'if', '(', 'timerType', '==', 'VTKI_TIMER_FIRST', ')', '{', 'unsigned', 'long', 'duration', '=', 'this', '->', 'TimerDuration', ';', 'timerId', '=', 'vtkTimerId', ';', '/', '/', 'just', 'use', 'current', 'id', ',', 'assume', 'we', ""don't"", 'have', 'mutliple', 'platformTimerId', '=', 'this', '->', 'InternalCreateTimer', '(', 'timerId', ',', 'RepeatingTimer', ',', 'duration', ')', ';', 'if', '(', '0', '==', 'platformTimerId', ')', '{', 'return', '0', ';', '}', '(', '*', 'this', '->', 'TimerMap', ')', '[', 'timerId', ']', '=', 'vtkTimerStruct', '(', 'platformTimerId', ',', 'RepeatingTimer', ',', 'duration', ')', ';', 'return', 'timerId', ';', '}', 'else', '/', '/', 'VTKI_TIMER_UPDATE', 'is', 'just', 'updating', 'last', 'created', '{', 'return', '1', ';', '/', '/', 'do', 'nothing', 'because', 'repeating', 'timer', 'has', 'been', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1208,"['VSM_Diag', '(', 'struct', 'VSM_data', '*', 'vd', ',', 'VSM_diag_f', '*', 'func', ',', 'void', '*', 'priv', ')', '{', 'CHECK_OBJ_NOTNULL', '(', 'vd', ',', 'VSM_MAGIC', ')', ';', 'if', '(', 'func', '==', 'NULL', ')', 'vd', '->', 'diag', '=', '(', 'VSM_diag_f', '*', ')', 'getpid', ';', 'vd', '->', 'diag', '=', 'func', ';', 'vd', '->', 'priv', '=', 'priv', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
1209,"['setexp', '(', 'const', 'char', '*', 'exp', ',', 'struct', 'rfc1035_spf_info', '*', 'info', ')', '{', 'struct\trfc1035_reply', '*', 'reply', ';', 'char\tnamebuf', '[', 'RFC1035_MAXNAMESIZE', '+', '1', ']', ';', 'char\ttxtbuf', '[', '256', ']', ';', 'int', 'n', ';', 'char\t', '*', 'str', ';', '/', '*', '*', '*', 'The', 'argument', 'to', 'the', 'explanation', 'modifier', 'is', 'a', 'domain', '-', '*', '*', 'to', 'be', 'TXT', 'queried', '.', 'The', 'result', 'of', 'the', 'TXT', 'query', 'is', '*', '*', 'macro', '-', 'string', 'that', 'is', 'macro', '-', 'expanded', '.', 'If', 'SPF', '*', '*', 'results', 'in', 'a', 'rejection', ',', 'the', 'expanded', 'result', 'SHOULD', '*', '*', 'shown', 'to', 'the', 'sender', 'in', 'the', 'SMTP', 'reject', 'message', '.', '*', '*', 'string', 'allows', 'the', 'publishing', 'domain', 'to', 'communicate', '*', '*', 'information', 'via', 'the', 'SMTP', 'receiver', 'to', 'legitimate', 'senders', '*', '*', 'the', 'form', 'of', 'a', 'short', 'message', 'or', 'URL', '.', 'namebuf', '[', '0', ']', '=', '0', ';', 'strncat', '(', 'namebuf', ',', 'exp', ',', 'RFC1035_MAXNAMESIZE', ')', ';', 'if', '(', 'rfc1035_resolve_cname', '(', '&', 'info', '->', 'res', ',', 'namebuf', ',', 'RFC1035_TYPE_TXT', ',', 'RFC1035_CLASS_IN', ',', '&', 'reply', ',', '0', ')', '<', '0', '||', 'reply', '==', '0', '||', '(', 'n', '=', 'rfc1035_replysearch_an', '(', '&', 'info', '->', 'res', ',', 'reply', ',', 'namebuf', ',', 'RFC1035_TYPE_TXT', ',', 'RFC1035_CLASS_IN', ',', '0', ')', ')', '<', '0', ')', '{', 'set_err_msg', '(', 'info', '->', 'errmsg_buf', ',', 'info', '->', 'errmsg_buf_size', ',', '""""', ')', ';', '}', '{', 'rfc1035_rr_gettxt', '(', 'reply', '->', 'allrrs', '[', 'n', ']', ',', '0', ',', 'txtbuf', ')', ';', 'str', '=', 'expand', '(', 'txtbuf', ',', 'info', ')', ';', 'set_err_msg', '(', 'info', '->', 'errmsg_buf', ',', 'info', '->', 'errmsg_buf_size', ',', 'str', '?', 'str', ':', 'strerror', '(', 'errno', ')', ')', ';', 'if', '(', 'str', ')', 'free', '(', 'str', ')', ';', '}', 'rfc1035_replyfree', '(', 'reply', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1210,"['init_style', '(', ')', '{', '/', '/', 'insure', 'use', 'of', 'CHARMM', 'pair_style', 'if', 'any', 'weight', 'factors', 'are', 'non', '-', '/', '/', 'set', 'local', 'ptrs', 'to', 'LJ', '14', 'arrays', 'setup', 'by', 'if', '(', 'weightflag', ')', '{', 'int', 'itmp', ';', 'if', '(', 'force', '->', 'pair', '==', 'NULL', ')', 'error', '->', 'all', '(', 'FLERR', ',', '""""', ')', ';', 'lj14_1', '=', '(', 'double', '*', '*', ')', 'force', '->', 'pair', '->', 'extract', '(', '""""', ',', 'itmp', ')', ';', 'lj14_2', '=', '(', 'double', '*', '*', ')', 'force', '->', 'pair', '->', 'extract', '(', '""""', ',', 'itmp', ')', ';', 'lj14_3', '=', '(', 'double', '*', '*', ')', 'force', '->', 'pair', '->', 'extract', '(', '""""', ',', 'itmp', ')', ';', 'lj14_4', '=', '(', 'double', '*', '*', ')', 'force', '->', 'pair', '->', 'extract', '(', '""""', ',', 'itmp', ')', ';', 'int', '*', 'ptr', '=', '(', 'int', '*', ')', 'force', '->', 'pair', '->', 'extract', '(', '""""', ',', 'itmp', ')', ';', 'if', '(', '!lj14_1', '||', '!lj14_2', '||', '!lj14_3', '||', '!lj14_4', '||', '!ptr', ')', 'error', '->', 'all', '(', 'FLERR', ',', '""""', ')', ';', 'implicit', '=', '*', 'ptr', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
1211,"['remove_odd_key', '(', 'void', '*', 'key', ',', 'size_t', 'keybits', ',', 'void', '*', 'uv', ',', 'void', '*', 'uu', ')', '{', 'uint8', '*', 'p', '=', 'key', ';', 'g_assert', '(', 'keybits', '==', '32', ')', ';', '(', 'void', ')', 'uv', ';', '(', 'void', ')', 'uu', ';', 'return', '(', 'p', '[', '3', ']', '&', '0x1', ')', '?', 'TRUE', ':', 'FALSE', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1212,"['parse', '(', 'const', 'std', ':', ':', 'string', '&', 'line', ')', '{', 'void', '*', 'parser', ';', 'size_t', 'offset', '=', '0', ';', 'CTreeNode', ':', ':', 'ptr_set_t', 'temp_set', ';', 'std', ':', ':', 'list', '<', 'CParserNode', '*', '>', 'nodes', ';', 'SState', 'state', '=', '{', 'offset', ':', '0', ',', 'syntax_error', ':', '0', ',', 'root', ':', 'NULL', ',', 'vpool', ':', '&', 'm_variables_pool', ',', 'temp_set', ':', '&', 'temp_set', '}', ';', 'm_state', '=', 'EPS_UNDEFINED', ';', 'if', '(', 'line', '.', 'empty', '(', ')', ')', '{', 'm_state', '=', 'EPS_ERROR', ';', 'std', ':', ':', 'cerr', '<<', 'RED', '""""', 'RESET', '<<', 'std', ':', ':', 'endl', ';', 'return', 'false', ';', '}', 'parser', '=', 'ParseAlloc', '(', 'malloc', ')', ';', 'scanner', ':', ':', 'CToken', 't', ';', 'for', '(', 't', '=', 'scanner', ':', ':', 'scan', '(', 'line', ',', 'offset', ')', ';', 'ET_ERROR', '!=', 't', '.', 'token', '(', ')', '&&', 'ET_EOF', '!=', 't', '.', 'token', '(', ')', ';', 't', '=', 'scanner', ':', ':', 'scan', '(', 'line', ',', 'offset', ')', ')', '{', 'if', '(', 'ET_SPACE', '==', 't', '.', 'token', '(', ')', ')', '{', 'continue', ';', '}', 'CParserNode', '*', 'node', '=', 'CTreeNodeFactory', ':', ':', 'createParserNode', '(', 't', '.', 'value', '(', ')', ')', ';', 'nodes', '.', 'push_back', '(', 'node', ')', ';', 'Parse', '(', 'parser', ',', 't', '.', 'token', '(', ')', ',', 'node', ',', '&', 'state', ')', ';', 'if', '(', 'state', '.', 'syntax_error', ')', '{', 'break', ';', '}', 'state', '.', 'offset', '=', 'offset', ';', '}', 'if', '(', '!state', '.', 'syntax_error', ')', '{', 'Parse', '(', 'parser', ',', 'ET_END', ',', 'ET_END', ',', '&', 'state', ')', ';', '}', 'if', '(', 'state', '.', 'syntax_error', '||', 'ET_ERROR', '==', 't', '.', 'token', '(', ')', ')', '{', 'm_state', '=', 'EPS_ERROR', ';', 'std', ':', ':', 'cerr', '<<', 'GREEN', '""""', '<<', 'state', '.', 'offset', '<<', 'RESET', '<<', 'std', ':', ':', 'endl', ';', 'std', ':', ':', 'string', 'msg', '=', 'line', ';', 'msg', '.', 'insert', '(', 'state', '.', 'offset', ',', 'BLUE', ')', ';', 'msg', '=', '""""', '+', 'msg', ';', 'msg', '.', 'append', '(', 'RESET', '""""', ')', ';', 'std', ':', ':', 'cerr', '<<', 'msg', '<<', 'std', ':', ':', 'endl', ';', 'for', '(', 'CTreeNode', ':', ':', 'ptr_set_t', ':', ':', 'const_iterator', 'i', '=', 'temp_set', '.', 'begin', '(', ')', ';', 'i', '!=', 'temp_set', '.', 'end', '(', ')', ';', 'i', '++', ')', '{', 'delete', '*', 'i', ';', '}', 'temp_set', '.', 'clear', '(', ')', ';', '}', '{', 'm_state', '=', 'EPS_READY', ';', 'm_tree', '.', 'root', '(', 'static_cast', '<', 'CTreeNode', '*', '>', '(', 'state', '.', 'root', ')', ')', ';', '}', 'ParseFree', '(', 'parser', ',', 'free', ')', ';', 'while', '(', '!nodes', '.', 'empty', '(', ')', ')', '{', 'delete', 'nodes', '.', 'front', '(', ')', ';', 'nodes', '.', 'pop_front', '(', ')', ';', '}', 'return', 'EPS_READY', '==', 'm_state', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1213,"['client3_1_finodelk', '(', 'call_frame_t', '*', 'frame', ',', 'xlator_t', '*', 'this', ',', 'void', '*', 'data', ')', '{', 'clnt_args_t', '*', 'args', '=', 'NULL', ';', 'gfs3_finodelk_req', 'req', '=', '{', '{', '0', ',', '}', ',', '}', ';', 'int32_t', 'gf_cmd', '=', '0', ';', 'int32_t', 'gf_type', '=', '0', ';', 'int64_t', 'remote_fd', '=', '-', '1', ';', 'clnt_conf_t', '*', 'conf', '=', 'NULL', ';', 'int', 'op_errno', '=', 'ESTALE', ';', 'int', 'ret', '=', '0', ';', 'if', '(', '!frame', '||', '!this', '||', '!data', ')', 'goto', 'unwind', ';', 'args', '=', 'data', ';', 'conf', '=', 'this', '->', 'private', ';', 'CLIENT_GET_REMOTE_FD', '(', 'conf', ',', 'args', '->', 'fd', ',', 'remote_fd', ',', 'op_errno', ',', 'unwind', ')', ';', 'if', '(', 'args', '->', 'cmd', '==', 'F_GETLK', '||', 'args', '->', 'cmd', '==', 'F_GETLK64', ')', 'gf_cmd', '=', 'GF_LK_GETLK', ';', 'else', 'if', '(', 'args', '->', 'cmd', '==', 'F_SETLK', '||', 'args', '->', 'cmd', '==', 'F_SETLK64', ')', 'gf_cmd', '=', 'GF_LK_SETLK', ';', 'else', 'if', '(', 'args', '->', 'cmd', '==', 'F_SETLKW', '||', 'args', '->', 'cmd', '==', 'F_SETLKW64', ')', 'gf_cmd', '=', 'GF_LK_SETLKW', ';', 'else', '{', 'gf_log', '(', 'this', '->', 'name', ',', 'GF_LOG_WARNING', ',', '""""', ',', 'gf_cmd', ')', ';', 'goto', 'unwind', ';', '}', 'switch', '(', 'args', '->', 'flock', '->', 'l_type', ')', '{', 'case', 'F_RDLCK', ':', 'gf_type', '=', 'GF_LK_F_RDLCK', ';', 'break', ';', 'case', 'F_WRLCK', ':', 'gf_type', '=', 'GF_LK_F_WRLCK', ';', 'break', ';', 'case', 'F_UNLCK', ':', 'gf_type', '=', 'GF_LK_F_UNLCK', ';', 'break', ';', '}', 'req', '.', 'volume', '=', '(', 'char', '*', ')', 'args', '->', 'volume', ';', 'req', '.', 'fd', '=', 'remote_fd', ';', 'req', '.', 'cmd', '=', 'gf_cmd', ';', 'req', '.', 'type', '=', 'gf_type', ';', 'gf_proto_flock_from_flock', '(', '&', 'req', '.', 'flock', ',', 'args', '->', 'flock', ')', ';', 'memcpy', '(', 'req', '.', 'gfid', ',', 'args', '->', 'fd', '->', 'inode', '->', 'gfid', ',', '16', ')', ';', 'GF_PROTOCOL_DICT_SERIALIZE', '(', 'this', ',', 'args', '->', 'xdata', ',', '(', '&', 'req', '.', 'xdata', '.', 'xdata_val', ')', ',', 'req', '.', 'xdata', '.', 'xdata_len', ',', 'op_errno', ',', 'unwind', ')', ';', 'ret', '=', 'client_submit_request', '(', 'this', ',', '&', 'req', ',', 'frame', ',', 'conf', '->', 'fops', ',', 'GFS3_OP_FINODELK', ',', 'client3_1_finodelk_cbk', ',', 'NULL', ',', 'NULL', ',', '0', ',', 'NULL', ',', '0', ',', 'NULL', ',', '(', 'xdrproc_t', ')', 'xdr_gfs3_finodelk_req', ')', ';', 'if', '(', 'ret', ')', '{', 'gf_log', '(', 'this', '->', 'name', ',', 'GF_LOG_WARNING', ',', '""""', ')', ';', '}', 'if', '(', 'req', '.', 'xdata', '.', 'xdata_val', ')', 'GF_FREE', '(', 'req', '.', 'xdata', '.', 'xdata_val', ')', ';', 'return', '0', ';', 'unwind', ':', 'CLIENT_STACK_UNWIND', '(', 'finodelk', ',', 'frame', ',', '-', '1', ',', 'op_errno', ',', 'NULL', ')', ';', 'if', '(', 'req', '.', 'xdata', '.', 'xdata_val', ')', 'GF_FREE', '(', 'req', '.', 'xdata', '.', 'xdata_val', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  True,CWE-other  True
1214,"['create_terminal_mappings', '(', 'struct', 'kui_manager', '*', 'kuim', ',', 'struct', 'kuictx', '*', 'i', ')', '{', 'struct', 'kui_map_set', '*', 'terminal_map', ';', 'terminal_map', '=', 'kui_term_get_terminal_mappings', '(', ')', ';', 'if', '(', '!terminal_map', ')', 'return', '-', '1', ';', 'kuim', '->', 'terminal_key_set', '=', 'terminal_map', ';', 'if', '(', 'kui_add_map_set', '(', 'i', ',', 'terminal_map', ')', '==', '-', '1', ')', 'return', '-', '1', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1215,"['ImproveSkill', '(', 'int', '*', 'skill', ')', '{', 'if', '(', '*', 'skill', '>=', 'NUMBER_OF_SKILL_LEVELS', '-', '1', ')', 'return', ';', '(', '*', 'skill', ')', '++', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1216,"['add_entropy', '(', 'FState', '*', 'st', ',', 'const', 'unsigned', 'char', '*', 'data', ',', 'unsigned', 'len', ')', '{', 'unsigned\t\tpos', ';', 'unsigned', 'char\thash', '[', 'BLOCK', ']', ';', 'MD_CTX\t\tmd', ';', 'md_init', '(', '&', 'md', ')', ';', 'md_update', '(', '&', 'md', ',', 'data', ',', 'len', ')', ';', 'md_result', '(', '&', 'md', ',', 'hash', ')', ';', '/', '*', '*', 'Make', 'sure', 'the', 'pool', '0', 'is', 'initialized', ',', 'then', 'update', 'randomly', '.', 'if', '(', 'st', '->', 'reseed_count', '==', '0', ')', 'pos', '=', '0', ';', 'pos', '=', 'get_rand_pool', '(', 'st', ')', ';', 'md_update', '(', '&', 'st', '->', 'pool', '[', 'pos', ']', ',', 'hash', ',', 'BLOCK', ')', ';', 'if', '(', 'pos', '==', '0', ')', 'st', '->', 'pool0_bytes', '+=', 'len', ';', 'memset', '(', 'hash', ',', '0', ',', 'BLOCK', ')', ';', 'memset', '(', '&', 'md', ',', '0', ',', 'sizeof', '(', 'md', ')', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1217,"['destroy_priv', '(', 'struct', 'kref', '*', 'kref', ')', '{', 'struct', 'parport_uss720_private', '*', 'priv', '=', 'container_of', '(', 'kref', ',', 'struct', 'parport_uss720_private', ',', 'ref_count', ')', ';', 'dev_dbg', '(', '&', 'priv', '->', 'usbdev', '->', 'dev', ',', '""""', ')', ';', 'usb_put_dev', '(', 'priv', '->', 'usbdev', ')', ';', 'kfree', '(', 'priv', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1218,"['do_yp_remove', '(', 'ypdata_t', '*', 'yp', ',', 'char', '*', 's', ',', 'unsigned', 'len', ')', '{', 'int', 'ret', '=', '0', ';', 'if', '(', 'yp', '->', 'sid', ')', '{', 'ret', '=', 'snprintf', '(', 's', ',', 'len', ',', '""""', ',', 'yp', '->', 'sid', ')', ';', 'if', '(', 'ret', '>=', '(', 'signed', ')', 'len', ')', 'return', 'ret', '+', '1', ';', 'INFO1', '(', '""""', ',', 'yp', '->', 'mount', ')', ';', 'ret', '=', 'send_to_yp', '(', '""""', ',', 'yp', ',', 's', ')', ';', 'free', '(', 'yp', '->', 'sid', ')', ';', 'yp', '->', 'sid', '=', 'NULL', ';', '}', 'yp', '->', 'remove', '=', '1', ';', 'yp', '->', 'process', '=', 'do_yp_add', ';', 'yp_update', '=', '1', ';', 'return', 'ret', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1219,"['finish_qualified_id_expr', '(', 'tree', 'qualifying_class', ',', 'tree', 'expr', ',', 'bool', 'done', ',', 'bool', 'address_p', ')', '{', 'if', '(', 'error_operand_p', '(', 'expr', ')', ')', 'return', 'error_mark_node', ';', '/', '*', 'If', 'EXPR', 'occurs', 'as', 'the', 'operand', 'of', ""''"", ',', 'use', 'special', 'handling', 'if', '(', 'address_p', '&&', 'done', ')', '{', 'if', '(', 'TREE_CODE', '(', 'expr', ')', '==', 'SCOPE_REF', ')', 'expr', '=', 'TREE_OPERAND', '(', 'expr', ',', '1', ')', ';', 'expr', '=', 'build_offset_ref', '(', 'qualifying_class', ',', 'expr', ',', '/', '*', 'address_p', '=', '*', '/', 'true', ')', ';', 'return', 'expr', ';', '}', 'if', '(', 'TREE_CODE', '(', 'expr', ')', '==', 'FIELD_DECL', ')', 'expr', '=', 'finish_non_static_data_member', '(', 'expr', ',', 'current_class_ref', ',', 'qualifying_class', ')', ';', 'else', 'if', '(', 'BASELINK_P', '(', 'expr', ')', '&&', '!processing_template_decl', ')', '{', 'tree', 'fns', ';', 'fns', '=', 'BASELINK_FUNCTIONS', '(', 'expr', ')', ';', 'if', '(', 'TREE_CODE', '(', 'fns', ')', '==', 'TEMPLATE_ID_EXPR', ')', 'fns', '=', 'TREE_OPERAND', '(', 'fns', ',', '0', ')', ';', '/', '*', 'If', 'so', ',', 'the', 'expression', 'may', 'be', 'relative', 'to', 'the', 'if', '(', '!shared_member_p', '(', 'fns', ')', '&&', '&&', 'DERIVED_FROM_P', '(', 'qualifying_class', ',', 'current_class_type', ')', ')', 'expr', '=', '(', '(', 'maybe_dummy_object', '(', 'qualifying_class', ',', 'NULL', ')', ',', 'expr', ',', 'BASELINK_ACCESS_BINFO', '(', 'expr', ')', ',', '/', '*', 'preserve_reference', '=', '*', '/', 'false', ')', ')', ';', 'else', 'if', '(', 'done', ')', '/', '*', 'The', 'expression', 'is', 'a', 'qualified', 'name', 'whose', 'address', 'is', 'expr', '=', 'build_offset_ref', '(', 'qualifying_class', ',', 'expr', ',', '/', '*', 'address_p', '=', '*', '/', 'false', ')', ';', '}', 'return', 'expr', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
1220,"['GetObjectFilePath', '(', 'cmSourceFile', '*', 'source', ')', '{', 'std', ':', ':', 'string', 'path', '=', 'this', '->', 'LocalGenerator', '->', 'GetHomeRelativeOutputPath', '(', ')', ';', 'if', '(', '!path', '.', 'empty', '(', ')', ')', 'path', '+=', '""""', ';', 'std', ':', ':', 'string', 'const', '&', 'objectName', '=', 'this', '->', 'GeneratorTarget', '->', 'Objects', '[', 'source', ']', ';', 'path', '+=', 'this', '->', 'LocalGenerator', '->', 'GetTargetDirectory', '(', '*', 'this', '->', 'Target', ')', ';', 'path', '+=', '""""', ';', 'path', '+=', 'objectName', ';', 'return', 'path', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1221,"['icalattachtype_get_url', '(', 'struct', 'icalattachtype', '*', 'v', ')', '{', 'icalerror_check_arg', '(', '(', 'v', '!=', '0', ')', ',', '""""', ')', ';', 'return', 'v', '->', 'url', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
1222,"['decode_home_uri', '(', 'const', 'char', '*', 'uri', ')', '{', 'char', '*', 'home_uri', ';', 'char', '*', 'decoded_uri', ';', 'if', '(', 'g_str_has_prefix', '(', 'uri', ',', '""""', ')', ')', '{', 'decoded_uri', '=', 'g_strdup', '(', 'uri', ')', ';', '}', 'else', '{', 'home_uri', '=', 'nautilus_get_home_directory_uri', '(', ')', ';', 'decoded_uri', '=', 'g_strconcat', '(', 'home_uri', ',', '""""', ',', 'uri', ',', 'NULL', ')', ';', 'g_free', '(', 'home_uri', ')', ';', '}', 'return', 'decoded_uri', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1223,"['initializeStorage', '(', 'int', 'matrixSize', ')', '{', 'return', 'MAXSUMSTORAGE', '(', 'matrixSize', ',', 'vector', '<', 'vector', '<', 'vector', '<', 'int', '>', '>', '>', '(', 'matrixSize', ',', 'vector', '<', 'vector', '<', 'int', '>', '>', '(', 'matrixSize', ',', 'vector', '<', 'int', '>', '(', 'matrixSize', ',', '0', ')', ')', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1224,"['client3_1_fstat', '(', 'call_frame_t', '*', 'frame', ',', 'xlator_t', '*', 'this', ',', 'void', '*', 'data', ')', '{', 'clnt_args_t', '*', 'args', '=', 'NULL', ';', 'gfs3_fstat_req', 'req', '=', '{', '{', '0', ',', '}', ',', '}', ';', 'int64_t', 'remote_fd', '=', '-', '1', ';', 'clnt_conf_t', '*', 'conf', '=', 'NULL', ';', 'int', 'op_errno', '=', 'ESTALE', ';', 'int', 'ret', '=', '0', ';', 'if', '(', '!frame', '||', '!this', '||', '!data', ')', 'goto', 'unwind', ';', 'args', '=', 'data', ';', 'conf', '=', 'this', '->', 'private', ';', 'CLIENT_GET_REMOTE_FD', '(', 'conf', ',', 'args', '->', 'fd', ',', 'remote_fd', ',', 'op_errno', ',', 'unwind', ')', ';', 'req', '.', 'fd', '=', 'remote_fd', ';', 'memcpy', '(', 'req', '.', 'gfid', ',', 'args', '->', 'fd', '->', 'inode', '->', 'gfid', ',', '16', ')', ';', 'GF_PROTOCOL_DICT_SERIALIZE', '(', 'this', ',', 'args', '->', 'xdata', ',', '(', '&', 'req', '.', 'xdata', '.', 'xdata_val', ')', ',', 'req', '.', 'xdata', '.', 'xdata_len', ',', 'op_errno', ',', 'unwind', ')', ';', 'ret', '=', 'client_submit_request', '(', 'this', ',', '&', 'req', ',', 'frame', ',', 'conf', '->', 'fops', ',', 'GFS3_OP_FSTAT', ',', 'client3_1_fstat_cbk', ',', 'NULL', ',', 'NULL', ',', '0', ',', 'NULL', ',', '0', ',', 'NULL', ',', '(', 'xdrproc_t', ')', 'xdr_gfs3_fstat_req', ')', ';', 'if', '(', 'ret', ')', '{', 'gf_log', '(', 'this', '->', 'name', ',', 'GF_LOG_WARNING', ',', '""""', ')', ';', '}', 'if', '(', 'req', '.', 'xdata', '.', 'xdata_val', ')', 'GF_FREE', '(', 'req', '.', 'xdata', '.', 'xdata_val', ')', ';', 'return', '0', ';', 'unwind', ':', 'CLIENT_STACK_UNWIND', '(', 'fstat', ',', 'frame', ',', '-', '1', ',', 'op_errno', ',', 'NULL', ',', 'NULL', ')', ';', 'if', '(', 'req', '.', 'xdata', '.', 'xdata_val', ')', 'GF_FREE', '(', 'req', '.', 'xdata', '.', 'xdata_val', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  True,CWE-other  True
1225,"['GetNumTracksWithEvents', '(', ')', '{', 'int', 'i', ';', 'for', '(', 'i', '=', 'number_of_tracks', '-', '1', ';', 'i', '>=', '0', ';', '--', 'i', ')', '{', 'if', '(', '!tracks', '[', 'i', ']', '->', 'IsTrackEmpty', '(', ')', ')', 'break', ';', '}', 'return', 'i', '+', '1', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1226,"['brd_ioctl', '(', 'struct', 'block_device', '*', 'bdev', ',', 'fmode_t', 'mode', ',', 'unsigned', 'int', 'cmd', ',', 'unsigned', 'long', 'arg', ')', '{', 'int', 'error', ';', 'struct', 'brd_device', '*', 'brd', '=', 'bdev', '->', 'bd_disk', '->', 'private_data', ';', 'if', '(', 'cmd', '!=', 'BLKFLSBUF', ')', 'return', '-', 'ENOTTY', ';', '/', '*', '*', 'ram', 'device', 'BLKFLSBUF', 'has', 'special', 'semantics', ',', 'we', 'want', 'to', '*', 'release', 'and', 'destroy', 'the', 'ramdisk', 'data', '.', 'mutex_lock', '(', '&', 'brd_mutex', ')', ';', 'mutex_lock', '(', '&', 'bdev', '->', 'bd_mutex', ')', ';', 'error', '=', '-', 'EBUSY', ';', 'if', '(', 'bdev', '->', 'bd_openers', '<=', '1', ')', '{', '/', '*', '*', 'Kill', 'the', 'cache', 'first', ',', 'so', 'it', ""isn't"", 'written', 'back', 'to', '*', 'device', '.', '*', '*', 'Another', 'thread', 'might', 'instantiate', 'more', 'buffercache', 'here', ',', '*', 'but', 'there', 'is', 'not', 'much', 'we', 'can', 'do', 'to', 'close', 'that', 'race', '.', 'kill_bdev', '(', 'bdev', ')', ';', 'brd_free_pages', '(', 'brd', ')', ';', 'error', '=', '0', ';', '}', 'mutex_unlock', '(', '&', 'bdev', '->', 'bd_mutex', ')', ';', 'mutex_unlock', '(', '&', 'brd_mutex', ')', ';', 'return', 'error', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1227,"['removeAStarBefore', '(', 'const', 'Decl', '*', 'D', ')', '{', 'SourceLocation', 'LocStart', '=', 'D', '->', 'getLocation', '(', ')', ';', 'const', 'char', '*', 'StartBuf', '=', 'SrcManager', '->', 'getCharacterData', '(', 'LocStart', ')', ';', 'int', 'Offset', '=', '0', ';', 'while', '(', '*', 'StartBuf', '!=', ""''"", ')', '{', 'StartBuf', '--', ';', 'Offset', '--', ';', '}', 'SourceLocation', 'StarLoc', '=', 'LocStart', '.', 'getLocWithOffset', '(', 'Offset', ')', ';', 'return', '!TheRewriter', '->', 'RemoveText', '(', 'StarLoc', ',', '1', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1228,"['VCLS_Poll', '(', 'struct', 'VCLS', '*', 'cs', ',', 'int', 'timeout', ')', '{', 'struct', 'VCLS_fd', '*', 'cfd', ',', '*', 'cfd2', ';', 'int', 'i', ',', 'j', ',', 'k', ';', 'CHECK_OBJ_NOTNULL', '(', 'cs', ',', 'VCLS_MAGIC', ')', ';', 'if', '(', 'cs', '->', 'nfd', '==', '0', ')', '{', 'errno', '=', '0', ';', 'return', '(', '-', '1', ')', ';', '}', 'assert', '(', 'cs', '->', 'nfd', '>', '0', ')', ';', '{', 'struct', 'pollfd', 'pfd', '[', 'cs', '->', 'nfd', ']', ';', 'i', '=', '0', ';', 'VTAILQ_FOREACH', '(', 'cfd', ',', '&', 'cs', '->', 'fds', ',', 'list', ')', '{', 'pfd', '[', 'i', ']', '.', 'fd', '=', 'cfd', '->', 'fdi', ';', 'pfd', '[', 'i', ']', '.', 'events', '=', 'POLLIN', ';', 'pfd', '[', 'i', ']', '.', 'revents', '=', '0', ';', 'i', '++', ';', '}', 'assert', '(', 'i', '==', 'cs', '->', 'nfd', ')', ';', 'j', '=', 'poll', '(', 'pfd', ',', 'cs', '->', 'nfd', ',', 'timeout', ')', ';', 'if', '(', 'j', '<=', '0', ')', 'return', '(', 'j', ')', ';', 'i', '=', '0', ';', 'VTAILQ_FOREACH_SAFE', '(', 'cfd', ',', '&', 'cs', '->', 'fds', ',', 'list', ',', 'cfd2', ')', '{', 'assert', '(', 'pfd', '[', 'i', ']', '.', 'fd', '==', 'cfd', '->', 'fdi', ')', ';', 'if', '(', 'pfd', '[', 'i', ']', '.', 'revents', '&', 'POLLHUP', ')', 'k', '=', '1', ';', 'k', '=', 'VLU_Fd', '(', 'cfd', '->', 'fdi', ',', 'cfd', '->', 'cli', '->', 'vlu', ')', ';', 'if', '(', 'k', ')', 'cls_close_fd', '(', 'cs', ',', 'cfd', ')', ';', 'i', '++', ';', '}', 'assert', '(', 'i', '==', 'j', ')', ';', '}', 'return', '(', 'j', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
1229,"['SelectShift', '(', 'const', 'Instruction', '*', 'I', ',', 'ARM_AM', ':', ':', 'ShiftOpc', 'ShiftTy', ')', '{', '/', '/', 'We', 'handle', 'thumb2', 'mode', 'by', 'target', 'independent', '/', '/', 'or', 'SelectionDAG', 'ISel', '.', 'if', '(', 'isThumb2', ')', 'return', 'false', ';', '/', '/', 'Only', 'handle', 'i32', 'now', '.', 'EVT', 'DestVT', '=', 'TLI', '.', 'getValueType', '(', 'DL', ',', 'I', '->', 'getType', '(', ')', ',', 'true', ')', ';', 'if', '(', 'DestVT', '!=', 'MVT', ':', ':', 'i32', ')', 'return', 'false', ';', 'unsigned', 'Opc', '=', 'ARM', ':', ':', 'MOVsr', ';', 'unsigned', 'ShiftImm', ';', 'Value', '*', 'Src2Value', '=', 'I', '->', 'getOperand', '(', '1', ')', ';', 'if', '(', 'const', 'ConstantInt', '*', 'CI', '=', 'dyn_cast', '<', 'ConstantInt', '>', '(', 'Src2Value', ')', ')', '{', 'ShiftImm', '=', 'CI', '->', 'getZExtValue', '(', ')', ';', '/', '/', 'Fall', 'back', 'to', 'selection', 'DAG', 'isel', 'if', 'the', 'shift', '/', '/', 'is', 'zero', 'or', 'greater', 'than', 'the', 'width', 'of', 'the', 'value', 'type', '.', 'if', '(', 'ShiftImm', '==', '0', '||', 'ShiftImm', '>=', '32', ')', 'return', 'false', ';', 'Opc', '=', 'ARM', ':', ':', 'MOVsi', ';', '}', 'Value', '*', 'Src1Value', '=', 'I', '->', 'getOperand', '(', '0', ')', ';', 'unsigned', 'Reg1', '=', 'getRegForValue', '(', 'Src1Value', ')', ';', 'if', '(', 'Reg1', '==', '0', ')', 'return', 'false', ';', 'unsigned', 'Reg2', '=', '0', ';', 'if', '(', 'Opc', '==', 'ARM', ':', ':', 'MOVsr', ')', '{', 'Reg2', '=', 'getRegForValue', '(', 'Src2Value', ')', ';', 'if', '(', 'Reg2', '==', '0', ')', 'return', 'false', ';', '}', 'unsigned', 'ResultReg', '=', 'createResultReg', '(', '&', 'ARM', ':', ':', 'GPRnopcRegClass', ')', ';', 'if', '(', 'ResultReg', '==', '0', ')', 'return', 'false', ';', 'MachineInstrBuilder', 'MIB', '=', 'BuildMI', '(', '*', 'FuncInfo', '.', 'MBB', ',', 'FuncInfo', '.', 'InsertPt', ',', 'DbgLoc', ',', 'TII', '.', 'get', '(', 'Opc', ')', ',', 'ResultReg', ')', '.', 'addReg', '(', 'Reg1', ')', ';', 'if', '(', 'Opc', '==', 'ARM', ':', ':', 'MOVsi', ')', 'MIB', '.', 'addImm', '(', 'ARM_AM', ':', ':', 'getSORegOpc', '(', 'ShiftTy', ',', 'ShiftImm', ')', ')', ';', 'else', 'if', '(', 'Opc', '==', 'ARM', ':', ':', 'MOVsr', ')', '{', 'MIB', '.', 'addReg', '(', 'Reg2', ')', ';', 'MIB', '.', 'addImm', '(', 'ARM_AM', ':', ':', 'getSORegOpc', '(', 'ShiftTy', ',', '0', ')', ')', ';', '}', 'AddOptionalDefs', '(', 'MIB', ')', ';', 'updateValueMap', '(', 'I', ',', 'ResultReg', ')', ';', 'return', 'true', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1230,"['globus_gram_job_manager_read_callback_contacts', '(', 'globus_gram_jobmanager_request_t', '*', 'request', ',', 'FILE', '*', 'fp', ')', '{', 'globus_gram_job_manager_contact_t', '*', 'contact', ';', 'globus_list_t', '*', '*', 'tmp', ';', 'int', 'count', ';', 'int', 'rc', ';', 'long', 'off1', ',', 'off2', ';', 'int', 'i', ';', 'request', '->', 'client_contacts', '=', 'NULL', ';', 'tmp', '=', '&', 'request', '->', 'client_contacts', ';', 'rc', '=', 'fscanf', '(', 'fp', ',', '""""', ',', '&', 'count', ')', ';', 'if', '(', 'rc', '!=', '1', ')', '{', 'rc', '=', 'GLOBUS_GRAM_PROTOCOL_ERROR_READING_STATE_FILE', ';', 'goto', 'failed_read_count', ';', '}', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'count', ';', 'i', '++', ')', '{', 'contact', '=', 'malloc', '(', 'sizeof', '(', 'globus_gram_job_manager_contact_t', ')', ')', ';', 'if', '(', 'contact', '==', 'NULL', ')', '{', 'rc', '=', 'GLOBUS_GRAM_PROTOCOL_ERROR_MALLOC_FAILED', ';', 'goto', 'failed_malloc_contact', ';', '}', 'off1', '=', 'ftell', '(', 'fp', ')', ';', 'if', '(', 'off1', '<', '0', ')', '{', 'rc', '=', 'GLOBUS_GRAM_PROTOCOL_ERROR_READING_STATE_FILE', ';', 'goto', 'failed_ftell', ';', '}', 'rc', '=', 'fscanf', '(', 'fp', ',', '""""', ',', '&', 'contact', '->', 'job_state_mask', ')', ';', 'if', '(', 'rc', '<', '1', ')', '{', 'rc', '=', 'GLOBUS_GRAM_PROTOCOL_ERROR_READING_STATE_FILE', ';', 'goto', 'failed_read_mask', ';', '}', 'off2', '=', 'ftell', '(', 'fp', ')', ';', 'if', '(', 'rc', '<', '0', ')', '{', 'rc', '=', 'GLOBUS_GRAM_PROTOCOL_ERROR_READING_STATE_FILE', ';', 'goto', 'failed_ftell2', ';', '}', 'rc', '=', 'fseek', '(', 'fp', ',', 'off1', ',', 'SEEK_SET', ')', ';', 'if', '(', 'rc', '<', '0', ')', '{', 'rc', '=', 'GLOBUS_GRAM_PROTOCOL_ERROR_READING_STATE_FILE', ';', 'goto', 'failed_fseek', ';', '}', 'contact', '->', 'contact', '=', 'malloc', '(', 'off2', '-', 'off1', '+', '1', ')', ';', 'if', '(', 'contact', '->', 'contact', '==', 'NULL', ')', '{', 'rc', '=', 'GLOBUS_GRAM_PROTOCOL_ERROR_MALLOC_FAILED', ';', 'goto', 'failed_malloc_contact_string_failed', ';', '}', 'rc', '=', 'fscanf', '(', 'fp', ',', '""""', ',', 'contact', '->', 'contact', ')', ';', 'if', '(', 'rc', '<', '1', ')', '{', 'rc', '=', 'GLOBUS_GRAM_PROTOCOL_ERROR_READING_STATE_FILE', ';', 'goto', 'failed_scan_contact', ';', '}', 'contact', '->', 'failed_count', '=', '0', ';', 'rc', '=', 'globus_list_insert', '(', 'tmp', ',', 'contact', ')', ';', 'if', '(', 'rc', '!=', 'GLOBUS_SUCCESS', ')', '{', 'rc', '=', 'GLOBUS_GRAM_PROTOCOL_ERROR_MALLOC_FAILED', ';', 'goto', 'failed_list_insert', ';', '}', 'tmp', '=', 'globus_list_rest_ref', '(', '*', 'tmp', ')', ';', '}', 'rc', '=', 'GLOBUS_SUCCESS', ';', 'if', '(', 'rc', '!=', 'GLOBUS_SUCCESS', ')', '{', 'failed_list_insert', ':', 'failed_scan_contact', ':', 'free', '(', 'contact', '->', 'contact', ')', ';', 'failed_malloc_contact_string_failed', ':', 'failed_fseek', ':', 'failed_ftell2', ':', 'failed_read_mask', ':', 'failed_ftell', ':', 'free', '(', 'contact', ')', ';', 'failed_malloc_contact', ':', 'globus_gram_job_manager_contact_list_free', '(', 'request', ')', ';', 'failed_read_count', ':', ';', '}', 'return', 'rc', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1231,"['print_hex', '(', 'uint32_t', 'msg_len', ',', 'uint8_t', '*', 'msg_pt', ')', '{', 'uint8_t', '*', 'temp', '=', '(', 'uint8_t', '*', ')', 'malloc', '(', '3', '*', 'msg_len', '+', '1', ')', ';', 'uint8_t', '*', 'pt', '=', 'temp', ';', 'int', 'i', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'msg_len', ';', 'i', '++', ')', '{', 'if', '(', 'i', '==', '0', ')', '{', 'sprintf', '(', '(', 'char', '*', ')', 'pt', ',', '""""', ',', 'msg_pt', '[', 'i', ']', ')', ';', 'pt', '+=', '2', ';', '}', 'else', 'if', '(', 'i', '%', '4', '==', '0', ')', '{', 'sprintf', '(', '(', 'char', '*', ')', 'pt', ',', '""""', ',', 'msg_pt', '[', 'i', ']', ')', ';', 'pt', '+=', '3', ';', '}', 'else', '{', 'sprintf', '(', '(', 'char', '*', ')', 'pt', ',', '""""', ',', 'msg_pt', '[', 'i', ']', ')', ';', 'pt', '+=', '3', ';', '}', '}', 'temp', '[', '3', '*', 'msg_len', ']', '=', ""''"", ';', 'PRINT_IMPORTANT', '(', '""""', ',', 'temp', ')', ';', 'free', '(', 'temp', ')', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1232,"['stripe_rmdir', '(', 'call_frame_t', '*', 'frame', ',', 'xlator_t', '*', 'this', ',', 'loc_t', '*', 'loc', ',', 'int', 'flags', ',', 'dict_t', '*', 'xdata', ')', '{', 'xlator_list_t', '*', 'trav', '=', 'NULL', ';', 'stripe_local_t', '*', 'local', '=', 'NULL', ';', 'stripe_private_t', '*', 'priv', '=', 'NULL', ';', 'int32_t', 'op_errno', '=', 'EINVAL', ';', 'VALIDATE_OR_GOTO', '(', 'frame', ',', 'err', ')', ';', 'VALIDATE_OR_GOTO', '(', 'this', ',', 'err', ')', ';', 'VALIDATE_OR_GOTO', '(', 'loc', ',', 'err', ')', ';', 'VALIDATE_OR_GOTO', '(', 'loc', '->', 'path', ',', 'err', ')', ';', 'VALIDATE_OR_GOTO', '(', 'loc', '->', 'inode', ',', 'err', ')', ';', 'priv', '=', 'this', '->', 'private', ';', 'trav', '=', 'this', '->', 'children', ';', 'if', '(', 'priv', '->', 'nodes_down', ')', '{', 'op_errno', '=', 'ENOTCONN', ';', 'goto', 'err', ';', '}', 'local', '=', 'mem_get0', '(', 'this', '->', 'local_pool', ')', ';', 'if', '(', '!local', ')', '{', 'op_errno', '=', 'ENOMEM', ';', 'goto', 'err', ';', '}', 'local', '->', 'op_ret', '=', '-', '1', ';', 'frame', '->', 'local', '=', 'local', ';', 'loc_copy', '(', '&', 'local', '->', 'loc', ',', 'loc', ')', ';', 'local', '->', 'flags', '=', 'flags', ';', 'local', '->', 'call_count', '=', 'priv', '->', 'child_count', ';', 'while', '(', 'trav', ')', '{', 'STACK_WIND', '(', 'frame', ',', 'stripe_rmdir_cbk', ',', 'trav', '->', 'xlator', ',', 'trav', '->', 'xlator', '->', 'fops', '->', 'rmdir', ',', 'loc', ',', 'flags', ',', 'NULL', ')', ';', 'trav', '=', 'trav', '->', 'next', ';', '}', 'return', '0', ';', 'err', ':', 'STRIPE_STACK_UNWIND', '(', 'rmdir', ',', 'frame', ',', '-', '1', ',', 'op_errno', ',', 'NULL', ',', 'NULL', ',', 'NULL', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1233,"['bad_number_method', '(', 'ScmObj', '*', 'args', ',', 'int', 'nargs', ',', 'ScmGeneric', '*', 'gf', ')', '{', 'const', 'char', '*', 'fn', '=', '(', 'const', 'char', '*', ')', 'SCM_GENERIC_DATA', '(', 'gf', ')', ';', 'if', '(', 'nargs', '==', '1', ')', '{', 'Scm_Error', '(', '""""', ',', 'fn', ',', 'args', '[', '0', ']', ')', ';', '}', 'else', 'if', '(', 'nargs', '==', '2', ')', '{', 'Scm_Error', '(', '""""', ',', 'fn', ',', 'args', '[', '0', ']', ',', 'args', '[', '1', ']', ')', ';', '}', 'else', '{', 'Scm_Error', '(', '""""', ',', 'fn', ',', 'Scm_ArrayToList', '(', 'args', ',', 'nargs', ')', ')', ';', '}', 'return', 'SCM_UNDEFINED', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1234,"['pkix_pl_KeyComparator_Default', '(', 'PKIX_UInt32', '*', 'firstKey', ',', 'PKIX_UInt32', '*', 'secondKey', ',', 'PKIX_Boolean', '*', 'pResult', ',', 'void', '*', 'plContext', ')', '{', 'PKIX_UInt32', 'firstInt', ',', 'secondInt', ';', 'PKIX_ENTER', '(', 'HASHTABLE', ',', '""""', ')', ';', 'PKIX_NULLCHECK_THREE', '(', 'firstKey', ',', 'secondKey', ',', 'pResult', ')', ';', 'firstInt', '=', '*', 'firstKey', ';', 'secondInt', '=', '*', 'secondKey', ';', '*', 'pResult', '=', '(', 'firstInt', '==', 'secondInt', ')', '?', 'PKIX_TRUE', ':', 'PKIX_FALSE', ';', 'PKIX_RETURN', '(', 'HASHTABLE', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1235,"['hash_pop', '(', 'bool', 'blocking', ')', '{', 'struct', 'work', '*', 'work', '=', 'NULL', ',', '*', 'tmp', ';', 'int', 'hc', ';', 'mutex_lock', '(', 'stgd_lock', ')', ';', 'if', '(', '!HASH_COUNT', '(', 'staged_work', ')', ')', '{', '/', '*', 'Increase', 'the', 'queue', 'if', 'we', 'reach', 'zero', 'and', 'we', 'know', 'we', 'can', 'if', '(', 'work_filled', '&&', 'max_queue', '<', 'opt_queue', ')', '{', 'max_queue', '++', ';', 'work_filled', '=', 'false', ';', '}', 'work_emptied', '=', 'true', ';', 'if', '(', '!blocking', ')', 'goto', 'out_unlock', ';', 'do', '{', 'struct', 'timespec', 'then', ';', 'struct', 'timeval', 'now', ';', 'int', 'rc', ';', 'cgtime', '(', '&', 'now', ')', ';', 'then', '.', 'tv_sec', '=', 'now', '.', 'tv_sec', '+', '10', ';', 'then', '.', 'tv_nsec', '=', 'now', '.', 'tv_usec', '*', '1000', ';', 'pthread_cond_signal', '(', '&', 'gws_cond', ')', ';', 'rc', '=', 'pthread_cond_timedwait', '(', '&', 'getq', '->', 'cond', ',', 'stgd_lock', ',', '&', 'then', ')', ';', '/', '*', 'Check', 'again', 'for', '!no_work', 'as', 'multiple', 'threads', 'may', '*', 'waiting', 'on', 'this', 'condition', 'and', 'another', 'may', 'set', 'if', '(', 'rc', '&&', '!no_work', ')', '{', 'no_work', '=', 'true', ';', 'applog', '(', 'LOG_WARNING', ',', '""""', ')', ';', '}', '}', 'while', '(', '!HASH_COUNT', '(', 'staged_work', ')', ')', ';', '}', 'if', '(', 'no_work', ')', '{', 'applog', '(', 'LOG_WARNING', ',', '""""', ')', ';', 'no_work', '=', 'false', ';', '}', 'hc', '=', 'HASH_COUNT', '(', 'staged_work', ')', ';', 'if', '(', 'hc', '>', 'staged_rollable', ')', '{', 'HASH_ITER', '(', 'hh', ',', 'staged_work', ',', 'work', ',', 'tmp', ')', '{', 'if', '(', '!work_rollable', '(', 'work', ')', ')', 'break', ';', '}', '}', 'work', '=', 'staged_work', ';', 'HASH_DEL', '(', 'staged_work', ',', 'work', ')', ';', 'if', '(', 'work_rollable', '(', 'work', ')', ')', 'staged_rollable', '--', ';', 'pthread_cond_signal', '(', '&', 'gws_cond', ')', ';', 'pthread_cond_signal', '(', '&', 'getq', '->', 'cond', ')', ';', 'last_getwork', '=', 'time', '(', 'NULL', ')', ';', 'out_unlock', ':', 'mutex_unlock', '(', 'stgd_lock', ')', ';', 'return', 'work', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
1236,"['camel_folder_count_by_expression', '(', 'CamelFolder', '*', 'folder', ',', 'const', 'gchar', '*', 'expression', ',', 'GCancellable', '*', 'cancellable', ',', 'GError', '*', '*', 'error', ')', '{', 'CamelFolderClass', '*', 'class', ';', 'g_return_val_if_fail', '(', 'CAMEL_IS_FOLDER', '(', 'folder', ')', ',', '0', ')', ';', 'class', '=', 'CAMEL_FOLDER_GET_CLASS', '(', 'folder', ')', ';', 'g_return_val_if_fail', '(', 'class', '->', 'count_by_expression', '!=', 'NULL', ',', '0', ')', ';', 'return', 'class', '->', 'count_by_expression', '(', 'folder', ',', 'expression', ',', 'cancellable', ',', 'error', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
1237,"['note_get_default_ref', '(', 'const', 'char', '*', '*', 'out', ',', 'git_repository', '*', 'repo', ')', '{', 'int', 'ret', ';', 'git_config', '*', 'cfg', ';', '*', 'out', '=', 'NULL', ';', 'if', '(', 'git_repository_config__weakptr', '(', '&', 'cfg', ',', 'repo', ')', '<', '0', ')', 'return', '-', '1', ';', 'ret', '=', 'git_config_get_string', '(', 'out', ',', 'cfg', ',', '""""', ')', ';', 'if', '(', 'ret', '==', 'GIT_ENOTFOUND', ')', '{', '*', 'out', '=', 'GIT_NOTES_DEFAULT_REF', ';', 'return', '0', ';', '}', 'return', 'ret', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1238,"['patricia_foreach_remove', '(', 'patricia_t', '*', 'pt', ',', 'patricia_cbr_t', 'cb', ',', 'void', '*', 'u', ')', '{', 'struct', 'remove_ctx', 'ctx', ';', 'GSList', '*', 'sl', ';', 'patricia_check', '(', 'pt', ')', ';', 'g_assert', '(', 'cb', ')', ';', 'ctx', '.', 'sl', '=', 'NULL', ';', 'ctx', '.', 'last_was_removed', '=', 'FALSE', ';', 'ctx', '.', 'cb', '=', 'cb', ';', 'ctx', '.', 'u', '=', 'u', ';', 'ctx', '.', 'removed', '=', '0', ';', 'patricia_traverse', '(', 'pt', ',', 'patricia_traverse_foreach_node', ',', '&', 'ctx', ',', 'patricia_traverse_foreach_item', ',', '&', 'ctx', ')', ';', 'sl', '=', 'ctx', '.', 'sl', ';', 'while', '(', 'sl', ')', '{', 'struct', 'patricia_node', '*', 'pn', '=', 'sl', '->', 'data', ';', 'remove_node', '(', 'pt', ',', 'pn', ')', ';', 'sl', '=', 'g_slist_next', '(', 'sl', ')', ';', '}', 'gm_slist_free_null', '(', '&', 'ctx', '.', 'sl', ')', ';', 'return', 'ctx', '.', 'removed', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1239,"['BitBlt_PATINVERT_32bpp', '(', 'HGDI_DC', 'hdcDest', ',', 'int', 'nXDest', ',', 'int', 'nYDest', ',', 'int', 'nWidth', ',', 'int', 'nHeight', ')', '{', 'int', 'x', ',', 'y', ';', 'uint8', '*', 'dstp', ';', 'uint8', '*', 'patp', ';', 'uint32', 'color32', ';', 'uint32', '*', 'dstp32', ';', 'if', '(', 'hdcDest', '->', 'brush', '->', 'style', '==', 'GDI_BS_SOLID', ')', '{', 'color32', '=', 'gdi_get_color_32bpp', '(', 'hdcDest', ',', 'hdcDest', '->', 'brush', '->', 'color', ')', ';', 'for', '(', 'y', '=', '0', ';', 'y', '<', 'nHeight', ';', 'y', '++', ')', '{', 'dstp32', '=', '(', 'uint32', '*', ')', 'gdi_get_bitmap_pointer', '(', 'hdcDest', ',', 'nXDest', ',', 'nYDest', '+', 'y', ')', ';', 'if', '(', 'dstp32', '!=', '0', ')', '{', 'for', '(', 'x', '=', '0', ';', 'x', '<', 'nWidth', ';', 'x', '++', ')', '{', '*', 'dstp32', '^=', 'color32', ';', 'dstp32', '++', ';', '}', '}', '}', '}', '{', 'for', '(', 'y', '=', '0', ';', 'y', '<', 'nHeight', ';', 'y', '++', ')', '{', 'dstp', '=', 'gdi_get_bitmap_pointer', '(', 'hdcDest', ',', 'nXDest', ',', 'nYDest', '+', 'y', ')', ';', 'if', '(', 'dstp', '!=', '0', ')', '{', 'for', '(', 'x', '=', '0', ';', 'x', '<', 'nWidth', ';', 'x', '++', ')', '{', 'patp', '=', 'gdi_get_brush_pointer', '(', 'hdcDest', ',', 'x', ',', 'y', ')', ';', '*', 'dstp', '=', '*', 'patp', '^', '*', 'dstp', ';', 'patp', '++', ';', 'dstp', '++', ';', '*', 'dstp', '=', '*', 'patp', '^', '*', 'dstp', ';', 'patp', '++', ';', 'dstp', '++', ';', '*', 'dstp', '=', '*', 'patp', '^', '*', 'dstp', ';', 'dstp', '+=', '2', ';', '}', '}', '}', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1240,"['generate_histogram_rgb', '(', 'Histogram', 'histogram', ',', 'gGraphImagePtr', 'img', ')', '{', 'int', 'x', ';', 'int', 'y', ';', 'int', 'red', ';', 'int', 'green', ';', 'int', 'blue', ';', 'unsigned', 'char', '*', 'p_in', ';', 'ColorFreq', '*', 'col', ';', 'zero_histogram_rgb', '(', 'histogram', ')', ';', 'for', '(', 'y', '=', '0', ';', 'y', '<', 'img', '->', 'height', ';', 'y', '++', ')', '{', 'p_in', '=', 'img', '->', 'pixels', '+', '(', 'y', '*', 'img', '->', 'scanline_width', ')', ';', 'for', '(', 'x', '=', '0', ';', 'x', '<', 'img', '->', 'width', ';', 'x', '++', ')', '{', 'if', '(', 'img', '->', 'pixel_format', '==', 'GG_PIXEL_RGB', ')', '{', 'red', '=', '*', 'p_in', '++', ';', 'green', '=', '*', 'p_in', '++', ';', 'blue', '=', '*', 'p_in', '++', ';', '}', 'else', 'if', '(', 'img', '->', 'pixel_format', '==', 'GG_PIXEL_RGBA', ')', '{', 'red', '=', '*', 'p_in', '++', ';', 'green', '=', '*', 'p_in', '++', ';', 'blue', '=', '*', 'p_in', '++', ';', '}', 'else', 'if', '(', 'img', '->', 'pixel_format', '==', 'GG_PIXEL_ARGB', ')', '{', 'blue', '=', '*', 'p_in', '++', ';', 'green', '=', '*', 'p_in', '++', ';', 'red', '=', '*', 'p_in', '++', ';', '}', 'else', 'if', '(', 'img', '->', 'pixel_format', '==', 'GG_PIXEL_BGR', ')', '{', 'blue', '=', '*', 'p_in', '++', ';', 'green', '=', '*', 'p_in', '++', ';', 'red', '=', '*', 'p_in', '++', ';', '}', 'else', 'if', '(', 'img', '->', 'pixel_format', '==', 'GG_PIXEL_BGRA', ')', '{', 'blue', '=', '*', 'p_in', '++', ';', 'green', '=', '*', 'p_in', '++', ';', 'red', '=', '*', 'p_in', '++', ';', '}', 'else', 'if', '(', 'img', '->', 'pixel_format', '==', 'GG_PIXEL_GRAYSCALE', ')', '{', 'red', '=', '*', 'p_in', '++', ';', 'green', '=', 'red', ';', 'blue', '=', 'red', ';', '}', 'else', 'if', '(', 'img', '->', 'pixel_format', '==', 'GG_PIXEL_PALETTE', ')', '{', 'int', 'index', '=', '*', 'p_in', '++', ';', 'red', '=', 'img', '->', 'palette_red', '[', 'index', ']', ';', 'green', '=', 'img', '->', 'palette_green', '[', 'index', ']', ';', 'blue', '=', 'img', '->', 'palette_blue', '[', 'index', ']', ';', '}', 'col', '=', '&', 'histogram', '[', '(', 'red', '>>', 'R_SHIFT', ')', '*', '+', '(', 'green', '>>', 'G_SHIFT', ')', '*', 'MG', '+', '(', 'blue', '>>', 'B_SHIFT', ')', ']', ';', '(', '*', 'col', ')', '++', ';', '}', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1241,"['ping_members', '(', 'struct', 'dlm_ls', '*', 'ls', ')', '{', 'struct', 'dlm_member', '*', 'memb', ';', 'int', 'error', '=', '0', ';', 'list_for_each_entry', '(', 'memb', ',', '&', 'ls', '->', 'ls_nodes', ',', 'list', ')', '{', 'error', '=', 'dlm_recovery_stopped', '(', 'ls', ')', ';', 'if', '(', 'error', ')', 'break', ';', 'error', '=', 'dlm_rcom_status', '(', 'ls', ',', 'memb', '->', 'nodeid', ',', '0', ')', ';', 'if', '(', 'error', ')', 'break', ';', '}', 'if', '(', 'error', ')', 'log_rinfo', '(', 'ls', ',', '""""', ',', 'error', ',', 'ls', '->', 'ls_recover_nodeid', ')', ';', 'return', 'error', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1242,"['objc_add_method_declaration', '(', 'bool', 'is_class_method', ',', 'tree', 'decl', ',', 'tree', 'attributes', ')', '{', 'if', '(', '!objc_interface_context', ')', '{', '/', '*', 'PS', ':', 'At', 'the', 'moment', ',', 'due', 'to', 'how', 'the', 'parser', 'works', ',', 'it', 'should', 'impossible', 'to', 'get', 'here', '.', 'But', ""it's"", 'good', 'to', 'have', 'the', 'check', 'case', 'the', 'parser', 'changes', '.', 'fatal_error', '(', '""""', ')', ';', '}', 'if', '(', 'flag_objc1_only', '&&', 'attributes', ')', 'error_at', '(', 'input_location', ',', '""""', ')', ';', 'objc_decl_method_attributes', '(', '&', 'decl', ',', 'attributes', ',', '0', ')', ';', 'objc_add_method', '(', 'objc_interface_context', ',', 'decl', ',', 'is_class_method', ',', 'objc_method_optional_flag', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1243,"['fileio_readall', '(', 'fileio', '*', 'self', ')', '{', '#ifdef', 'struct', 'stat', 'st', ';', 'Py_off_t', 'pos', ',', 'end', ';', 'PyObject', '*', 'result', ';', 'Py_ssize_t', 'total', '=', '0', ';', 'int', 'n', ';', 'size_t', 'newsize', ';', 'if', '(', 'self', '->', 'fd', '<', '0', ')', 'return', 'err_closed', '(', ')', ';', 'if', '(', '!_PyVerify_fd', '(', 'self', '->', 'fd', ')', ')', 'return', 'PyErr_SetFromErrno', '(', 'PyExc_IOError', ')', ';', 'result', '=', 'PyBytes_FromStringAndSize', '(', 'NULL', ',', 'SMALLCHUNK', ')', ';', 'if', '(', 'result', '==', 'NULL', ')', 'return', 'NULL', ';', '#ifdef', '#if', 'defined', '(', 'MS_WIN64', ')', '||', 'defined', '(', 'MS_WINDOWS', ')', 'pos', '=', '_lseeki64', '(', 'self', '->', 'fd', ',', '0L', ',', 'SEEK_CUR', ')', ';', 'pos', '=', 'lseek', '(', 'self', '->', 'fd', ',', '0L', ',', 'SEEK_CUR', ')', ';', 'if', '(', 'fstat', '(', 'self', '->', 'fd', ',', '&', 'st', ')', '==', '0', ')', 'end', '=', 'st', '.', 'st_size', ';', 'end', '=', '(', 'Py_off_t', ')', '-', '1', ';', 'while', '(', '1', ')', '{', '#ifdef', 'newsize', '=', 'new_buffersize', '(', 'self', ',', 'total', ',', 'pos', ',', 'end', ')', ';', 'newsize', '=', 'new_buffersize', '(', 'self', ',', 'total', ')', ';', 'if', '(', 'newsize', '>', 'PY_SSIZE_T_MAX', '||', 'newsize', '<=', '0', ')', '{', 'PyErr_SetString', '(', 'PyExc_OverflowError', ',', '""""', ')', ';', 'Py_DECREF', '(', 'result', ')', ';', 'return', 'NULL', ';', '}', 'if', '(', 'PyBytes_GET_SIZE', '(', 'result', ')', '<', '(', 'Py_ssize_t', ')', 'newsize', ')', '{', 'if', '(', '_PyBytes_Resize', '(', '&', 'result', ',', 'newsize', ')', '<', '0', ')', '{', 'if', '(', 'total', '==', '0', ')', '{', 'Py_DECREF', '(', 'result', ')', ';', 'return', 'NULL', ';', '}', 'PyErr_Clear', '(', ')', ';', 'break', ';', '}', '}', 'errno', '=', '0', ';', 'n', '=', 'read', '(', 'self', '->', 'fd', ',', 'PyBytes_AS_STRING', '(', 'result', ')', '+', 'total', ',', 'newsize', '-', 'total', ')', ';', 'if', '(', 'n', '==', '0', ')', 'break', ';', 'if', '(', 'n', '<', '0', ')', '{', 'if', '(', 'total', '>', '0', ')', 'break', ';', 'if', '(', 'errno', '==', 'EAGAIN', ')', '{', 'Py_DECREF', '(', 'result', ')', ';', 'Py_RETURN_NONE', ';', '}', 'Py_DECREF', '(', 'result', ')', ';', 'PyErr_SetFromErrno', '(', 'PyExc_IOError', ')', ';', 'return', 'NULL', ';', '}', 'total', '+=', 'n', ';', '#ifdef', 'pos', '+=', 'n', ';', '}', 'if', '(', 'PyBytes_GET_SIZE', '(', 'result', ')', '>', 'total', ')', '{', 'if', '(', '_PyBytes_Resize', '(', '&', 'result', ',', 'total', ')', '<', '0', ')', '{', 'Py_DECREF', '(', 'result', ')', ';', 'return', 'NULL', ';', '}', '}', 'return', 'result', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1244,"['NewSet', '(', 'void', ')', 'NewSet', '(', ')', '{', 'setnum', '++', ';', '{', 'DumpSetWd', '(', ')', ';', 'NewSetWd', '(', ')', ';', 'setnum', '=', '0', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1245,"['_update_tags_string', '(', 'FrogrPicture', '*', 'self', ')', '{', 'FrogrPicturePrivate', '*', 'priv', '=', 'FROGR_PICTURE_GET_PRIVATE', '(', 'self', ')', ';', 'g_free', '(', 'priv', '->', 'tags_string', ')', ';', 'priv', '->', 'tags_string', '=', 'NULL', ';', 'if', '(', 'priv', '->', 'tags_list', '!=', 'NULL', ')', '{', 'GSList', '*', 'item', '=', 'NULL', ';', 'gchar', '*', 'new_str', '=', 'NULL', ';', 'gchar', '*', 'tmp_str', '=', 'NULL', ';', 'new_str', '=', 'g_strdup', '(', '(', 'gchar', '*', ')', 'priv', '->', 'tags_list', '->', 'data', ')', ';', 'for', '(', 'item', '=', 'g_slist_next', '(', 'priv', '->', 'tags_list', ')', ';', 'item', '!=', 'NULL', ';', 'item', '=', 'g_slist_next', '(', 'item', ')', ')', '{', 'tmp_str', '=', 'g_strconcat', '(', 'new_str', ',', '""""', ',', '(', 'gchar', '*', ')', 'item', '->', 'data', ',', 'NULL', ')', ';', 'g_free', '(', 'new_str', ')', ';', 'new_str', '=', 'tmp_str', ';', '}', 'priv', '->', 'tags_string', '=', 'new_str', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1246,"['ExtractChallenge', '(', 'tChallenge', '*', 'c', ',', 'char', '*', 'String', ')', '{', 'char', '*', 's', ',', '*', 'e', ',', '*', 'Token', ',', '*', 'Value', ';', 'int', 'len', ';', 'memset', '(', 'c', ',', '0', ',', 'sizeof', '(', 'tChallenge', ')', ')', ';', 'Token', '=', '(', 'char', '*', ')', 'pal_malloc', '(', 'pal_strlen', '(', 'String', ')', '+', '1', ')', ';', 'Value', '=', '(', 'char', '*', ')', 'pal_malloc', '(', 'pal_strlen', '(', 'String', ')', '+', '1', ')', ';', '*', 'Token', '=', '*', 'Value', '=', '0', ';', 'for', '(', 's', '=', 'e', '=', 'String', ';', ';', 'e', '++', ')', '{', 'if', '(', '*', 'e', '==', ""''"", '||', '*', 'e', '==', ""''"", '||', '*', 'e', '==', ""''"", '||', '*', 'e', '==', '0', ')', '{', 'if', '(', 's', '!=', 'e', ')', '{', 'if', '(', '*', 'Token', '&&', '(', '*', 'Value', '==', '0', ')', ')', '{', 'len', '=', '(', 'int', ')', '(', '(', 'char', '*', ')', 'e', '-', '(', 'char', '*', ')', 's', ')', ';', 'if', '(', '(', '*', 's', '==', ""''"", ')', '&&', 'len', ')', '{', 's', '++', ';', 'len', '--', ';', '}', 'if', '(', '(', 's', '[', 'len', '-', '1', ']', '==', ""''"", ')', '&&', 'len', ')', 'len', '--', ';', 'if', '(', 'len', ')', 'memcpy', '(', 'Value', ',', 's', ',', 'len', ')', ';', 'Value', '[', 'len', ']', '=', '0', ';', '}', 'if', '(', '*', 'Token', '&&', '*', 'Value', ')', '{', 'InsertInChallegeStruct', '(', 'c', ',', 'Token', ',', 'Value', ')', ';', '*', 'Value', '=', '*', 'Token', '=', '0', ';', '}', '}', 'if', '(', '*', 'e', '==', '0', ')', 'break', ';', 's', '=', '++', 'e', ';', '}', 'if', '(', '(', '*', 'e', '==', ""''"", '||', '*', 'e', '==', ""''"", '||', '*', 'e', '==', ""''"", '||', '*', 'e', '==', ""''"", '||', '*', 'e', '==', '0', ')', '&&', '(', '*', 'Token', '==', '0', ')', '&&', '(', 'e', '!=', 's', ')', ')', '{', 'len', '=', '(', 'int', ')', '(', '(', 'char', '*', ')', 'e', '-', '(', 'char', '*', ')', 's', ')', ';', 'memcpy', '(', 'Token', ',', 's', ',', 'len', ')', ';', 'Token', '[', 'len', ']', '=', '0', ';', 'if', '(', '*', 'e', '==', '0', ')', 'break', ';', 's', '=', '++', 'e', ';', '}', '}', 'pal_free', '(', 'Token', ')', ';', 'pal_free', '(', 'Value', ')', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  True,CWE-476  False,CWE-other  False
1247,"['SzReadArchiveProperties', '(', 'CSzData', '*', 'sd', ')', '{', 'for', '(', ';', ';', ')', '{', 'UInt64', 'type', ';', 'RINOK', '(', 'SzReadID', '(', 'sd', ',', '&', 'type', ')', ')', ';', 'if', '(', 'type', '==', 'k7zIdEnd', ')', 'break', ';', 'SzSkeepData', '(', 'sd', ')', ';', '}', 'return', 'SZ_OK', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1248,"['remove_directory', '(', 'string', 'directory', ')', '{', 'struct', 'stat', 'config_stat', ';', 'struct', 'dirent', '*', 'entry', ';', 'if', '(', 'Utils', ':', ':', 'Io', ':', ':', 'check_directory', '(', 'directory', ')', ')', '{', 'if', '(', 'directory', '.', 'substr', '(', 'directory', '.', 'length', '(', ')', '-', '1', ',', '1', ')', '!=', '""""', ')', 'directory', '+=', '""""', ';', 'DIR', '*', 'dir', '=', 'opendir', '(', 'directory', '.', 'c_str', '(', ')', ')', ';', 'if', '(', '!dir', ')', 'return', '0', ';', '{', 'while', '(', '(', 'entry', '=', 'readdir', '(', 'dir', ')', ')', ')', '{', 'string', 'name', '=', 'string', '(', 'entry', '->', 'd_name', ')', ';', 'if', '(', 'name', '!=', '""""', '&&', 'name', '!=', '""""', ')', '{', 'if', '(', 'Utils', ':', ':', 'Io', ':', ':', 'check_directory', '(', 'directory', '+', 'name', ')', ')', '{', 'if', '(', '!Utils', ':', ':', 'Io', ':', ':', 'remove_directory', '(', 'directory', '+', 'name', ')', ')', '{', 'closedir', '(', 'dir', ')', ';', 'return', '0', ';', '}', '}', 'else', 'if', '(', '!stat', '(', '(', 'directory', '+', 'name', ')', '.', 'c_str', '(', ')', ',', '&', 'config_stat', ')', ')', '{', 'if', '(', '!Utils', ':', ':', 'Io', ':', ':', 'remove_node', '(', 'directory', '+', 'name', ')', ')', '{', 'closedir', '(', 'dir', ')', ';', 'return', '0', ';', '}', '}', '}', '}', '}', 'closedir', '(', 'dir', ')', ';', 'if', '(', '!Utils', ':', ':', 'Io', ':', ':', 'remove_node', '(', 'directory', ')', ')', 'return', '0', ';', 'return', '1', ';', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1249,"['pmc551_read', '(', 'struct', 'mtd_info', '*', 'mtd', ',', 'loff_t', 'from', ',', 'size_t', 'len', ',', 'size_t', '*', 'retlen', ',', 'u_char', '*', 'buf', ')', '{', 'struct', 'mypriv', '*', 'priv', '=', 'mtd', '->', 'priv', ';', 'unsigned', 'long', 'end', ';', 'u_char', '*', 'ptr', ';', 'u_char', '*', 'copyto', '=', 'buf', ';', '#ifdef', 'printk', '(', 'KERN_DEBUG', '""""', ',', '(', 'long', ')', 'from', ',', '(', 'long', ')', 'len', ',', '(', 'long', ')', 'priv', '->', 'asize', ')', ';', 'end', '=', 'from', '+', 'len', '-', '1', ';', 'soff_hi', '=', 'from', '&', '~', '(', 'priv', '->', 'asize', '-', '1', ')', ';', 'eoff_hi', '=', 'end', '&', '~', '(', 'priv', '->', 'asize', '-', '1', ')', ';', 'soff_lo', '=', 'from', '&', '(', 'priv', '->', 'asize', '-', '1', ')', ';', 'eoff_lo', '=', 'end', '&', '(', 'priv', '->', 'asize', '-', '1', ')', ';', 'pmc551_point', '(', 'mtd', ',', 'from', ',', 'len', ',', 'retlen', ',', '(', 'void', '*', '*', ')', '&', 'ptr', ',', 'NULL', ')', ';', 'if', '(', 'soff_hi', '==', 'eoff_hi', ')', '{', '/', '*', 'The', 'whole', 'thing', 'fits', 'within', 'one', 'access', ',', 'so', 'just', 'one', 'memcpy', '(', 'copyto', ',', 'ptr', ',', 'len', ')', ';', 'copyto', '+=', 'len', ';', '}', 'else', '{', '/', '*', 'We', 'have', 'to', 'do', 'multiple', 'writes', 'to', 'get', 'all', 'the', 'while', '(', 'soff_hi', '!=', 'eoff_hi', ')', '{', '#ifdef', 'printk', '(', 'KERN_DEBUG', '""""', ',', '(', 'long', ')', 'soff_hi', ',', '(', 'long', ')', 'eoff_hi', ')', ';', 'memcpy', '(', 'copyto', ',', 'ptr', ',', 'priv', '->', 'asize', ')', ';', 'copyto', '+=', 'priv', '->', 'asize', ';', 'if', '(', 'soff_hi', '+', 'priv', '->', 'asize', '>=', 'mtd', '->', 'size', ')', '{', 'goto', 'out', ';', '}', 'soff_hi', '+=', 'priv', '->', 'asize', ';', 'pmc551_point', '(', 'mtd', ',', 'soff_hi', ',', 'priv', '->', 'asize', ',', 'retlen', ',', '(', 'void', '*', '*', ')', '&', 'ptr', ',', 'NULL', ')', ';', '}', 'memcpy', '(', 'copyto', ',', 'ptr', ',', 'eoff_lo', ')', ';', 'copyto', '+=', 'eoff_lo', ';', '}', 'out', ':', '#ifdef', 'printk', '(', 'KERN_DEBUG', '""""', ')', ';', '*', 'retlen', '=', 'copyto', '-', 'buf', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1250,"['ap_php_conv_10', '(', 'register', 'wide_int', 'num', ',', 'register', 'bool_int', 'is_unsigned', ',', 'register', 'bool_int', '*', 'is_negative', ',', 'char', '*', 'buf_end', ',', 'register', 'int', '*', 'len', ')', '{', 'register', 'char', '*', 'p', '=', 'buf_end', ';', 'register', 'u_wide_int', 'magnitude', ';', 'if', '(', 'is_unsigned', ')', '{', 'magnitude', '=', '(', 'u_wide_int', ')', 'num', ';', '*', 'is_negative', '=', 'FALSE', ';', '}', 'else', '{', '*', 'is_negative', '=', '(', 'num', '<', '0', ')', ';', '/', '*', '*', 'On', 'a', ""2's"", 'complement', 'machine', ',', 'negating', 'the', 'most', 'negative', '*', 'results', 'in', 'a', 'number', 'that', 'cannot', 'be', 'represented', 'as', 'a', 'signed', 'integer', '.', '*', 'Here', 'is', 'what', 'we', 'do', 'to', 'obtain', 'the', ""number's"", 'magnitude', ':', '*', 'a', '.', 'add', '1', 'to', 'the', '*', 'b', '.', 'negate', 'it', '(', 'becomes', 'positive', ')', '*', 'c', '.', 'convert', 'it', 'to', '*', 'd', '.', 'add', 'if', '(', '*', 'is_negative', ')', '{', 'wide_int', 't', '=', 'num', '+', '1', ';', 'magnitude', '=', '(', '(', 'u_wide_int', ')', '-', 't', ')', '+', '1', ';', '}', 'else', '{', 'magnitude', '=', '(', 'u_wide_int', ')', 'num', ';', '}', '}', '/', '*', '*', 'We', 'use', 'a', 'do', '-', 'while', 'loop', 'so', 'that', 'we', 'write', 'at', 'least', '1', 'do', '{', 'register', 'u_wide_int', 'new_magnitude', '=', 'magnitude', '/', '10', ';', '*', '--', 'p', '=', '(', 'char', ')', '(', 'magnitude', '-', 'new_magnitude', '*', '10', '+', ""''"", ')', ';', 'magnitude', '=', 'new_magnitude', ';', '}', 'while', '(', 'magnitude', ')', ';', '*', 'len', '=', 'buf_end', '-', 'p', ';', 'return', '(', 'p', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1251,"['programmer_echo', '(', 'int', 'port', ',', 'char', 'ch', ')', '{', 'unsigned', 'char', 'command', ';', 'command', '=', '2', ';', 'write', '(', 'port', ',', '&', 'command', ',', '1', ')', ';', 'write', '(', 'port', ',', '&', 'ch', ',', '1', ')', ';', 'read', '(', 'port', ',', '&', 'command', ',', '1', ')', ';', 'if', '(', 'command', '!=', 'ch', ')', '{', 'printf', '(', '""""', ',', 'command', ',', 'ch', ')', ';', 'return', '-', '1', ';', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1252,"['sgmlExtensionHtmlElementBegin', '(', 'SGML_PARSER', '*', 'parser', ',', 'void', '*', 'userContext', ',', 'const', 'char', '*', 'elementName', ')', '{', 'SGML_EXTENSION_HTML', '*', 'ext', '=', '(', 'SGML_EXTENSION_HTML', '*', ')', 'userContext', ';', 'DOM_ELEMENT', '*', 'element', '=', 'domElementNew', '(', 'elementName', ')', ';', 'int', 'x', '=', '0', ',', 'match', '=', '0', ';', 'if', '(', 'ext', '->', 'flags', '&', 'SGML_EXTENSION_HTML_FLAG_STRIPELEMENT', ')', 'return', ';', 'if', '(', 'ext', '->', 'flags', '&', 'SGML_EXTENSION_HTML_FLAG_ESCAPEUNKNOWNTAGS', '&&', 'ext', '->', 'knownTags', ')', '{', 'for', '(', 'match', '=', '0', ',', 'x', '=', '0', ';', '!match', '&&', 'ext', '->', 'knownTags', '[', 'x', ']', ';', 'x', '++', ')', '{', 'if', '(', '!strcasecmp', '(', 'ext', '->', 'knownTags', '[', 'x', ']', ',', 'elementName', ')', ')', 'match', '=', '1', ';', '}', 'if', '(', '!match', ')', 'element', '->', 'escapeTags', '=', '1', ';', '}', 'if', '(', 'ext', '->', 'currElement', ')', 'domNodeAppendChild', '(', 'ext', '->', 'currElement', ',', 'element', ')', ';', 'domNodeAppendChild', '(', 'ext', '->', 'document', ',', 'element', ')', ';', 'for', '(', 'match', '=', '0', ',', 'x', '=', '0', ';', '!match', '&&', 'autocloseElements', '[', 'x', ']', ';', 'x', '++', ')', '{', 'if', '(', '!strcasecmp', '(', 'autocloseElements', '[', 'x', ']', ',', 'elementName', ')', ')', '{', 'match', '=', '1', ';', 'break', ';', '}', '}', 'if', '(', 'match', ')', 'element', '->', 'autoclose', '=', '1', ';', 'ext', '->', 'currElement', '=', 'element', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1253,"['dessert_cli_get_cfg', '(', 'int', 'argc', ',', 'char', '*', '*', 'argv', ')', '{', 'FILE', '*', 'cfg', ';', 'const', 'char', '*', 'path_head', '=', '""""', ';', 'const', 'char', '*', 'path_tail', '=', '""""', ';', 'char', '*', 'str', '=', 'alloca', '(', 'strlen', '(', 'argv', '[', '0', ']', ')', '+', '1', ')', ';', 'strcpy', '(', 'str', ',', 'argv', '[', '0', ']', ')', ';', 'char', '*', 'ptr', '=', 'strtok', '(', 'str', ',', '""""', ')', ';', 'char', '*', 'daemon', '=', 'ptr', ';', 'while', '(', 'ptr', '!=', 'NULL', ')', '{', 'daemon', '=', 'ptr', ';', 'ptr', '=', 'strtok', '(', 'NULL', ',', '""""', ')', ';', '}', 'if', '(', 'argc', '!=', '2', ')', '{', '*', 'path', '=', 'alloca', '(', 'strlen', '(', 'path_head', ')', '+', '1', '+', 'strlen', '(', 'path_tail', ')', '+', '1', '+', 'strlen', '(', 'daemon', ')', '+', '1', ')', ';', 'strcat', '(', 'path', ',', 'path_head', ')', ';', 'strcat', '(', 'path', ',', 'daemon', ')', ';', 'strcat', '(', 'path', ',', 'path_tail', ')', ';', 'cfg', '=', 'fopen', '(', 'path', ',', '""""', ')', ';', 'if', '(', 'cfg', '==', 'NULL', ')', '{', 'dessert_err', '(', '""""', '%', 's', 'configfile\\""""', '%', 's\\""""', ',', 'daemon', ',', 'daemon', ',', 'daemon', ')', ';', 'exit', '(', '1', ')', ';', '}', '}', 'else', '{', 'cfg', '=', 'fopen', '(', 'argv', '[', '1', ']', ',', '""""', ')', ';', 'if', '(', 'cfg', '==', 'NULL', ')', '{', 'dessert_err', '(', '""""', ',', 'argv', '[', '1', ']', ')', ';', 'exit', '(', '2', ')', ';', '}', 'else', '{', 'dessert_info', '(', '""""', ',', 'argv', '[', '1', ']', ')', ';', '}', '}', 'return', 'cfg', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1254,"['_parse_accessible_playlists', '(', 'JNIEnv', '*', 'env', ',', 'BITBUFFER', '*', 'buf', ')', '{', '/', '/', 'skip', 'length', 'bb_seek', '(', 'buf', ',', '32', ',', 'SEEK_CUR', ')', ';', 'int', 'count', '=', 'bb_read', '(', 'buf', ',', '11', ')', ';', 'jobjectArray', 'playlists', '=', 'bdj_make_array', '(', 'env', ',', '""""', ',', 'count', ')', ';', 'jboolean', 'access_to_all_flag', '=', 'bb_read', '(', 'buf', ',', '1', ')', ';', 'jboolean', 'autostart_first_playlist', '=', 'bb_read', '(', 'buf', ',', '1', ')', ';', '/', '/', 'skip', 'bb_seek', '(', 'buf', ',', '19', ',', 'SEEK_CUR', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'count', ';', 'i', '++', ')', '{', 'char', 'playlist_name', '[', '6', ']', ';', '_get_string', '(', 'buf', ',', 'playlist_name', ',', '5', ')', ';', 'jstring', 'jplaylist_name', '=', '(', '*', 'env', ')', '->', 'NewStringUTF', '(', 'env', ',', 'playlist_name', ')', ';', 'JNICHK', '(', 'jplaylist_name', ')', ';', '(', '*', 'env', ')', '->', 'SetObjectArrayElement', '(', 'env', ',', 'playlists', ',', 'i', ',', 'jplaylist_name', ')', ';', '/', '/', 'skip', 'bb_seek', '(', 'buf', ',', '8', ',', 'SEEK_CUR', ')', ';', '}', 'return', 'bdj_make_object', '(', 'env', ',', '""""', ',', '""""', ',', 'access_to_all_flag', ',', 'autostart_first_playlist', ',', 'playlists', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1255,"['mgslpc_put_char', '(', 'struct', 'tty_struct', '*', 'tty', ',', 'unsigned', 'char', 'ch', ')', '{', 'MGSLPC_INFO', '*', 'info', '=', '(', 'MGSLPC_INFO', '*', ')', 'tty', '->', 'driver_data', ';', 'unsigned', 'long', 'flags', ';', 'if', '(', 'debug_level', '>=', 'DEBUG_LEVEL_INFO', ')', '{', 'printk', '(', '""""', ',', '__FILE__', ',', '__LINE__', ',', 'ch', ',', 'info', '->', 'device_name', ')', ';', '}', 'if', '(', 'mgslpc_paranoia_check', '(', 'info', ',', 'tty', '->', 'name', ',', '""""', ')', ')', 'return', '0', ';', 'if', '(', '!info', '->', 'tx_buf', ')', 'return', '0', ';', 'spin_lock_irqsave', '(', '&', 'info', '->', 'lock', ',', 'flags', ')', ';', 'if', '(', 'info', '->', 'params', '.', 'mode', '==', 'MGSL_MODE_ASYNC', '||', '!info', '->', 'tx_active', ')', '{', 'if', '(', 'info', '->', 'tx_count', '<', 'TXBUFSIZE', '-', '1', ')', '{', 'info', '->', 'tx_buf', '[', 'info', '->', 'tx_put', '++', ']', '=', 'ch', ';', 'info', '->', 'tx_put', '&=', 'TXBUFSIZE', '-', '1', ';', 'info', '->', 'tx_count', '++', ';', '}', '}', 'spin_unlock_irqrestore', '(', '&', 'info', '->', 'lock', ',', 'flags', ')', ';', 'return', '1', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1256,"['globus_l_gram_tokenize', '(', 'char', '*', 'command', ',', 'char', '*', '*', 'args', ',', 'int', '*', 'n', ')', '{', 'int', 'i', ',', 'x', ';', 'char', '*', 'cp', ';', 'char', '*', 'cp2', ';', 'char', '*', '*', 'arg', ';', 'char', '*', 'tmp_str', '=', 'NULL', ';', 'arg', '=', 'args', ';', 'i', '=', '*', 'n', '-', '1', ';', 'for', '(', 'cp', '=', 'strtok', '(', 'command', ',', '""""', ')', ';', 'cp', '!=', '0', ';', ')', '{', 'if', '(', 'cp', '[', '0', ']', '==', ""''''\\''"", ')', '{', 'cp2', '=', 'strtok', '(', 'NULL', ',', '""""', ')', ';', 'tmp_str', '=', 'malloc', '(', 'sizeof', '(', 'char', '*', ')', '*', '(', 'strlen', '(', 'cp', ')', '+', 'strlen', '(', 'cp2', ')', '+', '2', ')', ')', ';', 'sprintf', '(', 'tmp_str', ',', '""""', ',', '&', 'cp', '[', '1', ']', ',', 'cp2', ')', ';', '}', 'else', 'if', '(', 'cp', '[', '0', ']', '==', ""''"", ')', '{', 'cp2', '=', 'strtok', '(', 'NULL', ',', '""""\\n""', ')', ';', 'tmp_str', '=', 'malloc', '(', 'sizeof', '(', 'char', '*', ')', '*', '(', 'strlen', '(', 'cp', ')', '+', 'strlen', '(', 'cp2', ')', '+', '2', ')', ')', ';', 'sprintf', '(', 'tmp_str', ',', '""""', ',', '&', 'cp', '[', '1', ']', ',', 'cp2', ')', ';', '}', '{', 'if', '(', '(', 'cp', '[', '0', ']', '==', ""''"", ')', '||', '(', 'cp', '[', '0', ']', '==', ""''''\\''"", ')', ')', '{', 'tmp_str', '=', 'malloc', '(', 'sizeof', '(', 'char', '*', ')', '*', 'strlen', '(', 'cp', ')', ')', ';', 'x', '=', 'strlen', '(', 'cp', ')', '-', '2', ';', 'strncpy', '(', 'tmp_str', ',', '&', 'cp', '[', '1', ']', ',', 'x', ')', ';', 'tmp_str', '[', 'x', ']', '=', ""''"", ';', '}', '{', 'tmp_str', '=', 'cp', ';', '}', '}', '*', 'arg', '=', 'tmp_str', ';', 'i', '--', ';', 'if', '(', 'i', '==', '0', ')', 'arg', '++', ';', 'cp', '=', 'strtok', '(', 'NULL', ',', '""""', ')', ';', '}', '*', 'arg', '=', '(', 'char', '*', ')', '0', ';', '*', 'n', '=', '*', 'n', '-', 'i', '-', '1', ';', 'return', '(', '0', ')', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1257,"['initial_integrate', '(', 'int', 'vflag', ')', '{', 'double', 'dtfm', ';', '/', '/', 'update', 'v', 'and', 'x', 'of', 'atoms', 'in', 'double', '*', '*', 'x', '=', 'atom', '->', 'x', ';', 'double', '*', '*', 'v', '=', 'atom', '->', 'v', ';', 'double', '*', '*', 'f', '=', 'atom', '->', 'f', ';', 'double', '*', 'rmass', '=', 'atom', '->', 'rmass', ';', 'double', '*', 'mass', '=', 'atom', '->', 'mass', ';', 'int', '*', 'type', '=', 'atom', '->', 'type', ';', 'int', '*', 'mask', '=', 'atom', '->', 'mask', ';', 'int', 'nlocal', '=', 'atom', '->', 'nlocal', ';', 'if', '(', 'igroup', '==', 'atom', '->', 'firstgroup', ')', 'nlocal', '=', 'atom', '->', 'nfirst', ';', 'if', '(', 'rmass', ')', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'nlocal', ';', 'i', '++', ')', 'if', '(', 'mask', '[', 'i', ']', '&', 'groupbit', ')', '{', 'dtfm', '=', 'dtf', '/', 'rmass', '[', 'i', ']', ';', 'v', '[', 'i', ']', '[', '0', ']', '+=', 'dtfm', '*', 'f', '[', 'i', ']', '[', '0', ']', ';', 'v', '[', 'i', ']', '[', '1', ']', '+=', 'dtfm', '*', 'f', '[', 'i', ']', '[', '1', ']', ';', 'v', '[', 'i', ']', '[', '2', ']', '+=', 'dtfm', '*', 'f', '[', 'i', ']', '[', '2', ']', ';', 'x', '[', 'i', ']', '[', '0', ']', '+=', 'dtv', '*', 'v', '[', 'i', ']', '[', '0', ']', ';', 'x', '[', 'i', ']', '[', '1', ']', '+=', 'dtv', '*', 'v', '[', 'i', ']', '[', '1', ']', ';', 'x', '[', 'i', ']', '[', '2', ']', '+=', 'dtv', '*', 'v', '[', 'i', ']', '[', '2', ']', ';', '}', '}', 'else', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'nlocal', ';', 'i', '++', ')', 'if', '(', 'mask', '[', 'i', ']', '&', 'groupbit', ')', '{', 'dtfm', '=', 'dtf', '/', 'mass', '[', 'type', '[', 'i', ']', ']', ';', 'v', '[', 'i', ']', '[', '0', ']', '+=', 'dtfm', '*', 'f', '[', 'i', ']', '[', '0', ']', ';', 'v', '[', 'i', ']', '[', '1', ']', '+=', 'dtfm', '*', 'f', '[', 'i', ']', '[', '1', ']', ';', 'v', '[', 'i', ']', '[', '2', ']', '+=', 'dtfm', '*', 'f', '[', 'i', ']', '[', '2', ']', ';', 'x', '[', 'i', ']', '[', '0', ']', '+=', 'dtv', '*', 'v', '[', 'i', ']', '[', '0', ']', ';', 'x', '[', 'i', ']', '[', '1', ']', '+=', 'dtv', '*', 'v', '[', 'i', ']', '[', '1', ']', ';', 'x', '[', 'i', ']', '[', '2', ']', '+=', 'dtv', '*', 'v', '[', 'i', ']', '[', '2', ']', ';', '}', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1258,"['gst_raw_parse_convert', '(', 'GstRawParse', '*', 'rp', ',', 'GstFormat', 'src_format', ',', 'gint64', 'src_value', ',', 'GstFormat', 'dest_format', ',', 'gint64', '*', 'dest_value', ')', '{', 'gboolean', 'ret', '=', 'FALSE', ';', 'GST_DEBUG', '(', '""""', 'G_GINT64_FORMAT', '""""', ',', 'src_value', ',', 'gst_format_get_name', '(', 'src_format', ')', ',', 'src_format', ',', 'gst_format_get_name', '(', 'dest_format', ')', ',', 'dest_format', ')', ';', 'if', '(', 'src_format', '==', 'dest_format', ')', '{', '*', 'dest_value', '=', 'src_value', ';', 'ret', '=', 'TRUE', ';', 'goto', 'done', ';', '}', 'if', '(', 'src_value', '==', '-', '1', ')', '{', '*', 'dest_value', '=', '-', '1', ';', 'ret', '=', 'TRUE', ';', 'goto', 'done', ';', '}', 'if', '(', 'src_format', '==', 'GST_FORMAT_BYTES', '&&', 'dest_format', '==', 'GST_FORMAT_DEFAULT', ')', '{', 'if', '(', 'rp', '->', 'framesize', '!=', '0', ')', '{', '*', 'dest_value', '=', 'gst_util_uint64_scale_int', '(', 'src_value', ',', '1', ',', 'rp', '->', 'framesize', ')', ';', '}', 'else', '{', 'GST_ERROR', '(', '""""', ')', ';', '*', 'dest_value', '=', '0', ';', '}', 'ret', '=', 'TRUE', ';', 'goto', 'done', ';', '}', 'if', '(', 'src_format', '==', 'GST_FORMAT_DEFAULT', '&&', 'dest_format', '==', 'GST_FORMAT_BYTES', ')', '{', '*', 'dest_value', '=', 'gst_util_uint64_scale_int', '(', 'src_value', ',', 'rp', '->', 'framesize', ',', '1', ')', ';', 'ret', '=', 'TRUE', ';', 'goto', 'done', ';', '}', 'if', '(', 'src_format', '==', 'GST_FORMAT_TIME', '&&', 'dest_format', '==', 'GST_FORMAT_DEFAULT', ')', '{', 'if', '(', 'rp', '->', 'fps_d', '!=', '0', ')', '{', '*', 'dest_value', '=', 'gst_util_uint64_scale', '(', 'src_value', ',', 'rp', '->', 'fps_n', ',', 'GST_SECOND', '*', 'rp', '->', 'fps_d', ')', ';', '}', 'else', '{', 'GST_ERROR', '(', '""""', ')', ';', '*', 'dest_value', '=', '0', ';', '}', 'ret', '=', 'TRUE', ';', 'goto', 'done', ';', '}', 'if', '(', 'src_format', '==', 'GST_FORMAT_DEFAULT', '&&', 'dest_format', '==', 'GST_FORMAT_TIME', ')', '{', 'if', '(', 'rp', '->', 'fps_n', '!=', '0', ')', '{', '*', 'dest_value', '=', 'gst_util_uint64_scale', '(', 'src_value', ',', 'GST_SECOND', '*', 'rp', '->', 'fps_d', ',', 'rp', '->', 'fps_n', ')', ';', '}', 'else', '{', 'GST_ERROR', '(', '""""', ')', ';', '*', 'dest_value', '=', '0', ';', '}', 'ret', '=', 'TRUE', ';', 'goto', 'done', ';', '}', 'if', '(', 'src_format', '==', 'GST_FORMAT_TIME', '&&', 'dest_format', '==', 'GST_FORMAT_BYTES', ')', '{', 'if', '(', 'rp', '->', 'fps_d', '!=', '0', ')', '{', '*', 'dest_value', '=', 'gst_util_uint64_scale', '(', 'src_value', ',', 'rp', '->', 'fps_n', '*', 'rp', '->', 'framesize', ',', 'GST_SECOND', '*', 'rp', '->', 'fps_d', ')', ';', '}', 'else', '{', 'GST_ERROR', '(', '""""', ')', ';', '*', 'dest_value', '=', '0', ';', '}', 'ret', '=', 'TRUE', ';', 'goto', 'done', ';', '}', 'if', '(', 'src_format', '==', 'GST_FORMAT_BYTES', '&&', 'dest_format', '==', 'GST_FORMAT_TIME', ')', '{', 'if', '(', 'rp', '->', 'fps_n', '!=', '0', '&&', 'rp', '->', 'framesize', '!=', '0', ')', '{', '*', 'dest_value', '=', 'gst_util_uint64_scale', '(', 'src_value', ',', 'GST_SECOND', '*', 'rp', '->', 'fps_d', ',', 'rp', '->', 'fps_n', '*', 'rp', '->', 'framesize', ')', ';', '}', 'else', '{', 'GST_ERROR', '(', '""""', ')', ';', '*', 'dest_value', '=', '0', ';', '}', 'ret', '=', 'TRUE', ';', '}', 'done', ':', 'GST_DEBUG', '(', '""""', 'G_GINT64_FORMAT', ',', 'ret', ',', '*', 'dest_value', ')', ';', 'return', 'ret', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1259,"['kdb2_firstkey', '(', ')', '{', 'datum', 'item', ';', 'if', '(', '__cur_db', '==', 'NULL', ')', '{', 'no_open_db', '(', ')', ';', 'item', '.', 'dptr', '=', '0', ';', 'item', '.', 'dsize', '=', '0', ';', 'return', '(', 'item', ')', ';', '}', 'return', '(', 'kdb2_dbm_firstkey', '(', '__cur_db', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1260,"['find', '(', 'int', 'symid', ')', '{', 'if', '(', 'symid', '==', '-', '1', ')', 'return', 'nil', ';', 'ALIterator', 'i', ';', 'for', '(', 'First', '(', 'i', ')', ';', '!Done', '(', 'i', ')', ';', 'Next', '(', 'i', ')', ')', '{', 'Attribute', '*', 'attr', '=', 'GetAttr', '(', 'i', ')', ';', 'if', '(', 'attr', '->', 'SymbolId', '(', ')', '==', 'symid', ')', '{', 'return', 'attr', '->', 'Value', '(', ')', ';', '}', '}', 'return', 'nil', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1261,"['escape_str', '(', 'const', 'gchar', '*', 'str', ')', '{', 'GString', '*', 's', ';', 'guint', 'n', ';', 's', '=', 'g_string_new', '(', 'NULL', ')', ';', 'if', '(', 'str', '==', 'NULL', ')', 'goto', 'out', ';', 'for', '(', 'n', '=', '0', ';', 'str', '[', 'n', ']', '!=', ""''"", ';', 'n', '++', ')', '{', 'guint', 'c', '=', 'str', '[', 'n', ']', '&', '0xff', ';', 'if', '(', 'g_ascii_isalnum', '(', 'c', ')', '||', 'c', '==', ""''"", ')', 'g_string_append_c', '(', 's', ',', 'c', ')', ';', 'g_string_append_printf', '(', 's', ',', '""""', ',', 'c', ')', ';', '}', 'out', ':', 'return', 'g_string_free', '(', 's', ',', 'FALSE', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1262,"['grl_metadata_store_source_store_metadata', '(', 'GrlSource', '*', 'source', ',', 'GrlSourceStoreMetadataSpec', '*', 'sms', ')', '{', 'GRL_DEBUG', '(', '""""', ')', ';', 'const', 'gchar', '*', 'media_id', ',', '*', 'source_id', ';', 'GError', '*', 'error', '=', 'NULL', ';', 'GList', '*', 'failed_keys', '=', 'NULL', ';', 'source_id', '=', 'grl_media_get_source', '(', 'sms', '->', 'media', ')', ';', 'media_id', '=', 'grl_media_get_id', '(', 'sms', '->', 'media', ')', ';', 'if', '(', '!source_id', ')', '{', 'GRL_WARNING', '(', '""""', ')', ';', 'error', '=', 'g_error_new', '(', 'GRL_CORE_ERROR', ',', 'GRL_CORE_ERROR_STORE_METADATA_FAILED', ',', '_', '(', '""""', ')', ',', '_', '(', '""""source', '-', 'id\\""""', ')', ')', ';', 'failed_keys', '=', 'g_list_copy', '(', 'sms', '->', 'keys', ')', ';', '}', 'else', '{', 'if', '(', '!media_id', ')', '{', 'media_id', '=', '""""', ';', '}', 'failed_keys', '=', 'write_keys', '(', 'GRL_METADATA_STORE_SOURCE', '(', 'source', ')', '->', 'priv', '->', 'db', ',', 'source_id', ',', 'media_id', ',', 'sms', ',', '&', 'error', ')', ';', '}', 'sms', '->', 'callback', '(', 'sms', '->', 'source', ',', 'sms', '->', 'media', ',', 'failed_keys', ',', 'sms', '->', 'user_data', ',', 'error', ')', ';', 'g_clear_error', '(', '&', 'error', ')', ';', 'g_list_free', '(', 'failed_keys', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1263,"['msgcache_write_tags', '(', 'MsgInfo', '*', 'msginfo', ',', 'FILE', '*', 'fp', ')', '{', 'GSList', '*', 'cur', '=', 'msginfo', '->', 'tags', ';', 'int', 'w_err', '=', '0', ',', 'wrote', '=', '0', ';', 'WRITE_CACHE_DATA_INT', '(', 'msginfo', '->', 'msgnum', ',', 'fp', ')', ';', 'for', '(', ';', 'cur', ';', 'cur', '=', 'cur', '->', 'next', ')', '{', 'gint', 'id', '=', 'GPOINTER_TO_INT', '(', 'cur', '->', 'data', ')', ';', 'if', '(', 'tags_get_tag', '(', 'id', ')', '!=', 'NULL', ')', '{', 'WRITE_CACHE_DATA_INT', '(', 'id', ',', 'fp', ')', ';', '}', '}', 'WRITE_CACHE_DATA_INT', '(', '-', '1', ',', 'fp', ')', ';', 'return', 'w_err', '?', '-', '1', ':', 'wrote', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1264,"['lbcd_proto2_convert', '(', 'struct', 'lbcd_reply', '*', 'lb', ')', '{', 'uint32_t', 'weightval_i', ';', 'uint16_t', 'weightval_s', ';', 'weightval_i', '=', 'ntohl', '(', 'lb', '->', 'weights', '[', '0', ']', '.', 'host_weight', ')', ';', 'if', '(', 'weightval_i', '>', '(', 'uint16_t', ')', '-', '1', ')', 'weightval_s', '=', '(', 'uint16_t', ')', '-', '1', ';', 'weightval_s', '=', 'weightval_i', ';', '/', '*', '*', 'lbnamed', 'v2', 'only', 'used', 'l1', ',', 'tot_users', ',', 'and', 'uniq_users', ',', 'although', 'Rob', '*', 'all', 'the', 'loads', 'may', 'be', 'used', ',', 'so', 'set', 'them', 'all', 'just', 'in', 'case', '.', 'lb', '->', 'l1', '=', 'htons', '(', 'weightval_s', ')', ';', 'lb', '->', 'l5', '=', 'htons', '(', 'weightval_s', ')', ';', 'lb', '->', 'l15', '=', 'htons', '(', 'weightval_s', ')', ';', 'lb', '->', 'tot_users', '=', '0', ';', 'lb', '->', 'uniq_users', '=', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1265,"['setup_convert_check', '(', 'struct', 'git_attr_check', '*', 'check', ')', '{', 'static', 'struct', 'git_attr', '*', 'attr_crlf', ';', 'static', 'struct', 'git_attr', '*', 'attr_ident', ';', 'static', 'struct', 'git_attr', '*', 'attr_filter', ';', 'if', '(', '!attr_crlf', ')', '{', 'attr_crlf', '=', 'git_attr', '(', '""""', ',', '4', ')', ';', 'attr_ident', '=', 'git_attr', '(', '""""', ',', '5', ')', ';', 'attr_filter', '=', 'git_attr', '(', '""""', ',', '6', ')', ';', 'user_convert_tail', '=', '&', 'user_convert', ';', 'git_config', '(', 'read_convert_config', ')', ';', '}', 'check', '[', '0', ']', '.', 'attr', '=', 'attr_crlf', ';', 'check', '[', '1', ']', '.', 'attr', '=', 'attr_ident', ';', 'check', '[', '2', ']', '.', 'attr', '=', 'attr_filter', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1266,"['vvcopy', '(', 'vvec', '*', 'src', ',', 'vvec', '*', 'dest', ')', '{', 'char', '*', 'newbase', ';', 'if', '(', 'src', '->', 'base', '==', 'NULL', ')', '{', '*', 'dest', '=', '*', 'src', ';', '}', 'else', '{', 'vvneeds', '(', 'dest', ',', 'src', '->', 'allocated', ')', ';', 'newbase', '=', 'dest', '->', 'base', ';', '*', 'dest', '=', '*', 'src', ';', 'dest', '->', 'base', '=', 'newbase', ';', 'memcpy', '(', 'dest', '->', 'base', ',', 'src', '->', 'base', ',', 'dest', '->', 'allocated', '*', 'dest', '->', 'elsize', ')', ';', '}', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1267,"['real2complex', '(', 'int', 'count', ',', 'Pointer', 'from', ',', 'Pointer', 'to', ',', 'int', 'itemsize', ')', '{', 'int', 'i', ';', 'Pointer', 'efrom', ',', 'eto', ';', 'efrom', '=', 'INC', '(', 'from', ',', 'itemsize', '*', '(', 'count', '-', '1', ')', ')', ';', 'eto', '=', 'INC', '(', 'to', ',', '2', '*', 'itemsize', '*', '(', 'count', '-', '1', ')', ')', ';', 'for', '(', 'i', '=', 'count', ';', 'i', '>', '0', ';', 'i', '--', ')', '{', 'memset', '(', 'eto', ',', ""''"", ',', 'itemsize', ')', ';', 'eto', '=', 'DEC', '(', 'to', ',', 'itemsize', ')', ';', 'memcpy', '(', 'efrom', ',', 'eto', ',', 'itemsize', ')', ';', 'efrom', '=', 'DEC', '(', 'from', ',', 'itemsize', ')', ';', 'eto', '=', 'DEC', '(', 'to', ',', 'itemsize', ')', ';', '}', 'return', 'OK', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1268,"['compute_slopes', '(', 'GwyDataField', '*', 'dfield', ',', 'gint', 'kernel_size', ',', 'GwyDataField', '*', 'xder', ',', 'GwyDataField', '*', 'yder', ')', '{', 'gint', 'xres', ',', 'yres', ';', 'gdouble', 'minxd', ',', 'maxxd', ',', 'minyd', ',', 'maxyd', ';', 'xres', '=', 'gwy_data_field_get_xres', '(', 'dfield', ')', ';', 'yres', '=', 'gwy_data_field_get_yres', '(', 'dfield', ')', ';', 'if', '(', 'kernel_size', ')', '{', 'GwyPlaneFitQuantity', 'quantites', '[', ']', '=', '{', 'GWY_PLANE_FIT_BX', ',', '}', ';', 'GwyDataField', '*', 'fields', '[', '2', ']', ';', 'fields', '[', '0', ']', '=', 'xder', ';', 'fields', '[', '1', ']', '=', 'yder', ';', 'gwy_data_field_fit_local_planes', '(', 'dfield', ',', 'kernel_size', ',', '2', ',', 'quantites', ',', 'fields', ')', ';', '}', 'else', '{', 'gint', 'col', ',', 'row', ';', 'gdouble', '*', 'xd', ',', '*', 'yd', ';', 'const', 'gdouble', '*', 'data', ';', 'gdouble', 'd', ';', 'data', '=', 'gwy_data_field_get_data_const', '(', 'dfield', ')', ';', 'xd', '=', 'gwy_data_field_get_data', '(', 'xder', ')', ';', 'yd', '=', 'gwy_data_field_get_data', '(', 'yder', ')', ';', 'for', '(', 'row', '=', '0', ';', 'row', '<', 'yres', ';', 'row', '++', ')', '{', 'for', '(', 'col', '=', '0', ';', 'col', '<', 'xres', ';', 'col', '++', ')', '{', 'if', '(', '!col', ')', 'd', '=', 'data', '[', 'row', '*', 'xres', '+', 'col', '+', '1', ']', '-', 'data', '[', 'row', '*', 'xres', '+', 'col', ']', ';', 'else', 'if', '(', 'col', '==', 'xres', '-', '1', ')', 'd', '=', 'data', '[', 'row', '*', 'xres', '+', 'col', ']', '-', 'data', '[', 'row', '*', 'xres', '+', 'col', '-', '1', ']', ';', 'd', '=', '(', 'data', '[', 'row', '*', 'xres', '+', 'col', '+', '1', ']', '-', 'data', '[', 'row', '*', 'xres', '+', 'col', '-', '1', ']', ')', '/', '2', ';', '*', '(', 'xd', '++', ')', '=', 'd', ';', 'if', '(', '!row', ')', 'd', '=', 'data', '[', 'row', '*', 'xres', '+', 'xres', '+', 'col', ']', '-', 'data', '[', 'row', '*', 'xres', '+', 'col', ']', ';', 'else', 'if', '(', 'row', '==', 'yres', '-', '1', ')', 'd', '=', 'data', '[', 'row', '*', 'xres', '+', 'col', ']', '-', 'data', '[', 'row', '*', 'xres', '-', 'xres', '+', 'col', ']', ';', 'd', '=', '(', 'data', '[', 'row', '*', 'xres', '+', 'xres', '+', 'col', ']', '-', 'data', '[', 'row', '*', 'xres', '-', 'xres', '+', 'col', ']', ')', '/', '2', ';', '*', '(', 'yd', '++', ')', '=', 'd', ';', '}', '}', '}', 'gwy_data_field_multiply', '(', 'xder', ',', 'xres', '/', 'gwy_data_field_get_xreal', '(', 'dfield', ')', ')', ';', 'gwy_data_field_get_min_max', '(', 'xder', ',', '&', 'minxd', ',', '&', 'maxxd', ')', ';', 'maxxd', '=', 'MAX', '(', 'fabs', '(', 'minxd', ')', ',', 'fabs', '(', 'maxxd', ')', ')', ';', 'gwy_data_field_multiply', '(', 'yder', ',', 'yres', '/', 'gwy_data_field_get_yreal', '(', 'dfield', ')', ')', ';', 'gwy_data_field_get_min_max', '(', 'yder', ',', '&', 'minyd', ',', '&', 'maxyd', ')', ';', 'maxyd', '=', 'MAX', '(', 'fabs', '(', 'minyd', ')', ',', 'fabs', '(', 'maxyd', ')', ')', ';', 'return', 'MAX', '(', 'maxxd', ',', 'maxyd', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1269,"['generateEvalCode', '(', 'CompileState', '*', 'comp', ')', '{', '/', '/', 'This', 'is', 'basically', 'just', 'a', 'number', 'OpValue', 'curV', '=', 'expr', '->', 'generateEvalCode', '(', 'comp', ')', ';', 'if', '(', 'curV', '.', 'type', '!=', 'OpType_number', ')', '{', 'OpValue', 'numVal', ';', 'CodeGen', ':', ':', 'emitConvertTo', '(', 'comp', ',', '&', 'curV', ',', 'OpType_number', ',', '&', 'numVal', ')', ';', 'curV', '=', 'numVal', ';', '}', 'return', 'curV', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1270,"['port100_tg_set_rf', '(', 'struct', 'nfc_digital_dev', '*', 'ddev', ',', 'u8', 'rf', ')', '{', 'struct', 'port100', '*', 'dev', '=', 'nfc_digital_get_drvdata', '(', 'ddev', ')', ';', 'struct', 'sk_buff', '*', 'skb', ';', 'struct', 'sk_buff', '*', 'resp', ';', 'int', 'rc', ';', 'if', '(', 'rf', '>=', 'NFC_DIGITAL_RF_TECH_LAST', ')', 'return', '-', 'EINVAL', ';', 'skb', '=', 'port100_alloc_skb', '(', 'dev', ',', 'sizeof', '(', 'struct', 'port100_tg_rf_setting', ')', ')', ';', 'if', '(', '!skb', ')', 'return', '-', 'ENOMEM', ';', 'memcpy', '(', 'skb_put', '(', 'skb', ',', 'sizeof', '(', 'struct', 'port100_tg_rf_setting', ')', ')', ',', '&', 'tg_rf_settings', '[', 'rf', ']', ',', 'sizeof', '(', 'struct', 'port100_tg_rf_setting', ')', ')', ';', 'resp', '=', 'port100_send_cmd_sync', '(', 'dev', ',', 'PORT100_CMD_TG_SET_RF', ',', 'skb', ')', ';', 'if', '(', 'IS_ERR', '(', 'resp', ')', ')', 'return', 'PTR_ERR', '(', 'resp', ')', ';', 'rc', '=', 'resp', '->', 'data', '[', '0', ']', ';', 'dev_kfree_skb', '(', 'resp', ')', ';', 'return', 'rc', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1271,"['snd_pcm_hooks_hw_params', '(', 'snd_pcm_t', '*', 'pcm', ',', 'snd_pcm_hw_params_t', '*', 'params', ')', '{', 'snd_pcm_hooks_t', '*', 'h', '=', 'pcm', '->', 'private_data', ';', 'struct', 'list_head', '*', 'pos', ',', '*', 'next', ';', 'int', 'err', '=', 'snd_pcm_generic_hw_params', '(', 'pcm', ',', 'params', ')', ';', 'if', '(', 'err', '<', '0', ')', 'return', 'err', ';', 'list_for_each_safe', '(', 'pos', ',', 'next', ',', '&', 'h', '->', 'hooks', '[', 'SND_PCM_HOOK_TYPE_HW_PARAMS', ']', ')', '{', 'snd_pcm_hook_t', '*', 'hook', '=', 'list_entry', '(', 'pos', ',', 'snd_pcm_hook_t', ',', 'list', ')', ';', 'err', '=', 'hook', '->', 'func', '(', 'hook', ')', ';', 'if', '(', 'err', '<', '0', ')', 'return', 'err', ';', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1272,"['max_version', '(', 'char', '*', 'pathname', ')', '{', 'char', '*', 'p', ';', 'char', '*', 'filename', ';', 'int', 'pathlen', '=', 'strlen', '(', 'pathname', ')', ';', 'int', 'version', ';', 'p', '=', 'pathname', '+', 'pathlen', '-', '1', ';', 'while', '(', '(', 'p', '>', 'pathname', ')', '&&', '(', '*', 'p', '!=', ""''"", ')', ')', '{', 'p', '--', ';', '}', 'if', '(', '*', 'p', '==', ""''"", ')', '{', 'int', 'dirlen', '=', 'p', '-', 'pathname', ';', 'char', '*', 'dirname', ';', 'filename', '=', 'p', '+', '1', ';', 'dirname', '=', 'xmalloc', '(', 'dirlen', '+', '1', ')', ';', 'strncpy', '(', 'dirname', ',', 'pathname', ',', '(', 'dirlen', ')', ')', ';', 'dirname', '[', 'dirlen', ']', '=', ""''"", ';', 'version', '=', 'highest_version', '(', 'filename', ',', 'dirname', ')', ';', 'free', '(', 'dirname', ')', ';', '}', '{', 'filename', '=', 'pathname', ';', 'version', '=', 'highest_version', '(', 'filename', ',', '""""', ')', ';', '}', 'return', 'version', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1273,"['adjuststack', '(', 'LexState', '*', 'ls', ',', 'int', 'n', ')', '{', 'if', '(', 'n', '>', '0', ')', 'code_oparg', '(', 'ls', ',', 'POP', ',', '2', ',', 'n', '-', '1', ',', '-', 'n', ')', ';', 'else', 'if', '(', 'n', '<', '0', ')', 'code_oparg', '(', 'ls', ',', 'PUSHNIL', ',', '1', ',', '(', '-', 'n', ')', '-', '1', ',', '-', 'n', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1274,"['vn_reference_lookup_pieces', '(', 'tree', 'vuse', ',', 'alias_set_type', 'set', ',', 'tree', 'type', ',', 'VEC', '(', 'vn_reference_op_s', ',', 'heap', ')', '*', 'operands', ',', 'vn_reference_t', '*', 'vnresult', ',', 'vn_lookup_kind', 'kind', ')', '{', 'struct', 'vn_reference_s', 'vr1', ';', 'vn_reference_t', 'tmp', ';', 'tree', 'cst', ';', 'if', '(', '!vnresult', ')', 'vnresult', '=', '&', 'tmp', ';', '*', 'vnresult', '=', 'NULL', ';', 'vr1', '.', 'vuse', '=', 'vuse', '?', 'SSA_VAL', '(', 'vuse', ')', ':', 'NULL_TREE', ';', 'VEC_truncate', '(', 'vn_reference_op_s', ',', 'shared_lookup_references', ',', '0', ')', ';', 'VEC_safe_grow', '(', 'vn_reference_op_s', ',', 'heap', ',', 'shared_lookup_references', ',', 'VEC_length', '(', 'vn_reference_op_s', ',', 'operands', ')', ')', ';', 'memcpy', '(', 'VEC_address', '(', 'vn_reference_op_s', ',', 'shared_lookup_references', ')', ',', 'VEC_address', '(', 'vn_reference_op_s', ',', 'operands', ')', ',', 'sizeof', '(', 'vn_reference_op_s', ')', '*', 'VEC_length', '(', 'vn_reference_op_s', ',', 'operands', ')', ')', ';', 'vr1', '.', 'operands', '=', 'operands', '=', '=', 'valueize_refs', '(', 'shared_lookup_references', ')', ';', 'vr1', '.', 'type', '=', 'type', ';', 'vr1', '.', 'set', '=', 'set', ';', 'vr1', '.', 'hashcode', '=', 'vn_reference_compute_hash', '(', '&', 'vr1', ')', ';', 'if', '(', '(', 'cst', '=', 'fully_constant_vn_reference_p', '(', '&', 'vr1', ')', ')', ')', 'return', 'cst', ';', 'vn_reference_lookup_1', '(', '&', 'vr1', ',', 'vnresult', ')', ';', 'if', '(', '!', '*', '&&', 'kind', '!=', '&&', 'vr1', '.', 'vuse', ')', '{', 'ao_ref', 'r', ';', 'vn_walk_kind', '=', 'kind', ';', 'if', '(', 'ao_ref_init_from_vn_reference', '(', '&', 'r', ',', 'set', ',', 'type', ',', 'vr1', '.', 'operands', ')', ')', '*', 'vnresult', '=', '(', 'vn_reference_t', ')', 'walk_non_aliased_vuses', '(', '&', 'r', ',', 'vr1', '.', 'vuse', ',', 'vn_reference_lookup_2', ',', 'vn_reference_lookup_3', ',', '&', 'vr1', ')', ';', 'if', '(', 'vr1', '.', 'operands', '!=', 'operands', ')', 'VEC_free', '(', 'vn_reference_op_s', ',', 'heap', ',', 'vr1', '.', 'operands', ')', ';', '}', 'if', '(', '*', 'vnresult', ')', 'return', '(', '*', 'vnresult', ')', '->', 'result', ';', 'return', 'NULL_TREE', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1275,"['createTypeDIE', '(', 'const', 'DICompositeType', '*', 'Ty', ')', '{', 'auto', '*', 'Context', '=', 'resolve', '(', 'Ty', '->', 'getScope', '(', ')', ')', ';', 'DIE', '*', 'ContextDIE', '=', 'getOrCreateContextDIE', '(', 'Context', ')', ';', 'if', '(', 'DIE', '*', 'TyDIE', '=', 'getDIE', '(', 'Ty', ')', ')', 'return', 'TyDIE', ';', '/', '/', 'Create', 'new', 'type', '.', 'DIE', '&', 'TyDIE', '=', 'createAndAddDIE', '(', 'Ty', '->', 'getTag', '(', ')', ',', '*', 'ContextDIE', ',', 'Ty', ')', ';', 'constructTypeDIE', '(', 'TyDIE', ',', 'cast', '<', 'DICompositeType', '>', '(', 'Ty', ')', ')', ';', 'if', '(', '!Ty', '->', 'isExternalTypeRef', '(', ')', ')', 'updateAcceleratorTables', '(', 'Context', ',', 'Ty', ',', 'TyDIE', ')', ';', 'return', '&', 'TyDIE', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1276,"['setTCPNoDelay', '(', 'PRFileDesc', '*', 'fd', ')', '{', 'PRStatus', 'status', '=', 'PR_SUCCESS', ';', 'PRSocketOptionData', 'opt', ';', 'opt', '.', 'option', '=', 'PR_SockOpt_NoDelay', ';', 'opt', '.', 'value', '.', 'no_delay', '=', 'PR_FALSE', ';', 'status', '=', 'PR_GetSocketOption', '(', 'fd', ',', '&', 'opt', ')', ';', 'if', '(', 'status', '==', 'PR_FAILURE', ')', '{', 'return', ';', '}', 'opt', '.', 'option', '=', 'PR_SockOpt_NoDelay', ';', 'opt', '.', 'value', '.', 'no_delay', '=', 'PR_TRUE', ';', 'status', '=', 'PR_SetSocketOption', '(', 'fd', ',', '&', 'opt', ')', ';', 'if', '(', 'status', '==', 'PR_FAILURE', ')', '{', 'return', ';', '}', 'return', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1277,"['ecryptfs_read_update_atime', '(', 'struct', 'kiocb', '*', 'iocb', ',', 'struct', 'iov_iter', '*', 'to', ')', '{', 'ssize_t', 'rc', ';', 'struct', 'path', '*', 'path', ';', 'struct', 'file', '*', 'file', '=', 'iocb', '->', 'ki_filp', ';', 'rc', '=', 'generic_file_read_iter', '(', 'iocb', ',', 'to', ')', ';', 'if', '(', 'rc', '>=', '0', ')', '{', 'path', '=', 'ecryptfs_dentry_to_lower_path', '(', 'file', '->', 'f_path', '.', 'dentry', ')', ';', 'touch_atime', '(', 'path', ')', ';', '}', 'return', 'rc', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1278,"['NEGC', '(', 'UINT32', 'm', ',', 'UINT32', 'n', ')', '{', 'UINT32', 'temp', ';', 'temp', '=', 'sh2', '.', 'r', '[', 'm', ']', ';', 'sh2', '.', 'r', '[', 'n', ']', '=', '-', 'temp', '-', '(', 'sh2', '.', 'sr', '&', 'T', ')', ';', 'if', '(', 'temp', '||', '(', 'sh2', '.', 'sr', '&', 'T', ')', ')', 'sh2', '.', 'sr', '|=', 'T', ';', 'sh2', '.', 'sr', '&=', '~T', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1279,"['write', '(', 'const', 'char', '*', 'data', ',', 'unsigned', 'int', 'size', ')', '{', 'int', 'n', ';', '/', '*', 'printf', '(', '""""', ',', 'size', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'size', ';', 'i', '++', ')', 'printf', '(', '""""', ',', 'data', '[', 'i', ']', ',', 'data', '[', 'i', ']', ')', ';', 'printf', '(', '""""', ')', ';', 'if', '(', 'myPort', '>=', '0', ')', '{', 'n', '=', ':', ':', 'write', '(', 'myPort', ',', 'data', ',', 'size', ')', ';', 'if', '(', 'n', '==', '-', '1', ')', '{', '{', 'usleep', '(', '10', ')', ';', 'n', '=', ':', ':', 'write', '(', 'myPort', ',', 'data', ',', 'size', ')', ';', 'if', '(', 'n', '>=', '0', ')', 'return', 'n', ';', '}', 'ArLog', ':', ':', 'log', '(', 'ArLog', ':', ':', 'Terse', ',', '""""', ')', ';', 'perror', '(', '""""', ')', ';', '}', 'return', 'n', ';', '}', 'ArLog', ':', ':', 'log', '(', 'ArLog', ':', ':', 'Terse', ',', '""""', ')', ';', 'return', '-', '1', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1280,"['CalcConUI', '(', 'Const_table', '*', 'lCon', ',', 'Const_table', '*', 'rCon', ',', 'qr_operator', 'ope', ',', 'int', 'invertl', ',', 'int', 'invertr', ')', '{', 'unsigned', 'int', 'l', '=', '0', ',', 'r', '=', '0', ';', 'l', '=', 'const_table_unsigned_value', '(', 'lCon', ')', ';', 'r', '=', 'const_table_unsigned_value', '(', 'rCon', ')', ';', 'switch', '(', 'ope', ')', '{', 'case', 'OPE_ADD', ':', 'if', '(', '!', '(', 'invertl', ')', '&&', '!', '(', 'invertr', ')', ')', 'return', 'l', '+', 'r', ';', 'if', '(', '!', '(', 'invertl', ')', '&&', 'invertr', ')', 'return', 'l', '-', 'r', ';', 'if', '(', 'invertl', '&&', '!', '(', 'invertr', ')', ')', 'return', 'r', '-', 'l', ';', 'if', '(', 'invertl', '&&', 'invertr', ')', 'return', '-', 'r', '-', 'l', ';', 'case', 'OPE_SUB', ':', 'if', '(', '!', '(', 'invertl', ')', '&&', '!', '(', 'invertr', ')', ')', 'return', 'l', '-', 'r', ';', 'if', '(', '!', '(', 'invertl', ')', '&&', 'invertr', ')', 'return', 'l', '+', 'r', ';', 'if', '(', 'invertl', '&&', '!', '(', 'invertr', ')', ')', 'return', '-', 'l', '-', 'r', ';', 'if', '(', 'invertl', '&&', 'invertr', ')', 'return', 'r', '-', 'l', ';', 'case', 'OPE_MUL', ':', 'if', '(', '!', '(', 'invertl', ')', '&&', '!', '(', 'invertr', ')', ')', 'return', 'l', '*', 'r', ';', 'if', '(', '!', '(', 'invertl', ')', '&&', 'invertr', ')', 'return', 'l', '/', 'r', ';', 'if', '(', 'invertl', '&&', '!', '(', 'invertr', ')', ')', 'return', 'r', '/', 'l', ';', 'if', '(', 'invertl', '&&', 'invertr', ')', 'return', '1', '/', '(', 'l', '*', 'r', ')', ';', 'case', 'OPE_DIV', ':', 'return', 'l', '/', 'r', ';', 'default', ':', 'perror', '(', '""""', ')', ';', 'exit', '(', '-', '1', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1281,"['tree_view_button_press_event', '(', 'GtkTreeView', '*', 'view', ',', 'GdkEventButton', '*', 'event', ',', 'GgdDoctypeSelector', '*', 'selector', ')', '{', 'gboolean', 'handled', '=', 'FALSE', ';', 'if', '(', 'event', '->', 'button', '==', '3', '&&', 'event', '->', 'type', '==', 'GDK_BUTTON_PRESS', ')', '{', 'GtkTreePath', '*', 'path', ';', 'if', '(', 'gtk_tree_view_get_path_at_pos', '(', 'view', ',', '(', 'gint', ')', 'event', '->', 'x', ',', '(', 'gint', ')', 'event', '->', 'y', ',', '&', 'path', ',', 'NULL', ',', 'NULL', ',', 'NULL', ')', ')', '{', 'gtk_tree_selection_select_path', '(', 'gtk_tree_view_get_selection', '(', 'view', ')', ',', 'path', ')', ';', 'gtk_tree_view_scroll_to_cell', '(', 'view', ',', 'path', ',', 'NULL', ',', 'FALSE', ',', '0', '.', '0', ',', '0', '.', '0', ')', ';', 'gtk_tree_path_free', '(', 'path', ')', ';', '}', 'do_popup_menu', '(', 'selector', ',', 'event', ')', ';', 'handled', '=', 'TRUE', ';', '}', 'return', 'handled', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1282,"['gtkaml_namespace_visitor_get_using_directives', '(', 'GtkamlNamespaceVisitor', '*', 'self', ')', '{', 'ValaList', '*', 'result', '=', 'NULL', ';', 'ValaList', '*', '_tmp0_', ';', 'ValaList', '*', '_tmp1_', ';', 'g_return_val_if_fail', '(', 'self', '!=', 'NULL', ',', 'NULL', ')', ';', '_tmp0_', '=', 'self', '->', 'priv', '->', 'using_directives', ';', '_tmp1_', '=', '_vala_iterable_ref0', '(', '_tmp0_', ')', ';', 'result', '=', '_tmp1_', ';', 'return', 'result', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1283,"['gnm_xml_prep_style_parser', '(', 'GsfXMLIn', '*', 'xin', ',', 'xmlChar', 'const', '*', '*', 'attrs', ',', 'GnmXmlStyleHandler', 'handler', ',', 'gpointer', 'user', ')', '{', 'static', 'GsfXMLInNode', 'dtd', '[', ']', '=', '{', 'GSF_XML_IN_NODE', '(', 'STYLE_STYLE', ',', 'STYLE_STYLE', ',', 'GNM', ',', '""""', ',', 'GSF_XML_NO_CONTENT', ',', '&', 'xml_sax_style_start', ',', 'NULL', ')', ',', '}', ';', 'GsfXMLInDoc', '*', 'doc', '=', 'gsf_xml_in_doc_new', '(', 'dtd', ',', 'NULL', ')', ';', 'XMLSaxParseState', '*', 'state', '=', 'g_new0', '(', 'XMLSaxParseState', ',', '1', ')', ';', 'read_file_init_state', '(', 'state', ',', 'NULL', ',', 'NULL', ',', 'NULL', ')', ';', 'state', '->', 'style_handler', '=', 'handler', ';', 'state', '->', 'style_handler_user', '=', 'user', ';', 'state', '->', 'style_handler_doc', '=', 'doc', ';', 'state', '->', 'style', '=', 'gnm_style_new_default', '(', ')', ';', 'gnm_xml_in_doc_add_subset', '(', 'doc', ',', 'gnumeric_1_0_dtd', ',', '""""', ',', '""""', ')', ';', 'gnm_xml_in_doc_add_subset', '(', 'doc', ',', 'gnumeric_1_0_dtd', ',', '""""', ',', '""""', ')', ';', 'gsf_xml_in_push_state', '(', 'xin', ',', 'doc', ',', 'state', ',', '(', 'GsfXMLInExtDtor', ')', 'style_parser_done', ',', 'attrs', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1284,"['AxesOrder', '(', 'int', '*', 'filter', ',', 'int', '*', 'axes', ',', 'int', 'nDim', ')', '{', 'int', 'flags', '[', 'MAX_DIMENSION', ']', ';', 'int', 'max', ',', 'i', ',', 'j', ';', 'memset', '(', 'flags', ',', '1', ',', 'nDim', '*', 'sizeof', '(', 'int', ')', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'nDim', ';', 'i', '++', ')', '{', 'max', '=', '-', '1', ';', 'for', '(', 'j', '=', '0', ';', 'j', '<', 'nDim', ';', 'j', '++', ')', 'if', '(', 'flags', '[', 'j', ']', '&&', 'max', '<', 'filter', '[', 'j', ']', ')', '{', 'axes', '[', 'i', ']', '=', 'j', ';', 'max', '=', 'filter', '[', 'j', ']', ';', '}', 'flags', '[', 'axes', '[', 'i', ']', ']', '=', '0', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1285,"['cyrusdb_convert', '(', 'const', 'char', '*', 'fromfname', ',', 'const', 'char', '*', 'tofname', ',', 'struct', 'cyrusdb_backend', '*', 'frombackend', ',', 'struct', 'cyrusdb_backend', '*', 'tobackend', ')', '{', 'struct', 'db', '*', 'fromdb', ',', '*', 'todb', ';', 'struct', 'convert_rock', 'cr', ';', 'struct', 'txn', '*', 'fromtid', '=', 'NULL', ';', 'int', 'r', ';', 'r', '=', '(', 'frombackend', '->', 'open', ')', '(', 'fromfname', ',', '0', ',', '&', 'fromdb', ')', ';', 'if', '(', 'r', '!=', 'CYRUSDB_OK', ')', 'fatal', '(', '""""', ',', 'EC_TEMPFAIL', ')', ';', 'r', '=', '(', 'tobackend', '->', 'open', ')', '(', 'tofname', ',', 'CYRUSDB_CREATE', ',', '&', 'todb', ')', ';', 'if', '(', 'r', '!=', 'CYRUSDB_OK', ')', 'fatal', '(', '""""', ',', 'EC_TEMPFAIL', ')', ';', 'cr', '.', 'backend', '=', 'tobackend', ';', 'cr', '.', 'db', '=', 'todb', ';', 'cr', '.', 'tid', '=', 'NULL', ';', '(', 'frombackend', '->', 'foreach', ')', '(', 'fromdb', ',', '""""', ',', '0', ',', 'NULL', ',', 'converter_cb', ',', '&', 'cr', ',', '&', 'fromtid', ')', ';', 'if', '(', 'fromtid', ')', '(', 'frombackend', '->', 'commit', ')', '(', 'fromdb', ',', 'fromtid', ')', ';', 'if', '(', 'cr', '.', 'tid', ')', '(', 'tobackend', '->', 'commit', ')', '(', 'todb', ',', 'cr', '.', 'tid', ')', ';', '(', 'frombackend', '->', 'close', ')', '(', 'fromdb', ')', ';', '(', 'tobackend', '->', 'close', ')', '(', 'todb', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1286,"['build_tools_set_enabled', '(', 'BuildTools', '*', 'self', ',', 'gint', 'tool_num', ',', 'gboolean', 'enabled', ')', '{', 'gint', '_tmp0_', '=', '0', ';', 'gboolean', '_tmp1_', '=', 'FALSE', ';', 'BuildTool', 'tool', '=', '{', '0', '}', ';', 'GeeLinkedList', '*', '_tmp2_', '=', 'NULL', ';', 'gint', '_tmp3_', '=', '0', ';', 'gpointer', '_tmp4_', '=', 'NULL', ';', 'BuildTool', '*', '_tmp5_', '=', 'NULL', ';', 'BuildTool', '_tmp6_', '=', '{', '0', '}', ';', 'BuildTool', '_tmp7_', '=', '{', '0', '}', ';', 'BuildTool', '_tmp8_', '=', '{', '0', '}', ';', 'gboolean', '_tmp9_', '=', 'FALSE', ';', 'gboolean', '_tmp10_', '=', 'FALSE', ';', 'g_return_if_fail', '(', 'self', '!=', 'NULL', ')', ';', '_tmp0_', '=', 'tool_num', ';', '_tmp1_', '=', 'build_tools_is_valid_index', '(', 'self', ',', '_tmp0_', ')', ';', 'g_return_if_fail', '(', '_tmp1_', ')', ';', '_tmp2_', '=', 'self', '->', '_build_tools', ';', '_tmp3_', '=', 'tool_num', ';', '_tmp4_', '=', 'gee_abstract_list_get', '(', '(', 'GeeAbstractList', '*', ')', '_tmp2_', ',', '_tmp3_', ')', ';', '_tmp5_', '=', '(', 'BuildTool', '*', ')', '_tmp4_', ';', 'build_tool_copy', '(', '_tmp5_', ',', '&', '_tmp6_', ')', ';', '_tmp7_', '=', '_tmp6_', ';', '_build_tool_free0', '(', '_tmp5_', ')', ';', 'tool', '=', '_tmp7_', ';', '_tmp8_', '=', 'tool', ';', '_tmp9_', '=', '_tmp8_', '.', 'enabled', ';', '_tmp10_', '=', 'enabled', ';', 'if', '(', '_tmp9_', '!=', '_tmp10_', ')', '{', 'gboolean', '_tmp11_', '=', 'FALSE', ';', 'GeeLinkedList', '*', '_tmp12_', '=', 'NULL', ';', 'gint', '_tmp13_', '=', '0', ';', 'BuildTool', '_tmp14_', '=', '{', '0', '}', ';', '_tmp11_', '=', 'enabled', ';', 'tool', '.', 'enabled', '=', '_tmp11_', ';', '_tmp12_', '=', 'self', '->', '_build_tools', ';', '_tmp13_', '=', 'tool_num', ';', '_tmp14_', '=', 'tool', ';', 'gee_abstract_list_set', '(', '(', 'GeeAbstractList', '*', ')', '_tmp12_', ',', '_tmp13_', ',', '&', '_tmp14_', ')', ';', 'g_signal_emit_by_name', '(', 'self', ',', '""""', ')', ';', '}', 'build_tool_destroy', '(', '&', 'tool', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1287,"['dime_quien_soy', '(', 'void', ')', '{', 'int', 'tmp', ';', 'tmp', '=', '(', '(', 'cliente', '.', 'random', '<<', '1', ')', '^', '(', 'cliente', '.', 'random', '>>', '1', ')', ')', '%', 'rnombres', ';', 'if', '(', 'tmp', '<', '0', ')', 'tmp', '=', '-', 'tmp', ';', 'strncpy', '(', 'cliente', '.', 'mi_nombre', ',', 'robot_nombres', '[', 'tmp', ']', '.', 'nombre', ',', 'sizeof', '(', 'cliente', '.', 'mi_nombre', ')', ')', ';', 'cliente', '.', 'ai', '=', 'robot_nombres', '[', 'tmp', ']', '.', 'ai', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1288,"['HpmfwupgValidateImageIntegrity', '(', 'struct', 'HpmfwupgUpgradeCtx', '*', 'pFwupgCtx', ')', '{', 'struct', 'HpmfwupgImageHeader', '*', 'pImageHeader', '=', '(', 'struct', 'HpmfwupgImageHeader', '*', ')', 'pFwupgCtx', '->', 'pImageData', ';', 'md5_state_t', 'ctx', ';', 'static', 'unsigned', 'char', 'md', '[', 'HPMFWUPG_MD5_SIGNATURE_LENGTH', ']', ';', 'unsigned', 'char', '*', 'pMd5Sig', '=', 'pFwupgCtx', '->', '+', '(', 'pFwupgCtx', '->', 'imageSize', '-', 'HPMFWUPG_MD5_SIGNATURE_LENGTH', ')', ';', 'memset', '(', 'md', ',', '0', ',', 'HPMFWUPG_MD5_SIGNATURE_LENGTH', ')', ';', 'memset', '(', '&', 'ctx', ',', '0', ',', 'sizeof', '(', 'md5_state_t', ')', ')', ';', 'md5_init', '(', '&', 'ctx', ')', ';', 'md5_append', '(', '&', 'ctx', ',', 'pFwupgCtx', '->', 'pImageData', ',', 'pFwupgCtx', '->', 'imageSize', '-', 'HPMFWUPG_MD5_SIGNATURE_LENGTH', ')', ';', 'md5_finish', '(', '&', 'ctx', ',', 'md', ')', ';', 'if', '(', 'memcmp', '(', 'md', ',', 'pMd5Sig', ',', 'HPMFWUPG_MD5_SIGNATURE_LENGTH', ')', '!=', '0', ')', '{', 'lprintf', '(', 'LOG_NOTICE', ',', '""""', ')', ';', 'return', 'HPMFWUPG_ERROR', ';', '}', 'if', '(', 'strncmp', '(', 'pImageHeader', '->', 'signature', ',', 'HPMFWUPG_IMAGE_SIGNATURE', ',', 'HPMFWUPG_HEADER_SIGNATURE_LENGTH', ')', '!=', '0', ')', '{', 'lprintf', '(', 'LOG_NOTICE', ',', '""""', ')', ';', 'return', 'HPMFWUPG_ERROR', ';', '}', 'if', '(', 'pImageHeader', '->', 'formatVersion', '!=', 'HPMFWUPG_IMAGE_HEADER_VERSION', ')', '{', 'lprintf', '(', 'LOG_NOTICE', ',', '""""', ')', ';', 'return', 'HPMFWUPG_ERROR', ';', '}', 'if', '(', 'HpmfwupgCalculateChecksum', '(', '(', 'unsigned', 'char', '*', ')', 'pImageHeader', ',', 'sizeof', '(', 'struct', 'HpmfwupgImageHeader', ')', '+', 'pImageHeader', '->', '+', 'sizeof', '(', 'unsigned', 'char', ')', '/', '*', 'checksum', '*', '/', ')', '!=', '0', ')', '{', 'lprintf', '(', 'LOG_NOTICE', ',', '""""', ')', ';', 'return', 'HPMFWUPG_ERROR', ';', '}', 'return', 'HPMFWUPG_SUCCESS', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1289,"['test_config_write__delete_value_at_specific_level', '(', 'void', ')', '{', 'git_config', '*', 'cfg', ',', '*', 'cfg_specific', ';', 'int32_t', 'i', ';', 'cl_git_pass', '(', 'git_config_open_ondisk', '(', '&', 'cfg', ',', '""""', ')', ')', ';', 'cl_git_pass', '(', 'git_config_get_int32', '(', '&', 'i', ',', 'cfg', ',', '""""', ')', ')', ';', 'cl_assert', '(', 'i', '==', '7', ')', ';', 'git_config_free', '(', 'cfg', ')', ';', 'cl_git_pass', '(', 'git_config_new', '(', '&', 'cfg', ')', ')', ';', 'cl_git_pass', '(', 'git_config_add_file_ondisk', '(', 'cfg', ',', '""""', ',', 'GIT_CONFIG_LEVEL_LOCAL', ',', '0', ')', ')', ';', 'cl_git_pass', '(', 'git_config_add_file_ondisk', '(', 'cfg', ',', '""""', ',', 'GIT_CONFIG_LEVEL_GLOBAL', ',', '0', ')', ')', ';', 'cl_git_pass', '(', 'git_config_open_level', '(', '&', 'cfg_specific', ',', 'cfg', ',', 'GIT_CONFIG_LEVEL_GLOBAL', ')', ')', ';', 'cl_git_pass', '(', 'git_config_delete_entry', '(', 'cfg_specific', ',', '""""', ')', ')', ';', 'git_config_free', '(', 'cfg', ')', ';', 'cl_git_pass', '(', 'git_config_open_ondisk', '(', '&', 'cfg', ',', '""""', ')', ')', ';', 'cl_assert', '(', 'git_config_get_int32', '(', '&', 'i', ',', 'cfg', ',', '""""', ')', '==', 'GIT_ENOTFOUND', ')', ';', 'cl_git_pass', '(', 'git_config_set_int32', '(', 'cfg', ',', '""""', ',', '7', ')', ')', ';', 'git_config_free', '(', 'cfg_specific', ')', ';', 'git_config_free', '(', 'cfg', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1290,"['swf_bifs_action', '(', 'SWFReader', '*', 'read', ',', 'SWFAction', '*', 'act', ')', '{', 'GF_List', '*', 'dst', ';', 'MFURL', 'url', ';', 'SFURL', 'sfurl', ';', 'Bool', 'bval', ';', 'GF_Node', '*', 'n', ';', 'Double', 'time', ';', 'dst', '=', 'read', '->', 'bifs_au', '->', 'commands', ';', 'if', '(', 'read', '->', 'btn', ')', '{', 'if', '(', 'act', '->', 'button_mask', '&', 'GF_SWF_COND_OVERUP_TO_OVERDOWN', ')', 'dst', '=', 'read', '->', 'btn_active', ';', 'else', 'if', '(', 'act', '->', 'button_mask', '&', 'GF_SWF_COND_IDLE_TO_OVERUP', ')', 'dst', '=', 'read', '->', 'btn_over', ';', 'else', 'if', '(', 'act', '->', 'button_mask', '&', 'GF_SWF_COND_OVERUP_TO_IDLE', ')', 'dst', '=', 'read', '->', 'btn_not_over', ';', 'else', 'dst', '=', 'read', '->', 'btn_not_active', ';', '}', 'switch', '(', 'act', '->', 'type', ')', '{', 'case', 'GF_SWF_AS3_WAIT_FOR_FRAME', ':', '/', '/', '\t\tread', '->', 'wait_frame', '=', 'act', '->', 'frame_number', ';', 'break', ';', 'case', 'GF_SWF_AS3_GOTO_FRAME', ':', 'if', '(', 'act', '->', 'frame_number', '>', 'read', '->', 'current_frame', ')', 'read', '->', 'wait_frame', '=', 'act', '->', 'frame_number', ';', 'time', '=', 'act', '->', 'frame_number', '?', 'act', '->', 'frame_number', '+', '1', ':', '0', ';', 'time', '/=', 'read', '->', 'frame_rate', ';', 's2b_control_sprite', '(', 'read', ',', 'dst', ',', 'read', '->', 'current_sprite_id', ',', '0', ',', '1', ',', 'time', ',', '0', ')', ';', 'break', ';', 'case', 'GF_SWF_AS3_GET_URL', ':', 'n', '=', 'gf_sg_find_node_by_name', '(', 'read', '->', 'load', '->', 'scene_graph', ',', '""""', ')', ';', 'sfurl', '.', 'OD_ID', '=', '0', ';', 'sfurl', '.', 'url', '=', 'act', '->', 'url', ';', 'url', '.', 'count', '=', '1', ';', 'url', '.', 'vals', '=', '&', 'sfurl', ';', 's2b_set_field', '(', 'read', ',', 'dst', ',', 'n', ',', '""""', ',', '-', '1', ',', 'GF_SG_VRML_MFURL', ',', '&', 'url', ',', '0', ')', ';', 's2b_set_field', '(', 'read', ',', 'dst', ',', 'n', ',', '""""', ',', '-', '1', ',', 'GF_SG_VRML_MFSTRING', ',', '&', 'url', ',', '0', ')', ';', 'bval', '=', '1', ';', 's2b_set_field', '(', 'read', ',', 'dst', ',', 'n', ',', '""""', ',', '-', '1', ',', 'GF_SG_VRML_SFBOOL', ',', '&', 'bval', ',', '0', ')', ';', 'break', ';', 'case', 'GF_SWF_AS3_PLAY', ':', 's2b_control_sprite', '(', 'read', ',', 'dst', ',', 'read', '->', 'current_sprite_id', ',', '0', ',', '1', ',', '-', '1', ',', '0', ')', ';', 'break', ';', 'case', 'GF_SWF_AS3_STOP', ':', 's2b_control_sprite', '(', 'read', ',', 'dst', ',', 'read', '->', 'current_sprite_id', ',', '1', ',', '0', ',', '0', ',', '0', ')', ';', 'break', ';', 'default', ':', 'return', '0', ';', '}', 'return', '1', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1291,"['updatepidfile', '(', 'void', ')', '{', 'int', 'fd', ';', 'char', 'buf', '[', '42', ']', ';', 'if', '(', 'SNCHECK', '(', 'snprintf', '(', 'buf', ',', 'sizeof', 'buf', ',', '""""', ',', '(', 'unsigned', 'long', ')', 'getpid', '(', ')', ')', ',', 'sizeof', 'buf', ')', ')', '{', 'return', ';', '}', 'if', '(', 'unlink', '(', 'pid_file', ')', '!=', '0', '&&', 'errno', '!=', 'ENOENT', ')', '{', 'return', ';', '}', 'if', '(', '(', 'fd', '=', 'open', '(', 'pid_file', ',', 'O_CREAT', '|', 'O_WRONLY', '|', 'O_TRUNC', '|', 'O_NOFOLLOW', ',', '(', 'mode_t', ')', '0644', ')', ')', '==', '-', '1', ')', '{', 'return', ';', '}', 'if', '(', 'safe_write', '(', 'fd', ',', 'buf', ',', 'strlen', '(', 'buf', ')', ')', '!=', '0', ')', '{', '(', 'void', ')', 'ftruncate', '(', 'fd', ',', '(', 'off_t', ')', '0', ')', ';', '}', '(', 'void', ')', 'close', '(', 'fd', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1292,"['adi_init_input', '(', 'struct', 'adi', '*', 'adi', ',', 'struct', 'adi_port', '*', 'port', ',', 'int', 'half', ')', '{', 'struct', 'input_dev', '*', 'input_dev', ';', 'char', 'buf', '[', 'ADI_MAX_NAME_LENGTH', ']', ';', 'int', 'i', ',', 't', ';', 'adi', '->', 'dev', '=', 'input_dev', '=', 'input_allocate_device', '(', ')', ';', 'if', '(', '!input_dev', ')', 'return', '-', 'ENOMEM', ';', 't', '=', 'adi', '->', 'id', '<', 'ADI_ID_MAX', '?', 'adi', '->', 'id', ':', 'ADI_ID_MAX', ';', 'snprintf', '(', 'buf', ',', 'ADI_MAX_PHYS_LENGTH', ',', 'adi_names', '[', 't', ']', ',', 'adi', '->', 'id', ')', ';', 'snprintf', '(', 'adi', '->', 'name', ',', 'ADI_MAX_NAME_LENGTH', ',', '""""', ',', 'buf', ',', 'adi', '->', 'cname', ')', ';', 'snprintf', '(', 'adi', '->', 'phys', ',', 'ADI_MAX_PHYS_LENGTH', ',', '""""', ',', 'port', '->', 'gameport', '->', 'phys', ',', 'half', ')', ';', 'adi', '->', 'abs', '=', 'adi_abs', '[', 't', ']', ';', 'adi', '->', 'key', '=', 'adi_key', '[', 't', ']', ';', 'input_dev', '->', 'name', '=', 'adi', '->', 'name', ';', 'input_dev', '->', 'phys', '=', 'adi', '->', 'phys', ';', 'input_dev', '->', 'id', '.', 'bustype', '=', 'BUS_GAMEPORT', ';', 'input_dev', '->', 'id', '.', 'vendor', '=', 'GAMEPORT_ID_VENDOR_LOGITECH', ';', 'input_dev', '->', 'id', '.', 'product', '=', 'adi', '->', 'id', ';', 'input_dev', '->', 'id', '.', 'version', '=', '0x0100', ';', 'input_dev', '->', 'dev', '.', 'parent', '=', '&', 'port', '->', 'gameport', '->', 'dev', ';', 'input_set_drvdata', '(', 'input_dev', ',', 'port', ')', ';', 'input_dev', '->', 'open', '=', 'adi_open', ';', 'input_dev', '->', 'close', '=', 'adi_close', ';', 'input_dev', '->', 'evbit', '[', '0', ']', '=', 'BIT_MASK', '(', 'EV_KEY', ')', '|', 'BIT_MASK', '(', 'EV_ABS', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'adi', '->', 'axes10', '+', 'adi', '->', 'axes8', '+', '(', 'adi', '->', 'hats', '+', '(', 'adi', '->', 'pad', '!=', '-', '1', ')', ')', '*', '2', ';', 'i', '++', ')', 'set_bit', '(', 'adi', '->', 'abs', '[', 'i', ']', ',', 'input_dev', '->', 'absbit', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'adi', '->', 'buttons', ';', 'i', '++', ')', 'set_bit', '(', 'adi', '->', 'key', '[', 'i', ']', ',', 'input_dev', '->', 'keybit', ')', ';', 'return', '0', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1293,"['load', '(', 'void', ')', '{', 'ACodeHeader', 'tmphdr', ';', 'Aword', 'crc', '=', '0', ';', 'char', 'err', '[', '100', ']', ';', 'readTemporaryHeader', '(', '&', 'tmphdr', ')', ';', 'checkVersion', '(', '&', 'tmphdr', ')', ';', 'if', '(', 'littleEndian', '(', ')', ')', 'reverseHdr', '(', '&', 'tmphdr', ')', ';', 'if', '(', 'tmphdr', '.', 'size', '<=', 'sizeof', '(', 'ACodeHeader', ')', '/', 'sizeof', '(', 'Aword', ')', ')', 'syserr', '(', '""""', ')', ';', 'loadAndCheckMemory', '(', 'tmphdr', ',', 'crc', ',', 'err', ')', ';', 'reverseMemory', '(', ')', ';', 'setupHeader', '(', 'tmphdr', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1294,"['event', '(', 'QEvent', '*', 'e', ')', '{', 'if', '(', 'e', '->', 'type', '(', ')', '==', 'static_cast', '<', 'QEvent', ':', ':', 'Type', '>', '(', 'DOMCFResizeEvent', ')', ')', '{', 'dispatchWindowEvent', '(', 'EventImpl', ':', ':', 'RESIZE_EVENT', ',', 'false', ',', 'false', ')', ';', 'e', '->', 'accept', '(', ')', ';', 'return', 'true', ';', '}', 'return', 'QObject', ':', ':', 'event', '(', 'e', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1295,"['e_int_config_mime_edit_done', '(', 'void', '*', 'data', ')', '{', 'E_Config_Dialog_Data', '*', 'cfdata', ';', 'cfdata', '=', 'data', ';', 'if', '(', '!cfdata', ')', 'return', ';', 'if', '(', 'cfdata', '->', 'edit_dlg', ')', 'cfdata', '->', 'edit_dlg', '=', 'NULL', ';', '_tlist_cb_change', '(', 'cfdata', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1296,"['setToAllocation', '(', 'void', ')', '{', 'setWidth', '(', 'm_MyAllocation', '.', 'width', ')', ';', 'if', '(', 'fp_VerticalContainer', ':', ':', 'getHeight', '(', ')', '!=', 'm_MyAllocation', '.', 'height', ')', '{', '/', '/', '/', '/', 'clear', 'and', 'delete', 'broken', 'tables', 'before', 'their', 'height', 'changes', '.', '/', '/', 'Doing', 'this', 'clear', 'at', 'this', 'point', 'makes', 'a', 'table', 'flicker', 'when', '/', '/', 'height', 'but', 'it', 'does', 'remove', 'the', 'last', 'the', 'pixel', 'dirt', 'with', 'tables', '.', '/', '/', 'deleteBrokenTables', '(', 'true', ',', 'true', ')', ';', '}', 'setHeight', '(', 'getTotalTableHeight', '(', ')', ')', ';', 'setMaxHeight', '(', 'getTotalTableHeight', '(', ')', ')', ';', 'xxx_UT_DEBUGMSG', '(', '(', '""""', ',', 'm_MyAllocation', '.', 'height', ')', ')', ';', 'fp_CellContainer', '*', 'pCon', '=', 'static_cast', '<', 'fp_CellContainer', '*', '>', '(', 'getNthCon', '(', '0', ')', ')', ';', 'while', '(', 'pCon', ')', '{', 'pCon', '->', 'setToAllocation', '(', ')', ';', 'pCon', '=', 'static_cast', '<', 'fp_CellContainer', '*', '>', '(', 'pCon', '->', 'getNext', '(', ')', ')', ';', '}', 'pCon', '=', 'static_cast', '<', 'fp_CellContainer', '*', '>', '(', 'getNthCon', '(', '0', ')', ')', ';', 'while', '(', 'pCon', ')', '{', 'pCon', '->', 'setLineMarkers', '(', ')', ';', 'pCon', '->', 'doVertAlign', '(', ')', ';', 'pCon', '=', 'static_cast', '<', 'fp_CellContainer', '*', '>', '(', 'pCon', '->', 'getNext', '(', ')', ')', ';', '}', 'setYBottom', '(', 'getTotalTableHeight', '(', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1297,"['test_links', '(', 'hid_t', 'fapl', ')', '{', 'hid_t', 'gid', ',', 'gid1', ';', 'hsize_t', 'i', ';', 'MESSAGE', '(', '5', ',', '(', '""""', ')', ')', ';', 'file', '=', 'H5Fcreate', '(', 'DATAFILE', ',', 'H5F_ACC_TRUNC', ',', 'H5P_DEFAULT', ',', 'fapl', ')', ';', 'CHECK', '(', 'file', ',', 'FAIL', ',', '""""', ')', ';', 'gid', '=', 'H5Gcreate2', '(', 'file', ',', '""""', ',', 'H5P_DEFAULT', ',', 'H5P_DEFAULT', ',', 'H5P_DEFAULT', ')', ';', 'CHECK', '(', 'gid', ',', 'FAIL', ',', '""""', ')', ';', 'gid1', '=', 'H5Gcreate2', '(', 'file', ',', '""""', ',', 'H5P_DEFAULT', ',', 'H5P_DEFAULT', ',', 'H5P_DEFAULT', ')', ';', 'CHECK', '(', 'gid1', ',', 'FAIL', ',', '""""', ')', ';', 'ret', '=', 'H5Lcreate_soft', '(', '""""', ',', 'gid', ',', '""""', ',', 'H5P_DEFAULT', ',', 'H5P_DEFAULT', ')', ';', 'CHECK', '(', 'ret', ',', 'FAIL', ',', '""""', ')', ';', 'ret', '=', 'H5Lcreate_hard', '(', 'gid', ',', '""""', ',', 'H5L_SAME_LOC', ',', '""""', ',', 'H5P_DEFAULT', ',', 'H5P_DEFAULT', ')', ';', 'CHECK', '(', 'ret', ',', 'FAIL', ',', '""""', ')', ';', 'ret', '=', 'H5Gget_info', '(', 'gid', ',', '&', 'ginfo', ')', ';', 'CHECK', '(', 'ret', ',', 'FAIL', ',', '""""', ')', ';', 'VERIFY', '(', 'ginfo', '.', 'nlinks', ',', '3', ',', '""""', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'ginfo', '.', 'nlinks', ';', 'i', '++', ')', '{', 'name_len', '=', 'H5Lget_name_by_idx', '(', 'gid', ',', '""""', ',', 'H5_INDEX_NAME', ',', 'H5_ITER_INC', ',', 'i', ',', 'obj_name', ',', '(', 'size_t', ')', 'NAMELEN', ',', 'H5P_DEFAULT', ')', ';', 'CHECK', '(', 'name_len', ',', 'FAIL', ',', '""""', ')', ';', 'ret', '=', 'H5Lget_info_by_idx', '(', 'gid', ',', '""""', ',', 'H5_INDEX_NAME', ',', 'H5_ITER_INC', ',', '(', 'hsize_t', ')', 'i', ',', '&', 'linfo', ',', 'H5P_DEFAULT', ')', ';', 'CHECK', '(', 'ret', ',', 'FAIL', ',', '""""', ')', ';', 'if', '(', 'linfo', '.', 'type', '==', 'H5L_TYPE_HARD', ')', '{', 'ret', '=', 'H5Oget_info_by_idx', '(', 'gid', ',', '""""', ',', 'H5_INDEX_NAME', ',', 'H5_ITER_INC', ',', '(', 'hsize_t', ')', 'i', ',', '&', 'oinfo', ',', 'H5P_DEFAULT', ')', ';', 'CHECK', '(', 'ret', ',', 'FAIL', ',', '""""', ')', ';', 'if', '(', '!HDstrcmp', '(', 'obj_name', ',', '""""', ')', ')', 'VERIFY', '(', 'oinfo', '.', 'type', ',', 'H5O_TYPE_GROUP', ',', '""""', ')', ';', 'else', 'if', '(', '!HDstrcmp', '(', 'obj_name', ',', '""""', ')', ')', 'VERIFY', '(', 'oinfo', '.', 'type', ',', 'H5O_TYPE_GROUP', ',', '""""', ')', ';', 'else', 'if', '(', '!HDstrcmp', '(', 'obj_name', ',', '""""', ')', ')', 'VERIFY', '(', 'linfo', '.', 'type', ',', 'H5L_TYPE_SOFT', ',', '""""', ')', ';', 'CHECK', '(', '0', ',', '0', ',', '""""', ')', ';', 'ret', '=', 'H5Gclose', '(', 'gid', ')', ';', 'CHECK', '(', 'ret', ',', 'FAIL', ',', '""""', ')', ';', 'ret', '=', 'H5Gclose', '(', 'gid1', ')', ';', 'CHECK', '(', 'ret', ',', 'FAIL', ',', '""""', ')', ';', 'ret', '=', 'H5Fclose', '(', 'file', ')', ';', 'CHECK', '(', 'ret', ',', 'FAIL', ',', '""""', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  True,CWE-476  False,CWE-other  False
1298,"['init_ivtv_i2c', '(', 'struct', 'ivtv', '*', 'itv', ')', '{', 'int', 'retval', ';', 'IVTV_DEBUG_I2C', '(', '""""', ')', ';', '/', '*', 'Sanity', 'checks', 'for', 'the', 'I2C', 'hardware', 'arrays', '.', 'They', 'must', 'be', '*', 'same', 'size', '.', 'if', '(', 'ARRAY_SIZE', '(', 'hw_devicenames', ')', '!=', 'ARRAY_SIZE', '(', 'hw_addrs', ')', ')', '{', 'IVTV_ERR', '(', '""""', ')', ';', 'return', '-', 'ENODEV', ';', '}', 'if', '(', 'itv', '->', 'options', '.', 'newi2c', '>', '0', ')', '{', 'itv', '->', 'i2c_adap', '=', 'ivtv_i2c_adap_hw_template', ';', '}', 'else', '{', 'itv', '->', 'i2c_adap', '=', 'ivtv_i2c_adap_template', ';', 'itv', '->', 'i2c_algo', '=', 'ivtv_i2c_algo_template', ';', '}', 'itv', '->', 'i2c_algo', '.', 'udelay', '=', 'itv', '->', 'options', '.', 'i2c_clock_period', '/', '2', ';', 'itv', '->', 'i2c_algo', '.', 'data', '=', 'itv', ';', 'itv', '->', 'i2c_adap', '.', 'algo_data', '=', '&', 'itv', '->', 'i2c_algo', ';', 'sprintf', '(', 'itv', '->', 'i2c_adap', '.', 'name', '+', 'strlen', '(', 'itv', '->', 'i2c_adap', '.', 'name', ')', ',', '""""', ',', 'itv', '->', 'instance', ')', ';', 'i2c_set_adapdata', '(', '&', 'itv', '->', 'i2c_adap', ',', '&', 'itv', '->', 'v4l2_dev', ')', ';', 'itv', '->', 'i2c_client', '=', 'ivtv_i2c_client_template', ';', 'itv', '->', 'i2c_client', '.', 'adapter', '=', '&', 'itv', '->', 'i2c_adap', ';', 'itv', '->', 'i2c_adap', '.', 'dev', '.', 'parent', '=', '&', 'itv', '->', 'pdev', '->', 'dev', ';', 'IVTV_DEBUG_I2C', '(', '""""', ')', ';', 'ivtv_setscl', '(', 'itv', ',', '1', ')', ';', 'ivtv_setsda', '(', 'itv', ',', '1', ')', ';', 'if', '(', 'itv', '->', 'options', '.', 'newi2c', '>', '0', ')', 'retval', '=', 'i2c_add_adapter', '(', '&', 'itv', '->', 'i2c_adap', ')', ';', 'retval', '=', 'i2c_bit_add_bus', '(', '&', 'itv', '->', 'i2c_adap', ')', ';', 'return', 'retval', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1299,"['__tzstring', '(', 'const', 'char', '*', 's', ')', '{', 'char', '*', 'p', ';', 'struct', 'tzstring_l', '*', 't', ',', '*', 'u', ',', '*', 'new', ';', 'size_t', 'len', '=', 'strlen', '(', 's', ')', ';', '/', '*', 'Walk', 'the', 'list', 'and', 'look', 'for', 'a', 'match', '.', 'If', 'this', 'string', 'is', 'the', 'for', '(', 'u', '=', 't', '=', 'tzstring_list', ';', 't', ';', 'u', '=', 't', ',', 't', '=', 't', '->', 'next', ')', 'if', '(', 'len', '<=', 't', '->', 'len', ')', '{', 'p', '=', '&', 't', '->', 'data', '[', 't', '->', 'len', '-', 'len', ']', ';', 'if', '(', 'strcmp', '(', 's', ',', 'p', ')', '==', '0', ')', 'return', 'p', ';', '}', 'new', '=', 'malloc', '(', 'sizeof', '(', 'struct', 'tzstring_l', ')', '+', 'len', '+', '1', ')', ';', 'if', '(', '!new', ')', 'return', 'NULL', ';', 'new', '->', 'next', '=', 'NULL', ';', 'new', '->', 'len', '=', 'len', ';', 'strcpy', '(', 'new', '->', 'data', ',', 's', ')', ';', 'if', '(', 'u', ')', 'u', '->', 'next', '=', 'new', ';', 'tzstring_list', '=', 'new', ';', 'return', 'new', '->', 'data', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1300,"['front_chdir', '(', 'const', 'char', '*', 'dir', ')', '{', 'int', 'rc', ';', 'if', '(', 'dir', '==', 'NULL', ')', '{', 'cerr', '<<', '""""', '<<', 'endl', ';', 'return', 'false', ';', '}', '#if', 'defined', '(', 'WIN32', ')', 'rc', '=', '_chdir', '(', 'dir', ')', ';', 'rc', '=', 'chdir', '(', 'dir', ')', ';', 'if', '(', 'rc', '==', '-', '1', ')', '{', 'switch', '(', 'errno', ')', '{', 'case', 'EACCES', ':', 'cerr', '<<', '""""', '<<', 'dir', '<<', 'endl', ';', 'break', ';', 'case', 'EIO', ':', 'cerr', '<<', '""""', '<<', 'dir', '<<', 'endl', ';', 'break', ';', 'case', 'ENOENT', ':', 'cerr', '<<', '""""', '<<', 'dir', '<<', 'endl', ';', 'break', ';', 'case', 'ENOTDIR', ':', 'cerr', '<<', '""""', '<<', 'dir', '<<', 'endl', ';', 'break', ';', 'default', ':', 'cerr', '<<', '""""', '<<', 'dir', '<<', 'endl', ';', 'break', ';', '}', 'return', 'false', ';', '}', 'return', 'true', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1301,"['find_ticket_state_attr_legacy', '(', 'cib_t', '*', 'the_cib', ',', 'const', 'char', '*', 'attr', ',', 'const', 'char', '*', 'ticket_id', ',', 'const', 'char', '*', 'set_type', ',', 'const', 'char', '*', 'set_name', ',', 'const', 'char', '*', 'attr_id', ',', 'const', 'char', '*', 'attr_name', ',', 'char', '*', '*', 'value', ')', '{', 'int', 'offset', '=', '0', ';', 'static', 'int', 'xpath_max', '=', '1024', ';', 'int', 'rc', '=', 'pcmk_ok', ';', 'xmlNode', '*', 'xml_search', '=', 'NULL', ';', 'char', '*', 'xpath_string', '=', 'NULL', ';', 'CRM_ASSERT', '(', 'value', '!=', 'NULL', ')', ';', '*', 'value', '=', 'NULL', ';', 'xpath_string', '=', 'calloc', '(', '1', ',', 'xpath_max', ')', ';', 'offset', '+=', 'snprintf', '(', 'xpath_string', '+', 'offset', ',', 'xpath_max', '-', 'offset', ',', '""""', ',', '""""', ')', ';', 'if', '(', 'set_type', ')', '{', 'offset', '+=', 'snprintf', '(', 'xpath_string', '+', 'offset', ',', 'xpath_max', '-', 'offset', ',', '""""', ',', 'set_type', ')', ';', 'if', '(', 'set_name', ')', '{', 'offset', '+=', 'snprintf', '(', 'xpath_string', '+', 'offset', ',', 'xpath_max', '-', 'offset', ',', '""""', '%', 's\\""""', ',', 'set_name', ')', ';', '}', '}', 'offset', '+=', 'snprintf', '(', 'xpath_string', '+', 'offset', ',', 'xpath_max', '-', 'offset', ',', '""""', ')', ';', 'if', '(', 'attr_id', ')', '{', 'offset', '+=', 'snprintf', '(', 'xpath_string', '+', 'offset', ',', 'xpath_max', '-', 'offset', ',', '""""', '%', 's\\""""', ',', 'attr_id', ')', ';', '}', 'if', '(', 'attr_name', ')', '{', 'const', 'char', '*', 'attr_prefix', '=', 'NULL', ';', 'char', '*', 'long_key', '=', 'NULL', ';', 'if', '(', 'crm_str_eq', '(', 'attr_name', ',', '""""', ',', 'TRUE', ')', ')', '{', 'attr_prefix', '=', '""""', ';', '}', 'else', '{', 'attr_prefix', '=', 'attr_name', ';', '}', 'long_key', '=', 'crm_concat', '(', 'attr_prefix', ',', 'ticket_id', ',', ""''"", ')', ';', 'if', '(', 'attr_id', ')', '{', 'offset', '+=', 'snprintf', '(', 'xpath_string', '+', 'offset', ',', 'xpath_max', '-', 'offset', ',', '""""', ')', ';', '}', 'offset', '+=', 'snprintf', '(', 'xpath_string', '+', 'offset', ',', 'xpath_max', '-', 'offset', ',', '""""', '%', 's\\""""', ',', 'long_key', ')', ';', 'free', '(', 'long_key', ')', ';', '}', 'offset', '+=', 'snprintf', '(', 'xpath_string', '+', 'offset', ',', 'xpath_max', '-', 'offset', ',', '""""', ')', ';', 'rc', '=', 'the_cib', '->', 'cmds', '->', 'query', '(', 'the_cib', ',', 'xpath_string', ',', '&', 'xml_search', ',', 'cib_sync_call', '|', 'cib_scope_local', '|', 'cib_xpath', ')', ';', 'if', '(', 'rc', '!=', 'pcmk_ok', ')', '{', 'goto', 'bail', ';', '}', 'crm_log_xml_debug', '(', 'xml_search', ',', '""""', ')', ';', 'if', '(', 'xml_has_children', '(', 'xml_search', ')', ')', '{', 'xmlNode', '*', 'child', '=', 'NULL', ';', 'rc', '=', '-', 'EINVAL', ';', 'fprintf', '(', 'stdout', ',', '""""', ',', 'attr_name', ')', ';', 'for', '(', 'child', '=', '__xml_first_child', '(', 'xml_search', ')', ';', 'child', '!=', 'NULL', ';', 'child', '=', '__xml_next', '(', 'child', ')', ')', '{', 'fprintf', '(', 'stdout', ',', '""""', ',', 'crm_element_value', '(', 'child', ',', 'XML_NVPAIR_ATTR_VALUE', ')', ',', 'ID', '(', 'child', ')', ')', ';', '}', '}', 'else', '{', 'const', 'char', '*', 'tmp', '=', 'crm_element_value', '(', 'xml_search', ',', 'attr', ')', ';', 'if', '(', 'tmp', ')', '{', '*', 'value', '=', 'strdup', '(', 'tmp', ')', ';', '}', '}', 'bail', ':', 'free', '(', 'xpath_string', ')', ';', 'free_xml', '(', 'xml_search', ')', ';', 'return', 'rc', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1302,"['news_command', '(', 'char', '*', 'arg', ',', 'struct', 'session', '*', 'ses', ')', '{', 'char', 'line', '[', 'BUFFER_SIZE', ']', ';', 'FILE', '*', 'news', '=', 'fopen', '(', 'NEWS_FILE', ',', '""""', ')', ';', '#ifdef', 'if', '(', '!news', ')', 'news', '=', 'fopen', '(', 'DATA_PATH', '""""', 'NEWS_FILE', ',', '""""', ')', ';', 'if', '(', 'news', ')', '{', 'tintin_printf', '(', 'ses', ',', '""""', ')', ';', 'while', '(', 'fgets', '(', 'line', ',', 'BUFFER_SIZE', ',', 'news', ')', ')', '{', '*', '(', 'char', '*', ')', 'strchr', '(', 'line', ',', ""''"", ')', '=', '0', ';', 'tintin_printf', '(', 'ses', ',', '""""', ',', 'line', ')', ';', '}', 'tintin_printf', '(', 'ses', ',', '""""', ')', ';', '}', '#ifdef', 'tintin_eprintf', '(', 'ses', ',', '""""', ',', 'NEWS_FILE', ',', 'DATA_PATH', ')', ';', 'tintin_eprintf', '(', 'ses', ',', '""""', ',', 'NEWS_FILE', ')', ';', 'prompt', '(', 'ses', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1303,"['ArgumentOption_is_set', '(', 'ArgumentOption', '*', 'ao', ')', '{', 'if', '(', 'ao', '->', 'arg_list', ')', 'return', 'ao', '->', 'arg_list', '->', 'len', '?', 'TRUE', ':', 'FALSE', ';', 'return', 'ao', '->', 'arg_value', '?', 'TRUE', ':', 'FALSE', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1304,"['existsTimeLineHistoryFile', '(', 'char', '*', 'basedir', ',', 'TimeLineID', 'tli', ')', '{', 'char\t\tpath', '[', 'MAXPGPATH', ']', ';', 'char\t\thistfname', '[', 'MAXFNAMELEN', ']', ';', 'int\t\t\tfd', ';', '/', '*', '*', 'Timeline', '1', 'never', 'has', 'a', 'history', 'file', '.', 'We', 'treat', 'that', 'as', 'if', 'it', 'existed', ',', '*', 'since', 'we', 'never', 'need', 'to', 'stream', 'it', '.', 'if', '(', 'tli', '==', '1', ')', 'return', 'true', ';', 'TLHistoryFileName', '(', 'histfname', ',', 'tli', ')', ';', 'snprintf', '(', 'path', ',', 'sizeof', '(', 'path', ')', ',', '""""', ',', 'basedir', ',', 'histfname', ')', ';', 'fd', '=', 'open', '(', 'path', ',', 'O_RDONLY', '|', 'PG_BINARY', ',', '0', ')', ';', 'if', '(', 'fd', '<', '0', ')', '{', 'if', '(', 'errno', '!=', 'ENOENT', ')', 'fprintf', '(', 'stderr', ',', '_', '(', '""""', '%', 's\\""""', ')', ',', 'progname', ',', 'path', ',', 'strerror', '(', 'errno', ')', ')', ';', 'return', 'false', ';', '}', '{', 'close', '(', 'fd', ')', ';', 'return', 'true', ';', '}', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1305,"['dwc_alloc_chan_resources', '(', 'struct', 'dma_chan', '*', 'chan', ')', '{', 'struct', 'dw_dma_chan\t', '*', 'dwc', '=', 'to_dw_dma_chan', '(', 'chan', ')', ';', 'struct', 'dw_dma\t\t', '*', 'dw', '=', 'to_dw_dma', '(', 'chan', '->', 'device', ')', ';', 'struct', 'dw_desc\t\t', '*', 'desc', ';', 'int\t\t\ti', ';', 'unsigned', 'long\t\tflags', ';', 'dev_vdbg', '(', 'chan2dev', '(', 'chan', ')', ',', '""""', ',', '__func__', ')', ';', 'if', '(', 'dma_readl', '(', 'dw', ',', 'CH_EN', ')', '&', 'dwc', '->', 'mask', ')', '{', 'dev_dbg', '(', 'chan2dev', '(', 'chan', ')', ',', '""""', ')', ';', 'return', '-', 'EIO', ';', '}', 'dma_cookie_init', '(', 'chan', ')', ';', '/', '*', '*', 'NOTE', ':', 'some', 'controllers', 'may', 'have', 'additional', 'features', 'that', '*', 'need', 'to', 'initialize', 'here', ',', 'like', '""""', '(', '*', ""doesn't"", 'mean', 'what', 'you', 'think', 'it', 'means', ')', ',', 'and', 'status', 'writeback', '.', '/', '*', '*', 'We', 'need', 'controller', '-', 'specific', 'data', 'to', 'set', 'up', 'slave', 'transfers', '.', 'if', '(', 'chan', '->', 'private', '&&', '!dw_dma_filter', '(', 'chan', ',', 'chan', '->', 'private', ')', ')', '{', 'dev_warn', '(', 'chan2dev', '(', 'chan', ')', ',', '""""', ')', ';', 'return', '-', 'EINVAL', ';', '}', 'if', '(', '!dw', '->', 'in_use', ')', 'dw_dma_on', '(', 'dw', ')', ';', 'dw', '->', 'in_use', '|=', 'dwc', '->', 'mask', ';', 'spin_lock_irqsave', '(', '&', 'dwc', '->', 'lock', ',', 'flags', ')', ';', 'i', '=', 'dwc', '->', 'descs_allocated', ';', 'while', '(', 'dwc', '->', 'descs_allocated', '<', 'NR_DESCS_PER_CHANNEL', ')', '{', 'dma_addr_t', 'phys', ';', 'spin_unlock_irqrestore', '(', '&', 'dwc', '->', 'lock', ',', 'flags', ')', ';', 'desc', '=', 'dma_pool_alloc', '(', 'dw', '->', 'desc_pool', ',', 'GFP_ATOMIC', ',', '&', 'phys', ')', ';', 'if', '(', '!desc', ')', 'goto', 'err_desc_alloc', ';', 'memset', '(', 'desc', ',', '0', ',', 'sizeof', '(', 'struct', 'dw_desc', ')', ')', ';', 'INIT_LIST_HEAD', '(', '&', 'desc', '->', 'tx_list', ')', ';', 'dma_async_tx_descriptor_init', '(', '&', 'desc', '->', 'txd', ',', 'chan', ')', ';', 'desc', '->', 'txd', '.', 'tx_submit', '=', 'dwc_tx_submit', ';', 'desc', '->', 'txd', '.', 'flags', '=', 'DMA_CTRL_ACK', ';', 'desc', '->', 'txd', '.', 'phys', '=', 'phys', ';', 'dwc_desc_put', '(', 'dwc', ',', 'desc', ')', ';', 'spin_lock_irqsave', '(', '&', 'dwc', '->', 'lock', ',', 'flags', ')', ';', 'i', '=', '++', 'dwc', '->', 'descs_allocated', ';', '}', 'spin_unlock_irqrestore', '(', '&', 'dwc', '->', 'lock', ',', 'flags', ')', ';', 'dev_dbg', '(', 'chan2dev', '(', 'chan', ')', ',', '""""', ',', '__func__', ',', 'i', ')', ';', 'return', 'i', ';', 'err_desc_alloc', ':', 'dev_info', '(', 'chan2dev', '(', 'chan', ')', ',', '""""', ',', 'i', ')', ';', 'return', 'i', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1306,"['ExecSelect', '(', 'PTreeNode', '*', 'pt', ',', 'ObjStruct', '*', 'os', ',', 'int', 'numInputs', ',', 'Pointer', '*', 'inputs', ',', 'Pointer', 'result', ',', 'InvalidComponentHandle', '*', 'invalids', ',', 'InvalidComponentHandle', 'outInvalid', ')', '{', 'int', 'size0', '=', 'pt', '->', 'args', '->', 'metaType', '.', 'items', ';', 'int', 'size1', '=', 'pt', '->', 'args', '->', 'next', '->', 'metaType', '.', 'items', ';', 'int', 'i', ',', 'j', ',', 'k', ';', 'int', 'numBasic', ';', 'int', 'size', ';', 'int', 'subSize', ';', 'PTreeNode', '*', 'vect', ';', 'int', 'vectLen', ';', 'int', 'selector', ';', 'int', 'items', ';', 'int', 'allValid', '=', '(', 'invalids', '[', '0', ']', '==', 'NULL', '||', 'DXGetInvalidCount', '(', 'invalids', '[', '0', ']', ')', '==', '0', ')', '&&', '(', 'invalids', '[', '1', ']', '==', 'NULL', '||', 'DXGetInvalidCount', '(', 'invalids', '[', '1', ']', ')', '==', '0', ')', ';', '#ifdef', 'DXDebug', '(', '""""', ',', '""""', ',', '__LINE__', ',', 'pt', ',', 'os', ')', ';', '/', '*', 'Get', 'type', 'of', 'arguments', ',', 'and', 'allocate', 'nargs', 'of', 'pointers', '.', '*', 'For', 'each', 'arg', ',', 'allocate', 'a', 'result', 'array', ',', 'and', 'execute', 'vect', '=', 'pt', '->', 'args', ';', 'if', '(', 'vect', '->', 'metaType', '.', 'rank', '==', '0', ')', '{', 'subSize', '=', 'DXTypeSize', '(', 'vect', '->', 'metaType', '.', 'type', ')', '*', 'DXCategorySize', '(', 'vect', '->', 'metaType', '.', 'category', ')', ';', 'size', '=', 'subSize', ';', 'vectLen', '=', '1', ';', '}', 'else', '{', 'for', '(', 'numBasic', '=', '1', ',', 'i', '=', '1', ';', 'i', '<', 'vect', '->', 'metaType', '.', 'rank', ';', '++', 'i', ')', '{', 'numBasic', '*=', 'vect', '->', 'metaType', '.', 'shape', '[', 'i', ']', ';', '}', 'subSize', '=', 'DXTypeSize', '(', 'vect', '->', 'metaType', '.', 'type', ')', '*', 'DXCategorySize', '(', 'vect', '->', 'metaType', '.', 'category', ')', '*', 'numBasic', ';', 'vectLen', '=', 'vect', '->', 'metaType', '.', 'shape', '[', '0', ']', ';', 'size', '=', 'subSize', '*', 'vectLen', ';', '}', 'items', '=', 'pt', '->', 'metaType', '.', 'items', ';', 'for', '(', 'i', '=', 'j', '=', 'k', '=', '0', ';', 'i', '<', 'items', ';', '++', 'i', ')', '{', 'if', '(', 'allValid', '||', '_dxfComputeInvalidOr', '(', 'outInvalid', ',', 'i', ',', 'invalids', '[', '0', ']', ',', 'j', ',', 'invalids', '[', '1', ']', ',', 'k', ')', ')', '{', 'selector', '=', '*', '(', 'int', '*', ')', '(', '(', '(', 'char', '*', ')', 'inputs', '[', '1', ']', ')', '+', 'k', '*', 'sizeof', '(', 'int', ')', ')', ';', 'if', '(', 'selector', '<', 'vectLen', '&&', 'selector', '>=', '0', ')', '{', 'bcopy', '(', '(', 'Pointer', ')', '(', '(', '(', 'char', '*', ')', 'inputs', '[', '0', ']', ')', '+', '(', 'j', '*', 'size', ')', '+', 'selector', '*', 'subSize', ')', ',', '(', 'Pointer', ')', '(', '(', '(', 'char', '*', ')', 'result', ')', '+', '(', 'i', '*', 'subSize', ')', ')', ',', 'subSize', ')', ';', '}', 'else', '{', 'DXSetError', '(', 'ERROR_BAD_TYPE', ',', '""""', ',', 'selector', ',', 'vectLen', ')', ';', 'return', '(', 'ERROR', ')', ';', '}', '}', 'if', '(', 'size0', '!=', '1', ')', '++', 'j', ';', 'if', '(', 'size1', '!=', '1', ')', '++', 'k', ';', '}', 'return', '(', 'OK', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1307,"['OGRDODSGetVarPath', '(', 'BaseType', '*', 'poTarget', ')', '{', 'string', 'oFullName', ';', 'oFullName', '=', 'poTarget', '->', 'name', '(', ')', ';', 'while', '(', '(', 'poTarget', '=', 'poTarget', '->', 'get_parent', '(', ')', ')', '!=', 'NULL', ')', '{', 'oFullName', '=', 'poTarget', '->', 'name', '(', ')', '+', '""""', '+', 'oFullName', ';', '}', 'return', 'oFullName', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1308,"['bt_store_piece_sha1', '(', 'torrent_ctx', '*', 'ctx', ')', '{', 'unsigned', 'char', '*', 'block', ';', 'unsigned', 'char', '*', 'hash', ';', 'if', '(', '(', 'ctx', '->', 'piece_count', '%', 'BT_BLOCK_SIZE', ')', '==', '0', ')', '{', 'block', '=', '(', 'unsigned', 'char', '*', ')', 'malloc', '(', 'BT_HASH_SIZE', '*', 'BT_BLOCK_SIZE', ')', ';', 'if', '(', 'block', '==', 'NULL', '||', '!bt_vector_add_ptr', '(', '&', 'ctx', '->', 'hash_blocks', ',', 'block', ')', ')', '{', 'if', '(', 'block', ')', 'free', '(', 'block', ')', ';', 'return', '0', ';', '}', '}', 'else', '{', 'block', '=', '(', 'unsigned', 'char', '*', ')', '(', 'ctx', '->', 'hash_blocks', '.', 'array', '[', 'ctx', '->', 'piece_count', '/', 'BT_BLOCK_SIZE', ']', ')', ';', '}', 'hash', '=', '&', 'block', '[', 'BT_HASH_SIZE', '*', '(', 'ctx', '->', 'piece_count', '%', 'BT_BLOCK_SIZE', ')', ']', ';', 'ctx', '->', 'piece_count', '++', ';', 'return', '1', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1309,"['xstrcat', '(', 'const', 'char', '*', 'arg1', ',', '.', '.', '.', ')', '{', 'const', 'char', '*', 'argptr', ';', 'char', '*', 'resptr', ',', '*', 'result', ';', 'int', 'nargs', '=', '0', ';', 'size_t', 'len', '=', '0', ';', 'va_list', 'valist', ';', 'va_start', '(', 'valist', ',', 'arg1', ')', ';', 'for', '(', 'argptr', '=', 'arg1', ';', 'argptr', '!=', 'NULL', ';', 'argptr', '=', 'va_arg', '(', 'valist', ',', 'char', '*', ')', ')', 'len', '+=', 'strlen', '(', 'argptr', ')', ';', 'va_end', '(', 'valist', ')', ';', 'result', '=', 'xmalloc', '(', 'len', '+', '1', ')', ';', 'resptr', '=', 'result', ';', 'va_start', '(', 'valist', ',', 'arg1', ')', ';', 'nargs', '=', '0', ';', 'for', '(', 'argptr', '=', 'arg1', ';', 'argptr', '!=', 'NULL', ';', 'argptr', '=', 'va_arg', '(', 'valist', ',', 'char', '*', ')', ')', '{', 'len', '=', 'strlen', '(', 'argptr', ')', ';', 'memcpy', '(', 'resptr', ',', 'argptr', ',', 'len', ')', ';', 'resptr', '+=', 'len', ';', '}', 'va_end', '(', 'valist', ')', ';', '*', 'resptr', '=', ""''"", ';', 'return', 'result', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1310,"['unpack_index_entry', '(', 'struct', 'cache_entry', '*', 'ce', ',', 'struct', 'unpack_trees_options', '*', 'o', ')', '{', 'struct', 'cache_entry', '*', 'src', '[', '5', ']', '=', '{', 'NULL', '}', ';', 'int', 'ret', ';', 'src', '[', '0', ']', '=', 'ce', ';', 'mark_ce_used', '(', 'ce', ',', 'o', ')', ';', 'if', '(', 'ce_stage', '(', 'ce', ')', ')', '{', 'if', '(', 'o', '->', 'skip_unmerged', ')', '{', 'add_entry', '(', 'o', ',', 'ce', ',', '0', ',', '0', ')', ';', 'return', '0', ';', '}', '}', 'ret', '=', 'call_unpack_fn', '(', 'src', ',', 'o', ')', ';', 'if', '(', 'ce_stage', '(', 'ce', ')', ')', 'mark_ce_used_same_name', '(', 'ce', ',', 'o', ')', ';', 'return', 'ret', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1311,"['Rule_compile_c2', '(', 'Node', '*', 'node', ')', '{', 'assert', '(', 'node', ')', ';', 'assert', '(', 'Rule', '==', 'node', '->', 'type', ')', ';', 'if', '(', '!node', '->', 'rule', '.', 'expression', ')', 'fprintf', '(', 'stderr', ',', '""""', ',', 'node', '->', 'rule', '.', 'name', ')', ';', '{', 'int', 'ko', '=', 'yyl', '(', ')', ',', 'safe', ';', 'if', '(', '(', '!', '(', 'RuleUsed', '&', 'node', '->', 'rule', '.', 'flags', ')', ')', '&&', '(', 'node', '!=', 'start', ')', ')', 'fprintf', '(', 'stderr', ',', '""""', ',', 'node', '->', 'rule', '.', 'name', ')', ';', 'safe', '=', '(', '(', 'Query', '==', 'node', '->', 'rule', '.', 'expression', '->', 'type', ')', '||', '(', 'Star', '==', 'node', '->', 'rule', '.', 'expression', '->', 'type', ')', ')', ';', 'fprintf', '(', 'output', ',', '""""', ',', 'node', '->', 'rule', '.', 'name', ')', ';', 'if', '(', '!safe', ')', 'save', '(', '0', ')', ';', 'if', '(', 'node', '->', 'rule', '.', 'variables', ')', 'fprintf', '(', 'output', ',', '""""', ',', 'countVariables', '(', 'node', '->', 'rule', '.', 'variables', ')', ')', ';', 'fprintf', '(', 'output', ',', '""""', '%', '%', 's\\\\n\\""""', '%', 's\\""""', ',', 'node', '->', 'rule', '.', 'name', ')', ';', 'Node_compile_c_ko', '(', 'node', '->', 'rule', '.', 'expression', ',', 'ko', ')', ';', 'fprintf', '(', 'output', ',', '""""', 'ok', '%', '%', 's', '@', '%', '%', 's\\\\n\\""""', '%', 's\\""""', ',', 'node', '->', 'rule', '.', 'name', ')', ';', 'if', '(', 'node', '->', 'rule', '.', 'variables', ')', 'fprintf', '(', 'output', ',', '""""', ',', 'countVariables', '(', 'node', '->', 'rule', '.', 'variables', ')', ')', ';', 'fprintf', '(', 'output', ',', '""""', ')', ';', 'if', '(', '!safe', ')', '{', 'label', '(', 'ko', ')', ';', 'restore', '(', '0', ')', ';', 'fprintf', '(', 'output', ',', '""""', 'fail', '%', '%', 's', '@', '%', '%', 's\\\\n\\""""', '%', 's\\""""', ',', 'node', '->', 'rule', '.', 'name', ')', ';', 'fprintf', '(', 'output', ',', '""""', ')', ';', '}', 'fprintf', '(', 'output', ',', '""""', ')', ';', '}', 'if', '(', 'node', '->', 'rule', '.', 'next', ')', 'Rule_compile_c2', '(', 'node', '->', 'rule', '.', 'next', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
1312,"['TraceGoodLine', '(', 'TraceData', '*', 'base', ',', 'TraceData', '*', 'end', ')', '{', 'int', 'dx', ',', 'dy', ';', 'double', 'diff', ';', 'TraceData', '*', 'pt', ';', 'if', '(', '(', 'dx', '=', 'end', '->', 'x', '-', 'base', '->', 'x', ')', '<', '0', ')', 'dx', '=', '-', 'dx', ';', 'if', '(', '(', 'dy', '=', 'end', '->', 'y', '-', 'base', '->', 'y', ')', '<', '0', ')', 'dy', '=', '-', 'dy', ';', 'if', '(', 'dy', '>', 'dx', ')', '{', 'dx', '=', 'end', '->', 'x', '-', 'base', '->', 'x', ';', 'dy', '=', 'end', '->', 'y', '-', 'base', '->', 'y', ';', 'for', '(', 'pt', '=', 'base', '->', 'next', ';', 'pt', '!=', 'end', ';', 'pt', '=', 'pt', '->', 'next', ')', '{', 'diff', '=', '(', 'pt', '->', 'y', '-', 'base', '->', 'y', ')', '*', 'dx', '/', '(', 'double', ')', 'dy', '+', 'base', '->', 'x', '-', 'pt', '->', 'x', ';', 'if', '(', 'diff', '>', 'line_wobble', '||', 'diff', '<', '-', 'line_wobble', ')', 'return', '(', 'false', ')', ';', '}', '}', 'else', '{', 'dx', '=', 'end', '->', 'x', '-', 'base', '->', 'x', ';', 'dy', '=', 'end', '->', 'y', '-', 'base', '->', 'y', ';', 'for', '(', 'pt', '=', 'base', '->', 'next', ';', 'pt', '!=', 'end', ';', 'pt', '=', 'pt', '->', 'next', ')', '{', 'diff', '=', '(', 'pt', '->', 'x', '-', 'base', '->', 'x', ')', '*', 'dy', '/', '(', 'double', ')', 'dx', '+', 'base', '->', 'y', '-', 'pt', '->', 'y', ';', 'if', '(', 'diff', '>', 'line_wobble', '||', 'diff', '<', '-', 'line_wobble', ')', 'return', '(', 'false', ')', ';', '}', '}', 'return', '(', 'true', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1313,"['cqueue_verify_attributes', '(', 'lListElem', '*', 'cqueue', ',', 'lList', '*', '*', 'answer_list', ',', 'lListElem', '*', 'reduced_elem', ',', 'bool', 'in_master', ')', '{', 'bool', 'ret', '=', 'true', ';', 'DENTER', '(', 'CQUEUE_LAYER', ',', '""""', ')', ';', 'if', '(', 'cqueue', '!=', 'NULL', '&&', 'reduced_elem', '!=', 'NULL', ')', '{', 'int', 'index', '=', '0', ';', 'while', '(', 'cqueue_attribute_array', '[', 'index', ']', '.', 'cqueue_attr', '!=', 'NoName', '&&', 'ret', ')', '{', 'int', 'pos', '=', 'lGetPosViaElem', '(', 'reduced_elem', ',', 'cqueue_attribute_array', '[', 'index', ']', '.', 'cqueue_attr', ',', 'SGE_NO_ABORT', ')', ';', 'if', '(', 'pos', '>=', '0', ')', '{', 'lList', '*', 'list', '=', 'NULL', ';', 'list', '=', 'lGetList', '(', 'cqueue', ',', 'cqueue_attribute_array', '[', 'index', ']', '.', 'cqueue_attr', ')', ';', '/', '*', '*', 'Configurations', 'without', 'default', 'setting', 'are', 'if', '(', 'ret', ')', '{', 'lListElem', '*', 'elem', '=', 'lGetElemHost', '(', 'list', ',', 'cqueue_attribute_array', '[', 'index', ']', '.', 'href_attr', ',', 'HOSTREF_DEFAULT', ')', ';', 'if', '(', 'elem', '==', 'NULL', ')', '{', 'SGE_ADD_MSG_ID', '(', 'sprintf', '(', 'SGE_EVENT', ',', 'MSG_CQUEUE_NODEFVALUE_S', ',', 'cqueue_attribute_array', '[', 'index', ']', '.', 'name', ')', ')', ';', 'answer_list_add', '(', 'answer_list', ',', 'SGE_EVENT', ',', 'STATUS_EUNKNOWN', ',', 'ANSWER_QUALITY_ERROR', ')', ';', 'ret', '=', 'false', ';', '}', '}', '/', '*', '*', 'Reject', 'multiple', 'settings', 'for', 'one', 'domain', '/', '*', 'Resolve', 'all', '*', 'Verify', 'host', 'group', 'if', '(', 'ret', ')', '{', 'lListElem', '*', 'elem', '=', 'NULL', ';', 'for_each', '(', 'elem', ',', 'list', ')', '{', 'const', 'char', '*', 'hostname', '=', 'NULL', ';', 'const', 'void', '*', 'iterator', '=', 'NULL', ';', 'lListElem', '*', 'first_elem', '=', 'NULL', ';', 'hostname', '=', 'lGetHost', '(', 'elem', ',', 'cqueue_attribute_array', '[', 'index', ']', '.', 'href_attr', ')', ';', 'first_elem', '=', 'lGetElemHostFirst', '(', 'list', ',', 'cqueue_attribute_array', '[', 'index', ']', '.', 'href_attr', ',', 'hostname', ',', '&', 'iterator', ')', ';', 'if', '(', 'elem', '!=', 'first_elem', ')', '{', 'SGE_ADD_MSG_ID', '(', 'sprintf', '(', 'SGE_EVENT', ',', 'MSG_CQUEUE_MULVALNOTALLOWED_S', ',', 'hostname', ')', ')', ';', 'answer_list_add', '(', 'answer_list', ',', 'SGE_EVENT', ',', 'STATUS_EUNKNOWN', ',', 'ANSWER_QUALITY_ERROR', ')', ';', 'ret', '=', 'false', ';', 'break', ';', '}', 'if', '(', 'is_hgroup_name', '(', 'hostname', ')', ')', '{', 'if', '(', 'in_master', '&&', 'strcmp', '(', 'hostname', ',', 'HOSTREF_DEFAULT', ')', ')', '{', 'const', 'lList', '*', 'master_list', '=', '*', '(', 'object_type_get_master_list', '(', 'SGE_TYPE_HGROUP', ')', ')', ';', 'const', 'lListElem', '*', 'hgroup', '=', 'hgroup_list_locate', '(', 'master_list', ',', 'hostname', ')', ';', 'if', '(', 'hgroup', '==', 'NULL', ')', '{', 'ERROR', '(', '(', 'SGE_EVENT', ',', 'MSG_CQUEUE_INVALIDDOMSETTING_SS', ',', 'cqueue_attribute_array', '[', 'index', ']', '.', 'name', ',', 'hostname', ')', ')', ';', 'answer_list_add', '(', 'answer_list', ',', 'SGE_EVENT', ',', 'STATUS_ESYNTAX', ',', 'ANSWER_QUALITY_ERROR', ')', ';', 'ret', '=', 'false', ';', 'break', ';', '}', '}', '}', 'else', '{', 'char', 'resolved_name', '[', 'CL_MAXHOSTLEN', '+', '1', ']', ';', 'int', 'back', '=', 'getuniquehostname', '(', 'hostname', ',', 'resolved_name', ',', '0', ')', ';', 'if', '(', 'back', '==', 'CL_RETVAL_OK', ')', '{', 'lSetHost', '(', 'elem', ',', 'cqueue_attribute_array', '[', 'index', ']', '.', 'href_attr', ',', 'resolved_name', ')', ';', '}', 'else', '{', '/', '*', '*', 'Due', 'to', 'CR', '6319231', ',', 'IZ', '1760', 'this', 'is', '}', '}', '}', '}', '/', '*', '*', 'Call', 'native', 'verify', 'function', 'if', 'it', 'is', 'if', '(', 'ret', '&&', 'cqueue_attribute_array', '[', 'index', ']', '.', 'verify_function', '!=', 'NULL', '&&', '(', 'cqueue_attribute_array', '[', 'index', ']', '.', 'verify_client', '||', 'in_master', ')', ')', '{', 'lListElem', '*', 'elem', '=', 'NULL', ';', 'for_each', '(', 'elem', ',', 'list', ')', '{', 'ret', '&=', 'cqueue_attribute_array', '[', 'index', ']', '.', 'verify_function', '(', 'cqueue', ',', 'answer_list', ',', 'elem', ')', ';', '}', '}', '}', 'index', '++', ';', '}', '}', 'DEXIT', ';', 'return', 'ret', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  True,CWE-476  False,CWE-other  False
1314,"['xmlSecNssKWAesGetKeySize', '(', 'xmlSecTransformPtr', 'transform', ')', '{', 'if', '(', 'xmlSecTransformCheckId', '(', 'transform', ',', 'xmlSecNssTransformKWAes128Id', ')', ')', '{', 'return', '(', 'XMLSEC_NSS_AES128_KEY_SIZE', ')', ';', '}', 'else', 'if', '(', 'xmlSecTransformCheckId', '(', 'transform', ',', 'xmlSecNssTransformKWAes192Id', ')', ')', '{', 'return', '(', 'XMLSEC_NSS_AES192_KEY_SIZE', ')', ';', '}', 'else', 'if', '(', 'xmlSecTransformCheckId', '(', 'transform', ',', 'xmlSecNssTransformKWAes256Id', ')', ')', '{', 'return', '(', 'XMLSEC_NSS_AES256_KEY_SIZE', ')', ';', '}', 'return', '(', '0', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1315,"['is_runnable', '(', ')', '{', 'if', '(', 'this', '->', 'object_', '->', 'relocs_must_follow_section_writes', '(', ')', '&&', 'this', '->', 'output_sections_blocker_', '->', 'is_blocked', '(', ')', ')', 'return', 'this', '->', 'output_sections_blocker_', ';', 'if', '(', 'this', '->', 'object_', '->', 'is_locked', '(', ')', ')', 'return', 'this', '->', 'object_', '->', 'token', '(', ')', ';', 'return', 'NULL', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1316,"['read_post', '(', 'SAPI_Info', '&', ',', 'char', '*', 'buf', ',', 'size_t', 'max_bytes', ')', '{', 'size_t', 'read_size', '=', '0', ';', 'do', '{', 'ssize_t', 'chunk_size', '=', 'read', '(', 'fileno', '(', 'stdin', ')', ',', 'buf', '+', 'read_size', ',', 'min', '(', 'READ_POST_CHUNK_SIZE', ',', 'max_bytes', '-', 'read_size', ')', ')', ';', 'if', '(', 'chunk_size', '<=', '0', ')', 'break', ';', 'read_size', '+=', 'chunk_size', ';', '}', 'while', '(', 'read_size', '<', 'max_bytes', ')', ';', 'return', 'read_size', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1317,"['deref_check_access', '(', 'Slapi_PBlock', '*', 'pb', ',', 'const', 'Slapi_Entry', '*', 'ent', ',', 'const', 'char', '*', 'entdn', ',', 'const', 'char', '*', '*', 'attrs', ',', 'char', '*', '*', '*', 'retattrs', ',', 'int', 'rights', ')', '{', 'Slapi_Entry', '*', 'etest', '=', 'NULL', ';', 'const', 'char', '*', 'attrname', ';', '/', '*', 'if', 'there', 'is', 'no', 'entry', ',', 'create', 'a', 'dummy', 'entry', '-', 'this', 'can', 'save', 'a', 'if', '(', '!ent', ')', '{', 'etest', '=', 'slapi_entry_alloc', '(', ')', ';', 'slapi_sdn_set_dn_byref', '(', 'slapi_entry_get_sdn', '(', 'etest', ')', ',', 'entdn', ')', ';', '}', 'else', '{', 'etest', '=', '(', 'Slapi_Entry', '*', ')', 'ent', ';', '}', '*', 'retattrs', '=', 'NULL', ';', 'for', '(', 'attrname', '=', '*', 'attrs', ';', 'attrname', ';', 'attrname', '=', '*', '(', '++', 'attrs', ')', ')', '{', 'int', 'ret', '=', 'slapi_access_allowed', '(', 'pb', ',', 'etest', ',', '(', 'char', '*', ')', 'attrname', ',', 'NULL', ',', 'rights', ')', ';', 'if', '(', 'ret', '!=', 'LDAP_SUCCESS', ')', '{', 'slapi_log_error', '(', 'SLAPI_LOG_PLUGIN', ',', 'DEREF_PLUGIN_SUBSYSTEM', ',', '""""', ',', 'attrname', ',', 'slapi_entry_get_dn_const', '(', 'etest', ')', ')', ';', '}', 'else', '{', '}', '}', 'if', '(', 'ent', '!=', 'etest', ')', '{', 'slapi_entry_free', '(', 'etest', ')', ';', '}', 'return', '*', 'retattrs', '==', 'NULL', '?', 'LDAP_INSUFFICIENT_ACCESS', ':', 'LDAP_SUCCESS', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1318,"['AllocElem', '(', 'cmsContext', 'ContextID', ',', '_cmsDICelem', '*', 'e', ',', 'cmsUInt32Number', 'Count', ')', '{', 'e', '->', 'Offsets', '=', '(', 'cmsUInt32Number', '*', ')', '_cmsCalloc', '(', 'ContextID', ',', 'Count', ',', 'sizeof', '(', 'cmsUInt32Number', ')', ')', ';', 'if', '(', 'e', '->', 'Offsets', '==', 'NULL', ')', 'return', 'FALSE', ';', 'e', '->', 'Sizes', '=', '(', 'cmsUInt32Number', '*', ')', '_cmsCalloc', '(', 'ContextID', ',', 'Count', ',', 'sizeof', '(', 'cmsUInt32Number', ')', ')', ';', 'if', '(', 'e', '->', 'Sizes', '==', 'NULL', ')', '{', '_cmsFree', '(', 'ContextID', ',', 'e', '->', 'Offsets', ')', ';', 'return', 'FALSE', ';', '}', 'e', '->', 'ContextID', '=', 'ContextID', ';', 'return', 'TRUE', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1319,"['gethomedir', '(', 'int', '*', 'l', ')', '{', 'static', 'char', '*', 'home', '=', 'NULL', ';', 'static', 'short', 'hlen', '=', '0', ';', 'if', '(', 'home', '==', 'NULL', ')', '{', 'char', 'buf', '[', 'NLINE', ']', ';', '#ifndef', 'strncpy', '(', 'buf', ',', '""""', ',', 'sizeof', '(', 'buf', ')', ')', ';', 'buf', '[', 'sizeof', '(', 'buf', ')', '-', '1', ']', '=', ""''"", ';', 'if', '(', 'Pmaster', '&&', 'Pmaster', '->', 'home_dir', ')', 'snprintf', '(', 'buf', ',', 'sizeof', '(', 'buf', ')', ',', '""""', ',', 'Pmaster', '->', 'home_dir', ')', ';', 'snprintf', '(', 'buf', ',', 'sizeof', '(', 'buf', ')', ',', '""""', ',', '_getdrive', '(', ')', '+', ""''"", '-', '1', ')', ';', 'hlen', '=', 'strlen', '(', 'buf', ')', ';', 'if', '(', '(', 'home', '=', '(', 'char', '*', ')', 'malloc', '(', '(', 'hlen', '+', '1', ')', '*', 'sizeof', '(', 'char', ')', ')', ')', '==', 'NULL', ')', '{', 'emlwrite', '(', '""""', ',', 'NULL', ')', ';', 'return', '(', '0', ')', ';', '}', 'strncpy', '(', 'home', ',', 'buf', ',', 'hlen', ')', ';', 'home', '[', 'hlen', ']', '=', ""''"", ';', '}', 'if', '(', 'l', ')', '*', 'l', '=', 'hlen', ';', 'return', '(', 'home', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1320,"['rb_reg_mbclen2', '(', 'c', ',', 're', ')', 'unsigned', 'int', 'c', ';', 'VALUE', 're', ';', '{', 'int', 'len', ';', 'if', '(', '!FL_TEST', '(', 're', ',', 'KCODE_FIXED', ')', ')', 'return', 'mbclen', '(', 'c', ')', ';', 'kcode_set_option', '(', 're', ')', ';', 'len', '=', 'mbclen', '(', 'c', ')', ';', 'kcode_reset_option', '(', ')', ';', 'return', 'len', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1321,"['PreCompile', '(', 'void', ')', '{', 'QCC_PR_ResetErrorScope', '(', ')', ';', 'qccClearHunk', '(', ')', ';', 'strcpy', '(', 'qcc_gamedir', ',', '""""', ')', ';', 'qcchunk', '=', 'malloc', '(', 'qcchunksize', '=', '128', '*', '1024', '*', '1024', ')', ';', 'while', '(', '!qcchunk', '&&', 'qcchunksize', '>', '8', '*', '1024', '*', '1024', ')', '{', 'qcchunksize', '/=', '2', ';', 'qcchunk', '=', 'malloc', '(', 'qcchunksize', ')', ';', '}', 'qccalloced', '=', '0', ';', 'return', '!!qcchunk', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1322,"['setupParse', '(', ')', '{', 'if', '(', '_namespaces', '&&', '!_namespacePrefixes', ')', '_engine', '.', 'setNamespaceStrategy', '(', 'new', 'NoNamespacePrefixesStrategy', ')', ';', 'else', 'if', '(', '_namespaces', '&&', '_namespacePrefixes', ')', '_engine', '.', 'setNamespaceStrategy', '(', 'new', 'NamespacePrefixesStrategy', ')', ';', '_engine', '.', 'setNamespaceStrategy', '(', 'new', 'NoNamespacesStrategy', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1323,"['tooltip_update', '(', 'void', ')', '{', 'if', '(', '!tooltip_widget_', ')', 'return', ';', '/', '/', 'Get', 'text', 'for', 'std', ':', ':', 'string', 'text', '=', 'get_mailbox_status_text', '(', ')', ';', '/', '/', 'Put', 'text', 'in', 'gtk_widget_set_tooltip_text', '(', 'tooltip_widget_', ',', 'text', '.', 'c_str', '(', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1324,"['wind_punycode_label_toascii', '(', 'const', 'uint32_t', '*', 'in', ',', 'size_t', 'in_len', ',', 'char', '*', 'out', ',', 'size_t', '*', 'out_len', ')', '{', 'unsigned', 'n', '=', 'initial_n', ';', 'unsigned', 'delta', '=', '0', ';', 'unsigned', 'bias', '=', 'initial_bias', ';', 'unsigned', 'h', '=', '0', ';', 'unsigned', 'b', ';', 'unsigned', 'i', ';', 'unsigned', 'o', '=', '0', ';', 'unsigned', 'm', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'in_len', ';', '++', 'i', ')', '{', 'if', '(', 'in', '[', 'i', ']', '<', '0x80', ')', '{', '++', 'h', ';', 'if', '(', 'o', '>=', '*', 'out_len', ')', 'return', 'WIND_ERR_OVERRUN', ';', 'out', '[', 'o', '++', ']', '=', 'in', '[', 'i', ']', ';', '}', '}', 'b', '=', 'h', ';', 'if', '(', 'b', '>', '0', ')', '{', 'if', '(', 'o', '>=', '*', 'out_len', ')', 'return', 'WIND_ERR_OVERRUN', ';', 'out', '[', 'o', '++', ']', '=', '0x2D', ';', '}', 'if', '(', 'h', '<', 'in_len', ')', '{', 'if', '(', 'o', '+', '4', '>=', '*', 'out_len', ')', 'return', 'WIND_ERR_OVERRUN', ';', 'memmove', '(', 'out', '+', '4', ',', 'out', ',', 'o', ')', ';', 'memcpy', '(', 'out', ',', '""""', ',', '4', ')', ';', 'o', '+=', '4', ';', '}', 'while', '(', 'h', '<', 'in_len', ')', '{', 'm', '=', '(', 'unsigned', ')', '-', '1', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'in_len', ';', '++', 'i', ')', 'if', '(', 'in', '[', 'i', ']', '<', 'm', '&&', 'in', '[', 'i', ']', '>=', 'n', ')', 'm', '=', 'in', '[', 'i', ']', ';', 'delta', '+=', '(', 'm', '-', 'n', ')', '*', '(', 'h', '+', '1', ')', ';', 'n', '=', 'm', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'in_len', ';', '++', 'i', ')', '{', 'if', '(', 'in', '[', 'i', ']', '<', 'n', ')', '{', '++', 'delta', ';', '}', 'else', 'if', '(', 'in', '[', 'i', ']', '==', 'n', ')', '{', 'unsigned', 'q', '=', 'delta', ';', 'unsigned', 'k', ';', 'for', '(', 'k', '=', 'base', ';', ';', 'k', '+=', 'base', ')', '{', 'unsigned', 't', ';', 'if', '(', 'k', '<=', 'bias', ')', 't', '=', 't_min', ';', 'else', 'if', '(', 'k', '>=', 'bias', '+', 't_max', ')', 't', '=', 't_max', ';', 't', '=', 'k', '-', 'bias', ';', 'if', '(', 'q', '<', 't', ')', 'break', ';', 'if', '(', 'o', '>=', '*', 'out_len', ')', 'return', 'WIND_ERR_OVERRUN', ';', 'out', '[', 'o', '++', ']', '=', 'digit', '(', 't', '+', '(', '(', 'q', '-', 't', ')', '%', '(', 'base', '-', 't', ')', ')', ')', ';', 'q', '=', '(', 'q', '-', 't', ')', '/', '(', 'base', '-', 't', ')', ';', '}', 'if', '(', 'o', '>=', '*', 'out_len', ')', 'return', 'WIND_ERR_OVERRUN', ';', 'out', '[', 'o', '++', ']', '=', 'digit', '(', 'q', ')', ';', 'bias', '=', 'adapt', '(', 'delta', ',', 'h', '+', '1', ',', 'h', '==', 'b', ')', ';', 'delta', '=', '0', ';', '++', 'h', ';', '}', '}', '++', 'delta', ';', '++', 'n', ';', '}', '*', 'out_len', '=', 'o', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1325,"['gc_master_client_get_best_provider', '(', 'GcMasterClient', '*', 'client', ',', 'GList', '*', '*', 'provider_list', ',', 'GcInterfaceFlags', 'iface', ')', '{', 'GList', '*', 'l', '=', '*', 'provider_list', ';', 'g_debug', '(', '""""', ')', ';', 'while', '(', 'l', ')', '{', 'GcMasterProvider', '*', 'provider', '=', 'l', '->', 'data', ';', 'g_debug', '(', '""""', ',', 'gc_master_provider_get_name', '(', 'provider', ')', ')', ';', 'if', '(', 'gc_master_provider_subscribe', '(', 'provider', ',', 'client', ',', 'iface', ')', ')', '{', '/', '*', 'provider', 'was', 'started', ',', 'so', 'accuracy', 'may', 'have', '/', '*', 'TODO', 're', '-', 'think', 'this', ':', 'restarting', 'provider', 'selection', 'leads', 'to', 'g_debug', '(', '""""', ',', 'gc_master_provider_get_name', '(', 'provider', ')', ',', 'gc_master_provider_get_status', '(', 'provider', ')', ')', ';', 'l', '=', '*', 'provider_list', ';', 'continue', ';', '}', '/', '*', 'TODO', ':', 'currently', 'returning', 'even', 'providers', 'that', 'are', 'worse', 'than', 'priv', '->', 'min_accuracy', ',', 'if', '(', 'gc_master_provider_get_status', '(', 'provider', ')', '==', 'GEOCLUE_STATUS_AVAILABLE', ')', '{', 'gc_master_client_unsubscribe_providers', '(', 'client', ',', 'l', '->', 'next', ',', 'iface', ')', ';', 'return', 'provider', ';', '}', 'l', '=', 'l', '->', 'next', ';', '}', 'gc_master_client_unsubscribe_providers', '(', 'client', ',', '*', 'provider_list', ',', 'iface', ')', ';', 'return', 'NULL', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1326,"['Lset_macro_character', '(', ')', '{', '#', 'line', '2339', 'int', 'c', ';', 'int', 'narg', ';', 'register', 'object', '*', 'DPPbase', '=', 'vs_base', ';', '#define\tchr\tDPPbase', '[', '0', ']', '#define\tfnc\tDPPbase', '[', '1', ']', '#define\tntp\tDPPbase', '[', '2', '+', '0', ']', '#define\trdtbl\tDPPbase', '[', '2', '+', '1', ']', 'narg', '=', 'vs_top', '-', 'vs_base', ';', 'if', '(', 'narg', '<', '2', ')', 'too_few_arguments', '(', ')', ';', 'if', '(', 'narg', '<=', '2', '+', '0', ')', '{', 'vs_push', '(', 'Cnil', ')', ';', 'narg', '++', ';', '}', 'if', '(', 'narg', '<=', '2', '+', '1', ')', '{', 'vs_push', '(', 'current_readtable', '(', ')', ')', ';', 'narg', '++', ';', '}', 'if', '(', 'narg', '>', '2', '+', '2', ')', 'too_many_arguments', '(', ')', ';', '#', 'line', '2341', 'check_type_character', '(', '&', 'chr', ')', ';', 'check_type_readtable', '(', '&', 'rdtbl', ')', ';', 'c', '=', 'char_code', '(', 'chr', ')', ';', 'if', '(', 'ntp', '!=', 'Cnil', ')', 'rdtbl', '->', 'rt', '.', 'rt_self', '[', 'c', ']', '.', '=', 'cat_non_terminating', ';', 'rdtbl', '->', 'rt', '.', 'rt_self', '[', 'c', ']', '.', '=', 'cat_terminating', ';', 'rdtbl', '->', 'rt', '.', 'rt_self', '[', 'c', ']', '.', 'rte_macro', '=', 'fnc', ';', '{', 'vs_base', '[', '0', ']', '=', 'Ct', ';', 'vs_top', '=', 'vs_base', '+', '1', ';', 'return', ';', '}', '#', 'line', '2352', '#undef', '#undef', '#undef', '#undef', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1327,"['msgbox_todo', '(', 'GtkWidget', '*', 'widget', ',', 'gpointer', 'data', ')', '{', 'GtkWidget', '*', 'dialog', ';', 'GtkWidget', '*', 'box', ';', 'GtkWidget', '*', 'label', ';', 'GtkWidget', '*', 'button', ';', 'char', 'buf', '[', '1024', ']', ';', 'GdkPixmap', '*', 'beer_pixmap', ';', 'GdkBitmap', '*', 'beer_mask', ';', 'GtkStyle', '*', 'style', ';', 'dialog', '=', 'gtk_dialog_new', '(', ')', ';', 'gtk_window_set_title', '(', 'GTK_WINDOW', '(', 'dialog', ')', ',', '_', '(', '""""', ')', ')', ';', 'g_signal_connect', '(', 'G_OBJECT', '(', 'dialog', ')', ',', '""""', ',', 'G_CALLBACK', '(', 'msgbox_delete', ')', ',', '(', 'gpointer', ')', 'dialog', ')', ';', 'g_signal_connect', '(', 'G_OBJECT', '(', 'dialog', ')', ',', '""""', ',', 'G_CALLBACK', '(', 'gtk_widget_destroy', ')', ',', 'NULL', ')', ';', 'box', '=', 'gtk_vbox_new', '(', 'FALSE', ',', '0', ')', ';', 'gtk_box_pack_start', '(', 'GTK_BOX', '(', 'GTK_DIALOG', '(', 'dialog', ')', '->', 'vbox', ')', ',', 'box', ',', 'TRUE', ',', 'TRUE', ',', '5', ')', ';', 'gtk_widget_show', '(', 'box', ')', ';', 'gtk_widget_show', '(', 'dialog', ')', ';', 'snprintf', '(', 'buf', ',', 'sizeof', '(', 'buf', ')', ',', '""""', ',', 'version', ')', ';', 'label', '=', 'gtk_label_new', '(', 'buf', ')', ';', 'gtk_box_pack_start', '(', 'GTK_BOX', '(', 'box', ')', ',', 'label', ',', 'FALSE', ',', 'FALSE', ',', '5', ')', ';', 'gtk_widget_show', '(', 'label', ')', ';', 'snprintf', '(', 'buf', ',', 'sizeof', '(', 'buf', ')', ',', '""""', ',', 'PIXMAP_WM_DIR', ',', '""""', ')', ';', 'style', '=', 'gtk_widget_get_style', '(', 'dialog', ')', ';', 'beer_pixmap', '=', 'gdk_pixmap_create_from_xpm', '(', 'dialog', '->', 'window', ',', '&', 'beer_mask', ',', '&', 'style', '->', 'bg', '[', 'GTK_STATE_NORMAL', ']', ',', 'buf', ')', ';', 'if', '(', 'beer_pixmap', '!=', 'NULL', ')', '{', 'label', '=', 'gtk_pixmap_new', '(', 'beer_pixmap', ',', 'beer_mask', ')', ';', 'gtk_box_pack_start', '(', 'GTK_BOX', '(', 'box', ')', ',', 'label', ',', 'FALSE', ',', 'FALSE', ',', '0', ')', ';', 'gtk_widget_show', '(', 'label', ')', ';', '}', 'label', '=', 'gtk_label_new', '(', '_', '(', '""""', ')', ')', ';', 'gtk_box_pack_start', '(', 'GTK_BOX', '(', 'box', ')', ',', 'label', ',', 'FALSE', ',', 'FALSE', ',', '5', ')', ';', 'gtk_widget_show', '(', 'label', ')', ';', 'label', '=', 'gtk_label_new', '(', '_', '(', '""""', ')', ')', ';', 'gtk_box_pack_start', '(', 'GTK_BOX', '(', 'box', ')', ',', 'label', ',', 'FALSE', ',', 'FALSE', ',', '5', ')', ';', 'gtk_widget_show', '(', 'label', ')', ';', 'label', '=', 'gtk_label_new', '(', '_', '(', '""""', ')', ')', ';', 'gtk_box_pack_start', '(', 'GTK_BOX', '(', 'box', ')', ',', 'label', ',', 'FALSE', ',', 'FALSE', ',', '5', ')', ';', 'gtk_widget_show', '(', 'label', ')', ';', 'button', '=', 'gtk_button_new_from_stock', '(', '""""', ')', ';', 'g_signal_connect_swapped', '(', 'G_OBJECT', '(', 'button', ')', ',', '""""', ',', 'G_CALLBACK', '(', 'gtk_widget_destroy', ')', ',', '(', 'gpointer', ')', 'dialog', ')', ';', 'GTK_WIDGET_SET_FLAGS', '(', 'button', ',', 'GTK_CAN_DEFAULT', ')', ';', 'gtk_box_pack_start', '(', 'GTK_BOX', '(', 'GTK_DIALOG', '(', 'dialog', ')', '->', 'action_area', ')', ',', 'button', ',', 'TRUE', ',', 'FALSE', ',', '0', ')', ';', 'gtk_widget_show', '(', 'button', ')', ';', 'gtk_widget_grab_default', '(', 'button', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1328,"['ModifySkillDependancy', '(', 'int', 'sk', ',', 'int', 'i', ',', 'char', '*', 'dep', ',', 'int', 'lev', ')', '{', 'if', '(', 'sk', '<', '0', '||', 'sk', '>', '(', 'NSKILLS', '-', '1', ')', ')', 'return', ';', 'if', '(', 'i', '<', '0', '||', 'i', '>=', '(', 'int', ')', '(', 'sizeof', '(', 'SkillDefs', '[', 'sk', ']', '.', 'depends', ')', '/', 'sizeof', '(', 'SkillDepend', ')', ')', ')', 'return', ';', 'if', '(', 'dep', '&&', '(', 'FindSkill', '(', 'dep', ')', '==', 'NULL', ')', ')', 'return', ';', 'if', '(', 'lev', '<', '0', ')', 'return', ';', 'SkillDefs', '[', 'sk', ']', '.', 'depends', '[', 'i', ']', '.', 'skill', '=', 'dep', ';', 'SkillDefs', '[', 'sk', ']', '.', 'depends', '[', 'i', ']', '.', 'level', '=', 'lev', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1329,"['chirp_fs_hdfs_md5', '(', 'const', 'char', '*', 'path', ',', 'unsigned', 'char', 'digest', '[', '16', ']', ')', '{', 'return', 'cfs_basic_md5', '(', 'FIXPATH', '(', 'path', ')', ',', 'digest', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1330,"['RemovePlugin', '(', 'WokXMLTag', '*', 'tag', ')', '{', 'UnLoadPlugin', '(', 'tag', '->', 'GetAttr', '(', '""""', ')', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1331,"['parse_http_url', '(', 'const', 'char', '*', 'headers', ',', 'char', '*', '*', 'url', ')', '{', 'char', '*', 's', ',', '*', 'start', ',', '*', 'tmp', ';', 's', '=', '(', 'char', '*', ')', 'eat_whitespace_no_nl', '(', 'headers', ')', ';', 'if', '(', '!', '*', 's', ')', 'return', '-', '1', ';', 'if', '(', '!', '*', 's', ')', 'return', '-', '1', ';', 's', '=', '(', 'char', '*', ')', 'eat_whitespace_no_nl', '(', 's', ')', ';', 'if', '(', '!', '*', 's', ')', 'return', '-', '1', ';', 's', '=', '(', 'char', '*', ')', 'find_whitespace', '(', 'start', ')', ';', 'if', '(', '!', '*', 's', ')', 'return', '-', '1', ';', 'if', '(', 's', '-', 'start', '>=', '4', '&&', '!strcmpstart', '(', 'start', ',', '""""', ')', ')', '{', 'tmp', '=', 'start', '+', '4', ';', 'if', '(', '*', 'tmp', '==', ""''"", ')', 'tmp', '++', ';', 'if', '(', 's', '-', 'tmp', '>=', '3', '&&', '!strcmpstart', '(', 'tmp', ',', '""""', ')', ')', '{', 'tmp', '=', 'strchr', '(', 'tmp', '+', '3', ',', ""''"", ')', ';', 'if', '(', 'tmp', '&&', 'tmp', '<', 's', ')', '{', 'log_debug', '(', 'LD_DIR', ',', '""""', ')', ';', 'start', '=', 'tmp', ';', '}', '}', '}', '*', 'url', '=', 'tor_malloc', '(', 's', '-', 'start', '+', '5', ')', ';', 'strlcpy', '(', '*', 'url', ',', '""""', ',', 's', '-', 'start', '+', '5', ')', ';', 'strlcat', '(', '(', '*', 'url', ')', '+', '4', ',', 'start', ',', 's', '-', 'start', '+', '1', ')', ';', '}', 'else', '{', '*', 'url', '=', 'tor_strndup', '(', 'start', ',', 's', '-', 'start', ')', ';', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1332,"['camel_vee_data_cache_contains_message_info_data', '(', 'CamelVeeDataCache', '*', 'data_cache', ',', 'CamelFolder', '*', 'folder', ',', 'const', 'gchar', '*', 'orig_message_uid', ')', '{', 'gboolean', 'res', ';', 'VeeData', 'vdata', ';', 'g_return_val_if_fail', '(', 'CAMEL_IS_VEE_DATA_CACHE', '(', 'data_cache', ')', ',', 'FALSE', ')', ';', 'g_return_val_if_fail', '(', 'CAMEL_IS_FOLDER', '(', 'folder', ')', ',', 'FALSE', ')', ';', 'g_return_val_if_fail', '(', 'orig_message_uid', '!=', 'NULL', ',', 'FALSE', ')', ';', 'g_mutex_lock', '(', '&', 'data_cache', '->', 'priv', '->', 'mi_mutex', ')', ';', 'vdata', '.', 'folder', '=', 'folder', ';', 'vdata', '.', 'orig_message_uid', '=', 'camel_pstring_strdup', '(', 'orig_message_uid', ')', ';', 'res', '=', 'g_hash_table_lookup', '(', 'data_cache', '->', 'priv', '->', 'orig_message_uid_hash', ',', '&', 'vdata', ')', '!=', 'NULL', ';', 'camel_pstring_free', '(', 'vdata', '.', 'orig_message_uid', ')', ';', 'g_mutex_unlock', '(', '&', 'data_cache', '->', 'priv', '->', 'mi_mutex', ')', ';', 'return', 'res', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1333,"['writeStreamMarshalUnmarshalCode', '(', 'Output', '&', 'out', ',', 'const', 'TypePtr', '&', 'type', ',', 'const', 'string', '&', 'param', ',', 'bool', 'marshal', ',', 'const', 'string', '&', 'str', ',', 'const', 'StringList', '&', 'metaData', ',', 'int', 'typeCtx', ')', '{', 'string', 'fixedParam', '=', 'fixKwd', '(', 'param', ')', ';', 'string', 'stream', ';', 'if', '(', 'str', '.', 'empty', '(', ')', ')', '{', 'stream', '=', 'marshal', '?', '""""', ':', '""""', ';', '}', '{', 'stream', '=', 'str', ';', '}', 'if', '(', 'marshal', ')', '{', 'out', '<<', 'nl', '<<', 'stream', '<<', '""""', '<<', 'fixedParam', '<<', '""""', ';', '}', '{', 'out', '<<', 'nl', '<<', 'stream', '<<', '""""', '<<', 'fixedParam', '<<', '""""', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1334,"['gfilechooser_mouse', '(', 'GGadget', '*', 'g', ',', 'GEvent', '*', 'event', ')', '{', 'GFileChooser', '*', 'gfc', '=', '(', 'GFileChooser', '*', ')', 'g', ';', 'if', '(', '(', 'event', '->', 'type', '==', 'et_mouseup', '||', 'event', '->', 'type', '==', 'et_mousedown', ')', '&&', '(', 'event', '->', 'u', '.', 'mouse', '.', 'button', '>=', '4', '&&', 'event', '->', 'u', '.', 'mouse', '.', 'button', '<=', '7', ')', ')', '{', 'if', '(', 'gfc', '->', 'files', '->', 'vsb', '!=', 'NULL', ')', 'return', '(', 'GGadgetDispatchEvent', '(', '&', 'gfc', '->', 'files', '->', 'vsb', '->', 'g', ',', 'event', ')', ')', ';', 'return', '(', 'true', ')', ';', '}', 'return', '(', 'false', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1335,"['do_one_keyinfo', '(', 'ctrl_t', 'ctrl', ',', 'const', 'unsigned', 'char', '*', 'grip', ',', 'assuan_context_t', 'ctx', ',', 'int', 'data', ',', 'int', 'with_ssh_fpr', ',', 'int', 'in_ssh', ',', 'int', 'ttl', ',', 'int', 'disabled', ',', 'int', 'confirm', ')', '{', 'gpg_error_t', 'err', ';', 'char', 'hexgrip', '[', '40', '+', '1', ']', ';', 'char', '*', 'fpr', '=', 'NULL', ';', 'int', 'keytype', ';', 'unsigned', 'char', '*', 'shadow_info', '=', 'NULL', ';', 'char', '*', 'serialno', '=', 'NULL', ';', 'char', '*', 'idstr', '=', 'NULL', ';', 'const', 'char', '*', 'keytypestr', ';', 'int', 'missing_key', '=', '0', ';', 'char', 'ttlbuf', '[', '20', ']', ';', 'char', 'flagsbuf', '[', '5', ']', ';', 'err', '=', 'agent_key_info_from_file', '(', 'ctrl', ',', 'grip', ',', '&', 'keytype', ',', '&', 'shadow_info', ')', ';', 'if', '(', 'err', ')', '{', 'if', '(', 'in_ssh', '&&', 'gpg_err_code', '(', 'err', ')', '==', 'GPG_ERR_NOT_FOUND', ')', 'missing_key', '=', '1', ';', 'goto', 'leave', ';', '}', 'bin2hex', '(', 'grip', ',', '20', ',', 'hexgrip', ')', ';', 'if', '(', 'ttl', '>', '0', ')', 'snprintf', '(', 'ttlbuf', ',', 'sizeof', 'ttlbuf', ',', '""""', ',', 'ttl', ')', ';', 'strcpy', '(', 'ttlbuf', ',', '""""', ')', ';', '*', 'flagsbuf', '=', '0', ';', 'if', '(', 'disabled', ')', 'strcat', '(', 'flagsbuf', ',', '""""', ')', ';', 'if', '(', 'in_ssh', ')', 'strcat', '(', 'flagsbuf', ',', '""""', ')', ';', 'if', '(', 'confirm', ')', 'strcat', '(', 'flagsbuf', ',', '""""', ')', ';', 'if', '(', '!', '*', 'flagsbuf', ')', 'strcpy', '(', 'flagsbuf', ',', '""""', ')', ';', 'if', '(', 'missing_key', ')', '{', 'keytypestr', '=', '""""', ';', '}', '{', 'switch', '(', 'keytype', ')', '{', 'case', 'PRIVATE_KEY_CLEAR', ':', 'keytypestr', '=', '""""', ';', 'break', ';', 'case', 'PRIVATE_KEY_PROTECTED', ':', 'keytypestr', '=', '""""', ';', 'break', ';', 'case', 'PRIVATE_KEY_SHADOWED', ':', 'keytypestr', '=', '""""', ';', 'break', ';', 'default', ':', 'keytypestr', '=', '""""', ';', 'break', ';', '}', '}', 'if', '(', 'with_ssh_fpr', ')', '{', 'gcry_sexp_t', 'key', ';', 'if', '(', '!agent_raw_key_from_file', '(', 'ctrl', ',', 'grip', ',', '&', 'key', ')', ')', '{', 'ssh_get_fingerprint_string', '(', 'key', ',', '&', 'fpr', ')', ';', 'gcry_sexp_release', '(', 'key', ')', ';', '}', '}', 'if', '(', 'shadow_info', ')', '{', 'err', '=', 'parse_shadow_info', '(', 'shadow_info', ',', '&', 'serialno', ',', '&', 'idstr', ')', ';', 'if', '(', 'err', ')', 'goto', 'leave', ';', '}', '/', '*', 'Note', 'that', 'we', ""don't"", 'support', 'the', 'CACHED', 'and', 'PROTECTION', 'values', 'gnupg', '2', '.', '1', 'does', '.', 'We', 'print', ""''"", 'instead', '.', 'However', 'we', 'support', 'if', '(', '!data', ')', 'err', '=', 'agent_write_status', '(', 'ctrl', ',', '""""', ',', 'hexgrip', ',', 'keytypestr', ',', 'serialno', '?', 'serialno', ':', '""""', ',', 'idstr', '?', 'idstr', ':', '""""', ',', '""""', ',', '""""', ',', 'fpr', '?', 'fpr', ':', '""""', ',', 'ttlbuf', ',', 'flagsbuf', ',', 'NULL', ')', ';', '{', 'char', '*', 'string', ';', 'string', '=', 'xtryasprintf', '(', '""""', ',', 'hexgrip', ',', 'keytypestr', ',', 'serialno', '?', 'serialno', ':', '""""', ',', 'idstr', '?', 'idstr', ':', '""""', ',', 'fpr', '?', 'fpr', ':', '""""', ',', 'ttlbuf', ',', 'flagsbuf', ')', ';', 'if', '(', '!string', ')', 'err', '=', 'gpg_error_from_syserror', '(', ')', ';', 'err', '=', 'assuan_send_data', '(', 'ctx', ',', 'string', ',', 'strlen', '(', 'string', ')', ')', ';', 'xfree', '(', 'string', ')', ';', '}', 'leave', ':', 'xfree', '(', 'fpr', ')', ';', 'xfree', '(', 'shadow_info', ')', ';', 'xfree', '(', 'serialno', ')', ';', 'xfree', '(', 'idstr', ')', ';', 'return', 'err', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1336,"['glusterd_volume_compute_cksum', '(', 'glusterd_volinfo_t', '*', 'volinfo', ')', '{', 'int32_t', 'ret', '=', '-', '1', ';', 'glusterd_conf_t', '*', 'priv', '=', 'NULL', ';', 'char', 'path', '[', 'PATH_MAX', ']', '=', '{', '0', ',', '}', ';', 'char', 'cksum_path', '[', 'PATH_MAX', ']', '=', '{', '0', ',', '}', ';', 'char', 'filepath', '[', 'PATH_MAX', ']', '=', '{', '0', ',', '}', ';', 'int', 'fd', '=', '-', '1', ';', 'uint32_t', 'cksum', '=', '0', ';', 'char', 'buf', '[', '4096', ']', '=', '{', '0', ',', '}', ';', 'char', 'sort_filepath', '[', 'PATH_MAX', ']', '=', '{', '0', '}', ';', 'gf_boolean_t', 'unlink_sortfile', '=', '_gf_false', ';', 'int', 'sort_fd', '=', '0', ';', 'runner_t', 'runner', ';', 'GF_ASSERT', '(', 'volinfo', ')', ';', 'priv', '=', 'THIS', '->', 'private', ';', 'GF_ASSERT', '(', 'priv', ')', ';', 'GLUSTERD_GET_VOLUME_DIR', '(', 'path', ',', 'volinfo', ',', 'priv', ')', ';', 'snprintf', '(', 'cksum_path', ',', 'sizeof', '(', 'cksum_path', ')', ',', '""""', ',', 'path', ',', 'GLUSTERD_CKSUM_FILE', ')', ';', 'fd', '=', 'open', '(', 'cksum_path', ',', 'O_RDWR', '|', 'O_APPEND', '|', 'O_CREAT', '|', 'O_TRUNC', ',', '0644', ')', ';', 'if', '(', '-', '1', '==', 'fd', ')', '{', 'gf_log', '(', 'THIS', '->', 'name', ',', 'GF_LOG_ERROR', ',', '""""', ',', 'cksum_path', ',', 'errno', ')', ';', 'ret', '=', '-', '1', ';', 'goto', 'out', ';', '}', 'snprintf', '(', 'filepath', ',', 'sizeof', '(', 'filepath', ')', ',', '""""', ',', 'path', ',', 'GLUSTERD_VOLUME_INFO_FILE', ')', ';', 'snprintf', '(', 'sort_filepath', ',', 'sizeof', '(', 'sort_filepath', ')', ',', '""""', ',', 'volinfo', '->', 'volname', ')', ';', 'sort_fd', '=', 'mkstemp', '(', 'sort_filepath', ')', ';', 'if', '(', 'sort_fd', '<', '0', ')', '{', 'gf_log', '(', 'THIS', '->', 'name', ',', 'GF_LOG_ERROR', ',', '""""', ',', 'strerror', '(', 'errno', ')', ',', 'volinfo', '->', 'volname', ')', ';', 'goto', 'out', ';', '}', 'else', '{', 'unlink_sortfile', '=', '_gf_true', ';', '}', 'runinit', '(', '&', 'runner', ')', ';', 'runner_add_args', '(', '&', 'runner', ',', '""""', ',', 'filepath', ',', 'NULL', ')', ';', 'runner_redir', '(', '&', 'runner', ',', 'STDOUT_FILENO', ',', 'sort_fd', ')', ';', 'ret', '=', 'runner_run', '(', '&', 'runner', ')', ';', 'close', '(', 'sort_fd', ')', ';', 'if', '(', 'ret', ')', '{', 'gf_log', '(', 'THIS', '->', 'name', ',', 'GF_LOG_ERROR', ',', '""""', ',', 'filepath', ',', 'sort_filepath', ')', ';', 'goto', 'out', ';', '}', 'ret', '=', 'get_checksum_for_path', '(', 'sort_filepath', ',', '&', 'cksum', ')', ';', 'if', '(', 'ret', ')', '{', 'gf_log', '(', 'THIS', '->', 'name', ',', 'GF_LOG_ERROR', ',', '""""', ',', 'sort_filepath', ')', ';', 'goto', 'out', ';', '}', 'snprintf', '(', 'buf', ',', 'sizeof', '(', 'buf', ')', ',', '""""', ',', '""""', ',', 'cksum', ')', ';', 'ret', '=', 'write', '(', 'fd', ',', 'buf', ',', 'strlen', '(', 'buf', ')', ')', ';', 'if', '(', 'ret', '<=', '0', ')', '{', 'ret', '=', '-', '1', ';', 'goto', 'out', ';', '}', 'ret', '=', 'get_checksum_for_file', '(', 'fd', ',', '&', 'cksum', ')', ';', 'if', '(', 'ret', ')', 'goto', 'out', ';', 'volinfo', '->', 'cksum', '=', 'cksum', ';', 'out', ':', 'if', '(', 'fd', '>', '0', ')', 'close', '(', 'fd', ')', ';', 'if', '(', 'unlink_sortfile', ')', 'unlink', '(', 'sort_filepath', ')', ';', 'gf_log', '(', 'THIS', '->', 'name', ',', 'GF_LOG_DEBUG', ',', '""""', ',', 'ret', ')', ';', 'return', 'ret', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
1337,"['addMAC', '(', 'pMAC_t', 'pMAC', ',', 'unsigned', 'char', '*', 'mac', ')', '{', 'pMAC_t', 'cur', '=', 'pMAC', ';', 'if', '(', 'mac', '==', 'NULL', ')', 'return', '-', '1', ';', 'if', '(', 'pMAC', '==', 'NULL', ')', 'return', '-', '1', ';', 'while', '(', 'cur', '->', 'next', '!=', 'NULL', ')', 'cur', '=', 'cur', '->', 'next', ';', '/', '/', 'alloc', 'cur', '->', 'next', '=', '(', 'pMAC_t', ')', 'malloc', '(', 'sizeof', '(', 'struct', 'MAC_list', ')', ')', ';', 'cur', '=', 'cur', '->', 'next', ';', '/', '/', 'set', 'memcpy', '(', 'cur', '->', 'mac', ',', 'mac', ',', '6', ')', ';', 'cur', '->', 'next', '=', 'NULL', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1338,"['fat32_fs_info_verbose_info', '(', 'const', 'struct', 'fat32_fs_info_t', '*', 'fs_info', ')', '{', 'CHECK_NN', '(', 'log_debug', '(', '""""', ')', ')', ';', 'CHECK_NN', '(', 'log_debug', '(', '""""', 'PRIx32', ',', 'fs_info', '->', 'lead_signature', ')', ')', ';', 'CHECK_NN', '(', 'log_debug', '(', '""""', 'PRIx32', ',', 'fs_info', '->', 'struct_signature', ')', ')', ';', 'CHECK_NN', '(', 'log_debug', '(', '""""', 'PRIx32', ',', 'fs_info', '->', 'trail_signature', ')', ')', ';', 'CHECK_NN', '(', 'log_debug', '(', '""""', 'PRIu32', ',', 'fs_info', '->', 'last_free_count', ')', ')', ';', 'CHECK_NN', '(', 'log_debug', '(', '""""', 'PRIu32', ',', 'fs_info', '->', 'free_cluster_hint', ')', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1339,"['qlcnic_82xx_read_phys_port_id', '(', 'struct', 'qlcnic_adapter', '*', 'adapter', ')', '{', 'u8', 'mac', '[', 'ETH_ALEN', ']', ';', 'int', 'ret', ';', 'ret', '=', 'qlcnic_get_mac_address', '(', 'adapter', ',', 'mac', ',', 'adapter', '->', 'ahw', '->', 'physical_port', ')', ';', 'if', '(', 'ret', ')', 'return', 'ret', ';', 'memcpy', '(', 'adapter', '->', 'ahw', '->', 'phys_port_id', ',', 'mac', ',', 'ETH_ALEN', ')', ';', 'adapter', '->', 'flags', '|=', 'QLCNIC_HAS_PHYS_PORT_ID', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1340,"['sendquery', '(', 'isc_task_t', '*', 'task', ',', 'isc_event_t', '*', 'event', ')', '{', 'struct', 'in_addr', 'inaddr', ';', 'isc_sockaddr_t', 'address', ';', 'isc_region_t', 'r', ';', 'isc_result_t', 'result', ';', 'dns_fixedname_t', 'keyname', ';', 'dns_fixedname_t', 'ownername', ';', 'isc_buffer_t', 'namestr', ',', 'keybuf', ';', 'unsigned', 'char', 'keydata', '[', '9', ']', ';', 'dns_message_t', '*', 'query', ';', 'dns_request_t', '*', 'request', ';', 'static', 'char', 'keystr', '[', ']', '=', '""""', ';', 'isc_event_free', '(', '&', 'event', ')', ';', 'result', '=', 'ISC_R_FAILURE', ';', 'if', '(', 'inet_pton', '(', 'AF_INET', ',', '""""', ',', '&', 'inaddr', ')', '!=', '1', ')', 'CHECK', '(', '""""', ',', 'result', ')', ';', 'isc_sockaddr_fromin', '(', '&', 'address', ',', '&', 'inaddr', ',', 'PORT', ')', ';', 'dns_fixedname_init', '(', '&', 'keyname', ')', ';', 'isc_buffer_constinit', '(', '&', 'namestr', ',', '""""', ',', '9', ')', ';', 'isc_buffer_add', '(', '&', 'namestr', ',', '9', ')', ';', 'result', '=', 'dns_name_fromtext', '(', 'dns_fixedname_name', '(', '&', 'keyname', ')', ',', '&', 'namestr', ',', 'NULL', ',', '0', ',', 'NULL', ')', ';', 'CHECK', '(', '""""', ',', 'result', ')', ';', 'dns_fixedname_init', '(', '&', 'ownername', ')', ';', 'isc_buffer_constinit', '(', '&', 'namestr', ',', 'ownername_str', ',', 'strlen', '(', 'ownername_str', ')', ')', ';', 'isc_buffer_add', '(', '&', 'namestr', ',', 'strlen', '(', 'ownername_str', ')', ')', ';', 'result', '=', 'dns_name_fromtext', '(', 'dns_fixedname_name', '(', '&', 'ownername', ')', ',', '&', 'namestr', ',', 'NULL', ',', '0', ',', 'NULL', ')', ';', 'CHECK', '(', '""""', ',', 'result', ')', ';', 'isc_buffer_init', '(', '&', 'keybuf', ',', 'keydata', ',', '9', ')', ';', 'result', '=', 'isc_base64_decodestring', '(', 'keystr', ',', '&', 'keybuf', ')', ';', 'CHECK', '(', '""""', ',', 'result', ')', ';', 'isc_buffer_usedregion', '(', '&', 'keybuf', ',', '&', 'r', ')', ';', 'initialkey', '=', 'NULL', ';', 'result', '=', 'dns_tsigkey_create', '(', 'dns_fixedname_name', '(', '&', 'keyname', ')', ',', 'DNS_TSIG_HMACMD5_NAME', ',', 'isc_buffer_base', '(', '&', 'keybuf', ')', ',', 'isc_buffer_usedlength', '(', '&', 'keybuf', ')', ',', 'ISC_FALSE', ',', 'NULL', ',', '0', ',', '0', ',', 'mctx', ',', 'ring', ',', '&', 'initialkey', ')', ';', 'CHECK', '(', '""""', ',', 'result', ')', ';', 'query', '=', 'NULL', ';', 'result', '=', 'dns_message_create', '(', 'mctx', ',', 'DNS_MESSAGE_INTENTRENDER', ',', '&', 'query', ')', ';', 'CHECK', '(', '""""', ',', 'result', ')', ';', 'result', '=', 'dns_tkey_builddhquery', '(', 'query', ',', 'ourkey', ',', 'dns_fixedname_name', '(', '&', 'ownername', ')', ',', 'DNS_TSIG_HMACMD5_NAME', ',', '&', 'nonce', ',', '3600', ')', ';', 'CHECK', '(', '""""', ',', 'result', ')', ';', 'request', '=', 'NULL', ';', 'result', '=', 'dns_request_create', '(', 'requestmgr', ',', 'query', ',', '&', 'address', ',', 'DNS_REQUESTOPT_TCP', ',', 'initialkey', ',', 'TIMEOUT', ',', 'task', ',', 'recvquery', ',', 'query', ',', '&', 'request', ')', ';', 'CHECK', '(', '""""', ',', 'result', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1341,"['p7_hmm_CreateBody', '(', 'P7_HMM', '*', 'hmm', ',', 'int', 'M', ',', 'const', 'ESL_ALPHABET', '*', 'abc', ')', '{', 'int', 'k', ';', 'int', 'status', ';', 'hmm', '->', 'abc', '=', 'abc', ';', 'hmm', '->', 'M', '=', 'M', ';', 'ESL_ALLOC', '(', 'hmm', '->', 't', ',', '(', 'M', '+', '1', ')', '*', 'sizeof', '(', 'float', '*', ')', ')', ';', 'ESL_ALLOC', '(', 'hmm', '->', 'mat', ',', '(', 'M', '+', '1', ')', '*', 'sizeof', '(', 'float', '*', ')', ')', ';', 'ESL_ALLOC', '(', 'hmm', '->', 'ins', ',', '(', 'M', '+', '1', ')', '*', 'sizeof', '(', 'float', '*', ')', ')', ';', 'hmm', '->', 't', '[', '0', ']', '=', 'NULL', ';', 'hmm', '->', 'mat', '[', '0', ']', '=', 'NULL', ';', 'hmm', '->', 'ins', '[', '0', ']', '=', 'NULL', ';', 'ESL_ALLOC', '(', 'hmm', '->', 't', '[', '0', ']', ',', '(', 'p7H_NTRANSITIONS', '*', '(', 'M', '+', '1', ')', ')', '*', 'sizeof', '(', 'float', ')', ')', ';', 'ESL_ALLOC', '(', 'hmm', '->', 'mat', '[', '0', ']', ',', '(', 'abc', '->', 'K', '*', '(', 'M', '+', '1', ')', ')', '*', 'sizeof', '(', 'float', ')', ')', ';', 'ESL_ALLOC', '(', 'hmm', '->', 'ins', '[', '0', ']', ',', '(', 'abc', '->', 'K', '*', '(', 'M', '+', '1', ')', ')', '*', 'sizeof', '(', 'float', ')', ')', ';', 'for', '(', 'k', '=', '1', ';', 'k', '<=', 'M', ';', 'k', '++', ')', '{', 'hmm', '->', 'mat', '[', 'k', ']', '=', 'hmm', '->', 'mat', '[', '0', ']', '+', 'k', '*', 'hmm', '->', 'abc', '->', 'K', ';', 'hmm', '->', 'ins', '[', 'k', ']', '=', 'hmm', '->', 'ins', '[', '0', ']', '+', 'k', '*', 'hmm', '->', 'abc', '->', 'K', ';', 'hmm', '->', 't', '[', 'k', ']', '=', 'hmm', '->', 't', '[', '0', ']', '+', 'k', '*', 'p7H_NTRANSITIONS', ';', '}', '/', '*', 'Enforce', 'conventions', 'on', 'unused', 'but', 'allocated', 'distributions', ',', '*', 'Compare', '(', ')', 'tests', 'succeed', 'unless', 'memory', 'was', 'corrupted', '.', 'if', '(', '(', 'status', '=', 'p7_hmm_Zero', '(', 'hmm', ')', ')', '!=', 'eslOK', ')', 'goto', 'ERROR', ';', 'hmm', '->', 'mat', '[', '0', ']', '[', '0', ']', '=', '1', '.', '0', ';', 'hmm', '->', 't', '[', '0', ']', '[', 'p7H_DM', ']', '=', '1', '.', '0', ';', 'if', '(', 'hmm', '->', 'flags', '&', 'p7H_RF', ')', 'ESL_ALLOC', '(', 'hmm', '->', 'rf', ',', '(', 'M', '+', '2', ')', '*', 'sizeof', '(', 'char', ')', ')', ';', 'if', '(', 'hmm', '->', 'flags', '&', 'p7H_MMASK', ')', 'ESL_ALLOC', '(', 'hmm', '->', 'mm', ',', '(', 'M', '+', '2', ')', '*', 'sizeof', '(', 'char', ')', ')', ';', 'if', '(', 'hmm', '->', 'flags', '&', 'p7H_CONS', ')', 'ESL_ALLOC', '(', 'hmm', '->', 'consensus', ',', '(', 'M', '+', '2', ')', '*', 'sizeof', '(', 'char', ')', ')', ';', 'if', '(', 'hmm', '->', 'flags', '&', 'p7H_CS', ')', 'ESL_ALLOC', '(', 'hmm', '->', 'cs', ',', '(', 'M', '+', '2', ')', '*', 'sizeof', '(', 'char', ')', ')', ';', 'if', '(', 'hmm', '->', 'flags', '&', 'p7H_CA', ')', 'ESL_ALLOC', '(', 'hmm', '->', 'ca', ',', '(', 'M', '+', '2', ')', '*', 'sizeof', '(', 'char', ')', ')', ';', 'if', '(', 'hmm', '->', 'flags', '&', 'p7H_MAP', ')', 'ESL_ALLOC', '(', 'hmm', '->', 'map', ',', '(', 'M', '+', '1', ')', '*', 'sizeof', '(', 'int', ')', ')', ';', 'return', 'eslOK', ';', 'ERROR', ':', 'return', 'status', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1342,"['process_aliases', '(', 'World', '*', 'world', ',', 'const', 'char', '*', 'cmdline', ',', 'int', 'start', ',', 'int', 'end', ')', '{', 'char', 'cmd', '[', 'MAX_BUFFER', '+', '1', ']', ';', 'int', 'len', '=', 'end', '-', 'start', ';', 'char', '*', 'result', ';', 'if', '(', 'len', '>=', 'MAX_BUFFER', ')', '{', 'ansitextview_append_string_nl', '(', 'world', '->', 'gui', ',', '_', '(', '""""', ')', ')', ';', 'process_command', '(', 'world', ',', 'cmdline', '+', 'start', ',', 'len', ')', ';', 'return', ';', '}', 'memcpy', '(', 'cmd', ',', 'cmdline', '+', 'start', ',', 'len', ')', ';', 'cmd', '[', 'len', ']', '=', ""''"", ';', 'result', '=', 'substitute_aliases', '(', 'world', ',', 'cmd', ')', ';', 'if', '(', 'result', ')', '{', 'parse_commands', '(', 'world', ',', 'result', ',', 'strlen', '(', 'result', ')', ')', ';', 'g_free', '(', 'result', ')', ';', '}', 'else', '{', 'process_command', '(', 'world', ',', 'cmd', ',', 'len', ')', ';', '}', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1343,"['_e_fileman_dbus_daemon_open_directory_cb', '(', 'E_DBus_Object', '*', 'obj', '__UNUSED__', ',', 'DBusMessage', '*', 'message', ')', '{', 'DBusMessageIter', 'itr', ';', 'const', 'char', '*', 'directory', '=', 'NULL', ',', '*', 'p', ';', 'char', '*', 'dev', ',', '*', 'to_free', '=', 'NULL', ';', 'E_Zone', '*', 'zone', ';', 'dbus_message_iter_init', '(', 'message', ',', '&', 'itr', ')', ';', 'dbus_message_iter_get_basic', '(', '&', 'itr', ',', '&', 'directory', ')', ';', 'if', '(', '(', '!directory', ')', '||', '(', 'directory', '[', '0', ']', '==', ""''"", ')', ')', 'return', '_e_fileman_dbus_daemon_error', '(', 'message', ',', '""""', ')', ';', 'zone', '=', 'e_util_zone_current_get', '(', 'e_manager_current_get', '(', ')', ')', ';', 'if', '(', '!zone', ')', 'return', '_e_fileman_dbus_daemon_error', '(', 'message', ',', '""""', ')', ';', 'if', '(', 'strstr', '(', 'directory', ',', '""""', ')', ')', '{', 'Efreet_Uri', '*', 'uri', '=', 'efreet_uri_decode', '(', 'directory', ')', ';', 'directory', '=', 'NULL', ';', 'if', '(', 'uri', ')', '{', 'if', '(', '(', 'uri', '->', 'protocol', ')', '&&', '(', 'strcmp', '(', 'uri', '->', 'protocol', ',', '""""', ')', '==', '0', ')', ')', 'directory', '=', 'to_free', '=', 'strdup', '(', 'uri', '->', 'path', ')', ';', 'efreet_uri_free', '(', 'uri', ')', ';', '}', 'if', '(', '!directory', ')', 'return', '_e_fileman_dbus_daemon_error', '(', 'message', ',', '""""', ')', ';', '}', 'p', '=', 'strchr', '(', 'directory', ',', ""''"", ')', ';', 'if', '(', 'p', ')', '{', 'int', 'len', '=', 'p', '-', 'directory', '+', '1', ';', 'dev', '=', 'malloc', '(', 'len', '+', '1', ')', ';', 'if', '(', '!dev', ')', '{', 'free', '(', 'to_free', ')', ';', 'return', '_e_fileman_dbus_daemon_error', '(', 'message', ',', '""""', ')', ';', '}', 'memcpy', '(', 'dev', ',', 'directory', ',', 'len', ')', ';', 'dev', '[', 'len', ']', '=', ""''"", ';', 'if', '(', '(', 'dev', '[', '0', ']', '!=', ""''"", ')', '&&', '(', 'dev', '[', '0', ']', '!=', ""''"", ')', ')', 'directory', '+=', 'p', '-', 'directory', ';', '}', '{', 'dev', '=', 'strdup', '(', 'directory', ')', ';', 'directory', '=', '""""', ';', '}', 'e_fwin_new', '(', 'zone', '->', 'container', ',', 'dev', ',', 'directory', ')', ';', 'free', '(', 'dev', ')', ';', 'free', '(', 'to_free', ')', ';', 'return', 'dbus_message_new_method_return', '(', 'message', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1344,"['send_dtmf', '(', 'char', '*', 'buf', ',', 'char', '*', 'name', ',', 'int', 'id', ',', 'char', '*', 'args', ',', 'struct', 'adsi_script', '*', 'state', ',', 'const', 'char', '*', 'script', ',', 'int', 'lineno', ')', '{', 'char', 'dtmfstr', '[', '80', ']', ',', '*', 'a', ';', 'int', 'bytes', '=', '0', ';', 'if', '(', '!', '(', 'a', '=', 'get_token', '(', '&', 'args', ',', 'script', ',', 'lineno', ')', ')', ')', '{', 'ast_log', '(', 'LOG_WARNING', ',', '""""', ',', 'lineno', ',', 'script', ')', ';', 'return', '0', ';', '}', 'if', '(', 'process_token', '(', 'dtmfstr', ',', 'a', ',', 'sizeof', '(', 'dtmfstr', ')', '-', '1', ',', 'ARG_STRING', ')', ')', '{', 'ast_log', '(', 'LOG_WARNING', ',', '""""', ',', 'lineno', ',', 'script', ')', ';', 'return', '0', ';', '}', 'a', '=', 'dtmfstr', ';', 'while', '(', '*', 'a', ')', '{', 'if', '(', 'strchr', '(', 'validdtmf', ',', '*', 'a', ')', ')', '{', '*', 'buf', '=', '*', 'a', ';', 'buf', '++', ';', 'bytes', '++', ';', '}', 'ast_log', '(', 'LOG_WARNING', ',', '""""', ',', '*', 'a', ',', 'lineno', ',', 'script', ')', ';', 'a', '++', ';', '}', 'return', 'bytes', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1345,"['max_min', '(', 'argvars', ',', 'rettv', ',', 'domax', ')', 'typval_T\t', '*', 'argvars', ';', 'typval_T\t', '*', 'rettv', ';', 'int\t\tdomax', ';', '{', 'long\tn', '=', '0', ';', 'long\ti', ';', 'int\t\terror', '=', 'FALSE', ';', 'if', '(', 'argvars', '[', '0', ']', '.', 'v_type', '==', 'VAR_LIST', ')', '{', 'list_T\t\t', '*', 'l', ';', 'listitem_T\t', '*', 'li', ';', 'l', '=', 'argvars', '[', '0', ']', '.', 'vval', '.', 'v_list', ';', 'if', '(', 'l', '!=', 'NULL', ')', '{', 'li', '=', 'l', '->', 'lv_first', ';', 'if', '(', 'li', '!=', 'NULL', ')', '{', 'n', '=', 'get_tv_number_chk', '(', '&', 'li', '->', 'li_tv', ',', '&', 'error', ')', ';', 'for', '(', ';', ';', ')', '{', 'li', '=', 'li', '->', 'li_next', ';', 'if', '(', 'li', '==', 'NULL', ')', 'break', ';', 'i', '=', 'get_tv_number_chk', '(', '&', 'li', '->', 'li_tv', ',', '&', 'error', ')', ';', 'if', '(', 'domax', '?', 'i', '>', 'n', ':', 'i', '<', 'n', ')', 'n', '=', 'i', ';', '}', '}', '}', '}', 'else', 'if', '(', 'argvars', '[', '0', ']', '.', 'v_type', '==', 'VAR_DICT', ')', '{', 'dict_T\t\t', '*', 'd', ';', 'int\t\tfirst', '=', 'TRUE', ';', 'hashitem_T\t', '*', 'hi', ';', 'int\t\ttodo', ';', 'd', '=', 'argvars', '[', '0', ']', '.', 'vval', '.', 'v_dict', ';', 'if', '(', 'd', '!=', 'NULL', ')', '{', 'todo', '=', '(', 'int', ')', 'd', '->', 'dv_hashtab', '.', 'ht_used', ';', 'for', '(', 'hi', '=', 'd', '->', 'dv_hashtab', '.', 'ht_array', ';', 'todo', '>', '0', ';', '++', 'hi', ')', '{', 'if', '(', '!HASHITEM_EMPTY', '(', 'hi', ')', ')', '{', '--', 'todo', ';', 'i', '=', 'get_tv_number_chk', '(', '&', 'HI2DI', '(', 'hi', ')', '->', 'di_tv', ',', '&', 'error', ')', ';', 'if', '(', 'first', ')', '{', 'n', '=', 'i', ';', 'first', '=', 'FALSE', ';', '}', 'else', 'if', '(', 'domax', '?', 'i', '>', 'n', ':', 'i', '<', 'n', ')', 'n', '=', 'i', ';', '}', '}', '}', '}', 'EMSG', '(', '_', '(', 'e_listdictarg', ')', ')', ';', 'rettv', '->', 'vval', '.', 'v_number', '=', 'error', '?', '0', ':', 'n', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1346,"['diplomat_sabotage_callback', '(', 'struct', 'widget', '*', 'pWidget', ')', '{', 'if', '(', 'Main', '.', 'event', '.', 'button', '.', 'button', '==', 'SDL_BUTTON_LEFT', ')', '{', 'if', '(', 'NULL', '!=', 'game_unit_by_number', '(', 'pDiplomat_Dlg', '->', 'diplomat_id', ')', '&&', 'NULL', '!=', 'game_city_by_number', '(', 'pDiplomat_Dlg', '->', 'diplomat_target_id', ')', ')', '{', 'request_diplomat_action', '(', 'DIPLOMAT_SABOTAGE', ',', 'pDiplomat_Dlg', '->', 'diplomat_id', ',', 'pDiplomat_Dlg', '->', 'diplomat_target_id', ',', 'B_LAST', '+', '1', ')', ';', '}', 'popdown_diplomat_dialog', '(', ')', ';', '}', 'return', '-', '1', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1347,"['squaretrans_pow2', '(', 'mpd_uint_t', '*', 'matrix', ',', 'mpd_size_t', 'size', ')', '{', 'mpd_uint_t', 'buf1', '[', 'SIDE', '*', 'SIDE', ']', ';', 'mpd_uint_t', 'buf2', '[', 'SIDE', '*', 'SIDE', ']', ';', 'mpd_uint_t', '*', 'to', ',', '*', 'from', ';', 'mpd_size_t', 'b', '=', 'size', ';', 'mpd_size_t', 'r', ',', 'c', ';', 'mpd_size_t', 'i', ';', 'while', '(', 'b', '>', 'SIDE', ')', 'b', '>>=', '1', ';', 'for', '(', 'r', '=', '0', ';', 'r', '<', 'size', ';', 'r', '+=', 'b', ')', '{', 'for', '(', 'c', '=', 'r', ';', 'c', '<', 'size', ';', 'c', '+=', 'b', ')', '{', 'from', '=', 'matrix', '+', 'r', '*', 'size', '+', 'c', ';', 'to', '=', 'buf1', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'b', ';', 'i', '++', ')', '{', 'memcpy', '(', 'to', ',', 'from', ',', 'b', '*', '(', 'sizeof', '*', 'to', ')', ')', ';', 'from', '+=', 'size', ';', 'to', '+=', 'b', ';', '}', 'squaretrans', '(', 'buf1', ',', 'b', ')', ';', 'if', '(', 'r', '==', 'c', ')', '{', 'to', '=', 'matrix', '+', 'r', '*', 'size', '+', 'c', ';', 'from', '=', 'buf1', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'b', ';', 'i', '++', ')', '{', 'memcpy', '(', 'to', ',', 'from', ',', 'b', '*', '(', 'sizeof', '*', 'to', ')', ')', ';', 'from', '+=', 'b', ';', 'to', '+=', 'size', ';', '}', 'continue', ';', '}', 'else', '{', 'from', '=', 'matrix', '+', 'c', '*', 'size', '+', 'r', ';', 'to', '=', 'buf2', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'b', ';', 'i', '++', ')', '{', 'memcpy', '(', 'to', ',', 'from', ',', 'b', '*', '(', 'sizeof', '*', 'to', ')', ')', ';', 'from', '+=', 'size', ';', 'to', '+=', 'b', ';', '}', 'squaretrans', '(', 'buf2', ',', 'b', ')', ';', 'to', '=', 'matrix', '+', 'c', '*', 'size', '+', 'r', ';', 'from', '=', 'buf1', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'b', ';', 'i', '++', ')', '{', 'memcpy', '(', 'to', ',', 'from', ',', 'b', '*', '(', 'sizeof', '*', 'to', ')', ')', ';', 'from', '+=', 'b', ';', 'to', '+=', 'size', ';', '}', 'to', '=', 'matrix', '+', 'r', '*', 'size', '+', 'c', ';', 'from', '=', 'buf2', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'b', ';', 'i', '++', ')', '{', 'memcpy', '(', 'to', ',', 'from', ',', 'b', '*', '(', 'sizeof', '*', 'to', ')', ')', ';', 'from', '+=', 'b', ';', 'to', '+=', 'size', ';', '}', '}', '}', '}', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1348,"['resetContext', '(', 'int', 'width', ',', 'int', 'height', ')', '{', '/', '/', '###', 'FIXME', 'FIXME', ':', 'use', ""khtmlImLoad's"", 'limit', '/', '/', 'for', 'physical', 'canvas', 'and', 'transform', 'painter', 'to', 'match', 'logical', 'if', '(', 'workPainter', '.', 'isActive', '(', ')', ')', 'workPainter', '.', 'end', '(', ')', ';', 'if', '(', 'canvasImage', ')', 'canvasImage', '->', 'resizeImage', '(', 'width', ',', 'height', ')', ';', 'canvasImage', '=', 'new', 'khtmlImLoad', ':', ':', 'CanvasImage', '(', 'width', ',', 'height', ')', ';', 'canvasImage', '->', 'qimage', '(', ')', '->', 'fill', '(', '0x00000000', ')', ';', '/', '/', 'transparent', 'black', 'is', 'the', 'initial', 'stateStack', '.', 'clear', '(', ')', ';', 'PaintState', 'defaultState', ';', 'beginPath', '(', ')', ';', 'defaultState', '.', 'infinityTransform', '=', 'false', ';', 'defaultState', '.', 'clipPath', '=', 'QPainterPath', '(', ')', ';', 'defaultState', '.', 'clipPath', '.', 'setFillRule', '(', 'Qt', ':', ':', 'WindingFill', ')', ';', 'defaultState', '.', 'clipping', '=', 'false', ';', 'defaultState', '.', 'globalAlpha', '=', '1', '.', '0f', ';', 'defaultState', '.', 'globalCompositeOperation', '=', 'QPainter', ':', ':', 'CompositionMode_SourceOver', ';', 'defaultState', '.', 'strokeStyle', '=', 'new', 'CanvasColorImpl', '(', 'QColor', '(', 'Qt', ':', ':', 'black', ')', ')', ';', 'defaultState', '.', 'fillStyle', '=', 'new', 'CanvasColorImpl', '(', 'QColor', '(', 'Qt', ':', ':', 'black', ')', ')', ';', 'defaultState', '.', 'lineWidth', '=', '1', '.', '0f', ';', 'defaultState', '.', 'lineCap', '=', 'Qt', ':', ':', 'FlatCap', ';', 'defaultState', '.', 'lineJoin', '=', 'Qt', ':', ':', 'SvgMiterJoin', ';', 'defaultState', '.', 'miterLimit', '=', '10', '.', '0f', ';', 'defaultState', '.', 'shadowOffsetX', '=', '0', '.', '0f', ';', 'defaultState', '.', 'shadowOffsetY', '=', '0', '.', '0f', ';', 'defaultState', '.', 'shadowBlur', '=', '0', '.', '0f', ';', 'defaultState', '.', 'shadowColor', '=', 'QColor', '(', '0', ',', '0', ',', '0', ',', '0', ')', ';', '/', '/', 'Transparent', 'stateStack', '.', 'push', '(', 'defaultState', ')', ';', 'dirty', '=', 'DrtAll', ';', 'needRendererUpdate', '(', ')', ';', 'emptyPath', '=', 'true', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1349,"['if', '(', 'nonNull', '(', 'qs', ')', ')', '{', 'Cell', 'nv', ';', 'if', '(', '!isVar', '(', 'v', ')', ')', 'internal', '(', '""""', ')', ';', 'for', '(', 'nv', '=', 'mkVar', '(', 'textOf', '(', 'v', ')', ')', ';', 'nonNull', '(', 'tl', '(', 'qs', ')', ')', ';', 'qs', '=', 'tl', '(', 'qs', ')', ')', 'nv', '=', 'ap', '(', 'nv', ',', 'thd3', '(', 'hd', '(', 'qs', ')', ')', ')', ';', 'fst', '(', 'v', ')', '=', 'nv', ';', 'snd', '(', 'v', ')', '=', 'thd3', '(', 'hd', '(', 'qs', ')', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1350,"['probe_by_scheme', '(', 'ProbeState', '*', 'state', ')', '{', 'const', 'char', '*', 's', '=', 'strstr', '(', 'state', '->', 'filename', ',', '""""', ')', ';', 'if', '(', 's', '==', 'NULL', ')', 'return', ';', 'AUDDBG', '(', '""""', ')', ';', 'char', 'buf', '[', 's', '-', 'state', '->', 'filename', '+', '1', ']', ';', 'memcpy', '(', 'buf', ',', 'state', '->', 'filename', ',', 's', '-', 'state', '->', 'filename', ')', ';', 'buf', '[', 's', '-', 'state', '->', 'filename', ']', '=', '0', ';', 'input_plugin_for_key', '(', 'INPUT_KEY_SCHEME', ',', 'buf', ',', '(', 'PluginForEachFunc', ')', 'probe_func_fast', ',', 'state', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1351,"['ast_say_datetime_from_now_en', '(', 'struct', 'ast_channel', '*', 'chan', ',', 'time_t', 't', ',', 'const', 'char', '*', 'ints', ',', 'const', 'char', '*', 'lang', ')', '{', 'int', 'res', '=', '0', ';', 'struct', 'timeval', 'nowtv', '=', 'ast_tvnow', '(', ')', ',', 'when', '=', '{', 't', ',', '0', '}', ';', 'int', 'daydiff', ';', 'struct', 'ast_tm', 'tm', ';', 'struct', 'ast_tm', 'now', ';', 'char', 'fn', '[', '256', ']', ';', 'ast_localtime', '(', '&', 'when', ',', '&', 'tm', ',', 'NULL', ')', ';', 'ast_localtime', '(', '&', 'nowtv', ',', '&', 'now', ',', 'NULL', ')', ';', 'daydiff', '=', 'now', '.', 'tm_yday', '-', 'tm', '.', 'tm_yday', ';', 'if', '(', '(', 'daydiff', '<', '0', ')', '||', '(', 'daydiff', '>', '6', ')', ')', '{', 'if', '(', '!res', ')', '{', 'snprintf', '(', 'fn', ',', 'sizeof', '(', 'fn', ')', ',', '""""', ',', 'tm', '.', 'tm_mon', ')', ';', 'res', '=', 'ast_streamfile', '(', 'chan', ',', 'fn', ',', 'lang', ')', ';', 'if', '(', '!res', ')', 'res', '=', 'ast_waitstream', '(', 'chan', ',', 'ints', ')', ';', '}', 'if', '(', '!res', ')', 'res', '=', 'ast_say_number', '(', 'chan', ',', 'tm', '.', 'tm_mday', ',', 'ints', ',', 'lang', ',', '(', 'char', '*', ')', 'NULL', ')', ';', '}', 'else', 'if', '(', 'daydiff', ')', '{', 'if', '(', '!res', ')', '{', 'snprintf', '(', 'fn', ',', 'sizeof', '(', 'fn', ')', ',', '""""', ',', 'tm', '.', 'tm_wday', ')', ';', 'res', '=', 'ast_streamfile', '(', 'chan', ',', 'fn', ',', 'lang', ')', ';', 'if', '(', '!res', ')', 'res', '=', 'ast_waitstream', '(', 'chan', ',', 'ints', ')', ';', '}', 'if', '(', '!res', ')', 'res', '=', 'ast_say_time', '(', 'chan', ',', 't', ',', 'ints', ',', 'lang', ')', ';', 'return', 'res', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1352,"['bsc_skip_to', '(', 'Scorer', '*', 'self', ',', 'int', 'doc_num', ')', '{', 'Scorer', '*', 'cnt_sum_sc', '=', 'BSc', '(', 'self', ')', '->', 'counting_sum_scorer', ';', 'if', '(', '!BSc', '(', 'self', ')', '->', 'counting_sum_scorer', ')', '{', 'cnt_sum_sc', '=', 'bsc_init_counting_sum_scorer', '(', 'BSc', '(', 'self', ')', ')', ';', '}', 'if', '(', 'cnt_sum_sc', '->', 'skip_to', '(', 'cnt_sum_sc', ',', 'doc_num', ')', ')', '{', 'self', '->', 'doc', '=', 'cnt_sum_sc', '->', 'doc', ';', 'return', 'true', ';', '}', 'else', '{', 'return', 'false', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1353,"['table_primary_key', '(', 'DB_DATABASE', '*', 'db', ',', 'char', '*', 'table', ',', 'char', '*', '*', '*', 'primary', ')', '{', '#ifdef', 'fprintf', '(', 'stderr', ',', '""""', ',', '__FILE__', ',', '__LINE__', ')', ';', 'fprintf', '(', 'stderr', ',', '""""', ')', ';', 'fflush', '(', 'stderr', ')', ';', 'SQLHSTMT', 'statHandle', ';', 'SQLRETURN', 'retcode', ';', '/', '/', 'SQLRETURN', 'V_OD_erg', ';', 'SQLRETURN', 'nReturn', '=', '-', '1', ';', 'SQLCHAR', 'szKeyName', '[', '101', ']', '=', '""""', ';', 'SQLCHAR', 'szColumnName', '[', '101', ']', '=', '""""', ';', 'SQLCHAR', 'query', '[', '101', ']', '=', '""""', ';', 'SQLSMALLINT', 'colsNum', ';', 'int', 'i', ';', 'ODBC_CONN', '*', 'han', '=', '(', 'ODBC_CONN', '*', ')', 'db', '->', 'handle', ';', '/', '/', 'CREATE', 'A', 'ODBC_RESULT', '*', 'res', ';', 'strcpy', '(', '(', 'char', '*', ')', '&', 'query', '[', '14', ']', ',', 'table', ')', ';', 'res', '=', 'malloc', '(', 'sizeof', '(', 'ODBC_RESULT', ')', ')', ';', 'retcode', '=', 'SQLAllocHandle', '(', 'SQL_HANDLE_STMT', ',', 'han', '->', 'odbcHandle', ',', '&', 'statHandle', ')', ';', 'if', '(', '(', 'retcode', '!=', 'SQL_SUCCESS', ')', '&&', '(', 'retcode', '!=', 'SQL_SUCCESS_WITH_INFO', ')', ')', '{', 'return', 'retcode', ';', '}', '/', '*', 'if', '(', 'if', '(', '!SQL_SUCCEEDED', '(', 'nReturn', '=', 'SQLPrimaryKeys', '(', 'statHandle', ',', '(', 'SQLCHAR', '*', ')', '""""', ',', '0', ',', '(', 'SQLCHAR', '*', ')', '""""', ',', '0', ',', '(', 'SQLCHAR', '*', ')', 'table', ',', 'SQL_NTS', ')', ')', ')', '{', 'free', '(', 'res', ')', ';', 'fprintf', '(', 'stderr', ',', '""""', ',', 'nReturn', ')', ';', 'GB', '.', 'Error', '(', '""""', ',', 'table', ')', ';', 'return', 'TRUE', ';', '}', '/', '/', 'GET', 'SQLNumResultCols', '(', 'statHandle', ',', '&', 'colsNum', ')', ';', 'GB', '.', 'NewArray', '(', 'primary', ',', 'sizeof', '(', 'char', '*', ')', ',', '0', ')', ';', 'i', '=', '0', ';', 'while', '(', 'SQL_SUCCEEDED', '(', 'SQLFetch', '(', 'statHandle', ')', ')', ')', '{', 'if', '(', '(', '(', 'statHandle', ',', '4', ',', 'SQL_C_CHAR', ',', '&', 'szColumnName', '[', '0', ']', ',', 'sizeof', '(', 'szColumnName', ')', ',', '0', ')', ')', ')', 'strcpy', '(', '(', 'char', '*', ')', 'szColumnName', ',', '""""', ')', ';', 'if', '(', '(', '(', 'statHandle', ',', '6', ',', 'SQL_C_CHAR', ',', '&', 'szKeyName', '[', '0', ']', ',', 'sizeof', '(', 'szKeyName', ')', ',', '0', ')', ')', ')', 'strcpy', '(', '(', 'char', '*', ')', 'szKeyName', ',', '""""', ')', ';', '*', '(', 'char', '*', '*', ')', 'GB', '.', 'Add', '(', 'primary', ')', '=', 'GB', '.', 'NewZeroString', '(', '(', 'char', '*', ')', 'szColumnName', ')', ';', 'i', '++', ';', '}', 'SQLFreeHandle', '(', 'SQL_HANDLE_STMT', ',', 'statHandle', ')', ';', 'free', '(', 'res', ')', ';', 'return', 'FALSE', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1354,"['{', 'int', 'i', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'MEM_PTAB_SIZE', ';', 'i', '++', ')', 'mem', '->', 'ptab', '[', 'i', ']', '=', 'NULL', ';', 'mem', '->', 'page_count', '=', '0', ';', 'mem', '->', 'ptab_misses', '=', '0', ';', 'mem', '->', 'ptab_accesses', '=', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1355,"['parse_byte_size', '(', 'const', 'std', ':', ':', 'string', '&', 'str', ',', 'uint64_t', '&', 'bytes', ',', 'bool', 'extended', ')', '{', '/', '/', 'E', '.', 'g', '.', '""""', 'bytes', 'or', '""""', 'or', '""""', '.', '/', '/', 'French', 'locale', 'inserts', '0xA0', 'as', 'a', 'separator', '(', 'non', '-', 'breaking', 'space', ',', '_not_', 'a', 'valid', 'utf8', 'char', ')', '.', '/', '/', 'Added', ""''"", '-', 'separated', 'too', ',', 'just', 'in', 'case', '.', '/', '/', 'Smartctl', 'uses', 'system', ""locale's"", 'thousands_sep', 'explicitly', '.', '/', '/', 'When', 'launching', 'smartctl', ',', 'we', 'use', 'LANG', '=', 'C', 'for', 'it', ',', 'but', 'it', 'works', 'only', 'on', 'POSIX', '.', '/', '/', 'Also', ',', 'loading', 'smartctl', 'output', 'files', 'from', 'different', 'locales', ""doesn't"", 'really', 'work', '.', '/', '/', '\tdebug_out_dump', '(', '""""', ',', '""""', '<<', 'str', '<<', '""""', ')', ';', 'std', ':', ':', 'vector', '<', 'std', ':', ':', 'string', '>', 'to_replace', ';', 'to_replace', '.', 'push_back', '(', '""""', ')', ';', 'to_replace', '.', 'push_back', '(', '""""', ')', ';', 'to_replace', '.', 'push_back', '(', '""""', ')', ';', 'to_replace', '.', 'push_back', '(', '""""', ')', ';', 'to_replace', '.', 'push_back', '(', 'std', ':', ':', 'string', '(', '1', ',', '0xa0', ')', ')', ';', '#ifdef', '/', '/', 'if', 'current', 'locale', 'is', 'C', ',', 'then', 'probably', 'we', ""didn't"", 'change', 'it', 'at', '/', '/', 'startup', ',', 'so', 'set', 'it', 'now', '(', 'temporarily', ')', '.', 'Otherwise', ',', 'just', 'use', 'the', 'current', '/', '/', 'thousands', 'separator', '.', '{', 'std', ':', ':', 'string', 'old_locale', '=', 'hz', ':', ':', 'locale_c_get', '(', ')', ';', 'hz', ':', ':', 'ScopedCLocale', 'loc', '(', '""""', ',', 'old_locale', '==', '""""', ')', ';', '/', '/', 'set', 'system', 'locale', 'if', 'the', 'current', 'one', 'is', 'struct', 'lconv', '*', 'lc', '=', 'std', ':', ':', 'localeconv', '(', ')', ';', 'if', '(', 'lc', '&&', 'lc', '->', 'thousands_sep', '&&', '*', '(', 'lc', '->', 'thousands_sep', ')', ')', '{', 'to_replace', '.', 'push_back', '(', 'lc', '->', 'thousands_sep', ')', ';', '}', '}', '/', '/', 'the', 'locale', 'is', 'restored', 'to_replace', '.', 'push_back', '(', '""""', ')', ';', 'std', ':', ':', 'string', 's', '=', 'hz', ':', ':', 'string_replace_array_copy', '(', 'hz', ':', ':', 'string_trim_copy', '(', 'str', ')', ',', 'to_replace', ',', '""""', ')', ';', 'uint64_t', 'v', '=', '0', ';', 'if', '(', 'hz', ':', ':', 'string_is_numeric', '(', 's', ',', 'v', ',', 'false', ')', ')', '{', 'bytes', '=', 'v', ';', 'return', 'hz', ':', ':', 'format_size', '(', 'v', ',', 'true', ')', '+', '(', 'extended', '?', '""""', '+', 'hz', ':', ':', 'format_size', '(', 'v', ',', 'false', ')', '+', '""""', '+', 'hz', ':', ':', 'number_to_string', '(', 'v', ')', '+', '""""', ':', '""""', ')', ';', '}', 'return', 'std', ':', ':', 'string', '(', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1356,"['clickdl_load_requirement', '(', 'String', 'name', ',', 'const', 'Vector', '<', 'ArchiveElement', '>', '*', 'archive', ',', 'ErrorHandler', '*', 'errh', ')', '{', 'ClickProvision', '*', 'p', '=', 'find_provision', '(', 'name', ',', '1', ')', ';', 'if', '(', '!p', '||', 'p', '->', 'loaded', ')', 'return', ';', 'ContextErrorHandler', 'cerrh', '(', 'errh', ',', '""""', ',', 'name', '.', 'c_str', '(', ')', ')', ';', 'bool', 'tmpdir_populated', '=', 'false', ';', '#ifdef', 'String', 'suffix', '=', '""""', ',', 'cxx_suffix', '=', '""""', ',', 'target', '=', '""""', ';', 'String', 'suffix', '=', '""""', ',', 'cxx_suffix', '=', '""""', ',', 'target', '=', '""""', ';', 'String', 'package', ';', '/', '/', 'check', 'const', 'ArchiveElement', '*', 'ae', '=', '0', ';', 'if', '(', 'archive', '&&', '(', 'ae', '=', 'ArchiveElement', ':', ':', 'find', '(', '*', 'archive', ',', 'name', '+', 'suffix', ')', ')', ')', '{', 'if', '(', '!check_tmpdir', '(', '*', 'archive', ',', 'false', ',', 'tmpdir_populated', ',', '&', 'cerrh', ')', ')', 'return', ';', 'package', '=', '*', 'tmpdir', '+', '""""', '+', 'name', '+', 'suffix', ';', 'FILE', '*', 'f', '=', 'fopen', '(', 'package', '.', 'c_str', '(', ')', ',', '""""', ')', ';', 'if', '(', '!f', ')', '{', 'cerrh', '.', 'error', '(', '""""', ',', 'package', '.', 'c_str', '(', ')', ',', 'strerror', '(', 'errno', ')', ')', ';', 'package', '=', 'String', '(', ')', ';', '}', 'else', '{', 'ignore_result', '(', 'fwrite', '(', 'ae', '->', 'data', '.', 'data', '(', ')', ',', '1', ',', 'ae', '->', 'data', '.', 'length', '(', ')', ',', 'f', ')', ')', ';', 'fclose', '(', 'f', ')', ';', '}', '}', 'else', 'if', '(', 'archive', '&&', '(', 'ae', '=', 'ArchiveElement', ':', ':', 'find', '(', '*', 'archive', ',', 'name', '+', 'cxx_suffix', ')', ')', ')', 'package', '=', 'click_compile_archive_file', '(', '*', 'archive', ',', 'ae', ',', 'name', ',', 'target', ',', 'true', ',', 'tmpdir_populated', ',', '&', 'cerrh', ')', ';', 'else', 'if', '(', 'archive', '&&', '(', 'ae', '=', 'ArchiveElement', ':', ':', 'find', '(', '*', 'archive', ',', 'name', '+', '""""', ')', ')', ')', 'package', '=', 'click_compile_archive_file', '(', '*', 'archive', ',', 'ae', ',', 'name', ',', 'target', ',', 'true', ',', 'tmpdir_populated', ',', '&', 'cerrh', ')', ';', 'else', '{', '/', '/', 'search', 'package', '=', 'clickpath_find_file', '(', 'name', '+', 'suffix', ',', '""""', ',', 'CLICK_LIBDIR', ')', ';', 'if', '(', '!package', ')', 'package', '=', 'clickpath_find_file', '(', 'name', '+', '""""', ',', '""""', ',', 'CLICK_LIBDIR', ')', ';', 'if', '(', '!package', ')', 'cerrh', '.', 'error', '(', '""""', ',', 'name', '.', 'c_str', '(', ')', ',', 'suffix', '.', 'c_str', '(', ')', ',', 'CLICK_LIBDIR', ')', ';', '}', 'p', '->', 'loaded', '=', 'true', ';', 'if', '(', 'package', ')', 'clickdl_load_package', '(', 'package', ',', '&', 'cerrh', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1357,"['opclass_is_btree', '(', 'Oid', 'opclass', ')', '{', 'HeapTuple\ttp', ';', 'Form_pg_opclass', 'cla_tup', ';', 'bool\t\tresult', ';', 'tp', '=', 'SearchSysCache', '(', 'CLAOID', ',', 'ObjectIdGetDatum', '(', 'opclass', ')', ',', '0', ',', '0', ',', '0', ')', ';', 'if', '(', '!HeapTupleIsValid', '(', 'tp', ')', ')', 'elog', '(', 'ERROR', ',', '""""', ',', 'opclass', ')', ';', 'cla_tup', '=', '(', 'Form_pg_opclass', ')', 'GETSTRUCT', '(', 'tp', ')', ';', 'result', '=', '(', 'cla_tup', '->', 'opcamid', '==', 'BTREE_AM_OID', ')', ';', 'ReleaseSysCache', '(', 'tp', ')', ';', 'return', 'result', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
1358,"['add_paths_to_joinrel', '(', 'PlannerInfo', '*', 'root', ',', 'RelOptInfo', '*', 'joinrel', ',', 'RelOptInfo', '*', 'outerrel', ',', 'RelOptInfo', '*', 'innerrel', ',', 'JoinType', 'jointype', ',', 'List', '*', 'restrictlist', ')', '{', 'List\t', '*', 'mergeclause_list', '=', 'NIL', ';', '/', '*', '*', 'Find', 'potential', 'mergejoin', 'clauses', '.', 'We', 'can', 'skip', 'this', 'if', 'we', 'are', '*', 'interested', 'in', 'doing', 'a', 'mergejoin', '.', 'However', ',', 'mergejoin', 'is', 'currently', '*', 'only', 'way', 'of', 'implementing', 'full', 'outer', 'joins', ',', 'so', 'override', '*', 'disable', 'if', ""it's"", 'a', 'full', 'join', '.', 'if', '(', 'enable_mergejoin', '||', 'jointype', '==', 'JOIN_FULL', ')', 'mergeclause_list', '=', 'select_mergejoin_clauses', '(', 'joinrel', ',', 'outerrel', ',', 'innerrel', ',', 'restrictlist', ',', 'jointype', ')', ';', '/', '*', '*', '1', '.', 'Consider', 'mergejoin', 'paths', 'where', 'both', 'relations', 'must', 'be', '*', 'sorted', '.', 'sort_inner_and_outer', '(', 'root', ',', 'joinrel', ',', 'outerrel', ',', 'innerrel', ',', 'restrictlist', ',', 'mergeclause_list', ',', 'jointype', ')', ';', '/', '*', '*', '2', '.', 'Consider', 'paths', 'where', 'the', 'outer', 'relation', 'need', 'not', 'be', '*', 'sorted', '.', 'This', 'includes', 'both', 'nestloops', 'and', 'mergejoins', 'where', 'the', '*', 'path', 'is', 'already', 'ordered', '.', 'match_unsorted_outer', '(', 'root', ',', 'joinrel', ',', 'outerrel', ',', 'innerrel', ',', 'restrictlist', ',', 'mergeclause_list', ',', 'jointype', ')', ';', '#ifdef', '/', '*', '*', '3', '.', 'Consider', 'paths', 'where', 'the', 'inner', 'relation', 'need', 'not', 'be', '*', 'sorted', '.', '\tThis', 'includes', 'mergejoins', 'only', '(', 'nestloops', 'were', 'already', 'built', '*', 'match_unsorted_outer', ')', '.', '*', '*', 'Diked', 'out', 'as', 'redundant', '2', '/', '13', '/', '2000', '--', 'tgl', '.', 'There', ""isn't"", 'any', '*', 'significant', 'difference', 'between', 'the', 'inner', 'and', 'outer', 'side', 'of', 'a', 'mergejoin', ',', '*', 'so', 'match_unsorted_inner', 'creates', 'no', 'paths', 'that', ""aren't"", 'equivalent', '*', 'those', 'made', 'by', 'match_unsorted_outer', 'when', 'add_paths_to_joinrel', '(', ')', '*', 'invoked', 'with', 'the', 'two', 'rels', 'given', 'in', 'the', 'other', 'order', '.', 'match_unsorted_inner', '(', 'root', ',', 'joinrel', ',', 'outerrel', ',', 'innerrel', ',', 'restrictlist', ',', 'mergeclause_list', ',', 'jointype', ')', ';', '/', '*', '*', '4', '.', 'Consider', 'paths', 'where', 'both', 'outer', 'and', 'inner', 'relations', 'must', 'be', '*', 'before', 'being', 'joined', '.', 'if', '(', 'enable_hashjoin', ')', 'hash_inner_and_outer', '(', 'root', ',', 'joinrel', ',', 'outerrel', ',', 'innerrel', ',', 'restrictlist', ',', 'jointype', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1359,"['copy_args_expanding_macros', '(', 'int', 'argc', ',', 'char', '*', 'argv', '[', ']', ',', 'char', '*', 'av', '[', ']', ',', 'int', 'max_ac', ')', '{', 'int\t\ti', ',', 'ac', '=', '0', ',', 'rc', ';', 'char', '*', '\t\targ', ';', 'char', '*', '\t\tp', ';', 'char\t\tenv_name', '[', '50', ']', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'argc', ';', 'i', '++', ')', '{', 'arg', '=', 'argv', '[', 'i', ']', ';', 'if', '(', 'strncmp', '(', 'arg', ',', '""""', ',', '2', ')', '!=', '0', '||', 'arg', '[', '2', ']', '==', '0', ')', '{', 'av', '[', 'ac', '++', ']', '=', 'arg', ';', 'continue', ';', '}', 'sprintf', '(', 'env_name', ',', '""""', ',', 'arg', '+', '2', ')', ';', 'if', '(', '(', 'p', '=', 'getenv', '(', 'env_name', ')', ')', '!=', '0', ')', '{', 'ac', '+=', 'snarf_macro', '(', '&', 'av', '[', 'ac', ']', ',', 'p', ')', ';', 'continue', ';', '}', 'rc', '=', 'lookup_and_snarf', '(', '&', 'av', '[', 'ac', ']', ',', 'arg', '+', '2', ')', ';', 'if', '(', 'rc', '<', '0', ')', '{', 'error_byebye', '(', '""""', ',', 'arg', '+', '2', ')', ';', '}', 'ac', '+=', 'rc', ';', '}', 'av', '[', 'ac', ']', '=', '0', ';', 'return', 'ac', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1360,"['add_lists', '(', 'ITEM', '*', 's1', ',', 'ITEM', '*', 's2', ')', '{', 'ITEM', '*', 'p', ',', '*', 'p0', ';', 'int', 'i', ',', 'n1', ',', 'n2', ';', 'n1', '=', 'count_items', '(', 's1', ')', ';', 'n2', '=', 'count_items', '(', 's2', ')', ';', 'p', '=', 'p0', '=', '(', 'ITEM', '*', ')', 'checked_alloc', '(', 'n1', '+', 'n2', '+', '1', ',', '4', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'n2', ';', 'i', '++', ')', '*', 'p', '++', '=', '*', '(', 's2', '+', 'i', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'n1', ';', 'i', '++', ')', '\t', '*', 'p', '++', '=', '*', '(', 's1', '+', 'i', ')', ';', '*', 'p', '=', '0', ';', 'mem_free', '(', 's1', ')', ';', 'mem_free', '(', 's2', ')', ';', 'return', 'p0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
1361,"['gst_pad_set_offset', '(', 'GstPad', '*', 'pad', ',', 'gint64', 'offset', ')', '{', 'PadEvent', '*', 'ev', ';', 'g_return_if_fail', '(', 'GST_IS_PAD', '(', 'pad', ')', ')', ';', 'GST_OBJECT_LOCK', '(', 'pad', ')', ';', 'if', '(', 'pad', '->', 'offset', '==', 'offset', ')', 'goto', 'done', ';', 'pad', '->', 'offset', '=', 'offset', ';', 'GST_DEBUG_OBJECT', '(', 'pad', ',', '""""', 'G_GINT64_FORMAT', ',', 'offset', ')', ';', '/', '*', 'sinkpads', 'will', 'apply', 'their', 'offset', 'the', 'next', 'time', 'a', 'if', '(', 'GST_PAD_IS_SINK', '(', 'pad', ')', ')', 'goto', 'done', ';', 'if', '(', '(', 'ev', '=', 'find_event_by_type', '(', 'pad', ',', 'GST_EVENT_SEGMENT', ',', '0', ')', ')', ')', '{', 'ev', '->', 'received', '=', 'FALSE', ';', 'GST_OBJECT_FLAG_SET', '(', 'pad', ',', 'GST_PAD_FLAG_PENDING_EVENTS', ')', ';', '}', 'done', ':', 'GST_OBJECT_UNLOCK', '(', 'pad', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1362,"['_nc_printf_string', '(', 'const', 'char', '*', 'fmt', ',', 'va_list', 'ap', ')', '{', 'char', '*', 'result', '=', '0', ';', 'if', '(', 'fmt', '!=', '0', ')', '{', '#if', 'int', 'len', '=', '_nc_printf_length', '(', 'fmt', ',', 'ap', ')', ';', 'if', '(', '(', 'int', ')', 'my_length', '<', 'len', '+', '1', ')', '{', 'my_length', '=', '2', '*', '(', 'len', '+', '1', ')', ';', 'my_buffer', '=', 'typeRealloc', '(', 'char', ',', 'my_length', ',', 'my_buffer', ')', ';', '}', 'if', '(', 'my_buffer', '!=', '0', ')', '{', '*', 'my_buffer', '=', ""''"", ';', 'if', '(', 'len', '>=', '0', ')', '{', 'vsprintf', '(', 'my_buffer', ',', 'fmt', ',', 'ap', ')', ';', '}', 'result', '=', 'my_buffer', ';', '}', '#define', 'MyCols', '_nc_globals', '.', '#define', 'MyRows', '_nc_globals', '.', 'if', '(', 'screen_lines', '>', 'MyRows', '||', 'screen_columns', '>', 'MyCols', ')', '{', 'if', '(', 'screen_lines', '>', 'MyRows', ')', 'MyRows', '=', 'screen_lines', ';', 'if', '(', 'screen_columns', '>', 'MyCols', ')', 'MyCols', '=', 'screen_columns', ';', 'my_length', '=', '(', 'MyRows', '*', '(', 'MyCols', '+', '1', ')', ')', '+', '1', ';', 'my_buffer', '=', 'typeRealloc', '(', 'char', ',', 'my_length', ',', 'my_buffer', ')', ';', '}', 'if', '(', 'my_buffer', '!=', '0', ')', '{', '#', 'if', '#', '#', 'result', '=', 'my_buffer', ';', '}', 'free', '(', 'my_buffer', ')', ';', 'my_buffer', '=', '0', ';', 'my_length', '=', '0', ';', '}', 'return', 'result', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1363,"['udi_unpack_tracks', '(', 'disk_t', '*', 'd', ')', '{', 'int', 'i', ',', 'tlen', ',', 'clen', ',', 'ttyp', ';', 'libspectrum_byte', '*', 'tmp', ';', 'libspectrum_byte', 'mask', '[', ']', '=', '{', '0xff', ',', '0x80', ',', '0xc0', ',', '0xe0', ',', '0xf0', ',', '0xf8', ',', '0xfc', ',', '0xfe', '}', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'd', '->', 'sides', '*', 'd', '->', 'cylinders', ';', 'i', '++', ')', '{', 'DISK_SET_TRACK_IDX', '(', 'd', ',', 'i', ')', ';', 'tmp', '=', 'd', '->', 'track', ';', 'ttyp', '=', 'tmp', '[', '-', '1', ']', ';', 'tlen', '=', 'tmp', '[', '-', '3', ']', '+', '256', '*', 'tmp', '[', '-', '2', ']', ';', 'clen', '=', 'DISK_CLEN', '(', 'tlen', ')', ';', 'tmp', '+=', 'tlen', ';', 'if', '(', 'ttyp', '&', '0x80', ')', 'tmp', '+=', 'clen', ';', 'if', '(', 'ttyp', '&', '0x02', ')', 'tmp', '+=', 'clen', ';', 'if', '(', 'tmp', '!=', 'd', '->', 'weak', ')', 'memcpy', '(', 'd', '->', 'weak', ',', 'tmp', ',', 'clen', ')', ';', 'tmp', '-=', 'clen', ';', 'memset', '(', 'd', '->', 'weak', ',', '0', ',', 'clen', ')', ';', '}', 'if', '(', 'tmp', '!=', 'd', '->', 'fm', ')', 'memcpy', '(', 'd', '->', 'fm', ',', 'tmp', ',', 'clen', ')', ';', 'tmp', '-=', 'clen', ';', 'memset', '(', 'd', '->', 'fm', ',', 'ttyp', '&', '0x01', '?', '0xff', ':', '0', ',', 'clen', ')', ';', 'd', '->', 'fm', '[', 'clen', '-', '1', ']', '&=', 'mask', '[', 'tlen', '%', '8', ']', ';', '}', '}', 'if', '(', 'tmp', '!=', 'd', '->', 'clocks', ')', 'memcpy', '(', 'd', '->', 'clocks', ',', 'tmp', ',', 'clen', ')', ';', '}', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1364,"['gsc_search', '(', 'struct', 'cat_star', '*', 'cst', '[', ']', ',', 'struct', 'catalog', '*', 'cat', ',', 'double', 'ra', ',', 'double', 'dec', ',', 'double', 'radius', ',', 'int', 'n', ')', '{', 'int', '*', 'regs', ',', '*', 'ids', ';', 'float', '*', 'ras', ',', '*', 'decs', ',', '*', 'mags', ';', 'int', 'n_gsc', ',', 'i', ',', 'j', ';', 'struct', 'cat_star', '*', 'cats', ';', 'struct', 'cat_star', '*', 'tc', ';', '/', '/', '\td3_printf', '(', '""""', ')', ';', 'regs', '=', 'malloc', '(', 'CAT_GET_SIZE', '*', 'sizeof', '(', 'int', ')', ')', ';', 'ids', '=', 'malloc', '(', 'CAT_GET_SIZE', '*', 'sizeof', '(', 'int', ')', ')', ';', 'ras', '=', 'malloc', '(', 'CAT_GET_SIZE', '*', 'sizeof', '(', 'float', ')', ')', ';', 'decs', '=', 'malloc', '(', 'CAT_GET_SIZE', '*', 'sizeof', '(', 'float', ')', ')', ';', 'mags', '=', 'malloc', '(', 'CAT_GET_SIZE', '*', 'sizeof', '(', 'float', ')', ')', ';', 'tc', '=', 'calloc', '(', 'CAT_GET_SIZE', ',', 'sizeof', '(', 'struct', 'cat_star', ')', ')', ';', '/', '/', '\td3_printf', '(', '""""', ')', ';', 'n_gsc', '=', 'getgsc', '(', 'ra', ',', 'dec', ',', 'radius', ',', 'gsc_max_mag', '(', 'radius', ')', ',', 'regs', ',', 'ids', ',', 'ras', ',', 'decs', ',', 'mags', ',', 'CAT_GET_SIZE', ',', 'P_STR', '(', 'FILE_GSC_PATH', ')', ')', ';', '/', '/', '\tn_gsc', '=', '0', ';', '/', '/', '\td3_printf', '(', '""""', ',', '/', '/', '\t\t', 'n_gsc', ',', 'radius', ',', 'gsc_max_mag', '(', 'radius', ')', ')', ';', '/', '/', '\td3_printf', '(', '""""', ',', 'ra', ',', 'dec', ')', ';', 'for', '(', 'i', '=', '1', ',', 'j', '=', '0', ';', 'i', '<', 'n_gsc', ';', 'i', '++', ')', '{', 'while', '(', '(', 'regs', '[', 'i', ']', '==', 'regs', '[', 'i', '-', '1', ']', ')', '&&', '(', 'ids', '[', 'i', ']', '==', 'ids', '[', 'i', '-', '1', ']', ')', ')', 'i', '++', ';', 'tc', '[', 'j', ']', '.', 'ra', '=', 'ras', '[', 'i', ']', ';', 'tc', '[', 'j', ']', '.', 'dec', '=', 'decs', '[', 'i', ']', ';', 'tc', '[', 'j', ']', '.', 'mag', '=', 'mags', '[', 'i', ']', ';', 'sprintf', '(', 'tc', '[', 'j', ']', '.', 'name', ',', '""""', ',', 'regs', '[', 'i', ']', ',', 'ids', '[', 'i', ']', ')', ';', 'j', '++', ';', '}', 'n_gsc', '=', 'j', ';', 'qsort', '(', 'tc', ',', 'n_gsc', ',', 'sizeof', '(', 'struct', 'cat_star', ')', ',', 'mag_comp_fn', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'n_gsc', '&&', 'i', '<', 'n', ';', 'i', '++', ')', '{', 'cats', '=', 'cat_star_new', '(', ')', ';', 'cats', '->', 'ra', '=', 'tc', '[', 'i', ']', '.', 'ra', ';', 'cats', '->', 'dec', '=', 'tc', '[', 'i', ']', '.', 'dec', ';', 'cats', '->', 'perr', '=', 'BIG_ERR', ';', 'cats', '->', 'equinox', '=', '2000', '.', '0', ';', 'cats', '->', 'mag', '=', 'tc', '[', 'i', ']', '.', 'mag', ';', 'strcpy', '(', 'cats', '->', 'name', ',', 'tc', '[', 'i', ']', '.', 'name', ')', ';', 'cats', '->', 'flags', '=', 'CAT_STAR_TYPE_SREF', '|', 'CAT_ASTROMET', ';', 'if', '(', '-', '1', '==', 'asprintf', '(', '&', 'cats', '->', 'comments', ',', '""""', ')', ')', 'cats', '->', 'comments', '=', 'NULL', ';', 'cst', '[', 'i', ']', '=', 'cats', ';', '}', 'free', '(', 'regs', ')', ';', 'free', '(', 'ids', ')', ';', 'free', '(', 'ras', ')', ';', 'free', '(', 'decs', ')', ';', 'free', '(', 'mags', ')', ';', 'free', '(', 'tc', ')', ';', 'return', 'i', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1365,"['text_editor_set_line_marker', '(', 'TextEditor', '*', 'te', ',', 'glong', 'line', ')', '{', 'g_return_if_fail', '(', 'te', '!=', 'NULL', ')', ';', 'g_return_if_fail', '(', 'IS_SCINTILLA', '(', 'te', '->', 'scintilla', ')', '==', 'TRUE', ')', ';', '/', '/', 'FIXME', ':', 'anjuta_delete_all_marker', '(', 'TEXT_EDITOR_LINEMARKER', ')', ';', 'text_editor_delete_marker_all', '(', 'te', ',', 'TEXT_EDITOR_LINEMARKER', ')', ';', 'text_editor_set_marker', '(', 'te', ',', 'line', ',', 'TEXT_EDITOR_LINEMARKER', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1366,"['make_mime', '(', 'const', 'char', '*', 'to', ',', 'const', 'char', '*', 'from', ',', 'const', 'char', '*', 'subject', ',', 'const', 'char', '*', 'text_message', ',', 'const', 'char', '*', 'method', ',', 'const', 'char', '*', 'ical_message', ')', '{', 'size_t', 'size', '=', 'strlen', '(', 'to', ')', '+', 'strlen', '(', 'from', ')', '+', 'strlen', '(', 'subject', ')', '+', 'strlen', '(', 'text_message', ')', '+', 'strlen', '(', 'ical_message', ')', '+', 'TMPSIZE', ';', 'char', 'mime_part_1', '[', 'TMPSIZE', ']', ';', 'char', 'mime_part_2', '[', 'TMPSIZE', ']', ';', 'char', 'content_id', '[', 'TMPSIZE', ']', ';', 'char', 'boundary', '[', 'TMPSIZE', ']', ';', 'struct', 'utsname', 'uts', ';', 'char', '*', 'm', ';', 'if', '(', '(', 'm', '=', 'malloc', '(', 'sizeof', '(', 'char', ')', '*', 'size', ')', ')', '==', '0', ')', '{', 'fprintf', '(', 'stderr', ',', '""""', ',', 'program_name', ',', 'strerror', '(', 'errno', ')', ')', ';', 'exit', '(', '1', ')', ';', '}', 'uname', '(', '&', 'uts', ')', ';', 'srand', '(', 'time', '(', '0', ')', '<<', 'getpid', '(', ')', ')', ';', 'sprintf', '(', 'content_id', ',', '""""', ',', '(', 'int', ')', 'time', '(', '0', ')', ',', 'rand', '(', ')', ',', 'uts', '.', 'nodename', ')', ';', 'sprintf', '(', 'boundary', ',', '""""', ',', '(', 'int', ')', 'time', '(', '0', ')', ',', 'rand', '(', ')', ',', 'uts', '.', 'nodename', ')', ';', 'sprintf', '(', 'mime_part_1', ',', '""Content', '-', 'ID', ':', '%', 'Content', '-', 'type', ':', 'text', '/', 'Content', '-', 'Description', ':', 'Text', 'description', 'of', 'error', '%', 's\\n\\n', '--', '%', 's""', ',', 'content_id', ',', 'text_message', ',', 'boundary', ')', ';', 'if', '(', 'ical_message', '!=', '0', '&&', 'method', '!=', '0', ')', '{', 'sprintf', '(', 'mime_part_2', ',', '""Content', '-', 'ID', ':', '%', 'Content', '-', 'type', ':', 'text', '/', 'calendar', ';', 'method', '=', '%', 'Content', '-', 'Description', ':', 'iCal', 'component', '%', 's\\n\\n', '--', '%', 's', '--', '""', ',', 'content_id', ',', 'method', ',', 'ical_message', ',', 'boundary', ')', ';', '}', 'sprintf', '(', 'm', ',', '""To', ':', '%', 'From', ':', '%', 'Subject', ':', '%', 'MIME', '-', 'Version', ':', '1', '.', 'Content', '-', 'ID', ':', '%', 'Content', '-', 'Type', ':', 'multipart', '/', 'mixed', ';', 'boundary', '=', 'This', 'is', 'a', 'multimedia', 'message', 'in', 'MIME', '--', '%', '%', '""', ',', 'to', ',', 'from', ',', 'subject', ',', 'content_id', ',', 'boundary', ',', 'boundary', ',', 'mime_part_1', ')', ';', 'if', '(', 'ical_message', '!=', '0', '&&', 'method', '!=', '0', ')', '{', 'strcat', '(', 'm', ',', 'mime_part_2', ')', ';', '}', 'else', '{', 'strcat', '(', 'm', ',', '""""', ')', ';', '}', 'return', 'm', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1367,"['Perl_ck_subr', '(', 'pTHX_', 'OP', '*', 'o', ')', '{', 'OP', '*', 'aop', ',', '*', 'cvop', ';', 'CV', '*', 'cv', ';', 'GV', '*', 'namegv', ';', 'PERL_ARGS_ASSERT_CK_SUBR', ';', 'aop', '=', 'cUNOPx', '(', 'o', ')', '->', 'op_first', ';', 'if', '(', '!aop', '->', 'op_sibling', ')', 'aop', '=', 'cUNOPx', '(', 'aop', ')', '->', 'op_first', ';', 'aop', '=', 'aop', '->', 'op_sibling', ';', 'for', '(', 'cvop', '=', 'aop', ';', 'cvop', '->', 'op_sibling', ';', 'cvop', '=', 'cvop', '->', 'op_sibling', ')', ';', 'cv', '=', 'rv2cv_op_cv', '(', 'cvop', ',', 'RV2CVOPCV_MARK_EARLY', ')', ';', 'namegv', '=', 'cv', '?', '(', 'GV', '*', ')', 'rv2cv_op_cv', '(', 'cvop', ',', 'RV2CVOPCV_RETURN_NAME_GV', ')', ':', 'NULL', ';', 'o', '->', 'op_private', '&=', '~1', ';', 'o', '->', 'op_private', '|=', 'OPpENTERSUB_HASTARG', ';', 'o', '->', 'op_private', '|=', '(', 'PL_hints', '&', 'HINT_STRICT_REFS', ')', ';', 'if', '(', 'PERLDB_SUB', '&&', 'PL_curstash', '!=', 'PL_debstash', ')', 'o', '->', 'op_private', '|=', 'OPpENTERSUB_DB', ';', 'if', '(', 'cvop', '->', 'op_type', '==', 'OP_RV2CV', ')', '{', 'o', '->', 'op_private', '|=', '(', 'cvop', '->', 'op_private', '&', 'OPpENTERSUB_AMPER', ')', ';', 'op_null', '(', 'cvop', ')', ';', '}', 'else', 'if', '(', 'cvop', '->', 'op_type', '==', 'OP_METHOD', '||', 'cvop', '->', 'op_type', '==', 'OP_METHOD_NAMED', ')', '{', 'if', '(', 'aop', '->', 'op_type', '==', 'OP_CONST', ')', 'aop', '->', 'op_private', '&=', '~OPpCONST_STRICT', ';', 'else', 'if', '(', 'aop', '->', 'op_type', '==', 'OP_LIST', ')', '{', 'OP', '*', 'const', 'sib', '=', '(', '(', 'UNOP', '*', ')', 'aop', ')', '->', 'op_first', '->', 'op_sibling', ';', 'if', '(', 'sib', '&&', 'sib', '->', 'op_type', '==', 'OP_CONST', ')', 'sib', '->', 'op_private', '&=', '~OPpCONST_STRICT', ';', '}', '}', 'if', '(', '!cv', ')', '{', 'return', 'ck_entersub_args_list', '(', 'o', ')', ';', '}', 'else', '{', 'Perl_call_checker', 'ckfun', ';', 'SV', '*', 'ckobj', ';', 'cv_get_call_checker', '(', 'cv', ',', '&', 'ckfun', ',', '&', 'ckobj', ')', ';', '/', '*', 'XXX', 'The', 'call', 'checker', 'API', 'is', 'public', '.', 'And', 'it', 'guarantees', 'a', 'GV', 'will', 'be', 'provided', 'with', 'the', 'right', 'name', '.', 'So', 'we', 'to', 'create', 'a', 'GV', '.', 'But', 'it', 'is', 'still', 'not', 'correct', ',', 'as', 'stringification', 'will', 'include', 'the', 'package', '.', 'What', 'really', 'need', 'is', 'a', 'new', 'call', 'checker', 'API', 'that', 'accepts', 'HEK', '*', 'const', 'hek', '=', 'CvNAME_HEK', '(', 'cv', ')', ';', '/', '*', 'After', 'a', 'syntax', 'error', 'in', 'a', 'lexical', 'sub', ',', 'the', 'cv', 'if', '(', '!hek', ')', 'return', 'ck_entersub_args_list', '(', 'o', ')', ';', ';', 'namegv', '=', '(', 'GV', '*', ')', 'sv_newmortal', '(', ')', ';', 'gv_init_pvn', '(', 'namegv', ',', 'PL_curstash', ',', 'HEK_KEY', '(', 'hek', ')', ',', 'HEK_LEN', '(', 'hek', ')', ',', 'SVf_UTF8', '*', '!!HEK_UTF8', '(', 'hek', ')', ')', ';', '}', 'return', 'ckfun', '(', 'aTHX_', 'o', ',', 'namegv', ',', 'ckobj', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1368,"['completeregularpath', '(', 'path', '*', 'P', ',', 'edge_t', '*', 'first', ',', 'edge_t', '*', 'last', ',', 'pathend_t', '*', 'tendp', ',', 'pathend_t', '*', 'hendp', ',', 'boxf', '*', 'boxes', ',', 'int', 'boxn', ',', 'int', 'flag', ')', '{', 'edge_t', '*', 'uleft', ',', '*', 'uright', ',', '*', 'lleft', ',', '*', 'lright', ';', 'int', 'i', ',', 'fb', ',', 'lb', ';', 'splines', '*', 'spl', ';', 'pointf', '*', 'pp', ';', 'int', 'pn', ';', 'fb', '=', 'lb', '=', '-', '1', ';', 'uleft', '=', 'uright', '=', 'NULL', ';', 'uleft', '=', 'top_bound', '(', 'first', ',', '-', '1', ')', ',', 'uright', '=', 'top_bound', '(', 'first', ',', '1', ')', ';', 'if', '(', 'uleft', ')', '{', 'if', '(', '!', '(', 'spl', '=', 'getsplinepoints', '(', 'uleft', ')', ')', ')', 'return', ';', 'pp', '=', 'spl', '->', 'list', '[', '0', ']', '.', 'list', ';', 'pn', '=', 'spl', '->', 'list', '[', '0', ']', '.', 'size', ';', '}', 'if', '(', 'uright', ')', '{', 'if', '(', '!', '(', 'spl', '=', 'getsplinepoints', '(', 'uright', ')', ')', ')', 'return', ';', 'pp', '=', 'spl', '->', 'list', '[', '0', ']', '.', 'list', ';', 'pn', '=', 'spl', '->', 'list', '[', '0', ']', '.', 'size', ';', '}', 'lleft', '=', 'lright', '=', 'NULL', ';', 'lleft', '=', 'bot_bound', '(', 'last', ',', '-', '1', ')', ',', 'lright', '=', 'bot_bound', '(', 'last', ',', '1', ')', ';', 'if', '(', 'lleft', ')', '{', 'if', '(', '!', '(', 'spl', '=', 'getsplinepoints', '(', 'lleft', ')', ')', ')', 'return', ';', 'pp', '=', 'spl', '->', 'list', '[', 'spl', '->', 'size', '-', '1', ']', '.', 'list', ';', 'pn', '=', 'spl', '->', 'list', '[', 'spl', '->', 'size', '-', '1', ']', '.', 'size', ';', '}', 'if', '(', 'lright', ')', '{', 'if', '(', '!', '(', 'spl', '=', 'getsplinepoints', '(', 'lright', ')', ')', ')', 'return', ';', 'pp', '=', 'spl', '->', 'list', '[', 'spl', '->', 'size', '-', '1', ']', '.', 'list', ';', 'pn', '=', 'spl', '->', 'list', '[', 'spl', '->', 'size', '-', '1', ']', '.', 'size', ';', '}', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'tendp', '->', 'boxn', ';', 'i', '++', ')', 'add_box', '(', 'P', ',', 'tendp', '->', 'boxes', '[', 'i', ']', ')', ';', 'fb', '=', 'P', '->', 'nbox', '+', '1', ';', 'lb', '=', 'fb', '+', 'boxn', '-', '3', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'boxn', ';', 'i', '++', ')', 'add_box', '(', 'P', ',', 'boxes', '[', 'i', ']', ')', ';', 'for', '(', 'i', '=', 'hendp', '->', 'boxn', '-', '1', ';', 'i', '>=', '0', ';', 'i', '--', ')', 'add_box', '(', 'P', ',', 'hendp', '->', 'boxes', '[', 'i', ']', ')', ';', 'adjustregularpath', '(', 'P', ',', 'fb', ',', 'lb', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1369,"['netsnmp_access_udp_endpoint_entry_free', '(', 'netsnmp_udp_endpoint_entry', '*', 'entry', ')', '{', 'DEBUGMSGTL', '(', '(', '""""', ',', '""""', ')', ')', ';', 'if', '(', 'NULL', '==', 'entry', ')', 'return', ';', '/', '*', '*', 'SNMP_FREE', 'not', 'needed', ',', 'for', 'any', 'of', 'these', ',', '*', 'since', 'the', 'whole', 'entry', 'is', 'about', 'to', 'be', 'free', '(', 'entry', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1370,"['expand_bahe_ui_internal', '(', 'TreeNode', '*', 'x', ',', 'int', 'pos', ')', '{', 'TreeNode', '*', 'nn', ',', '*', 'y', ',', '*', 'nz', ',', '*', 'z', ',', '*', 'c', ';', 'int', 'n', ',', 'i', ',', 'j', ',', 'n_ui', ',', 'n_b', ',', 'ui_start', ';', 'y', '=', 'x', '->', 'data', '.', 'nonterm', '.', 'children', '[', 'pos', ']', ';', 'if', '(', 'y', '->', 'type', '==', 'N_NONTERM', ')', '{', 'n', '=', 'y', '->', 'data', '.', 'nonterm', '.', 'nchildren', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'n', ';', 'i', '++', ')', '{', 'expand_bahe_ui_internal', '(', 'y', ',', 'i', ')', ';', '}', '}', 'else', '{', 'if', '(', 'y', '->', 'bahe', '||', '(', 'y', '->', 'ui_next', '!=', '(', 'TreeNode', '*', ')', '&', 'y', '->', 'ui_next', ')', ')', '{', 'nn', '=', 'new_node', '(', ')', ';', 'nn', '->', 'type', '=', 'N_NONTERM', ';', 'for', '(', 'z', '=', 'y', '->', 'bahe', ',', 'n_b', '=', '0', ';', 'z', ';', 'z', '=', 'z', '->', 'bahe', ')', '{', 'n_b', '++', ';', '}', 'n_ui', '=', '0', ';', 'for', '(', 'c', '=', 'y', '->', 'ui_next', ';', 'c', '!=', '(', 'TreeNode', '*', ')', '&', 'y', '->', 'ui_next', ';', 'c', '=', 'c', '->', 'next', ')', '{', 'n_ui', '++', ';', '}', 'nn', '->', 'data', '.', 'nonterm', '.', 'type', '=', 'AUGMENTED', ';', 'nn', '->', 'data', '.', 'nonterm', '.', 'brackets', '=', 'BR_NONE', ';', 'nn', '->', 'data', '.', 'nonterm', '.', 'nchildren', '=', 'n_b', '+', '1', '+', 'n_ui', ';', 'nn', '->', 'data', '.', 'nonterm', '.', 'children', '=', 'new_array', '(', 'TreeNode', '*', ',', 'nn', '->', 'data', '.', 'nonterm', '.', 'nchildren', ')', ';', 'j', '=', '0', ';', 'for', '(', 'z', '=', 'y', '->', 'bahe', ';', 'z', ';', 'z', '=', 'nz', ')', '{', 'nn', '->', 'data', '.', 'nonterm', '.', 'children', '[', 'n_b', '-', '++', 'j', ']', '=', 'z', ';', 'nz', '=', 'z', '->', 'bahe', ';', 'z', '->', 'bahe', '=', 'NULL', ';', '}', 'nn', '->', 'data', '.', 'nonterm', '.', 'children', '[', 'j', '++', ']', '=', 'y', ';', 'ui_start', '=', 'j', ';', 'for', '(', 'c', '=', 'y', '->', 'ui_next', ';', 'c', '!=', '(', 'TreeNode', '*', ')', '&', 'y', '->', 'ui_next', ';', 'c', '=', 'c', '->', 'next', ')', '{', 'nn', '->', 'data', '.', 'nonterm', '.', 'children', '[', 'j', '++', ']', '=', 'c', ';', '}', 'y', '->', 'ui_next', '=', 'y', '->', 'ui_prev', '=', '(', 'TreeNode', '*', ')', '&', 'y', '->', 'ui_next', ';', 'x', '->', 'data', '.', 'nonterm', '.', 'children', '[', 'pos', ']', '=', 'nn', ';', '/', '*', 'And', 'handle', 'the', 'case', 'that', 'the', 'UI', 'chain', 'itself', 'may', 'have', 'for', '(', 'j', '=', 'ui_start', ';', 'j', '<', 'nn', '->', 'data', '.', 'nonterm', '.', 'nchildren', ';', 'j', '++', ')', '{', 'expand_bahe_ui_internal', '(', 'nn', ',', 'j', ')', ';', '}', '}', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1371,"['on_key', '(', 'struct', 'SCNotification', '*', 'nt', ',', 'ScintillaObject', '*', 'scintilla', ',', 'presage_t', 'presage', ')', '{', 'g_print', '(', '""""', ')', ';', 'g_print', '(', '""""', ',', 'nt', '->', 'ch', ')', ';', 'if', '(', 'glob_function_keys_mode', ')', '{', 'uptr_t', 'completion_active', ';', 'completion_active', '=', 'scintilla_send_message', '(', 'scintilla', ',', 'SCI_AUTOCACTIVE', ',', '0', ',', '0', ')', ';', 'if', '(', 'completion_active', ')', '{', 'int', 'fkn', ';', 'char', 'fk', '[', '4', ']', ';', 'fkn', '=', 'nt', '->', 'ch', '-', 'GDK_F1', '+', '1', ';', 'g_print', '(', '""""', ',', 'fkn', ')', ';', 'sprintf', '(', 'fk', ',', '""""', ',', 'fkn', ')', ';', 'g_print', '(', '""""', ',', 'fk', ')', ';', 'scintilla_send_message', '(', 'scintilla', ',', 'SCI_AUTOCSELECT', ',', '0', ',', '(', 'sptr_t', ')', 'fk', ')', ';', 'scintilla_send_message', '(', 'scintilla', ',', 'SCI_AUTOCCOMPLETE', ',', '0', ',', '0', ')', ';', '}', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1372,"['make_stack_label', '(', 'char', '*', 'label', ',', 'char', '*', 's', ')', '{', 'char', '*', 'p', '=', 'strstr', '(', 's', ',', '""""', ')', ';', 'int', 'len', '=', 'strlen', '(', 's', ')', ';', 'if', '(', 'p', '==', 'NULL', ')', '{', 'if', '(', 'len', '>', 'MAXLABEL', '-', '1', ')', '{', 'strncat', '(', 'label', ',', 's', ',', 'MAXLABEL', '-', '4', ')', ';', 'strcat', '(', 'label', ',', '""""', ')', ';', '}', 'else', '{', 'strcat', '(', 'label', ',', 's', ')', ';', '}', '}', 'else', '{', 'int', 'llen', '=', 'strlen', '(', 'p', ')', ';', 'char', '*', 'q', '=', 'strstr', '(', 'p', '+', '2', ',', '""""', ')', ';', 'int', 'sp', '=', '1', '+', '(', 'q', '!=', 'NULL', ')', ';', 'len', '++', ';', '*', 'p', '=', ""''"", ';', 'if', '(', 'len', '+', 'sp', '>', 'MAXLABEL', '-', '1', ')', '{', 'strncat', '(', 'label', ',', 's', ',', 'MAXLABEL', '-', '4', '-', '(', 'llen', '+', 'sp', ')', ')', ';', 'strcat', '(', 'label', ',', '""""', ')', ';', '}', 'else', '{', 'strcat', '(', 'label', ',', 's', ')', ';', '}', 'strcat', '(', 'label', ',', '""""', ')', ';', 'if', '(', 'q', '==', 'NULL', ')', '{', 'strcat', '(', 'label', ',', 'p', '+', '1', ')', ';', '}', 'else', '{', 'strncat', '(', 'label', ',', 'p', '+', '1', ',', 'q', '-', 'p', '-', '1', ')', ';', 'strcat', '(', 'label', ',', '""""', ')', ';', 'strcat', '(', 'label', ',', 'q', ')', ';', '}', '}', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1373,"['read_igmp', '(', 'struct', 'ma_info', '*', '*', 'result_p', ')', '{', 'struct', 'ma_info', 'm', ';', 'char', 'buf', '[', '256', ']', ';', 'FILE', '*', 'fp', '=', 'fopen', '(', '""""', ',', '""""', ')', ';', 'if', '(', '!fp', ')', 'return', ';', 'memset', '(', '&', 'm', ',', '0', ',', 'sizeof', '(', 'm', ')', ')', ';', 'if', '(', '!fgets', '(', 'buf', ',', 'sizeof', '(', 'buf', ')', ',', 'fp', ')', ')', '{', 'fclose', '(', 'fp', ')', ';', 'return', ';', '}', 'm', '.', 'addr', '.', 'family', '=', 'AF_INET', ';', 'm', '.', 'addr', '.', 'bitlen', '=', '32', ';', 'm', '.', 'addr', '.', 'bytelen', '=', '4', ';', 'while', '(', 'fgets', '(', 'buf', ',', 'sizeof', '(', 'buf', ')', ',', 'fp', ')', ')', '{', 'struct', 'ma_info', '*', 'ma', ';', 'if', '(', 'buf', '[', '0', ']', '!=', ""''"", ')', '{', 'sscanf', '(', 'buf', ',', '""""', ',', '&', 'm', '.', 'index', ',', 'm', '.', 'name', ')', ';', 'continue', ';', '}', 'if', '(', 'filter', '.', 'dev', '&&', 'strcmp', '(', 'filter', '.', 'dev', ',', 'm', '.', 'name', ')', ')', 'continue', ';', 'sscanf', '(', 'buf', ',', '""""', ',', '(', '__u32', '*', ')', '&', 'm', '.', 'addr', '.', 'data', ',', '&', 'm', '.', 'users', ')', ';', 'ma', '=', 'malloc', '(', 'sizeof', '(', 'm', ')', ')', ';', 'memcpy', '(', 'ma', ',', '&', 'm', ',', 'sizeof', '(', 'm', ')', ')', ';', 'maddr_ins', '(', 'result_p', ',', 'ma', ')', ';', '}', 'fclose', '(', 'fp', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1374,"['backsql_operational_entryUUID', '(', 'backsql_info', '*', 'bi', ',', 'backsql_entryID', '*', 'id', ')', '{', 'int\t\t\trc', ';', 'struct', 'berval\t\tval', ',', 'nval', ';', 'AttributeDescription\t', '*', 'desc', '=', 'slap_schema', '.', 'si_ad_entryUUID', ';', 'Attribute\t\t', '*', 'a', ';', 'backsql_entryUUID', '(', 'bi', ',', 'id', ',', '&', 'val', ',', 'NULL', ')', ';', 'rc', '=', '(', '*', 'desc', '->', 'ad_type', '->', 'sat_equality', '->', 'smr_normalize', ')', '(', 'SLAP_MR_VALUE_OF_ATTRIBUTE_SYNTAX', ',', 'desc', '->', 'ad_type', '->', 'sat_syntax', ',', 'desc', '->', 'ad_type', '->', 'sat_equality', ',', '&', 'val', ',', '&', 'nval', ',', 'NULL', ')', ';', 'if', '(', 'rc', '!=', 'LDAP_SUCCESS', ')', '{', 'ber_memfree', '(', 'val', '.', 'bv_val', ')', ';', 'return', 'NULL', ';', '}', 'a', '=', 'attr_alloc', '(', 'desc', ')', ';', 'a', '->', 'a_numvals', '=', '1', ';', 'a', '->', 'a_vals', '=', '(', 'BerVarray', ')', 'ch_malloc', '(', '2', '*', 'sizeof', '(', 'struct', 'berval', ')', ')', ';', 'a', '->', 'a_vals', '[', '0', ']', '=', 'val', ';', 'BER_BVZERO', '(', '&', 'a', '->', 'a_vals', '[', '1', ']', ')', ';', 'a', '->', 'a_nvals', '=', '(', 'BerVarray', ')', 'ch_malloc', '(', '2', '*', 'sizeof', '(', 'struct', 'berval', ')', ')', ';', 'a', '->', 'a_nvals', '[', '0', ']', '=', 'nval', ';', 'BER_BVZERO', '(', '&', 'a', '->', 'a_nvals', '[', '1', ']', ')', ';', 'return', 'a', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1375,"['reg_reqs', '(', 'struct', 'gspca_dev', '*', 'gspca_dev', ',', 'const', 'struct', 'dtcs033_usb_requests', '*', 'preqs', ',', 'int', 'n_reqs', ')', '{', 'int', 'i', '=', '0', ';', 'const', 'struct', 'dtcs033_usb_requests', '*', 'preq', ';', 'while', '(', '(', 'i', '<', 'n_reqs', ')', '&&', '(', 'gspca_dev', '->', 'usb_err', '>=', '0', ')', ')', '{', 'preq', '=', '&', 'preqs', '[', 'i', ']', ';', 'reg_rw', '(', 'gspca_dev', ',', 'preq', '->', 'bRequestType', ',', 'preq', '->', 'bRequest', ',', 'preq', '->', 'wValue', ',', 'preq', '->', 'wIndex', ',', 'preq', '->', 'wLength', ')', ';', 'if', '(', 'gspca_dev', '->', 'usb_err', '<', '0', ')', '{', 'PERR', '(', '""""', ',', 'i', ',', 'n_reqs', ')', ';', '}', 'else', 'if', '(', 'preq', '->', 'bRequestType', '&', 'USB_DIR_IN', ')', '{', 'PDEBUG', '(', 'D_STREAM', ',', '""""', ',', 'i', ',', 'preq', '->', 'wLength', ',', 'gspca_dev', '->', 'usb_buf', '[', '0', ']', ',', 'gspca_dev', '->', 'usb_buf', '[', '1', ']', ',', 'gspca_dev', '->', 'usb_buf', '[', '2', ']', ',', 'preq', '->', 'wLength', '>', '3', '?', '""""', ':', '""""', ')', ';', '}', 'i', '++', ';', '}', 'return', 'gspca_dev', '->', 'usb_err', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1376,"['ReadInputData', '(', 'char', '*', 'buf', ',', 'unsigned', 'int', '*', 'size', ',', 'void', '*', 'param', ')', '{', 'TDataInfo', '*', 'pInfo', '=', '(', 'TDataInfo', '*', ')', 'param', ';', 'unsigned', 'int', 'nMaxAvail', '=', '(', 'unsigned', 'int', ')', '(', 'pInfo', '->', 'pbInBuffEnd', '-', 'pInfo', '->', 'pbInBuff', ')', ';', 'unsigned', 'int', 'nToRead', '=', '*', 'size', ';', '/', '/', 'Check', 'the', 'case', 'when', 'not', 'enough', 'data', 'if', '(', 'nToRead', '>', 'nMaxAvail', ')', 'nToRead', '=', 'nMaxAvail', ';', '/', '/', 'Load', 'data', 'and', 'increment', 'memcpy', '(', 'buf', ',', 'pInfo', '->', 'pbInBuff', ',', 'nToRead', ')', ';', 'pInfo', '->', 'pbInBuff', '+=', 'nToRead', ';', 'assert', '(', 'pInfo', '->', 'pbInBuff', '<=', 'pInfo', '->', 'pbInBuffEnd', ')', ';', 'return', 'nToRead', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1377,"['loco_get_rice_param', '(', 'RICEContext', '*', 'r', ')', '{', 'int', 'cnt', '=', '0', ';', 'int', 'val', '=', 'r', '->', 'count', ';', 'while', '(', 'r', '->', 'sum', '>', 'val', '&&', 'cnt', '<', '9', ')', '{', 'val', '<<=', '1', ';', 'cnt', '++', ';', '}', 'return', 'cnt', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1378,"['process_repContainer', '(', 'ASTrepContainer', '&', 'c', ')', '{', 'for', '(', 'ASTparameters', ':', ':', 'iterator', 'it', '=', 'c', '.', 'mParameters', '.', 'begin', '(', ')', ',', 'eit', '=', 'c', '.', 'mParameters', '.', 'end', '(', ')', ';', 'it', '!=', 'eit', ';', '++', 'it', ')', '{', 'if', '(', 'it', '->', 'isParameter', '||', '!it', '->', 'mDefinition', ')', '{', 'it', '->', 'mStackIndex', '=', 'mLocalStackDepth', ';', 'c', '.', 'mStackCount', '+=', 'it', '->', 'mTuplesize', ';', 'mLocalStackDepth', '+=', 'it', '->', 'mTuplesize', ';', '}', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1379,"['timer_init', '(', 'void', ')', '{', 'start_time', '=', 'timer_get_time', '(', ')', ';', 'if', '(', 'start_time', '<', '0', ')', 'return', '1', ';', 'timer_event', '=', 'event_register', '(', 'timer_frame', ',', '""""', ')', ';', 'event_add', '(', '0', ',', 'timer_event', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1380,"['tech_free', '(', 'Tech_type_id', 'tech', ')', '{', 'struct', 'advance', '*', 'p', '=', '&', 'advances', '[', 'tech', ']', ';', 'if', '(', 'NULL', '!=', 'p', '->', 'helptext', ')', '{', 'strvec_destroy', '(', 'p', '->', 'helptext', ')', ';', 'p', '->', 'helptext', '=', 'NULL', ';', '}', 'if', '(', 'p', '->', 'bonus_message', ')', '{', 'free', '(', 'p', '->', 'bonus_message', ')', ';', 'p', '->', 'bonus_message', '=', 'NULL', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1381,"['mv88e1xxx_reset', '(', 'struct', 'cphy', '*', 'cphy', ',', 'int', 'wait', ')', '{', 'u32', 'ctl', ';', 'int', 'time_out', '=', '1000', ';', 'mdio_set_bit', '(', 'cphy', ',', 'MII_BMCR', ',', 'BMCR_RESET', ')', ';', 'do', '{', '(', 'void', ')', 'simple_mdio_read', '(', 'cphy', ',', 'MII_BMCR', ',', '&', 'ctl', ')', ';', 'ctl', '&=', 'BMCR_RESET', ';', 'if', '(', 'ctl', ')', 'udelay', '(', '1', ')', ';', '}', 'while', '(', 'ctl', '&&', '--', 'time_out', ')', ';', 'return', 'ctl', '?', '-', '1', ':', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1382,"['qlcnic_83xx_read_crb', '(', 'struct', 'qlcnic_adapter', '*', 'adapter', ',', 'char', '*', 'buf', ',', 'loff_t', 'offset', ',', 'size_t', 'size', ')', '{', 'int', 'ret', '=', '0', ';', 'u32', 'data', ';', 'if', '(', 'qlcnic_api_lock', '(', 'adapter', ')', ')', '{', 'dev_err', '(', '&', 'adapter', '->', 'pdev', '->', 'dev', ',', '""""', ',', '__func__', ',', '(', 'u32', ')', 'offset', ')', ';', 'return', ';', '}', 'data', '=', 'QLCRD32', '(', 'adapter', ',', '(', 'u32', ')', 'offset', ',', '&', 'ret', ')', ';', 'qlcnic_api_unlock', '(', 'adapter', ')', ';', 'if', '(', 'ret', '==', '-', 'EIO', ')', '{', 'dev_err', '(', '&', 'adapter', '->', 'pdev', '->', 'dev', ',', '""""', ',', '__func__', ',', '(', 'u32', ')', 'offset', ')', ';', 'return', ';', '}', 'memcpy', '(', 'buf', ',', '&', 'data', ',', 'size', ')', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1383,"['brasero_track_data_set_source', '(', 'BraseroTrackData', '*', 'track', ',', 'GSList', '*', 'grafts', ',', 'GSList', '*', 'unreadable', ')', '{', 'BraseroTrackDataClass', '*', 'klass', ';', 'g_return_val_if_fail', '(', 'BRASERO_IS_TRACK_DATA', '(', 'track', ')', ',', 'BRASERO_BURN_ERR', ')', ';', 'klass', '=', 'BRASERO_TRACK_DATA_GET_CLASS', '(', 'track', ')', ';', 'return', 'klass', '->', 'set_source', '(', 'track', ',', 'grafts', ',', 'unreadable', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
1384,"['get_mainwin', '(', 'gpointer', 'data', ')', '{', 'ToolbarItem', '*', 'toolbar_item', '=', '(', 'ToolbarItem', '*', ')', 'data', ';', 'MainWindow', '*', 'mainwin', '=', 'NULL', ';', 'MessageView', '*', 'msgview', ';', 'cm_return_val_if_fail', '(', 'toolbar_item', '!=', 'NULL', ',', 'NULL', ')', ';', 'switch', '(', 'toolbar_item', '->', 'type', ')', '{', 'case', 'TOOLBAR_MAIN', ':', 'mainwin', '=', '(', 'MainWindow', '*', ')', 'toolbar_item', '->', 'parent', ';', 'break', ';', 'case', 'TOOLBAR_MSGVIEW', ':', 'msgview', '=', '(', 'MessageView', '*', ')', 'toolbar_item', '->', 'parent', ';', 'mainwin', '=', '(', 'MainWindow', '*', ')', 'msgview', '->', 'mainwin', ';', 'break', ';', 'default', ':', 'break', ';', '}', 'return', 'mainwin', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1385,"['integrated_lvds_disable', '(', 'struct', '*', 'plvds_setting_info', ',', 'struct', 'lvds_chip_information', '*', 'plvds_chip_info', ')', '{', 'bool', 'turn_off_first_powersequence', '=', 'false', ';', 'bool', 'turn_off_second_powersequence', '=', 'false', ';', 'if', '(', 'INTERFACE_LVDS0LVDS1', '==', 'plvds_chip_info', '->', 'output_interface', ')', 'turn_off_first_powersequence', '=', 'true', ';', 'if', '(', 'INTERFACE_LVDS0', '==', 'plvds_chip_info', '->', 'output_interface', ')', 'turn_off_first_powersequence', '=', 'true', ';', 'if', '(', 'INTERFACE_LVDS1', '==', 'plvds_chip_info', '->', 'output_interface', ')', 'turn_off_second_powersequence', '=', 'true', ';', 'if', '(', 'turn_off_second_powersequence', ')', '{', 'viafb_write_reg_mask', '(', 'CRD4', ',', 'VIACR', ',', '0', ',', 'BIT1', ')', ';', 'viafb_write_reg_mask', '(', 'CRD3', ',', 'VIACR', ',', '0xC0', ',', 'BIT6', '+', 'BIT7', ')', ';', '}', 'if', '(', 'turn_off_first_powersequence', ')', '{', 'viafb_write_reg_mask', '(', 'CR6A', ',', 'VIACR', ',', '0', ',', 'BIT3', ')', ';', 'viafb_write_reg_mask', '(', 'CR91', ',', 'VIACR', ',', '0xC0', ',', 'BIT6', '+', 'BIT7', ')', ';', '}', 'switch', '(', 'plvds_chip_info', '->', 'output_interface', ')', '{', 'case', 'INTERFACE_LVDS0', ':', '{', 'viafb_write_reg_mask', '(', 'CRD2', ',', 'VIACR', ',', '0x80', ',', 'BIT7', ')', ';', 'break', ';', '}', 'case', 'INTERFACE_LVDS1', ':', '{', 'viafb_write_reg_mask', '(', 'CRD2', ',', 'VIACR', ',', '0x40', ',', 'BIT6', ')', ';', 'break', ';', '}', 'case', 'INTERFACE_LVDS0LVDS1', ':', '{', 'viafb_write_reg_mask', '(', 'CRD2', ',', 'VIACR', ',', '0xC0', ',', 'BIT6', '+', 'BIT7', ')', ';', 'break', ';', '}', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1386,"['addComponent', '(', 'const', 'char', '*', 'component', ')', '{', 'Pool', 'pool', ';', 'if', '(', '0', '==', 'component', ')', 'return', ';', '/', '/', 'in', 'case', 'of', 'an', 'empty', 'string', ',', 'if', '(', '*', 'component', '==', '0', ')', 'return', ';', '/', '/', 'if', 'the', '@a', 'component', 'is', 'absolute', ',', '/', '/', 'use', 'if', '(', 'isAbsolute', '(', 'component', ')', ')', '{', 'm_path', '=', 'component', ';', 'return', ';', '}', 'if', '(', 'Url', ':', ':', 'isValid', '(', 'm_path', '.', 'c_str', '(', ')', ')', ')', '{', 'const', 'char', '*', 'newPath', '=', 'svn_path_url_add_component', '(', 'm_path', '.', 'c_str', '(', ')', ',', 'component', ',', 'pool', ')', ';', 'm_path', '=', 'newPath', ';', '}', '{', 'svn_stringbuf_t', '*', 'pathStringbuf', '=', 'svn_stringbuf_create', '(', 'm_path', '.', 'c_str', '(', ')', ',', 'pool', ')', ';', 'svn_path_add_component', '(', 'pathStringbuf', ',', 'component', ')', ';', 'm_path', '=', 'pathStringbuf', '->', 'data', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1387,"['get_base_info', '(', 'struct', 'file', '*', 'fp', ',', 'void', '__user', '*', 'ubase', ',', '__u32', 'len', ')', '{', 'struct', 'hfi1_base_info', 'binfo', ';', 'struct', 'hfi1_ctxtdata', '*', 'uctxt', '=', 'ctxt_fp', '(', 'fp', ')', ';', 'struct', 'hfi1_devdata', '*', 'dd', '=', 'uctxt', '->', 'dd', ';', 'ssize_t', 'sz', ';', 'unsigned', 'offset', ';', 'int', 'ret', '=', '0', ';', 'trace_hfi1_uctxtdata', '(', 'uctxt', '->', 'dd', ',', 'uctxt', ')', ';', 'memset', '(', '&', 'binfo', ',', '0', ',', 'sizeof', '(', 'binfo', ')', ')', ';', 'binfo', '.', 'hw_version', '=', 'dd', '->', 'revision', ';', 'binfo', '.', 'sw_version', '=', 'HFI1_KERN_SWVERSION', ';', 'binfo', '.', 'bthqp', '=', 'kdeth_qp', ';', 'binfo', '.', 'jkey', '=', 'uctxt', '->', 'jkey', ';', '/', '*', '*', 'If', 'more', 'than', '64', 'contexts', 'are', 'enabled', 'the', 'allocated', '*', 'return', 'will', 'span', 'two', 'or', 'three', 'contiguous', 'pages', '.', 'Since', 'we', '*', 'map', 'the', 'page', 'containing', 'the', ""context's"", 'credit', 'return', 'address', ',', '*', 'we', 'need', 'to', 'calculate', 'the', 'offset', 'in', 'the', 'proper', 'page', '.', 'offset', '=', '(', '(', 'u64', ')', 'uctxt', '->', 'sc', '->', 'hw_free', '-', '(', 'u64', ')', 'dd', '->', 'cr_base', '[', 'uctxt', '->', 'numa_id', ']', '.', 'va', ')', '%', 'PAGE_SIZE', ';', 'binfo', '.', 'sc_credits_addr', '=', 'HFI1_MMAP_TOKEN', '(', 'PIO_CRED', ',', 'uctxt', '->', 'ctxt', ',', 'subctxt_fp', '(', 'fp', ')', ',', 'offset', ')', ';', 'binfo', '.', 'pio_bufbase', '=', 'HFI1_MMAP_TOKEN', '(', 'PIO_BUFS', ',', 'uctxt', '->', 'ctxt', ',', 'subctxt_fp', '(', 'fp', ')', ',', 'uctxt', '->', 'sc', '->', 'base_addr', ')', ';', 'binfo', '.', 'pio_bufbase_sop', '=', 'HFI1_MMAP_TOKEN', '(', 'PIO_BUFS_SOP', ',', 'uctxt', '->', 'ctxt', ',', 'subctxt_fp', '(', 'fp', ')', ',', 'uctxt', '->', 'sc', '->', 'base_addr', ')', ';', 'binfo', '.', 'rcvhdr_bufbase', '=', 'HFI1_MMAP_TOKEN', '(', 'RCV_HDRQ', ',', 'uctxt', '->', 'ctxt', ',', 'subctxt_fp', '(', 'fp', ')', ',', 'uctxt', '->', 'rcvhdrq', ')', ';', 'binfo', '.', 'rcvegr_bufbase', '=', 'HFI1_MMAP_TOKEN', '(', 'RCV_EGRBUF', ',', 'uctxt', '->', 'ctxt', ',', 'subctxt_fp', '(', 'fp', ')', ',', 'uctxt', '->', 'egrbufs', '.', 'rcvtids', '[', '0', ']', '.', 'phys', ')', ';', 'binfo', '.', 'sdma_comp_bufbase', '=', 'HFI1_MMAP_TOKEN', '(', 'SDMA_COMP', ',', 'uctxt', '->', 'ctxt', ',', 'subctxt_fp', '(', 'fp', ')', ',', '0', ')', ';', '/', '*', '*', 'user', 'regs', 'are', '*', '(', 'RXE_PER_CONTEXT_USER', '+', '(', 'ctxt', '*', 'RXE_PER_CONTEXT_SIZE', ')', ')', 'binfo', '.', 'user_regbase', '=', 'HFI1_MMAP_TOKEN', '(', 'UREGS', ',', 'uctxt', '->', 'ctxt', ',', 'subctxt_fp', '(', 'fp', ')', ',', '0', ')', ';', 'offset', '=', 'offset_in_page', '(', '(', '(', '(', 'uctxt', '->', 'ctxt', '-', 'dd', '->', 'first_user_ctxt', ')', '*', 'HFI1_MAX_SHARED_CTXTS', ')', '+', 'subctxt_fp', '(', 'fp', ')', ')', '*', 'sizeof', '(', '*', 'dd', '->', 'events', ')', ')', ';', 'binfo', '.', 'events_bufbase', '=', 'HFI1_MMAP_TOKEN', '(', 'EVENTS', ',', 'uctxt', '->', 'ctxt', ',', 'subctxt_fp', '(', 'fp', ')', ',', 'offset', ')', ';', 'binfo', '.', 'status_bufbase', '=', 'HFI1_MMAP_TOKEN', '(', 'STATUS', ',', 'uctxt', '->', 'ctxt', ',', 'subctxt_fp', '(', 'fp', ')', ',', 'dd', '->', 'status', ')', ';', 'if', '(', 'HFI1_CAP_IS_USET', '(', 'DMA_RTAIL', ')', ')', 'binfo', '.', 'rcvhdrtail_base', '=', 'HFI1_MMAP_TOKEN', '(', 'RTAIL', ',', 'uctxt', '->', 'ctxt', ',', 'subctxt_fp', '(', 'fp', ')', ',', '0', ')', ';', 'if', '(', 'uctxt', '->', 'subctxt_cnt', ')', '{', 'binfo', '.', 'subctxt_uregbase', '=', 'HFI1_MMAP_TOKEN', '(', 'SUBCTXT_UREGS', ',', 'uctxt', '->', 'ctxt', ',', 'subctxt_fp', '(', 'fp', ')', ',', '0', ')', ';', 'binfo', '.', 'subctxt_rcvhdrbuf', '=', 'HFI1_MMAP_TOKEN', '(', 'SUBCTXT_RCV_HDRQ', ',', 'uctxt', '->', 'ctxt', ',', 'subctxt_fp', '(', 'fp', ')', ',', '0', ')', ';', 'binfo', '.', 'subctxt_rcvegrbuf', '=', 'HFI1_MMAP_TOKEN', '(', 'SUBCTXT_EGRBUF', ',', 'uctxt', '->', 'ctxt', ',', 'subctxt_fp', '(', 'fp', ')', ',', '0', ')', ';', '}', 'sz', '=', '(', 'len', '<', 'sizeof', '(', 'binfo', ')', ')', '?', 'len', ':', 'sizeof', '(', 'binfo', ')', ';', 'if', '(', 'copy_to_user', '(', 'ubase', ',', '&', 'binfo', ',', 'sz', ')', ')', 'ret', '=', '-', 'EFAULT', ';', 'return', 'ret', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1388,"['gv_set_defaults', '(', 'geovect', '*', 'gv', ')', '{', 'int', 'i', ';', 'if', '(', '!gv', ')', '{', 'return', '(', '-', '1', ')', ';', '}', 'G_debug', '(', '5', ',', '""""', ',', 'gv', '->', 'gvect_id', ')', ';', 'gv', '->', 'filename', '=', 'NULL', ';', 'gv', '->', 'n_lines', '=', 'gv', '->', 'n_surfs', '=', 'gv', '->', 'use_mem', '=', '0', ';', 'gv', '->', 'x_trans', '=', 'gv', '->', 'y_trans', '=', 'gv', '->', 'z_trans', '=', '0', '.', '0', ';', 'gv', '->', 'lines', '=', 'NULL', ';', 'gv', '->', 'fastlines', '=', 'NULL', ';', 'gv', '->', 'width', '=', '1', ';', 'gv', '->', 'color', '=', '0xFFFFFF', ';', 'gv', '->', 'flat_val', '=', '0', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'MAX_SURFS', ';', 'i', '++', ')', '{', 'gv', '->', 'drape_surf_id', '[', 'i', ']', '=', '0', ';', '}', 'return', '(', '0', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1389,"['visitSREM', '(', 'SDNode', '*', 'N', ')', '{', 'SDValue', 'N0', '=', 'N', '->', 'getOperand', '(', '0', ')', ';', 'SDValue', 'N1', '=', 'N', '->', 'getOperand', '(', '1', ')', ';', 'ConstantSDNode', '*', 'N0C', '=', 'dyn_cast', '<', 'ConstantSDNode', '>', '(', 'N0', ')', ';', 'ConstantSDNode', '*', 'N1C', '=', 'dyn_cast', '<', 'ConstantSDNode', '>', '(', 'N1', ')', ';', 'EVT', 'VT', '=', 'N', '->', 'getValueType', '(', '0', ')', ';', '/', '/', 'fold', '(', 'srem', 'c1', ',', 'c2', ')', '->', 'c1', '%', 'if', '(', 'N0C', '&&', 'N1C', '&&', '!N1C', '->', 'isNullValue', '(', ')', ')', 'return', 'DAG', '.', 'FoldConstantArithmetic', '(', 'ISD', ':', ':', 'SREM', ',', 'VT', ',', 'N0C', ',', 'N1C', ')', ';', '/', '/', 'If', 'we', 'know', 'the', 'sign', 'bits', 'of', 'both', 'operands', 'are', 'zero', ',', 'strength', 'reduce', 'to', '/', '/', 'urem', 'instead', '.', 'Handles', '(', 'X', '&', '0x0FFFFFFF', ')', '%', 's', '16', '->', 'X', '&', 'if', '(', '!VT', '.', 'isVector', '(', ')', ')', '{', 'if', '(', 'DAG', '.', 'SignBitIsZero', '(', 'N1', ')', '&&', 'DAG', '.', 'SignBitIsZero', '(', 'N0', ')', ')', 'return', 'DAG', '.', 'getNode', '(', 'ISD', ':', ':', 'UREM', ',', 'N', '->', 'getDebugLoc', '(', ')', ',', 'VT', ',', 'N0', ',', 'N1', ')', ';', '}', '/', '/', 'If', 'X', '/', 'C', 'can', 'be', 'simplified', 'by', 'the', 'division', '-', 'by', '-', 'constant', 'logic', ',', '/', '/', 'X', '%', 'C', 'to', 'the', 'equivalent', 'of', 'X', '-', 'X', '/', 'C', '*', 'C', '.', 'if', '(', 'N1C', '&&', '!N1C', '->', 'isNullValue', '(', ')', ')', '{', 'SDValue', 'Div', '=', 'DAG', '.', 'getNode', '(', 'ISD', ':', ':', 'SDIV', ',', 'N', '->', 'getDebugLoc', '(', ')', ',', 'VT', ',', 'N0', ',', 'N1', ')', ';', 'AddToWorkList', '(', 'Div', '.', 'getNode', '(', ')', ')', ';', 'SDValue', 'OptimizedDiv', '=', 'combine', '(', 'Div', '.', 'getNode', '(', ')', ')', ';', 'if', '(', 'OptimizedDiv', '.', 'getNode', '(', ')', '&&', 'OptimizedDiv', '.', 'getNode', '(', ')', '!=', 'Div', '.', 'getNode', '(', ')', ')', '{', 'SDValue', 'Mul', '=', 'DAG', '.', 'getNode', '(', 'ISD', ':', ':', 'MUL', ',', 'N', '->', 'getDebugLoc', '(', ')', ',', 'VT', ',', 'OptimizedDiv', ',', 'N1', ')', ';', 'SDValue', 'Sub', '=', 'DAG', '.', 'getNode', '(', 'ISD', ':', ':', 'SUB', ',', 'N', '->', 'getDebugLoc', '(', ')', ',', 'VT', ',', 'N0', ',', 'Mul', ')', ';', 'AddToWorkList', '(', 'Mul', '.', 'getNode', '(', ')', ')', ';', 'return', 'Sub', ';', '}', '}', '/', '/', 'undef', '%', 'X', '->', 'if', '(', 'N0', '.', 'getOpcode', '(', ')', '==', 'ISD', ':', ':', 'UNDEF', ')', 'return', 'DAG', '.', 'getConstant', '(', '0', ',', 'VT', ')', ';', '/', '/', 'X', '%', 'undef', '->', 'if', '(', 'N1', '.', 'getOpcode', '(', ')', '==', 'ISD', ':', ':', 'UNDEF', ')', 'return', 'N1', ';', 'return', 'SDValue', '(', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1390,"['dParseFloatFormat', '(', 'char', '*', 'buf', ',', 'int', '*', 'num', ',', 'int', '*', 'size', ')', '{', 'char', '*', 'tmp', ',', '*', 'period', ';', 'tmp', '=', 'buf', ';', 'while', '(', '*', 'tmp', '++', '!=', ""''"", ')', ';', 'while', '(', '*', 'tmp', '!=', ""''"", '&&', '*', 'tmp', '!=', ""''"", '&&', '*', 'tmp', '!=', ""''"", '&&', '*', 'tmp', '!=', '&&', '*', 'tmp', '!=', ""''"", '&&', '*', 'tmp', '!=', ""''"", ')', '{', '/', '*', 'May', 'find', 'kP', 'before', 'nE', '/', 'nD', '/', 'nF', ',', 'like', '(', '1P6F13', '.', '6', ')', '.', 'In', 'this', 'case', 'if', '(', '*', 'tmp', '==', ""''"", '||', '*', 'tmp', '==', ""''"", ')', '{', '++', 'tmp', ';', '}', 'else', '{', '++', 'tmp', ';', '}', '}', '++', 'tmp', ';', 'period', '=', 'tmp', ';', 'while', '(', '*', 'period', '!=', ""''"", '&&', '*', 'period', '!=', ""''"", ')', '++', 'period', ';', '*', 'period', '=', ""''"", ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1391,"['cue_print', '(', 'FILE', '*', 'fp', ',', 'Cd', '*', 'cd', ')', '{', 'Cdtext', '*', 'cdtext', '=', 'cd_get_cdtext', '(', 'cd', ')', ';', 'Track', '*', 'track', '=', 'NULL', ';', 'if', '(', 'NULL', '!=', 'cd_get_catalog', '(', 'cd', ')', ')', '{', 'fprintf', '(', 'fp', ',', '""""', ',', 'cd_get_catalog', '(', 'cd', ')', ')', ';', '}', 'cue_print_cdtext', '(', 'cdtext', ',', 'fp', ',', '0', ')', ';', 'for', '(', 'i', '=', '1', ';', 'i', '<=', 'cd_get_ntrack', '(', 'cd', ')', ';', 'i', '++', ')', '{', 'track', '=', 'cd_get_track', '(', 'cd', ',', 'i', ')', ';', 'fprintf', '(', 'fp', ',', '""""', ')', ';', 'cue_print_track', '(', 'fp', ',', 'track', ',', 'i', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1392,"['remove_env', '(', 'const', 'char', '*', 'str', ')', '{', 'char', '*', '*', 'envp', ';', 'envp', '=', 'find_env', '(', 'str', ')', ';', 'FREE', '(', '*', 'envp', ')', ';', 'do', '*', 'envp', '=', '*', '(', 'envp', '+', '1', ')', ';', 'while', '(', '*', '++', 'envp', ')', ';', 'envsize', '--', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1393,"['autoload_name', '(', 'name', ')', 'char_u\t', '*', 'name', ';', '{', 'char_u\t', '*', 'p', ';', 'char_u\t', '*', 'scriptname', ';', 'scriptname', '=', 'alloc', '(', '(', 'unsigned', ')', '(', 'STRLEN', '(', 'name', ')', '+', '14', ')', ')', ';', 'if', '(', 'scriptname', '==', 'NULL', ')', 'return', 'FALSE', ';', 'STRCPY', '(', 'scriptname', ',', '""""', ')', ';', 'STRCAT', '(', 'scriptname', ',', 'name', ')', ';', '*', 'vim_strrchr', '(', 'scriptname', ',', 'AUTOLOAD_CHAR', ')', '=', 'NUL', ';', 'STRCAT', '(', 'scriptname', ',', '""""', ')', ';', 'while', '(', '(', 'p', '=', 'vim_strchr', '(', 'scriptname', ',', 'AUTOLOAD_CHAR', ')', ')', '!=', 'NULL', ')', '*', 'p', '=', ""''"", ';', 'return', 'scriptname', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1394,"['dir_t_extract_regular_files', '(', 'dir_t', '*', 'd', ')', '{', 'dir_t', '*', 'dd', ';', 'int', 'i', ';', 'if', '(', 'NULL', '==', 'd', ')', 'return', '(', 'NULL', ')', ';', 'dd', '=', 'dir_t_create', '(', ')', ';', 'memcpy', '(', 'dd', '->', 'dir', ',', 'd', '->', 'dir', ',', 'FILENAME_MAX', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'd', '->', 'amount', ';', 'i', '++', ')', '{', 'if', '(', 'strstr', '(', 'd', '->', 'entry', '[', 'i', ']', '.', 'name', ',', '""""', ')', ')', '{', 'memcpy', '(', '(', 'dd', '->', 'entry', '+', 'dd', '->', 'amount', ')', ',', '(', 'd', '->', 'entry', '+', 'i', ')', ',', 'sizeof', '(', 'entry_t', ')', ')', ';', 'dd', '->', 'amount', '++', ';', '}', '}', 'return', 'dd', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1395,"['editarch', '(', 'no', ')', 'int', 'no', ';', '{', 'archive_t', 'list', ';', 'char', '*', 'cp', ';', 'int', 'n', ';', 'if', '(', 'no', '<', 'maxarchive', ')', '{', 'list', '.', 'ext', '=', 'Xstrdup', '(', 'archivelist', '[', 'no', ']', '.', 'ext', ')', ';', 'list', '.', 'flags', '=', 'archivelist', '[', 'no', ']', '.', 'flags', ';', '}', 'else', '{', 'if', '(', '!', '(', 'cp', '=', 'inputcuststr', '(', 'EXTAR_K', ',', '1', ',', 'NULL', ',', '-', '1', ')', ')', ')', 'return', '(', '0', ')', ';', 'list', '.', 'ext', '=', 'getext', '(', 'cp', ',', '&', '(', 'list', '.', 'flags', ')', ')', ';', 'Xfree', '(', 'cp', ')', ';', 'if', '(', '!', '(', 'list', '.', 'ext', '[', '0', ']', ')', '||', '!', '(', 'list', '.', 'ext', '[', '1', ']', ')', ')', '{', 'Xfree', '(', 'list', '.', 'ext', ')', ';', 'return', '(', '0', ')', ';', '}', 'for', '(', 'no', '=', '0', ';', 'no', '<', 'maxarchive', ';', 'no', '++', ')', '{', 'n', '=', 'extcmp', '(', 'list', '.', 'ext', ',', 'list', '.', 'flags', ',', 'archivelist', '[', 'no', ']', '.', 'ext', ',', 'archivelist', '[', 'no', ']', '.', 'flags', ',', '1', ')', ';', 'if', '(', '!n', ')', 'break', ';', '}', '#', 'if', '(', 'no', '>=', 'MAXARCHIVETABLE', ')', '{', 'warning', '(', '0', ',', 'OVERF_K', ')', ';', 'return', '(', '0', ')', ';', '}', '#', '}', 'for', '(', ';', ';', ')', '{', 'if', '(', 'no', '<', 'maxarchive', ')', '{', 'list', '.', 'p_comm', '=', 'archivelist', '[', 'no', ']', '.', 'p_comm', ';', 'list', '.', 'u_comm', '=', 'archivelist', '[', 'no', ']', '.', 'u_comm', ';', '}', 'else', '{', 'list', '.', 'p_comm', '=', 'list', '.', 'u_comm', '=', 'NULL', ';', '}', 'list', '.', 'p_comm', '=', 'inputcuststr', '(', 'PACKC_K', ',', '0', ',', 'list', '.', 'p_comm', ',', 'HST_COMM', ')', ';', 'if', '(', '!', '(', 'list', '.', 'p_comm', ')', ')', '{', 'Xfree', '(', 'list', '.', 'ext', ')', ';', 'return', '(', '0', ')', ';', '}', 'else', 'if', '(', '!', '*', '(', 'list', '.', 'p_comm', ')', ')', '{', 'Xfree', '(', 'list', '.', 'p_comm', ')', ';', 'list', '.', 'p_comm', '=', 'NULL', ';', '}', 'list', '.', 'u_comm', '=', 'inputcuststr', '(', 'UPCKC_K', ',', '0', ',', 'list', '.', 'u_comm', ',', 'HST_COMM', ')', ';', 'if', '(', '!', '(', 'list', '.', 'u_comm', ')', ')', '{', 'Xfree', '(', 'list', '.', 'p_comm', ')', ';', 'continue', ';', '}', 'else', 'if', '(', '!', '*', '(', 'list', '.', 'u_comm', ')', ')', '{', 'Xfree', '(', 'list', '.', 'u_comm', ')', ';', 'list', '.', 'u_comm', '=', 'NULL', ';', '}', 'break', ';', '}', 'if', '(', '!', '(', 'list', '.', 'p_comm', ')', '&&', '!', '(', 'list', '.', 'u_comm', ')', ')', '{', 'Xfree', '(', 'list', '.', 'ext', ')', ';', 'if', '(', 'no', '>=', 'maxarchive', ')', 'return', '(', '0', ')', ';', 'if', '(', '!yesno', '(', 'DLAOK_K', ',', 'archivelist', '[', 'no', ']', '.', 'ext', ')', ')', 'return', '(', '0', ')', ';', 'deletearch', '(', 'no', ')', ';', 'return', '(', '1', ')', ';', '}', 'addarch', '(', 'no', ',', '&', 'list', ')', ';', 'return', '(', '1', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1396,"['cdrom_mmc3_profile', '(', 'struct', 'cdrom_device_info', '*', 'cdi', ')', '{', 'struct', 'packet_command', 'cgc', ';', 'char', 'buffer', '[', '32', ']', ';', 'int', 'ret', ',', 'mmc3_profile', ';', 'init_cdrom_command', '(', '&', 'cgc', ',', 'buffer', ',', 'sizeof', '(', 'buffer', ')', ',', 'CGC_DATA_READ', ')', ';', 'cgc', '.', 'cmd', '[', '0', ']', '=', 'GPCMD_GET_CONFIGURATION', ';', 'cgc', '.', 'cmd', '[', '1', ']', '=', '0', ';', 'cgc', '.', 'quiet', '=', '1', ';', 'if', '(', '(', 'ret', '=', 'cdi', '->', 'ops', '->', 'generic_packet', '(', 'cdi', ',', '&', 'cgc', ')', ')', ')', 'mmc3_profile', '=', '0xffff', ';', 'mmc3_profile', '=', '(', 'buffer', '[', '6', ']', '<<', '8', ')', '|', 'buffer', '[', '7', ']', ';', 'cdi', '->', 'mmc3_profile', '=', 'mmc3_profile', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1397,"['ncEqualPartial', '(', 'char', '*', 'str1', ',', 'char', '*', 'str2', ')', '{', 'int', 'i', ';', 'int', 'len1', '=', 'strlen', '(', 'str1', ')', ';', 'int', 'len2', '=', 'strlen', '(', 'str2', ')', ';', 'if', '(', 'len1', '<', 'len2', ')', 'return', 'false', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'len2', ';', 'i', '++', ')', 'if', '(', 'toupper', '(', 'str1', '[', 'i', ']', ')', '!=', 'toupper', '(', 'str2', '[', 'i', ']', ')', ')', 'return', 'false', ';', 'return', 'true', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1398,"['removeFromIndex', '(', 'Archive', '*', 'arch', ')', '{', '/', '/', 'Delete', 'ResourceLocationIndex', ':', ':', 'iterator', 'rit', ',', 'ritend', ';', 'ritend', '=', 'this', '->', 'resourceIndexCaseInsensitive', '.', 'end', '(', ')', ';', 'for', '(', 'rit', '=', 'this', '->', 'resourceIndexCaseInsensitive', '.', 'begin', '(', ')', ';', 'rit', '!=', 'ritend', ';', ')', '{', 'if', '(', 'rit', '->', 'second', '==', 'arch', ')', '{', 'ResourceLocationIndex', ':', ':', 'iterator', 'del', '=', 'rit', '++', ';', 'this', '->', 'resourceIndexCaseInsensitive', '.', 'erase', '(', 'del', ')', ';', '}', '{', '++', 'rit', ';', '}', '}', 'ritend', '=', 'this', '->', 'resourceIndexCaseSensitive', '.', 'end', '(', ')', ';', 'for', '(', 'rit', '=', 'this', '->', 'resourceIndexCaseSensitive', '.', 'begin', '(', ')', ';', 'rit', '!=', 'ritend', ';', ')', '{', 'if', '(', 'rit', '->', 'second', '==', 'arch', ')', '{', 'ResourceLocationIndex', ':', ':', 'iterator', 'del', '=', 'rit', '++', ';', 'this', '->', 'resourceIndexCaseSensitive', '.', 'erase', '(', 'del', ')', ';', '}', '{', '++', 'rit', ';', '}', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1399,"['newSpace', '(', 'int32', 'size', ')', '{', 'if', '(', 'size', '>=', 'oldSize', ')', '{', 'if', '(', 'oldSpace', '!=', 'NULL', ')', 'HDfree', '(', 'oldSpace', ')', ';', 'if', '(', '(', 'oldSpace', '=', '(', 'char', '*', ')', 'HDmalloc', '(', '(', 'uint32', ')', 'size', ')', ')', '==', 'NULL', ')', '{', 'puts', '(', '""""', ')', ';', 'exit', '(', '1', ')', ';', '}', 'oldSize', '=', 'size', ';', '}', 'return', 'oldSpace', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1400,"['pixbuf_flip_row', '(', 'GdkPixbuf', '*', 'pixbuf', ',', 'guchar', '*', 'ph', ')', '{', 'guchar', '*', 'p', ',', '*', 's', ';', 'guchar', 'tmp', ';', 'gint', 'count', ';', 'p', '=', 'ph', ';', 's', '=', 'p', '+', 'pixbuf', '->', 'n_channels', '*', '(', 'pixbuf', '->', 'width', '-', '1', ')', ';', 'while', '(', 'p', '<', 's', ')', '{', 'for', '(', 'count', '=', 'pixbuf', '->', 'n_channels', ';', 'count', '>', '0', ';', 'count', '--', ',', 'p', '++', ',', 's', '++', ')', '{', 'tmp', '=', '*', 'p', ';', '*', 'p', '=', '*', 's', ';', '*', 's', '=', 'tmp', ';', '}', 's', '-=', '2', '*', 'pixbuf', '->', 'n_channels', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1401,"['GVA_seek_frame', '(', 't_GVA_Handle', '*', 'gvahand', ',', 'gdouble', 'pos', ',', 't_GVA_PosUnit', 'pos_unit', ')', '{', 't_GVA_RetCode', 'l_rc', ';', 'if', '(', 'gap_debug', ')', '{', 'printf', '(', ',', '(', 'int', ')', 'gvahand', ',', '(', 'float', ')', 'pos', ',', '(', 'int', ')', 'pos_unit', ')', ';', '}', 'l_rc', '=', 'p_gva_worker_seek_frame', '(', 'gvahand', ',', 'pos', ',', 'pos_unit', ')', ';', 'if', '(', 'gap_debug', ')', '{', 'printf', '(', ',', '(', 'int', ')', 'l_rc', ')', ';', '}', 'return', '(', 'l_rc', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1402,"['enumRangeForCopy', '(', 'const', 'void', '*', 'context', ',', 'UChar32', 'start', ',', 'UChar32', 'end', ',', 'uint32_t', 'value', ')', '{', 'value', '==', 'Collation', ':', ':', 'UNASSIGNED_CE32', '||', 'value', '==', 'Collation', ':', ':', 'FALLBACK_CE32', '||', '(', '(', 'CopyHelper', '*', ')', 'context', ')', '->', 'copyRangeCE32', '(', 'start', ',', 'end', ',', 'value', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1403,"['bfd_elf_allocate_object', '(', 'bfd', '*', 'abfd', ',', 'size_t', 'object_size', ',', 'enum', 'elf_target_id', 'object_id', ')', '{', 'BFD_ASSERT', '(', 'object_size', '>=', 'sizeof', '(', 'struct', 'elf_obj_tdata', ')', ')', ';', 'abfd', '->', 'tdata', '.', 'any', '=', 'bfd_zalloc', '(', 'abfd', ',', 'object_size', ')', ';', 'if', '(', 'abfd', '->', 'tdata', '.', 'any', '==', 'NULL', ')', 'return', 'FALSE', ';', 'elf_object_id', '(', 'abfd', ')', '=', 'object_id', ';', 'elf_program_header_size', '(', 'abfd', ')', '=', '(', 'bfd_size_type', ')', '-', '1', ';', 'return', 'TRUE', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1404,"['compute_right', '(', 'GtBittab', '*', '*', 'right', ',', 'const', 'ConsensusSA', '*', 'csa', ')', '{', 'gt_assert', '(', 'csa', ')', ';', 'compute_left_or_right', '(', 'right', ',', 'csa', ',', 'is_left_of', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1405,"['iks_sasl_mechanisms', '(', 'iks', '*', 'x', ')', '{', 'int', 'sasl_mech', '=', '0', ';', 'while', '(', 'x', ')', '{', 'if', '(', '!iks_strcmp', '(', 'iks_cdata', '(', 'iks_child', '(', 'x', ')', ')', ',', '""""', ')', ')', 'sasl_mech', '|=', 'IKS_STREAM_SASL_MD5', ';', 'else', 'if', '(', '!iks_strcmp', '(', 'iks_cdata', '(', 'iks_child', '(', 'x', ')', ')', ',', '""""', ')', ')', 'sasl_mech', '|=', 'IKS_STREAM_SASL_PLAIN', ';', 'x', '=', 'iks_next_tag', '(', 'x', ')', ';', '}', 'return', 'sasl_mech', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1406,"['kv_populate_vce_table', '(', 'struct', 'amdgpu_device', '*', 'adev', ')', '{', 'struct', 'kv_power_info', '*', 'pi', '=', 'kv_get_pi', '(', 'adev', ')', ';', 'int', 'ret', ';', 'u32', 'i', ';', 'struct', 'amdgpu_vce_clock_voltage_dependency_table', '*', 'table', '=', '&', 'adev', '->', 'pm', '.', 'dpm', '.', 'dyn_state', '.', 'vce_clock_voltage_dependency_table', ';', 'struct', 'atom_clock_dividers', 'dividers', ';', 'if', '(', 'table', '==', 'NULL', '||', 'table', '->', 'count', '==', '0', ')', 'return', '0', ';', 'pi', '->', 'vce_level_count', '=', '0', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'table', '->', 'count', ';', 'i', '++', ')', '{', 'if', '(', 'pi', '->', 'high_voltage_t', '&&', 'pi', '->', 'high_voltage_t', '<', 'table', '->', 'entries', '[', 'i', ']', '.', 'v', ')', 'break', ';', 'pi', '->', 'vce_level', '[', 'i', ']', '.', 'Frequency', '=', 'cpu_to_be32', '(', 'table', '->', 'entries', '[', 'i', ']', '.', 'evclk', ')', ';', 'pi', '->', 'vce_level', '[', 'i', ']', '.', 'MinVoltage', '=', 'cpu_to_be16', '(', 'table', '->', 'entries', '[', 'i', ']', '.', 'v', ')', ';', 'pi', '->', 'vce_level', '[', 'i', ']', '.', 'ClkBypassCntl', '=', '(', 'u8', ')', 'kv_get_clk_bypass', '(', 'adev', ',', 'table', '->', 'entries', '[', 'i', ']', '.', 'evclk', ')', ';', 'ret', '=', 'amdgpu_atombios_get_clock_dividers', '(', 'adev', ',', 'COMPUTE_ENGINE_PLL_PARAM', ',', 'table', '->', 'entries', '[', 'i', ']', '.', 'evclk', ',', 'false', ',', '&', 'dividers', ')', ';', 'if', '(', 'ret', ')', 'return', 'ret', ';', 'pi', '->', 'vce_level', '[', 'i', ']', '.', 'Divider', '=', '(', 'u8', ')', 'dividers', '.', 'post_div', ';', 'pi', '->', 'vce_level_count', '++', ';', '}', 'ret', '=', 'amdgpu_kv_copy_bytes_to_smc', '(', 'adev', ',', 'pi', '->', 'dpm_table_start', '+', 'offsetof', '(', 'SMU7_Fusion_DpmTable', ',', 'VceLevelCount', ')', ',', '(', 'u8', '*', ')', '&', 'pi', '->', 'vce_level_count', ',', 'sizeof', '(', 'u8', ')', ',', 'pi', '->', 'sram_end', ')', ';', 'if', '(', 'ret', ')', 'return', 'ret', ';', 'pi', '->', 'vce_interval', '=', '1', ';', 'ret', '=', 'amdgpu_kv_copy_bytes_to_smc', '(', 'adev', ',', 'pi', '->', 'dpm_table_start', '+', 'offsetof', '(', 'SMU7_Fusion_DpmTable', ',', 'VCEInterval', ')', ',', '(', 'u8', '*', ')', '&', 'pi', '->', 'vce_interval', ',', 'sizeof', '(', 'u8', ')', ',', 'pi', '->', 'sram_end', ')', ';', 'if', '(', 'ret', ')', 'return', 'ret', ';', 'ret', '=', 'amdgpu_kv_copy_bytes_to_smc', '(', 'adev', ',', 'pi', '->', 'dpm_table_start', '+', 'offsetof', '(', 'SMU7_Fusion_DpmTable', ',', 'VceLevel', ')', ',', '(', 'u8', '*', ')', '&', 'pi', '->', 'vce_level', ',', 'sizeof', '(', 'SMU7_Fusion_ExtClkLevel', ')', '*', 'SMU7_MAX_LEVELS_VCE', ',', 'pi', '->', 'sram_end', ')', ';', 'return', 'ret', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1407,"['constraintescape', '(', 'const', 'char', '*', 'url', ')', '{', 'size_t', 'len', ';', 'char', '*', 'p', ';', 'int', 'c', ';', 'char', '*', 'eurl', ';', 'if', '(', 'url', '==', 'NULL', ')', 'return', 'NULL', ';', 'len', '=', 'strlen', '(', 'url', ')', ';', 'MEMCHECK', '(', 'eurl', ',', 'NULL', ')', ';', 'p', '=', 'eurl', ';', '*', 'p', '=', ""''"", ';', 'while', '(', '(', 'c', '=', '*', 'url', '++', ')', ')', '{', 'if', '(', 'c', '>=', ""''"", '&&', 'c', '<=', ""''"", ')', '{', '*', 'p', '++', '=', 'c', ';', '}', 'else', 'if', '(', 'c', '>=', ""''"", '&&', 'c', '<=', ""''"", ')', '{', '*', 'p', '++', '=', 'c', ';', '}', 'else', 'if', '(', 'c', '>=', ""''"", '&&', 'c', '<=', ""''"", ')', '{', '*', 'p', '++', '=', 'c', ';', '}', 'else', 'if', '(', 'strchr', '(', 'okchars', ',', 'c', ')', '!=', 'NULL', ')', '{', '*', 'p', '++', '=', 'c', ';', '}', 'else', '{', '*', 'p', '++', '=', ""''"", ';', '*', 'p', '++', '=', 'hexdigits', '[', '(', 'c', '&', '0xf0', ')', '>>', '4', ']', ';', '*', 'p', '++', '=', 'hexdigits', '[', '(', 'c', '&', '0xf', ')', ']', ';', '}', '}', '*', 'p', '=', ""''"", ';', 'return', 'eurl', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1408,"['do_lo_import', '(', 'const', 'char', '*', 'filename_arg', ',', 'const', 'char', '*', 'comment_arg', ')', '{', 'PGresult', '*', 'res', ';', 'Oid\t\t\tloid', ';', 'char\t\toidbuf', '[', '32', ']', ';', 'bool\t\town_transaction', ';', 'if', '(', '!start_lo_xact', '(', '""""', ',', '&', 'own_transaction', ')', ')', 'return', 'false', ';', 'SetCancelConn', '(', ')', ';', 'loid', '=', 'lo_import', '(', 'pset', '.', 'db', ',', 'filename_arg', ')', ';', 'ResetCancelConn', '(', ')', ';', 'if', '(', 'loid', '==', 'InvalidOid', ')', '{', 'fputs', '(', 'PQerrorMessage', '(', 'pset', '.', 'db', ')', ',', 'stderr', ')', ';', 'return', 'fail_lo_xact', '(', '""""', ',', 'own_transaction', ')', ';', '}', 'if', '(', 'comment_arg', ')', '{', 'char\t', '*', 'cmdbuf', ';', 'char\t', '*', 'bufptr', ';', 'size_t\t\tslen', '=', 'strlen', '(', 'comment_arg', ')', ';', 'cmdbuf', '=', 'malloc', '(', 'slen', '*', '2', '+', '256', ')', ';', 'if', '(', '!cmdbuf', ')', 'return', 'fail_lo_xact', '(', '""""', ',', 'own_transaction', ')', ';', 'sprintf', '(', 'cmdbuf', ',', '""""', ',', 'loid', ')', ';', 'bufptr', '=', 'cmdbuf', '+', 'strlen', '(', 'cmdbuf', ')', ';', 'bufptr', '+=', 'PQescapeStringConn', '(', 'pset', '.', 'db', ',', 'bufptr', ',', 'comment_arg', ',', 'slen', ',', 'NULL', ')', ';', 'strcpy', '(', 'bufptr', ',', '""""', ')', ';', 'if', '(', '!', '(', 'res', '=', 'PSQLexec', '(', 'cmdbuf', ',', 'false', ')', ')', ')', '{', 'free', '(', 'cmdbuf', ')', ';', 'return', 'fail_lo_xact', '(', '""""', ',', 'own_transaction', ')', ';', '}', 'PQclear', '(', 'res', ')', ';', 'free', '(', 'cmdbuf', ')', ';', '}', 'if', '(', '!finish_lo_xact', '(', '""""', ',', 'own_transaction', ')', ')', 'return', 'false', ';', 'fprintf', '(', 'pset', '.', 'queryFout', ',', '""""', ',', 'loid', ')', ';', 'sprintf', '(', 'oidbuf', ',', '""""', ',', 'loid', ')', ';', 'SetVariable', '(', 'pset', '.', 'vars', ',', '""""', ',', 'oidbuf', ')', ';', 'return', 'true', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1409,"['info', '(', '0', ',', 'GW_NAME', '""""', ',', 'GW_VERSION', ')', ';', 'if', '(', 'store_load', '(', 'dispatch_into_queue', ')', '==', '-', '1', ')', 'panic', '(', '0', ',', '""""', ')', ';', 'info', '(', '0', ',', '""""', ')', ';', 'if', '(', 'bb_status', '==', 'BB_SUSPENDED', ')', '{', 'info', '(', '0', ',', '""""', ')', ';', '}', 'else', 'if', '(', 'bb_status', '==', 'BB_ISOLATED', ')', '{', 'info', '(', '0', ',', '""""', ')', ';', 'gwlist_remove_producer', '(', 'suspended', ')', ';', '}', 'else', '{', 'smsc2_resume', '(', ')', ';', 'gwlist_remove_producer', '(', 'suspended', ')', ';', 'gwlist_remove_producer', '(', 'isolated', ')', ';', '}', 'while', '(', 'bb_status', '!=', 'BB_SHUTDOWN', '&&', 'bb_status', '!=', 'BB_DEAD', '&&', 'gwlist_producer_count', '(', 'flow_threads', ')', '>', '0', ')', '{', '/', '*', '*', 'Not', 'infinite', 'sleep', 'here', ',', 'because', 'we', 'should', '*', 'when', 'all', '""""', 'are', 'dead', 'and', 'shutting', '*', 'down', '.', '*', 'XXX', 'if', 'all', '""""', 'call', 'gwthread_wakeup', '(', 'MAIN_THREAD_ID', ')', ',', '*', 'we', 'can', 'enter', 'infinite', 'sleep', 'then', '.', 'gwthread_sleep', '(', '10', '.', '0', ')', ';', 'if', '(', 'bb_todo', '==', '0', ')', '{', 'continue', ';', '}', 'if', '(', 'bb_todo', '&', 'BB_LOGREOPEN', ')', '{', 'warning', '(', '0', ',', '""""', ')', ';', 'log_reopen', '(', ')', ';', 'alog_reopen', '(', ')', ';', 'bb_todo', '=', 'bb_todo', '&', '~BB_LOGREOPEN', ';', '}', 'if', '(', 'bb_todo', '&', 'BB_CHECKLEAKS', ')', '{', 'warning', '(', '0', ',', '""""', ')', ';', 'gw_check_leaks', '(', ')', ';', 'bb_todo', '=', 'bb_todo', '&', '~BB_CHECKLEAKS', ';', '}', '}', 'if', '(', 'bb_status', '==', 'BB_SHUTDOWN', '||', 'bb_status', '==', 'BB_DEAD', ')', 'warning', '(', '0', ',', '""""', ')', ';', 'bb_shutdown', '(', ')', ';', 'while', '(', 'gwlist_consume', '(', 'flow_threads', ')', '!=', 'NULL', ')', ';', 'info', '(', '0', ',', '""""', ')', ';', 'bb_status', '=', 'BB_DEAD', ';', 'httpadmin_stop', '(', ')', ';', 'boxc_cleanup', '(', ')', ';', 'smsc2_cleanup', '(', ')', ';', 'store_shutdown', '(', ')', ';', 'empty_msg_lists', '(', ')', ';', 'gwlist_destroy', '(', 'flow_threads', ',', 'NULL', ')', ';', 'gwlist_destroy', '(', 'suspended', ',', 'NULL', ')', ';', 'gwlist_destroy', '(', 'isolated', ',', 'NULL', ')', ';', 'mutex_destroy', '(', 'status_mutex', ')', ';', 'bb_alog_shutdown', '(', ')', ';', 'cfg_destroy', '(', 'cfg', ')', ';', 'octstr_destroy', '(', 'cfg_filename', ')', ';', 'dlr_shutdown', '(', ')', ';', 'if', '(', 'restart', ')', 'restart_box', '(', 'argv', ')', ';', 'gwlib_shutdown', '(', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1410,"['dy_gadd', '(', 'struct', 'au_splhead', '*', 'spl', ',', 'struct', 'au_dykey', '*', 'key', ')', '{', 'struct', 'au_dykey', '*', 'tmp', ',', '*', 'found', ';', 'struct', 'list_head', '*', 'head', ';', 'const', 'void', '*', 'h_op', '=', 'key', '->', 'dk_op', '.', 'dy_hop', ';', 'found', '=', 'NULL', ';', 'head', '=', '&', 'spl', '->', 'head', ';', 'spin_lock', '(', '&', 'spl', '->', 'spin', ')', ';', 'list_for_each_entry', '(', 'tmp', ',', 'head', ',', 'dk_list', ')', 'if', '(', 'tmp', '->', 'dk_op', '.', 'dy_hop', '==', 'h_op', ')', '{', 'kref_get', '(', '&', 'tmp', '->', 'dk_kref', ')', ';', 'found', '=', 'tmp', ';', 'break', ';', '}', 'if', '(', '!found', ')', 'list_add_rcu', '(', '&', 'key', '->', 'dk_list', ',', 'head', ')', ';', 'spin_unlock', '(', '&', 'spl', '->', 'spin', ')', ';', 'if', '(', '!found', ')', 'DyPrSym', '(', 'key', ')', ';', 'return', 'found', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1411,"['outhex', '(', 'FXuint', 'hex', ')', '{', 'if', '(', '!psout', ')', '{', 'fxerror', '(', '""""', ')', ';', '}', 'fprintf', '(', '(', 'FILE', '*', ')', 'psout', ',', '""""', ',', 'hex', ')', ';', 'if', '(', '++', 'nchars', '>', '35', ')', '{', 'fputc', '(', ""''"", ',', '(', 'FILE', '*', ')', 'psout', ')', ';', 'nchars', '=', '0', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1412,"['gPrintTapeInfo', '(', 'FILE', '*', 'fp', ',', 'unsigned', 'int', 'indentAmt', ')', '{', 'char', 'indent', '[', 'INDENT_BUFFER_SIZE', ']', ';', 'unsigned', 'int', 'i', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'MIN', '(', 'INDENT_BUFFER_SIZE', '-', '1', ',', 'indentAmt', ')', ';', 'i', '++', ')', 'indent', '[', 'i', ']', '=', ""''"", ';', 'indent', '[', 'i', ']', '=', ""''"", ';', 'fprintf', '(', 'fp', ',', '""""', ',', 'indent', ',', '(', 'unsigned', 'long', ')', 'activeTapeIdx', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'activeTapeIdx', ';', 'i', '++', ')', 'printTapeInfo', '(', 'activeTapes', '[', 'i', ']', ',', 'fp', ',', 'indentAmt', '+', 'INDENT_INCR', ')', ';', 'fprintf', '(', 'fp', ',', '""""', ',', 'indent', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1413,"['appendTail', '(', 'RegularExpression', '*', 'regexp', ',', 'UChar', '*', '*', 'destBuf', ',', 'int32_t', '*', 'destCapacity', ',', 'UErrorCode', '*', 'status', ')', '{', '/', '/', 'If', 'we', 'come', 'in', 'with', 'a', 'buffer', 'overflow', 'error', ',', ""don't"", 'suppress', 'the', 'operation', '.', '/', '/', 'A', 'series', 'of', 'appendReplacements', ',', 'appendTail', 'need', 'to', 'correctly', '/', '/', 'the', 'buffer', 'size', 'when', 'an', 'overflow', 'happens', 'somewhere', 'in', 'the', 'middle', '.', 'UBool', 'pendingBufferOverflow', '=', 'FALSE', ';', 'if', '(', '*', 'status', '==', 'U_BUFFER_OVERFLOW_ERROR', '&&', 'destCapacity', '!=', 'NULL', '&&', '*', 'destCapacity', '==', '0', ')', '{', 'pendingBufferOverflow', '=', 'TRUE', ';', '*', 'status', '=', 'U_ZERO_ERROR', ';', '}', 'if', '(', 'validateRE', '(', 'regexp', ',', 'TRUE', ',', 'status', ')', '==', 'FALSE', ')', '{', 'return', '0', ';', '}', 'if', '(', 'destCapacity', '==', 'NULL', '||', 'destBuf', '==', 'NULL', '||', '(', '*', 'destBuf', '==', 'NULL', '&&', '*', 'destCapacity', '>', '0', ')', '||', '*', 'destCapacity', '<', '0', ')', '{', '*', 'status', '=', 'U_ILLEGAL_ARGUMENT_ERROR', ';', 'return', '0', ';', '}', 'RegexMatcher', '*', 'm', '=', 'regexp', '->', 'fMatcher', ';', 'int32_t', 'destIdx', '=', '0', ';', 'int32_t', 'destCap', '=', '*', 'destCapacity', ';', 'UChar', '*', 'dest', '=', '*', 'destBuf', ';', 'if', '(', 'regexp', '->', 'fText', '!=', 'NULL', ')', '{', 'int32_t', 'srcIdx', ';', 'int64_t', 'nativeIdx', '=', '(', 'm', '->', 'fMatch', '?', 'm', '->', 'fMatchEnd', ':', 'm', '->', 'fLastMatchEnd', ')', ';', 'if', '(', 'nativeIdx', '==', '-', '1', ')', '{', 'srcIdx', '=', '0', ';', '}', 'else', 'if', '(', 'UTEXT_USES_U16', '(', 'm', '->', 'fInputText', ')', ')', '{', 'srcIdx', '=', '(', 'int32_t', ')', 'nativeIdx', ';', '}', 'else', '{', 'UErrorCode', 'status', '=', 'U_ZERO_ERROR', ';', 'srcIdx', '=', 'utext_extract', '(', 'm', '->', 'fInputText', ',', '0', ',', 'nativeIdx', ',', 'NULL', ',', '0', ',', '&', 'status', ')', ';', '}', 'for', '(', ';', ';', ')', '{', 'U_ASSERT', '(', 'destIdx', '>=', '0', ')', ';', 'if', '(', 'srcIdx', '==', 'regexp', '->', 'fTextLength', ')', '{', 'break', ';', '}', 'UChar', 'c', '=', 'regexp', '->', 'fText', '[', 'srcIdx', ']', ';', 'if', '(', 'c', '==', '0', '&&', 'regexp', '->', 'fTextLength', '==', '-', '1', ')', '{', 'regexp', '->', 'fTextLength', '=', 'srcIdx', ';', 'break', ';', '}', 'if', '(', 'destIdx', '<', 'destCap', ')', '{', 'dest', '[', 'destIdx', ']', '=', 'c', ';', '}', 'else', '{', '/', '/', ""We've"", 'overflowed', 'the', 'dest', 'buffer', '.', '/', '/', 'If', 'the', 'total', 'input', 'string', 'length', 'is', 'known', ',', 'we', '/', '/', 'compute', 'the', 'total', 'buffer', 'size', 'needed', 'without', 'scanning', 'through', 'the', 'string', '.', 'if', '(', 'regexp', '->', 'fTextLength', '>', '0', ')', '{', 'destIdx', '+=', '(', 'regexp', '->', 'fTextLength', '-', 'srcIdx', ')', ';', 'break', ';', '}', '}', 'srcIdx', '++', ';', 'destIdx', '++', ';', '}', '}', 'else', '{', 'int64_t', 'srcIdx', ';', 'if', '(', 'm', '->', 'fMatch', ')', '{', '/', '/', 'The', 'most', 'recent', 'call', 'to', 'find', '(', ')', 'succeeded', '.', 'srcIdx', '=', 'm', '->', 'fMatchEnd', ';', '}', 'else', '{', '/', '/', 'The', 'last', 'call', 'to', 'find', '(', ')', 'on', 'this', 'matcher', 'failed', '(', ')', '.', '/', '/', 'Look', 'back', 'to', 'the', 'end', 'of', 'the', 'last', 'find', '(', ')', 'that', 'succeeded', 'for', 'src', 'index', '.', 'srcIdx', '=', 'm', '->', 'fLastMatchEnd', ';', 'if', '(', 'srcIdx', '==', '-', '1', ')', '{', '/', '/', 'There', 'has', 'been', 'no', 'successful', 'match', 'with', 'this', 'matcher', '.', '/', '/', 'We', 'want', 'to', 'copy', 'the', 'whole', 'string', '.', 'srcIdx', '=', '0', ';', '}', '}', 'destIdx', '=', 'utext_extract', '(', 'm', '->', 'fInputText', ',', 'srcIdx', ',', 'm', '->', 'fInputLength', ',', 'dest', ',', 'destCap', ',', 'status', ')', ';', '}', '/', '/', '/', '/', 'NUL', 'terminate', 'the', 'output', 'string', ',', 'if', 'possible', ',', 'otherwise', 'issue', '/', '/', 'appropriate', 'error', 'or', 'warning', '.', '/', '/', 'if', '(', 'destIdx', '<', 'destCap', ')', '{', 'dest', '[', 'destIdx', ']', '=', '0', ';', '}', 'else', 'if', '(', 'destIdx', '==', 'destCap', ')', '{', '*', 'status', '=', 'U_STRING_NOT_TERMINATED_WARNING', ';', '}', 'else', '{', '*', 'status', '=', 'U_BUFFER_OVERFLOW_ERROR', ';', '}', '/', '/', '/', '/', 'Update', 'the', ""user's"", 'buffer', 'ptr', 'and', 'capacity', 'vars', 'to', 'reflect', '/', '/', 'amount', 'used', '.', '/', '/', 'if', '(', 'destIdx', '<', 'destCap', ')', '{', '*', 'destBuf', '+=', 'destIdx', ';', '*', 'destCapacity', '-=', 'destIdx', ';', '}', 'else', 'if', '(', '*', 'destBuf', '!=', 'NULL', ')', '{', '*', 'destBuf', '+=', 'destCap', ';', '*', 'destCapacity', '=', '0', ';', '}', 'if', '(', 'pendingBufferOverflow', '&&', 'U_SUCCESS', '(', '*', 'status', ')', ')', '{', '*', 'status', '=', 'U_BUFFER_OVERFLOW_ERROR', ';', '}', 'return', 'destIdx', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
1414,"['EventTaskToWait', '(', 'P_ECB', 'pecb', ',', 'P_OSTCB', 'ptcb', ')', '{', 'P_OSTCB', 'ptcb1', ';', '#if', '(', 'CFG_EVENT_SORT', '==', '2', ')', '||', '(', 'CFG_EVENT_SORT', '==', '3', ')', 'P_OSTCB', 'ptcb2', ';', 'if', '(', 'pecb', '->', 'eventSortType', '==', 'EVENT_SORT_TYPE_FIFO', ')', '#if', '(', 'CFG_EVENT_SORT', '==', '1', ')', '||', '(', 'CFG_EVENT_SORT', '==', '3', ')', '{', '}', 'else', '{', 'ptcb1', '=', 'ptcb1', '->', 'waitNext', ';', '}', 'ptcb', '->', 'waitPrev', '=', 'ptcb1', ';', '}', '}', 'else', 'if', '(', 'pecb', '->', 'eventSortType', '==', 'EVENT_SORT_TYPE_PRIO', ')', '#if', '(', 'CFG_EVENT_SORT', '==', '2', ')', '||', '(', 'CFG_EVENT_SORT', '==', '3', ')', '{', '}', 'else', 'if', '(', 'ptcb1', '->', 'prio', '>', 'ptcb', '->', 'prio', ')', '{', 'ptcb1', '->', 'waitPrev', '=', 'ptcb', ';', 'ptcb2', '=', 'ptcb1', '->', 'waitNext', ';', '}', '}', 'ptcb', '->', 'waitPrev', '=', 'ptcb1', ';', 'ptcb', '->', 'waitNext', '=', 'ptcb2', ';', 'if', '(', 'ptcb2', '!=', 'Co_NULL', ')', '{', 'ptcb2', '->', 'waitPrev', '=', 'ptcb', ';', '}', '}', '}', 'TaskSchedReq', '=', 'Co_TRUE', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1415,"['parse_arguments', '(', 'int', 'argc', ',', 'char', '*', '*', 'argv', ')', '{', 'int', 'key', ';', 'int', 'index', '=', '0', ';', 'program_args', '.', 'silent', '=', '0', ';', 'program_args', '.', 'verbose', '=', '0', ';', 'program_args', '.', 'input_file', '=', 'NULL', ';', 'program_args', '.', 'output_file', '=', 'NULL', ';', 'while', '(', '(', 'key', '=', 'getopt_long', '(', 'argc', ',', 'argv', ',', '""""', ',', 'long_options', ',', '&', 'index', ')', ')', '!=', '-', '1', ')', '{', 'switch', '(', 'key', ')', '{', 'case', ""''"", ':', 'case', ""''"", ':', 'program_args', '.', 'silent', '=', '1', ';', 'break', ';', 'case', ""''"", ':', '++', 'program_args', '.', 'verbose', ';', 'break', ';', 'case', ""''"", ':', 'program_args', '.', 'output_file', '=', 'optarg', ';', 'break', ';', 'case', '0', ':', 'if', '(', 'strcmp', '(', 'long_options', '[', 'index', ']', '.', 'name', ',', '""""', ')', '==', '0', ')', '{', 'usage', '(', ')', ';', '}', 'else', 'if', '(', 'strcmp', '(', 'long_options', '[', 'index', ']', '.', 'name', ',', '""""', ')', '==', '0', ')', '{', 'help', '(', ')', ';', '}', 'break', ';', 'case', ""''"", ':', 'version', '(', ')', ';', 'break', ';', 'case', ""''"", ':', 'exit', '(', '1', ')', ';', 'break', ';', 'default', ':', 'exit', '(', '1', ')', ';', 'break', ';', '}', '}', 'if', '(', 'argc', '-', '1', '!=', 'optind', ')', '{', 'printf', '(', '""""', ')', ';', 'exit', '(', '1', ')', ';', '}', 'else', '{', 'program_args', '.', 'input_file', '=', 'argv', '[', 'optind', ']', ';', '}', '}']",CWE-119  False,CWE-120  True,CWE-469  True,CWE-476  False,CWE-other  False
1416,"['print_proof', '(', 'FILE', '*', 'fp', ',', 'Plist', 'proof', ',', 'String_buf', 'comment', ',', 'int', 'format', ',', 'I3list', 'jmap', ',', 'int', 'number', ')', '{', 'Plist', 'p', ';', 'int', 'length', '=', 'proof_length', '(', 'proof', ')', ';', 'int', 'max_count', '=', 'max_clause_symbol_count', '(', 'proof', ')', ';', 'if', '(', 'format', '==', 'CL_FORM_XML', ')', '{', 'fprintf', '(', 'fp', ',', '""""', '%', 'd\\""""', '%', 'd\\""""', '%', 'd\\""""', ',', 'number', ',', 'length', ',', 'max_count', ')', ';', 'if', '(', 'comment', ')', '{', 'fprintf', '(', 'fp', ',', '""""', ')', ';', 'fprint_sb', '(', 'fp', ',', 'comment', ')', ';', 'fprintf', '(', 'fp', ',', '""""', ')', ';', '}', '}', 'else', 'if', '(', 'format', '==', 'CL_FORM_IVY', ')', '{', 'fprintf', '(', 'fp', ',', '""""', ')', ';', 'fprintf', '(', 'fp', ',', '""""', ')', ';', '}', 'else', '{', 'print_separator', '(', 'stdout', ',', '""""', ',', 'TRUE', ')', ';', 'if', '(', 'comment', ')', '{', 'fprintf', '(', 'fp', ',', '""""', ')', ';', 'fprint_sb', '(', 'stdout', ',', 'comment', ')', ';', 'fprintf', '(', 'fp', ',', '""""', ')', ';', '}', '}', 'for', '(', 'p', '=', 'proof', ';', 'p', ';', 'p', '=', 'p', '->', 'next', ')', 'fwrite_clause_jmap', '(', 'stdout', ',', 'p', '->', 'v', ',', 'format', ',', 'jmap', ')', ';', 'if', '(', 'format', '==', 'CL_FORM_XML', ')', 'fprintf', '(', 'fp', ',', '""""', ')', ';', 'else', 'if', '(', 'format', '==', 'CL_FORM_IVY', ')', '{', 'fprintf', '(', 'fp', ',', '""""', ')', ';', 'fprintf', '(', 'fp', ',', '""""', ')', ';', '}', 'print_separator', '(', 'stdout', ',', '""""', ',', 'TRUE', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1417,"['main', '(', 'int', 'argc', ',', 'char', '*', 'argv', '[', ']', ')', '{', 'if', '(', 'argc', '!=', '2', ')', '{', 'printf', '(', '""""', ',', 'argv', '[', '0', ']', ')', ';', 'exit', '(', '-', '1', ')', ';', '}', 'yyin', '=', 'fopen', '(', 'argv', '[', '1', ']', ',', '""""', ')', ';', 'if', '(', '!yyin', ')', '{', 'printf', '(', '""""', ',', 'argv', '[', '0', ']', ',', 'argv', '[', '1', ']', ')', ';', 'exit', '(', '-', '1', ')', ';', '}', 'progname', '=', 'argv', '[', '0', ']', ';', 'if', '(', '!yyparse', '(', ')', ')', 'printf', '(', '""""', ')', ';', 'printf', '(', '""""', ')', ';', 'return', '(', '0', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1418,"['vfp_esi_bytes', '(', 'struct', 'sess', '*', 'sp', ',', 'struct', 'http_conn', '*', 'htc', ',', 'ssize_t', 'bytes', ')', '{', 'int', 'i', ';', 'CHECK_OBJ_NOTNULL', '(', 'sp', ',', 'SESS_MAGIC', ')', ';', 'AN', '(', 'sp', '->', 'wrk', '->', 'vep', ')', ';', 'if', '(', 'sp', '->', 'wrk', '->', 'is_gzip', '&&', 'sp', '->', 'wrk', '->', 'do_gunzip', ')', 'i', '=', 'vfp_esi_bytes_gu', '(', 'sp', ',', 'htc', ',', 'bytes', ')', ';', 'else', 'if', '(', 'sp', '->', 'wrk', '->', 'is_gunzip', '&&', 'sp', '->', 'wrk', '->', 'do_gzip', ')', 'i', '=', 'vfp_esi_bytes_ug', '(', 'sp', ',', 'htc', ',', 'bytes', ')', ';', 'else', 'if', '(', 'sp', '->', 'wrk', '->', 'is_gzip', ')', 'i', '=', 'vfp_esi_bytes_gg', '(', 'sp', ',', 'htc', ',', 'bytes', ')', ';', 'i', '=', 'vfp_esi_bytes_uu', '(', 'sp', ',', 'htc', ',', 'bytes', ')', ';', 'AN', '(', 'sp', '->', 'wrk', '->', 'vep', ')', ';', 'return', '(', 'i', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
1419,"['i40e_vc_config_irq_map_msg', '(', 'struct', 'i40e_vf', '*', 'vf', ',', 'u8', '*', 'msg', ',', 'u16', 'msglen', ')', '{', 'struct', 'i40e_virtchnl_irq_map_info', '*', 'irqmap_info', '=', '(', 'struct', 'i40e_virtchnl_irq_map_info', '*', ')', 'msg', ';', 'struct', 'i40e_virtchnl_vector_map', '*', 'map', ';', 'u16', 'vsi_id', ',', 'vsi_queue_id', ',', 'vector_id', ';', 'i40e_status', 'aq_ret', '=', '0', ';', 'unsigned', 'long', 'tempmap', ';', 'int', 'i', ';', 'if', '(', '!test_bit', '(', 'I40E_VF_STAT_ACTIVE', ',', '&', 'vf', '->', 'vf_states', ')', ')', '{', 'aq_ret', '=', 'I40E_ERR_PARAM', ';', 'goto', 'error_param', ';', '}', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'irqmap_info', '->', 'num_vectors', ';', 'i', '++', ')', '{', 'map', '=', '&', 'irqmap_info', '->', 'vecmap', '[', 'i', ']', ';', 'vector_id', '=', 'map', '->', 'vector_id', ';', 'vsi_id', '=', 'map', '->', 'vsi_id', ';', 'if', '(', '!i40e_vc_isvalid_vector_id', '(', 'vf', ',', 'vector_id', ')', '||', '!i40e_vc_isvalid_vsi_id', '(', 'vf', ',', 'vsi_id', ')', ')', '{', 'aq_ret', '=', 'I40E_ERR_PARAM', ';', 'goto', 'error_param', ';', '}', 'tempmap', '=', 'map', '->', 'rxq_map', ';', 'for_each_set_bit', '(', 'vsi_queue_id', ',', '&', 'tempmap', ',', 'I40E_MAX_VSI_QP', ')', '{', 'if', '(', '!i40e_vc_isvalid_queue_id', '(', 'vf', ',', 'vsi_id', ',', 'vsi_queue_id', ')', ')', '{', 'aq_ret', '=', 'I40E_ERR_PARAM', ';', 'goto', 'error_param', ';', '}', '}', 'tempmap', '=', 'map', '->', 'txq_map', ';', 'for_each_set_bit', '(', 'vsi_queue_id', ',', '&', 'tempmap', ',', 'I40E_MAX_VSI_QP', ')', '{', 'if', '(', '!i40e_vc_isvalid_queue_id', '(', 'vf', ',', 'vsi_id', ',', 'vsi_queue_id', ')', ')', '{', 'aq_ret', '=', 'I40E_ERR_PARAM', ';', 'goto', 'error_param', ';', '}', '}', 'i40e_config_irq_link_list', '(', 'vf', ',', 'vsi_id', ',', 'map', ')', ';', '}', 'error_param', ':', 'return', 'i40e_vc_send_resp_to_vf', '(', 'vf', ',', 'I40E_VIRTCHNL_OP_CONFIG_IRQ_MAP', ',', 'aq_ret', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1420,"['ShowFileDetailDialog', '(', 'long', 'index', ')', '{', '/', '/', 'Make', 'list', 'of', 'part', 'files', 'in', 'std', ':', ':', 'vector', '<', 'CPartFile', '*', '>', 'files', ';', 'int', 'nrItems', '=', 'GetItemCount', '(', ')', ';', 'files', '.', 'reserve', '(', 'nrItems', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'nrItems', ';', 'i', '++', ')', '{', '/', '/', 'ADUNANZA', '/', '/', '#if', 'files', '.', 'push_back', '(', '(', '(', 'FileCtrlItem_Struct', '*', ')', 'GetItemData', '(', 'i', ')', ')', '->', 'GetFile', '(', ')', ')', ';', 'files', '.', 'push_back', '(', 'reinterpret_cast', '<', 'FileCtrlItem_Struct', '*', '>', '(', 'GetItemData', '(', 'i', ')', ')', '->', 'GetFile', '(', ')', ')', ';', '/', '/', 'ADUNANZA', '}', 'bool', 'autosort', '=', 'thePrefs', ':', ':', 'AutoSortDownload', '(', 'false', ')', ';', 'CFileDetailDialog', '(', 'this', ',', 'files', ',', 'index', ')', '.', 'ShowModal', '(', ')', ';', 'thePrefs', ':', ':', 'AutoSortDownload', '(', 'autosort', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1421,"['audio_convert_get_func_index', '(', 'AudioConvertCtx', '*', 'ctx', ',', 'const', 'GstAudioFormatInfo', '*', 'fmt', ')', '{', 'gint', 'index', '=', '0', ';', 'if', '(', 'GST_AUDIO_FORMAT_INFO_IS_INTEGER', '(', 'fmt', ')', ')', '{', 'index', '+=', '(', 'GST_AUDIO_FORMAT_INFO_WIDTH', '(', 'fmt', ')', '/', '8', '-', '1', ')', '*', '4', ';', 'index', '+=', 'GST_AUDIO_FORMAT_INFO_IS_LITTLE_ENDIAN', '(', 'fmt', ')', '?', '0', ':', '2', ';', 'index', '+=', 'GST_AUDIO_FORMAT_INFO_IS_SIGNED', '(', 'fmt', ')', '?', '1', ':', '0', ';', 'index', '+=', '(', 'ctx', '->', 'ns', '==', 'NOISE_SHAPING_NONE', ')', '?', '0', ':', '24', ';', '}', 'else', '{', 'index', '=', '16', ';', 'index', '+=', '(', 'GST_AUDIO_FORMAT_INFO_WIDTH', '(', 'fmt', ')', '==', '32', ')', '?', '0', ':', '2', ';', 'index', '+=', 'GST_AUDIO_FORMAT_INFO_IS_LITTLE_ENDIAN', '(', 'fmt', ')', '?', '0', ':', '1', ';', 'index', '+=', '(', 'DOUBLE_INTERMEDIATE_FORMAT', '(', 'ctx', ')', ')', '?', '4', ':', '0', ';', '}', 'return', 'index', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1422,"['gamgi_gtk_direction_create_node', '(', 'gamgi_bool', 'node', ',', 'gamgi_window', '*', 'window', ')', '{', 'GtkWidget', '*', 'dialog', '=', 'window', '->', 'dialog0', ';', 'GtkWidget', '*', 'entry_o1', ',', '*', 'entry_o2', ',', '*', 'entry_o3', ';', 'GtkWidget', '*', 'label_o1', ',', '*', 'label_o2', ',', '*', 'label_o3', ',', '*', 'label_o4', ';', 'GtkWidget', '*', 'combo', ';', 'char', 'token', '[', 'GAMGI_ENGINE_TOKEN', ']', ';', 'entry_o1', '=', '(', 'GtkWidget', '*', ')', 'g_object_get_data', '(', 'G_OBJECT', '(', 'dialog', ')', ',', '""""', ')', ';', 'entry_o2', '=', '(', 'GtkWidget', '*', ')', 'g_object_get_data', '(', 'G_OBJECT', '(', 'dialog', ')', ',', '""""', ')', ';', 'entry_o3', '=', '(', 'GtkWidget', '*', ')', 'g_object_get_data', '(', 'G_OBJECT', '(', 'dialog', ')', ',', '""""', ')', ';', 'label_o1', '=', '(', 'GtkWidget', '*', ')', 'g_object_get_data', '(', 'G_OBJECT', '(', 'dialog', ')', ',', '""""', ')', ';', 'label_o2', '=', '(', 'GtkWidget', '*', ')', 'g_object_get_data', '(', 'G_OBJECT', '(', 'dialog', ')', ',', '""""', ')', ';', 'label_o3', '=', '(', 'GtkWidget', '*', ')', 'g_object_get_data', '(', 'G_OBJECT', '(', 'dialog', ')', ',', '""""', ')', ';', 'label_o4', '=', '(', 'GtkWidget', '*', ')', 'g_object_get_data', '(', 'G_OBJECT', '(', 'dialog', ')', ',', '""""', ')', ';', '/', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', 'the', 'o4', 'combo', 'box', 'should', 'be', '000', 'when', '*', '*', 'Node', 'is', 'started', 'and', 'when', 'Node', 'is', 'closed', '*', 'combo', '=', '(', 'GtkWidget', '*', ')', 'g_object_get_data', '(', 'G_OBJECT', '(', 'dialog', ')', ',', '""""', ')', ';', 'gtk_combo_box_set_active', '(', 'GTK_COMBO_BOX', '(', 'combo', ')', ',', 'FALSE', ')', ';', '/', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', 'enable', 'when', 'Cell', 'and', 'Node', 'are', 'chosen', '*', 'if', '(', 'node', '==', 'TRUE', ')', '{', 'gtk_widget_set_sensitive', '(', 'combo', ',', 'TRUE', ')', ';', 'gtk_widget_set_sensitive', '(', 'entry_o1', ',', 'TRUE', ')', ';', 'gtk_widget_set_sensitive', '(', 'entry_o2', ',', 'TRUE', ')', ';', 'gtk_widget_set_sensitive', '(', 'entry_o3', ',', 'TRUE', ')', ';', 'gtk_widget_set_sensitive', '(', 'label_o1', ',', 'TRUE', ')', ';', 'gtk_widget_set_sensitive', '(', 'label_o2', ',', 'TRUE', ')', ';', 'gtk_widget_set_sensitive', '(', 'label_o3', ',', 'TRUE', ')', ';', 'gtk_widget_set_sensitive', '(', 'label_o4', ',', 'TRUE', ')', ';', 'sprintf', '(', 'token', ',', '""""', ',', 'GAMGI_PHYS_NODE_O1', ')', ';', 'gtk_entry_set_text', '(', 'GTK_ENTRY', '(', 'entry_o1', ')', ',', 'token', ')', ';', 'sprintf', '(', 'token', ',', '""""', ',', 'GAMGI_PHYS_NODE_O2', ')', ';', 'gtk_entry_set_text', '(', 'GTK_ENTRY', '(', 'entry_o2', ')', ',', 'token', ')', ';', 'sprintf', '(', 'token', ',', '""""', ',', 'GAMGI_PHYS_NODE_O3', ')', ';', 'gtk_entry_set_text', '(', 'GTK_ENTRY', '(', 'entry_o3', ')', ',', 'token', ')', ';', '}', '{', 'gtk_widget_set_sensitive', '(', 'combo', ',', 'FALSE', ')', ';', 'gtk_entry_set_text', '(', 'GTK_ENTRY', '(', 'entry_o1', ')', ',', '""""', ')', ';', 'gtk_entry_set_text', '(', 'GTK_ENTRY', '(', 'entry_o2', ')', ',', '""""', ')', ';', 'gtk_entry_set_text', '(', 'GTK_ENTRY', '(', 'entry_o3', ')', ',', '""""', ')', ';', 'gtk_widget_set_sensitive', '(', 'entry_o1', ',', 'FALSE', ')', ';', 'gtk_widget_set_sensitive', '(', 'entry_o2', ',', 'FALSE', ')', ';', 'gtk_widget_set_sensitive', '(', 'entry_o3', ',', 'FALSE', ')', ';', 'gtk_widget_set_sensitive', '(', 'label_o1', ',', 'FALSE', ')', ';', 'gtk_widget_set_sensitive', '(', 'label_o2', ',', 'FALSE', ')', ';', 'gtk_widget_set_sensitive', '(', 'label_o3', ',', 'FALSE', ')', ';', 'gtk_widget_set_sensitive', '(', 'label_o4', ',', 'FALSE', ')', ';', '}', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1423,"['smk_bu_credfile', '(', 'const', 'struct', 'cred', '*', 'cred', ',', 'struct', 'file', '*', 'file', ',', 'int', 'mode', ',', 'int', 'rc', ')', '{', 'struct', 'task_smack', '*', 'tsp', '=', 'cred', '->', 'security', ';', 'struct', 'smack_known', '*', 'sskp', '=', 'tsp', '->', 'smk_task', ';', 'struct', 'inode', '*', 'inode', '=', 'file', '->', 'f_inode', ';', 'struct', 'inode_smack', '*', 'isp', '=', 'inode', '->', 'i_security', ';', 'char', 'acc', '[', 'SMK_NUM_ACCESS_TYPE', '+', '1', ']', ';', 'if', '(', 'isp', '->', 'smk_flags', '&', 'SMK_INODE_IMPURE', ')', 'pr_info', '(', '""""', ',', 'inode', '->', 'i_sb', '->', 's_id', ',', 'inode', '->', 'i_ino', ',', 'current', '->', 'comm', ')', ';', 'if', '(', 'rc', '<=', '0', ')', 'return', 'rc', ';', 'if', '(', 'rc', '>', 'SMACK_UNCONFINED_OBJECT', ')', 'rc', '=', '0', ';', 'smk_bu_mode', '(', 'mode', ',', 'acc', ')', ';', 'pr_info', '(', '""""', ',', 'smk_bu_mess', '[', 'rc', ']', ',', 'sskp', '->', 'smk_known', ',', 'smk_of_inode', '(', 'inode', ')', '->', 'smk_known', ',', 'acc', ',', 'inode', '->', 'i_sb', '->', 's_id', ',', 'inode', '->', 'i_ino', ',', 'file', ',', 'current', '->', 'comm', ')', ';', 'return', '0', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1424,"['strdup_escape', '(', 'const', 'char', '*', 'str', ')', '{', 'const', 'char', '*', 'input', '=', 'str', ';', 'char', '*', 'p', ',', '*', 'ret', ';', 'int', 'escapes', ';', 'if', '(', '!strlen', '(', 'str', ')', ')', 'return', 'NULL', ';', 'escapes', '=', '0', ';', 'while', '(', '(', 'input', '=', 'strpbrk', '(', 'input', ',', '""""""', ')', ')', '!=', 'NULL', ')', '{', 'escapes', '++', ';', 'input', '++', ';', '}', 'p', '=', 'ret', '=', 'malloc', '(', 'strlen', '(', 'str', ')', '+', 'escapes', '+', '1', ')', ';', 'while', '(', '*', 'str', ')', '{', 'if', '(', '*', 'str', '==', ""''"", '||', '*', 'str', '==', ""''"", ')', '*', 'p', '++', '=', ""''"", ';', '*', 'p', '++', '=', '*', 'str', '++', ';', '}', '*', 'p', '=', ""''"", ';', 'return', 'ret', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1425,"['freadHeaderPnm', '(', 'FILE', '*', 'fp', ',', 'PIX', '*', '*', 'ppix', ',', 'l_int32', '*', 'pwidth', ',', 'l_int32', '*', 'pheight', ',', 'l_int32', '*', 'pdepth', ',', 'l_int32', '*', 'ptype', ',', 'l_int32', '*', 'pbpc', ',', 'l_int32', '*', 'pcpp', ')', '{', 'l_int32', 'w', ',', 'h', ',', 'd', ',', 'type', ';', 'l_int32', 'maxval', ';', 'PROCNAME', '(', '""""', ')', ';', 'if', '(', '!fp', ')', 'return', 'ERROR_INT', '(', '""""', ',', 'procName', ',', '1', ')', ';', 'if', '(', '!pwidth', '||', '!pheight', '||', '!pdepth', '||', '!ptype', ')', 'return', 'ERROR_INT', '(', '""""', ',', 'procName', ',', '1', ')', ';', 'fscanf', '(', 'fp', ',', '""""', ',', '&', 'type', ')', ';', 'if', '(', 'type', '<', '1', '||', 'type', '>', '6', ')', 'return', 'ERROR_INT', '(', '""""', ',', 'procName', ',', '1', ')', ';', 'if', '(', 'pnmSkipCommentLines', '(', 'fp', ')', ')', 'return', 'ERROR_INT', '(', '""""', ',', 'procName', ',', '1', ')', ';', 'fscanf', '(', 'fp', ',', '""""', ',', '&', 'w', ',', '&', 'h', ')', ';', 'if', '(', 'w', '<=', '0', '||', 'h', '<=', '0', '||', 'w', '>', 'MAX_PNM_WIDTH', '||', 'h', '>', 'MAX_PNM_HEIGHT', ')', 'return', 'ERROR_INT', '(', '""""', ',', 'procName', ',', '1', ')', ';', 'if', '(', 'type', '==', '1', '||', 'type', '==', '4', ')', 'd', '=', '1', ';', 'else', 'if', '(', 'type', '==', '2', '||', 'type', '==', '5', ')', '{', 'fscanf', '(', 'fp', ',', '""""', ',', '&', 'maxval', ')', ';', 'if', '(', 'maxval', '==', '3', ')', 'd', '=', '2', ';', 'else', 'if', '(', 'maxval', '==', '15', ')', 'd', '=', '4', ';', 'else', 'if', '(', 'maxval', '==', '255', ')', 'd', '=', '8', ';', 'else', 'if', '(', 'maxval', '==', '0xffff', ')', 'd', '=', '16', ';', 'else', '{', 'fprintf', '(', 'stderr', ',', '""""', ',', 'maxval', ')', ';', 'return', 'ERROR_INT', '(', '""""', ',', 'procName', ',', '1', ')', ';', '}', '}', 'fscanf', '(', 'fp', ',', '""""', ',', '&', 'maxval', ')', ';', 'if', '(', 'maxval', '!=', '255', ')', 'L_WARNING_INT', '(', '""""', ',', 'procName', ',', 'maxval', ')', ';', 'd', '=', '32', ';', '}', '*', 'pwidth', '=', 'w', ';', '*', 'pheight', '=', 'h', ';', '*', 'pdepth', '=', 'd', ';', '*', 'ptype', '=', 'type', ';', 'if', '(', 'pbpc', ')', '*', 'pbpc', '=', '(', 'd', '==', '32', ')', '?', '8', ':', 'd', ';', 'if', '(', 'pcpp', ')', '*', 'pcpp', '=', '(', 'd', '==', '32', ')', '?', '3', ':', '1', ';', 'if', '(', '!ppix', ')', 'return', '0', ';', 'if', '(', '(', '*', 'ppix', '=', 'pixCreate', '(', 'w', ',', 'h', ',', 'd', ')', ')', '==', 'NULL', ')', 'return', 'ERROR_INT', '(', '""""', ',', 'procName', ',', '1', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1426,"['repulsive', '(', 'Param', '*', 'param', ',', 'double', 'rsq', ',', 'double', '&', 'fforce', ',', 'int', 'eflag', ',', 'double', '&', 'eng', ')', '{', 'double', 'r', ',', 'tmp_fc', ',', 'tmp_fc_d', ',', 'tmp_exp', ';', '/', '/', 'Tersoff', 'repulsive', 'r', '=', 'sqrt', '(', 'rsq', ')', ';', 'tmp_fc', '=', 'ters_fc', '(', 'r', ',', 'param', ')', ';', 'tmp_fc_d', '=', 'ters_fc_d', '(', 'r', ',', 'param', ')', ';', 'tmp_exp', '=', 'exp', '(', '-', 'param', '->', 'lam1', '*', 'r', ')', ';', 'double', 'fforce_ters', '=', 'param', '->', 'biga', '*', 'tmp_exp', '*', '(', 'tmp_fc_d', '-', 'tmp_fc', '*', 'param', '->', 'lam1', ')', ';', 'double', 'eng_ters', '=', 'tmp_fc', '*', 'param', '->', 'biga', '*', 'tmp_exp', ';', '/', '/', 'ZBL', 'repulsive', 'double', 'esq', '=', 'square', '(', 'global_e', ')', ';', 'double', 'a_ij', '=', '(', '0', '.', '8854', '*', 'global_a_0', ')', '/', '(', 'pow', '(', 'param', '->', 'Z_i', ',', '0', '.', '23', ')', '+', 'pow', '(', 'param', '->', 'Z_j', ',', '0', '.', '23', ')', ')', ';', 'double', 'premult', '=', '(', 'param', '->', 'Z_i', '*', 'param', '->', 'Z_j', '*', 'esq', ')', '/', '(', '4', '.', '0', '*', 'MY_PI', '*', 'global_epsilon_0', ')', ';', 'double', 'r_ov_a', '=', 'r', '/', 'a_ij', ';', 'double', 'phi', '=', '0', '.', '1818', '*', 'exp', '(', '-', '3', '.', '2', '*', 'r_ov_a', ')', '+', '0', '.', '5099', '*', 'exp', '(', '-', '0', '.', '9423', '*', 'r_ov_a', ')', '+', '0', '.', '2802', '*', 'exp', '(', '-', '0', '.', '4029', '*', 'r_ov_a', ')', '+', '0', '.', '02817', '*', 'exp', '(', '-', '0', '.', '2016', '*', 'r_ov_a', ')', ';', 'double', 'dphi', '=', '(', '1', '.', '0', '/', 'a_ij', ')', '*', '(', '-', '3', '.', '2', '*', '0', '.', '1818', '*', 'exp', '(', '-', '3', '.', '2', '*', 'r_ov_a', ')', '-', '0', '.', '9423', '*', '0', '.', '5099', '*', 'exp', '(', '-', '0', '.', '9423', '*', 'r_ov_a', ')', '-', '0', '.', '4029', '*', '0', '.', '2802', '*', 'exp', '(', '-', '0', '.', '4029', '*', 'r_ov_a', ')', '-', '0', '.', '2016', '*', '0', '.', '02817', '*', 'exp', '(', '-', '0', '.', '2016', '*', 'r_ov_a', ')', ')', ';', 'double', 'fforce_ZBL', '=', 'premult', '*', '-', 'rsq', '*', 'phi', '+', 'premult', '/', 'r', '*', 'dphi', ';', 'double', 'eng_ZBL', '=', 'premult', '/', 'r', '*', 'phi', ';', '/', '/', 'combine', 'two', 'parts', 'with', 'smoothing', 'by', 'Fermi', '-', 'like', 'fforce', '=', '-', '(', '-', 'F_fermi_d', '(', 'r', ',', 'param', '->', 'ZBLexpscale', ',', 'param', '->', 'ZBLcut', ')', '*', 'eng_ZBL', '+', '(', '1', '.', '0', '-', 'F_fermi', '(', 'r', ',', 'param', '->', 'ZBLexpscale', ',', 'param', '->', 'ZBLcut', ')', ')', '*', 'fforce_ZBL', '+', 'F_fermi_d', '(', 'r', ',', 'param', '->', 'ZBLexpscale', ',', 'param', '->', 'ZBLcut', ')', '*', 'eng_ters', '+', 'F_fermi', '(', 'r', ',', 'param', '->', 'ZBLexpscale', ',', 'param', '->', 'ZBLcut', ')', '*', 'fforce_ters', ')', '/', 'r', ';', 'if', '(', 'eflag', ')', 'eng', '=', '(', '1', '.', '0', '-', 'F_fermi', '(', 'r', ',', 'param', '->', 'ZBLexpscale', ',', 'param', '->', 'ZBLcut', ')', ')', '*', 'eng_ZBL', '+', 'F_fermi', '(', 'r', ',', 'param', '->', 'ZBLexpscale', ',', 'param', '->', 'ZBLcut', ')', '*', 'eng_ters', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1427,"['p12u_ucs2_ascii_conversion_function', '(', 'PRBool', 'toUnicode', ',', 'unsigned', 'char', '*', 'inBuf', ',', 'unsigned', 'int', 'inBufLen', ',', 'unsigned', 'char', '*', 'outBuf', ',', 'unsigned', 'int', 'maxOutBufLen', ',', 'unsigned', 'int', '*', 'outBufLen', ',', 'PRBool', 'swapBytes', ')', '{', 'SECItem', 'it', ';', 'SECItem', '*', 'dup', '=', 'NULL', ';', 'PRBool', 'ret', ';', 'it', '.', 'data', '=', 'inBuf', ';', 'it', '.', 'len', '=', 'inBufLen', ';', 'dup', '=', 'SECITEM_DupItem', '(', '&', 'it', ')', ';', '/', '/', 'If', 'converting', 'Unicode', 'to', 'ASCII', ',', 'swap', 'bytes', 'before', 'conversion', 'as', 'neccessary', '.', 'if', '(', '!toUnicode', '&&', 'swapBytes', ')', '{', 'if', '(', 'p12u_SwapUnicodeBytes', '(', 'dup', ')', '!=', 'SECSuccess', ')', '{', 'SECITEM_ZfreeItem', '(', 'dup', ',', 'PR_TRUE', ')', ';', 'return', 'PR_FALSE', ';', '}', '}', '/', '/', 'Perform', 'the', 'conversion', '.', 'ret', '=', 'PORT_UCS2_UTF8Conversion', '(', 'toUnicode', ',', 'dup', '->', 'data', ',', 'dup', '->', 'len', ',', 'outBuf', ',', 'maxOutBufLen', ',', 'outBufLen', ')', ';', 'if', '(', 'dup', ')', 'SECITEM_ZfreeItem', '(', 'dup', ',', 'PR_TRUE', ')', ';', 'return', 'ret', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1428,"['is_redhat_agent', '(', 'const', 'char', '*', 'agent', ')', '{', 'int', 'rc', '=', '0', ';', 'struct', 'stat', 'prop', ';', 'char', 'buffer', '[', 'FILENAME_MAX', '+', '1', ']', ';', 'snprintf', '(', 'buffer', ',', 'FILENAME_MAX', ',', '""""', ',', 'RH_STONITH_DIR', ',', 'agent', ')', ';', 'rc', '=', 'stat', '(', 'buffer', ',', '&', 'prop', ')', ';', 'if', '(', 'rc', '>=', '0', '&&', 'S_ISREG', '(', 'prop', '.', 'st_mode', ')', ')', '{', 'return', 'TRUE', ';', '}', 'return', 'FALSE', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1429,"['getADFTypeFromDesc', '(', 'VimosDescriptor', '*', 'desc', ')', '{', 'const', 'char', 'modName', '[', ']', '=', '""""', ';', 'VimosDescriptor', '*', 'tDesc', ';', 'tDesc', '=', 'findDescriptor', '(', 'desc', ',', '""""', ')', ';', 'if', '(', 'tDesc', '==', 'NULL', ')', '{', 'cpl_msg_error', '(', 'modName', ',', '""""', ',', '""""', ')', ';', 'return', '(', 'VM_ADF_TYPE_UDF', ')', ';', '}', 'else', '{', 'if', '(', '!strncmp', '(', '""""', ',', 'tDesc', '->', 'descValue', '->', 's', ',', '3', ')', ')', '{', 'return', '(', 'VM_ADF_TYPE_MOS', ')', ';', '}', 'if', '(', '!strncmp', '(', '""""', ',', 'tDesc', '->', 'descValue', '->', 's', ',', '3', ')', ')', '{', 'return', '(', 'VM_ADF_TYPE_IFU', ')', ';', '}', 'if', '(', '!strncmp', '(', '""""', ',', 'tDesc', '->', 'descValue', '->', 's', ',', '5', ')', ')', '{', 'return', '(', 'VM_ADF_TYPE_IMA', ')', ';', '}', '}', 'return', '(', 'VM_ADF_TYPE_UDF', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1430,"['brasero_track_data_get_file_num', '(', 'BraseroTrackData', '*', 'track', ',', 'guint64', '*', 'file_num', ')', '{', 'BraseroTrackDataClass', '*', 'klass', ';', 'g_return_val_if_fail', '(', 'BRASERO_IS_TRACK_DATA', '(', 'track', ')', ',', '0', ')', ';', 'klass', '=', 'BRASERO_TRACK_DATA_GET_CLASS', '(', 'track', ')', ';', 'if', '(', 'file_num', ')', '*', 'file_num', '=', 'klass', '->', 'get_file_num', '(', 'track', ')', ';', 'return', 'BRASERO_BURN_OK', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
1431,"['remove', '(', 'LoadInst', '*', 'LI', ')', '{', 'uint64_t', 'Size', '=', 'AA', '.', 'getTypeStoreSize', '(', 'LI', '->', 'getType', '(', ')', ')', ';', 'const', 'MDNode', '*', 'TBAAInfo', '=', 'LI', '->', 'getMetadata', '(', 'LLVMContext', ':', ':', 'MD_tbaa', ')', ';', 'AliasSet', '*', 'AS', '=', 'findAliasSetForPointer', '(', 'LI', '->', 'getOperand', '(', '0', ')', ',', 'Size', ',', 'TBAAInfo', ')', ';', 'if', '(', '!AS', ')', 'return', 'false', ';', 'remove', '(', '*', 'AS', ')', ';', 'return', 'true', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1432,"['__fscache_relinquish_cookie', '(', 'struct', 'fscache_cookie', '*', 'cookie', ',', 'bool', 'retire', ')', '{', 'fscache_stat', '(', '&', 'fscache_n_relinquishes', ')', ';', 'if', '(', 'retire', ')', 'fscache_stat', '(', '&', 'fscache_n_relinquishes_retire', ')', ';', 'if', '(', '!cookie', ')', '{', 'fscache_stat', '(', '&', 'fscache_n_relinquishes_null', ')', ';', '_leave', '(', '""""', ')', ';', 'return', ';', '}', '_enter', '(', '""""', ',', 'cookie', ',', 'cookie', '->', 'def', '->', 'name', ',', 'cookie', '->', 'netfs_data', ',', 'atomic_read', '(', '&', 'cookie', '->', 'n_active', ')', ',', 'retire', ')', ';', 'set_bit', '(', 'FSCACHE_COOKIE_RELINQUISHED', ',', '&', 'cookie', '->', 'flags', ')', ';', '__fscache_disable_cookie', '(', 'cookie', ',', 'retire', ')', ';', 'cookie', '->', 'netfs_data\t', '=', 'NULL', ';', 'cookie', '->', 'def\t\t', '=', 'NULL', ';', 'BUG_ON', '(', 'cookie', '->', 'stores', '.', 'rnode', ')', ';', 'if', '(', 'cookie', '->', 'parent', ')', '{', 'ASSERTCMP', '(', 'atomic_read', '(', '&', 'cookie', '->', 'parent', '->', 'usage', ')', ',', '>', ',', '0', ')', ';', 'ASSERTCMP', '(', 'atomic_read', '(', '&', 'cookie', '->', 'parent', '->', 'n_children', ')', ',', '>', ',', '0', ')', ';', 'atomic_dec', '(', '&', 'cookie', '->', 'parent', '->', 'n_children', ')', ';', '}', 'ASSERTCMP', '(', 'atomic_read', '(', '&', 'cookie', '->', 'usage', ')', ',', '>', ',', '0', ')', ';', 'fscache_cookie_put', '(', 'cookie', ')', ';', '_leave', '(', '""""', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1433,"['ocopen', '(', 'OCstate', '*', '*', 'statep', ',', 'const', 'char', '*', 'url', ')', '{', 'int', 'stat', '=', 'OC_NOERR', ';', 'OCstate', '*', 'state', '=', 'NULL', ';', 'OCURI', '*', 'tmpurl', ';', 'if', '(', '!ocuriparse', '(', 'url', ',', '&', 'tmpurl', ')', ')', '{', 'OCTHROWCHK', '(', 'stat', '=', 'OC_EBADURL', ')', ';', 'goto', 'fail', ';', '}', 'stat', '=', 'occurlopen', '(', '&', 'curl', ')', ';', 'if', '(', 'stat', '!=', 'OC_NOERR', ')', '{', 'OCTHROWCHK', '(', 'stat', ')', ';', 'goto', 'fail', ';', '}', 'if', '(', 'state', '==', 'NULL', ')', '{', 'OCTHROWCHK', '(', 'stat', '=', 'OC_ENOMEM', ')', ';', 'goto', 'fail', ';', '}', 'state', '->', 'magic', '=', 'OCMAGIC', ';', 'state', '->', 'curl', '=', 'curl', ';', 'state', '->', 'trees', '=', 'oclistnew', '(', ')', ';', 'state', '->', 'contentlist', '=', 'NULL', ';', 'state', '->', 'uri', '=', 'tmpurl', ';', 'if', '(', '!ocuridecodeparams', '(', 'state', '->', 'uri', ')', ')', '{', 'oc_log', '(', 'LOGWARN', ',', '""""', ')', ';', '}', 'state', '->', 'packet', '=', 'ocbytesnew', '(', ')', ';', 'ocsetcurlproperties', '(', 'state', ')', ';', 'if', '(', 'statep', ')', '*', 'statep', '=', 'state', ';', 'return', 'OCTHROW', '(', 'stat', ')', ';', 'fail', ':', 'ocurifree', '(', 'tmpurl', ')', ';', 'if', '(', 'state', '!=', 'NULL', ')', 'ocfree', '(', 'state', ')', ';', 'if', '(', 'curl', '!=', 'NULL', ')', 'occurlclose', '(', 'curl', ')', ';', 'return', 'OCTHROW', '(', 'stat', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1434,"['mpl_alloc', '(', 'const', 'struct', 'mempool', '*', 'mpl', ')', '{', 'unsigned', 'tsz', ';', 'struct', 'memitem', '*', 'mi', ';', 'CHECK_OBJ_NOTNULL', '(', 'mpl', ',', 'MEMPOOL_MAGIC', ')', ';', 'tsz', '=', '*', 'mpl', '->', 'cur_size', ';', 'mi', '=', 'calloc', '(', 'sizeof', '*', 'mi', '+', 'tsz', ',', '1', ')', ';', 'AN', '(', 'mi', ')', ';', 'mi', '->', 'magic', '=', 'MEMITEM_MAGIC', ';', 'mi', '->', 'size', '=', 'tsz', ';', 'mpl', '->', 'vsc', '->', 'sz_wanted', '=', 'tsz', ';', 'mpl', '->', 'vsc', '->', 'sz_needed', '=', 'tsz', '+', 'sizeof', '*', 'mi', ';', 'return', '(', 'mi', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
1435,"['aes128rounds', '(', 'const', 'u32', 'rk', '[', '/', '*', '44', '*', '/', ']', ',', 'const', 'u8', 'pt', '[', '16', ']', ',', 'u8', 'ct', '[', '16', ']', ',', 'int', 'rounds', ',', 'int', 'start', ')', '{', 'u32', 's', '[', '4', ']', ';', 'int', 'i', ';', 's', '[', '0', ']', '=', 'GETU32', '(', 'pt', ')', ';', 's', '[', '1', ']', '=', 'GETU32', '(', 'pt', '+', '4', ')', ';', 's', '[', '2', ']', '=', 'GETU32', '(', 'pt', '+', '8', ')', ';', 's', '[', '3', ']', '=', 'GETU32', '(', 'pt', '+', '12', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'rounds', ';', 'i', '++', ')', '{', 'aes128round', '(', 's', ',', 'rk', '+', '4', '*', '(', 'start', '+', 'i', ')', ')', ';', '}', 'PUTU32', '(', 'ct', ',', 's', '[', '0', ']', ')', ';', 'PUTU32', '(', 'ct', '+', '4', ',', 's', '[', '1', ']', ')', ';', 'PUTU32', '(', 'ct', '+', '8', ',', 's', '[', '2', ']', ')', ';', 'PUTU32', '(', 'ct', '+', '12', ',', 's', '[', '3', ']', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1436,"['AttackStart', '(', 'Unit', '*', 'pWho', ')', '{', 'if', '(', '!pWho', ')', '{', 'return', ';', '}', 'if', '(', 'm_creature', '->', 'Attack', '(', 'pWho', ',', 'true', ')', ')', '{', 'm_creature', '->', 'AddThreat', '(', 'pWho', ')', ';', 'm_creature', '->', 'SetInCombatWith', '(', 'pWho', ')', ';', 'pWho', '->', 'SetInCombatWith', '(', 'm_creature', ')', ';', 'if', '(', 'IsCombatMovement', '(', ')', ')', '{', 'm_creature', '->', 'GetMotionMaster', '(', ')', '->', 'MoveChase', '(', 'pWho', ')', ';', '}', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1437,"['inxsearch', '(', 'int', 'b', ',', 'int', 'g', ',', 'int', 'r', ')', '{', 'int', 'i', ',', 'j', ',', 'dist', ',', 'a', ',', 'bestd', ';', 'int', '*', 'p', ';', 'int', 'best', ';', 'bestd', '=', '1000', ';', '\t\t', '/', '/', 'biggest', 'possible', 'dist', 'is', '256', '*', 'best', '=', '-', '1', ';', 'i', '=', 'netindex', '[', 'g', ']', ';', '\t', '/', '/', 'index', 'on', 'j', '=', 'i', '-', '1', ';', '\t\t\t', '/', '/', 'start', 'at', 'netindex', '[', 'g', ']', 'and', 'work', 'while', '(', '(', 'i', '<', 'netsize', ')', '||', '(', 'j', '>=', '0', ')', ')', '{', 'if', '(', 'i', '<', 'netsize', ')', '{', 'p', '=', 'network', '[', 'i', ']', ';', 'dist', '=', 'p', '[', 'FI_RGBA_GREEN', ']', '-', 'g', ';', '\t\t\t\t', '/', '/', 'inx', 'if', '(', 'dist', '>=', 'bestd', ')', 'i', '=', 'netsize', ';', '\t', '/', '/', 'stop', 'else', '{', 'i', '++', ';', 'if', '(', 'dist', '<', '0', ')', 'dist', '=', '-', 'dist', ';', 'a', '=', 'p', '[', 'FI_RGBA_BLUE', ']', '-', 'b', ';', 'if', '(', 'a', '<', '0', ')', 'a', '=', '-', 'a', ';', 'dist', '+=', 'a', ';', 'if', '(', 'dist', '<', 'bestd', ')', '{', 'a', '=', 'p', '[', 'FI_RGBA_RED', ']', '-', 'r', ';', 'if', '(', 'a', '<', '0', ')', 'a', '=', '-', 'a', ';', 'dist', '+=', 'a', ';', 'if', '(', 'dist', '<', 'bestd', ')', '{', 'bestd', '=', 'dist', ';', 'best', '=', 'p', '[', '3', ']', ';', '}', '}', '}', '}', 'if', '(', 'j', '>=', '0', ')', '{', 'p', '=', 'network', '[', 'j', ']', ';', 'dist', '=', 'g', '-', 'p', '[', 'FI_RGBA_GREEN', ']', ';', '\t\t\t', '/', '/', 'inx', 'key', '-', 'reverse', 'if', '(', 'dist', '>=', 'bestd', ')', 'j', '=', '-', '1', ';', '\t', '/', '/', 'stop', 'else', '{', 'j', '--', ';', 'if', '(', 'dist', '<', '0', ')', 'dist', '=', '-', 'dist', ';', 'a', '=', 'p', '[', 'FI_RGBA_BLUE', ']', '-', 'b', ';', 'if', '(', 'a', '<', '0', ')', 'a', '=', '-', 'a', ';', 'dist', '+=', 'a', ';', 'if', '(', 'dist', '<', 'bestd', ')', '{', 'a', '=', 'p', '[', 'FI_RGBA_RED', ']', '-', 'r', ';', 'if', '(', 'a', '<', '0', ')', 'a', '=', '-', 'a', ';', 'dist', '+=', 'a', ';', 'if', '(', 'dist', '<', 'bestd', ')', '{', 'bestd', '=', 'dist', ';', 'best', '=', 'p', '[', '3', ']', ';', '}', '}', '}', '}', '}', 'return', 'best', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1438,"['gimplify_omp_workshare', '(', 'tree', '*', 'expr_p', ',', 'gimple_seq', '*', 'pre_p', ')', '{', 'tree', 'expr', '=', '*', 'expr_p', ';', 'gimple', 'stmt', ';', 'gimple_seq', 'body', '=', 'NULL', ';', 'gimplify_scan_omp_clauses', '(', '&', 'OMP_CLAUSES', '(', 'expr', ')', ',', 'pre_p', ',', 'ORT_WORKSHARE', ')', ';', 'gimplify_and_add', '(', 'OMP_BODY', '(', 'expr', ')', ',', '&', 'body', ')', ';', 'gimplify_adjust_omp_clauses', '(', '&', 'OMP_CLAUSES', '(', 'expr', ')', ')', ';', 'if', '(', 'TREE_CODE', '(', 'expr', ')', '==', 'OMP_SECTIONS', ')', 'stmt', '=', 'gimple_build_omp_sections', '(', 'body', ',', 'OMP_CLAUSES', '(', 'expr', ')', ')', ';', 'else', 'if', '(', 'TREE_CODE', '(', 'expr', ')', '==', 'OMP_SINGLE', ')', 'stmt', '=', 'gimple_build_omp_single', '(', 'body', ',', 'OMP_CLAUSES', '(', 'expr', ')', ')', ';', 'gcc_unreachable', '(', ')', ';', 'gimplify_seq_add_stmt', '(', 'pre_p', ',', 'stmt', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1439,"['readPIR', '(', 'struct', 'ReadSeqVars', '*', 'V', ')', '{', 'char', '*', 'sptr', ';', 'while', '(', '!feof', '(', 'V', '->', 'f', ')', '&&', 'strncmp', '(', 'V', '->', 'buf', ',', '""""', ',', '5', ')', '!=', '0', ')', '{', 'SeqfileGetLine', '(', 'V', ')', ';', '}', 'if', '(', 'feof', '(', 'V', '->', 'f', ')', ')', 'return', ';', 'if', '(', 'V', '->', 'ssimode', '>=', '0', ')', 'V', '->', 'r_off', '=', 'V', '->', 'ssioffset', ';', 'if', '(', '(', 'sptr', '=', 'strtok', '(', 'V', '->', 'buf', '+', '15', ',', '""""', ')', ')', '!=', 'NULL', ')', '{', 'SetSeqinfoString', '(', 'V', '->', 'sqinfo', ',', 'sptr', ',', 'SQINFO_NAME', ')', ';', 'SetSeqinfoString', '(', 'V', '->', 'sqinfo', ',', 'sptr', ',', 'SQINFO_ID', ')', ';', '}', 'do', '{', 'SeqfileGetLine', '(', 'V', ')', ';', 'if', '(', '!feof', '(', 'V', '->', 'f', ')', '&&', 'strncmp', '(', 'V', '->', 'buf', ',', '""""', ',', '5', ')', '==', '0', ')', 'SetSeqinfoString', '(', 'V', '->', 'sqinfo', ',', 'V', '->', 'buf', '+', '15', ',', 'SQINFO_DESC', ')', ';', 'else', 'if', '(', '!feof', '(', 'V', '->', 'f', ')', '&&', 'strncmp', '(', 'V', '->', 'buf', ',', '""""', ',', '9', ')', '==', '0', ')', '{', 'if', '(', '(', 'sptr', '=', 'strtok', '(', 'V', '->', 'buf', '+', '15', ',', '""""', ')', ')', '!=', 'NULL', ')', 'SetSeqinfoString', '(', 'V', '->', 'sqinfo', ',', 'sptr', ',', 'SQINFO_ACC', ')', ';', '}', '}', 'while', '(', '!', 'feof', '(', 'V', '->', 'f', ')', '&&', '(', 'strncmp', '(', 'V', '->', 'buf', ',', '""""', ',', '8', ')', '!=', '0', ')', ')', ';', 'readLoop', '(', '0', ',', 'endPIR', ',', 'V', ')', ';', '/', '*', 'reading', 'a', 'real', 'PIR', '-', 'CODATA', 'database', 'file', ',', 'we', 'keep', 'the', 'source', 'V', '->', 'sqinfo', '->', 'start', '=', '1', ';', 'V', '->', 'sqinfo', '->', 'stop', '=', 'V', '->', 'seqlen', ';', 'V', '->', 'sqinfo', '->', 'olen', '=', 'V', '->', 'seqlen', ';', 'V', '->', 'sqinfo', '->', 'flags', '|=', 'SQINFO_START', '|', 'SQINFO_STOP', '|', 'SQINFO_OLEN', ';', '/', '*', 'get', 'next', 'while', '(', '!feof', '(', 'V', '->', 'f', ')', '&&', 'strncmp', '(', 'V', '->', 'buf', ',', '""""', ',', '5', ')', '!=', '0', ')', '{', 'SeqfileGetLine', '(', 'V', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1440,"['cache_add', '(', 'SSL', '*', 'ssl', ',', 'SSL_SESSION', '*', 'sess', ')', '{', 'struct', 'tls_info', '*', 'info', '=', 'SSL_get_app_data', '(', 'ssl', ')', ';', 'unsigned', 'char', 'buffer', '[', 'BUFSIZ', ']', ';', 'unsigned', 'char', '*', 'ucp', ';', 'time_t', 'timeout', '=', '(', 'time_t', ')', 'SSL_SESSION_get_time', '(', 'sess', ')', '+', 'SSL_SESSION_get_timeout', '(', 'sess', ')', ';', 'void', '*', 'session_id', '=', '(', 'void', '*', ')', 'sess', '->', 'session_id', ';', 'size_t', 'session_id_len', '=', 'sess', '->', 'session_id_length', ';', 'size_t', 'sess_len', '=', 'i2d_SSL_SESSION', '(', 'sess', ',', 'NULL', ')', ';', 'if', '(', 'sizeof', '(', 'timeout', ')', '+', 'sizeof', '(', 'session_id_len', ')', '+', 'session_id_len', '+', 'sess_len', '>', 'sizeof', '(', 'buffer', ')', ')', '{', 'fprintf', '(', 'stderr', ',', '""""', ')', ';', '}', 'memcpy', '(', 'buffer', ',', '&', 'timeout', ',', 'sizeof', '(', 'timeout', ')', ')', ';', 'memcpy', '(', 'buffer', '+', 'sizeof', '(', 'timeout', ')', ',', '&', 'session_id_len', ',', 'sizeof', '(', 'session_id_len', ')', ')', ';', 'memcpy', '(', 'buffer', '+', 'sizeof', '(', 'timeout', ')', '+', 'sizeof', '(', 'session_id_len', ')', ',', 'session_id', ',', 'session_id_len', ')', ';', 'ucp', '=', 'buffer', '+', 'sizeof', '(', 'timeout', ')', '+', 'sizeof', '(', 'session_id_len', ')', '+', 'session_id_len', ';', 'i2d_SSL_SESSION', '(', 'sess', ',', '&', 'ucp', ')', ';', 'if', '(', 'tls_cache_add', '(', 'info', '->', 'tlscache', ',', '(', 'char', '*', ')', 'buffer', ',', '(', 'size_t', ')', '(', 'sizeof', '(', 'timeout', ')', '+', 'sizeof', '(', 'session_id_len', ')', '+', 'session_id_len', '+', 'sess_len', ')', ')', ')', 'perror', '(', '""""', ')', ';', '#ifdef', 'fprintf', '(', 'stderr', ',', '""""', ')', ';', 'return', '0', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1441,"['delAttachment', '(', 'std', ':', ':', 'string', 'filename', ')', '/', '/', 'att', '*', '.', '{', 'restartAutosaveTimer', '(', ')', ';', 'std', ':', ':', 'vector', '<', 'AttachmentButton', '*', '>', ':', ':', 'iterator', 'b', ',', 'e', ',', 'p', ';', 'b', '=', 'attachmentList', '.', 'begin', '(', ')', ';', 'e', '=', 'attachmentList', '.', 'end', '(', ')', ';', 'while', '(', 'b', '!=', 'e', ')', '{', 'p', '=', 'b', ';', 'AttachmentButton', '*', 'a', '=', '*', 'b', '++', ';', 'if', '(', 'a', '&&', 'a', '->', 'getFilename', '(', ')', '==', 'filename', ')', '{', 'a', '->', 'erase', '(', ')', ';', 'bool', 'needFocus', '=', 'false', ';', 'if', '(', 'b', '!=', 'e', '&&', '*', 'b', ')', '(', '*', 'b', ')', '->', 'requestFocus', '(', ')', ';', 'needFocus', '=', 'true', ';', 'delete', 'a', ';', 'unlink', '(', 'filename', '.', 'c_str', '(', ')', ')', ';', '*', 'p', '=', 'NULL', ';', 'attachmentList', '.', 'erase', '(', 'p', ')', ';', 'resized', '(', ')', ';', 'if', '(', 'needFocus', ')', '{', 'if', '(', 'attachmentList', '.', 'size', '(', ')', '>', '0', '&&', 'attachmentList', '[', 'attachmentList', '.', 'size', '(', ')', '-', '1', ']', ')', 'attachmentList', '[', 'attachmentList', '.', 'size', '(', ')', '-', '1', ']', '->', 'requestFocus', '(', ')', ';', 'newAttachment', '.', 'requestFocus', '(', ')', ';', '}', 'break', ';', '}', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1442,"['transport_find_fn', '(', 'const', 'char', '*', 'url', ',', 'git_transport_cb', '*', 'callback', ',', 'void', '*', '*', 'param', ')', '{', 'size_t', 'i', '=', '0', ';', 'unsigned', 'priority', '=', '0', ';', 'transport_definition', '*', 'definition', '=', 'NULL', ',', '*', 'definition_iter', ';', '/', '/', 'First', ',', 'check', 'to', 'see', 'if', ""it's"", 'an', 'obvious', 'URL', ',', 'which', 'a', 'URL', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'GIT_TRANSPORT_COUNT', ';', '++', 'i', ')', '{', 'definition_iter', '=', '&', 'transports', '[', 'i', ']', ';', 'if', '(', 'strncasecmp', '(', 'url', ',', 'definition_iter', '->', 'prefix', ',', 'strlen', '(', 'definition_iter', '->', 'prefix', ')', ')', ')', 'continue', ';', 'if', '(', 'definition_iter', '->', 'priority', '>', 'priority', ')', 'definition', '=', 'definition_iter', ';', '}', 'if', '(', '!definition', ')', '{', 'if', '(', '(', 'git_path_exists', '(', 'url', ')', '==', '0', ')', '&&', 'git_path_isdir', '(', 'url', ')', ')', 'definition', '=', '&', 'local_transport_definition', ';', 'if', '(', 'strrchr', '(', 'url', ',', ""''"", ')', ')', '}', 'if', '(', '!definition', ')', 'return', '-', '1', ';', '*', 'callback', '=', 'definition', '->', 'fn', ';', '*', 'param', '=', 'definition', '->', 'param', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1443,"['writePeer', '(', 'int', 'fd', ',', 'const', 'char', '*', 'buffer', ',', 'int', 'n', ')', '{', 'int', 'nbytes', '=', 'write', '(', 'fd', ',', 'buffer', ',', 'n', ')', ';', 'if', '(', 'nbytes', '<', '0', ')', '{', 'ERROR2', '(', '""""', ',', 'errno', ')', ';', 'errnoDebug', '(', '""""', ',', 'errno', ')', ';', '/', '/', 'testing', '}', 'return', 'nbytes', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1444,"['message_calc_anim_start_frame', '(', 'int', 'time', ',', 'generic_anim', '*', 'ani', ',', 'int', 'reverse', ')', '{', 'float\twave_time', ',', 'anim_time', ';', 'int\tstart_frame', ';', 'start_frame', '=', '0', ';', '/', '/', 'If', 'no', 'voice', 'clip', 'exists', ',', 'start', 'from', 'beginning', 'of', 'if', '(', 'time', '<=', '0', ')', '{', 'return', ';', '}', '/', '/', 'convert', 'time', 'to', 'wave_time', '=', 'time', '/', '1000', '.', '0f', ';', 'anim_time', '=', 'ani', '->', 'total_time', ';', '/', '/', 'If', 'voice', 'clip', 'is', 'longer', 'than', 'anim', ',', 'start', 'from', 'beginning', 'of', 'if', '(', 'wave_time', '>=', '(', 'anim_time', ')', ')', '{', 'return', ';', '}', 'float', 'fps', '=', 'ani', '->', 'num_frames', '/', 'ani', '->', 'total_time', ';', 'if', '(', 'reverse', ')', '{', 'start_frame', '=', '(', 'ani', '->', 'num_frames', '-', '1', ')', '-', 'fl2i', '(', 'fps', '*', 'wave_time', '+', '0', '.', '5f', ')', ';', '}', 'else', '{', 'int', 'num_frames_extra', ';', 'num_frames_extra', '=', 'fl2i', '(', 'fps', '*', '(', 'anim_time', '-', 'wave_time', ')', '+', '0', '.', '5f', ')', ';', 'if', '(', 'num_frames_extra', '>', '0', ')', '{', 'start_frame', '=', 'rand', '(', ')', '%', 'num_frames_extra', ';', '}', '}', 'if', '(', 'start_frame', '<', '0', ')', '{', 'Int3', '(', ')', ';', 'start_frame', '=', '0', ';', '}', 'ani', '->', 'current_frame', '=', 'start_frame', ';', 'ani', '->', 'anim_time', '=', 'start_frame', '/', 'fps', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1445,"['_length', '(', 'Request', '&', 'r', ',', 'MethodParams', '&', 'params', ')', '{', 'const', 'String', '&', 's', '=', 'params', '.', 'as_string', '(', '0', ',', '""""', ')', ';', 'VImage', '&', 'vimage', '=', 'GET_SELF', '(', 'r', ',', 'VImage', ')', ';', 'r', '.', 'write_no_lang', '(', '*', 'new', 'VInt', '(', 'vimage', '.', 'font', '(', ')', '.', 'string_width', '(', 's', ')', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1446,"['apbps2_open', '(', 'struct', 'serio', '*', 'io', ')', '{', 'struct', 'apbps2_priv', '*', 'priv', '=', 'io', '->', 'port_data', ';', 'int', 'limit', ';', 'unsigned', 'long', 'tmp', ';', 'iowrite32be', '(', '0', ',', '&', 'priv', '->', 'regs', '->', 'status', ')', ';', 'limit', '=', '1024', ';', 'while', '(', '(', 'ioread32be', '(', '&', 'priv', '->', 'regs', '->', 'status', ')', '&', 'APBPS2_STATUS_DR', ')', '&&', '--', 'limit', ')', 'tmp', '=', 'ioread32be', '(', '&', 'priv', '->', 'regs', '->', 'data', ')', ';', 'iowrite32be', '(', 'APBPS2_CTRL_RE', '|', 'APBPS2_CTRL_RI', ',', '&', 'priv', '->', 'regs', '->', 'ctrl', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1447,"['s48_read_char', '(', 'FILE', '*', 'port', ')', '{', 'int', 'result', ';', 'while', '(', '1', ')', '{', 'if', '(', 'ferror', '(', 'port', ')', '&&', 'errno', '==', 'EINTR', ')', '{', 'clearerr', '(', 'port', ')', ';', 'result', '=', 'getc', '(', 'port', ')', ';', 'if', '(', 'EOF', '!=', 'result', ')', 'return', 'result', ';', '}', 'return', 'EOF', ';', '}', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1448,"['each_with_parse', '(', 'CSPARSE', '*', 'parse', ',', 'int', 'cmd', ',', 'char', '*', 'arg', ')', '{', 'NEOERR', '*', 'err', ';', 'CSTREE', '*', 'node', ';', 'char', '*', 'lvar', ';', 'char', '*', 'p', ';', 'char', 'tmp', '[', '256', ']', ';', 'err', '=', 'alloc_node', '(', '&', 'node', ',', 'parse', ')', ';', 'if', '(', 'err', ')', 'return', 'nerr_pass', '(', 'err', ')', ';', 'node', '->', 'cmd', '=', 'cmd', ';', 'if', '(', 'arg', '[', '0', ']', '==', ""''"", ')', 'node', '->', 'flags', '|=', 'CSF_REQUIRED', ';', 'arg', '++', ';', 'p', '=', 'lvar', '=', 'neos_strip', '(', 'arg', ')', ';', 'while', '(', '*', 'p', '&&', '!isspace', '(', '*', 'p', ')', '&&', '*', 'p', '!=', ""''"", ')', 'p', '++', ';', 'if', '(', '*', 'p', '==', ""''"", ')', '{', 'dealloc_node', '(', '&', 'node', ')', ';', 'return', 'nerr_raise', '(', 'NERR_PARSE', ',', '""""', ',', 'find_context', '(', 'parse', ',', '-', '1', ',', 'tmp', ',', 'sizeof', '(', 'tmp', ')', ')', ',', 'Commands', '[', 'cmd', ']', '.', 'cmd', ',', 'arg', ')', ';', '}', 'if', '(', '*', 'p', '!=', ""''"", ')', '{', '*', 'p', '++', '=', ""''"", ';', 'while', '(', '*', 'p', '&&', '*', 'p', '!=', ""''"", ')', 'p', '++', ';', 'if', '(', '*', 'p', '==', ""''"", ')', '{', 'dealloc_node', '(', '&', 'node', ')', ';', 'return', 'nerr_raise', '(', 'NERR_PARSE', ',', '""""', ',', 'find_context', '(', 'parse', ',', '-', '1', ',', 'tmp', ',', 'sizeof', '(', 'tmp', ')', ')', ',', 'Commands', '[', 'cmd', ']', '.', 'cmd', ',', 'arg', ')', ';', '}', 'p', '++', ';', '}', '{', '*', 'p', '++', '=', ""''"", ';', '}', 'while', '(', '*', 'p', '&&', 'isspace', '(', '*', 'p', ')', ')', 'p', '++', ';', 'if', '(', '*', 'p', '==', ""''"", ')', '{', 'dealloc_node', '(', '&', 'node', ')', ';', 'return', 'nerr_raise', '(', 'NERR_PARSE', ',', '""""', ',', 'find_context', '(', 'parse', ',', '-', '1', ',', 'tmp', ',', 'sizeof', '(', 'tmp', ')', ')', ',', 'Commands', '[', 'cmd', ']', '.', 'cmd', ',', 'arg', ')', ';', '}', 'node', '->', 'arg1', '.', 'op_type', '=', 'CS_TYPE_VAR', ';', 'node', '->', 'arg1', '.', 's', '=', 'lvar', ';', 'err', '=', 'parse_expr', '(', 'parse', ',', 'p', ',', '0', ',', '&', '(', 'node', '->', 'arg2', ')', ')', ';', 'if', '(', 'err', ')', '{', 'dealloc_node', '(', '&', 'node', ')', ';', 'return', 'nerr_pass', '(', 'err', ')', ';', '}', '*', '(', 'parse', '->', 'next', ')', '=', 'node', ';', 'parse', '->', 'next', '=', '&', '(', 'node', '->', 'case_0', ')', ';', 'parse', '->', 'current', '=', 'node', ';', 'return', 'STATUS_OK', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
1449,"['tpo_process_waypoints', '(', 'void', ')', '{', 'unsigned', 'int', 'waypoint_count', ';', 'unsigned', 'int', 'ii', ';', '/', '/', 'printf', '(', '""""', ')', ';', '/', '/', 'Find', 'block', '0x0e0000', '(', 'GPS', '-', 'Waypoints', ')', 'if', '(', 'tpo_find_block', '(', '0x0e0000', ')', ')', '{', 'return', ';', '}', '/', '/', 'Read', 'the', 'number', 'of', 'waypoints', '.', '8', '/', '16', '/', '32', '-', 'bit', 'value', '.', 'waypoint_count', '=', 'tpo_read_int', '(', ')', ';', '/', '/', 'printf', '(', '""""', ',', 'waypoint_count', ')', ';', '/', '/', 'Fetch', 'storage', 'for', 'the', 'waypoint', 'index', '(', 'needed', 'later', '/', '/', 'routes', ')', 'tpo_wp_index', '=', '(', 'waypoint', '*', '*', ')', '(', 'char', '*', ')', 'xmalloc', '(', 'sizeof', '(', 'waypoint', '*', ')', '*', 'waypoint_count', ')', ';', 'if', '(', 'waypoint_count', '==', '0', ')', '{', 'return', ';', '}', '/', '/', 'Read', '/', 'process', 'each', 'waypoint', 'in', 'the', 'for', '(', 'ii', '=', '0', ';', 'ii', '<', 'waypoint_count', ';', 'ii', '++', ')', '{', 'waypoint', '*', 'waypoint_temp', ';', 'waypoint', '*', 'waypoint_temp2', ';', 'unsigned', 'int', 'name_length', ';', 'char', '*', 'waypoint_name', ';', 'int', 'lat', ';', 'int', 'lon', ';', 'int', 'altitude', ';', '/', '/', 'UNKNOWN', 'DATA', '(', 'void', ')', 'tpo_read_int', '(', ')', ';', '/', '/', '/', '/', 'UNKNOWN', 'DATA', '(', 'void', ')', 'tpo_read_int', '(', ')', ';', '/', '/', '/', '/', 'UNKNOWN', 'DATA', '/', '/', 'Fetch', 'name', 'name_length', '=', 'tpo_read_int', '(', ')', ';', '/', '/', 'printf', '(', '""""', ',', 'name_length', ')', ';', 'if', '(', 'name_length', ')', '{', 'waypoint_name', '=', '(', 'char', '*', ')', 'xmalloc', '(', 'name_length', '+', '1', ')', ';', 'waypoint_name', '[', '0', ']', '=', ""''"", ';', 'gbfread', '(', 'waypoint_name', ',', '1', ',', 'name_length', ',', 'tpo_file_in', ')', ';', 'waypoint_name', '[', 'name_length', ']', '=', ""''"", ';', '/', '/', '}', 'else', '{', '/', '/', 'Assign', 'a', 'generic', 'waypoint', 'waypoint_name', '=', '(', 'char', '*', ')', 'xmalloc', '(', '15', ')', ';', 'sprintf', '(', 'waypoint_name', ',', '""""', ',', 'ii', '+', '1', ')', ';', '}', '/', '/', 'printf', '(', '""""', ',', 'waypoint_name', ')', ';', '/', '/', 'UNKNOWN', 'DATA', '(', 'void', ')', 'tpo_read_int', '(', ')', ';', 'lon', '=', 'gbfgetint32', '(', 'tpo_file_in', ')', ';', 'lat', '=', 'gbfgetint32', '(', 'tpo_file_in', ')', ';', '/', '/', 'Allocate', 'space', 'for', 'waypoint', 'and', 'store', 'lat', '/', 'waypoint_temp', '=', 'tpo_convert_ll', '(', 'lat', ',', 'lon', ')', ';', '/', '/', 'Assign', 'the', 'waypoint', 'waypoint_temp', '->', 'shortname', '=', 'waypoint_name', ';', '/', '/', 'Grab', 'the', 'altitude', 'in', 'altitude', '=', 'gbfgetint32', '(', 'tpo_file_in', ')', ';', 'if', '(', 'altitude', '==', '0xfffd000c', ')', '{', '/', '/', 'Unknown', 'altitude', '=', '0', ';', '}', 'waypoint_temp', '->', 'altitude', '=', 'altitude', '/', '100', ';', '/', '/', '/', '/', 'printf', '(', '""""', ',', 'waypoint_temp', '->', 'altitude', ')', ';', '/', '/', 'UNKNOWN', 'DATA', '/', '/', 'Fetch', 'comment', 'name_length', '=', 'tpo_read_int', '(', ')', ';', '/', '/', 'printf', '(', '""""', ',', 'name_length', ')', ';', 'if', '(', 'name_length', ')', '{', 'char', '*', 'comment', ';', 'comment', '=', '(', 'char', '*', ')', 'xmalloc', '(', 'name_length', '+', '1', ')', ';', 'comment', '[', '0', ']', '=', ""''"", ';', 'gbfread', '(', 'comment', ',', '1', ',', 'name_length', ',', 'tpo_file_in', ')', ';', 'comment', '[', 'name_length', ']', '=', ""''"", ';', '/', '/', 'waypoint_temp', '->', 'description', '=', 'comment', ';', '/', '/', 'printf', '(', '""""', ',', 'waypoint_name', ')', ';', '}', 'else', '{', '/', '/', 'waypoint_temp', '->', 'description', '=', 'NULL', ';', '}', '/', '/', 'waypoint_temp', '->', 'notes', '=', 'NULL', ';', '/', '/', 'waypoint_temp', '->', 'url', '=', 'NULL', ';', '/', '/', 'waypoint_temp', '->', 'url_link_text', '=', 'NULL', ';', '/', '/', 'For', 'routes', '(', 'later', ')', ',', 'we', 'need', 'a', 'duplicate', 'of', 'each', '/', '/', 'indexed', 'by', 'the', 'order', 'we', 'read', 'them', 'in', '.', 'waypoint_temp2', '=', 'waypt_dupe', '(', 'waypoint_temp', ')', ';', '/', '/', 'Attach', 'the', 'copy', 'to', 'our', 'tpo_wp_index', '[', 'tpo_index_ptr', '++', ']', '=', 'waypoint_temp2', ';', '/', '/', 'Add', 'the', 'original', 'waypoint', 'to', 'the', 'chain', 'of', 'waypt_add', '(', 'waypoint_temp', ')', ';', '/', '/', 'UNKNOWN', 'DATA', '/', '/', '(', 'void', ')', 'tpo_read_int', '(', ')', ';', '(', 'void', ')', 'gbfgetc', '(', 'tpo_file_in', ')', ';', '/', '/', 'UNKNOWN', 'DATA', '/', '/', '(', 'void', ')', 'tpo_read_int', '(', ')', ';', '(', 'void', ')', 'gbfgetc', '(', 'tpo_file_in', ')', ';', '/', '/', 'UNKNOWN', 'DATA', '/', '/', '(', 'void', ')', 'tpo_read_int', '(', ')', ';', '(', 'void', ')', 'gbfgetc', '(', 'tpo_file_in', ')', ';', '/', '/', 'UNKNOWN', 'DATA', '/', '/', '(', 'void', ')', 'tpo_read_int', '(', ')', ';', '(', 'void', ')', 'gbfgetc', '(', 'tpo_file_in', ')', ';', '}', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1450,"['getNumPoints', '(', ')', '{', 'size_t', 'numPoints', '=', 'shell', '->', 'getNumPoints', '(', ')', ';', 'for', '(', 'size_t', 'i', '=', '0', ',', 'n', '=', 'holes', '->', 'size', '(', ')', ';', 'i', '<', 'n', ';', '++', 'i', ')', '{', 'const', 'LinearRing', '*', 'lr', '=', 'dynamic_cast', '<', 'const', 'LinearRing', '*', '>', '(', '(', '*', 'holes', ')', '[', 'i', ']', ')', ';', 'numPoints', '+=', 'lr', '->', 'getNumPoints', '(', ')', ';', '}', 'return', 'numPoints', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1451,"['write', '(', 'const', 'Sphere', '*', 'sphere', ',', 'size_t', 'count', ')', '{', 'for', '(', 'size_t', 'i', '=', '0', ';', 'i', '<', 'count', ';', '++', 'i', ',', '++', 'sphere', ')', '{', 'write', '(', '&', 'sphere', '->', 'getCenter', '(', ')', ')', ';', 'Real', 'radius', '=', 'sphere', '->', 'getRadius', '(', ')', ';', 'write', '(', '&', 'radius', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1452,"['loadLineSegment', '(', 'double', 'x1', ',', 'double', 'y1', ',', 'double', 'x2', ',', 'double', 'y2', ')', '{', 'if', '(', 'x1', '>', 'myLineMax', '.', 'getX', '(', ')', ')', 'myLineMax', '.', 'setX', '(', 'x1', ')', ';', 'if', '(', 'y1', '>', 'myLineMax', '.', 'getY', '(', ')', ')', 'myLineMax', '.', 'setY', '(', 'y1', ')', ';', 'if', '(', 'x1', '<', 'myLineMin', '.', 'getX', '(', ')', ')', 'myLineMin', '.', 'setX', '(', 'x1', ')', ';', 'if', '(', 'y1', '<', 'myLineMin', '.', 'getY', '(', ')', ')', 'myLineMin', '.', 'setY', '(', 'y1', ')', ';', 'if', '(', 'x2', '>', 'myLineMax', '.', 'getX', '(', ')', ')', 'myLineMax', '.', 'setX', '(', 'x2', ')', ';', 'if', '(', 'y2', '>', 'myLineMax', '.', 'getY', '(', ')', ')', 'myLineMax', '.', 'setY', '(', 'y2', ')', ';', 'if', '(', 'x2', '<', 'myLineMin', '.', 'getX', '(', ')', ')', 'myLineMin', '.', 'setX', '(', 'x2', ')', ';', 'if', '(', 'y2', '<', 'myLineMin', '.', 'getY', '(', ')', ')', 'myLineMin', '.', 'setY', '(', 'y2', ')', ';', 'myLines', '.', 'push_back', '(', 'ArLineSegment', '(', 'x1', ',', 'y1', ',', 'x2', ',', 'y2', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1453,"['ensure_nonzero_step_increments', '(', 'ETableFieldChooser', '*', 'etfc', ')', '{', 'GtkAdjustment', '*', 'va', ',', '*', 'ha', ';', 'va', '=', 'gtk_scrollable_get_vadjustment', '(', 'GTK_SCROLLABLE', '(', 'etfc', '->', 'canvas', ')', ')', ';', 'ha', '=', 'gtk_scrollable_get_hadjustment', '(', 'GTK_SCROLLABLE', '(', 'etfc', '->', 'canvas', ')', ')', ';', '/', '*', 'it', 'looks', 'pretty', 'complicated', 'to', 'get', 'height', 'of', 'column', 'so', 'use', '16', 'pixels', 'which', 'should', 'be', 'if', '(', 'va', ')', 'gtk_adjustment_set_step_increment', '(', 'va', ',', '16', '.', '0', ')', ';', 'if', '(', 'ha', ')', 'gtk_adjustment_set_step_increment', '(', 'ha', ',', '16', '.', '0', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1454,"['count_ops', '(', 'const', 'char', '*', 'p', ')', '{', 'int', 'n', '=', '0', ';', 'while', '(', '*', 'p', ')', '{', 'if', '(', '*', 'p', '==', ""''"", '||', '*', 'p', '==', ""''"", ')', 'n', '++', ';', 'if', '(', '*', 'p', '==', ""''"", ')', 'break', ';', 'p', '++', ';', '}', 'return', 'n', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1455,"['mlx4_en_change_mcast_lb', '(', 'struct', 'mlx4_en_priv', '*', 'priv', ',', 'struct', 'mlx4_qp', '*', 'qp', ',', 'int', 'loopback', ')', '{', 'int', 'ret', ';', 'struct', 'mlx4_update_qp_params', 'qp_params', ';', 'memset', '(', '&', 'qp_params', ',', '0', ',', 'sizeof', '(', 'qp_params', ')', ')', ';', 'if', '(', '!loopback', ')', 'qp_params', '.', 'flags', '=', 'MLX4_UPDATE_QP_PARAMS_FLAGS_ETH_CHECK_MC_LB', ';', 'ret', '=', 'mlx4_update_qp', '(', 'priv', '->', 'mdev', '->', 'dev', ',', 'qp', '->', 'qpn', ',', 'MLX4_UPDATE_QP_ETH_SRC_CHECK_MC_LB', ',', '&', 'qp_params', ')', ';', 'return', 'ret', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1456,"['garmin_write', '(', 'struct', 'tty_struct', '*', 'tty', ',', 'struct', 'usb_serial_port', '*', 'port', ',', 'const', 'unsigned', 'char', '*', 'buf', ',', 'int', 'count', ')', '{', 'struct', 'device', '*', 'dev', '=', '&', 'port', '->', 'dev', ';', 'int', 'pktid', ',', 'pktsiz', ',', 'len', ';', 'struct', 'garmin_data', '*', 'garmin_data_p', '=', 'usb_get_serial_port_data', '(', 'port', ')', ';', '__le32', '*', 'privpkt', '=', '(', '__le32', '*', ')', 'garmin_data_p', '->', 'privpkt', ';', 'usb_serial_debug_data', '(', 'dev', ',', '__func__', ',', 'count', ',', 'buf', ')', ';', 'if', '(', 'garmin_data_p', '->', 'state', '==', 'STATE_RESET', ')', 'return', '-', 'EIO', ';', 'if', '(', 'count', '>=', 'GARMIN_PKTHDR_LENGTH', ')', '{', 'len', '=', 'PRIVPKTSIZ', ';', 'if', '(', 'count', '<', 'len', ')', 'len', '=', 'count', ';', 'memcpy', '(', 'garmin_data_p', '->', 'privpkt', ',', 'buf', ',', 'len', ')', ';', 'pktsiz', '=', 'getDataLength', '(', 'garmin_data_p', '->', 'privpkt', ')', ';', 'pktid', '=', 'getPacketId', '(', 'garmin_data_p', '->', 'privpkt', ')', ';', 'if', '(', 'count', '==', '(', 'GARMIN_PKTHDR_LENGTH', '+', 'pktsiz', ')', '&&', 'GARMIN_LAYERID_PRIVATE', '==', 'getLayerId', '(', 'garmin_data_p', '->', 'privpkt', ')', ')', '{', 'dev_dbg', '(', 'dev', ',', '""""', ',', '__func__', ',', 'pktid', ')', ';', 'garmin_clear', '(', 'garmin_data_p', ')', ';', 'switch', '(', 'pktid', ')', '{', 'case', 'PRIV_PKTID_SET_MODE', ':', 'if', '(', 'pktsiz', '!=', '4', ')', 'return', '-', 'EINVPKT', ';', 'garmin_data_p', '->', 'mode', '=', '__le32_to_cpu', '(', 'privpkt', '[', '3', ']', ')', ';', 'dev_dbg', '(', 'dev', ',', '""""', ',', '__func__', ',', 'garmin_data_p', '->', 'mode', ')', ';', 'break', ';', 'case', 'PRIV_PKTID_INFO_REQ', ':', 'priv_status_resp', '(', 'port', ')', ';', 'break', ';', 'case', 'PRIV_PKTID_RESET_REQ', ':', 'process_resetdev_request', '(', 'port', ')', ';', 'break', ';', 'case', 'PRIV_PKTID_SET_DEF_MODE', ':', 'if', '(', 'pktsiz', '!=', '4', ')', 'return', '-', 'EINVPKT', ';', 'initial_mode', '=', '__le32_to_cpu', '(', 'privpkt', '[', '3', ']', ')', ';', 'dev_dbg', '(', 'dev', ',', '""""', ',', '__func__', ',', 'garmin_data_p', '->', 'mode', ')', ';', 'break', ';', '}', 'return', 'count', ';', '}', '}', 'if', '(', 'garmin_data_p', '->', 'mode', '==', 'MODE_GARMIN_SERIAL', ')', '{', 'return', 'gsp_receive', '(', 'garmin_data_p', ',', 'buf', ',', 'count', ')', ';', 'return', 'nat_receive', '(', 'garmin_data_p', ',', 'buf', ',', 'count', ')', ';', '}', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1457,"['dent', '(', 'int', 'n', ')', '{', 'if', '(', 'sindent', '==', 'NULL', ')', '{', 'sindent', '=', '(', 'char', '*', ')', 'ocmalloc', '(', '102', ')', ';', 'MEMCHECK', '(', 'sindent', ',', 'NULL', ')', ';', 'memset', '(', '(', 'void', '*', ')', 'sindent', ',', '(', 'int', ')', ""''"", ',', '(', 'size_t', ')', '101', ')', ';', 'sindent', '[', '101', ']', '=', ""''"", ';', '}', 'if', '(', 'n', '>', '100', ')', 'n', '=', '100', ';', 'return', 'sindent', '+', '(', '100', '-', 'n', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1458,"['auth_gssapi_mic', '(', 'ssh_session', 'session', ',', 'const', 'char', '*', 'user', ',', 'const', 'char', '*', 'principal', ',', 'void', '*', 'userdata', ')', '{', '(', 'void', ')', 'userdata', ';', 'client_creds', '=', 'ssh_gssapi_get_creds', '(', 'session', ')', ';', 'printf', '(', '""""', ',', 'user', ',', 'principal', ')', ';', 'if', '(', 'client_creds', '!=', 'NULL', ')', 'printf', '(', '""""', ')', ';', 'printf', '(', '""""', ')', ';', 'printf', '(', '""""', ')', ';', 'authenticated', '=', '1', ';', 'username', '=', 'strdup', '(', 'principal', ')', ';', 'return', 'SSH_AUTH_SUCCESS', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1459,"['cc_wacom_nav_button_set_property', '(', 'GObject', '*', 'object', ',', 'guint', 'property_id', ',', 'const', 'GValue', '*', 'value', ',', 'GParamSpec', '*', 'pspec', ')', '{', 'CcWacomNavButton', '*', 'nav', '=', 'CC_WACOM_NAV_BUTTON', '(', 'object', ')', ';', 'CcWacomNavButtonPrivate', '*', 'priv', '=', 'nav', '->', 'priv', ';', 'switch', '(', 'property_id', ')', '{', 'case', 'PROP_NOTEBOOK', ':', 'if', '(', 'priv', '->', 'notebook', ')', '{', 'g_signal_handler_disconnect', '(', 'priv', '->', 'notebook', ',', 'priv', '->', 'page_added_id', ')', ';', 'g_signal_handler_disconnect', '(', 'priv', '->', 'notebook', ',', 'priv', '->', 'page_removed_id', ')', ';', 'g_signal_handler_disconnect', '(', 'priv', '->', 'notebook', ',', 'priv', '->', 'page_switched_id', ')', ';', 'g_object_unref', '(', 'priv', '->', 'notebook', ')', ';', '}', 'priv', '->', 'notebook', '=', 'g_value_dup_object', '(', 'value', ')', ';', 'priv', '->', 'page_added_id', '=', 'g_signal_connect', '(', 'G_OBJECT', '(', 'priv', '->', 'notebook', ')', ',', '""""', ',', 'G_CALLBACK', '(', 'pages_changed', ')', ',', 'nav', ')', ';', 'priv', '->', 'page_removed_id', '=', 'g_signal_connect', '(', 'G_OBJECT', '(', 'priv', '->', 'notebook', ')', ',', '""""', ',', 'G_CALLBACK', '(', 'pages_changed', ')', ',', 'nav', ')', ';', 'priv', '->', 'page_switched_id', '=', 'g_signal_connect', '(', 'G_OBJECT', '(', 'priv', '->', 'notebook', ')', ',', '""""', ',', 'G_CALLBACK', '(', 'page_switched', ')', ',', 'nav', ')', ';', 'cc_wacom_nav_button_update', '(', 'nav', ')', ';', 'break', ';', 'case', 'PROP_IGNORE_FIRST', ':', 'priv', '->', 'ignore_first_page', '=', 'g_value_get_boolean', '(', 'value', ')', ';', 'cc_wacom_nav_button_update', '(', 'nav', ')', ';', 'break', ';', 'default', ':', 'G_OBJECT_WARN_INVALID_PROPERTY_ID', '(', 'object', ',', 'property_id', ',', 'pspec', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1460,"['plain_account_init', '(', 'FILE', '*', 'fp', ')', '{', 'char', 'buf', '[', 'BUFSIZE', ']', ',', '*', 'p', ',', '*', 'q', ';', 'u32', 'tid', ';', 'int', 'idx', ';', 'tid', '=', '0', ';', 'while', '(', 'fgets', '(', 'buf', ',', 'sizeof', '(', 'buf', ')', ',', 'fp', ')', ')', '{', 'q', '=', 'buf', ';', 'p', '=', 'target_sep_string', '(', '&', 'q', ')', ';', 'if', '(', '!p', '||', '*', 'p', '==', ""''"", ')', 'continue', ';', 'if', '(', '!strcasecmp', '(', 'p', ',', '""""', ')', ')', '{', 'struct', 'target', '*', 'target', ';', 'tid', '=', '0', ';', 'if', '(', '!', '(', 'p', '=', 'target_sep_string', '(', '&', 'q', ')', ')', ')', 'continue', ';', 'target', '=', 'target_find_by_name', '(', 'p', ')', ';', 'if', '(', 'target', ')', 'tid', '=', 'target', '->', 'tid', ';', '}', 'else', 'if', '(', '!', '(', '(', 'idx', '=', 'param_index_by_name', '(', 'p', ',', 'user_keys', ')', ')', '<', '0', ')', ')', '{', 'char', '*', 'name', ',', '*', 'pass', ';', 'name', '=', 'target_sep_string', '(', '&', 'q', ')', ';', 'pass', '=', 'target_sep_string', '(', '&', 'q', ')', ';', 'if', '(', 'plain_account_add', '(', 'tid', ',', 'idx', ',', 'name', ',', 'pass', ')', '<', '0', ')', 'fprintf', '(', 'stderr', ',', '""""', ',', 'name', ',', 'pass', ')', ';', '}', '}', 'return', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1461,"['selinux_xfrm_skb_sid_ingress', '(', 'struct', 'sk_buff', '*', 'skb', ',', 'u32', '*', 'sid', ',', 'int', 'ckall', ')', '{', 'u32', 'sid_session', '=', 'SECSID_NULL', ';', 'struct', 'sec_path', '*', 'sp', '=', 'skb', '->', 'sp', ';', 'if', '(', 'sp', ')', '{', 'int', 'i', ';', 'for', '(', 'i', '=', 'sp', '->', 'len', '-', '1', ';', 'i', '>=', '0', ';', 'i', '--', ')', '{', 'struct', 'xfrm_state', '*', 'x', '=', 'sp', '->', 'xvec', '[', 'i', ']', ';', 'if', '(', 'selinux_authorizable_xfrm', '(', 'x', ')', ')', '{', 'struct', 'xfrm_sec_ctx', '*', 'ctx', '=', 'x', '->', 'security', ';', 'if', '(', 'sid_session', '==', 'SECSID_NULL', ')', '{', 'sid_session', '=', 'ctx', '->', 'ctx_sid', ';', 'if', '(', '!ckall', ')', 'goto', 'out', ';', '}', 'else', 'if', '(', 'sid_session', '!=', 'ctx', '->', 'ctx_sid', ')', '{', '*', 'sid', '=', 'SECSID_NULL', ';', 'return', '-', 'EINVAL', ';', '}', '}', '}', '}', 'out', ':', '*', 'sid', '=', 'sid_session', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1462,"['drop_nlink', '(', 'struct', 'inode', '*', 'inode', ')', '{', 'WARN_ON', '(', 'inode', '->', 'i_nlink', '==', '0', ')', ';', 'inode', '->', '__i_nlink', '--', ';', 'if', '(', '!inode', '->', 'i_nlink', ')', 'atomic_long_inc', '(', '&', 'inode', '->', 'i_sb', '->', 's_remove_count', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1463,"['photo_populate', '(', 'EContact', '*', 'contact', ',', 'struct', 'berval', '*', '*', 'ber_values', ')', '{', 'if', '(', 'ber_values', '&&', 'ber_values', '[', '0', ']', ')', '{', 'EContactPhoto', 'photo', ';', 'photo', '.', 'type', '=', 'E_CONTACT_PHOTO_TYPE_INLINED', ';', 'photo', '.', 'data', '.', 'inlined', '.', 'mime_type', '=', 'NULL', ';', 'photo', '.', 'data', '.', 'inlined', '.', 'data', '=', '(', 'guchar', '*', ')', 'ber_values', '[', '0', ']', '->', 'bv_val', ';', 'photo', '.', 'data', '.', 'inlined', '.', 'length', '=', 'ber_values', '[', '0', ']', '->', 'bv_len', ';', 'e_contact_set', '(', 'contact', ',', 'E_CONTACT_PHOTO', ',', '&', 'photo', ')', ';', '}', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1464,"['send_ring', '(', 'struct', 'unistimsession', '*', 'pte', ',', 'char', 'volume', ',', 'char', 'style', ')', '{', 'BUFFSEND', ';', 'if', '(', 'unistimdebug', ')', '{', 'ast_verb', '(', '0', ',', '""""', ')', ';', '}', 'memcpy', '(', 'buffsend', '+', 'SIZE_HEADER', ',', 'packet_send_ring', ',', 'sizeof', '(', 'packet_send_ring', ')', ')', ';', 'buffsend', '[', '24', ']', '=', 'style', '+', '0x10', ';', 'buffsend', '[', '29', ']', '=', 'volume', '*', '0x10', ';', 'send_client', '(', 'SIZE_HEADER', '+', 'sizeof', '(', 'packet_send_ring', ')', ',', 'buffsend', ',', 'pte', ')', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1465,"['static_style', '(', 'GtkWidget', '*', 'widget', ',', 'void', '*', 'data', ')', '{', 'gamgi_window', '*', 'window', '=', 'GAMGI_CAST_WINDOW', 'data', ';', 'GtkWidget', '*', 'dialog', '=', 'window', '->', 'dialog0', ';', 'GtkWidget', '*', 'entry', ';', 'GtkWidget', '*', 'label_size', ',', '*', 'label_variancy', ';', 'GtkWidget', '*', 'combo_style', ',', '*', 'combo_size', ',', '*', 'combo_variancy', ';', 'char', 'token', '[', 'GAMGI_ENGINE_TOKEN', ']', ';', 'int', 'row', ';', '/', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', 'update', 'style', '*', 'combo_style', '=', '(', 'GtkWidget', '*', ')', 'g_object_get_data', '(', 'G_OBJECT', '(', 'dialog', ')', ',', '""""', ')', ';', 'row', '=', 'gtk_combo_box_get_active', '(', 'GTK_COMBO_BOX', '(', 'combo_style', ')', ')', ';', 'combo_size', '=', '(', 'GtkWidget', '*', ')', 'g_object_get_data', '(', 'G_OBJECT', '(', 'dialog', ')', ',', '""""', ')', ';', 'label_size', '=', '(', 'GtkWidget', '*', ')', 'g_object_get_data', '(', 'G_OBJECT', '(', 'dialog', ')', ',', '""""', ')', ';', 'combo_variancy', '=', '(', 'GtkWidget', '*', ')', 'g_object_get_data', '(', 'G_OBJECT', '(', 'dialog', ')', ',', '""""', ')', ';', 'label_variancy', '=', '(', 'GtkWidget', '*', ')', 'g_object_get_data', '(', 'G_OBJECT', '(', 'dialog', ')', ',', '""""', ')', ';', 'if', '(', 'row', '==', 'GAMGI_MESA_WIRED', '-', '1', ')', '{', 'entry', '=', 'gtk_bin_get_child', '(', 'GTK_BIN', '(', 'combo_size', ')', ')', ';', 'gtk_entry_set_text', '(', 'GTK_ENTRY', '(', 'entry', ')', ',', '""""', ')', ';', 'gtk_widget_set_sensitive', '(', 'combo_size', ',', 'FALSE', ')', ';', 'gtk_widget_set_sensitive', '(', 'label_size', ',', 'FALSE', ')', ';', 'entry', '=', 'gtk_bin_get_child', '(', 'GTK_BIN', '(', 'combo_variancy', ')', ')', ';', 'gtk_entry_set_text', '(', 'GTK_ENTRY', '(', 'entry', ')', ',', '""""', ')', ';', 'gtk_widget_set_sensitive', '(', 'combo_variancy', ',', 'FALSE', ')', ';', 'gtk_widget_set_sensitive', '(', 'label_variancy', ',', 'FALSE', ')', ';', '}', 'if', '(', 'row', '==', 'GAMGI_MESA_SOLID', '-', '1', ')', '{', 'gtk_widget_set_sensitive', '(', 'combo_size', ',', 'TRUE', ')', ';', 'gtk_widget_set_sensitive', '(', 'label_size', ',', 'TRUE', ')', ';', 'sprintf', '(', 'token', ',', '""""', ',', 'GAMGI_MATH_DECIMAL_SIZE', ',', 'gamgi', '->', 'atom', '->', 'size', ')', ';', 'entry', '=', 'gtk_bin_get_child', '(', 'GTK_BIN', '(', 'combo_size', ')', ')', ';', 'gtk_entry_set_text', '(', 'GTK_ENTRY', '(', 'entry', ')', ',', 'token', ')', ';', 'gtk_widget_set_sensitive', '(', 'combo_variancy', ',', 'TRUE', ')', ';', 'gtk_widget_set_sensitive', '(', 'label_variancy', ',', 'TRUE', ')', ';', 'sprintf', '(', 'token', ',', '""""', ',', 'GAMGI_MATH_DECIMAL_VARIANCY', ',', 'gamgi', '->', 'atom', '->', 'variancy', ')', ';', 'entry', '=', 'gtk_bin_get_child', '(', 'GTK_BIN', '(', 'combo_variancy', ')', ')', ';', 'gtk_entry_set_text', '(', 'GTK_ENTRY', '(', 'entry', ')', ',', 'token', ')', ';', '}', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1466,"['DoIconize', '(', 'bool', 'iconize', ')', '{', 'if', '(', 'm_wndTaskbarNotifier', '&&', 'thePrefs', ':', ':', 'DoMinToTray', '(', ')', ')', '{', 'if', '(', 'iconize', ')', '{', '/', '/', 'Skip', '(', ')', 'will', 'do', 'it', '.', '/', '/', 'Iconize', '(', 'true', ')', ';', 'if', '(', 'SafeState', '(', ')', ')', '{', 'Show', '(', 'false', ')', ';', '}', '}', 'else', '{', 'Show', '(', 'true', ')', ';', 'Raise', '(', ')', ';', '}', '}', 'else', '{', '/', '/', 'Will', 'be', 'done', 'by', 'Skip', '(', ')', ';', '/', '/', 'Iconize', '(', 'iconize', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1467,"['read_float4', '(', 'int', 'f', ',', 'float', '*', 'x', ')', '{', '#ifdef', 'long', 'buffer', '=', '0', ';', 'if', '(', 'read', '(', 'f', ',', '&', 'buffer', ',', '4', ')', '==', '4', ')', '{', 'if_to_c', '(', '(', 'long', '*', ')', 'x', ',', '&', 'buffer', ')', ';', 'return', '1', ';', '}', 'return', '0', ';', '#', 'ifdef', 'unsigned', 'int', 'n', ',', '*', 'iptr', ';', 'if', '(', 'read', '(', 'f', ',', '&', 'n', ',', '4', ')', '==', '4', ')', '{', 'iptr', '=', '(', 'unsigned', 'int', '*', ')', 'x', ';', '*', 'iptr', '=', 'FLIP4', '(', 'n', ')', ';', 'return', '1', ';', '}', 'else', '{', 'return', '0', ';', '}', '#', 'if', '(', 'read', '(', 'f', ',', 'x', ',', '4', ')', '==', '4', ')', '{', 'return', '1', ';', '}', 'else', '{', 'return', '0', ';', '}', '#', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1468,"['flickcurl_user_icon_uri', '(', 'int', 'farm', ',', 'int', 'server', ',', 'char', '*', 'nsid', ')', '{', 'char', 'buf', '[', '1024', ']', ';', 'char', '*', 'result', ';', 'if', '(', 'server', '&&', 'farm', '&&', 'nsid', ')', '{', 'size_t', 'len', ';', 'sprintf', '(', 'buf', ',', '""""', ',', 'farm', ',', 'server', ',', 'nsid', ')', ';', 'len', '=', 'strlen', '(', 'buf', ')', ';', 'result', '=', '(', 'char', '*', ')', 'malloc', '(', 'len', '+', '1', ')', ';', 'memcpy', '(', 'result', ',', 'buf', ',', 'len', '+', '1', ')', ';', '}', 'else', '{', '#define', 'MAGIC_LEN', 'result', '=', '(', 'char', '*', ')', 'malloc', '(', 'MAGIC_LEN', '+', '1', ')', ';', 'memcpy', '(', 'result', ',', '""""', ',', 'MAGIC_LEN', '+', '1', ')', ';', '}', 'return', 'result', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1469,"['copy_gfile', '(', 'MainInfo', '*', 'min', ',', 'DirPane', '*', 'src', ',', 'DirPane', '*', 'dst', ',', 'GFile', '*', 'from', ',', 'GFile', '*', 'to', ',', 'GError', '*', '*', 'err', ')', '{', 'GFileInfo\t', '*', 'fi', ';', 'gboolean\tok', ';', 'if', '(', 'min', '==', 'NULL', '||', 'from', '==', 'NULL', '||', 'to', '==', 'NULL', ')', 'return', 'FALSE', ';', 'switch', '(', 'ovw_overwrite_unary_file', '(', 'dst', ',', 'to', ')', ')', '{', 'case', 'OVW_SKIP', ':', 'return', 'TRUE', ';', 'case', 'OVW_CANCEL', ':', 'return', 'FALSE', ';', 'case', 'OVW_PROCEED', ':', 'break', ';', 'case', 'OVW_PROCEED_FILE', ':', 'case', 'OVW_PROCEED_DIR', ':', 'if', '(', '!del_delete_gfile', '(', 'min', ',', 'to', ',', 'FALSE', ',', 'err', ')', ')', 'return', 'FALSE', ';', '}', 'if', '(', '(', 'fi', '=', 'g_file_query_info', '(', 'from', ',', '""""', ',', 'G_FILE_QUERY_INFO_NOFOLLOW_SYMLINKS', ',', 'NULL', ',', 'err', ')', ')', '==', 'NULL', ')', 'return', 'FALSE', ';', 'switch', '(', 'g_file_info_get_file_type', '(', 'fi', ')', ')', '{', 'case', 'G_FILE_TYPE_REGULAR', ':', 'pgs_progress_item_begin', '(', 'min', ',', 'g_file_info_get_display_name', '(', 'fi', ')', ',', 'g_file_info_get_size', '(', 'fi', ')', ')', ';', 'ok', '=', 'copy_gfile_regular', '(', 'min', ',', 'src', ',', 'dst', ',', 'from', ',', 'to', ',', 'err', ')', ';', 'pgs_progress_item_end', '(', 'min', ')', ';', 'break', ';', 'case', 'G_FILE_TYPE_DIRECTORY', ':', 'pgs_progress_item_begin', '(', 'min', ',', 'g_file_info_get_display_name', '(', 'fi', ')', ',', 'g_file_info_get_size', '(', 'fi', ')', ')', ';', 'ok', '=', 'copy_gfile_directory', '(', 'min', ',', 'src', ',', 'dst', ',', 'from', ',', 'to', ',', 'err', ')', ';', 'pgs_progress_item_end', '(', 'min', ')', ';', 'break', ';', 'case', 'G_FILE_TYPE_SYMBOLIC_LINK', ':', 'pgs_progress_item_begin', '(', 'min', ',', 'g_file_info_get_display_name', '(', 'fi', ')', ',', 'g_file_info_get_size', '(', 'fi', ')', ')', ';', 'ok', '=', 'copy_gfile_symlink', '(', 'min', ',', 'src', ',', 'dst', ',', 'from', ',', 'to', ',', 'err', ')', ';', 'pgs_progress_item_end', '(', 'min', ')', ';', 'break', ';', 'case', 'G_FILE_TYPE_SPECIAL', ':', 'pgs_progress_item_begin', '(', 'min', ',', 'g_file_info_get_display_name', '(', 'fi', ')', ',', '0', ')', ';', 'ok', '=', 'copy_gfile_special', '(', 'min', ',', 'src', ',', 'dst', ',', 'from', ',', 'to', ',', 'err', ')', ';', 'pgs_progress_item_end', '(', 'min', ')', ';', 'break', ';', 'default', ':', 'g_error', '(', '""""', ',', 'g_file_info_get_name', '(', 'fi', ')', ',', 'g_file_info_get_file_type', '(', 'fi', ')', ')', ';', 'ok', '=', 'FALSE', ';', '}', 'g_object_unref', '(', 'fi', ')', ';', 'return', 'ok', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1470,"['ItemDone', '(', ')', '{', 'CurrentItem', '=', '0', ';', 'CurrentSize', '=', '0', ';', 'TotalSize', '=', '0', ';', 'Status', '=', 'string', '(', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1471,"['(', 'CMMFPOPODecKeyChallContent', '*', 'inDecKeyChall', ',', 'long', 'inRandom', ',', 'CERTGeneralName', '*', 'inSender', ',', 'SECKEYPublicKey', '*', 'inPubKey', ',', 'void', '*', 'passwdArg', ')', '{', 'CMMFChallenge', '*', 'curChallenge', ';', 'PLArenaPool', '*', 'genNamePool', '=', 'NULL', ',', '*', 'poolp', ';', 'SECStatus', 'rv', ';', 'SECItem', '*', 'genNameDER', ';', 'void', '*', 'mark', ';', 'PORT_Assert', '(', 'inDecKeyChall', '!=', 'NULL', '&&', 'inSender', '!=', 'NULL', '&&', 'inPubKey', '!=', 'NULL', ')', ';', 'if', '(', 'inDecKeyChall', '==', 'NULL', '||', 'inSender', '==', 'NULL', '||', 'inPubKey', '==', 'NULL', ')', '{', 'return', 'SECFailure', ';', '}', 'poolp', '=', 'inDecKeyChall', '->', 'poolp', ';', 'mark', '=', 'PORT_ArenaMark', '(', 'poolp', ')', ';', 'genNamePool', '=', 'PORT_NewArena', '(', 'CRMF_DEFAULT_ARENA_SIZE', ')', ';', 'genNameDER', '=', 'CERT_EncodeGeneralName', '(', 'inSender', ',', 'NULL', ',', 'genNamePool', ')', ';', 'if', '(', 'genNameDER', '==', 'NULL', ')', '{', 'rv', '=', 'SECFailure', ';', 'goto', 'loser', ';', '}', 'if', '(', 'inDecKeyChall', '->', 'challenges', '==', 'NULL', ')', '{', 'inDecKeyChall', '->', 'challenges', '=', 'PORT_ArenaZNewArray', '(', 'poolp', ',', 'CMMFChallenge', '*', ',', '(', 'CMMF_MAX_CHALLENGES', '+', '1', ')', ')', ';', 'inDecKeyChall', '->', 'numAllocated', '=', 'CMMF_MAX_CHALLENGES', ';', '}', 'if', '(', 'inDecKeyChall', '->', 'numChallenges', '>=', 'inDecKeyChall', '->', 'numAllocated', ')', '{', 'rv', '=', 'SECFailure', ';', 'goto', 'loser', ';', '}', 'if', '(', 'inDecKeyChall', '->', 'numChallenges', '==', '0', ')', '{', 'rv', '=', 'cmmf_create_first_challenge', '(', 'inDecKeyChall', ',', 'inRandom', ',', 'genNameDER', ',', 'inPubKey', ',', 'passwdArg', ')', ';', '}', 'else', '{', 'curChallenge', '=', 'PORT_ArenaZNew', '(', 'poolp', ',', 'CMMFChallenge', ')', ';', 'if', '(', 'curChallenge', '==', 'NULL', ')', '{', 'rv', '=', 'SECFailure', ';', 'goto', 'loser', ';', '}', 'rv', '=', 'cmmf_create_witness_and_challenge', '(', 'poolp', ',', 'curChallenge', ',', 'inRandom', ',', 'genNameDER', ',', 'inPubKey', ',', 'passwdArg', ')', ';', 'if', '(', 'rv', '==', 'SECSuccess', ')', '{', 'inDecKeyChall', '->', 'challenges', '[', 'inDecKeyChall', '->', 'numChallenges', ']', '=', 'curChallenge', ';', 'inDecKeyChall', '->', 'numChallenges', '++', ';', '}', '}', 'if', '(', 'rv', '!=', 'SECSuccess', ')', '{', 'goto', 'loser', ';', '}', 'PORT_ArenaUnmark', '(', 'poolp', ',', 'mark', ')', ';', 'PORT_FreeArena', '(', 'genNamePool', ',', 'PR_FALSE', ')', ';', 'return', 'SECSuccess', ';', 'loser', ':', 'PORT_ArenaRelease', '(', 'poolp', ',', 'mark', ')', ';', 'if', '(', 'genNamePool', '!=', 'NULL', ')', '{', 'PORT_FreeArena', '(', 'genNamePool', ',', 'PR_FALSE', ')', ';', '}', 'PORT_Assert', '(', 'rv', '!=', 'SECSuccess', ')', ';', 'return', 'rv', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1472,"['read_netdump', '(', 'int', 'fd', ',', 'void', '*', 'bufptr', ',', 'int', 'cnt', ',', 'ulong', 'addr', ',', 'physaddr_t', 'paddr', ')', '{', 'off_t', 'offset', ';', 'struct', 'pt_load_segment', '*', 'pls', ';', 'int', 'i', ';', 'offset', '=', '0', ';', '/', '*', '*', 'The', 'Elf32_Phdr', 'has', '32', '-', 'bit', 'fields', 'for', 'p_paddr', ',', 'p_filesz', '*', 'p_memsz', ',', 'so', 'for', 'now', ',', 'multiple', 'PT_LOAD', 'segment', 'support', '*', 'restricted', 'to', '64', '-', 'bit', 'machines', 'for', 'netdump', '/', 'diskdump', 'vmcores', '.', '*', 'However', ',', 'kexec', '/', 'kdump', 'has', 'introduced', 'the', 'optional', 'use', 'of', '*', '64', '-', 'bit', 'ELF', 'header', 'for', '32', '-', 'bit', 'processors', '.', 'switch', '(', 'DUMPFILE_FORMAT', '(', 'nd', '->', 'flags', ')', ')', '{', 'case', 'NETDUMP_ELF32', ':', 'offset', '=', '(', 'off_t', ')', 'paddr', '+', '(', 'off_t', ')', 'nd', '->', 'header_size', ';', 'break', ';', 'case', 'NETDUMP_ELF64', ':', 'case', 'KDUMP_ELF32', ':', 'case', 'KDUMP_ELF64', ':', 'if', '(', 'nd', '->', 'num_pt_load_segments', '==', '1', ')', '{', 'offset', '=', '(', 'off_t', ')', 'paddr', '+', '(', 'off_t', ')', 'nd', '->', 'header_size', '-', '(', 'off_t', ')', 'nd', '->', 'pt_load_segments', '[', '0', ']', '.', 'phys_start', ';', 'break', ';', '}', 'for', '(', 'i', '=', 'offset', '=', '0', ';', 'i', '<', 'nd', '->', 'num_pt_load_segments', ';', 'i', '++', ')', '{', 'pls', '=', '&', 'nd', '->', 'pt_load_segments', '[', 'i', ']', ';', 'if', '(', '(', 'paddr', '>=', 'pls', '->', 'phys_start', ')', '&&', '(', 'paddr', '<', 'pls', '->', 'phys_end', ')', ')', '{', 'offset', '=', '(', 'off_t', ')', '(', 'paddr', '-', 'pls', '->', 'phys_start', ')', '+', 'pls', '->', 'file_offset', ';', 'break', ';', '}', 'if', '(', 'pls', '->', 'zero_fill', '&&', '(', 'paddr', '>=', 'pls', '->', 'phys_end', ')', '&&', '(', 'paddr', '<', 'pls', '->', 'zero_fill', ')', ')', '{', 'memset', '(', 'bufptr', ',', '0', ',', 'cnt', ')', ';', 'if', '(', 'CRASHDEBUG', '(', '8', ')', ')', 'fprintf', '(', 'fp', ',', '""""', ',', 'addr', ',', '(', 'ulonglong', ')', 'paddr', ',', 'cnt', ')', ';', 'return', 'cnt', ';', '}', '}', 'if', '(', '!offset', ')', '{', 'if', '(', 'CRASHDEBUG', '(', '8', ')', ')', 'fprintf', '(', 'fp', ',', '""""', ',', '(', 'ulonglong', ')', 'paddr', ')', ';', 'return', 'READ_ERROR', ';', '}', 'break', ';', '}', 'if', '(', 'CRASHDEBUG', '(', '8', ')', ')', 'fprintf', '(', 'fp', ',', '""""', ',', 'addr', ',', '(', 'ulonglong', ')', 'paddr', ',', 'cnt', ',', '(', 'ulonglong', ')', 'offset', ')', ';', 'if', '(', 'FLAT_FORMAT', '(', ')', ')', '{', 'if', '(', '!read_flattened_format', '(', 'nd', '->', 'ndfd', ',', 'offset', ',', 'bufptr', ',', 'cnt', ')', ')', '{', 'if', '(', 'CRASHDEBUG', '(', '8', ')', ')', 'fprintf', '(', 'fp', ',', '""""', ',', '(', 'ulonglong', ')', 'offset', ')', ';', 'return', 'READ_ERROR', ';', '}', '}', 'else', '{', 'if', '(', 'lseek', '(', 'nd', '->', 'ndfd', ',', 'offset', ',', 'SEEK_SET', ')', '==', '-', '1', ')', '{', 'if', '(', 'CRASHDEBUG', '(', '8', ')', ')', 'fprintf', '(', 'fp', ',', '""""', ',', '(', 'ulonglong', ')', 'offset', ')', ';', 'return', 'SEEK_ERROR', ';', '}', 'if', '(', 'read', '(', 'nd', '->', 'ndfd', ',', 'bufptr', ',', 'cnt', ')', '!=', 'cnt', ')', '{', 'if', '(', 'CRASHDEBUG', '(', '8', ')', ')', 'fprintf', '(', 'fp', ',', '""""', ',', '(', 'ulonglong', ')', 'offset', ')', ';', 'return', 'READ_ERROR', ';', '}', '}', 'return', 'cnt', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1473,"['e_destination_is_evolution_list', '(', 'const', 'EDestination', '*', 'dest', ')', '{', 'g_return_val_if_fail', '(', 'dest', '&&', 'E_IS_DESTINATION', '(', 'dest', ')', ',', 'FALSE', ')', ';', 'return', 'dest', '->', 'priv', '->', 'list_dests', '!=', 'NULL', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1474,"['do_root_summary', '(', 'datum_t', '*', 'key', ',', 'datum_t', '*', 'val', ',', 'void', '*', 'arg', ')', '{', 'Source_t', '*', 'source', '=', '(', 'Source_t', '*', ')', 'val', '->', 'data', ';', 'int', 'rc', ';', 'llist_entry', '*', 'le', ';', 'if', '(', 'source', '->', 'ds', '->', 'dead', ')', 'return', '0', ';', 'if', '(', 'llist_search', '(', '&', '(', 'gmetad_config', '.', 'unsummarized_metrics', ')', ',', '(', 'void', '*', ')', 'key', '->', 'data', ',', 'llist_strncmp', ',', '&', 'le', ')', '==', '0', ')', 'return', '0', ';', 'pthread_mutex_lock', '(', 'source', '->', 'sum_finished', ')', ';', 'rc', '=', 'hash_foreach', '(', 'source', '->', 'metric_summary', ',', 'sum_metrics', ',', 'arg', ')', ';', 'root', '.', 'hosts_up', '+=', 'source', '->', 'hosts_up', ';', 'root', '.', 'hosts_down', '+=', 'source', '->', 'hosts_down', ';', 'pthread_mutex_unlock', '(', 'source', '->', 'sum_finished', ')', ';', 'return', 'rc', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1475,"['uvc_endpoint_max_bpi', '(', 'struct', 'usb_device', '*', 'dev', ',', 'struct', 'usb_host_endpoint', '*', 'ep', ')', '{', 'u16', 'psize', ';', 'switch', '(', 'dev', '->', 'speed', ')', '{', 'case', 'USB_SPEED_SUPER', ':', 'return', 'le16_to_cpu', '(', 'ep', '->', 'ss_ep_comp', '.', 'wBytesPerInterval', ')', ';', 'case', 'USB_SPEED_HIGH', ':', 'psize', '=', 'usb_endpoint_maxp', '(', '&', 'ep', '->', 'desc', ')', ';', 'return', '(', 'psize', '&', '0x07ff', ')', '*', '(', '1', '+', '(', '(', 'psize', '>>', '11', ')', '&', '3', ')', ')', ';', 'case', 'USB_SPEED_WIRELESS', ':', 'psize', '=', 'usb_endpoint_maxp', '(', '&', 'ep', '->', 'desc', ')', ';', 'return', 'psize', ';', 'default', ':', 'psize', '=', 'usb_endpoint_maxp', '(', '&', 'ep', '->', 'desc', ')', ';', 'return', 'psize', '&', '0x07ff', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1476,"['snprint_objid', '(', 'char', '*', 'buf', ',', 'size_t', 'buf_len', ',', 'const', 'oid', '*', 'objid', ',', 'size_t', 'objidlen', ')', '{', 'size_t', 'out_len', '=', '0', ';', 'if', '(', 'sprint_realloc_objid', '(', '(', 'u_char', '*', '*', ')', '&', 'buf', ',', '&', 'buf_len', ',', '&', 'out_len', ',', '0', ',', 'objid', ',', 'objidlen', ')', ')', '{', 'return', '(', 'int', ')', 'out_len', ';', '}', 'else', '{', 'return', '-', '1', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1477,"['gdict_strategy_chooser_has_strategy', '(', 'GdictStrategyChooser', '*', 'chooser', ',', 'const', 'gchar', '*', 'strategy', ')', '{', 'GdictStrategyChooserPrivate', '*', 'priv', ';', 'GtkTreeIter', 'iter', ';', 'gboolean', 'retval', ';', 'g_return_val_if_fail', '(', 'GDICT_IS_STRATEGY_CHOOSER', '(', 'chooser', ')', ',', 'FALSE', ')', ';', 'g_return_val_if_fail', '(', 'strategy', '!=', 'NULL', ',', 'FALSE', ')', ';', 'priv', '=', 'chooser', '->', 'priv', ';', 'if', '(', '!gtk_tree_model_get_iter_first', '(', 'GTK_TREE_MODEL', '(', 'priv', '->', 'store', ')', ',', '&', 'iter', ')', ')', 'return', 'FALSE', ';', 'retval', '=', 'FALSE', ';', '{', 'gchar', '*', 'strat_name', ';', 'gtk_tree_model_get', '(', 'GTK_TREE_MODEL', '(', 'priv', '->', 'store', ')', ',', '&', 'iter', ',', 'STRAT_COLUMN_NAME', ',', '&', 'strat_name', ',', '-', '1', ')', ';', 'if', '(', 'strcmp', '(', 'strat_name', ',', 'strategy', ')', '==', '0', ')', '{', 'retval', '=', 'TRUE', ';', 'g_free', '(', 'strat_name', ')', ';', 'break', ';', '}', 'g_free', '(', 'strat_name', ')', ';', '}', 'while', '(', 'gtk_tree_model_iter_next', '(', 'GTK_TREE_MODEL', '(', 'priv', '->', 'store', ')', ',', '&', 'iter', ')', ')', ';', 'return', 'retval', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1478,"['listen', '(', 'struct', 'sockaddr', '*', 'sa', ',', 'int', 'len', ')', '{', 'if', '(', ':', ':', 'bind', '(', 'nSocket', ',', 'sa', ',', 'len', ')', '==', '-', '1', ')', '{', 'return', 'SOCKET_ERR', ';', '}', 'if', '(', ':', ':', 'listen', '(', 'nSocket', ',', '511', ')', '==', '-', '1', ')', '{', 'return', 'SOCKET_ERR', ';', '}', 'return', 'SOCKET_OK', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1479,"['add_to_dst_predicate_list', '(', 'struct', 'loop', '*', 'loop', ',', 'edge', 'e', ',', 'tree', 'prev_cond', ',', 'tree', 'cond', ')', '{', 'if', '(', '!flow_bb_inside_loop_p', '(', 'loop', ',', 'e', '->', 'dest', ')', ')', 'return', ';', 'if', '(', '!is_true_predicate', '(', 'prev_cond', ')', ')', 'cond', '=', 'fold_build2', '(', 'TRUTH_AND_EXPR', ',', 'boolean_type_node', ',', 'prev_cond', ',', 'cond', ')', ';', 'add_to_predicate_list', '(', 'e', '->', 'dest', ',', 'cond', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1480,"['bubble', '(', 'game', '*', 'g', ',', 'int', 'x', ',', 'int', 'y', ')', '{', 'g', '->', 'add_msg', '(', '""""', ')', ';', 'g', '->', 'sound', '(', 'x', ',', 'y', ',', '18', ',', '""""', ')', ';', 'g', '->', 'm', '.', 'tr_at', '(', 'x', ',', 'y', ')', '=', 'tr_null', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1481,"['fsl_edma_fill_tcd', '(', 'struct', 'fsl_edma_hw_tcd', '*', 'tcd', ',', 'u32', 'src', ',', 'u32', 'dst', ',', 'u16', 'attr', ',', 'u16', 'soff', ',', 'u32', 'nbytes', ',', 'u32', 'slast', ',', 'u16', 'citer', ',', 'u16', 'biter', ',', 'u16', 'doff', ',', 'u32', 'dlast_sga', ',', 'bool', 'major_int', ',', 'bool', 'disable_req', ',', 'bool', 'enable_sg', ')', '{', 'u16', 'csr', '=', '0', ';', '/', '*', '*', 'eDMA', 'hardware', 'SGs', 'require', 'the', 'TCDs', 'to', 'be', 'stored', 'in', '*', 'endian', 'format', 'irrespective', 'of', 'the', 'register', 'endian', 'model', '.', '*', 'So', 'we', 'put', 'the', 'value', 'in', 'little', 'endian', 'in', 'memory', ',', '*', 'for', 'fsl_edma_set_tcd_regs', 'doing', 'the', 'swap', '.', 'tcd', '->', 'saddr', '=', 'cpu_to_le32', '(', 'src', ')', ';', 'tcd', '->', 'daddr', '=', 'cpu_to_le32', '(', 'dst', ')', ';', 'tcd', '->', 'attr', '=', 'cpu_to_le16', '(', 'attr', ')', ';', 'tcd', '->', 'soff', '=', 'cpu_to_le16', '(', 'EDMA_TCD_SOFF_SOFF', '(', 'soff', ')', ')', ';', 'tcd', '->', 'nbytes', '=', 'cpu_to_le32', '(', 'EDMA_TCD_NBYTES_NBYTES', '(', 'nbytes', ')', ')', ';', 'tcd', '->', 'slast', '=', 'cpu_to_le32', '(', 'EDMA_TCD_SLAST_SLAST', '(', 'slast', ')', ')', ';', 'tcd', '->', 'citer', '=', 'cpu_to_le16', '(', 'EDMA_TCD_CITER_CITER', '(', 'citer', ')', ')', ';', 'tcd', '->', 'doff', '=', 'cpu_to_le16', '(', 'EDMA_TCD_DOFF_DOFF', '(', 'doff', ')', ')', ';', 'tcd', '->', 'dlast_sga', '=', 'cpu_to_le32', '(', 'EDMA_TCD_DLAST_SGA_DLAST_SGA', '(', 'dlast_sga', ')', ')', ';', 'tcd', '->', 'biter', '=', 'cpu_to_le16', '(', 'EDMA_TCD_BITER_BITER', '(', 'biter', ')', ')', ';', 'if', '(', 'major_int', ')', 'csr', '|=', 'EDMA_TCD_CSR_INT_MAJOR', ';', 'if', '(', 'disable_req', ')', 'csr', '|=', 'EDMA_TCD_CSR_D_REQ', ';', 'if', '(', 'enable_sg', ')', 'csr', '|=', 'EDMA_TCD_CSR_E_SG', ';', 'tcd', '->', 'csr', '=', 'cpu_to_le16', '(', 'csr', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1482,"['computeAutoMode', '(', ')', '{', 'QString', 'suffix', '=', 'QFileInfo', '(', 'fileName', ')', '.', 'suffix', '(', ')', ';', 'QString', 'firstLine', '=', 'e', '->', 'document', '(', ')', '->', 'begin', '(', ')', '.', 'text', '(', ')', ';', 'QRegExp', 're', '(', '""""', ')', ';', 'bool', 'ok', '=', 'false', ';', 'if', '(', '!', 'ok', '&&', 're', '.', 'indexIn', '(', 'firstLine', ')', '>=', '0', ')', 'ok', '=', 'e', '->', 'setEditorMode', '(', 're', '.', 'cap', '(', '1', ')', ')', ';', 'if', '(', '!', 'ok', '&&', '!', 'suffix', '.', 'isEmpty', '(', ')', ')', 'ok', '=', 'e', '->', 'setEditorMode', '(', 'suffix', ')', ';', 'if', '(', '!', 'ok', ')', 'ok', '=', 'e', '->', 'setEditorMode', '(', '0', ')', ';', 'q', '->', 'updateActionsLater', '(', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1483,"['wb_ffr_cbk', '(', 'call_frame_t', '*', 'frame', ',', 'void', '*', 'cookie', ',', 'xlator_t', '*', 'this', ',', 'int32_t', 'op_ret', ',', 'int32_t', 'op_errno', ')', '{', 'wb_local_t', '*', 'local', '=', 'NULL', ';', 'wb_file_t', '*', 'file', '=', 'NULL', ';', 'GF_ASSERT', '(', 'frame', ')', ';', 'local', '=', 'frame', '->', 'local', ';', 'file', '=', 'local', '->', 'file', ';', 'if', '(', 'file', '!=', 'NULL', ')', '{', 'LOCK', '(', '&', 'file', '->', 'lock', ')', ';', '{', 'if', '(', 'file', '->', 'op_ret', '==', '-', '1', ')', '{', 'op_ret', '=', 'file', '->', 'op_ret', ';', 'op_errno', '=', 'file', '->', 'op_errno', ';', 'file', '->', 'op_ret', '=', '0', ';', '}', '}', 'UNLOCK', '(', '&', 'file', '->', 'lock', ')', ';', '}', 'STACK_UNWIND_STRICT', '(', 'flush', ',', 'frame', ',', 'op_ret', ',', 'op_errno', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
1484,"['VSNPrintF', '(', 'Vector', '<', 'char', '>', 'str', ',', 'const', 'char', '*', 'format', ',', 'va_list', 'args', ')', '{', 'int', 'n', '=', 'vsnprintf', '(', 'str', '.', 'start', '(', ')', ',', 'str', '.', 'length', '(', ')', ',', 'format', ',', 'args', ')', ';', 'if', '(', 'n', '<', '0', '||', 'n', '>=', 'str', '.', 'length', '(', ')', ')', '{', '/', '/', 'If', 'the', 'length', 'is', 'zero', ',', 'the', 'assignment', 'fails', '.', 'if', '(', 'str', '.', 'length', '(', ')', '>', '0', ')', 'str', '[', 'str', '.', 'length', '(', ')', '-', '1', ']', '=', ""''"", ';', 'return', '-', '1', ';', '}', 'else', '{', 'return', 'n', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1485,"['expand_epilogue', '(', ')', '{', 'int', 'size', ';', 'register', 'int', 'regno', ';', 'int', 'return_size', ';', 'rtx', 'scratch', ';', 'if', '(', 'reload_completed', '!=', '1', ')', 'abort', '(', ')', ';', 'size', '=', 'get_frame_size', '(', ')', ';', '/', '*', 'If', 'we', 'are', 'returning', 'a', 'value', 'in', 'two', 'registers', ',', 'we', 'have', 'to', 'preserve', 'X', 'register', 'and', 'use', 'the', 'Y', 'register', 'to', 'restore', 'the', 'stack', 'and', 'the', 'if', '(', 'current_function_return_rtx', '==', '0', ')', 'return_size', '=', '0', ';', 'else', 'if', '(', 'GET_CODE', '(', 'current_function_return_rtx', ')', '==', 'MEM', ')', 'return_size', '=', 'HARD_REG_SIZE', ';', 'return_size', '=', 'GET_MODE_SIZE', '(', 'GET_MODE', '(', 'current_function_return_rtx', ')', ')', ';', 'if', '(', 'return_size', '>', 'HARD_REG_SIZE', '&&', 'return_size', '<=', '2', '*', 'HARD_REG_SIZE', ')', 'scratch', '=', 'iy_reg', ';', 'scratch', '=', 'ix_reg', ';', 'for', '(', 'regno', '=', 'SOFT_REG_LAST', ';', 'regno', '>=', 'SOFT_REG_FIRST', ';', 'regno', '--', ')', '{', 'if', '(', 'regs_ever_live', '[', 'regno', ']', '&&', '!call_used_regs', '[', 'regno', ']', ')', '{', 'emit_move_after_reload', '(', 'gen_rtx', '(', 'REG', ',', 'HImode', ',', 'regno', ')', ',', 'stack_pop_word', ',', 'scratch', ')', ';', '}', '}', 'if', '(', 'TARGET_M6812', '&&', '(', 'size', '>', '4', '||', 'size', '==', '3', ')', ')', '{', 'emit_insn', '(', 'gen_addhi3', '(', 'stack_pointer_rtx', ',', 'stack_pointer_rtx', ',', 'GEN_INT', '(', 'size', ')', ')', ')', ';', '}', 'else', 'if', '(', '(', '!optimize_size', '&&', 'size', '>', '8', ')', '||', '(', 'optimize_size', '&&', 'size', '>', '10', ')', ')', '{', 'rtx', 'insn', ';', 'insn', '=', '(', 'VOIDmode', ',', 'gen_rtvec', '(', '2', ',', 'gen_rtx_SET', '(', 'VOIDmode', ',', 'stack_pointer_rtx', ',', 'gen_rtx_PLUS', '(', 'HImode', ',', 'stack_pointer_rtx', ',', 'GEN_INT', '(', 'size', ')', ')', ')', ',', 'gen_rtx_CLOBBER', '(', 'VOIDmode', ',', 'scratch', ')', ')', ')', ';', 'emit_insn', '(', 'insn', ')', ';', '}', '{', 'int', 'i', ';', 'for', '(', 'i', '=', '2', ';', 'i', '<=', 'size', ';', 'i', '+=', '2', ')', 'emit_move_after_reload', '(', 'scratch', ',', 'stack_pop_word', ',', 'scratch', ')', ';', 'if', '(', 'size', '&', '1', ')', 'emit_insn', '(', 'gen_addhi3', '(', 'stack_pointer_rtx', ',', 'stack_pointer_rtx', ',', 'GEN_INT', '(', '1', ')', ')', ')', ';', '}', 'if', '(', 'current_function_interrupt', ')', '{', 'emit_move_after_reload', '(', 'gen_rtx', '(', 'REG', ',', 'HImode', ',', 'SOFT_SAVED_XY_REGNUM', ')', ',', 'stack_pop_word', ',', 'scratch', ')', ';', 'emit_move_after_reload', '(', 'gen_rtx', '(', 'REG', ',', 'HImode', ',', 'SOFT_Z_REGNUM', ')', ',', 'stack_pop_word', ',', 'scratch', ')', ';', 'emit_move_after_reload', '(', 'm68hc11_soft_tmp_reg', ',', 'stack_pop_word', ',', 'scratch', ')', ';', '}', 'if', '(', 'frame_pointer_needed', ')', 'emit_move_after_reload', '(', 'hard_frame_pointer_rtx', ',', 'stack_pop_word', ',', 'scratch', ')', ';', '/', '*', 'If', 'the', 'trap', 'handler', 'returns', 'some', 'value', ',', 'copy', 'the', 'in', 'D', ',', 'X', 'onto', 'the', 'stack', 'so', 'that', 'the', 'rti', 'will', 'pop', 'the', 'return', 'else', 'if', '(', 'current_function_trap', '&&', 'return_size', '!=', '0', ')', '{', 'rtx', 'addr_reg', '=', 'stack_pointer_rtx', ';', 'if', '(', '!TARGET_M6812', ')', '{', 'emit_move_after_reload', '(', 'scratch', ',', 'stack_pointer_rtx', ',', '0', ')', ';', 'addr_reg', '=', 'scratch', ';', '}', 'emit_move_after_reload', '(', 'gen_rtx', '(', 'MEM', ',', 'HImode', ',', 'gen_rtx', '(', 'PLUS', ',', 'HImode', ',', 'addr_reg', ',', 'GEN_INT', '(', '1', ')', ')', ')', ',', 'd_reg', ',', '0', ')', ';', 'if', '(', 'return_size', '>', 'HARD_REG_SIZE', ')', 'emit_move_after_reload', '(', 'gen_rtx', '(', 'MEM', ',', 'HImode', ',', 'gen_rtx', '(', 'PLUS', ',', 'HImode', ',', 'addr_reg', ',', 'GEN_INT', '(', '3', ')', ')', ')', ',', 'ix_reg', ',', '0', ')', ';', '}', 'emit_jump_insn', '(', 'gen_return', '(', ')', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1486,"['camel_toupper', '(', 'gchar', 'c', ')', '{', 'if', '(', 'c', '>=', ""''"", '&&', 'c', '<=', ""''"", ')', 'c', '&=', '~0x20', ';', 'return', 'c', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1487,"['is_header_regex', '(', 'apr_pool_t', '*', 'p', ',', 'const', 'char', '*', 'name', ')', '{', '/', '*', 'If', 'a', 'Header', 'name', 'contains', 'characters', 'other', 'than', ':', '*', '-', ',', '_', ',', '[', 'A', '-', 'Z\\', ',', '[', 'a', '-', 'z', ']', 'and', '[', '0', '-', '9', ']', '.', '*', 'assume', 'the', 'header', 'name', 'is', 'a', 'regular', 'expression', '.', 'if', '(', 'ap_regexec', '(', 'is_header_regex_regex', ',', 'name', ',', '0', ',', 'NULL', ',', '0', ')', ')', '{', 'return', '1', ';', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1488,"['ipv6addrstruct_to_uncompaddrsuffix', '(', 'const', 'ipv6calc_ipv6addr', '*', 'ipv6addrp', ',', 'char', '*', 'resultstring', ',', 'const', 'uint32_t', 'formatoptions', ')', '{', 'int', 'retval', '=', '1', ';', 'unsigned', 'int', 'max', ',', 'i', ';', 'char', 'tempstring1', '[', 'NI_MAXHOST', ']', ',', 'tempstring2', '[', 'NI_MAXHOST', ']', ';', 'if', '(', '(', 'ipv6calc_debug', '&', 'DEBUG_libipv6addr', ')', '!=', '0', ')', '{', 'fprintf', '(', 'stderr', ',', '""""', ',', 'DEBUG_function_name', ')', ';', '}', ';', 'if', '(', '(', '(', 'ipv6addrp', '->', 'scope', '&', '(', 'IPV6_ADDR_COMPATv4', '|', 'IPV6_ADDR_MAPPED', ')', ')', '!=', '0', ')', '&&', '(', 'ipv6addrp', '->', 'prefixlength', '>', '96', ')', ')', '{', 'snprintf', '(', 'resultstring', ',', 'NI_MAXHOST', '-', '1', ',', '""""', ')', ';', 'retval', '=', '1', ';', 'return', '(', 'retval', ')', ';', '}', ';', 'if', '(', 'ipv6addrp', '->', 'prefixlength', '==', '128', ')', '{', 'snprintf', '(', 'resultstring', ',', 'NI_MAXHOST', '-', '1', ',', '""""', ')', ';', 'retval', '=', '1', ';', 'return', '(', 'retval', ')', ';', '}', ';', 'max', '=', '7', ';', 'i', '=', '(', 'unsigned', 'int', ')', 'ipv6addrp', '->', 'prefixlength', '/', '16u', ';', 'tempstring1', '[', '0', ']', '=', ""''"", ';', 'while', '(', 'i', '<=', 'max', ')', '{', 'if', '(', '(', '(', 'ipv6addrp', '->', 'scope', '&', '(', 'IPV6_ADDR_COMPATv4', '|', 'IPV6_ADDR_MAPPED', ')', ')', '!=', '0', ')', '&&', '(', 'i', '==', '6', ')', ')', '{', 'snprintf', '(', 'tempstring2', ',', 'sizeof', '(', 'tempstring2', ')', '-', '1', ',', '""""', ',', 'tempstring1', ',', '(', 'unsigned', 'int', ')', 'ipv6addrp', '->', 'in6_addr', '.', 's6_addr', '[', '12', ']', ',', '(', 'unsigned', 'int', ')', 'ipv6addrp', '->', 'in6_addr', '.', 's6_addr', '[', '13', ']', ',', '(', 'unsigned', 'int', ')', 'ipv6addrp', '->', 'in6_addr', '.', 's6_addr', '[', '14', ']', ',', '(', 'unsigned', 'int', ')', 'ipv6addrp', '->', 'in6_addr', '.', 's6_addr', '[', '15', ']', ')', ';', 'i', '=', 'max', ';', '}', 'else', 'if', '(', 'i', '<', 'max', ')', '{', 'if', '(', '(', 'formatoptions', '&', 'FORMATOPTION_printfulluncompressed', ')', '!=', '0', ')', '{', 'snprintf', '(', 'tempstring2', ',', 'sizeof', '(', 'tempstring2', ')', '-', '1', ',', '""""', ',', 'tempstring1', ',', '(', 'unsigned', 'int', ')', 'ipv6addr_getword', '(', 'ipv6addrp', ',', 'i', ')', ')', ';', '}', 'else', '{', 'snprintf', '(', 'tempstring2', ',', 'sizeof', '(', 'tempstring2', ')', '-', '1', ',', '""""', ',', 'tempstring1', ',', '(', 'unsigned', 'int', ')', 'ipv6addr_getword', '(', 'ipv6addrp', ',', 'i', ')', ')', ';', '}', ';', '}', 'else', '{', 'if', '(', '(', 'formatoptions', '&', 'FORMATOPTION_printfulluncompressed', ')', '!=', '0', ')', '{', 'snprintf', '(', 'tempstring2', ',', 'sizeof', '(', 'tempstring2', ')', '-', '1', ',', '""""', ',', 'tempstring1', ',', '(', 'unsigned', 'int', ')', 'ipv6addr_getword', '(', 'ipv6addrp', ',', 'i', ')', ')', ';', '}', 'else', '{', 'snprintf', '(', 'tempstring2', ',', 'sizeof', '(', 'tempstring2', ')', '-', '1', ',', '""""', ',', 'tempstring1', ',', '(', 'unsigned', 'int', ')', 'ipv6addr_getword', '(', 'ipv6addrp', ',', 'i', ')', ')', ';', '}', ';', '}', ';', 'i', '++', ';', 'snprintf', '(', 'tempstring1', ',', 'sizeof', '(', 'tempstring1', ')', '-', '1', ',', '""""', ',', 'tempstring2', ')', ';', '}', ';', 'snprintf', '(', 'resultstring', ',', 'NI_MAXHOST', '-', '1', ',', '""""', ',', 'tempstring1', ')', ';', 'if', '(', '(', 'ipv6calc_debug', '&', 'DEBUG_libipv6addr', ')', '!=', '0', ')', '{', 'fprintf', '(', 'stderr', ',', '""""', ',', 'DEBUG_function_name', ',', 'resultstring', ')', ';', '}', ';', 'retval', '=', '0', ';', 'return', '(', 'retval', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1489,"['init_patch_fill_state', '(', 'patch_fill_state_t', '*', 'pfs', ')', '{', 'const', 'gs_color_space', '*', 'pcs', '=', 'pfs', '->', 'direct_space', ';', 'gs_client_color', 'fcc0', ',', 'fcc1', ';', 'int', 'i', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'pfs', '->', 'num_components', ';', 'i', '++', ')', '{', 'fcc0', '.', 'paint', '.', 'values', '[', 'i', ']', '=', '-', '1000000', ';', 'fcc1', '.', 'paint', '.', 'values', '[', 'i', ']', '=', '1000000', ';', '}', 'pcs', '->', 'type', '->', 'restrict_color', '(', '&', 'fcc0', ',', 'pcs', ')', ';', 'pcs', '->', 'type', '->', 'restrict_color', '(', '&', 'fcc1', ',', 'pcs', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'pfs', '->', 'num_components', ';', 'i', '++', ')', 'pfs', '->', 'color_domain', '.', 'paint', '.', 'values', '[', 'i', ']', '=', 'max', '(', 'fcc1', '.', 'paint', '.', 'values', '[', 'i', ']', '-', 'fcc0', '.', 'paint', '.', 'values', '[', 'i', ']', ',', '1', ')', ';', 'pfs', '->', 'maybe_self_intersecting', '=', 'true', ';', 'pfs', '->', 'monotonic_color', '=', '(', 'pfs', '->', 'Function', '==', 'NULL', ')', ';', 'pfs', '->', 'function_arg_shift', '=', '0', ';', 'pfs', '->', 'linear_color', '=', 'false', ';', 'pfs', '->', 'inside', '=', 'false', ';', 'pfs', '->', 'n_color_args', '=', '1', ';', '#ifdef', 'pfs', '->', 'decomposition_limit', '=', 'float2fixed', '(', 'min', '(', 'pfs', '->', 'dev', '->', 'HWResolution', '[', '0', ']', ',', 'pfs', '->', 'dev', '->', 'HWResolution', '[', '1', ']', ')', '/', 'MAX_SHADING_RESOLUTION', ')', ';', 'pfs', '->', 'decomposition_limit', '=', 'max', '(', 'pfs', '->', 'decomposition_limit', ',', 'fixed_1', ')', ';', 'pfs', '->', 'decomposition_limit', '=', 'fixed_1', ';', 'pfs', '->', 'fixed_flat', '=', 'float2fixed', '(', 'pfs', '->', 'pis', '->', 'flatness', ')', ';', '/', '*', 'Restrict', 'the', 'pfs', '->', 'smoothness', 'with', '1', '/', 'min_linear_grades', ',', 'because', ""can't"", 'provide', 'a', 'better', 'precision', 'due', 'to', 'the', 'representation', 'with', 'integers', '.', 'pfs', '->', 'smoothness', '=', 'max', '(', 'pfs', '->', 'pis', '->', 'smoothness', ',', '1', '.', '0', '/', 'min_linear_grades', ')', ';', 'pfs', '->', 'color_stack_size', '=', '0', ';', 'pfs', '->', 'color_stack_step', '=', '0', ';', 'pfs', '->', 'color_stack_ptr', '=', 'NULL', ';', 'pfs', '->', 'color_stack', '=', 'NULL', ';', 'pfs', '->', 'color_stack_limit', '=', 'NULL', ';', 'pfs', '->', 'unlinear', '=', '!is_linear_color_applicable', '(', 'pfs', ')', ';', 'return', 'alloc_patch_fill_memory', '(', 'pfs', ',', 'pfs', '->', 'pis', '->', 'memory', ',', 'pcs', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1490,"['bnad_debugfs_open_fwsave', '(', 'struct', 'inode', '*', 'inode', ',', 'struct', 'file', '*', 'file', ')', '{', 'struct', 'bnad', '*', 'bnad', '=', 'inode', '->', 'i_private', ';', 'struct', 'bnad_debug_info', '*', 'fw_debug', ';', 'unsigned', 'long', 'flags', ';', 'int', 'rc', ';', 'fw_debug', '=', 'kzalloc', '(', 'sizeof', '(', 'struct', 'bnad_debug_info', ')', ',', 'GFP_KERNEL', ')', ';', 'if', '(', '!fw_debug', ')', 'return', '-', 'ENOMEM', ';', 'fw_debug', '->', 'buffer_len', '=', 'BNA_DBG_FWTRC_LEN', ';', 'fw_debug', '->', 'debug_buffer', '=', 'kzalloc', '(', 'fw_debug', '->', 'buffer_len', ',', 'GFP_KERNEL', ')', ';', 'if', '(', '!fw_debug', '->', 'debug_buffer', ')', '{', 'kfree', '(', 'fw_debug', ')', ';', 'fw_debug', '=', 'NULL', ';', 'return', '-', 'ENOMEM', ';', '}', 'spin_lock_irqsave', '(', '&', 'bnad', '->', 'bna_lock', ',', 'flags', ')', ';', 'rc', '=', 'bfa_nw_ioc_debug_fwsave', '(', '&', 'bnad', '->', 'bna', '.', 'ioceth', '.', 'ioc', ',', 'fw_debug', '->', 'debug_buffer', ',', '&', 'fw_debug', '->', 'buffer_len', ')', ';', 'spin_unlock_irqrestore', '(', '&', 'bnad', '->', 'bna_lock', ',', 'flags', ')', ';', 'if', '(', 'rc', '!=', 'BFA_STATUS_OK', '&&', 'rc', '!=', 'BFA_STATUS_ENOFSAVE', ')', '{', 'kfree', '(', 'fw_debug', '->', 'debug_buffer', ')', ';', 'fw_debug', '->', 'debug_buffer', '=', 'NULL', ';', 'kfree', '(', 'fw_debug', ')', ';', 'fw_debug', '=', 'NULL', ';', 'netdev_warn', '(', 'bnad', '->', 'netdev', ',', '""""', ')', ';', 'return', '-', 'ENOMEM', ';', '}', 'file', '->', 'private_data', '=', 'fw_debug', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1491,"['sdio_uart_update_mctrl', '(', 'struct', 'sdio_uart_port', '*', 'port', ',', 'unsigned', 'int', 'set', ',', 'unsigned', 'int', 'clear', ')', '{', 'unsigned', 'int', 'old', ';', 'old', '=', 'port', '->', 'mctrl', ';', 'port', '->', 'mctrl', '=', '(', 'old', '&', '~clear', ')', '|', 'set', ';', 'if', '(', 'old', '!=', 'port', '->', 'mctrl', ')', 'sdio_uart_write_mctrl', '(', 'port', ',', 'port', '->', 'mctrl', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1492,"['sm_put', '(', 'StrMap', '*', 'map', ',', 'const', 'char', '*', 'key', ',', 'const', 'char', '*', 'value', ')', '{', 'unsigned', 'int', 'key_len', ',', 'value_len', ',', 'index', ';', 'Bucket', '*', 'bucket', ';', 'Pair', '*', 'tmp_pairs', ',', '*', 'pair', ';', 'char', '*', 'tmp_value', ';', 'char', '*', 'new_key', ',', '*', 'new_value', ';', 'if', '(', 'map', '==', 'NULL', ')', '{', 'return', '0', ';', '}', 'if', '(', 'key', '==', 'NULL', '||', 'value', '==', 'NULL', ')', '{', 'return', '0', ';', '}', 'key_len', '=', 'strlen', '(', 'key', ')', ';', 'value_len', '=', 'strlen', '(', 'value', ')', ';', 'index', '=', 'hash', '(', 'key', ')', '%', 'map', '->', 'count', ';', 'bucket', '=', '&', '(', 'map', '->', 'buckets', '[', 'index', ']', ')', ';', '/', '*', 'Check', 'if', 'we', 'can', 'handle', 'insertion', 'by', 'simply', '*', 'an', 'existing', 'value', 'in', 'a', 'key', '-', 'value', 'pair', 'in', 'the', 'bucket', '.', 'if', '(', '(', 'pair', '=', 'get_pair', '(', 'bucket', ',', 'key', ')', ')', '!=', 'NULL', ')', '{', '/', '*', 'The', 'bucket', 'contains', 'a', 'pair', 'that', 'matches', 'the', 'provided', 'key', ',', '*', 'change', 'the', 'value', 'for', 'that', 'pair', 'to', 'the', 'new', 'value', '.', 'if', '(', 'strlen', '(', 'pair', '->', 'value', ')', '<', 'value_len', ')', '{', '/', '*', 'If', 'the', 'new', 'value', 'is', 'larger', 'than', 'the', 'old', 'value', ',', 're', '-', '*', 'space', 'for', 'the', 'new', 'larger', 'value', '.', 'tmp_value', '=', 'realloc', '(', 'pair', '->', 'value', ',', '(', 'value_len', '+', '1', ')', '*', 'sizeof', '(', 'char', ')', ')', ';', 'if', '(', 'tmp_value', '==', 'NULL', ')', '{', 'return', '0', ';', '}', 'pair', '->', 'value', '=', 'tmp_value', ';', '}', 'strcpy', '(', 'pair', '->', 'value', ',', 'value', ')', ';', 'return', '1', ';', '}', 'new_key', '=', 'malloc', '(', '(', 'key_len', '+', '1', ')', '*', 'sizeof', '(', 'char', ')', ')', ';', 'if', '(', 'new_key', '==', 'NULL', ')', '{', 'return', '0', ';', '}', 'new_value', '=', 'malloc', '(', '(', 'value_len', '+', '1', ')', '*', 'sizeof', '(', 'char', ')', ')', ';', 'if', '(', 'new_value', '==', 'NULL', ')', '{', 'free', '(', 'new_key', ')', ';', 'return', '0', ';', '}', 'if', '(', 'bucket', '->', 'count', '==', '0', ')', '{', '/', '*', 'The', 'bucket', 'is', 'empty', ',', 'lazily', 'allocate', 'space', 'for', 'a', '*', 'key', '-', 'value', 'pair', '.', 'bucket', '->', 'pairs', '=', 'malloc', '(', 'sizeof', '(', 'Pair', ')', ')', ';', 'if', '(', 'bucket', '->', 'pairs', '==', 'NULL', ')', '{', 'free', '(', 'new_key', ')', ';', 'free', '(', 'new_value', ')', ';', 'return', '0', ';', '}', 'bucket', '->', 'count', '=', '1', ';', '}', 'else', '{', '/', '*', 'The', 'bucket', ""wasn't"", 'empty', 'but', 'no', 'pair', 'existed', 'that', 'matches', 'the', '*', 'key', ',', 'so', 'create', 'a', 'new', 'key', '-', 'value', 'pair', '.', 'tmp_pairs', '=', 'realloc', '(', 'bucket', '->', 'pairs', ',', '(', 'bucket', '->', 'count', '+', '1', ')', '*', 'sizeof', '(', 'Pair', ')', ')', ';', 'if', '(', 'tmp_pairs', '==', 'NULL', ')', '{', 'free', '(', 'new_key', ')', ';', 'free', '(', 'new_value', ')', ';', 'return', '0', ';', '}', 'bucket', '->', 'pairs', '=', 'tmp_pairs', ';', 'bucket', '->', 'count', '++', ';', '}', 'pair', '=', '&', '(', 'bucket', '->', 'pairs', '[', 'bucket', '->', 'count', '-', '1', ']', ')', ';', 'pair', '->', 'key', '=', 'new_key', ';', 'pair', '->', 'value', '=', 'new_value', ';', 'strcpy', '(', 'pair', '->', 'key', ',', 'key', ')', ';', 'strcpy', '(', 'pair', '->', 'value', ',', 'value', ')', ';', 'return', '1', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1493,"['liblo10k1_debug', '(', 'liblo10k1_connection_t', '*', 'conn', ',', 'int', 'deb', ',', 'void', '(', '*', 'prn_fnc', ')', '(', 'char', '*', ')', ')', '{', 'int', 'err', ';', 'ld10k1_fnc_debug_t', 'debug_info', ';', 'char', 'debug_line', '[', '1000', ']', ';', 'int', 'opr', ',', 'sizer', ';', 'debug_info', '.', 'what', '=', 'deb', ';', 'if', '(', '(', 'err', '=', 'send_request', '(', '*', 'conn', ',', 'FNC_DEBUG', ',', '&', 'debug_info', ',', 'sizeof', '(', 'ld10k1_fnc_debug_t', ')', ')', ')', '<', '0', ')', 'return', 'err', ';', 'while', '(', '1', ')', '{', 'if', '(', '(', 'err', '=', 'receive_response', '(', '*', 'conn', ',', '&', 'opr', ',', '&', 'sizer', ')', ')', '<', '0', ')', 'return', 'err', ';', 'if', '(', 'opr', '!=', 'FNC_CONTINUE', ')', 'break', ';', 'if', '(', 'sizer', '<', '(', 'int', ')', 'sizeof', '(', 'debug_line', ')', ')', '{', 'if', '(', '(', 'err', '=', 'receive_msg_data', '(', '*', 'conn', ',', '&', 'debug_line', ',', 'sizer', ')', ')', '<', '0', ')', 'return', 'err', ';', '}', 'return', 'LIBLO10K1_ERR_DEBUG', ';', '(', '*', 'prn_fnc', ')', '(', 'debug_line', ')', ';', '}', 'return', 'receive_response', '(', '*', 'conn', ',', '&', 'opr', ',', '&', 'sizer', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1494,"['proc_kcore_init_64', '(', 'FILE', '*', 'fp', ')', '{', 'Elf64_Ehdr', '*', 'elf64', ';', 'Elf64_Phdr', '*', 'load64', ';', 'char', 'eheader', '[', 'MAX_KCORE_ELF_HEADER_SIZE', ']', ';', 'char', 'buf', '[', 'BUFSIZE', ']', ';', 'size_t', 'size', ';', 'size', '=', 'MAX_KCORE_ELF_HEADER_SIZE', ';', 'if', '(', 'read', '(', 'pc', '->', 'mfd', ',', 'eheader', ',', 'size', ')', '!=', 'size', ')', '{', 'sprintf', '(', 'buf', ',', '""""', ')', ';', 'perror', '(', 'buf', ')', ';', 'goto', 'bailout', ';', '}', 'if', '(', 'lseek', '(', 'pc', '->', 'mfd', ',', '0', ',', 'SEEK_SET', ')', '!=', '0', ')', '{', 'sprintf', '(', 'buf', ',', '""""', ')', ';', 'perror', '(', 'buf', ')', ';', 'goto', 'bailout', ';', '}', 'elf64', '=', '(', 'Elf64_Ehdr', '*', ')', '&', 'eheader', '[', '0', ']', ';', 'load64', '=', '(', 'Elf64_Phdr', '*', ')', '&', 'eheader', '[', 'sizeof', '(', 'Elf64_Ehdr', ')', '+', 'sizeof', '(', 'Elf64_Phdr', ')', ']', ';', 'pkd', '->', 'segments', '=', 'elf64', '->', 'e_phnum', '-', '1', ';', 'size', '=', '(', 'ulong', ')', '(', 'load64', '+', '(', 'elf64', '->', 'e_phnum', ')', ')', '-', '(', 'ulong', ')', 'elf64', ';', 'if', '(', '(', 'pkd', '->', 'elf_header', '=', '(', 'char', '*', ')', 'malloc', '(', 'size', ')', ')', '==', 'NULL', ')', '{', 'error', '(', 'INFO', ',', '""""', ')', ';', 'clean_exit', '(', '1', ')', ';', '}', 'BCOPY', '(', '&', 'eheader', '[', '0', ']', ',', '&', 'pkd', '->', 'elf_header', '[', '0', ']', ',', 'size', ')', ';', 'pkd', '->', 'elf64', '=', '(', 'Elf64_Ehdr', '*', ')', 'pkd', '->', 'elf_header', ';', 'pkd', '->', 'load64', '=', '(', 'Elf64_Phdr', '*', ')', '&', 'pkd', '->', 'elf_header', '[', 'sizeof', '(', 'Elf64_Ehdr', ')', '+', 'sizeof', '(', 'Elf64_Phdr', ')', ']', ';', 'pkd', '->', 'flags', '|=', 'KCORE_ELF64', ';', 'if', '(', 'CRASHDEBUG', '(', '1', ')', ')', 'kcore_memory_dump', '(', 'fp', ')', ';', 'return', 'TRUE', ';', 'bailout', ':', 'return', 'FALSE', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1495,"['GetNextFeature', '(', ')', '{', 'if', '(', 'bWriteMode', ')', '{', 'CPLError', '(', 'CE_Failure', ',', 'CPLE_NotSupported', ',', '""""', ')', ';', 'return', 'NULL', ';', '}', 'if', '(', 'fpGPX', '==', 'NULL', ')', 'return', 'NULL', ';', 'if', '(', 'bStopParsing', ')', 'return', 'NULL', ';', '#ifdef', 'if', '(', 'nFeatureTabIndex', '<', 'nFeatureTabLength', ')', '{', 'return', 'ppoFeatureTab', '[', 'nFeatureTabIndex', '++', ']', ';', '}', 'if', '(', 'VSIFEofL', '(', 'fpGPX', ')', ')', 'return', 'NULL', ';', 'char', 'aBuf', '[', 'BUFSIZ', ']', ';', 'CPLFree', '(', 'ppoFeatureTab', ')', ';', 'ppoFeatureTab', '=', 'NULL', ';', 'nFeatureTabLength', '=', '0', ';', 'nFeatureTabIndex', '=', '0', ';', 'nWithoutEventCounter', '=', '0', ';', 'int', 'nDone', ';', '{', 'nDataHandlerCounter', '=', '0', ';', 'unsigned', 'int', 'nLen', '=', '(', 'unsigned', 'int', ')', 'VSIFReadL', '(', 'aBuf', ',', '1', ',', 'sizeof', '(', 'aBuf', ')', ',', 'fpGPX', ')', ';', 'nDone', '=', 'VSIFEofL', '(', 'fpGPX', ')', ';', 'if', '(', 'XML_Parse', '(', 'oParser', ',', 'aBuf', ',', 'nLen', ',', 'nDone', ')', '==', 'XML_STATUS_ERROR', ')', '{', 'CPLError', '(', 'CE_Failure', ',', 'CPLE_AppDefined', ',', '""""', ',', 'XML_ErrorString', '(', 'XML_GetErrorCode', '(', 'oParser', ')', ')', ',', '(', 'int', ')', 'XML_GetCurrentLineNumber', '(', 'oParser', ')', ',', '(', 'int', ')', 'XML_GetCurrentColumnNumber', '(', 'oParser', ')', ')', ';', 'bStopParsing', '=', 'TRUE', ';', 'break', ';', '}', 'nWithoutEventCounter', '++', ';', '}', 'while', '(', '!nDone', '&&', 'nFeatureTabLength', '==', '0', '&&', '!bStopParsing', '&&', 'nWithoutEventCounter', '<', '10', ')', ';', 'if', '(', 'nWithoutEventCounter', '==', '10', ')', '{', 'CPLError', '(', 'CE_Failure', ',', 'CPLE_AppDefined', ',', '""""', ')', ';', 'bStopParsing', '=', 'TRUE', ';', '}', 'return', '(', 'nFeatureTabLength', ')', '?', 'ppoFeatureTab', '[', 'nFeatureTabIndex', '++', ']', ':', 'NULL', ';', 'return', 'NULL', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1496,"['createCurvedPlane', '(', 'const', 'String', '&', 'name', ',', 'const', 'String', '&', 'groupName', ',', 'const', 'Plane', '&', 'plane', ',', 'Real', 'width', ',', 'Real', 'height', ',', 'Real', 'bow', ',', 'int', 'xsegments', ',', 'int', 'ysegments', ',', 'bool', 'normals', ',', 'unsigned', 'short', 'numTexCoordSets', ',', 'Real', 'xTile', ',', 'Real', 'yTile', ',', 'const', 'Vector3', '&', 'upVector', ',', 'HardwareBuffer', ':', ':', 'Usage', 'vertexBufferUsage', ',', 'HardwareBuffer', ':', ':', 'Usage', 'indexBufferUsage', ',', 'bool', 'vertexShadowBuffer', ',', 'bool', 'indexShadowBuffer', ')', '{', '/', '/', 'Create', 'manual', 'mesh', 'which', 'calls', 'back', 'self', 'to', 'MeshPtr', 'pMesh', '=', 'createManual', '(', 'name', ',', 'groupName', ',', 'this', ')', ';', '/', '/', 'Planes', 'can', 'never', 'be', 'pMesh', '->', 'setAutoBuildEdgeLists', '(', 'false', ')', ';', '/', '/', 'store', 'MeshBuildParams', 'params', ';', 'params', '.', 'type', '=', 'MBT_CURVED_PLANE', ';', 'params', '.', 'plane', '=', 'plane', ';', 'params', '.', 'width', '=', 'width', ';', 'params', '.', 'height', '=', 'height', ';', 'params', '.', 'curvature', '=', 'bow', ';', 'params', '.', 'xsegments', '=', 'xsegments', ';', 'params', '.', 'ysegments', '=', 'ysegments', ';', 'params', '.', 'normals', '=', 'normals', ';', 'params', '.', 'numTexCoordSets', '=', 'numTexCoordSets', ';', 'params', '.', 'xTile', '=', 'xTile', ';', 'params', '.', 'yTile', '=', 'yTile', ';', 'params', '.', 'upVector', '=', 'upVector', ';', 'params', '.', 'vertexBufferUsage', '=', 'vertexBufferUsage', ';', 'params', '.', 'indexBufferUsage', '=', 'indexBufferUsage', ';', 'params', '.', 'vertexShadowBuffer', '=', 'vertexShadowBuffer', ';', 'params', '.', 'indexShadowBuffer', '=', 'indexShadowBuffer', ';', 'mMeshBuildParams', '[', 'pMesh', '.', 'getPointer', '(', ')', ']', '=', 'params', ';', '/', '/', 'to', 'preserve', 'previous', 'behaviour', ',', 'load', 'pMesh', '->', 'load', '(', ')', ';', 'return', 'pMesh', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1497,"['handle_reply', '(', 'int', 'http_op_retval', ')', '{', 'char', 'filename', '[', '256', ']', ';', 'int', 'nitems', ';', 'if', '(', '!rfp', ')', 'return', ';', '/', '/', 'op', 'was', 'if', '(', 'http_op_retval', ')', '{', 'if', '(', 'log_flags', '.', 'notice_debug', ')', '{', 'msg_printf', '(', '0', ',', 'MSG_INFO', ',', '""""', ',', 'rfp', '->', 'url', ',', ')', ';', '}', 'return', ';', '}', 'if', '(', 'log_flags', '.', 'notice_debug', ')', '{', 'msg_printf', '(', '0', ',', 'MSG_INFO', ',', '""""', ',', 'rfp', '->', ')', ';', '}', 'rfp', '->', 'feed_file_name', '(', 'filename', ')', ';', 'FILE', '*', 'f', '=', 'fopen', '(', 'filename', ',', '""""', ')', ';', 'if', '(', '!f', ')', '{', 'msg_printf', '(', '0', ',', 'MSG_INTERNAL_ERROR', ',', '""""', ',', ')', ';', 'return', ';', '}', 'MIOFILE', 'fin', ';', 'fin', '.', 'init_file', '(', 'f', ')', ';', 'XML_PARSER', 'xp', '(', '&', 'fin', ')', ';', 'int', 'retval', '=', 'rfp', '->', 'parse_items', '(', 'xp', ',', 'nitems', ')', ';', 'if', '(', 'retval', ')', '{', 'if', '(', 'log_flags', '.', 'notice_debug', ')', '{', 'msg_printf', '(', '0', ',', 'MSG_INFO', ',', '""""', ',', ')', ';', '}', '}', 'fclose', '(', 'f', ')', ';', 'notices', '.', 'write_archive', '(', 'rfp', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1498,"['node_is_authentic', '(', 'const', 'char', '*', 'vendor', ',', 'const', 'header_t', '*', 'head', ')', '{', 'if', '(', 'vendor', ')', '{', 'if', '(', 'is_strcaseprefix', '(', 'vendor', ',', '""""', ')', ')', '{', 'return', '!header_get', '(', 'head', ',', '""""', ')', '&&', 'header_get', '(', 'head', ',', '""""', ')', '&&', 'header_get', '(', 'head', ',', '""""', ')', '&&', 'header_get', '(', 'head', ',', '""""', ')', ';', '}', '}', 'return', 'TRUE', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1499,"['dvr_add_pcb', '(', 'struct', 'adapter_s', '*', 'a', ',', 'unsigned', 'int', 'pid', ',', 'unsigned', 'int', 'type', ',', 'unsigned', 'int', 'pidt', ',', 'void', '(', '*', 'callback', ')', '(', 'void', '*', 'data', ',', 'void', '*', 'arg', ')', ',', 'void', '*', 'arg', ')', '{', 'struct', 'pidcallback_s\t', '*', 'pcb', ';', 'logwrite', '(', 'LOG_DEBUG', ',', '""""', ',', '(', '(', 'type', '==', 'DVRCB_TS', ')', '?', '""""', ':', '""""', ')', ',', 'pid', ',', 'pid', ',', 'pidt', ',', 'pidtnames', '[', 'pidt', ']', ')', ';', 'pcb', '=', 'malloc', '(', 'sizeof', '(', 'struct', 'pidcallback_s', ')', ')', ';', 'pcb', '->', 'pid', '=', 'pid', ';', 'pcb', '->', 'callback', '=', 'callback', ';', 'pcb', '->', 'arg', '=', 'arg', ';', 'pcb', '->', 'pidt', '=', 'pidt', ';', 'pcb', '->', 'type', '=', 'type', ';', 'if', '(', 'pid', '==', 'PID_MAX', '+', '1', ')', '{', 'a', '->', 'dvr', '.', 'fullcb', '=', 'g_list_append', '(', 'a', '->', 'dvr', '.', 'fullcb', ',', 'pcb', ')', ';', 'return', 'pcb', ';', '}', 'if', '(', 'type', '==', 'DVRCB_SECTION', ')', '{', 'a', '->', 'dvr', '.', 'pidtable', '[', 'pid', ']', '.', 'secuser', '++', ';', 'if', '(', '!a', '->', 'dvr', '.', 'pidtable', '[', 'pid', ']', '.', 'section', ')', 'a', '->', 'dvr', '.', 'pidtable', '[', 'pid', ']', '.', 'section', '=', 'psi_section_new', '(', ')', ';', '}', 'if', '(', '!a', '->', 'dvr', '.', 'pidtable', '[', 'pid', ']', '.', 'callback', ')', 'dmx_join_pid', '(', 'a', ',', 'pid', ',', 'DMX_PES_OTHER', ')', ';', 'a', '->', 'dvr', '.', 'pidtable', '[', 'pid', ']', '.', 'callback', '=', 'g_list_append', '(', 'a', '->', 'dvr', '.', 'pidtable', '[', 'pid', ']', '.', 'callback', ',', 'pcb', ')', ';', 'return', 'pcb', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1500,"['__ieee754_sinhl', '(', 'long', 'double', 'x', ')', '{', 'long', 'double', 't', ',', 'w', ',', 'h', ';', 'u_int32_t', 'jx', ',', 'ix', ',', 'i0', ',', 'i1', ';', 'GET_LDOUBLE_WORDS', '(', 'jx', ',', 'i0', ',', 'i1', ',', 'x', ')', ';', 'ix', '=', 'jx', '&', '0x7fff', ';', 'if', '(', '__builtin_expect', '(', 'ix', '==', '0x7fff', ',', '0', ')', ')', 'return', 'x', '+', 'x', ';', 'h', '=', '0', '.', '5', ';', 'if', '(', 'jx', '&', '0x8000', ')', 'h', '=', '-', 'h', ';', 't', '=', '__expm1l', '(', 'fabsl', '(', 'x', ')', ')', ';', 'if', '(', 'ix', '<', '0x3fff', ')', 'return', 'h', '*', '(', '2', '.', '0', '*', 't', '-', 't', '*', 't', '/', '(', 't', '+', 'one', ')', ')', ';', 'return', 'h', '*', '(', 't', '+', 't', '/', '(', 't', '+', 'one', ')', ')', ';', '}', 'if', '(', 'ix', '<', '0x400c', '||', '(', 'ix', '==', '0x400c', '&&', 'i0', '<', '0xb17217f7', ')', ')', 'return', 'h', '*', '__ieee754_expl', '(', 'fabsl', '(', 'x', ')', ')', ';', 'if', '(', 'ix', '<', '0x400c', '||', '(', 'ix', '==', '0x400c', '&&', '(', 'i0', '<', '||', '(', 'i0', '==', '&&', 'i1', '<=', '0x31aec0ea', ')', ')', ')', ')', '{', 'w', '=', '__ieee754_expl', '(', '0', '.', '5', '*', 'fabsl', '(', 'x', ')', ')', ';', 't', '=', 'h', '*', 'w', ';', 'return', 't', '*', 'w', ';', '}', 'return', 'x', '*', 'shuge', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1501,"['mpz_poly_fread', '(', 'mpz_poly_t', 'poly', ',', 'FILE', '*', 'f', ')', '{', '/', '/', 'read', 'poly', 'unsigned', 'long', 'length', ';', 'if', '(', '!fscanf', '(', 'f', ',', '""""', ',', '&', 'length', ')', ')', 'return', '0', ';', 'poly', '->', 'length', '=', '0', ';', 'mpz_poly_ensure_alloc', '(', 'poly', ',', 'length', ')', ';', '/', '/', 'read', 'for', '(', 'unsigned', 'long', 'i', '=', '0', ';', 'i', '<', 'length', ';', 'i', '++', ')', '{', 'if', '(', '!mpz_inp_str', '(', 'poly', '->', 'coeffs', '[', 'i', ']', ',', 'f', ',', '10', ')', ')', 'return', '0', ';', 'poly', '->', 'length', '++', ';', '}', 'mpz_poly_normalise', '(', 'poly', ')', ';', 'return', '1', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1502,"['get_mutable_buffer', '(', 'char_t', '*', '&', 'out_buffer', ',', 'size_t', '&', 'out_length', ',', 'const', 'void', '*', 'contents', ',', 'size_t', 'size', ',', 'bool', 'is_mutable', ')', '{', 'size_t', 'length', '=', 'size', '/', 'sizeof', '(', 'char_t', ')', ';', 'if', '(', 'is_mutable', ')', '{', 'out_buffer', '=', 'static_cast', '<', 'char_t', '*', '>', '(', 'const_cast', '<', 'void', '*', '>', '(', 'contents', ')', ')', ';', 'out_length', '=', 'length', ';', '}', '{', 'char_t', '*', 'buffer', '=', 'static_cast', '<', 'char_t', '*', '>', '(', 'xml_memory', ':', ':', 'allocate', '(', '(', 'length', '+', '1', ')', '*', 'sizeof', '(', 'char_t', ')', ')', ')', ';', 'if', '(', '!buffer', ')', 'return', 'false', ';', 'memcpy', '(', 'buffer', ',', 'contents', ',', 'length', '*', 'sizeof', '(', 'char_t', ')', ')', ';', 'buffer', '[', 'length', ']', '=', '0', ';', 'out_buffer', '=', 'buffer', ';', 'out_length', '=', 'length', '+', '1', ';', '}', 'return', 'true', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1503,"['ITR_indexTT', '(', 'tkitr_t', '*', 'itr', ',', 'kterm_t', 'tt', ',', 'int', 'def', ')', '{', 'int', 'i', ';', 'for', '(', 'i', '=', 'itr', '->', 'c', ';', 'i', '<', 'itr', '->', 'e', ';', 'i', '++', ')', '{', 'if', '(', 'TT_', '(', 'itr', '->', 'ts', '[', 'i', ']', ')', '==', 'tt', ')', 'return', 'i', ';', '}', 'return', 'def', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1504,"['data', '(', 'Type', 't', ')', '{', 'ByteVector', 'v', ';', 'switch', '(', 't', ')', '{', 'case', 'Latin1', ':', '{', 'for', '(', 'wstring', ':', ':', 'const_iterator', 'it', '=', 'd', '->', 'data', '.', 'begin', '(', ')', ';', 'it', '!=', 'd', '->', 'data', '.', 'end', '(', ')', ';', 'it', '++', ')', 'v', '.', 'append', '(', 'char', '(', '*', 'it', ')', ')', ';', 'break', ';', '}', 'case', 'UTF8', ':', '{', 'std', ':', ':', 'string', 's', '=', 'to8Bit', '(', 'true', ')', ';', 'v', '.', 'setData', '(', 's', '.', 'c_str', '(', ')', ',', 's', '.', 'length', '(', ')', ')', ';', 'break', ';', '}', 'case', 'UTF16', ':', '{', '/', '/', 'Assume', 'that', 'if', ""we're"", 'doing', 'UTF16', 'and', 'not', 'UTF16BE', 'that', 'we', 'want', '/', '/', 'endian', 'encoding', '.', '(', 'Byte', 'Order', 'Mark', ')', 'v', '.', 'append', '(', 'char', '(', '0xff', ')', ')', ';', 'v', '.', 'append', '(', 'char', '(', '0xfe', ')', ')', ';', 'for', '(', 'wstring', ':', ':', 'const_iterator', 'it', '=', 'd', '->', 'data', '.', 'begin', '(', ')', ';', 'it', '!=', 'd', '->', 'data', '.', 'end', '(', ')', ';', 'it', '++', ')', '{', 'char', 'c1', '=', '*', 'it', '&', '0xff', ';', 'char', 'c2', '=', '*', 'it', '>>', '8', ';', 'v', '.', 'append', '(', 'c1', ')', ';', 'v', '.', 'append', '(', 'c2', ')', ';', '}', 'break', ';', '}', 'case', 'UTF16BE', ':', '{', 'for', '(', 'wstring', ':', ':', 'const_iterator', 'it', '=', 'd', '->', 'data', '.', 'begin', '(', ')', ';', 'it', '!=', 'd', '->', 'data', '.', 'end', '(', ')', ';', 'it', '++', ')', '{', 'char', 'c1', '=', '*', 'it', '>>', '8', ';', 'char', 'c2', '=', '*', 'it', '&', '0xff', ';', 'v', '.', 'append', '(', 'c1', ')', ';', 'v', '.', 'append', '(', 'c2', ')', ';', '}', 'break', ';', '}', 'case', 'UTF16LE', ':', '{', 'for', '(', 'wstring', ':', ':', 'const_iterator', 'it', '=', 'd', '->', 'data', '.', 'begin', '(', ')', ';', 'it', '!=', 'd', '->', 'data', '.', 'end', '(', ')', ';', 'it', '++', ')', '{', 'char', 'c1', '=', '*', 'it', '&', '0xff', ';', 'char', 'c2', '=', '*', 'it', '>>', '8', ';', 'v', '.', 'append', '(', 'c1', ')', ';', 'v', '.', 'append', '(', 'c2', ')', ';', '}', 'break', ';', '}', '}', 'return', 'v', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1505,"['extract_hostnames', '(', 'struct', 'remote', '*', 'rp', ',', 'GtkWidget', '*', 'hwig', ',', 'GtkWidget', '*', 'awig', ')', '{', 'const', 'gchar', '*', 'h', '=', 'gtk_entry_get_text', '(', 'GTK_ENTRY', '(', 'hwig', ')', ')', ';', 'const', 'gchar', '*', 'a', '=', 'gtk_entry_get_text', '(', 'GTK_ENTRY', '(', 'awig', ')', ')', ';', 'netid_t', 'resip', ';', 'enum', 'IPatype', 'htype', ';', 'if', '(', 'strlen', '(', 'h', ')', '>=', 'HOSTNSIZE', ')', '{', 'doerror', '(', 'toplevel', ',', '""""', ',', 'h', ')', ';', 'return', '0', ';', '}', 'if', '(', 'strlen', '(', 'a', ')', '>=', 'HOSTNSIZE', ')', '{', 'doerror', '(', 'toplevel', ',', '""""', ',', 'a', ')', ';', 'return', '0', ';', '}', 'htype', '=', 'validhostname', '(', 'h', ',', '&', 'resip', ')', ';', 'if', '(', 'htype', '==', 'NO_IPADDR', ')', 'return', '0', ';', 'if', '(', 'htype', '==', 'IPADDR_IP', ')', '{', 'char\t', '*', 'c', ';', 'if', '(', 'strlen', '(', 'a', ')', '==', '0', ')', '{', 'doerror', '(', 'toplevel', ',', '""""', ',', 'h', ')', ';', 'return', '0', ';', '}', 'if', '(', 'hnameclashes', '(', 'a', ')', '&&', 'strcmp', '(', 'a', ',', 'rp', '->', 'alias', ')', '!=', '0', ')', '{', 'doerror', '(', 'toplevel', ',', '""""', ',', 'a', ')', ';', 'return', '0', ';', '}', 'c', '=', 'ipclashes', '(', 'resip', ')', ';', 'if', '(', 'c', '&&', 'resip', '!=', 'rp', '->', 'hostid', ')', '{', 'doerror', '(', 'toplevel', ',', '""""', ',', 'c', ')', ';', 'return', '0', ';', '}', 'rp', '->', 'hostid', '=', 'resip', ';', 'rp', '->', 'ht_flags', '=', 'HT_HOSTISIP', ';', '}', 'else', '{', 'char\t', '*', 'c', ';', 'if', '(', 'hnameclashes', '(', 'h', ')', '&&', 'strcmp', '(', 'h', ',', 'rp', '->', 'hostname', ')', '!=', '0', ')', '{', 'doerror', '(', 'toplevel', ',', '""""', ',', 'h', ')', ';', 'return', '0', ';', '}', 'c', '=', 'ipclashes', '(', 'resip', ')', ';', 'if', '(', 'c', '&&', 'resip', '!=', 'rp', '->', 'hostid', ')', '{', 'doerror', '(', 'toplevel', ',', '""""', ',', 'c', ')', ';', 'return', '0', ';', '}', 'if', '(', 'strlen', '(', 'a', ')', '!=', '0', '&&', 'hnameclashes', '(', 'a', ')', '&&', 'strcmp', '(', 'a', ',', 'rp', '->', 'alias', ')', '!=', '0', ')', '{', 'doerror', '(', 'toplevel', ',', '""""', ',', 'a', ')', ';', 'return', '0', ';', '}', 'rp', '->', 'ht_flags', '=', '0', ';', 'rp', '->', 'hostid', '=', 'resip', ';', '}', 'strncpy', '(', 'rp', '->', 'hostname', ',', 'h', ',', 'HOSTNSIZE', '-', '1', ')', ';', 'strncpy', '(', 'rp', '->', 'alias', ',', 'a', ',', 'HOSTNSIZE', '-', '1', ')', ';', 'return', '1', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1506,"['globus_l_gram_audit_write_timestamp', '(', 'FILE', '*', 'f', ',', 'time_t', 'when', ',', 'const', 'char', '*', 'delim', ')', '{', 'int', 'rc', ';', 'char', '*', 't', ';', 'char', '*', 'tmp', ';', 'struct', 'tm', 'tmv', ';', 'struct', 'tm', '*', 'tm_p', ';', '#ifndef', 'char', 'tbuf', '[', '26', ']', ';', 'if', '(', 'when', '==', '0', ')', '{', 'rc', '=', 'fprintf', '(', 'f', ',', '""""NULL\\""""', ',', 'delim', ')', ';', 'return', 'rc', '>=', '0', '?', 'GLOBUS_SUCCESS', ':', 'GLOBUS_GRAM_PROTOCOL_ERROR_NO_RESOURCES', ';', '}', 'tm_p', '=', 'globus_libc_gmtime_r', '(', '&', 'when', ',', '&', 'tmv', ')', ';', 'if', '(', 'tm_p', '==', 'NULL', ')', '{', 'return', 'GLOBUS_GRAM_PROTOCOL_ERROR_NO_RESOURCES', ';', '}', 't', '=', 'asctime_r', '(', 'tm_p', ',', 'tbuf', ')', ';', 'if', '(', 't', '==', 'NULL', ')', '{', 'return', 'GLOBUS_GRAM_PROTOCOL_ERROR_NO_RESOURCES', ';', '}', 'tmp', '=', 'strchr', '(', 't', ',', ""''"", ')', ';', 'if', '(', 'tmp', ')', '{', '*', 'tmp', '=', ""''"", ';', '}', 'tmp', '=', 'strrchr', '(', 't', ',', ""''"", ')', ';', '*', 'tmp', '=', ""''"", ';', 'rc', '=', 'fprintf', '(', 'f', ',', '""""', '%', 's', 'UTC', '%', 's\\""""', ',', 't', ',', 'tmp', '+', '1', ',', 'delim', ')', ';', 'return', 'rc', '>=', '0', '?', 'GLOBUS_SUCCESS', ':', 'GLOBUS_GRAM_PROTOCOL_ERROR_NO_RESOURCES', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1507,"['bilinear_magnify_make_weights', '(', 'PixopsFilterDimension', '*', 'dim', ',', 'double', 'scale', ')', '{', 'double', '*', 'pixel_weights', ';', 'int', 'n', ';', 'int', 'offset', ';', 'int', 'i', ';', '{', 'n', '=', '2', ';', 'dim', '->', 'offset', '=', '0', '.', '5', '*', '(', '1', '/', 'scale', '-', '1', ')', ';', '}', '{', 'n', '=', 'ceil', '(', '1', '.', '0', '+', '1', '.', '0', '/', 'scale', ')', ';', 'dim', '->', 'offset', '=', '0', '.', '0', ';', '}', 'dim', '->', 'n', '=', 'n', ';', 'dim', '->', 'weights', '=', 'g_try_malloc_n', '(', 'sizeof', '(', 'double', ')', '*', 'SUBSAMPLE', ',', 'n', ')', ';', 'if', '(', 'dim', '->', 'weights', '==', 'NULL', ')', 'return', 'FALSE', ';', 'pixel_weights', '=', 'dim', '->', 'weights', ';', 'for', '(', 'offset', '=', '0', ';', 'offset', '<', 'SUBSAMPLE', ';', 'offset', '++', ')', '{', 'double', 'x', '=', '(', 'double', ')', 'offset', '/', 'SUBSAMPLE', ';', '{', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'n', ';', 'i', '++', ')', '*', '(', 'pixel_weights', '++', ')', '=', '(', '(', '(', 'i', '==', '0', ')', '?', '(', '1', '-', 'x', ')', ':', 'x', ')', '/', 'scale', ')', '*', 'scale', ';', '}', '{', 'double', 'a', '=', 'x', '+', '1', '/', 'scale', ';', '/', '*', '*', '--', '--', '--', '--', '-', '|', '--', '.', '-', '|', '--', '--', '|', '--', '.', '-', '|', '--', '--', '--', '-', '*', '--', '--', '--', '--', '--', '--', '|', '--', '--', '--', '--', '-', '|', '--', '--', '--', '--', '-', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'n', ';', 'i', '++', ')', '{', 'if', '(', 'i', '<', 'x', ')', '{', 'if', '(', 'i', '+', '1', '>', 'x', ')', '*', '(', 'pixel_weights', '++', ')', '=', '(', 'MIN', '(', 'i', '+', '1', ',', 'a', ')', '-', 'x', ')', '*', 'scale', ';', '*', '(', 'pixel_weights', '++', ')', '=', '0', ';', '}', '{', 'if', '(', 'a', '>', 'i', ')', '*', '(', 'pixel_weights', '++', ')', '=', '(', 'MIN', '(', 'i', '+', '1', ',', 'a', ')', '-', 'i', ')', '*', 'scale', ';', '*', '(', 'pixel_weights', '++', ')', '=', '0', ';', '}', '}', '}', '}', 'return', 'TRUE', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1508,"['is_cardinal_tileset_dir', '(', 'const', 'struct', 'tileset', '*', 't', ',', 'enum', 'direction8', 'dir', ')', '{', 'if', '(', 't', '->', 'hex_width', '>', '0', '||', 't', '->', 'hex_height', '>', '0', ')', '{', 'return', 'is_valid_tileset_dir', '(', 't', ',', 'dir', ')', ';', '}', 'else', '{', 'return', '(', 'dir', '==', 'DIR8_NORTH', '||', 'dir', '==', '||', 'dir', '==', 'DIR8_SOUTH', '||', 'dir', '==', 'DIR8_WEST', ')', ';', '}', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1509,"['gst_tag_list_add_valist_values', '(', 'GstTagList', '*', 'list', ',', 'GstTagMergeMode', 'mode', ',', 'const', 'gchar', '*', 'tag', ',', 'va_list', 'var_args', ')', '{', 'g_return_if_fail', '(', 'GST_IS_TAG_LIST', '(', 'list', ')', ')', ';', 'g_return_if_fail', '(', 'gst_tag_list_is_writable', '(', 'list', ')', ')', ';', 'g_return_if_fail', '(', 'GST_TAG_MODE_IS_VALID', '(', 'mode', ')', ')', ';', 'g_return_if_fail', '(', 'tag', '!=', 'NULL', ')', ';', 'if', '(', 'mode', '==', 'GST_TAG_MERGE_REPLACE_ALL', ')', '{', 'gst_structure_remove_all_fields', '(', 'GST_TAG_LIST_STRUCTURE', '(', 'list', ')', ')', ';', '}', 'while', '(', 'tag', '!=', 'NULL', ')', '{', 'GstTagInfo', '*', 'info', ';', 'info', '=', 'gst_tag_lookup', '(', 'tag', ')', ';', 'if', '(', 'G_UNLIKELY', '(', 'info', '==', 'NULL', ')', ')', '{', 'g_warning', '(', '""""', ',', 'tag', ')', ';', 'return', ';', '}', 'gst_tag_list_add_value_internal', '(', 'list', ',', 'mode', ',', 'tag', ',', 'va_arg', '(', 'var_args', ',', 'GValue', '*', ')', ',', 'info', ')', ';', 'tag', '=', 'va_arg', '(', 'var_args', ',', 'gchar', '*', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1510,"['Cpdt', '(', 'Task', '*', 'task', ')', '{', 'task', '->', 'clock', '=', '0', '.', '0', ';', 'ReadytaskChk_for_Dt', '(', 'task', ')', ';', 'comp_cand_tasks', '(', 'task', ')', ';', 'comp_cand_pc', '(', 'task', ')', ';', 'while', '(', 'check_end', '(', 'task', ')', ')', '{', 'while', '(', 'task', '->', 'Readys', '>', '&&', 'number_IntSet', '(', 'task', '->', 'cand_pc', ')', '>', '0', ')', '{', 'Makectt', '(', 'task', ')', ';', 'ReadySel', '(', 'task', ')', ';', 'TaskAssign', '(', 'task', ')', ';', '#ifdef', 'if', '(', 'task', '->', 'Exectime', '[', 'task', '->', 'SelectTask', ']', '==', '0', ')', '{', 'add1_IntSet', '(', 'task', '->', 'TaskEndF', ',', 'task', '->', 'SelectTask', ')', ';', 'ReadytaskChk_for_Dt', '(', 'task', ')', ';', 'comp_cand_pc', '(', 'task', ')', ';', '}', 'else', '{', 'update_cand_pc', '(', 'task', ')', ';', 'update_readytask', '(', 'task', ')', ';', '#ifdef', '}', 'comp_cand_tasks', '(', 'task', ')', ';', '}', 'update_clock', '(', 'task', ')', ';', 'set_task_end_flag', '(', 'task', ')', ';', 'ReadytaskChk_for_Dt', '(', 'task', ')', ';', 'comp_cand_tasks', '(', 'task', ')', ';', 'comp_cand_pc', '(', 'task', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1511,"['CheckMult', '(', 'int', 'nindex1', ',', 'int', 'indexarray1', '[', ']', ',', 'int', 'nindex2', ',', 'int', 'indexarray2', '[', ']', ',', 'int', 'nindex3', ',', 'int', 'indexarray3', '[', ']', ',', 'int', '&', 'nindexr', ',', 'int', 'indexarrayr', '[', ']', ')', '{', 'int', 'i', ',', 'i2', ',', 'i3', ';', 'nindexr', '=', '0', ';', 'int', 'sortindexarray1', '[', 'mx_array_dim', ']', ',', 'sortindexarray2', '[', 'mx_array_dim', ']', ',', 'sortindexarray3', '[', 'mx_array_dim', ']', ';', 'int', 'contractionarray', '[', '2', '*', 'mx_array_dim', ']', ',', 'contractnindex', ';', 'selectionSort', '(', 'indexarray1', ',', 'sortindexarray1', ',', 'nindex1', ')', ';', 'selectionSort', '(', 'indexarray2', ',', 'sortindexarray2', ',', 'nindex2', ')', ';', 'selectionSort', '(', 'indexarray3', ',', 'sortindexarray3', ',', 'nindex3', ')', ';', 'i2', '=', 'i3', '=', '0', ';', 'contractnindex', '=', '0', ';', 'while', '(', 'i2', '<', 'nindex2', '&&', 'i3', '<', 'nindex3', ')', '{', 'if', '(', 'sortindexarray2', '[', 'i2', ']', '>', 'sortindexarray3', '[', 'i3', ']', ')', 'contractionarray', '[', 'contractnindex', '++', ']', '=', 'sortindexarray3', '[', 'i3', '++', ']', ';', 'else', 'if', '(', 'sortindexarray2', '[', 'i2', ']', '<', 'sortindexarray3', '[', 'i3', ']', ')', 'contractionarray', '[', 'contractnindex', '++', ']', '=', 'sortindexarray2', '[', 'i2', '++', ']', ';', '{', 'indexarrayr', '[', 'nindexr', '++', ']', '=', 'sortindexarray2', '[', 'i2', ']', ';', 'i2', '++', ';', 'i3', '++', ';', '}', '}', 'while', '(', 'i2', '<', 'nindex2', ')', 'contractionarray', '[', 'contractnindex', '++', ']', '=', 'sortindexarray2', '[', 'i2', '++', ']', ';', 'while', '(', 'i3', '<', 'nindex3', ')', 'contractionarray', '[', 'contractnindex', '++', ']', '=', 'sortindexarray3', '[', 'i3', '++', ']', ';', 'if', '(', 'nindex1', '!=', 'contractnindex', ')', '{', 'outerror', '(', 'glno', ',', '""""', ')', ';', 'return', '-', '2', ';', '}', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'nindex1', ';', 'i', '++', ')', '{', 'if', '(', 'contractionarray', '[', 'i', ']', '!=', 'sortindexarray1', '[', 'i', ']', ')', '{', 'outerror', '(', 'glno', ',', '""""', ')', ';', 'return', '-', '1', ';', '}', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1512,"['RelocateField', '(', 'BinaryObject', '&', 'BO', ',', 'uint32_t', 'Offset', ',', 'int64_t', 'Value', ',', 'unsigned', 'Size', ')', '{', 'if', '(', 'Size', '==', '32', ')', 'BO', '.', 'fixWord32', '(', 'Value', ',', 'Offset', ')', ';', 'else', 'if', '(', 'Size', '==', '64', ')', 'BO', '.', 'fixWord64', '(', 'Value', ',', 'Offset', ')', ';', 'llvm_unreachable', '(', '""""', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1513,"['bdrv_pwrite_em', '(', 'BlockDriverState', '*', 'bs', ',', 'int64_t', 'offset', ',', 'const', 'uint8_t', '*', 'buf', ',', 'int', 'count1', ')', '{', 'uint8_t', 'tmp_buf', '[', 'SECTOR_SIZE', ']', ';', 'int', 'len', ',', 'nb_sectors', ',', 'count', ';', 'int64_t', 'sector_num', ';', 'count', '=', 'count1', ';', 'len', '=', '(', 'SECTOR_SIZE', '-', 'offset', ')', '&', '(', 'SECTOR_SIZE', '-', '1', ')', ';', 'if', '(', 'len', '>', 'count', ')', 'len', '=', 'count', ';', 'sector_num', '=', 'offset', '>>', 'SECTOR_BITS', ';', 'if', '(', 'len', '>', '0', ')', '{', 'if', '(', 'bdrv_read', '(', 'bs', ',', 'sector_num', ',', 'tmp_buf', ',', '1', ')', '<', '0', ')', 'return', '-', 'EIO', ';', 'memcpy', '(', 'tmp_buf', '+', '(', 'offset', '&', '(', 'SECTOR_SIZE', '-', '1', ')', ')', ',', 'buf', ',', 'len', ')', ';', 'if', '(', 'bdrv_write', '(', 'bs', ',', 'sector_num', ',', 'tmp_buf', ',', '1', ')', '<', '0', ')', 'return', '-', 'EIO', ';', 'count', '-=', 'len', ';', 'if', '(', 'count', '==', '0', ')', 'return', 'count1', ';', 'sector_num', '++', ';', 'buf', '+=', 'len', ';', '}', 'nb_sectors', '=', 'count', '>>', 'SECTOR_BITS', ';', 'if', '(', 'nb_sectors', '>', '0', ')', '{', 'if', '(', 'bdrv_write', '(', 'bs', ',', 'sector_num', ',', 'buf', ',', 'nb_sectors', ')', '<', '0', ')', 'return', '-', 'EIO', ';', 'sector_num', '+=', 'nb_sectors', ';', 'len', '=', 'nb_sectors', '<<', 'SECTOR_BITS', ';', 'buf', '+=', 'len', ';', 'count', '-=', 'len', ';', '}', 'if', '(', 'count', '>', '0', ')', '{', 'if', '(', 'bdrv_read', '(', 'bs', ',', 'sector_num', ',', 'tmp_buf', ',', '1', ')', '<', '0', ')', 'return', '-', 'EIO', ';', 'memcpy', '(', 'tmp_buf', ',', 'buf', ',', 'count', ')', ';', 'if', '(', 'bdrv_write', '(', 'bs', ',', 'sector_num', ',', 'tmp_buf', ',', '1', ')', '<', '0', ')', 'return', '-', 'EIO', ';', '}', 'return', 'count1', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1514,"['print_ni_name', '(', 'struct', 'iface_data', '*', 'idata', ',', 'const', 'u_char', '*', 'pktdata', ',', 'struct', 'pcap_pkthdr', '*', 'pkthdr', ')', '{', 'struct', 'ether_header', '\t', '*', 'pkt_ether', ';', 'struct', 'ip6_hdr', '\t\t\t', '*', 'pkt_ipv6', ';', 'struct', 'icmp6_nodeinfo\t', '*', 'pkt_ni', ';', 'unsigned', 'char\t\t\t', '*', 'pkt_end', ';', 'struct', 'ni_reply_name\t', '*', 'pkt_nidata', ';', 'unsigned', 'char\t\t\t', '*', 'start', ',', '*', 'next', ';', 'pkt_ether', '=', '(', 'struct', 'ether_header', '*', ')', 'pktdata', ';', 'pkt_ipv6', '=', '(', 'struct', 'ip6_hdr', '*', ')', '(', '(', 'char', '*', ')', 'pkt_ether', '+', 'idata', '->', 'linkhsize', ')', ';', 'pkt_ni', '=', '(', 'struct', 'icmp6_nodeinfo', '*', ')', '(', '(', 'char', '*', ')', 'pkt_ipv6', '+', 'sizeof', '(', 'struct', 'ip6_hdr', ')', ')', ';', 'pkt_end', '=', '(', 'unsigned', 'char', '*', ')', 'pktdata', '+', 'pkthdr', '->', 'caplen', ';', 'if', '(', 'pkt_end', '>', '(', '(', 'unsigned', 'char', '*', ')', 'pkt_ni', '+', 'pkt_ipv6', '->', 'ip6_plen', ')', ')', 'pkt_end', '=', '(', 'unsigned', 'char', '*', ')', 'pkt_ni', '+', 'pkt_ipv6', '->', 'ip6_plen', ';', 'if', '(', '!is_eq_in6_addr', '(', '&', '(', 'pkt_ipv6', '->', 'ip6_dst', ')', ',', '&', '(', 'idata', '->', 'srcaddr', ')', ')', ')', 'return', '0', ';', 'if', '(', 'inet_ntop', '(', 'AF_INET6', ',', '&', '(', 'pkt_ipv6', '->', 'ip6_src', ')', ',', 'pv6addr', ',', 'sizeof', '(', 'pv6addr', ')', ')', '==', 'NULL', ')', '{', 'if', '(', 'idata', '->', 'verbose_f', ')', 'puts', '(', '""""', ')', ';', 'return', '(', '-', '1', ')', ';', '}', 'printf', '(', '""""', ',', 'pv6addr', ')', ';', 'switch', '(', 'pkt_ni', '->', 'ni_code', ')', '{', 'case', '0', ':', 'puts', '(', '""""', ')', ';', 'break', ';', 'case', '1', ':', 'puts', '(', '""""', ')', ';', 'break', ';', 'case', '2', ':', 'puts', '(', '""""', ')', ';', 'break', ';', 'default', ':', 'printf', '(', '""""', ',', 'pkt_ni', '->', 'ni_code', ')', ';', 'break', ';', '}', 'pkt_nidata', '=', '(', 'struct', 'ni_reply_name', '*', ')', '(', '(', 'char', '*', ')', 'pkt_ni', '+', 'sizeof', '(', 'struct', 'icmp6_nodeinfo', ')', ')', ';', 'start', '=', '(', 'unsigned', 'char', '*', ')', 'pkt_nidata', ';', 'next', '=', '(', 'unsigned', 'char', '*', ')', '&', '(', 'pkt_nidata', '->', 'ni_name_name', ')', ';', 'while', '(', 'next', '!=', 'NULL', '&&', 'dns_decode', '(', 'start', ',', 'pkt_end', '-', 'start', ',', 'next', ',', 'domain', ',', 'sizeof', '(', 'domain', ')', ',', '&', 'next', ')', '==', '0', ')', '{', 'printf', '(', '""""', ',', 'domain', ',', '(', 'LUI', ')', 'pkt_nidata', '->', 'ni_name_ttl', ',', '(', 'pkt_nidata', '->', 'ni_name_ttl', '==', '0xffffffff', ')', '?', '""""', ':', '""""', ')', ';', '}', 'puts', '(', '""""', ')', ';', 'return', '(', '0', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1515,"['CollectGarbage', '(', 'AllocationSpace', 'space', ',', 'GarbageCollector', 'collector', ')', '{', '/', '/', 'The', 'VM', 'is', 'in', 'the', 'GC', 'state', 'until', 'exiting', 'this', 'function', '.', 'VMState', 'state', '(', 'GC', ')', ';', '#ifdef', '/', '/', 'Reset', 'the', 'allocation', 'timeout', 'to', 'the', 'GC', 'interval', ',', 'but', 'make', 'sure', '/', '/', 'allow', 'at', 'least', 'a', 'few', 'allocations', 'after', 'a', 'collection', '.', 'The', '/', '/', 'for', 'this', 'is', 'that', 'we', 'have', 'a', 'lot', 'of', 'allocation', 'sequences', 'and', '/', '/', 'assume', 'that', 'a', 'garbage', 'collection', 'will', 'allow', 'the', '/', '/', 'allocation', 'attempts', 'to', 'go', 'through', '.', 'allocation_timeout_', '=', 'Max', '(', '6', ',', 'FLAG_gc_interval', ')', ';', 'bool', 'next_gc_likely_to_collect_more', '=', 'false', ';', '{', 'GCTracer', 'tracer', ';', 'GarbageCollectionPrologue', '(', ')', ';', '/', '/', 'The', 'GC', 'count', 'was', 'incremented', 'in', 'the', 'prologue', '.', 'Tell', 'the', 'tracer', '/', '/', 'it', '.', 'tracer', '.', 'set_gc_count', '(', 'gc_count_', ')', ';', '/', '/', 'Tell', 'the', 'tracer', 'which', 'collector', ""we've"", 'selected', '.', 'tracer', '.', 'set_collector', '(', 'collector', ')', ';', 'HistogramTimer', '*', 'rate', '=', '(', 'collector', '==', 'SCAVENGER', ')', '?', '&', 'Counters', ':', ':', ':', '&', 'Counters', ':', ':', 'gc_compactor', ';', 'rate', '->', 'Start', '(', ')', ';', 'next_gc_likely_to_collect_more', '=', 'PerformGarbageCollection', '(', 'collector', ',', '&', 'tracer', ')', ';', 'rate', '->', 'Stop', '(', ')', ';', 'GarbageCollectionEpilogue', '(', ')', ';', '}', '#ifdef', 'if', '(', 'FLAG_log_gc', ')', 'HeapProfiler', ':', ':', 'WriteSample', '(', ')', ';', 'return', 'next_gc_likely_to_collect_more', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1516,"['cx18_streams_register', '(', 'struct', 'cx18', '*', 'cx', ')', '{', 'int', 'type', ';', 'int', 'err', ';', 'int', 'ret', '=', '0', ';', 'for', '(', 'type', '=', '0', ';', 'type', '<', 'CX18_MAX_STREAMS', ';', 'type', '++', ')', '{', 'err', '=', 'cx18_reg_dev', '(', 'cx', ',', 'type', ')', ';', 'if', '(', 'err', '&&', 'ret', '==', '0', ')', 'ret', '=', 'err', ';', '}', 'if', '(', 'ret', '==', '0', ')', 'return', '0', ';', 'cx18_streams_cleanup', '(', 'cx', ',', '1', ')', ';', 'return', 'ret', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1517,"['dump', '(', ')', '{', 'return', '""""', '+', 'QString', ':', ':', 'number', '(', 'm_value', ')', '+', '""""', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1518,"['getDocDefaultLangDescription', '(', 'std', ':', ':', 'string', '&', 's', ')', '{', 'const', 'XAP_StringSet', '*', 'pSS', '=', 'XAP_App', ':', ':', 'getApp', '(', ')', '->', 'getStringSet', '(', ')', ';', 'UT_return_if_fail', '(', 'pSS', ')', ';', 'pSS', '->', 'getValueUTF8', '(', 'XAP_STRING_ID_DLG_ULANG_DefaultLangLabel', ',', 's', ')', ';', 's', '+=', 'm_docLang', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1519,"['cui_agent_set_selected_service', '(', 'const', 'char', '*', 'path', ',', 'const', 'char', '*', 'name', ')', '{', 'g_free', '(', 'service', '.', 'path', ')', ';', 'service', '.', 'path', '=', 'g_strdup', '(', 'path', ')', ';', 'g_free', '(', 'service', '.', 'name', ')', ';', 'if', '(', 'name', '==', 'NULL', ')', 'service', '.', 'name', '=', 'g_strdup', '(', '""""', ')', ';', 'service', '.', 'name', '=', 'g_strdup', '(', 'name', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1520,"['analyse_status', '(', 'struct', 'gnutella_node', '*', 'n', ',', 'int', '*', 'code', ')', '{', 'struct', 'gnutella_socket', '*', 's', '=', 'n', '->', 'socket', ';', 'const', 'char', '*', 'status', ';', 'int', 'ack_code', ';', 'uint', 'major', '=', '0', ',', 'minor', '=', '0', ';', 'const', 'char', '*', 'ack_message', '=', '""""', ';', 'bool', 'ack_ok', '=', 'FALSE', ';', 'bool', 'incoming', '=', '(', 'n', '->', 'flags', '&', 'NODE_F_INCOMING', ')', '?', 'TRUE', ':', 'FALSE', ';', 'const', 'char', '*', 'what', '=', 'incoming', '?', '""""', ':', '""""', ';', 'socket_check', '(', 's', ')', ';', 'status', '=', 'getline_str', '(', 's', '->', 'getline', ')', ';', 'ack_code', '=', 'http_status_parse', '(', 'status', ',', '""""', ',', '&', 'ack_message', ',', '&', 'major', ',', '&', 'minor', ')', ';', 'if', '(', 'code', ')', '*', 'code', '=', 'ack_code', ';', 'if', '(', 'GNET_PROPERTY', '(', 'node_debug', ')', '>', '3', ')', 'g_debug', '(', '""""', '%', 's\\""""', ',', 'incoming', '?', '""""', ':', '""""', ',', 'ack_code', ',', 'ack_message', ',', 'major', ',', 'minor', ')', ';', 'if', '(', 'ack_code', '==', '-', '1', ')', '{', 'if', '(', 'GNET_PROPERTY', '(', 'node_debug', ')', ')', '{', 'if', '(', 'incoming', '||', '0', '!=', 'strcmp', '(', 'status', ',', '""""', ')', ')', '{', 'g_warning', '(', '""""', ',', 'what', ',', 'host_addr_to_string', '(', 'n', '->', 'addr', ')', ')', ';', 'dump_hex', '(', 'stderr', ',', '""""', ',', 'status', ',', 'MIN', '(', 'getline_length', '(', 's', '->', 'getline', ')', ',', '80', ')', ')', ';', '}', 'g_warning', '(', '""""', ',', 'node_addr', '(', 'n', ')', ')', ';', '}', 'hcache_add', '(', 'HCACHE_UNSTABLE', ',', 'n', '->', 'addr', ',', '0', ',', '""""', ')', ';', '}', 'else', '{', 'ack_ok', '=', 'TRUE', ';', '}', 'if', '(', 'ack_ok', '&&', '(', 'major', '!=', 'n', '->', 'proto_major', '||', 'minor', '!=', 'n', '->', 'proto_minor', ')', ')', '{', 'if', '(', 'GNET_PROPERTY', '(', 'node_debug', ')', ')', '{', 'if', '(', 'incoming', ')', 'g_warning', '(', '""""', ',', 'host_addr_to_string', '(', 'n', '->', 'addr', ')', ',', 'n', '->', 'proto_major', ',', 'n', '->', 'proto_minor', ',', 'major', ',', 'minor', ')', ';', 'g_warning', '(', '""""', ',', 'host_addr_to_string', '(', 'n', '->', 'addr', ')', ',', 'n', '->', 'proto_major', ',', 'n', '->', 'proto_minor', ',', 'major', ',', 'minor', ')', ';', '}', 'n', '->', 'proto_major', '=', 'major', ';', 'n', '->', 'proto_minor', '=', 'minor', ';', '}', '/', '*', '*', 'Is', 'the', 'connection', 'OK', '?', 'if', '(', '!ack_ok', ')', '{', 'node_remove', '(', 'n', ',', '_', '(', '""""', ')', ',', 'what', ')', ';', '}', 'else', 'if', '(', 'ack_code', '<', '200', '||', 'ack_code', '>=', '300', ')', '{', 'if', '(', 'ack_code', '==', '401', ')', '{', 'hcache_add', '(', 'HCACHE_UNSTABLE', ',', 'n', '->', 'addr', ',', '0', ',', '""""', ')', ';', '}', 'if', '(', 'ack_code', '==', '503', ')', '{', 'hcache_add', '(', 'HCACHE_BUSY', ',', 'n', '->', 'addr', ',', '0', ',', '""""', ')', ';', '}', 'node_remove', '(', 'n', ',', '_', '(', '""""', ')', ',', 'what', ',', 'ack_code', ',', 'ack_message', ')', ';', 'ack_ok', '=', 'FALSE', ';', '}', 'else', 'if', '(', '!incoming', '&&', 'ack_code', '==', '204', ')', '{', 'node_remove', '(', 'n', ',', '_', '(', '""""', ')', ')', ';', 'ack_ok', '=', 'FALSE', ';', '}', 'if', '(', 'GTA_NODE_REMOVING', '==', 'n', '->', 'status', ')', '{', 'ack_ok', '=', 'FALSE', ';', '}', 'return', 'ack_ok', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1521,"['SendPointOfInterest', '(', 'uint32', 'poi_id', ')', '{', 'PointOfInterest', 'const', '*', 'poi', '=', 'sObjectMgr', '.', 'GetPointOfInterest', '(', 'poi_id', ')', ';', 'if', '(', '!poi', ')', '{', 'sLog', '.', 'outErrorDb', '(', '""""', ',', 'poi_id', ')', ';', 'return', ';', '}', 'std', ':', ':', 'string', 'icon_name', '=', 'poi', '->', 'icon_name', ';', 'int', 'loc_idx', '=', 'GetMenuSession', '(', ')', '->', 'GetSessionDbLocaleIndex', '(', ')', ';', 'if', '(', 'loc_idx', '>=', '0', ')', 'if', '(', 'PointOfInterestLocale', 'const', '*', 'pl', '=', 'sObjectMgr', '.', 'GetPointOfInterestLocale', '(', 'poi_id', ')', ')', 'if', '(', 'pl', '->', 'IconName', '.', 'size', '(', ')', '>', 'size_t', '(', 'loc_idx', ')', '&&', '!pl', '->', 'IconName', '[', 'loc_idx', ']', '.', 'empty', '(', ')', ')', 'icon_name', '=', 'pl', '->', 'IconName', '[', 'loc_idx', ']', ';', 'WorldPacket', 'data', '(', 'SMSG_GOSSIP_POI', ',', '(', '4', '+', '4', '+', '4', '+', '4', '+', '4', '+', '10', ')', ')', ';', '/', '/', 'guess', 'data', '<<', 'uint32', '(', 'poi', '->', 'flags', ')', ';', 'data', '<<', 'float', '(', 'poi', '->', 'x', ')', ';', 'data', '<<', 'float', '(', 'poi', '->', 'y', ')', ';', 'data', '<<', 'uint32', '(', 'poi', '->', 'icon', ')', ';', 'data', '<<', 'uint32', '(', 'poi', '->', 'data', ')', ';', 'data', '<<', 'icon_name', ';', 'GetMenuSession', '(', ')', '->', 'SendPacket', '(', '&', 'data', ')', ';', '/', '/', 'DEBUG_LOG', '(', '""""', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1522,"['smi_read_eeprom', '(', 'struct', 'i2c_adapter', '*', 'i2c', ',', 'u16', 'reg', ',', 'u8', '*', 'data', ',', 'u16', 'size', ')', '{', 'int', 'ret', ';', 'u8', 'b0', '[', '2', ']', '=', '{', '(', 'reg', '>>', '8', ')', '&', '0xff', ',', 'reg', '&', '0xff', '}', ';', 'struct', 'i2c_msg', 'msg', '[', ']', '=', '{', '{', '.', 'addr', '=', '0x50', ',', '.', 'flags', '=', '0', ',', '.', 'buf', '=', 'b0', ',', '.', 'len', '=', '2', '}', ',', '{', '.', 'addr', '=', '0x50', ',', '.', 'flags', '=', 'I2C_M_RD', ',', '.', 'buf', '=', 'data', ',', '.', 'len', '=', 'size', '}', '}', ';', 'ret', '=', 'i2c_transfer', '(', 'i2c', ',', 'msg', ',', '2', ')', ';', 'if', '(', 'ret', '!=', '2', ')', '{', 'dev_err', '(', '&', 'i2c', '->', 'dev', ',', '""""', ',', '__func__', ',', 'reg', ',', 'ret', ')', ';', 'return', 'ret', ';', '}', 'return', 'ret', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1523,"['at76_calc_padding', '(', 'int', 'wlen', ')', '{', 'wlen', '+=', 'AT76_TX_HDRLEN', ';', 'wlen', '=', 'wlen', '%', '64', ';', 'if', '(', 'wlen', '<', '50', ')', 'return', '50', '-', 'wlen', ';', 'if', '(', 'wlen', '>=', '61', ')', 'return', '64', '+', '50', '-', 'wlen', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1524,"['dumpCommand', '(', 'redisClient', '*', 'c', ')', '{', 'char', 'buf', '[', '64', ']', ';', 'FILE', '*', 'fp', ';', 'robj', '*', 'o', ',', '*', 'dumpobj', ';', 'sds', 'dump', '=', 'NULL', ';', 'off_t', 'payload_len', ';', 'unsigned', 'int', 'type', ';', 'if', '(', '(', 'o', '=', 'lookupKeyRead', '(', 'c', '->', 'db', ',', 'c', '->', 'argv', '[', '1', ']', ')', ')', '==', 'NULL', ')', '{', 'addReply', '(', 'c', ',', 'shared', '.', 'nullbulk', ')', ';', 'return', ';', '}', 'snprintf', '(', 'buf', ',', 'sizeof', '(', 'buf', ')', ',', '""""', ',', 'getpid', '(', ')', ')', ';', 'fp', '=', 'fopen', '(', 'buf', ',', '""""', ')', ';', 'if', '(', '!fp', ')', '{', 'redisLog', '(', 'REDIS_WARNING', ',', '""""', ',', 'strerror', '(', 'errno', ')', ')', ';', 'addReplyErrorFormat', '(', 'c', ',', '""""', ',', 'strerror', '(', 'errno', ')', ')', ';', 'return', ';', '}', 'unlink', '(', 'buf', ')', ';', '/', '*', 'Dump', 'the', 'serailized', 'object', 'and', 'read', 'it', 'back', 'in', 'memory', '.', '*', 'We', 'prefix', 'it', 'with', 'a', 'one', 'byte', 'containing', 'the', 'type', 'ID', '.', 'if', '(', 'rdbSaveObject', '(', 'fp', ',', 'o', ')', '==', '-', '1', ')', 'goto', 'file_wr_err', ';', 'payload_len', '=', 'ftello', '(', 'fp', ')', ';', 'if', '(', 'fseeko', '(', 'fp', ',', '0', ',', 'SEEK_SET', ')', '==', '-', '1', ')', 'goto', 'file_rd_err', ';', 'dump', '=', 'sdsnewlen', '(', 'NULL', ',', 'payload_len', '+', '1', ')', ';', 'if', '(', 'payload_len', '&&', 'fread', '(', 'dump', '+', '1', ',', 'payload_len', ',', '1', ',', 'fp', ')', '!=', '1', ')', 'goto', 'file_rd_err', ';', 'fclose', '(', 'fp', ')', ';', 'type', '=', 'o', '->', 'type', ';', 'if', '(', 'type', '==', 'REDIS_LIST', '&&', 'o', '->', 'encoding', '==', 'REDIS_ENCODING_ZIPLIST', ')', 'type', '=', 'REDIS_LIST_ZIPLIST', ';', 'else', 'if', '(', 'type', '==', 'REDIS_HASH', '&&', 'o', '->', 'encoding', '==', 'REDIS_ENCODING_ZIPMAP', ')', 'type', '=', 'REDIS_HASH_ZIPMAP', ';', 'else', 'if', '(', 'type', '==', 'REDIS_SET', '&&', 'o', '->', 'encoding', '==', 'REDIS_ENCODING_INTSET', ')', 'type', '=', 'REDIS_SET_INTSET', ';', 'type', '=', 'o', '->', 'type', ';', 'dump', '[', '0', ']', '=', 'type', ';', 'dumpobj', '=', 'createObject', '(', 'REDIS_STRING', ',', 'dump', ')', ';', 'addReplyBulk', '(', 'c', ',', 'dumpobj', ')', ';', 'decrRefCount', '(', 'dumpobj', ')', ';', 'return', ';', 'file_wr_err', ':', 'redisLog', '(', 'REDIS_WARNING', ',', '""""', ',', 'strerror', '(', 'errno', ')', ')', ';', 'addReplyErrorFormat', '(', 'c', ',', '""""', ',', 'strerror', '(', 'errno', ')', ')', ';', 'sdsfree', '(', 'dump', ')', ';', 'fclose', '(', 'fp', ')', ';', 'return', ';', 'file_rd_err', ':', 'redisLog', '(', 'REDIS_WARNING', ',', '""""', ',', 'strerror', '(', 'errno', ')', ')', ';', 'addReplyErrorFormat', '(', 'c', ',', '""""', ',', 'strerror', '(', 'errno', ')', ')', ';', 'sdsfree', '(', 'dump', ')', ';', 'fclose', '(', 'fp', ')', ';', 'return', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1525,"['update_pool', '(', 'prng_ctx', 'ctx', '[', '1', ']', ')', '{', 'unsigned', 'int', 'i', '=', '0', ';', 'memcpy', '(', 'ctx', '->', 'obuf', ',', 'ctx', '->', 'rbuf', ',', 'PRNG_POOL_SIZE', ')', ';', 'while', '(', 'i', '<', 'PRNG_POOL_SIZE', ')', 'i', '+=', 'ctx', '->', 'entropy', '(', 'ctx', '->', 'rbuf', '+', 'i', ',', 'PRNG_POOL_SIZE', '-', 'i', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'PRNG_POOL_SIZE', ';', '++', 'i', ')', 'ctx', '->', 'rbuf', '[', 'i', ']', '^=', '~ctx', '->', 'obuf', '[', 'i', ']', ';', 'prng_mix', '(', 'ctx', '->', 'rbuf', ')', ';', 'prng_mix', '(', 'ctx', '->', 'obuf', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1526,"['gl843_stop_action', '(', 'Genesys_Device', '*', 'dev', ')', '{', 'SANE_Status', 'status', ';', 'uint8_t', 'val40', ',', 'val', ';', 'unsigned', 'int', 'loop', ';', 'DBG', '(', 'DBG_proc', ',', '""""', ',', '__FUNCTION__', ')', ';', 'status', '=', 'sanei_genesys_get_status', '(', 'dev', ',', '&', 'val', ')', ';', 'if', '(', 'DBG_LEVEL', '>=', 'DBG_io', ')', '{', 'sanei_genesys_print_status', '(', 'val', ')', ';', '}', 'val40', '=', '0', ';', 'status', '=', 'sanei_genesys_read_register', '(', 'dev', ',', 'REG40', ',', '&', 'val40', ')', ';', 'if', '(', 'status', '!=', 'SANE_STATUS_GOOD', ')', '{', 'DBG', '(', 'DBG_error', ',', '""""', ',', '__FUNCTION__', ',', 'sane_strstatus', '(', 'status', ')', ')', ';', 'DBG', '(', 'DBG_proc', ',', '""""', ',', '__FUNCTION__', ')', ';', 'return', 'status', ';', '}', 'if', '(', '!', '(', 'val40', '&', 'REG40_DATAENB', ')', '&&', '!', '(', 'val40', '&', 'REG40_MOTMFLG', ')', ')', '{', 'DBG', '(', 'DBG_info', ',', '""""', ',', '__FUNCTION__', ')', ';', 'DBG', '(', 'DBG_proc', ',', '""""', ',', '__FUNCTION__', ')', ';', 'return', 'SANE_STATUS_GOOD', ';', '}', 'val', '=', 'sanei_genesys_read_reg_from_set', '(', 'dev', '->', 'reg', ',', 'REG01', ')', ';', 'val', '&=', '~REG01_SCAN', ';', 'sanei_genesys_set_reg_from_set', '(', 'dev', '->', 'reg', ',', 'REG01', ',', 'val', ')', ';', 'status', '=', 'sanei_genesys_write_register', '(', 'dev', ',', 'REG01', ',', 'val', ')', ';', 'if', '(', 'status', '!=', 'SANE_STATUS_GOOD', ')', '{', 'DBG', '(', 'DBG_error', ',', '""""', ',', '__FUNCTION__', ',', 'sane_strstatus', '(', 'status', ')', ')', ';', 'return', 'status', ';', '}', 'usleep', '(', '100', '*', '1000', ')', ';', 'loop', '=', '10', ';', 'while', '(', 'loop', '>', '0', ')', '{', 'status', '=', 'sanei_genesys_get_status', '(', 'dev', ',', '&', 'val', ')', ';', 'if', '(', 'DBG_LEVEL', '>=', 'DBG_io', ')', '{', 'sanei_genesys_print_status', '(', 'val', ')', ';', '}', 'val40', '=', '0', ';', 'status', '=', 'sanei_genesys_read_register', '(', 'dev', ',', '0x40', ',', '&', 'val40', ')', ';', 'if', '(', 'status', '!=', 'SANE_STATUS_GOOD', ')', '{', 'DBG', '(', 'DBG_error', ',', '""""', ',', '__FUNCTION__', ',', 'sane_strstatus', '(', 'status', ')', ')', ';', 'DBGCOMPLETED', ';', 'return', 'status', ';', '}', 'if', '(', '!', '(', 'val40', '&', 'REG40_DATAENB', ')', '&&', '!', '(', 'val40', '&', 'REG40_MOTMFLG', ')', '&&', '!', '(', 'val', '&', 'REG41_MOTORENB', ')', ')', '{', 'DBGCOMPLETED', ';', 'return', 'SANE_STATUS_GOOD', ';', '}', 'usleep', '(', '100', '*', '1000', ')', ';', 'loop', '--', ';', '}', 'DBGCOMPLETED', ';', 'return', 'SANE_STATUS_IO_ERROR', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1527,"['Maxent_donor_prob_revcomp', '(', 'char', '*', 'sequence', ')', '{', 'double', 'maxentscore', ',', 'odds', ';', 'if', '(', 'sequence_okay', '(', 'sequence', ',', 'DONOR_MODEL_RIGHT_MARGIN', '+', 'DONOR_MODEL_LEFT_MARGIN', ')', '==', 'false', ')', '{', 'return', '0', '.', '0', ';', '}', 'else', '{', 'maxentscore', '=', 'me2x3donor', '[', 'hashseq_skip_revcomp', '(', '&', '(', 'sequence', '[', '0', ']', ')', ',', '4', ',', '2', ',', '3', ')', ']', ';', 'odds', '=', 'score_donor_dinucleotide_revcomp', '(', 'sequence', '[', 'DONOR_MODEL_RIGHT_MARGIN', '-', '1', ']', ',', 'sequence', '[', 'DONOR_MODEL_RIGHT_MARGIN', ']', ')', '*', 'maxentscore', ';', 'return', 'odds', '/', '(', '1', '.', '0', '+', 'odds', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1528,"['gnav_trl_write_trkpt', '(', 'const', 'waypoint', '*', 'wpt', ')', '{', 'gnav_trl_t', 'rec', ';', 'le_write32', '(', '&', 'rec', '.', 'time', ',', 'wpt', '->', 'creation_time', ')', ';', 'le_write_float', '(', '&', 'rec', '.', 'lat', ',', 'wpt', '->', 'latitude', ')', ';', 'le_write_float', '(', '&', 'rec', '.', 'lon', ',', 'wpt', '->', 'longitude', ')', ';', 'if', '(', 'wpt', '->', 'altitude', '!=', 'unknown_alt', ')', '{', 'write_altitude', '(', '&', 'rec', '.', 'alt', ',', 'wpt', '->', 'altitude', ')', ';', '}', 'else', '{', 'write_altitude', '(', '&', 'rec', '.', 'alt', ',', '0', ')', ';', '}', 'gbfwrite', '(', '&', 'rec', ',', 'sizeof', '(', 'rec', ')', ',', '1', ',', 'fout', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1529,"['pw_val2scheme', '(', 'char', '*', 'val', ',', 'char', '*', '*', 'valpwdp', ',', 'int', 'first_is_default', ')', '{', 'struct', 'pw_scheme\t', '*', 'pwsp', ';', 'int', '\t\tnamelen', ',', 'prefixlen', ';', 'char\t\t\t', '*', 'end', ',', 'buf', '[', 'PWD_MAX_NAME_LEN', '+', '1', ']', ';', 'if', '(', '*', 'val', '!=', 'PWD_HASH_PREFIX_START', '||', '(', 'end', '=', 'strchr', '(', 'val', ',', 'PWD_HASH_PREFIX_END', ')', ')', '==', 'NULL', '||', '(', 'namelen', '=', 'end', '-', 'val', '-', '1', ')', '>', 'PWD_MAX_NAME_LEN', ')', '{', 'if', '(', '!first_is_default', ')', '{', 'return', '(', 'NULL', ')', ';', '}', 'prefixlen', '=', '0', ';', '}', 'else', '{', 'memcpy', '(', 'buf', ',', 'val', '+', '1', ',', 'namelen', ')', ';', 'buf', '[', 'namelen', ']', '=', ""''"", ';', 'pwsp', '=', 'pw_name2scheme', '(', 'buf', ')', ';', 'if', '(', 'pwsp', '==', 'NULL', ')', '{', 'if', '(', '!first_is_default', ')', '{', 'return', '(', 'NULL', ')', ';', '}', 'pwsp', '=', 'pw_name2scheme', '(', '""""', ')', ';', 'prefixlen', '=', '0', ';', '}', 'else', '{', 'prefixlen', '=', 'pwsp', '->', 'pws_len', '+', '2', ';', '}', '}', 'if', '(', 'valpwdp', '!=', 'NULL', ')', '{', '*', 'valpwdp', '=', 'val', '+', 'prefixlen', ';', '}', 'return', '(', 'pwsp', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1530,"['on_reposition', '(', 'int', 'pos_x', ',', 'int', 'pos_y', ')', '{', 'menu', '->', 'raise', '(', ')', ';', '/', '/', 'make', 'menu', 'be', 'on', 'top', 'of', 'other', 'components', '.', 'int', 'items_width', '=', 'menu', '->', 'get_items_width', '(', ')', '+', '4', ';', 'if', '(', 'items_width', '<', '90', ')', 'items_width', '=', '90', ';', 'int', 'items_height', '=', 'menu', '->', 'get_items_height', '(', ')', ';', 'if', '(', 'items_height', '<', '20', ')', 'items_height', '=', '20', ';', 'CL_Rect', 'menu_rect', '(', 'pos_x', ',', 'pos_y', ',', 'pos_x', '+', 'items_width', '+', '3', ',', 'pos_y', '+', 'items_height', ')', ';', 'if', '(', 'menu', '->', 'is_auto_resize', '(', ')', ')', '{', 'menu', '->', 'set_position', '(', 'menu_rect', ')', ';', '}', 'std', ':', ':', 'list', '<', 'CL_MenuNode', '*', '>', '&', 'children', '=', 'menu', '->', 'get_node_list', '(', ')', ';', 'if', '(', '!children', '.', 'empty', '(', ')', ')', '{', 'int', 'X', '=', '2', ',', 'Y', '=', '1', ';', '/', '/', 'calculate', 'a', 'new', 'position', 'for', 'each', 'menu', 'node', ',', '/', '/', 'update', 'the', 'positions', 'of', 'all', 'submenus', '.', 'std', ':', ':', 'list', '<', 'CL_MenuNode', '*', '>', ':', ':', 'iterator', 'it', ';', 'for', '(', 'it', '=', 'children', '.', 'begin', '(', ')', ';', 'it', '!=', 'children', '.', 'end', '(', ')', ';', '++', 'it', ')', '{', 'CL_Component', '*', 'item', '=', '(', '*', 'it', ')', '->', 'get_data', '(', ')', ';', 'const', 'CL_Rect', '&', 'ipos', '=', 'item', '->', 'get_position', '(', ')', ';', '(', '*', 'it', ')', '->', 'set_position', '(', 'CL_Rect', '(', 'X', ',', 'Y', ',', 'menu', '->', 'is_vertical', '(', ')', '?', 'X', '+', 'items_width', ':', 'X', '+', 'item', '->', 'get_width', '(', ')', ',', 'Y', '+', 'ipos', '.', 'top', '+', 'item', '->', 'get_height', '(', ')', '+', '4', ')', ')', ';', 'if', '(', 'menu', '->', 'is_vertical', '(', ')', ')', '{', '/', '/', ""don't"", 'resize', 'elements', 'not', 'placed', 'originally', 'at', '(', '0', ',', '0', ')', 'or', '(', '1', ',', '0', ')', 'if', '(', 'ipos', '.', 'top', '==', '0', '&&', 'ipos', '.', 'left', '==', '0', ')', 'item', '->', 'set_position', '(', '1', ',', '0', ')', ';', '}', 'item', '->', 'set_position', '(', '0', ',', '0', ')', ';', '(', '*', 'it', ')', '->', 'reposition_submenus', '(', ')', ';', 'if', '(', 'menu', '->', 'is_vertical', '(', ')', ')', 'Y', '+=', 'ipos', '.', 'top', '+', 'item', '->', 'get_height', '(', ')', '+', '4', ';', 'X', '+=', 'ipos', '.', 'left', '+', 'item', '->', 'get_width', '(', ')', '+', '4', ';', '}', '}', 'if', '(', 'menu', '->', 'is_auto_resize', '(', ')', ')', '{', 'CL_Rect', 'child_rect', '=', 'menu', '->', 'get_children_rect', '(', ')', ';', 'if', '(', 'menu', '->', 'is_vertical', '(', ')', ')', 'menu', '->', 'set_width', '(', 'child_rect', '.', 'right', ')', ';', 'menu', '->', 'set_width', '(', 'menu', '->', 'get_parent', '(', ')', '->', 'get_width', '(', ')', ')', ';', 'menu', '->', 'set_height', '(', 'child_rect', '.', 'bottom', '+', '2', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1531,"['vacm_parse_setaccess', '(', 'const', 'char', '*', 'token', ',', 'char', '*', 'param', ')', '{', 'char', '*', 'name', ',', '*', 'context', ',', '*', 'viewname', ',', '*', 'viewval', ';', 'int', 'imodel', ',', 'ilevel', ',', 'iprefix', ';', 'int', 'viewnum', ';', 'char', '*', 'st', ';', 'struct', 'vacm_accessEntry', '*', 'ap', ';', 'if', '(', '_vacm_parse_access_common', '(', 'token', ',', 'param', ',', '&', 'st', ',', '&', 'name', ',', '&', 'context', ',', '&', 'imodel', ',', '&', 'ilevel', ',', '&', 'iprefix', ')', '==', 'PARSE_FAIL', ')', '{', 'return', ';', '}', 'viewname', '=', 'strtok_r', '(', 'NULL', ',', '""""', ',', '&', 'st', ')', ';', 'if', '(', '!viewname', ')', '{', 'config_perror', '(', '""""', ')', ';', 'return', ';', '}', 'viewval', '=', 'strtok_r', '(', 'NULL', ',', '""""', ',', '&', 'st', ')', ';', 'if', '(', '!viewval', ')', '{', 'config_perror', '(', '""""', ')', ';', 'return', ';', '}', 'if', '(', 'strlen', '(', 'viewval', ')', '+', '1', '>', 'sizeof', '(', 'ap', '->', 'views', '[', 'VACM_VIEW_NOTIFY', ']', ')', ')', '{', 'config_perror', '(', '""""', ')', ';', 'return', ';', '}', 'viewnum', '=', 'se_find_value_in_slist', '(', 'VACM_VIEW_ENUM_NAME', ',', 'viewname', ')', ';', 'if', '(', 'viewnum', '<', '0', '||', 'viewnum', '>=', 'VACM_MAX_VIEWS', ')', '{', 'config_perror', '(', '""""', ')', ';', 'return', ';', '}', 'ap', '=', 'vacm_getAccessEntry', '(', 'name', ',', 'context', ',', 'imodel', ',', 'ilevel', ')', ';', 'if', '(', '!ap', ')', '{', 'ap', '=', 'vacm_createAccessEntry', '(', 'name', ',', 'context', ',', 'imodel', ',', 'ilevel', ')', ';', 'DEBUGMSGTL', '(', '(', '""""', ',', '""""', ')', ')', ';', '}', 'else', '{', 'DEBUGMSGTL', '(', '(', '""""', ',', '""""', ')', ')', ';', '}', 'if', '(', '!ap', ')', '{', 'config_perror', '(', '""""', ')', ';', 'return', ';', '}', 'if', '(', '!ap', ')', '{', 'config_perror', '(', '""""', ')', ';', 'return', ';', '}', 'strcpy', '(', 'ap', '->', 'views', '[', 'viewnum', ']', ',', 'viewval', ')', ';', 'ap', '->', 'contextMatch', '=', 'iprefix', ';', 'ap', '->', 'storageType', '=', 'SNMP_STORAGE_PERMANENT', ';', 'ap', '->', 'status', '=', 'SNMP_ROW_ACTIVE', ';', 'free', '(', 'ap', '->', 'reserved', ')', ';', 'ap', '->', 'reserved', '=', 'NULL', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  True,CWE-476  False,CWE-other  False
1532,"['Allocate', '(', 'int', 'size_in_bytes', ',', 'int', '*', 'wasted_bytes', ')', '{', 'ASSERT', '(', '0', '<', 'size_in_bytes', ')', ';', 'ASSERT', '(', 'size_in_bytes', '<=', 'kMaxBlockSize', ')', ';', 'ASSERT', '(', 'IsAligned', '(', 'size_in_bytes', ',', 'kPointerSize', ')', ')', ';', 'if', '(', 'needs_rebuild_', ')', 'RebuildSizeList', '(', ')', ';', 'int', 'index', '=', 'size_in_bytes', '>>', 'kPointerSizeLog2', ';', '/', '/', 'Check', 'for', 'a', 'perfect', 'fit', '.', 'if', '(', 'free_', '[', 'index', ']', '.', 'head_node_', '!=', 'NULL', ')', '{', 'FreeListNode', '*', 'node', '=', 'FreeListNode', ':', ':', 'FromAddress', '(', 'free_', '[', 'index', ']', '.', 'head_node_', ')', ';', '/', '/', 'If', 'this', 'was', 'the', 'last', 'block', 'of', 'its', 'size', ',', 'remove', 'the', 'size', '.', 'if', '(', '(', 'free_', '[', 'index', ']', '.', 'head_node_', '=', 'node', '->', 'next', '(', ')', ')', '==', 'NULL', ')', 'RemoveSize', '(', 'index', ')', ';', 'available_', '-=', 'size_in_bytes', ';', '*', 'wasted_bytes', '=', '0', ';', 'ASSERT', '(', '!FLAG_always_compact', ')', ';', '/', '/', 'We', 'only', 'use', 'the', 'freelists', 'with', 'mark', '-', 'sweep', '.', 'return', 'node', ';', '}', '/', '/', 'Search', 'the', 'size', 'list', 'for', 'the', 'best', 'fit', '.', 'int', 'prev', '=', 'finger_', '<', 'index', '?', 'finger_', ':', 'kHead', ';', 'int', 'cur', '=', 'FindSize', '(', 'index', ',', '&', 'prev', ')', ';', 'ASSERT', '(', 'index', '<', 'cur', ')', ';', 'if', '(', 'cur', '==', 'kEnd', ')', '{', '/', '/', 'No', 'large', 'enough', 'size', 'in', 'list', '.', '*', 'wasted_bytes', '=', '0', ';', 'return', 'Failure', ':', ':', 'RetryAfterGC', '(', 'owner_', ')', ';', '}', 'ASSERT', '(', '!FLAG_always_compact', ')', ';', '/', '/', 'We', 'only', 'use', 'the', 'freelists', 'with', 'mark', '-', 'sweep', '.', 'int', 'rem', '=', 'cur', '-', 'index', ';', 'int', 'rem_bytes', '=', 'rem', '<<', 'kPointerSizeLog2', ';', 'FreeListNode', '*', 'cur_node', '=', 'FreeListNode', ':', ':', 'FromAddress', '(', 'free_', '[', 'cur', ']', '.', 'head_node_', ')', ';', 'ASSERT', '(', 'cur_node', '->', 'Size', '(', ')', '==', '(', 'cur', '<<', 'kPointerSizeLog2', ')', ')', ';', 'FreeListNode', '*', 'rem_node', '=', 'FreeListNode', ':', ':', 'FromAddress', '(', 'free_', '[', 'cur', ']', '.', 'head_node_', '+', 'size_in_bytes', ')', ';', '/', '/', 'Distinguish', 'the', 'cases', 'prev', '<', 'rem', '<', 'cur', 'and', 'rem', '<=', 'prev', '<', '/', '/', 'to', 'avoid', 'many', 'redundant', 'tests', 'and', 'calls', 'to', 'Insert', '/', 'RemoveSize', '.', 'if', '(', 'prev', '<', 'rem', ')', '{', '/', '/', 'Simple', 'case', ':', 'insert', 'rem', 'between', 'prev', 'and', 'cur', '.', 'finger_', '=', 'prev', ';', 'free_', '[', 'prev', ']', '.', 'next_size_', '=', 'rem', ';', '/', '/', 'If', 'this', 'was', 'the', 'last', 'block', 'of', 'size', 'cur', ',', 'remove', 'the', 'size', '.', 'if', '(', '(', 'free_', '[', 'cur', ']', '.', 'head_node_', '=', 'cur_node', '->', 'next', '(', ')', ')', '==', 'NULL', ')', '{', 'free_', '[', 'rem', ']', '.', 'next_size_', '=', 'free_', '[', 'cur', ']', '.', 'next_size_', ';', '}', 'else', '{', 'free_', '[', 'rem', ']', '.', 'next_size_', '=', 'cur', ';', '}', '/', '/', 'Add', 'the', 'remainder', 'block', '.', 'rem_node', '->', 'set_size', '(', 'rem_bytes', ')', ';', 'rem_node', '->', 'set_next', '(', 'free_', '[', 'rem', ']', '.', 'head_node_', ')', ';', 'free_', '[', 'rem', ']', '.', 'head_node_', '=', 'rem_node', '->', 'address', '(', ')', ';', '}', 'else', '{', '/', '/', 'If', 'this', 'was', 'the', 'last', 'block', 'of', 'size', 'cur', ',', 'remove', 'the', 'size', '.', 'if', '(', '(', 'free_', '[', 'cur', ']', '.', 'head_node_', '=', 'cur_node', '->', 'next', '(', ')', ')', '==', 'NULL', ')', '{', 'finger_', '=', 'prev', ';', 'free_', '[', 'prev', ']', '.', 'next_size_', '=', 'free_', '[', 'cur', ']', '.', 'next_size_', ';', '}', 'if', '(', 'rem_bytes', '<', 'kMinBlockSize', ')', '{', '/', '/', 'Too', '-', 'small', 'remainder', 'is', 'wasted', '.', 'rem_node', '->', 'set_size', '(', 'rem_bytes', ')', ';', 'available_', '-=', 'size_in_bytes', '+', 'rem_bytes', ';', '*', 'wasted_bytes', '=', 'rem_bytes', ';', 'return', 'cur_node', ';', '}', '/', '/', 'Add', 'the', 'remainder', 'block', 'and', ',', 'if', 'needed', ',', 'insert', 'its', 'size', '.', 'rem_node', '->', 'set_size', '(', 'rem_bytes', ')', ';', 'rem_node', '->', 'set_next', '(', 'free_', '[', 'rem', ']', '.', 'head_node_', ')', ';', 'free_', '[', 'rem', ']', '.', 'head_node_', '=', 'rem_node', '->', 'address', '(', ')', ';', 'if', '(', 'rem_node', '->', 'next', '(', ')', '==', 'NULL', ')', 'InsertSize', '(', 'rem', ')', ';', '}', 'available_', '-=', 'size_in_bytes', ';', '*', 'wasted_bytes', '=', '0', ';', 'return', 'cur_node', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1533,"['composite', '(', 'SplashBitmap', '*', 'src', ',', 'int', 'xSrc', ',', 'int', 'ySrc', ',', 'int', 'xDest', ',', 'int', 'yDest', ',', 'int', 'w', ',', 'int', 'h', ',', 'GBool', 'noClip', ',', 'GBool', 'nonIsolated', ')', '{', 'SplashPipe', 'pipe', ';', 'SplashColor', 'pixel', ';', 'Guchar', 'alpha', ';', 'Guchar', '*', 'ap', ';', 'int', 'x', ',', 'y', ';', 'if', '(', 'src', '->', 'mode', '!=', 'bitmap', '->', 'mode', ')', '{', 'return', 'splashErrModeMismatch', ';', '}', 'if', '(', 'src', '->', 'alpha', ')', '{', 'pipeInit', '(', '&', 'pipe', ',', 'xDest', ',', 'yDest', ',', 'NULL', ',', 'pixel', ',', 'state', '->', 'fillAlpha', ',', 'gTrue', ',', 'nonIsolated', ')', ';', 'for', '(', 'y', '=', '0', ';', 'y', '<', 'h', ';', '++', 'y', ')', '{', 'pipeSetXY', '(', '&', 'pipe', ',', 'xDest', ',', 'yDest', '+', 'y', ')', ';', 'ap', '=', 'src', '->', 'getAlphaPtr', '(', ')', '+', '(', 'ySrc', '+', 'y', ')', '*', 'src', '->', 'getWidth', '(', ')', '+', 'xSrc', ';', 'for', '(', 'x', '=', '0', ';', 'x', '<', 'w', ';', '++', 'x', ')', '{', 'alpha', '=', '*', 'ap', '++', ';', 'if', '(', 'noClip', '||', 'state', '->', 'clip', '->', 'test', '(', 'xDest', '+', 'x', ',', 'yDest', '+', 'y', ')', ')', '{', '/', '/', 'this', 'uses', 'shape', 'instead', 'of', 'alpha', ',', 'which', ""isn't"", '/', '/', 'correct', ',', 'but', 'works', 'out', 'the', 'src', '->', 'getPixel', '(', 'xSrc', '+', 'x', ',', 'ySrc', '+', 'y', ',', 'pixel', ')', ';', 'pipe', '.', 'shape', '=', '(', 'SplashCoord', ')', '(', 'alpha', '/', '255', '.', '0', ')', ';', 'pipeRun', '(', '&', 'pipe', ')', ';', 'updateModX', '(', 'xDest', '+', 'x', ')', ';', 'updateModY', '(', 'yDest', '+', 'y', ')', ';', '}', 'else', '{', 'pipeIncX', '(', '&', 'pipe', ')', ';', '}', '}', '}', '}', 'else', '{', 'pipeInit', '(', '&', 'pipe', ',', 'xDest', ',', 'yDest', ',', 'NULL', ',', 'pixel', ',', 'state', '->', 'fillAlpha', ',', 'gFalse', ',', 'nonIsolated', ')', ';', 'for', '(', 'y', '=', '0', ';', 'y', '<', 'h', ';', '++', 'y', ')', '{', 'pipeSetXY', '(', '&', 'pipe', ',', 'xDest', ',', 'yDest', '+', 'y', ')', ';', 'for', '(', 'x', '=', '0', ';', 'x', '<', 'w', ';', '++', 'x', ')', '{', 'if', '(', 'noClip', '||', 'state', '->', 'clip', '->', 'test', '(', 'xDest', '+', 'x', ',', 'yDest', '+', 'y', ')', ')', '{', 'src', '->', 'getPixel', '(', 'xSrc', '+', 'x', ',', 'ySrc', '+', 'y', ',', 'pixel', ')', ';', 'pipeRun', '(', '&', 'pipe', ')', ';', 'updateModX', '(', 'xDest', '+', 'x', ')', ';', 'updateModY', '(', 'yDest', '+', 'y', ')', ';', '}', 'else', '{', 'pipeIncX', '(', '&', 'pipe', ')', ';', '}', '}', '}', '}', 'return', 'splashOk', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1534,"['recoil', '(', 'bool', 'with_ammo', ')', '{', 'if', '(', '!is_gun', '(', ')', ')', 'return', '0', ';', 'it_gun', '*', 'gun', '=', 'dynamic_cast', '<', 'it_gun', '*', '>', '(', 'type', ')', ';', 'int', 'ret', '=', 'gun', '->', 'recoil', ';', 'if', '(', 'with_ammo', '&&', 'curammo', '!=', 'NULL', ')', 'ret', '+=', 'curammo', '->', 'recoil', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'contents', '.', 'size', '(', ')', ';', 'i', '++', ')', '{', 'if', '(', 'contents', '[', 'i', ']', '.', 'is_gunmod', '(', ')', ')', 'ret', '+=', '(', 'dynamic_cast', '<', 'it_gunmod', '*', '>', '(', 'contents', '[', 'i', ']', '.', 'type', ')', ')', '->', 'recoil', ';', '}', 'return', 'ret', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1535,"['test2', '(', ')', '{', '#define', 'LIMIT', 'cout', '<<', '""""', '<<', 'LIMIT', '<<', 'endl', ';', 'for', '(', 'uint64_t', 'n', '=', '0', ';', 'n', '<', 'LIMIT', '/', '10', ';', 'n', '+=', '56789', ')', '{', 'cout', '<<', '""""', '<<', 'n', '<<', '<<', 'phi', '<', 'LIMIT', '>', '(', 'n', ')', '<<', 'endl', ';', '}', 'for', '(', 'uint64_t', 'n', '=', '1000000', ';', 'n', '<', 'LIMIT', ';', 'n', '+=', '1122334', '/', '2', ')', '{', 'cout', '<<', '""""', '<<', 'n', '<<', '<<', 'phi', '<', 'LIMIT', '>', '(', 'n', ')', '<<', 'endl', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1536,"['swaptest', '(', ')', '{', 'union', '{', 'unsigned', 'short', 'i', ';', 'unsigned', 'char', 'c', '[', '2', ']', ';', '}', 'u', ';', 'u', '.', 'i', '=', '1', ';', 'if', '(', 'u', '.', 'c', '[', '0', ']', '==', '1', ')', 'swap_bytes', '=', 'True', ';', 'swap_bytes', '=', 'False', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1537,"['list_fromwire', '(', 'isccc_region_t', '*', 'source', ',', 'isccc_sexpr_t', '*', '*', 'listp', ')', '{', 'isccc_sexpr_t', '*', 'list', ',', '*', 'value', ';', 'isc_result_t', 'result', ';', 'list', '=', 'NULL', ';', 'while', '(', '!REGION_EMPTY', '(', '*', 'source', ')', ')', '{', 'value', '=', 'NULL', ';', 'result', '=', 'value_fromwire', '(', 'source', ',', '&', 'value', ')', ';', 'if', '(', 'result', '!=', 'ISC_R_SUCCESS', ')', '{', 'isccc_sexpr_free', '(', '&', 'list', ')', ';', 'return', '(', 'result', ')', ';', '}', 'if', '(', 'isccc_sexpr_addtolist', '(', '&', 'list', ',', 'value', ')', '==', 'NULL', ')', '{', 'isccc_sexpr_free', '(', '&', 'value', ')', ';', 'isccc_sexpr_free', '(', '&', 'list', ')', ';', 'return', '(', 'result', ')', ';', '}', '}', '*', 'listp', '=', 'list', ';', 'return', '(', 'ISC_R_SUCCESS', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1538,"['convert_mgmt_class', '(', 'u8', 'mgmt_class', ')', '{', 'return', 'mgmt_class', '==', 'IB_MGMT_CLASS_SUBN_DIRECTED_ROUTE', '?', '0', ':', 'mgmt_class', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1539,"['_mesa_GetProgramBinary', '(', 'GLuint', 'program', ',', 'GLsizei', 'bufSize', ',', 'GLsizei', '*', 'length', ',', 'GLenum', '*', 'binaryFormat', ',', 'GLvoid', '*', 'binary', ')', '{', 'struct', 'gl_shader_program', '*', 'shProg', ';', 'GET_CURRENT_CONTEXT', '(', 'ctx', ')', ';', 'shProg', '=', '_mesa_lookup_shader_program_err', '(', 'ctx', ',', 'program', ',', '""""', ')', ';', 'if', '(', '!shProg', ')', 'return', ';', 'if', '(', '!shProg', '->', 'LinkStatus', ')', '{', '_mesa_error', '(', 'ctx', ',', 'GL_INVALID_OPERATION', ',', '""""', ',', 'shProg', '->', 'Name', ')', ';', 'return', ';', '}', 'if', '(', 'bufSize', '<', '0', ')', '{', '_mesa_error', '(', 'ctx', ',', 'GL_INVALID_VALUE', ',', '""""', ')', ';', 'return', ';', '}', '/', '*', 'The', 'ARB_get_program_binary', 'spec', 'says', ':', '*', '*', 'if', '(', 'length', '!=', 'NULL', ')', '*', 'length', '=', '0', ';', '(', 'void', ')', 'binaryFormat', ';', '(', 'void', ')', 'binary', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1540,"['should_remove_suid', '(', 'struct', 'dentry', '*', 'dentry', ')', '{', 'struct', 'inode', '*', 'inode', '=', 'd_inode', '(', 'dentry', ')', ';', 'umode_t', 'mode', '=', 'inode', '->', 'i_mode', ';', 'int', 'kill', '=', '0', ';', 'if', '(', 'unlikely', '(', 'mode', '&', 'S_ISUID', ')', ')', 'kill', '=', 'ATTR_KILL_SUID', ';', '/', '*', '*', 'sgid', 'without', 'any', 'exec', 'bits', 'is', 'just', 'a', 'mandatory', 'locking', 'mark', ';', '*', 'it', 'alone', '.', 'If', 'some', 'exec', 'bits', 'are', 'set', ',', ""it's"", 'a', 'real', 'sgid', ';', 'kill', 'it', '.', 'if', '(', 'unlikely', '(', '(', 'mode', '&', 'S_ISGID', ')', '&&', '(', 'mode', '&', 'S_IXGRP', ')', ')', ')', 'kill', '|=', 'ATTR_KILL_SGID', ';', 'if', '(', 'unlikely', '(', 'kill', '&&', '!capable_wrt_inode_uidgid', '(', 'inode', ',', 'CAP_FSETID', ')', '&&', 'S_ISREG', '(', 'mode', ')', ')', ')', 'return', 'kill', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1541,"['gst_queue2_read_data_at_offset', '(', 'GstQueue2', '*', 'queue', ',', 'guint64', 'offset', ',', 'guint', 'length', ',', 'guint8', '*', 'dst', ',', 'gint64', '*', 'read_return', ')', '{', 'guint8', '*', 'ring_buffer', ';', 'size_t', 'res', ';', 'ring_buffer', '=', 'queue', '->', 'ring_buffer', ';', 'if', '(', 'QUEUE_IS_USING_TEMP_FILE', '(', 'queue', ')', '&&', 'FSEEK_FILE', '(', 'queue', '->', 'temp_file', ',', 'offset', ')', ')', 'goto', 'seek_failed', ';', 'GST_LOG_OBJECT', '(', 'queue', ',', '""""', 'G_GUINT64_FORMAT', ',', 'length', ',', 'offset', ')', ';', 'if', '(', 'QUEUE_IS_USING_TEMP_FILE', '(', 'queue', ')', ')', '{', 'res', '=', 'fread', '(', 'dst', ',', '1', ',', 'length', ',', 'queue', '->', 'temp_file', ')', ';', '}', 'else', '{', 'memcpy', '(', 'dst', ',', 'ring_buffer', '+', 'offset', ',', 'length', ')', ';', 'res', '=', 'length', ';', '}', 'GST_LOG_OBJECT', '(', 'queue', ',', '""""', 'G_GSIZE_FORMAT', '""""', ',', 'res', ')', ';', 'if', '(', 'G_UNLIKELY', '(', 'res', '<', 'length', ')', ')', '{', 'if', '(', '!QUEUE_IS_USING_TEMP_FILE', '(', 'queue', ')', ')', 'goto', 'could_not_read', ';', 'if', '(', 'ferror', '(', 'queue', '->', 'temp_file', ')', ')', 'goto', 'could_not_read', ';', 'if', '(', 'feof', '(', 'queue', '->', 'temp_file', ')', '&&', 'length', '>', '0', ')', 'goto', 'eos', ';', '}', '*', 'read_return', '=', 'res', ';', 'return', 'GST_FLOW_OK', ';', 'seek_failed', ':', '{', 'GST_ELEMENT_ERROR', '(', 'queue', ',', 'RESOURCE', ',', 'SEEK', ',', '(', 'NULL', ')', ',', 'GST_ERROR_SYSTEM', ')', ';', 'return', 'GST_FLOW_ERROR', ';', '}', 'could_not_read', ':', '{', 'GST_ELEMENT_ERROR', '(', 'queue', ',', 'RESOURCE', ',', 'READ', ',', '(', 'NULL', ')', ',', 'GST_ERROR_SYSTEM', ')', ';', 'return', 'GST_FLOW_ERROR', ';', '}', 'eos', ':', '{', 'GST_DEBUG', '(', '""""', ')', ';', 'return', 'GST_FLOW_EOS', ';', '}', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1542,"['oldmda_read_params', '(', 'MDAXMLParams', '*', 'par', ',', 'OldMDAFile', '*', 'mdafile', ')', '{', 'MDAAxis', 'axis', ';', 'mdafile', '->', 'zres', '=', 'par', '->', 'res', ';', 'mdafile', '->', 'xdata', '=', 'par', '->', 'xdata', ';', 'axis', '=', 'g_array_index', '(', 'par', '->', 'axes', ',', 'MDAAxis', ',', '0', ')', ';', 'if', '(', 'axis', '.', 'unitname', ')', 'mdafile', '->', 'siunitz', '=', 'gwy_si_unit_new', '(', 'axis', '.', 'unitname', ')', ';', 'mdafile', '->', 'siunitz', '=', 'gwy_si_unit_new', '(', '""""', ')', ';', 'axis', '=', 'g_array_index', '(', 'par', '->', 'axes', ',', 'MDAAxis', ',', '1', ')', ';', 'if', '(', 'axis', '.', 'unitname', ')', 'mdafile', '->', 'siunitx', '=', 'gwy_si_unit_new_parse', '(', 'axis', '.', 'unitname', ',', '&', 'mdafile', '->', 'power10x', ')', ';', 'mdafile', '->', 'siunitx', '=', 'gwy_si_unit_new', '(', '""""', ')', ';', 'mdafile', '->', 'xres', '=', 'axis', '.', 'maxindex', '-', 'axis', '.', 'minindex', '+', '1', ';', 'if', '(', 'mdafile', '->', 'xres', '<', '1', ')', 'mdafile', '->', 'xres', '=', '1', ';', 'if', '(', 'axis', '.', 'scale', '<=', '0', '.', '0', ')', 'axis', '.', 'scale', '=', '1', '.', '0', ';', 'mdafile', '->', 'xreal', '=', 'axis', '.', 'scale', '*', 'mdafile', '->', '*', 'pow', '(', '10', '.', '0', ',', 'mdafile', '->', 'power10x', ')', ';', 'axis', '=', 'g_array_index', '(', 'par', '->', 'axes', ',', 'MDAAxis', ',', '2', ')', ';', 'if', '(', 'axis', '.', 'unitname', ')', 'mdafile', '->', 'siunity', '=', 'gwy_si_unit_new_parse', '(', 'axis', '.', 'unitname', ',', '&', 'mdafile', '->', 'power10y', ')', ';', 'mdafile', '->', 'siunity', '=', 'gwy_si_unit_new', '(', '""""', ')', ';', 'mdafile', '->', 'yres', '=', 'axis', '.', 'maxindex', '-', 'axis', '.', 'minindex', '+', '1', ';', 'if', '(', 'mdafile', '->', 'yres', '<', '1', ')', 'mdafile', '->', 'yres', '=', '1', ';', 'if', '(', 'axis', '.', 'scale', '<=', '0', '.', '0', ')', 'axis', '.', 'scale', '=', '1', '.', '0', ';', 'mdafile', '->', 'yreal', '=', 'axis', '.', 'scale', '*', 'mdafile', '->', '*', 'pow', '(', '10', '.', '0', ',', 'mdafile', '->', 'power10y', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1543,"['ExecARDeleteTriggers', '(', 'EState', '*', 'estate', ',', 'ResultRelInfo', '*', 'relinfo', ',', 'ItemPointer', 'tupleid', ')', '{', 'TriggerDesc', '*', 'trigdesc', '=', 'relinfo', '->', 'ri_TrigDesc', ';', 'if', '(', 'trigdesc', '&&', 'trigdesc', '->', 'trig_delete_after_row', ')', '{', 'HeapTuple\ttrigtuple', '=', 'GetTupleForTrigger', '(', 'estate', ',', 'NULL', ',', 'relinfo', ',', 'tupleid', ',', 'NULL', ')', ';', 'AfterTriggerSaveEvent', '(', 'estate', ',', 'relinfo', ',', 'TRIGGER_EVENT_DELETE', ',', 'true', ',', 'trigtuple', ',', 'NULL', ',', 'NIL', ',', 'NULL', ')', ';', 'heap_freetuple', '(', 'trigtuple', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1544,"['compress2_cmd', '(', 'void', ')', '{', 'Blob', 'f1', ',', 'f2', ';', 'if', '(', 'g', '.', 'argc', '!=', '5', ')', 'usage', '(', '""""', ')', ';', 'blob_read_from_file', '(', '&', 'f1', ',', 'g', '.', 'argv', '[', '2', ']', ')', ';', 'blob_read_from_file', '(', '&', 'f2', ',', 'g', '.', 'argv', '[', '3', ']', ')', ';', 'blob_compress2', '(', '&', 'f1', ',', '&', 'f2', ',', '&', 'f1', ')', ';', 'blob_write_to_file', '(', '&', 'f1', ',', 'g', '.', 'argv', '[', '4', ']', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1545,"['dw210x_op_rw', '(', 'struct', 'usb_device', '*', 'dev', ',', 'u8', 'request', ',', 'u16', 'value', ',', 'u16', 'index', ',', 'u8', '*', 'data', ',', 'u16', 'len', ',', 'int', 'flags', ')', '{', 'int', 'ret', ';', 'u8', '*', 'u8buf', ';', 'unsigned', 'int', 'pipe', '=', '(', 'flags', '==', 'DW210X_READ_MSG', ')', '?', 'usb_rcvctrlpipe', '(', 'dev', ',', '0', ')', ':', 'usb_sndctrlpipe', '(', 'dev', ',', '0', ')', ';', 'u8', 'request_type', '=', '(', 'flags', '==', 'DW210X_READ_MSG', ')', '?', 'USB_DIR_IN', ':', 'USB_DIR_OUT', ';', 'u8buf', '=', 'kmalloc', '(', 'len', ',', 'GFP_KERNEL', ')', ';', 'if', '(', '!u8buf', ')', 'return', '-', 'ENOMEM', ';', 'if', '(', 'flags', '==', 'DW210X_WRITE_MSG', ')', 'memcpy', '(', 'u8buf', ',', 'data', ',', 'len', ')', ';', 'ret', '=', 'usb_control_msg', '(', 'dev', ',', 'pipe', ',', 'request', ',', 'request_type', '|', 'USB_TYPE_VENDOR', ',', 'value', ',', 'index', ',', 'u8buf', ',', 'len', ',', '2000', ')', ';', 'if', '(', 'flags', '==', 'DW210X_READ_MSG', ')', 'memcpy', '(', 'data', ',', 'u8buf', ',', 'len', ')', ';', 'kfree', '(', 'u8buf', ')', ';', 'return', 'ret', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1546,"['usb_debugfs_init', '(', 'void', ')', '{', 'usb_debug_root', '=', 'debugfs_create_dir', '(', '""""', ',', 'NULL', ')', ';', 'if', '(', '!usb_debug_root', ')', 'return', '-', 'ENOENT', ';', 'usb_debug_devices', '=', 'debugfs_create_file', '(', '""""', ',', '0444', ',', 'usb_debug_root', ',', 'NULL', ',', '&', 'usbfs_devices_fops', ')', ';', 'if', '(', '!usb_debug_devices', ')', '{', 'debugfs_remove', '(', 'usb_debug_root', ')', ';', 'usb_debug_root', '=', 'NULL', ';', 'return', '-', 'ENOENT', ';', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1547,"['grokclassfn', '(', 'tree', 'ctype', ',', 'tree', 'function', ',', 'enum', 'overload_flags', 'flags', ',', 'tree', 'quals', ')', '{', 'tree', 'fn_name', '=', 'DECL_NAME', '(', 'function', ')', ';', 'int', 'this_quals', '=', 'TYPE_UNQUALIFIED', ';', '/', '*', 'Even', 'within', 'an', '`extern', '""""\'', 'block', ',', 'members', 'get', 'C', '++', 'linkage', '.', 'SET_DECL_LANGUAGE', '(', 'function', ',', 'lang_cplusplus', ')', ';', 'if', '(', 'fn_name', '==', 'NULL_TREE', ')', '{', 'error', '(', '""""', ')', ';', 'fn_name', '=', 'get_identifier', '(', '""""', ')', ';', 'DECL_NAME', '(', 'function', ')', '=', 'fn_name', ';', '}', 'if', '(', 'quals', ')', 'this_quals', '=', 'grok_method_quals', '(', 'ctype', ',', 'function', ',', 'quals', ')', ';', 'if', '(', 'TREE_CODE', '(', 'TREE_TYPE', '(', 'function', ')', ')', '==', 'METHOD_TYPE', ')', '{', '/', '*', 'Right', 'now', 'we', 'just', 'make', 'this', 'a', 'pointer', '.', 'But', 'tree', 'type', '=', 'TREE_VALUE', '(', 'TYPE_ARG_TYPES', '(', 'TREE_TYPE', '(', 'function', ')', ')', ')', ';', 'tree', 'qual_type', ';', 'tree', 'parm', ';', '/', '*', 'The', ""`this''"", ';', 'it', 'cannot', 'this_quals', '|=', 'TYPE_QUAL_CONST', ';', 'qual_type', '=', 'cp_build_qualified_type', '(', 'type', ',', 'this_quals', ')', ';', 'parm', '=', 'build_artificial_parm', '(', 'this_identifier', ',', 'qual_type', ')', ';', 'c_apply_type_quals_to_decl', '(', 'this_quals', ',', 'parm', ')', ';', 'TREE_CHAIN', '(', 'parm', ')', '=', 'DECL_ARGUMENTS', '(', 'function', ')', ';', 'DECL_ARGUMENTS', '(', 'function', ')', '=', 'parm', ';', '}', 'DECL_CONTEXT', '(', 'function', ')', '=', 'ctype', ';', 'if', '(', 'flags', '==', 'DTOR_FLAG', ')', 'DECL_DESTRUCTOR_P', '(', 'function', ')', '=', '1', ';', 'if', '(', 'flags', '==', 'DTOR_FLAG', '||', 'DECL_CONSTRUCTOR_P', '(', 'function', ')', ')', 'maybe_retrofit_in_chrg', '(', 'function', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1548,"['print_element_list', '(', 'gboolean', 'print_all', ')', '{', 'int', 'plugincount', '=', '0', ',', 'featurecount', '=', '0', ',', 'blacklistcount', '=', '0', ';', 'GList', '*', 'plugins', ',', '*', 'orig_plugins', ';', 'orig_plugins', '=', 'plugins', '=', 'gst_default_registry_get_plugin_list', '(', ')', ';', 'while', '(', 'plugins', ')', '{', 'GList', '*', 'features', ',', '*', 'orig_features', ';', 'GstPlugin', '*', 'plugin', ';', 'plugin', '=', '(', 'GstPlugin', '*', ')', '(', 'plugins', '->', 'data', ')', ';', 'plugins', '=', 'g_list_next', '(', 'plugins', ')', ';', 'plugincount', '++', ';', 'if', '(', 'plugin', '->', 'flags', '&', 'GST_PLUGIN_FLAG_BLACKLISTED', ')', '{', 'blacklistcount', '++', ';', 'continue', ';', '}', 'orig_features', '=', 'features', '=', 'gst_registry_get_feature_list_by_plugin', '(', 'gst_registry_get_default', '(', ')', ',', 'plugin', '->', 'desc', '.', 'name', ')', ';', 'while', '(', 'features', ')', '{', 'GstPluginFeature', '*', 'feature', ';', 'if', '(', 'G_UNLIKELY', '(', 'features', '->', 'data', '==', 'NULL', ')', ')', 'goto', 'next', ';', 'feature', '=', 'GST_PLUGIN_FEATURE', '(', 'features', '->', 'data', ')', ';', 'featurecount', '++', ';', 'if', '(', 'GST_IS_ELEMENT_FACTORY', '(', 'feature', ')', ')', '{', 'GstElementFactory', '*', 'factory', ';', 'factory', '=', 'GST_ELEMENT_FACTORY', '(', 'feature', ')', ';', 'if', '(', 'print_all', ')', 'print_element_info', '(', 'factory', ',', 'TRUE', ')', ';', 'g_print', '(', '""""', ',', 'plugin', '->', 'desc', '.', 'name', ',', 'GST_PLUGIN_FEATURE_NAME', '(', 'factory', ')', ',', 'gst_element_factory_get_longname', '(', 'factory', ')', ')', ';', '}', 'else', 'if', '(', 'GST_IS_INDEX_FACTORY', '(', 'feature', ')', ')', '{', 'GstIndexFactory', '*', 'factory', ';', 'factory', '=', 'GST_INDEX_FACTORY', '(', 'feature', ')', ';', 'if', '(', '!print_all', ')', 'g_print', '(', '""""', ',', 'plugin', '->', 'desc', '.', 'name', ',', 'GST_PLUGIN_FEATURE_NAME', '(', 'factory', ')', ',', 'factory', '->', 'longdesc', ')', ';', '}', 'else', 'if', '(', 'GST_IS_TYPE_FIND_FACTORY', '(', 'feature', ')', ')', '{', 'GstTypeFindFactory', '*', 'factory', ';', 'factory', '=', 'GST_TYPE_FIND_FACTORY', '(', 'feature', ')', ';', 'if', '(', '!print_all', ')', 'g_print', '(', '""""', ',', 'plugin', '->', 'desc', '.', 'name', ',', 'gst_plugin_feature_get_name', '(', 'feature', ')', ')', ';', 'if', '(', 'factory', '->', 'extensions', ')', '{', 'guint', 'i', '=', '0', ';', 'while', '(', 'factory', '->', 'extensions', '[', 'i', ']', ')', '{', 'if', '(', '!print_all', ')', 'g_print', '(', '""""', ',', 'i', '>', '0', '?', '""""', ':', '""""', ',', 'factory', '->', 'extensions', '[', 'i', ']', ')', ';', 'i', '++', ';', '}', 'if', '(', '!print_all', ')', 'g_print', '(', '""""', ')', ';', '}', 'else', '{', 'if', '(', '!print_all', ')', 'g_print', '(', '""""', ')', ';', '}', '}', 'else', '{', 'if', '(', '!print_all', ')', 'n_print', '(', '""""', ',', 'plugin', '->', 'desc', '.', 'name', ',', 'GST_PLUGIN_FEATURE_NAME', '(', 'feature', ')', ',', 'g_type_name', '(', 'G_OBJECT_TYPE', '(', 'feature', ')', ')', ')', ';', '}', 'next', ':', 'features', '=', 'g_list_next', '(', 'features', ')', ';', '}', 'gst_plugin_feature_list_free', '(', 'orig_features', ')', ';', '}', 'gst_plugin_list_free', '(', 'orig_plugins', ')', ';', 'g_print', '(', '""""', ')', ';', 'g_print', '(', '_', '(', '""""', ')', ')', ';', 'g_print', '(', 'ngettext', '(', '""""', ',', '""""', ',', 'plugincount', ')', ',', 'plugincount', ')', ';', 'if', '(', 'blacklistcount', ')', '{', 'g_print', '(', '""""', ')', ';', 'g_print', '(', 'ngettext', '(', '""""', ',', '""""', ',', 'blacklistcount', ')', ',', 'blacklistcount', ')', ';', 'g_print', '(', '""""', ')', ';', '}', 'g_print', '(', '""""', ')', ';', 'g_print', '(', 'ngettext', '(', '""""', ',', '""""', ',', 'featurecount', ')', ',', 'featurecount', ')', ';', 'g_print', '(', '""""', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
1549,"['sg_load_map_owner', '(', 'struct', 'loaddata', '*', 'loading', ')', '{', 'int', 'x', ',', 'y', ';', 'struct', 'player', '*', 'owner', '=', 'NULL', ';', 'struct', 'tile', '*', 'claimer', '=', 'NULL', ';', 'sg_check_ret', '(', ')', ';', 'if', '(', 'game', '.', 'info', '.', 'is_new_game', ')', '{', 'return', ';', '}', 'for', '(', 'y', '=', '0', ';', 'y', '<', 'map', '.', 'ysize', ';', 'y', '++', ')', '{', 'const', 'char', '*', 'buffer1', '=', 'secfile_lookup_str', '(', 'loading', '->', 'file', ',', '""""', ',', 'y', ')', ';', 'const', 'char', '*', 'buffer2', '=', 'secfile_lookup_str', '(', 'loading', '->', 'file', ',', '""""', ',', 'y', ')', ';', 'const', 'char', '*', 'ptr1', '=', 'buffer1', ';', 'const', 'char', '*', 'ptr2', '=', 'buffer2', ';', 'sg_failure_ret', '(', 'buffer1', '!=', 'NULL', ',', '""""', ',', 'secfile_error', '(', ')', ')', ';', 'sg_failure_ret', '(', 'buffer2', '!=', 'NULL', ',', '""""', ',', 'secfile_error', '(', ')', ')', ';', 'for', '(', 'x', '=', '0', ';', 'x', '<', 'map', '.', 'xsize', ';', 'x', '++', ')', '{', 'char', 'token1', '[', 'TOKEN_SIZE', ']', ';', 'char', 'token2', '[', 'TOKEN_SIZE', ']', ';', 'int', 'number', ';', 'struct', 'tile', '*', 'ptile', '=', 'native_pos_to_tile', '(', 'x', ',', 'y', ')', ';', 'scanin', '(', '&', 'ptr1', ',', '""""', ',', 'token1', ',', 'sizeof', '(', 'token1', ')', ')', ';', 'sg_failure_ret', '(', 'token1', '[', '0', ']', '!=', ""''"", ',', '""""', ',', 'y', ')', ';', 'if', '(', 'strcmp', '(', 'token1', ',', '""""', ')', '==', '0', ')', '{', 'owner', '=', 'NULL', ';', '}', 'else', '{', 'sg_failure_ret', '(', 'str_to_int', '(', 'token1', ',', '&', 'number', ')', ',', '""""', ',', 'token1', ',', 'x', ',', 'y', ')', ';', 'owner', '=', 'player_by_number', '(', 'number', ')', ';', '}', 'scanin', '(', '&', 'ptr2', ',', '""""', ',', 'token2', ',', 'sizeof', '(', 'token2', ')', ')', ';', 'sg_failure_ret', '(', 'token2', '[', '0', ']', '!=', ""''"", ',', '""""', ',', 'y', ')', ';', 'if', '(', 'strcmp', '(', 'token2', ',', '""""', ')', '==', '0', ')', '{', 'claimer', '=', 'NULL', ';', '}', 'else', '{', 'sg_failure_ret', '(', 'str_to_int', '(', 'token2', ',', '&', 'number', ')', ',', '""""', ',', 'token2', ',', 'x', ',', 'y', ')', ';', 'claimer', '=', 'index_to_tile', '(', 'number', ')', ';', '}', 'map_claim_ownership', '(', 'ptile', ',', 'owner', ',', 'claimer', ')', ';', '}', '}', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1550,"['test_close_parent', '(', 'hid_t', 'fapl', ')', '{', 'char\tfilename1', '[', '1024', ']', ',', 'TESTING', '(', '""""', ')', ';', 'h5_fixname', '(', 'FILENAME', '[', '0', ']', ',', 'fapl', ',', 'filename1', ',', 'sizeof', 'filename1', ')', ';', 'h5_fixname', '(', 'FILENAME', '[', '1', ']', ',', 'fapl', ',', 'filename2', ',', 'sizeof', 'filename2', ')', ';', 'if', '(', '(', 'fid1', '=', 'H5Fcreate', '(', 'filename1', ',', 'H5F_ACC_TRUNC', ',', 'H5P_DEFAULT', ',', 'H5P_DEFAULT', ')', ')', '<', '0', ')', 'if', '(', '(', 'gidA', '=', 'H5Gcreate2', '(', 'fid1', ',', '""""', ',', 'H5P_DEFAULT', ',', 'H5P_DEFAULT', ',', 'H5P_DEFAULT', ')', ')', '<', '0', ')', 'if', '(', 'H5Gclose', '(', 'gidA', ')', '<', '0', ')', 'if', '(', 'H5Fclose', '(', 'fid1', ')', '<', '0', ')', 'if', '(', '(', 'fid2', '=', 'H5Fcreate', '(', 'filename2', ',', 'H5F_ACC_TRUNC', ',', 'H5P_DEFAULT', ',', 'H5P_DEFAULT', ')', ')', '<', '0', ')', 'if', '(', '(', 'gidM', '=', 'H5Gcreate2', '(', 'fid2', ',', '""""', ',', 'H5P_DEFAULT', ',', 'H5P_DEFAULT', ',', 'H5P_DEFAULT', ')', ')', '<', '0', ')', 'if', '(', 'H5Gclose', '(', 'gidM', ')', '<', '0', ')', 'if', '(', 'H5Fclose', '(', 'fid2', ')', '<', '0', ')', 'if', '(', '(', 'fid1', '=', 'H5Fopen', '(', 'filename1', ',', 'H5F_ACC_RDONLY', ',', 'H5P_DEFAULT', ')', ')', '<', '0', ')', 'if', '(', '(', 'gidA', '=', 'H5Gopen2', '(', 'fid1', ',', '""""', ',', 'H5P_DEFAULT', ')', ')', '<', '0', ')', 'if', '(', '(', 'fid2', '=', 'H5Fopen', '(', 'filename2', ',', 'H5F_ACC_RDONLY', ',', 'H5P_DEFAULT', ')', ')', '<', '0', ')', 'if', '(', 'H5Fmount', '(', 'gidA', ',', '""""', ',', 'fid2', ',', 'H5P_DEFAULT', ')', '<', '0', ')', 'if', '(', '(', 'gidM', '=', 'H5Gopen2', '(', 'fid1', ',', '""""', ',', 'H5P_DEFAULT', ')', ')', '<', '0', ')', 'if', '(', 'H5Gclose', '(', 'gidA', ')', '<', '0', ')', 'if', '(', 'H5Fclose', '(', 'fid1', ')', '<', '0', ')', 'if', '(', 'H5Fclose', '(', 'fid2', ')', '<', '0', ')', 'if', '(', 'H5I_nmembers', '(', 'H5I_FILE', ')', '!=', '0', ')', 'H5F_sfile_assert_num', '(', '2', ')', ';', '*', 'name', '=', ""''"", ';', 'if', '(', '(', 'name_len', '=', 'H5Iget_name', '(', 'gidM', ',', 'name', ',', '(', 'size_t', ')', 'NAME_BUF_SIZE', ')', ')', '<', '0', ')', 'if', '(', 'name_len', '==', '0', '||', 'HDstrcmp', '(', 'name', ',', '""""', ')', ')', 'if', '(', 'H5Funmount', '(', 'gidM', ',', '""""', ')', '<', '0', ')', '*', 'name', '=', ""''"", ';', 'if', '(', '(', 'name_len', '=', 'H5Iget_name', '(', 'gidM', ',', 'name', ',', '(', 'size_t', ')', 'NAME_BUF_SIZE', ')', ')', '<', '0', ')', 'if', '(', 'name_len', '==', '0', '||', 'HDstrcmp', '(', 'name', ',', '""""', ')', ')', 'H5F_sfile_assert_num', '(', '1', ')', ';', 'if', '(', 'H5Gclose', '(', 'gidM', ')', '<', '0', ')', 'H5F_sfile_assert_num', '(', '0', ')', ';', 'PASSED', '(', ')', ';', 'return', '0', ';', 'error', ':', 'H5E_BEGIN_TRY', '{', 'H5Gclose', '(', 'gidM', ')', ';', 'H5Gclose', '(', 'gidA', ')', ';', 'H5Fclose', '(', 'fid2', ')', ';', 'H5Fclose', '(', 'fid1', ')', ';', '}', 'H5E_END_TRY', ';', 'return', '1', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  True,CWE-476  False,CWE-other  False
1551,"['InitHighscores', '(', 'void', ')', '{', 'int', 'i', ';', 'char', 'fname', '[', '255', ']', ';', 'FILE', '*', 'file', '=', 'NULL', ';', 'if', '(', 'ConfigDir', '[', '0', ']', '!=', ""''"", ')', '{', 'sprintf', '(', 'fname', ',', '""""', ',', 'ConfigDir', ')', ';', 'if', '(', '(', 'file', '=', 'fopen', '(', 'fname', ',', '""""', ')', ')', '==', 'NULL', ')', 'DebugPrintf', '(', '1', ',', '""""', ')', ';', '}', 'Highscores', '=', 'MyMalloc', '(', 'num_highscores', '*', 'sizeof', '(', 'Highscore_entry', ')', '+', '10', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'num_highscores', ';', 'i', '++', ')', '{', 'Highscores', '[', 'i', ']', '=', 'MyMalloc', '(', 'sizeof', '(', 'highscore_entry', ')', ')', ';', 'if', '(', 'file', ')', 'fread', '(', 'Highscores', '[', 'i', ']', ',', 'sizeof', '(', 'highscore_entry', ')', ',', 'sizeof', '(', 'char', ')', ',', 'file', ')', ';', '{', 'strcpy', '(', 'Highscores', '[', 'i', ']', '->', 'name', ',', 'HS_EMPTY_ENTRY', ')', ';', 'strcpy', '(', 'Highscores', '[', 'i', ']', '->', 'date', ',', '""""', ')', ';', 'Highscores', '[', 'i', ']', '->', 'score', '=', '-', '1', ';', '}', '}', 'if', '(', 'file', ')', 'fclose', '(', 'file', ')', ';', 'return', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1552,"['user_print2', '(', 'hid_t', 'err_stack', ',', 'FILE', '*', 'stream', ')', '{', 'fprintf', '(', 'stderr', ',', '""""', ')', ';', 'if', '(', 'H5Ewalk2', '(', 'err_stack', ',', 'H5E_WALK_UPWARD', ',', '(', 'H5E_walk2_t', ')', 'custom_print_cb2', ',', 'stream', ')', '<', '0', ')', 'TEST_ERROR', ';', 'return', '0', ';', 'error', ':', 'return', '-', '1', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1553,"['clear_newcaps_for_pt', '(', 'GstRtpPtDemux', '*', 'rtpdemux', ',', 'guint8', 'pt', ')', '{', 'GSList', '*', 'walk', ';', 'GST_OBJECT_LOCK', '(', 'rtpdemux', ')', ';', 'for', '(', 'walk', '=', 'rtpdemux', '->', 'srcpads', ';', 'walk', ';', 'walk', '=', 'g_slist_next', '(', 'walk', ')', ')', '{', 'GstRtpPtDemuxPad', '*', 'pad', '=', 'walk', '->', 'data', ';', 'if', '(', 'pad', '->', 'pt', '==', 'pt', ')', '{', 'pad', '->', 'newcaps', '=', 'FALSE', ';', 'break', ';', '}', '}', 'GST_OBJECT_UNLOCK', '(', 'rtpdemux', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1554,"['addModule', '(', 'const', 'QString', '&', 'module', ')', '{', '/', '*', 'In', 'case', 'it', ""doesn't"", 'exist', 'we', 'just', 'silently', 'drop', 'it', '.', '*', 'This', 'allows', 'people', 'to', 'easily', 'extend', 'containers', '.', '*', 'For', 'example', ',', 'KCM', 'monitor', 'gamma', 'can', 'be', 'in', 'kdegraphics', '.', 'KService', ':', ':', 'Ptr', 'service', '=', 'KService', ':', ':', 'serviceByDesktopName', '(', 'module', ')', ';', 'if', '(', '!service', ')', '{', 'kDebug', '(', '713', ')', '<<', '""""', '<<', 'module', '<<', '""""', '<<', 'endl', ';', 'return', ';', '}', 'if', '(', 'service', '->', 'noDisplay', '(', ')', ')', 'return', ';', 'KCModuleProxy', '*', 'proxy', '=', 'new', 'KCModuleProxy', '(', 'service', ',', 'd', '->', 'tabWidget', ')', ';', 'allModules', '.', 'append', '(', 'proxy', ')', ';', 'proxy', '->', 'setObjectName', '(', 'module', '.', 'toLatin1', '(', ')', ')', ';', 'd', '->', 'tabWidget', '->', 'addTab', '(', 'proxy', ',', 'KIcon', '(', 'proxy', '->', 'moduleInfo', '(', ')', '.', 'icon', '(', ')', ')', ',', 'proxy', '->', 'moduleInfo', '(', ')', '.', 'moduleName', '(', ')', '.', 'replace', '(', ""''"", ',', '""""', ')', ')', ';', 'd', '->', 'tabWidget', '->', 'setTabToolTip', '(', 'd', '->', 'tabWidget', '->', 'indexOf', '(', 'proxy', ')', ',', 'proxy', '->', 'moduleInfo', '(', ')', '.', 'comment', '(', ')', ')', ';', 'connect', '(', 'proxy', ',', 'SIGNAL', '(', 'changed', '(', 'KCModuleProxy', '*', ')', ')', ',', 'SLOT', '(', 'moduleChanged', '(', 'KCModuleProxy', '*', ')', ')', ')', ';', 'setButtons', '(', 'buttons', '(', ')', '|', 'proxy', '->', 'realModule', '(', ')', '->', 'buttons', '(', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1555,"['NewSceneStats', '(', ')', '{', 'GF_SceneStatistics', '*', 'tmp', ';', 'GF_SAFEALLOC', '(', 'tmp', ',', 'GF_SceneStatistics', ')', ';', 'tmp', '->', 'node_stats', '=', 'gf_list_new', '(', ')', ';', 'tmp', '->', 'proto_stats', '=', 'gf_list_new', '(', ')', ';', 'tmp', '->', 'max_2d', '.', 'x', '=', 'FIX_MIN', ';', 'tmp', '->', 'max_2d', '.', 'y', '=', 'FIX_MIN', ';', 'tmp', '->', 'max_3d', '.', 'x', '=', 'FIX_MIN', ';', 'tmp', '->', 'max_3d', '.', 'y', '=', 'FIX_MIN', ';', 'tmp', '->', 'max_3d', '.', 'z', '=', 'FIX_MIN', ';', 'tmp', '->', 'min_2d', '.', 'x', '=', 'FIX_MAX', ';', 'tmp', '->', 'min_2d', '.', 'y', '=', 'FIX_MAX', ';', 'tmp', '->', 'min_3d', '.', 'x', '=', 'FIX_MAX', ';', 'tmp', '->', 'min_3d', '.', 'y', '=', 'FIX_MAX', ';', 'tmp', '->', 'min_3d', '.', 'z', '=', 'FIX_MAX', ';', 'return', 'tmp', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
1556,"['dav_fs_patch_rollback', '(', 'const', 'dav_resource', '*', 'resource', ',', 'int', 'operation', ',', 'void', '*', 'context', ',', 'dav_liveprop_rollback', '*', 'rollback_ctx', ')', '{', 'apr_fileperms_t', 'perms', '=', 'resource', '->', 'info', '->', 'finfo', '.', 'protection', '&', '~APR_UEXECUTE', ';', 'apr_status_t', 'status', ';', 'int', 'value', '=', 'rollback_ctx', '!=', 'NULL', ';', 'if', '(', 'value', ')', 'perms', '|=', 'APR_UEXECUTE', ';', 'if', '(', '(', 'status', '=', 'apr_file_perms_set', '(', 'resource', '->', 'info', '->', 'pathname', ',', 'perms', ')', ')', '!=', 'APR_SUCCESS', ')', '{', 'return', 'dav_new_error', '(', 'resource', '->', 'info', '->', 'pool', ',', 'HTTP_INTERNAL_SERVER_ERROR', ',', '0', ',', 'status', ',', '""""', ')', ';', '}', 'resource', '->', 'info', '->', 'finfo', '.', 'protection', '=', 'perms', ';', 'return', 'NULL', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1557,"['elm_entry_context_menu_clear', '(', 'Evas_Object', '*', 'obj', ')', '{', 'ELM_CHECK_WIDTYPE', '(', 'obj', ',', 'widtype', ')', ';', 'Widget_Data', '*', 'wd', '=', 'elm_widget_data_get', '(', 'obj', ')', ';', 'Elm_Entry_Context_Menu_Item', '*', 'it', ';', 'if', '(', '!wd', ')', 'return', ';', 'EINA_LIST_FREE', '(', 'wd', '->', 'items', ',', 'it', ')', '{', 'eina_stringshare_del', '(', 'it', '->', 'label', ')', ';', 'eina_stringshare_del', '(', 'it', '->', 'icon_file', ')', ';', 'eina_stringshare_del', '(', 'it', '->', 'icon_group', ')', ';', 'free', '(', 'it', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1558,"['error_exit_client', '(', 'struct', 'Client', '*', 'client_p', ',', 'int', 'error', ')', '{', '/', '*', '*', '.', '.', '.', 'hmm', ',', 'with', 'non', '-', 'blocking', 'sockets', 'we', 'might', '*', 'here', 'from', 'quite', 'valid', 'reasons', ',', 'although', '.', '.', '*', 'would', 'select', 'report', '""""', 'when', '*', ""wasn't"", '.', '.', '.', 'so', ',', 'this', 'must', 'be', 'an', 'error', 'anyway', '.', '.', '.', '--', '*', 'actually', ',', 'EOF', 'occurs', 'when', 'read', '(', ')', 'returns', '0', '*', 'in', 'due', 'course', ',', 'select', '(', ')', 'returns', 'that', 'fd', 'as', '*', 'for', 'reading', 'even', 'though', 'it', 'ends', 'up', 'being', 'an', 'EOF', '.', '-', 'char', 'errmsg', '[', '255', ']', ';', 'int', 'current_error', '=', 'rb_get_sockerr', '(', 'client_p', '->', 'localClient', '->', 'F', ')', ';', 'SetIOError', '(', 'client_p', ')', ';', 'if', '(', 'IsServer', '(', 'client_p', ')', '||', 'IsHandshake', '(', 'client_p', ')', ')', '{', 'if', '(', 'error', '==', '0', ')', '{', 'sendto_realops_snomask', '(', 'SNO_GENERAL', ',', 'is_remote_connect', '(', 'client_p', ')', '&&', '!IsServer', '(', 'client_p', ')', '?', 'L_NETWIDE', ':', 'L_ALL', ',', '""""', ',', 'client_p', '->', 'name', ')', ';', 'ilog', '(', 'L_SERVER', ',', '""""', ',', 'log_client_name', '(', 'client_p', ',', 'SHOW_IP', ')', ')', ';', '}', '{', 'sendto_realops_snomask', '(', 'SNO_GENERAL', ',', 'is_remote_connect', '(', 'client_p', ')', '&&', '!IsServer', '(', 'client_p', ')', '?', 'L_NETWIDE', ':', 'L_ALL', ',', '""""', ',', 'client_p', '->', 'name', ',', 'strerror', '(', 'current_error', ')', ')', ';', 'ilog', '(', 'L_SERVER', ',', '""""', ',', 'log_client_name', '(', 'client_p', ',', 'SHOW_IP', ')', ',', 'strerror', '(', 'current_error', ')', ')', ';', '}', '}', 'if', '(', 'error', '==', '0', ')', 'rb_strlcpy', '(', 'errmsg', ',', '""""', ',', 'sizeof', '(', 'errmsg', ')', ')', ';', 'rb_snprintf', '(', 'errmsg', ',', 'sizeof', '(', 'errmsg', ')', ',', '""""', ',', 'strerror', '(', 'current_error', ')', ')', ';', 'exit_client', '(', 'client_p', ',', 'client_p', ',', '&', 'me', ',', 'errmsg', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1559,"['wbcir_idle_rx', '(', 'struct', 'rc_dev', '*', 'dev', ',', 'bool', 'idle', ')', '{', 'struct', 'wbcir_data', '*', 'data', '=', 'dev', '->', 'priv', ';', 'if', '(', '!idle', '&&', 'data', '->', 'rxstate', '==', 'WBCIR_RXSTATE_INACTIVE', ')', 'data', '->', 'rxstate', '=', 'WBCIR_RXSTATE_ACTIVE', ';', 'if', '(', 'idle', '&&', 'data', '->', 'rxstate', '!=', 'WBCIR_RXSTATE_INACTIVE', ')', '{', 'data', '->', 'rxstate', '=', 'WBCIR_RXSTATE_INACTIVE', ';', 'if', '(', 'data', '->', 'carrier_report_enabled', ')', 'wbcir_carrier_report', '(', 'data', ')', ';', 'outb', '(', 'WBCIR_RX_DISABLE', ',', 'data', '->', 'sbase', '+', 'WBCIR_REG_SP3_ASCR', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1560,"['RangeCreate', '(', 'Oid', 'rangeTypeOid', ',', 'Oid', 'rangeSubType', ',', 'Oid', 'rangeCollation', ',', 'Oid', 'rangeSubOpclass', ',', 'RegProcedure', 'rangeCanonical', ',', 'RegProcedure', 'rangeSubDiff', ')', '{', 'Relation\tpg_range', ';', 'Datum\t\tvalues', '[', 'Natts_pg_range', ']', ';', 'bool\t\tnulls', '[', 'Natts_pg_range', ']', ';', 'HeapTuple\ttup', ';', 'ObjectAddress', 'myself', ';', 'ObjectAddress', 'referenced', ';', 'pg_range', '=', 'heap_open', '(', 'RangeRelationId', ',', 'RowExclusiveLock', ')', ';', 'memset', '(', 'nulls', ',', '0', ',', 'sizeof', '(', 'nulls', ')', ')', ';', 'values', '[', 'Anum_pg_range_rngtypid', '-', '1', ']', '=', 'ObjectIdGetDatum', '(', 'rangeTypeOid', ')', ';', 'values', '[', 'Anum_pg_range_rngsubtype', '-', '1', ']', '=', 'ObjectIdGetDatum', '(', 'rangeSubType', ')', ';', 'values', '[', 'Anum_pg_range_rngcollation', '-', '1', ']', '=', 'ObjectIdGetDatum', '(', 'rangeCollation', ')', ';', 'values', '[', 'Anum_pg_range_rngsubopc', '-', '1', ']', '=', 'ObjectIdGetDatum', '(', 'rangeSubOpclass', ')', ';', 'values', '[', 'Anum_pg_range_rngcanonical', '-', '1', ']', '=', 'ObjectIdGetDatum', '(', 'rangeCanonical', ')', ';', 'values', '[', 'Anum_pg_range_rngsubdiff', '-', '1', ']', '=', 'ObjectIdGetDatum', '(', 'rangeSubDiff', ')', ';', 'tup', '=', 'heap_form_tuple', '(', 'RelationGetDescr', '(', 'pg_range', ')', ',', 'values', ',', 'nulls', ')', ';', 'simple_heap_insert', '(', 'pg_range', ',', 'tup', ')', ';', 'CatalogUpdateIndexes', '(', 'pg_range', ',', 'tup', ')', ';', 'heap_freetuple', '(', 'tup', ')', ';', 'myself', '.', 'classId', '=', 'TypeRelationId', ';', 'myself', '.', 'objectId', '=', 'rangeTypeOid', ';', 'myself', '.', 'objectSubId', '=', '0', ';', 'referenced', '.', 'classId', '=', 'TypeRelationId', ';', 'referenced', '.', 'objectId', '=', 'rangeSubType', ';', 'referenced', '.', 'objectSubId', '=', '0', ';', 'recordDependencyOn', '(', '&', 'myself', ',', '&', 'referenced', ',', 'DEPENDENCY_NORMAL', ')', ';', 'referenced', '.', 'classId', '=', 'OperatorClassRelationId', ';', 'referenced', '.', 'objectId', '=', 'rangeSubOpclass', ';', 'referenced', '.', 'objectSubId', '=', '0', ';', 'recordDependencyOn', '(', '&', 'myself', ',', '&', 'referenced', ',', 'DEPENDENCY_NORMAL', ')', ';', 'if', '(', 'OidIsValid', '(', 'rangeCollation', ')', ')', '{', 'referenced', '.', 'classId', '=', 'CollationRelationId', ';', 'referenced', '.', 'objectId', '=', 'rangeCollation', ';', 'referenced', '.', 'objectSubId', '=', '0', ';', 'recordDependencyOn', '(', '&', 'myself', ',', '&', 'referenced', ',', 'DEPENDENCY_NORMAL', ')', ';', '}', 'if', '(', 'OidIsValid', '(', 'rangeCanonical', ')', ')', '{', 'referenced', '.', 'classId', '=', 'ProcedureRelationId', ';', 'referenced', '.', 'objectId', '=', 'rangeCanonical', ';', 'referenced', '.', 'objectSubId', '=', '0', ';', 'recordDependencyOn', '(', '&', 'myself', ',', '&', 'referenced', ',', 'DEPENDENCY_NORMAL', ')', ';', '}', 'if', '(', 'OidIsValid', '(', 'rangeSubDiff', ')', ')', '{', 'referenced', '.', 'classId', '=', 'ProcedureRelationId', ';', 'referenced', '.', 'objectId', '=', 'rangeSubDiff', ';', 'referenced', '.', 'objectSubId', '=', '0', ';', 'recordDependencyOn', '(', '&', 'myself', ',', '&', 'referenced', ',', 'DEPENDENCY_NORMAL', ')', ';', '}', 'heap_close', '(', 'pg_range', ',', 'RowExclusiveLock', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1561,"['meter_ptime', '(', 'double', 't', ',', 'char', '*', 's', ',', 'double', 'elapsed', ')', '{', 'long', 'hour', ';', 'long', 'min', ';', 'long', 'sec', ';', 'long', 'frac', ';', 'char', 'buffer', '[', '50', ']', ';', 'if', '(', 'elapsed', '>', '0', ')', 'snprintf', '(', 'buffer', ',', 'sizeof', '(', 'buffer', ')', ',', '""""', ',', '100', '.', '*', 't', '/', 'elapsed', ')', ';', 'buffer', '[', '0', ']', '=', '0', ';', 'frac', '=', 't', '*', '1000', '+', '0', '.', '5', ';', 'sec', '=', 'frac', '/', '1000', ';', 'frac', '%=', '1000', ';', 'min', '=', 'sec', '/', '60', ';', 'sec', '%=', '60', ';', 'hour', '=', 'min', '/', '60', ';', 'min', '%=', '60', ';', '(', 'stderr', ',', '""""', ',', 'hour', ',', 'min', ',', 'sec', ',', 'frac', ',', 's', ',', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1562,"['ifx_spi_power_state_clear', '(', 'struct', 'ifx_spi_device', '*', 'ifx_dev', ',', 'unsigned', 'char', 'val', ')', '{', 'unsigned', 'long', 'flags', ';', 'spin_lock_irqsave', '(', '&', 'ifx_dev', '->', 'power_lock', ',', 'flags', ')', ';', 'if', '(', 'ifx_dev', '->', 'power_status', ')', '{', 'ifx_dev', '->', 'power_status', '&=', '~val', ';', 'if', '(', '!ifx_dev', '->', 'power_status', ')', 'pm_runtime_put', '(', '&', 'ifx_dev', '->', 'spi_dev', '->', 'dev', ')', ';', '}', 'spin_unlock_irqrestore', '(', '&', 'ifx_dev', '->', 'power_lock', ',', 'flags', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1563,"['config_set_hash_filters', '(', 'const', 'char', '*', 'attrname', ',', 'char', '*', 'value', ',', 'char', '*', 'errorbuf', ',', 'int', 'apply', ')', '{', 'int', 'val', '=', '0', ';', 'int', 'retVal', '=', 'LDAP_SUCCESS', ';', 'retVal', '=', 'config_set_onoff', '(', 'attrname', ',', 'value', ',', '&', 'val', ',', 'errorbuf', ',', 'apply', ')', ';', 'if', '(', 'retVal', '==', 'LDAP_SUCCESS', ')', '{', 'set_hash_filters', '(', 'val', ')', ';', '}', 'return', 'retVal', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1564,"['appendTo', '(', 'UChar', '*', 'buffer', ',', 'int32_t', '*', 'len', ')', 'const', '{', 'int32_t', 'origLen', '=', '*', 'len', ';', 'int32_t', 'kId', '=', 'id', ';', 'for', '(', 'int32_t', 'i', '=', 'origLen', '+', 'idLen', '-', '1', ';', 'i', '>=', 'origLen', ';', 'i', '--', ')', '{', 'int32_t', 'digit', '=', 'kId', '%', '10', ';', 'buffer', '[', 'i', ']', '=', 'digit', '+', '0x30', ';', 'kId', '/=', '10', ';', '}', '*', 'len', '=', 'origLen', '+', 'idLen', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1565,"['gudev_add_device', '(', 'GMtpVolumeMonitor', '*', 'monitor', ',', 'GUdevDevice', '*', 'device', ',', 'gboolean', 'do_emit', ')', '{', 'GMtpVolume', '*', 'volume', ';', 'const', 'char', '*', 'usb_bus_num', ',', '*', 'usb_device_num', ';', 'char', '*', 'uri', ';', 'GFile', '*', 'activation_mount_root', ';', 'usb_bus_num', '=', 'g_udev_device_get_property', '(', 'device', ',', '""""', ')', ';', 'if', '(', 'usb_bus_num', '==', 'NULL', ')', '{', 'g_warning', '(', '""""', ',', 'g_udev_device_get_device_file', '(', 'device', ')', ')', ';', 'return', ';', '}', 'usb_device_num', '=', 'g_udev_device_get_property', '(', 'device', ',', '""""', ')', ';', 'if', '(', 'usb_device_num', '==', 'NULL', ')', '{', 'g_warning', '(', '""""', ',', 'g_udev_device_get_device_file', '(', 'device', ')', ')', ';', 'return', ';', '}', 'g_debug', '(', '""""', ',', 'g_udev_device_get_device_file', '(', 'device', ')', ',', 'usb_bus_num', ',', 'usb_device_num', ')', ';', 'uri', '=', 'g_strdup_printf', '(', '""""', ',', 'usb_bus_num', ',', 'usb_device_num', ')', ';', 'activation_mount_root', '=', 'g_file_new_for_uri', '(', 'uri', ')', ';', 'g_free', '(', 'uri', ')', ';', 'volume', '=', 'g_mtp_volume_new', '(', 'G_VOLUME_MONITOR', '(', 'monitor', ')', ',', 'device', ',', 'monitor', '->', 'gudev_client', ',', 'activation_mount_root', ')', ';', 'if', '(', 'volume', '!=', 'NULL', ')', '{', 'monitor', '->', 'device_volumes', '=', 'g_list_prepend', '(', 'monitor', '->', 'device_volumes', ',', 'volume', ')', ';', 'if', '(', 'do_emit', ')', 'g_signal_emit_by_name', '(', 'monitor', ',', '""""', ',', 'volume', ')', ';', '}', 'if', '(', 'activation_mount_root', '!=', 'NULL', ')', 'g_object_unref', '(', 'activation_mount_root', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1566,"['voutlet_dspprolog', '(', 'struct', '_voutlet', '*', 'x', ',', 't_signal', '*', '*', 'parentsigs', ',', 'int', 'myvecsize', ',', 'int', 'calcsize', ',', 'int', 'phase', ',', 'int', 'period', ',', 'int', 'frequency', ',', 'int', 'downsample', ',', 'int', 'upsample', ',', 'int', 'reblock', ',', 'int', 'switched', ')', '{', 'if', '(', '!x', '->', 'x_buf', ')', 'return', ';', 'x', '->', 'x_updown', '.', 'downsample', '=', 'downsample', ';', 'x', '->', 'x_updown', '.', 'upsample', '=', 'upsample', ';', 'x', '->', 'x_justcopyout', '=', '(', 'switched', '&&', '!reblock', ')', ';', 'if', '(', 'reblock', ')', '{', 'x', '->', 'x_directsignal', '=', '0', ';', '}', '{', 'if', '(', '!parentsigs', ')', 'bug', '(', '""""', ')', ';', 'x', '->', 'x_directsignal', '=', 'parentsigs', '[', 'outlet_getsignalindex', '(', 'x', '->', 'x_parentoutlet', ')', ']', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
1567,"['build_v2_class_reference_decl', '(', 'tree', 'ident', ')', '{', 'tree', 'decl', ';', 'char', 'buf', '[', 'BUFSIZE', ']', ';', 'snprintf', '(', 'buf', ',', 'BUFSIZE', ',', '""""', ',', 'IDENTIFIER_POINTER', '(', 'ident', ')', ')', ';', 'decl', '=', 'start_var_decl', '(', 'objc_class_type', ',', 'buf', ')', ';', 'OBJCMETA', '(', 'decl', ',', 'objc_meta', ',', 'meta_class_ref', ')', ';', 'return', 'decl', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1568,"['toXml', '(', ')', '{', 'switch', '(', '_type', ')', '{', 'case', 'TypeNil', ':', 'return', 'nilToXml', '(', ')', ';', 'case', 'TypeBoolean', ':', 'return', 'boolToXml', '(', ')', ';', 'case', 'TypeInt', ':', 'return', 'intToXml', '(', ')', ';', 'case', 'TypeDouble', ':', 'return', 'doubleToXml', '(', ')', ';', 'case', 'TypeString', ':', 'return', 'stringToXml', '(', ')', ';', 'case', 'TypeDateTime', ':', 'return', 'timeToXml', '(', ')', ';', 'case', 'TypeBase64', ':', 'return', 'binaryToXml', '(', ')', ';', 'case', 'TypeArray', ':', 'return', 'arrayToXml', '(', ')', ';', 'case', 'TypeStruct', ':', 'return', 'structToXml', '(', ')', ';', 'default', ':', 'break', ';', '}', 'return', 'std', ':', ':', 'string', '(', ')', ';', '/', '/', 'Invalid', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1569,"['send_filter_frame', '(', 'struct', 'net_device', '*', 'dev', ',', 'int', 'mc_cnt', ')', '{', 'struct', 'uli526x_board_info', '*', 'db', '=', 'netdev_priv', '(', 'dev', ')', ';', 'void', '__iomem', '*', 'ioaddr', '=', 'db', '->', 'ioaddr', ';', 'struct', 'netdev_hw_addr', '*', 'ha', ';', 'struct', 'tx_desc', '*', 'txptr', ';', 'u16', '*', 'addrptr', ';', 'u32', '*', 'suptr', ';', 'int', 'i', ';', 'ULI526X_DBUG', '(', '0', ',', '""""', ',', '0', ')', ';', 'txptr', '=', 'db', '->', 'tx_insert_ptr', ';', 'suptr', '=', '(', 'u32', '*', ')', 'txptr', '->', 'tx_buf_ptr', ';', 'addrptr', '=', '(', 'u16', '*', ')', 'dev', '->', 'dev_addr', ';', '*', 'suptr', '++', '=', 'addrptr', '[', '0', ']', '<<', 'FLT_SHIFT', ';', '*', 'suptr', '++', '=', 'addrptr', '[', '1', ']', '<<', 'FLT_SHIFT', ';', '*', 'suptr', '++', '=', 'addrptr', '[', '2', ']', '<<', 'FLT_SHIFT', ';', '*', 'suptr', '++', '=', '0xffff', '<<', 'FLT_SHIFT', ';', '*', 'suptr', '++', '=', '0xffff', '<<', 'FLT_SHIFT', ';', '*', 'suptr', '++', '=', '0xffff', '<<', 'FLT_SHIFT', ';', 'netdev_for_each_mc_addr', '(', 'ha', ',', 'dev', ')', '{', 'addrptr', '=', '(', 'u16', '*', ')', 'ha', '->', 'addr', ';', '*', 'suptr', '++', '=', 'addrptr', '[', '0', ']', '<<', 'FLT_SHIFT', ';', '*', 'suptr', '++', '=', 'addrptr', '[', '1', ']', '<<', 'FLT_SHIFT', ';', '*', 'suptr', '++', '=', 'addrptr', '[', '2', ']', '<<', 'FLT_SHIFT', ';', '}', 'for', '(', 'i', '=', 'netdev_mc_count', '(', 'dev', ')', ';', 'i', '<', '14', ';', 'i', '++', ')', '{', '*', 'suptr', '++', '=', '0xffff', '<<', 'FLT_SHIFT', ';', '*', 'suptr', '++', '=', '0xffff', '<<', 'FLT_SHIFT', ';', '*', 'suptr', '++', '=', '0xffff', '<<', 'FLT_SHIFT', ';', '}', 'db', '->', 'tx_insert_ptr', '=', 'txptr', '->', 'next_tx_desc', ';', 'txptr', '->', 'tdes1', '=', 'cpu_to_le32', '(', '0x890000c0', ')', ';', 'if', '(', 'db', '->', 'tx_packet_cnt', '<', 'TX_DESC_CNT', ')', '{', 'db', '->', 'tx_packet_cnt', '++', ';', 'txptr', '->', 'tdes0', '=', 'cpu_to_le32', '(', '0x80000000', ')', ';', 'update_cr6', '(', 'db', '->', 'cr6_data', '|', '0x2000', ',', 'ioaddr', ')', ';', 'update_cr6', '(', 'db', '->', 'cr6_data', ',', 'ioaddr', ')', ';', 'dev', '->', 'trans_start', '=', 'jiffies', ';', '}', 'netdev_err', '(', 'dev', ',', '""""', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1570,"['drawMsgWin', '(', 'WINDOW', '*', 'win', ',', 'std', ':', ':', 'vector', '<', 'std', ':', ':', 'string', '>', 'words', ')', '{', 'wclear', '(', 'win', ')', ';', 'box', '(', 'win', ',', '0', ',', '0', ')', ';', 'int', 'i', '=', '1', ';', 'std', ':', ':', 'vector', '<', 'std', ':', ':', 'string', '>', ':', ':', 'const_iterator', 'j', '=', 'words', '.', 'begin', '(', ')', ';', 'while', '(', 'j', '!=', 'words', '.', 'end', '(', ')', ')', '{', 'mvwprintw', '(', 'win', ',', 'i', ',', '1', ',', 'j', '->', 'c_str', '(', ')', ')', ';', 'i', '++', ';', 'j', '++', ';', '}', 'wrefresh', '(', 'win', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1571,"['dib0700_i2c_xfer_legacy', '(', 'struct', 'i2c_adapter', '*', 'adap', ',', 'struct', 'i2c_msg', '*', 'msg', ',', 'int', 'num', ')', '{', 'struct', 'dvb_usb_device', '*', 'd', '=', 'i2c_get_adapdata', '(', 'adap', ')', ';', 'struct', 'dib0700_state', '*', 'st', '=', 'd', '->', 'priv', ';', 'int', 'i', ',', 'len', ';', 'if', '(', 'mutex_lock_interruptible', '(', '&', 'd', '->', 'i2c_mutex', ')', '<', '0', ')', 'return', '-', 'EINTR', ';', 'if', '(', 'mutex_lock_interruptible', '(', '&', 'd', '->', 'usb_mutex', ')', '<', '0', ')', '{', 'err', '(', '""""', ')', ';', 'mutex_unlock', '(', '&', 'd', '->', 'i2c_mutex', ')', ';', 'return', '-', 'EINTR', ';', '}', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'num', ';', 'i', '++', ')', '{', 'st', '->', 'buf', '[', '1', ']', '=', 'msg', '[', 'i', ']', '.', 'addr', '<<', '1', ';', 'memcpy', '(', '&', 'st', '->', 'buf', '[', '2', ']', ',', 'msg', '[', 'i', ']', '.', 'buf', ',', 'msg', '[', 'i', ']', '.', 'len', ')', ';', 'if', '(', 'i', '+', '1', '<', 'num', '&&', '(', 'msg', '[', 'i', '+', '1', ']', '.', 'flags', '&', 'I2C_M_RD', ')', ')', '{', 'st', '->', 'buf', '[', '0', ']', '=', 'REQUEST_I2C_READ', ';', 'st', '->', 'buf', '[', '1', ']', '|=', '1', ';', 'len', '=', 'dib0700_ctrl_rd', '(', 'd', ',', 'st', '->', 'buf', ',', 'msg', '[', 'i', ']', '.', 'len', '+', '2', ',', 'msg', '[', 'i', '+', '1', ']', '.', 'buf', ',', 'msg', '[', 'i', '+', '1', ']', '.', 'len', ')', ';', 'if', '(', 'len', '<=', '0', ')', '{', 'deb_info', '(', '""""', ',', 'msg', '[', 'i', ']', '.', 'addr', ')', ';', 'break', ';', '}', 'msg', '[', 'i', '+', '1', ']', '.', 'len', '=', 'len', ';', 'i', '++', ';', '}', 'else', '{', 'st', '->', 'buf', '[', '0', ']', '=', 'REQUEST_I2C_WRITE', ';', 'if', '(', 'dib0700_ctrl_wr', '(', 'd', ',', 'st', '->', 'buf', ',', 'msg', '[', 'i', ']', '.', 'len', '+', '2', ')', '<', '0', ')', 'break', ';', '}', '}', 'mutex_unlock', '(', '&', 'd', '->', 'usb_mutex', ')', ';', 'mutex_unlock', '(', '&', 'd', '->', 'i2c_mutex', ')', ';', 'return', 'i', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1572,"['lxt2_wr_set_initial_value', '(', 'struct', 'lxt2_wr_trace', '*', 'lt', ',', 'char', 'value', ')', '{', 'if', '(', 'lt', ')', '{', 'switch', '(', 'value', ')', '{', 'case', ""''"", ':', 'case', ""''"", ':', 'case', ""''"", ':', 'case', ""''"", ':', '\tbreak', ';', 'case', ""''"", ':', '\tvalue', '=', ""''"", ';', 'break', ';', 'default', ':', '\tvalue', '=', ""''"", ';', 'break', ';', '}', 'lt', '->', 'initial_value', '=', 'value', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1573,"['httpHeaderNoteParsedEntry', '(', 'http_hdr_type', 'id', ',', 'String', 'context', ',', 'int', 'error', ')', '{', 'Headers', '[', 'id', ']', '.', 'stat', '.', 'parsCount', '++', ';', 'if', '(', 'error', ')', '{', 'Headers', '[', 'id', ']', '.', 'stat', '.', 'errCount', '++', ';', 'debug', '(', '55', ',', '2', ')', '(', '""""', ',', 'strBuf', '(', 'Headers', '[', 'id', ']', '.', 'name', ')', ',', 'strBuf', '(', 'context', ')', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1574,"['write_word_data', '(', ')', '{', 'FILE', '*', 'chewing_file', ';', 'FILE', '*', 'char_file', ';', '#ifdef', 'FILE', '*', 'index_begin_file', ';', 'FILE', '*', 'index_phone_file', ';', 'unsigned', 'char', 'size', ';', 'FILE', '*', 'index_file', ';', 'int', 'i', ';', 'uint16_t', 'previous_phone', ';', 'int', 'phone_num', ';', 'int', 'pos', ';', 'chewing_file', '=', 'fopen', '(', 'CHEWING_DEFINITION_FILE', ',', '""""', ')', ';', '#ifdef', 'index_begin_file', '=', 'fopen', '(', 'CHAR_INDEX_BEGIN_FILE', ',', '""""', ')', ';', 'index_phone_file', '=', 'fopen', '(', 'CHAR_INDEX_PHONE_FILE', ',', '""""', ')', ';', 'char_file', '=', 'fopen', '(', 'CHAR_FILE', ',', '""""', ')', ';', 'if', '(', '!', '(', 'chewing_file', '&&', 'index_begin_file', '&&', 'index_phone_file', '&&', 'char_file', ')', ')', '{', 'fprintf', '(', 'stderr', ',', '""""', ')', ';', 'exit', '(', '-', '1', ')', ';', '}', 'index_file', '=', 'fopen', '(', 'CHAR_INDEX_FILE', ',', '""""', ')', ';', 'char_file', '=', 'fopen', '(', 'CHAR_FILE', ',', '""""', ')', ';', 'if', '(', '!', '(', 'chewing_file', '&&', 'index_file', '&&', 'char_file', ')', ')', '{', 'fprintf', '(', 'stderr', ',', '""""', ')', ';', 'exit', '(', '-', '1', ')', ';', '}', 'previous_phone', '=', '0', ';', 'phone_num', '=', '0', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'num_word_data', ';', '++', 'i', ')', '{', 'if', '(', 'word_data', '[', 'i', ']', '.', 'phone', '!=', 'previous_phone', ')', '{', 'previous_phone', '=', 'word_data', '[', 'i', ']', '.', 'phone', ';', 'pos', '=', 'ftell', '(', 'char_file', ')', ';', '#ifdef', 'fwrite', '(', '&', 'pos', ',', 'sizeof', '(', 'pos', ')', ',', '1', ',', 'index_begin_file', ')', ';', 'fwrite', '(', '&', 'previous_phone', ',', 'sizeof', '(', 'previous_phone', ')', ',', '1', ',', 'index_phone_file', ')', ';', 'fprintf', '(', 'index_file', ',', '""""', ',', 'previous_phone', ',', 'pos', ')', ';', 'phone_num', '++', ';', '}', '#ifdef', 'size', '=', 'strlen', '(', 'word_data', '[', 'i', ']', '.', 'word', ')', ';', 'fwrite', '(', '&', 'size', ',', 'sizeof', '(', 'size', ')', ',', '1', ',', 'char_file', ')', ';', 'fwrite', '(', 'word_data', '[', 'i', ']', '.', 'word', ',', 'size', ',', '1', ',', 'char_file', ')', ';', 'fprintf', '(', 'char_file', ',', '""""', ',', 'word_data', '[', 'i', ']', '.', 'phone', ',', 'word_data', '[', 'i', ']', '.', 'word', ')', ';', '}', 'pos', '=', 'ftell', '(', 'char_file', ')', ';', '#ifdef', 'fwrite', '(', '&', 'pos', ',', 'sizeof', '(', 'pos', ')', ',', '1', ',', 'index_begin_file', ')', ';', 'previous_phone', '=', '0', ';', 'fwrite', '(', '&', 'previous_phone', ',', 'sizeof', '(', 'previous_phone', ')', ',', '1', ',', 'index_phone_file', ')', ';', 'fprintf', '(', 'index_file', ',', '""""', ',', 'pos', ')', ';', 'fprintf', '(', 'chewing_file', ',', '""""', ',', 'phone_num', ')', ';', 'fclose', '(', 'char_file', ')', ';', '#ifdef', 'fclose', '(', 'index_phone_file', ')', ';', 'fclose', '(', 'index_begin_file', ')', ';', 'fclose', '(', 'index_file', ')', ';', 'fclose', '(', 'chewing_file', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1575,"['rt2x00queue_create_tx_descriptor_plcp', '(', 'struct', 'rt2x00_dev', '*', 'rt2x00dev', ',', 'struct', 'sk_buff', '*', 'skb', ',', 'struct', 'txentry_desc', '*', 'txdesc', ',', 'const', 'struct', 'rt2x00_rate', '*', 'hwrate', ')', '{', 'struct', 'ieee80211_tx_info', '*', 'tx_info', '=', 'IEEE80211_SKB_CB', '(', 'skb', ')', ';', 'struct', 'ieee80211_tx_rate', '*', 'txrate', '=', '&', 'tx_info', '->', 'control', '.', 'rates', '[', '0', ']', ';', 'unsigned', 'int', 'data_length', ';', 'unsigned', 'int', 'duration', ';', 'unsigned', 'int', 'residual', ';', '/', '*', '*', 'Determine', 'with', 'what', 'IFS', 'priority', 'this', 'frame', 'should', 'be', 'send', '.', '*', 'Set', 'ifs', 'to', 'IFS_SIFS', 'when', 'the', 'this', 'is', 'not', 'the', 'first', 'fragment', ',', '*', 'or', 'this', 'fragment', 'came', 'after', 'RTS', '/', 'CTS', '.', 'if', '(', 'test_bit', '(', 'ENTRY_TXD_FIRST_FRAGMENT', ',', '&', 'txdesc', '->', 'flags', ')', ')', 'txdesc', '->', 'u', '.', 'plcp', '.', 'ifs', '=', 'IFS_BACKOFF', ';', 'txdesc', '->', 'u', '.', 'plcp', '.', 'ifs', '=', 'IFS_SIFS', ';', 'data_length', '=', 'skb', '->', 'len', '+', '4', ';', 'data_length', '+=', 'rt2x00crypto_tx_overhead', '(', 'rt2x00dev', ',', 'skb', ')', ';', '/', '*', '*', 'PLCP', '*', 'Length', 'calculation', 'depends', 'on', 'OFDM', '/', 'CCK', 'rate', '.', 'txdesc', '->', 'u', '.', 'plcp', '.', 'signal', '=', 'hwrate', '->', 'plcp', ';', 'txdesc', '->', 'u', '.', 'plcp', '.', 'service', '=', '0x04', ';', 'if', '(', 'hwrate', '->', 'flags', '&', 'DEV_RATE_OFDM', ')', '{', 'txdesc', '->', 'u', '.', 'plcp', '.', 'length_high', '=', '(', 'data_length', '>>', '6', ')', '&', '0x3f', ';', 'txdesc', '->', 'u', '.', 'plcp', '.', 'length_low', '=', 'data_length', '&', '0x3f', ';', '}', 'else', '{', '/', '*', '*', 'Convert', 'length', 'to', 'microseconds', '.', 'residual', '=', 'GET_DURATION_RES', '(', 'data_length', ',', 'hwrate', '->', 'bitrate', ')', ';', 'duration', '=', 'GET_DURATION', '(', 'data_length', ',', 'hwrate', '->', 'bitrate', ')', ';', 'if', '(', 'residual', '!=', '0', ')', '{', 'duration', '++', ';', '/', '*', '*', 'Check', 'if', 'we', 'need', 'to', 'set', 'the', 'Length', 'if', '(', 'hwrate', '->', 'bitrate', '==', '110', '&&', 'residual', '<=', '30', ')', 'txdesc', '->', 'u', '.', 'plcp', '.', 'service', '|=', '0x80', ';', '}', 'txdesc', '->', 'u', '.', 'plcp', '.', 'length_high', '=', '(', 'duration', '>>', '8', ')', '&', '0xff', ';', 'txdesc', '->', 'u', '.', 'plcp', '.', 'length_low', '=', 'duration', '&', '0xff', ';', '/', '*', '*', 'When', 'preamble', 'is', 'enabled', 'we', 'should', 'set', '*', 'preamble', 'bit', 'for', 'the', 'signal', '.', 'if', '(', 'txrate', '->', 'flags', '&', 'IEEE80211_TX_RC_USE_SHORT_PREAMBLE', ')', 'txdesc', '->', 'u', '.', 'plcp', '.', 'signal', '|=', '0x08', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
1576,"['GetRemoteDebuggingMap', '(', 'cbProject', '*', 'project', ')', '{', 'if', '(', '!project', ')', 'project', '=', 'm_pProject', ';', 'ProjectRemoteDebuggingMap', ':', ':', 'iterator', 'it', '=', 'm_RemoteDebugging', '.', 'find', '(', 'project', ')', ';', 'if', '(', 'it', '==', 'm_RemoteDebugging', '.', 'end', '(', ')', ')', '/', '/', 'create', 'an', 'empty', 'set', 'for', 'this', 'it', '=', 'm_RemoteDebugging', '.', 'insert', '(', 'm_RemoteDebugging', '.', 'begin', '(', ')', ',', 'std', ':', ':', 'make_pair', '(', 'project', ',', 'RemoteDebuggingMap', '(', ')', ')', ')', ';', 'return', 'it', '->', 'second', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1577,"['pcm_sanity_check', '(', 'struct', 'snd_pcm_substream', '*', 'substream', ')', '{', 'struct', 'snd_pcm_runtime', '*', 'runtime', ';', 'if', '(', 'PCM_RUNTIME_CHECK', '(', 'substream', ')', ')', 'return', '-', 'ENXIO', ';', 'runtime', '=', 'substream', '->', 'runtime', ';', 'if', '(', 'snd_BUG_ON', '(', '!substream', '->', 'ops', '->', 'copy', '&&', '!runtime', '->', 'dma_area', ')', ')', 'return', '-', 'EINVAL', ';', 'if', '(', 'runtime', '->', 'status', '->', 'state', '==', 'SNDRV_PCM_STATE_OPEN', ')', 'return', '-', 'EBADFD', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1578,"['goo_canvas_set_static_root_item_model', '(', 'GooCanvas\t', '*', 'canvas', ',', 'GooCanvasItemModel', '*', 'model', ')', '{', 'GooCanvasPrivate', '*', 'priv', ';', 'g_return_if_fail', '(', 'GOO_IS_CANVAS', '(', 'canvas', ')', ')', ';', 'g_return_if_fail', '(', 'GOO_IS_CANVAS_ITEM_MODEL', '(', 'model', ')', ')', ';', 'priv', '=', 'GOO_CANVAS_GET_PRIVATE', '(', 'canvas', ')', ';', 'if', '(', 'priv', '->', 'static_root_item_model', '==', 'model', ')', 'return', ';', 'if', '(', 'priv', '->', 'static_root_item_model', ')', '{', 'g_object_unref', '(', 'priv', '->', 'static_root_item_model', ')', ';', 'priv', '->', 'static_root_item_model', '=', 'NULL', ';', '}', 'if', '(', 'priv', '->', 'static_root_item', ')', '{', 'g_object_unref', '(', 'priv', '->', 'static_root_item', ')', ';', 'priv', '->', 'static_root_item', '=', 'NULL', ';', '}', 'if', '(', 'model', ')', '{', 'priv', '->', 'static_root_item_model', '=', 'g_object_ref', '(', 'model', ')', ';', 'priv', '->', 'static_root_item', '=', 'goo_canvas_create_item', '(', 'canvas', ',', 'model', ')', ';', '}', '{', 'priv', '->', 'static_root_item', '=', 'goo_canvas_group_new', '(', 'NULL', ',', 'NULL', ')', ';', '}', 'goo_canvas_item_set_canvas', '(', 'priv', '->', 'static_root_item', ',', 'canvas', ')', ';', 'goo_canvas_item_set_is_static', '(', 'priv', '->', 'static_root_item', ',', 'TRUE', ')', ';', 'canvas', '->', 'need_update', '=', 'TRUE', ';', '#if', 'GTK_CHECK_VERSION', '(', '2', ',', '19', ',', '0', ')', 'if', '(', 'gtk_widget_get_realized', '(', 'GTK_WIDGET', '(', 'canvas', ')', ')', ')', 'if', '(', 'GTK_WIDGET_REALIZED', '(', 'canvas', ')', ')', 'goo_canvas_update', '(', 'canvas', ')', ';', 'gtk_widget_queue_draw', '(', 'GTK_WIDGET', '(', 'canvas', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1579,"['getPropertySubset', '(', 'const', 'tstring', '&', 'prefix', ')', '{', 'Properties', 'ret', ';', 'std', ':', ':', 'vector', '<', 'tstring', '>', 'const', 'keys', '=', 'propertyNames', '(', ')', ';', 'size_t', 'const', 'prefix_len', '=', 'prefix', '.', 'size', '(', ')', ';', 'for', '(', 'std', ':', ':', 'vector', '<', 'tstring', '>', ':', ':', 'const_iterator', 'it', '=', 'keys', '.', 'begin', '(', ')', ';', 'it', '!=', 'keys', '.', 'end', '(', ')', ';', '++', 'it', ')', '{', 'int', 'result', '=', 'it', '->', 'compare', '(', '0', ',', 'prefix_len', ',', 'prefix', ')', ';', 'if', '(', 'result', '==', '0', ')', 'ret', '.', 'setProperty', '(', 'it', '->', 'substr', '(', 'prefix_len', ')', ',', 'getProperty', '(', '*', 'it', ')', ')', ';', '}', 'return', 'ret', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1580,"['slapi_rdn_partial_dup', '(', 'Slapi_RDN', '*', 'from', ',', 'Slapi_RDN', '*', '*', 'to', ',', 'int', 'rdnidx', ')', '{', 'char', '*', '*', 'ptr', '=', 'NULL', ';', 'int', 'lastidx', '=', '-', '1', ';', 'if', '(', 'NULL', '==', 'from', '||', 'NULL', '==', 'to', '||', 'rdnidx', '<', '0', ')', '{', 'return', '-', '1', ';', '}', '*', 'to', '=', 'NULL', ';', 'for', '(', 'ptr', '=', 'from', '->', 'all_rdns', ';', 'ptr', '&&', '*', 'ptr', ';', 'ptr', '++', ')', 'lastidx', '++', ';', 'if', '(', 'rdnidx', '>', 'lastidx', ')', '{', 'return', '-', '1', ';', '}', 'if', '(', 'NULL', '==', 'from', '->', 'all_nrdns', ')', '{', 'from', '->', 'all_nrdns', '=', 'charray_dup', '(', 'from', '->', 'all_rdns', ')', ';', 'for', '(', 'ptr', '=', 'from', '->', 'all_nrdns', ';', 'ptr', '&&', '*', 'ptr', ';', 'ptr', '++', ')', '{', 'normalize_case_helper', '(', 'NULL', ',', 'ptr', ')', ';', '}', '}', '*', 'to', '=', 'slapi_rdn_new', '(', ')', ';', '(', '*', 'to', ')', '->', 'rdn', '=', 'slapi_ch_strdup', '(', 'from', '->', 'all_rdns', '[', 'rdnidx', ']', ')', ';', '(', '*', 'to', ')', '->', 'nrdn', '=', 'slapi_ch_strdup', '(', 'from', '->', 'all_nrdns', '[', 'rdnidx', ']', ')', ';', '(', '*', 'to', ')', '->', 'all_rdns', '=', 'charray_dup', '(', '&', '(', 'from', '->', 'all_rdns', '[', 'rdnidx', ']', ')', ')', ';', '(', '*', 'to', ')', '->', 'all_nrdns', '=', 'charray_dup', '(', '&', '(', 'from', '->', 'all_nrdns', '[', 'rdnidx', ']', ')', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
1581,"['wire_ttl_to_str', '(', 'rrset_dump_params_t', '*', 'p', ')', '{', 'uint32_t', 'data', ';', 'size_t', 'in_len', '=', 'sizeof', '(', 'data', ')', ';', 'size_t', 'out_len', '=', '0', ';', 'int', 'ret', ';', 'p', '->', 'ret', '=', '-', '1', ';', '/', '/', 'Check', 'input', 'size', '.', 'if', '(', 'in_len', '>', 'p', '->', 'in_max', ')', '{', 'return', ';', '}', '/', '/', 'Fill', 'in', 'input', 'data', '.', 'if', '(', 'memcpy', '(', '&', 'data', ',', 'p', '->', 'in', ',', 'in_len', ')', '==', 'NULL', ')', '{', 'return', ';', '}', 'if', '(', 'p', '->', 'style', '->', 'human_ttl', ')', '{', '/', '/', 'Write', 'time', 'in', 'human', 'readable', 'format', '.', 'ret', '=', 'time_to_human_str', '(', 'p', '->', 'out', ',', 'p', '->', 'out_max', ',', 'ntohl', '(', 'data', ')', ')', ';', 'if', '(', 'ret', '<=', '0', ')', '{', 'return', ';', '}', '}', 'else', '{', '/', '/', 'Write', 'timestamp', 'only', '.', 'ret', '=', 'snprintf', '(', 'p', '->', 'out', ',', 'p', '->', 'out_max', ',', '""""', ',', 'ntohl', '(', 'data', ')', ')', ';', 'if', '(', 'ret', '<=', '0', '||', '(', 'size_t', ')', 'ret', '>=', 'p', '->', 'out_max', ')', '{', 'return', ';', '}', '}', 'out_len', '=', 'ret', ';', '/', '/', 'Fill', 'in', 'output', '.', 'p', '->', 'in', '+=', 'in_len', ';', 'p', '->', 'in_max', '-=', 'in_len', ';', 'p', '->', 'out', '+=', 'out_len', ';', 'p', '->', 'out_max', '-=', 'out_len', ';', 'p', '->', 'total', '+=', 'out_len', ';', 'p', '->', 'ret', '=', '0', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1582,"['__ptrace_unlink', '(', 'struct', 'task_struct', '*', 'child', ')', '{', 'const', 'struct', 'cred', '*', 'old_cred', ';', 'BUG_ON', '(', '!child', '->', 'ptrace', ')', ';', 'child', '->', 'ptrace', '=', '0', ';', 'child', '->', 'parent', '=', 'child', '->', 'real_parent', ';', 'list_del_init', '(', '&', 'child', '->', 'ptrace_entry', ')', ';', 'old_cred', '=', 'child', '->', 'ptracer_cred', ';', 'child', '->', 'ptracer_cred', '=', 'NULL', ';', 'put_cred', '(', 'old_cred', ')', ';', 'spin_lock', '(', '&', 'child', '->', 'sighand', '->', 'siglock', ')', ';', '/', '*', '*', 'Clear', 'all', 'pending', 'traps', 'and', 'TRAPPING', '.', 'TRAPPING', 'should', '*', 'cleared', 'regardless', 'of', 'JOBCTL_STOP_PENDING', '.', 'Do', 'it', 'explicitly', '.', 'task_clear_jobctl_pending', '(', 'child', ',', 'JOBCTL_TRAP_MASK', ')', ';', 'task_clear_jobctl_trapping', '(', 'child', ')', ';', '/', '*', '*', 'Reinstate', 'JOBCTL_STOP_PENDING', 'if', 'group', 'stop', 'is', 'in', 'effect', '*', '@child', ""isn't"", 'dead', '.', 'if', '(', '!', '(', 'child', '->', 'flags', '&', 'PF_EXITING', ')', '&&', '(', 'child', '->', 'signal', '->', 'flags', '&', 'SIGNAL_STOP_STOPPED', '||', 'child', '->', 'signal', '->', 'group_stop_count', ')', ')', '{', 'child', '->', 'jobctl', '|=', 'JOBCTL_STOP_PENDING', ';', '/', '*', '*', 'This', 'is', 'only', 'possible', 'if', 'this', 'thread', 'was', 'cloned', 'by', '*', 'traced', 'task', 'running', 'in', 'the', 'stopped', 'group', ',', 'set', 'the', '*', 'for', 'the', 'future', 'reports', '.', '*', 'FIXME', ':', 'we', 'should', 'change', 'ptrace_init_task', '(', ')', 'to', 'handle', '*', 'case', '.', 'if', '(', '!', '(', 'child', '->', 'jobctl', '&', 'JOBCTL_STOP_SIGMASK', ')', ')', 'child', '->', 'jobctl', '|=', 'SIGSTOP', ';', '}', '/', '*', '*', 'If', 'transition', 'to', 'TASK_STOPPED', 'is', 'pending', 'or', 'in', 'TASK_TRACED', ',', '*', '@child', 'in', 'the', 'butt', '.', 'Note', 'that', '@resume', 'should', 'be', 'used', 'iff', '*', 'is', 'in', 'TASK_TRACED', ';', 'otherwise', ',', 'we', 'might', 'unduly', '*', 'TASK_KILLABLE', 'sleeps', '.', 'if', '(', 'child', '->', 'jobctl', '&', 'JOBCTL_STOP_PENDING', '||', 'task_is_traced', '(', 'child', ')', ')', 'ptrace_signal_wake_up', '(', 'child', ',', 'true', ')', ';', 'spin_unlock', '(', '&', 'child', '->', 'sighand', '->', 'siglock', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1583,"['no_response_to_proxied_request', '(', 'void', '*', 'ctx', ')', '{', 'REQUEST', '*', 'request', '=', 'ctx', ';', 'home_server', '*', 'home', ';', 'char', 'buffer', '[', '128', ']', ';', 'rad_assert', '(', 'request', '->', 'magic', '==', 'REQUEST_MAGIC', ')', ';', 'rad_assert', '(', 'request', '->', 'child_state', '==', 'REQUEST_PROXIED', ')', ';', '/', '*', '*', '\tIf', ""we've"", 'failed', 'over', 'to', 'an', 'internal', 'home', 'server', ',', '*', '\treplace', 'the', 'callback', 'with', 'the', 'correct', 'one', '.', '*', '\tis', 'due', 'to', 'locking', 'issues', 'with', 'child', 'threads', '.', '.', '.', 'if', '(', 'request', '->', 'home_server', '->', 'server', ')', '{', 'wait_a_bit', '(', 'request', ')', ';', 'return', ';', '}', 'check_for_zombie_home_server', '(', 'request', ')', ';', 'home', '=', 'request', '->', 'home_server', ';', '/', '*', '*', '\tThe', 'default', 'as', 'of', '2', '.', '1', '.', '7', 'is', 'to', 'allow', 'requests', '*', '\tfail', '-', 'over', 'to', 'a', 'backup', 'home', 'server', 'when', 'this', 'one', '*', '\tnot', 'respond', '.', 'The', 'old', 'behavior', 'can', 'be', 'configured', '*', '\twell', '.', 'if', '(', 'home', '->', 'no_response_fail', ')', '{', 'radlog', '(', 'L_ERR', ',', '""""', ',', 'request', '->', 'number', ',', 'request', '->', 'proxy', '->', 'id', ',', 'inet_ntop', '(', 'request', '->', 'proxy', '->', 'dst_ipaddr', '.', 'af', ',', '&', 'request', '->', 'proxy', '->', 'dst_ipaddr', '.', 'ipaddr', ',', 'buffer', ',', 'sizeof', '(', 'buffer', ')', ')', ',', 'request', '->', 'proxy', '->', 'dst_port', ')', ';', 'post_proxy_fail_handler', '(', 'request', ')', ';', '}', 'else', '{', 'rad_assert', '(', 'request', '->', 'ev', '==', 'NULL', ')', ';', 'request', '->', 'child_state', '=', 'REQUEST_RUNNING', ';', 'wait_a_bit', '(', 'request', ')', ';', '}', '/', '*', '*', ""\tDon't"", 'touch', 'request', 'due', 'to', 'race', '/', '*', '*', '\tIf', ""it''t"", 'try', 'to', 'make', 'it', 'a', 'zombie', '.', 'if', '(', 'home', '->', 'state', '!=', 'HOME_STATE_ALIVE', ')', '{', '/', '*', '*', ""\tDon't"", 'check', 'home', '->', 'ev', 'due', 'to', 'race', 'conditions', '.', 'return', ';', '}', '/', '*', '*', ""\tWe''t"", 'mark', '*', '\tserver', 'as', 'zombie', 'until', ""we've"", 'received', 'NO', 'packets', 'for', '*', '\twhile', '.', 'The', '""""', 'of', 'zombie', 'period', 'was', 'chosen', '*', '\tarbitrarily', '.', ""It's"", 'a', 'balance', 'between', 'too', 'short', ',', '*', '\tgives', 'quick', 'fail', '-', 'over', 'and', 'fail', '-', 'back', ',', 'or', 'too', 'long', ',', '*', '\twhere', 'the', 'proxy', 'still', 'sends', 'packets', 'to', 'an', '*', '\thome', 'server', '.', 'if', '(', '(', 'home', '->', 'last_packet', '+', '(', '(', 'home', '->', 'zombie_period', '+', '3', ')', '/', '4', ')', ')', '>=', 'now', '.', 'tv_sec', ')', '{', 'return', ';', '}', '/', '*', '*', '\tEnable', 'the', 'zombie', 'period', 'when', 'we', 'notice', 'that', 'the', '*', '\tserver', ""hasn't"", 'responded', 'for', 'a', 'while', '.', 'We', 'back', '-', 'date', '*', '\tzombie', 'period', 'to', 'when', 'we', 'last', 'received', 'a', 'response', '*', '\tthe', 'home', 'server', '.', 'home', '->', 'state', '=', 'HOME_STATE_ZOMBIE', ';', 'home', '->', 'zombie_period_start', '.', 'tv_sec', '=', 'home', '->', 'last_packet', ';', 'home', '->', 'zombie_period_start', '.', 'tv_usec', '=', 'USEC', '/', '2', ';', 'fr_event_delete', '(', 'el', ',', '&', 'home', '->', 'ev', ')', ';', 'home', '->', 'currently_outstanding', '=', '0', ';', 'home', '->', 'num_received_pings', '=', '0', ';', 'radlog', '(', 'L_PROXY', ',', '""""', ',', 'inet_ntop', '(', 'home', '->', 'ipaddr', '.', 'af', ',', '&', 'home', '->', 'ipaddr', '.', 'ipaddr', ',', 'buffer', ',', 'sizeof', '(', 'buffer', ')', ')', ',', 'home', '->', 'port', ')', ';', '/', '*', '*', '\tStart', 'pinging', 'the', 'home', 'server', '.', 'ping_home_server', '(', 'home', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1584,"['twl_rtc_interrupt', '(', 'int', 'irq', ',', 'void', '*', 'rtc', ')', '{', 'unsigned', 'long', 'events', ';', 'int', 'ret', '=', 'IRQ_NONE', ';', 'int', 'res', ';', 'u8', 'rd_reg', ';', 'res', '=', 'twl_rtc_read_u8', '(', '&', 'rd_reg', ',', 'REG_RTC_STATUS_REG', ')', ';', 'if', '(', 'res', ')', 'goto', 'out', ';', '/', '*', '*', 'Figure', 'out', 'source', 'of', 'interrupt', ':', 'ALARM', 'or', 'TIMER', 'in', 'RTC_STATUS_REG', '.', '*', 'only', 'one', '(', 'ALARM', 'or', 'RTC', ')', 'interrupt', 'source', 'may', 'be', '*', 'at', 'time', ',', 'we', 'also', 'could', 'check', 'our', '*', 'by', 'reading', 'RTS_INTERRUPTS_REGISTER', '[', 'IT_TIMER', ',', 'IT_ALARM', ']', 'if', '(', 'rd_reg', '&', 'BIT_RTC_STATUS_REG_ALARM_M', ')', 'events', '=', 'RTC_IRQF', '|', 'RTC_AF', ';', 'events', '=', 'RTC_IRQF', '|', 'RTC_PF', ';', 'res', '=', 'twl_rtc_write_u8', '(', 'BIT_RTC_STATUS_REG_ALARM_M', ',', 'REG_RTC_STATUS_REG', ')', ';', 'if', '(', 'res', ')', 'goto', 'out', ';', 'if', '(', 'twl_class_is_4030', '(', ')', ')', '{', '/', '*', 'Clear', 'on', 'Read', 'enabled', '.', 'RTC_IT', 'bit', 'of', '*', 'needs', '2', 'reads', 'to', 'clear', 'the', 'interrupt', '.', 'One', 'read', 'is', 'done', '*', 'do_twl_pwrirq', '(', ')', '.', 'Doing', 'the', 'second', 'read', ',', 'to', '*', 'the', 'bit', '.', '*', '*', 'FIXME', 'the', 'reason', 'PWR_ISR1', 'needs', 'an', 'extra', 'read', 'is', '*', 'RTC_IF', 'retriggered', 'until', 'we', 'cleared', 'REG_ALARM_M', 'above', '.', '*', 'But', 're', '-', 'reading', 'like', 'this', 'is', 'a', 'bad', 'hack', ';', 'by', 'doing', 'so', '*', 'risk', 'wrongly', 'clearing', 'status', 'for', 'some', 'other', 'IRQ', '(', '*', 'the', 'interrupt', ')', '.', 'Be', 'smarter', 'about', 'handling', 'RTC_UF', '.', '.', '.', 'res', '=', 'twl_i2c_read_u8', '(', 'TWL4030_MODULE_INT', ',', '&', 'rd_reg', ',', 'TWL4030_INT_PWR_ISR1', ')', ';', 'if', '(', 'res', ')', 'goto', 'out', ';', '}', 'rtc_update_irq', '(', 'rtc', ',', '1', ',', 'events', ')', ';', 'ret', '=', 'IRQ_HANDLED', ';', 'out', ':', 'return', 'ret', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1585,"['copy_to_index', '(', 'Tree', 't', ',', 'Indexterm', '*', 'terms', ',', 'int', 'importance', ',', 'conststring', 'secno', ',', 'conststring', 'doctitle', ')', '{', 'conststring', 'id', ',', 'title', ';', 'string', 'h', ';', 'Indexterm', 'term', ';', 'int', 'i', ',', 'n', ';', 'id', '=', 'get_attrib', '(', 't', ',', '""""', ')', ';', '#ifdef', 'if', '(', '!', '(', 'title', '=', 'get_attrib', '(', 't', ',', '""""', ')', ')', ')', 'title', '=', 'get_attrib', '(', 't', ',', '""""', ')', ';', 'if', '(', 'title', ')', '{', 'i', '=', '0', ';', 'while', '(', 'title', '[', 'i', ']', ')', '{', 'new', '(', 'term', ')', ';', 'term', '->', 'importance', '=', 'importance', ';', 'term', '->', 'secno', '=', 'secno', '?', 'newstring', '(', 'secno', ')', ':', 'NULL', ';', 'term', '->', 'doctitle', '=', 'newstring', '(', 'doctitle', ')', ';', 'term', '->', 'url', '=', 'NULL', ';', 'strapp', '(', '&', 'term', '->', 'url', ',', 'base', ',', '""""', ',', 'id', ',', 'NULL', ')', ';', 'h', '=', 'newnstring', '(', 'title', '+', 'i', ',', 'n', ')', ';', 'parse_subterms', '(', 'term', ',', 'h', ')', ';', 'if', '(', '!', 'tsearch', '(', 'term', ',', '(', 'void', '*', '*', ')', 'terms', ',', 'termcmp', ')', ')', 'errx', '(', '1', ',', '""""', ',', 'h', ')', ';', 'i', '+=', 'n', ';', '}', '#ifdef', 'if', '(', '!delete_attrib', '(', 't', ',', '""""', ')', ')', 'delete_attrib', '(', 't', ',', '""""', ')', ';', 'h', '=', 'NULL', ';', 'copy_contents', '(', 't', ',', '&', 'h', ')', ';', 'new', '(', 'term', ')', ';', 'term', '->', 'importance', '=', 'importance', ';', 'term', '->', 'secno', '=', 'secno', '?', 'newstring', '(', 'secno', ')', ':', 'NULL', ';', 'term', '->', 'doctitle', '=', 'newstring', '(', 'doctitle', ')', ';', 'term', '->', 'url', '=', 'NULL', ';', 'strapp', '(', '&', 'term', '->', 'url', ',', 'base', ',', '""""', ',', 'id', ',', 'NULL', ')', ';', 'parse_subterms', '(', 'term', ',', 'h', ')', ';', 'if', '(', '!', 'tsearch', '(', 'term', ',', '(', 'void', '*', '*', ')', 'terms', ',', 'termcmp', ')', ')', 'errx', '(', '1', ',', '""""', ',', 'h', ')', ';', '}', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  True,CWE-476  True,CWE-other  True
1586,"['process_library', '(', 'struct', 'filename', '*', 'l', ')', '{', 'char\t\t', '*', 'buffptr', ';', 'char\t\t', '*', 'objsptr', ';', 'struct', 'filename\t', '*', 'f', ';', 'size_t\t\tbufflen', ';', 'int\t\tret', ';', 'char\t\tbuff', '[', 'COB_MEDIUM_BUFF', ']', ';', 'char\t\tname', '[', 'COB_MEDIUM_BUFF', ']', ';', 'char\t\tobjs', '[', 'COB_MEDIUM_BUFF', ']', '=', '""""', ';', 'bufflen', '=', '0', ';', 'for', '(', 'f', '=', 'l', ';', 'f', ';', 'f', '=', 'f', '->', 'next', ')', '{', 'bufflen', '+=', 'strlen', '(', 'f', '->', 'object', ')', '+', '2', ';', '}', 'if', '(', 'bufflen', '>=', 'COB_MEDIUM_BUFF', ')', '{', 'objsptr', '=', 'cobc_malloc', '(', 'bufflen', ')', ';', '}', 'else', '{', 'objsptr', '=', 'objs', ';', '}', 'for', '(', 'f', '=', 'l', ';', 'f', ';', 'f', '=', 'f', '->', 'next', ')', '{', 'strcat', '(', 'objsptr', ',', 'f', '->', 'object', ')', ';', 'strcat', '(', 'objsptr', ',', '""""', ')', ';', '}', 'if', '(', 'output_name', ')', '{', 'strcpy', '(', 'name', ',', 'output_name', ')', ';', '#ifndef', 'if', '(', 'strchr', '(', 'output_name', ',', ""''"", ')', '==', 'NULL', ')', '{', 'strcat', '(', 'name', ',', '""""', ')', ';', 'strcat', '(', 'name', ',', 'COB_MODULE_EXT', ')', ';', '}', '}', 'else', '{', 'file_basename', '(', 'l', '->', 'source', ',', 'name', ')', ';', '#ifndef', 'strcat', '(', 'name', ',', '""""', ')', ';', 'strcat', '(', 'name', ',', 'COB_MODULE_EXT', ')', ';', '}', 'bufflen', '=', 'strlen', '(', 'cob_cc', ')', '+', 'strlen', '(', 'gccpipe', ')', '+', 'strlen', '(', 'cob_ldflags', ')', '+', 'strlen', '(', 'COB_EXPORT_DYN', ')', '+', 'strlen', '(', 'COB_SHARED_OPT', ')', '+', 'strlen', '(', 'name', ')', '+', 'strlen', '(', 'objsptr', ')', '+', 'strlen', '(', 'cob_libs', ')', '+', 'strlen', '(', 'COB_PIC_FLAGS', ')', '+', '16', ';', 'if', '(', 'bufflen', '>=', 'COB_MEDIUM_BUFF', ')', '{', 'buffptr', '=', 'cobc_malloc', '(', 'bufflen', ')', ';', '}', 'else', '{', 'buffptr', '=', 'buff', ';', '}', '#ifdef', 'sprintf', '(', 'buff', ',', 'gflag_set', '?', '""""', ':', '""""', ',', 'cob_cc', ',', 'name', ',', 'cob_ldflags', ',', 'objsptr', ',', 'cob_libs', ')', ';', 'ret', '=', 'process', '(', 'buff', ')', ';', '#if', '_MSC_VER', '>=', 'if', '(', 'ret', '==', '0', ')', '{', 'sprintf', '(', 'buff', ',', '""""', ',', 'name', ',', 'name', ')', ';', 'ret', '=', 'process', '(', 'buff', ')', ';', '}', 'sprintf', '(', 'buffptr', ',', '""""', ',', 'cob_cc', ',', 'gccpipe', ',', 'COB_SHARED_OPT', ',', 'cob_ldflags', ',', 'COB_PIC_FLAGS', ',', 'COB_EXPORT_DYN', ',', 'name', ',', 'objsptr', ',', 'cob_libs', ')', ';', 'ret', '=', 'process', '(', 'buffptr', ')', ';', 'if', '(', 'strip_output', '&&', 'ret', '==', '0', ')', '{', 'sprintf', '(', 'buff', ',', '""""', ',', 'COB_STRIP_CMD', ',', 'name', ')', ';', 'ret', '=', 'process', '(', 'buff', ')', ';', '}', 'return', 'ret', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
1587,"['unpack_comm', '(', 'int', 'n', ',', 'int', 'first', ',', 'double', '*', 'buf', ')', '{', 'int', 'i', ',', 'm', ',', 'last', ';', 'double', '*', '*', 'v', '=', 'atom', '->', 'v', ';', 'double', '*', '*', 'omega', '=', 'atom', '->', 'omega', ';', 'm', '=', '0', ';', 'last', '=', 'first', '+', 'n', ';', 'for', '(', 'i', '=', 'first', ';', 'i', '<', 'last', ';', 'i', '++', ')', '{', 'v', '[', 'i', ']', '[', '0', ']', '=', 'buf', '[', 'm', '++', ']', ';', 'v', '[', 'i', ']', '[', '1', ']', '=', 'buf', '[', 'm', '++', ']', ';', 'v', '[', 'i', ']', '[', '2', ']', '=', 'buf', '[', 'm', '++', ']', ';', 'omega', '[', 'i', ']', '[', '0', ']', '=', 'buf', '[', 'm', '++', ']', ';', 'omega', '[', 'i', ']', '[', '1', ']', '=', 'buf', '[', 'm', '++', ']', ';', 'omega', '[', 'i', ']', '[', '2', ']', '=', 'buf', '[', 'm', '++', ']', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1588,"['ath9k_hw_init_config', '(', 'struct', 'ath_hw', '*', 'ah', ')', '{', 'struct', 'ath_common', '*', 'common', '=', 'ath9k_hw_common', '(', 'ah', ')', ';', 'ah', '->', 'config', '.', 'dma_beacon_response_time', '=', '1', ';', 'ah', '->', 'config', '.', 'sw_beacon_response_time', '=', '6', ';', 'ah', '->', 'config', '.', 'cwm_ignore_extcca', '=', 'false', ';', 'ah', '->', 'config', '.', 'analog_shiftreg', '=', '1', ';', 'ah', '->', 'config', '.', 'rx_intr_mitigation', '=', 'true', ';', 'if', '(', 'AR_SREV_9300_20_OR_LATER', '(', 'ah', ')', ')', '{', 'ah', '->', 'config', '.', 'rimt_last', '=', '500', ';', 'ah', '->', 'config', '.', 'rimt_first', '=', '2000', ';', '}', 'else', '{', 'ah', '->', 'config', '.', 'rimt_last', '=', '250', ';', 'ah', '->', 'config', '.', 'rimt_first', '=', '700', ';', '}', 'if', '(', 'AR_SREV_9462', '(', 'ah', ')', '||', 'AR_SREV_9565', '(', 'ah', ')', ')', 'ah', '->', 'config', '.', 'pll_pwrsave', '=', '7', ';', '/', '*', '*', 'We', 'need', 'this', 'for', 'PCI', 'devices', 'only', '(', 'Cardbus', ',', 'PCI', ',', 'miniPCI', ')', '*', '_and_', 'if', 'on', 'non', '-', 'uniprocessor', 'systems', '(', 'Multiprocessor', '/', 'HT', ')', '.', '*', 'This', 'means', 'we', 'use', 'it', 'for', 'all', 'AR5416', 'devices', ',', 'and', 'the', '*', 'minor', 'PCI', 'AR9280', 'devices', 'out', 'there', '.', '*', '*', 'Serialization', 'is', 'required', 'because', 'these', 'devices', 'do', 'not', '*', 'well', 'the', 'case', 'of', 'two', 'concurrent', 'reads', '/', 'writes', 'due', 'to', 'the', '*', 'involved', '.', 'During', 'one', 'read', '/', 'write', 'another', 'read', '/', 'write', 'can', 'be', '*', 'on', 'another', 'CPU', 'while', 'the', 'previous', 'read', '/', 'write', 'may', 'still', 'be', '*', 'on', 'our', 'hardware', ',', 'if', 'we', 'hit', 'this', 'case', 'the', 'hardware', 'poops', 'in', 'a', 'loop', '.', '*', 'We', 'prevent', 'this', 'by', 'serializing', 'reads', 'and', 'writes', '.', '*', '*', 'This', 'issue', 'is', 'not', 'present', 'on', 'PCI', '-', 'Express', 'devices', 'or', 'pre', '-', '*', 'devices', '(', 'legacy', ',', '802', '.', '11abg', ')', '.', 'if', '(', 'num_possible_cpus', '(', ')', '>', '1', ')', 'ah', '->', 'config', '.', 'serialize_regmode', '=', 'SER_REG_MODE_AUTO', ';', 'if', '(', 'NR_CPUS', '>', '1', '&&', 'ah', '->', 'config', '.', 'serialize_regmode', '==', 'SER_REG_MODE_AUTO', ')', '{', 'if', '(', 'ah', '->', 'hw_version', '.', 'macVersion', '==', 'AR_SREV_VERSION_5416_PCI', '||', '(', '(', 'AR_SREV_9160', '(', 'ah', ')', '||', 'AR_SREV_9280', '(', 'ah', ')', '||', 'AR_SREV_9287', '(', 'ah', ')', ')', '&&', '!ah', '->', 'is_pciexpress', ')', ')', '{', 'ah', '->', 'config', '.', 'serialize_regmode', '=', 'SER_REG_MODE_ON', ';', '}', 'else', '{', 'ah', '->', 'config', '.', 'serialize_regmode', '=', 'SER_REG_MODE_OFF', ';', '}', '}', 'ath_dbg', '(', 'common', ',', 'RESET', ',', '""""', ',', 'ah', '->', 'config', '.', 'serialize_regmode', ')', ';', 'if', '(', 'AR_SREV_9285', '(', 'ah', ')', '||', 'AR_SREV_9271', '(', 'ah', ')', ')', 'ah', '->', 'config', '.', 'max_txtrig_level', '=', 'MAX_TX_FIFO_THRESHOLD', '>>', '1', ';', 'ah', '->', 'config', '.', 'max_txtrig_level', '=', 'MAX_TX_FIFO_THRESHOLD', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1589,"['MakePtyBuffers', '(', ')', '{', 'int', 'fd', '=', 'ssh', '->', 'getfd', '(', ')', ';', 'if', '(', 'fd', '==', '-', '1', ')', 'return', ';', 'ssh', '->', 'Kill', '(', 'SIGCONT', ')', ';', 'send_buf', '=', 'new', 'IOBufferFDStream', '(', 'new', 'FDStream', '(', 'ssh', '->', 'getfd_pipe_out', '(', ')', ',', '""""', ')', ',', 'IOBuffer', ':', ':', 'PUT', ')', ';', 'recv_buf', '=', 'new', 'IOBufferFDStream', '(', 'new', 'FDStream', '(', 'ssh', '->', 'getfd_pipe_in', '(', ')', ',', '""""', ')', ',', 'IOBuffer', ':', ':', 'GET', ')', ';', 'pty_send_buf', '=', 'new', 'IOBufferFDStream', '(', 'ssh', '.', 'borrow', '(', ')', ',', 'IOBuffer', ':', ':', 'PUT', ')', ';', 'pty_recv_buf', '=', 'new', 'IOBufferFDStream', '(', 'new', 'FDStream', '(', 'fd', ',', '""""', ')', ',', 'IOBuffer', ':', ':', 'GET', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1590,"['trampoline_handler', '(', 'struct', 'pt_regs', '*', 'regs', ')', '{', 'struct', 'kretprobe_instance', '*', 'ri', '=', 'NULL', ';', 'struct', 'hlist_head', '*', 'head', ',', 'empty_rp', ';', 'struct', 'hlist_node', '*', 'tmp', ';', 'unsigned', 'long', 'flags', ',', 'orig_ret_address', '=', '0', ';', 'unsigned', 'long', 'trampoline_address', '=', '(', 'unsigned', 'long', ')', '&', 'kretprobe_trampoline', ';', 'kprobe_opcode_t', '*', 'correct_ret_addr', '=', 'NULL', ';', 'INIT_HLIST_HEAD', '(', '&', 'empty_rp', ')', ';', 'kretprobe_hash_lock', '(', 'current', ',', '&', 'head', ',', '&', 'flags', ')', ';', '#ifdef', 'regs', '->', 'cs', '=', '__KERNEL_CS', ';', 'regs', '->', 'cs', '=', '__KERNEL_CS', '|', 'get_kernel_rpl', '(', ')', ';', 'regs', '->', 'gs', '=', '0', ';', 'regs', '->', 'ip', '=', 'trampoline_address', ';', 'regs', '->', 'orig_ax', '=', '~0UL', ';', '/', '*', '*', 'It', 'is', 'possible', 'to', 'have', 'multiple', 'instances', 'associated', 'with', 'a', '*', 'task', 'either', 'because', 'multiple', 'functions', 'in', 'the', 'call', 'path', '*', 'return', 'probes', 'installed', 'on', 'them', ',', 'and', '/', 'or', 'more', 'than', '*', 'return', 'probe', 'was', 'registered', 'for', 'a', 'target', 'function', '.', '*', '*', 'We', 'can', 'handle', 'this', 'because', ':', '*', '-', 'instances', 'are', 'always', 'pushed', 'into', 'the', 'head', 'of', 'the', '*', '-', 'when', 'multiple', 'return', 'probes', 'are', 'registered', 'for', 'the', '*', '\t', 'function', ',', 'the', '(', 'chronologically', ')', 'first', ""instance's"", '*', '\t', 'will', 'be', 'the', 'real', 'return', 'address', ',', 'and', 'all', 'the', 'rest', '*', '\t', 'point', 'to', 'kretprobe_trampoline', '.', 'hlist_for_each_entry_safe', '(', 'ri', ',', 'tmp', ',', 'head', ',', 'hlist', ')', '{', 'if', '(', 'ri', '->', 'task', '!=', 'current', ')', 'continue', ';', 'orig_ret_address', '=', '(', 'unsigned', 'long', ')', 'ri', '->', 'ret_addr', ';', 'if', '(', 'orig_ret_address', '!=', 'trampoline_address', ')', '/', '*', '*', 'This', 'is', 'the', 'real', 'return', 'address', '.', 'Any', '*', 'instances', 'associated', 'with', 'this', 'task', 'are', '*', 'other', 'calls', 'deeper', 'on', 'the', 'call', 'break', ';', '}', 'kretprobe_assert', '(', 'ri', ',', 'orig_ret_address', ',', 'trampoline_address', ')', ';', 'correct_ret_addr', '=', 'ri', '->', 'ret_addr', ';', 'hlist_for_each_entry_safe', '(', 'ri', ',', 'tmp', ',', 'head', ',', 'hlist', ')', '{', 'if', '(', 'ri', '->', 'task', '!=', 'current', ')', 'continue', ';', 'orig_ret_address', '=', '(', 'unsigned', 'long', ')', 'ri', '->', 'ret_addr', ';', 'if', '(', 'ri', '->', 'rp', '&&', 'ri', '->', 'rp', '->', 'handler', ')', '{', '__this_cpu_write', '(', 'current_kprobe', ',', '&', 'ri', '->', 'rp', '->', 'kp', ')', ';', 'get_kprobe_ctlblk', '(', ')', '->', 'kprobe_status', '=', 'KPROBE_HIT_ACTIVE', ';', 'ri', '->', 'ret_addr', '=', 'correct_ret_addr', ';', 'ri', '->', 'rp', '->', 'handler', '(', 'ri', ',', 'regs', ')', ';', '__this_cpu_write', '(', 'current_kprobe', ',', 'NULL', ')', ';', '}', 'recycle_rp_inst', '(', 'ri', ',', '&', 'empty_rp', ')', ';', 'if', '(', 'orig_ret_address', '!=', 'trampoline_address', ')', '/', '*', '*', 'This', 'is', 'the', 'real', 'return', 'address', '.', 'Any', '*', 'instances', 'associated', 'with', 'this', 'task', 'are', '*', 'other', 'calls', 'deeper', 'on', 'the', 'call', 'break', ';', '}', 'kretprobe_hash_unlock', '(', 'current', ',', '&', 'flags', ')', ';', 'hlist_for_each_entry_safe', '(', 'ri', ',', 'tmp', ',', '&', 'empty_rp', ',', 'hlist', ')', '{', 'hlist_del', '(', '&', 'ri', '->', 'hlist', ')', ';', 'kfree', '(', 'ri', ')', ';', '}', 'return', '(', 'void', '*', ')', 'orig_ret_address', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
1591,"['{', '/', '*', '*', 'Range', 'check', 'input', '.', '.', '.', 'if', '(', '!a', ')', 'return', ';', '/', '*', '*', 'Free', 'the', 'existing', 'elements', 'as', 'needed', '.', '.', 'if', '(', 'a', '->', 'freefunc', ')', '{', 'for', '(', 'i', '=', 'a', '->', 'num_elements', ',', 'e', '=', 'a', '->', 'elements', ';', 'i', '>', '0', ';', 'i', '--', ',', 'e', '++', ')', '(', 'a', '->', 'freefunc', ')', '(', '*', 'e', ',', 'a', '->', 'data', ')', ';', '}', '/', '*', '*', 'Set', 'the', 'number', 'of', 'elements', 'to', '0', ';', 'we', ""don't"", 'actually', 'free', 'the', '*', 'here', '-', 'that', 'is', 'done', 'in', 'cupsArrayDelete', '(', ')', '.', '.', '.', 'a', '->', 'num_elements', '=', '0', ';', 'a', '->', 'current', '=', '-', '1', ';', 'a', '->', 'insert', '=', '-', '1', ';', 'a', '->', 'unique', '=', '1', ';', 'a', '->', 'num_saved', '=', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1592,"['heap_sift', '(', 'HeapElem', '*', 'h', ',', 'int', 'root', ',', 'int', 'size', ')', '{', 'while', '(', 'root', '*', '2', '+', '1', '<', 'size', ')', '{', 'int', 'child', '=', 'root', '*', '2', '+', '1', ';', 'if', '(', 'child', '<', 'size', '-', '1', '&&', 'h', '[', 'child', ']', '.', 'val', '>', 'h', '[', 'child', '+', '1', ']', '.', 'val', ')', 'child', '++', ';', 'if', '(', 'h', '[', 'root', ']', '.', 'val', '>', 'h', '[', 'child', ']', '.', 'val', ')', '{', 'FFSWAP', '(', 'HeapElem', ',', 'h', '[', 'root', ']', ',', 'h', '[', 'child', ']', ')', ';', 'root', '=', 'child', ';', '}', 'break', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1593,"['mypopen', '(', 'char', '*', 'cmd', ',', 'char', '*', 'mode', ')', '{', '#ifdef', '/', '*', 'HBB', '20010312', ':', 'Has', 'its', 'own', 'implementation', 'of', 'popen', '(', ')', ',', 'return', '(', 'popen', ')', '(', 'cmd', ',', 'mode', ')', ';', 'int\tp', '[', '2', ']', ';', 'pid_t', '*', 'poptr', ';', 'int', 'myside', ',', 'yourside', ';', 'pid_t', 'pid', ';', 'if', '(', 'pipe', '(', 'p', ')', '<', '0', ')', 'return', '(', 'NULL', ')', ';', 'myside', '=', 'tst', '(', 'p', '[', 'WTR', ']', ',', 'p', '[', 'RDR', ']', ')', ';', 'yourside', '=', 'tst', '(', 'p', '[', 'RDR', ']', ',', 'p', '[', 'WTR', ']', ')', ';', 'if', '(', '(', 'pid', '=', 'fork', '(', ')', ')', '==', '0', ')', '{', 'int\tstdio', ';', 'for', '(', 'poptr', '=', 'popen_pid', ';', 'poptr', '<', 'popen_pid', '+', '20', ';', 'poptr', '++', ')', '{', 'if', '(', '*', 'poptr', ')', '(', 'void', ')', 'close', '(', 'poptr', '-', 'popen_pid', ')', ';', '}', 'stdio', '=', 'tst', '(', '0', ',', '1', ')', ';', 'close', '(', 'myside', ')', ';', 'close', '(', 'stdio', ')', ';', '#if', 'dup2', '(', 'yourside', ',', 'stdio', ')', ';', 'fcntl', '(', 'yourside', ',', 'F_DUPFD', ',', 'stdio', ')', ';', 'close', '(', 'yourside', ')', ';', 'execlp', '(', 'shell', ',', 'mybasename', '(', 'shell', ')', ',', '""""', ',', 'cmd', ',', '(', 'void', '*', ')', '0', ')', ';', '_exit', '(', '1', ')', ';', '}', 'else', 'if', '(', 'pid', '>', '0', ')', 'tstat', '=', 'signal', '(', 'SIGTSTP', ',', 'SIG_DFL', ')', ';', 'if', '(', 'pid', '==', '-', '1', ')', 'return', '(', 'NULL', ')', ';', 'popen_pid', '[', 'myside', ']', '=', 'pid', ';', '(', 'void', ')', 'close', '(', 'yourside', ')', ';', 'return', '(', 'fdopen', '(', 'myside', ',', 'mode', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1594,"['weight', '(', 'struct', 'obj', '*', 'obj', ')', '{', 'int', 'wt', '=', 'objects', '[', 'obj', '->', 'otyp', ']', '.', 'oc_weight', ';', 'wt', '+=', 'mons', '[', 'PM_HOUSECAT', ']', '.', 'cwt', ';', 'if', '(', 'Is_container', '(', 'obj', ')', '||', 'obj', '->', 'otyp', '==', 'STATUE', ')', '{', 'struct', 'obj', '*', 'contents', ';', 'int', 'cwt', '=', '0', ';', 'if', '(', 'obj', '->', 'otyp', '==', 'STATUE', '&&', 'obj', '->', 'corpsenm', '>=', 'LOW_PM', ')', 'wt', '=', '(', 'int', ')', 'obj', '->', 'quan', '*', '(', '(', 'int', ')', 'mons', '[', 'obj', '->', 'corpsenm', ']', '.', 'cwt', '*', '3', '/', '2', ')', ';', 'for', '(', 'contents', '=', 'obj', '->', 'cobj', ';', 'contents', ';', 'contents', '=', 'contents', '->', 'nobj', ')', 'cwt', '+=', 'weight', '(', 'contents', ')', ';', '/', '*', '*', 'The', 'weight', 'of', 'bags', 'of', 'holding', 'is', 'calculated', 'as', 'the', '*', 'of', 'the', 'bag', 'plus', 'the', 'weight', 'of', 'the', ""bag's"", 'contents', '*', 'as', 'follows', ':', '*', '*', '\tBag', 'status\tWeight', 'of', '*', '\t', '--', '--', '--', '--', '--', '\t', '--', '--', '--', '--', '--', '--', '--', '--', '--', '*', '*', '\tblessed\t\t\tx', '/', '4', '+', '*', '\totherwise\t\tx', '/', '2', '+', '*', '*', 'The', 'macro', 'DELTA_CWT', 'in', 'pickup', '.', 'c', 'also', 'implements', '*', 'weight', 'equations', '.', '*', '*', 'Note', ':', 'The', 'above', 'checks', 'are', 'performed', 'in', 'the', 'given', 'order', '.', '*', '\t', 'this', 'means', 'that', 'if', 'an', 'object', 'is', 'both', 'blessed', '*', '\t', 'cursed', '(', 'not', 'supposed', 'to', 'happen', ')', ',', 'it', 'will', 'be', '*', '\t', 'as', 'cursed', '.', 'if', '(', 'obj', '->', 'otyp', '==', 'BAG_OF_HOLDING', ')', 'cwt', '=', 'obj', '->', 'cursed', '?', '(', 'cwt', '*', '2', ')', ':', '(', '1', '+', '(', 'cwt', '/', '(', 'obj', '->', 'blessed', '?', '4', ':', '2', ')', ')', ')', ';', 'return', 'wt', '+', 'cwt', ';', '}', 'if', '(', 'obj', '->', 'otyp', '==', 'CORPSE', '&&', 'obj', '->', 'corpsenm', '>=', 'LOW_PM', ')', '{', 'long', 'long_wt', '=', 'obj', '->', 'quan', '*', '(', 'long', ')', 'mons', '[', 'obj', '->', 'corpsenm', ']', '.', 'cwt', ';', 'wt', '=', '(', 'long_wt', '>', 'LARGEST_INT', ')', '?', 'LARGEST_INT', ':', '(', 'int', ')', 'long_wt', ';', 'if', '(', 'obj', '->', 'oeaten', ')', 'wt', '=', 'eaten_stat', '(', 'wt', ',', 'obj', ')', ';', 'return', 'wt', ';', '}', 'else', 'if', '(', 'obj', '->', 'oclass', '==', 'FOOD_CLASS', '&&', 'obj', '->', 'oeaten', ')', '{', 'return', 'eaten_stat', '(', '(', 'int', ')', 'obj', '->', 'quan', '*', 'wt', ',', 'obj', ')', ';', '}', 'else', 'if', '(', 'obj', '->', 'oclass', '==', 'COIN_CLASS', ')', 'return', '(', 'int', ')', '(', '(', 'obj', '->', 'quan', '+', '50L', ')', '/', '100L', ')', ';', 'else', 'if', '(', 'obj', '->', 'otyp', '==', 'HEAVY_IRON_BALL', '&&', 'obj', '->', 'owt', '!=', '0', ')', 'return', '(', 'wt', '?', 'wt', '*', '(', 'int', ')', 'obj', '->', 'quan', ':', '(', '(', 'int', ')', 'obj', '->', 'quan', '+', '1', ')', '>>', '1', ')', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1595,"['i8k_hwmon_show_fan', '(', 'struct', 'device', '*', 'dev', ',', 'struct', 'device_attribute', '*', 'devattr', ',', 'char', '*', 'buf', ')', '{', 'int', 'index', '=', 'to_sensor_dev_attr', '(', 'devattr', ')', '->', 'index', ';', 'int', 'fan_speed', ';', 'fan_speed', '=', 'i8k_get_fan_speed', '(', 'index', ')', ';', 'if', '(', 'fan_speed', '<', '0', ')', 'return', 'fan_speed', ';', 'return', 'sprintf', '(', 'buf', ',', '""""', ',', 'fan_speed', ')', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1596,"['qmonCreateARControl', '(', 'Widget', ')', '{', 'Widget', 'ar_submit', ',', 'ar_update', ',', 'ar_done', ',', 'ar_main_link', ',', 'ar_pending', ',', 'ar_folder', ';', '#ifdef', 'static', 'Widget', 'pw', '[', '2', ']', ';', 'static', 'Widget', 'rw', '[', '2', ']', ';', 'DENTER', '(', 'GUI_LAYER', ',', '""""', ')', ';', 'qmon_ar', '=', 'XmtBuildQueryToplevel', '(', 'parent', ',', '""""', ',', '""""', ',', '&', 'ar_running_ars', ',', '#ifdef', '""""', ',', '&', 'ar_pending_ars', ',', '""""', ',', '&', 'ar_delete', ',', '""""', ',', '&', 'ar_select_all', ',', '""""', ',', '&', 'ar_update', ',', '""""', ',', '&', 'ar_customize', ',', '""""', ',', '&', 'ar_submit', ',', '""""', ',', '&', 'ar_done', ',', '""""', ',', '&', 'ar_main_link', ',', '""""', ',', '&', 'ar_folder', ',', '""""', ',', '&', 'ar_pending', ',', '""""', ',', '&', 'force_toggle', ',', 'NULL', ')', ';', '#ifdef', 'pw', '[', '0', ']', '=', 'ar_pending_ars', ';', 'pw', '[', '1', ']', '=', 'NULL', ';', 'rw', '[', '0', ']', '=', 'ar_running_ars', ';', 'rw', '[', '1', ']', '=', 'NULL', ';', 'XtAddCallback', '(', 'qmon_ar', ',', 'XmNpopupCallback', ',', 'qmonARStartUpdate', ',', 'NULL', ')', ';', 'XtAddCallback', '(', 'qmon_ar', ',', 'XmNpopdownCallback', ',', 'qmonARStopUpdate', ',', 'NULL', ')', ';', 'XtAddCallback', '(', 'ar_folder', ',', 'XmNvalueChangedCallback', ',', 'qmonARFolderChange', ',', 'NULL', ')', ';', 'XmTabSetTabWidget', '(', 'ar_folder', ',', 'ar_pending', ',', 'True', ')', ';', 'XtAddCallback', '(', 'ar_delete', ',', 'XmNactivateCallback', ',', 'qmonDeleteARCB', ',', 'NULL', ')', ';', 'XtAddCallback', '(', 'ar_select_all', ',', 'XmNactivateCallback', ',', 'qmonSelectAllARCB', ',', 'NULL', ')', ';', 'XtAddCallback', '(', 'ar_update', ',', 'XmNactivateCallback', ',', 'updateARListCB', ',', 'NULL', ')', ';', 'XtAddCallback', '(', 'ar_customize', ',', 'XmNactivateCallback', ',', 'qmonPopupARCU', ',', 'NULL', ')', ';', 'XtAddCallback', '(', 'ar_submit', ',', 'XmNactivateCallback', ',', 'qmonARSubPopup', ',', 'NULL', ')', ';', 'XtAddCallback', '(', 'ar_done', ',', 'XmNactivateCallback', ',', 'qmonARPopdown', ',', 'NULL', ')', ';', 'XtAddCallback', '(', 'ar_main_link', ',', 'XmNactivateCallback', ',', 'qmonMainControlRaise', ',', 'NULL', ')', ';', 'XtAddCallback', '(', 'ar_running_ars', ',', 'XmNenterCellCallback', ',', 'qmonARNoEdit', ',', 'NULL', ')', ';', 'XtAddCallback', '(', 'ar_running_ars', ',', 'XmNselectCellCallback', ',', 'qmonMatrixSelect', ',', '(', 'XtPointer', ')', 'rw', ')', ';', 'XtAddCallback', '(', 'ar_running_ars', ',', 'XmNlabelActivateCallback', ',', 'qmonARSort', ',', 'NULL', ')', ';', 'XtAddEventHandler', '(', 'ar_running_ars', ',', 'PointerMotionMask', ',', 'False', ',', 'qmonARHandleEnterLeave', ',', 'NULL', ')', ';', '#ifdef', 'XtAddCallback', '(', 'ar_pending_ars', ',', 'XmNenterCellCallback', ',', 'qmonARNoEdit', ',', 'NULL', ')', ';', 'XtAddCallback', '(', 'ar_pending_ars', ',', 'XmNselectCellCallback', ',', 'qmonMatrixSelect', ',', '(', 'XtPointer', ')', 'pw', ')', ';', 'XtAddCallback', '(', 'ar_pending_ars', ',', 'XmNlabelActivateCallback', ',', 'qmonARSort', ',', 'NULL', ')', ';', 'XtAddEventHandler', '(', 'ar_pending_ars', ',', 'PointerMotionMask', ',', 'False', ',', 'qmonARHandleEnterLeave', ',', 'NULL', ')', ';', 'current_matrix', '=', 'ar_pending_ars', ';', 'current_matrix', '=', 'ar_running_ars', ';', 'field_sort_by', '=', 'AR_id', ';', 'field_sort_direction', '=', 'AR_sort_ascending', ';', 'arnum_sort_direction', '=', 'AR_sort_ascending', ';', 'DEXIT', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1597,"['h261_loop_filter_c', '(', 'uint8_t', '*', 'src', ',', 'int', 'stride', ')', '{', 'int', 'x', ',', 'y', ',', 'xy', ',', 'yz', ';', 'int', 'temp', '[', '64', ']', ';', 'for', '(', 'x', '=', '0', ';', 'x', '<', '8', ';', 'x', '++', ')', '{', 'temp', '[', 'x', ']', '=', '4', '*', 'src', '[', 'x', ']', ';', 'temp', '[', 'x', '+', '7', '*', '8', ']', '=', '4', '*', 'src', '[', 'x', '+', '7', '*', 'stride', ']', ';', '}', 'for', '(', 'y', '=', '1', ';', 'y', '<', '7', ';', 'y', '++', ')', '{', 'for', '(', 'x', '=', '0', ';', 'x', '<', '8', ';', 'x', '++', ')', '{', 'xy', '=', 'y', '*', 'stride', '+', 'x', ';', 'yz', '=', 'y', '*', '8', '+', 'x', ';', 'temp', '[', 'yz', ']', '=', 'src', '[', 'xy', '-', 'stride', ']', '+', '2', '*', 'src', '[', 'xy', ']', '+', 'src', '[', 'xy', '+', 'stride', ']', ';', '}', '}', 'for', '(', 'y', '=', '0', ';', 'y', '<', '8', ';', 'y', '++', ')', '{', 'src', '[', 'y', '*', 'stride', ']', '=', '(', 'temp', '[', 'y', '*', '8', ']', '+', '2', ')', '>>', '2', ';', 'src', '[', '7', '+', 'y', '*', 'stride', ']', '=', '(', 'temp', '[', '7', '+', 'y', '*', '8', ']', '+', '2', ')', '>>', '2', ';', 'for', '(', 'x', '=', '1', ';', 'x', '<', '7', ';', 'x', '++', ')', '{', 'xy', '=', 'y', '*', 'stride', '+', 'x', ';', 'yz', '=', 'y', '*', '8', '+', 'x', ';', 'src', '[', 'xy', ']', '=', '(', 'temp', '[', 'yz', '-', '1', ']', '+', '2', '*', 'temp', '[', 'yz', ']', '+', 'temp', '[', 'yz', '+', '1', ']', '+', '8', ')', '>>', '4', ';', '}', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1598,"['GetKeyCount', '(', 'string', 'SectionName', ')', '{', 'map', '<', 'string', ',', 'map', '<', 'string', ',', 'string', '>', '>', ':', ':', 'iterator', 'it', ';', 'it', '=', 'stConfigDataTable', '.', 'find', '(', 'SectionName', ')', ';', 'if', '(', 'it', '==', 'stConfigDataTable', '.', 'end', '(', ')', ')', '{', 'return', '-', '1', ';', '}', 'map', '<', 'string', ',', 'string', '>', 'tmpMap', '=', 'it', '->', 'second', ';', 'return', 'tmpMap', '.', 'size', '(', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1599,"['gst_flups_demux_reset_psm', '(', 'GstFluPSDemux', '*', 'demux', ')', '{', 'gint', 'i', ';', '#define', 'FILL_TYPE', '(', 'start', ',', 'stop', ',', 'type', ')', 'for', '(', 'i', '=', 'start', ';', 'i', '<=', 'stop', ';', 'i', '++', ')', 'demux', '->', 'psm', '[', 'i', ']', '=', 'type', ';', 'FILL_TYPE', '(', '0x00', ',', '0x1f', ',', '-', '1', ')', ';', 'FILL_TYPE', '(', '0x20', ',', '0x3f', ',', 'ST_PS_DVD_SUBPICTURE', ')', ';', 'FILL_TYPE', '(', '0x40', ',', '0x7f', ',', '-', '1', ')', ';', 'FILL_TYPE', '(', '0x80', ',', '0x87', ',', 'ST_PS_AUDIO_AC3', ')', ';', 'FILL_TYPE', '(', '0x88', ',', '0x9f', ',', 'ST_PS_AUDIO_DTS', ')', ';', 'FILL_TYPE', '(', '0xa0', ',', '0xaf', ',', 'ST_PS_AUDIO_LPCM', ')', ';', 'FILL_TYPE', '(', '0xbd', ',', '0xbd', ',', '-', '1', ')', ';', 'FILL_TYPE', '(', '0xc0', ',', '0xdf', ',', 'ST_AUDIO_MPEG1', ')', ';', 'FILL_TYPE', '(', '0xe0', ',', '0xef', ',', 'ST_GST_VIDEO_MPEG1_OR_2', ')', ';', 'FILL_TYPE', '(', '0xf0', ',', '0xff', ',', '-', '1', ')', ';', '#undef', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1600,"['installCValueSymbols', '(', ')', '{', 'cValueSymbols_', '[', '0', ']', '=', 'makeFalse', '(', ')', ';', 'cValueSymbols_', '[', '1', ']', '=', 'makeTrue', '(', ')', ';', 'for', '(', 'size_t', 'i', '=', '2', ';', 'i', '<', 'FOTBuilder', ':', ':', 'nSymbols', ';', 'i', '++', ')', '{', 'SymbolObj', '*', 'sym', '=', 'makeSymbol', '(', 'makeStringC', '(', 'FOTBuilder', ':', ':', 'symbolName', '(', 'FOTBuilder', ':', ':', 'Symbol', '(', 'i', ')', ')', ')', ')', ';', 'sym', '->', 'setCValue', '(', 'FOTBuilder', ':', ':', 'Symbol', '(', 'i', ')', ')', ';', 'cValueSymbols_', '[', 'i', ']', '=', 'sym', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1601,"['cxd2820r_get_frontend_t2', '(', 'struct', 'dvb_frontend', '*', 'fe', ')', '{', 'struct', 'cxd2820r_priv', '*', 'priv', '=', 'fe', '->', 'demodulator_priv', ';', 'struct', 'dtv_frontend_properties', '*', 'c', '=', '&', 'fe', '->', 'dtv_property_cache', ';', 'int', 'ret', ';', 'u8', 'buf', '[', '2', ']', ';', 'ret', '=', 'cxd2820r_rd_regs', '(', 'priv', ',', '0x0205c', ',', 'buf', ',', '2', ')', ';', 'if', '(', 'ret', ')', 'goto', 'error', ';', 'switch', '(', '(', 'buf', '[', '0', ']', '>>', '0', ')', '&', '0x07', ')', '{', 'case', '0', ':', 'c', '->', 'transmission_mode', '=', 'TRANSMISSION_MODE_2K', ';', 'break', ';', 'case', '1', ':', 'c', '->', 'transmission_mode', '=', 'TRANSMISSION_MODE_8K', ';', 'break', ';', 'case', '2', ':', 'c', '->', 'transmission_mode', '=', 'TRANSMISSION_MODE_4K', ';', 'break', ';', 'case', '3', ':', 'c', '->', 'transmission_mode', '=', 'TRANSMISSION_MODE_1K', ';', 'break', ';', 'case', '4', ':', 'c', '->', 'transmission_mode', '=', 'TRANSMISSION_MODE_16K', ';', 'break', ';', 'case', '5', ':', 'c', '->', 'transmission_mode', '=', 'TRANSMISSION_MODE_32K', ';', 'break', ';', '}', 'switch', '(', '(', 'buf', '[', '1', ']', '>>', '4', ')', '&', '0x07', ')', '{', 'case', '0', ':', 'c', '->', 'guard_interval', '=', 'GUARD_INTERVAL_1_32', ';', 'break', ';', 'case', '1', ':', 'c', '->', 'guard_interval', '=', 'GUARD_INTERVAL_1_16', ';', 'break', ';', 'case', '2', ':', 'c', '->', 'guard_interval', '=', 'GUARD_INTERVAL_1_8', ';', 'break', ';', 'case', '3', ':', 'c', '->', 'guard_interval', '=', 'GUARD_INTERVAL_1_4', ';', 'break', ';', 'case', '4', ':', 'c', '->', 'guard_interval', '=', 'GUARD_INTERVAL_1_128', ';', 'break', ';', 'case', '5', ':', 'c', '->', 'guard_interval', '=', 'GUARD_INTERVAL_19_128', ';', 'break', ';', 'case', '6', ':', 'c', '->', 'guard_interval', '=', 'GUARD_INTERVAL_19_256', ';', 'break', ';', '}', 'ret', '=', 'cxd2820r_rd_regs', '(', 'priv', ',', '0x0225b', ',', 'buf', ',', '2', ')', ';', 'if', '(', 'ret', ')', 'goto', 'error', ';', 'switch', '(', '(', 'buf', '[', '0', ']', '>>', '0', ')', '&', '0x07', ')', '{', 'case', '0', ':', 'c', '->', 'fec_inner', '=', 'FEC_1_2', ';', 'break', ';', 'case', '1', ':', 'c', '->', 'fec_inner', '=', 'FEC_3_5', ';', 'break', ';', 'case', '2', ':', 'c', '->', 'fec_inner', '=', 'FEC_2_3', ';', 'break', ';', 'case', '3', ':', 'c', '->', 'fec_inner', '=', 'FEC_3_4', ';', 'break', ';', 'case', '4', ':', 'c', '->', 'fec_inner', '=', 'FEC_4_5', ';', 'break', ';', 'case', '5', ':', 'c', '->', 'fec_inner', '=', 'FEC_5_6', ';', 'break', ';', '}', 'switch', '(', '(', 'buf', '[', '1', ']', '>>', '0', ')', '&', '0x07', ')', '{', 'case', '0', ':', 'c', '->', 'modulation', '=', 'QPSK', ';', 'break', ';', 'case', '1', ':', 'c', '->', 'modulation', '=', 'QAM_16', ';', 'break', ';', 'case', '2', ':', 'c', '->', 'modulation', '=', 'QAM_64', ';', 'break', ';', 'case', '3', ':', 'c', '->', 'modulation', '=', 'QAM_256', ';', 'break', ';', '}', 'ret', '=', 'cxd2820r_rd_reg', '(', 'priv', ',', '0x020b5', ',', '&', 'buf', '[', '0', ']', ')', ';', 'if', '(', 'ret', ')', 'goto', 'error', ';', 'switch', '(', '(', 'buf', '[', '0', ']', '>>', '4', ')', '&', '0x01', ')', '{', 'case', '0', ':', 'c', '->', 'inversion', '=', 'INVERSION_OFF', ';', 'break', ';', 'case', '1', ':', 'c', '->', 'inversion', '=', 'INVERSION_ON', ';', 'break', ';', '}', 'return', 'ret', ';', 'error', ':', 'dev_dbg', '(', '&', 'priv', '->', 'i2c', '->', 'dev', ',', '""""', ',', '__func__', ',', 'ret', ')', ';', 'return', 'ret', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1602,"['ho_objlist_new', '(', ')', '{', 'ho_objlist', '*', 'new_hocr_object_list', ';', 'new_hocr_object_list', '=', '(', 'ho_objlist', '*', ')', 'malloc', '(', 'sizeof', '(', 'ho_objlist', ')', ')', ';', 'if', '(', '!new_hocr_object_list', ')', 'return', 'NULL', ';', 'new_hocr_object_list', '->', 'size', '=', '0', ';', 'new_hocr_object_list', '->', 'allocated_size', '=', '1000', ';', 'new_hocr_object_list', '->', 'objects', '=', '(', 'ho_obj', '*', ')', 'malloc', '(', 'sizeof', '(', 'ho_obj', ')', '*', 'new_hocr_object_list', '->', 'allocated_size', ')', ';', 'if', '(', '!new_hocr_object_list', '->', 'objects', ')', '{', 'free', '(', 'new_hocr_object_list', ')', ';', 'return', 'NULL', ';', '}', 'return', 'new_hocr_object_list', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1603,"['libgnac_metadata_process_video_info', '(', 'LibgnacMetadata', '*', 'md', ')', '{', 'GList', '*', 'video_info', '=', 'gst_discoverer_info_get_video_streams', '(', 'md', '->', 'priv', '->', 'info', ')', ';', 'if', '(', '!video_info', ')', 'return', ';', 'libgnac_metadata_add_boolean_value', '(', 'md', ',', 'GNAC_TAG_HAS_VIDEO', ',', 'TRUE', ')', ';', 'GList', '*', 'first', '=', 'g_list_first', '(', 'video_info', ')', ';', 'GstDiscovererVideoInfo', '*', 'video', '=', '(', 'GstDiscovererVideoInfo', '*', ')', 'first', '->', 'data', ';', 'guint', 'height', '=', 'gst_discoverer_video_info_get_height', '(', 'video', ')', ';', 'libgnac_metadata_add_uint_value', '(', 'md', ',', 'GNAC_TAG_HEIGHT', ',', 'height', ')', ';', 'guint', 'width', '=', 'gst_discoverer_video_info_get_width', '(', 'video', ')', ';', 'libgnac_metadata_add_uint_value', '(', 'md', ',', 'GNAC_TAG_WIDTH', ',', 'width', ')', ';', 'guint', 'depth', '=', 'gst_discoverer_video_info_get_depth', '(', 'video', ')', ';', 'libgnac_metadata_add_uint_value', '(', 'md', ',', 'GNAC_TAG_VIDEO_DEPTH', ',', 'depth', ')', ';', 'guint', 'rate_num', '=', 'gst_discoverer_video_info_get_framerate_num', '(', 'video', ')', ';', 'guint', 'rate_denom', '=', 'gst_discoverer_video_info_get_framerate_denom', '(', 'video', ')', ';', 'libgnac_metadata_add_fraction_value', '(', 'md', ',', 'GNAC_TAG_FRAMERATE', ',', 'rate_num', ',', 'rate_denom', ')', ';', 'if', '(', 'gst_discoverer_video_info_is_interlaced', '(', 'video', ')', ')', '{', 'libgnac_metadata_add_boolean_value', '(', 'md', ',', 'GNAC_TAG_INTERLACED', ',', 'TRUE', ')', ';', '}', 'guint', 'par_num', '=', 'gst_discoverer_video_info_get_par_num', '(', 'video', ')', ';', 'guint', 'par_denom', '=', 'gst_discoverer_video_info_get_par_denom', '(', 'video', ')', ';', 'libgnac_metadata_add_fraction_value', '(', 'md', ',', 'GNAC_TAG_PAR', ',', 'par_num', ',', 'par_denom', ')', ';', 'gst_discoverer_stream_info_list_free', '(', 'video_info', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1604,"['IntOrAsign', '(', 'struct', 'Expression', '*', 'exp', ',', 'struct', 'Operand', '*', 'op1', ',', 'struct', 'Operand', '*', 'op2', ')', '{', 'int', 'value2', '=', 'op2', '->', 'i', ';', 'exp', '->', 'type', '=', '2', ';', 'exp', '->', 'string', '=', 'PrintInt', '(', 'op1', '->', 'i', '|=', 'value2', ')', ';', 'if', '(', '!exp', '->', 'expType', ')', '{', 'exp', '->', 'expType', '=', 'op1', '->', 'type', ';', 'if', '(', 'op1', '->', 'type', ')', 'op1', '->', 'type', '->', 'refCount', '++', ';', '}', 'return', '0x1', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1605,"['ext_xml_parse', '(', 'const', 'char', '*', '*', 'retp', ',', 'int', 'len', ',', 'extvec_t', '*', 'exv', ',', 'int', 'exvcnt', ')', '{', 'const', 'char', '*', 'p', '=', '*', 'retp', ';', 'const', 'char', '*', 'end', '=', '&', 'p', '[', 'len', ']', ';', 'extdesc_t', '*', 'd', ';', 'g_assert', '(', 'exvcnt', '>', '0', ')', ';', 'g_assert', '(', 'exv', '->', 'opaque', '==', 'NULL', ')', ';', 'for', '(', '/', '*', 'NOTHING', '*', '/', ';', 'p', '!=', 'end', ';', 'p', '++', ')', '{', 'uchar', 'c', '=', '*', 'p', ';', 'if', '(', 'c', '==', ""''"", '||', 'c', '==', 'HUGE_FS', ')', '{', 'break', ';', '}', '}', '/', '*', '*', 'We', ""don't"", 'analyze', 'the', 'XML', ',', 'encapsulate', 'as', 'one', 'big', 'opaque', 'chunk', '.', 'WALLOC', '(', 'd', ')', ';', 'd', '->', 'ext_phys_payload', '=', 'lastp', ';', 'd', '->', 'ext_phys_len', '=', 'd', '->', 'ext_phys_paylen', '=', 'p', '-', 'lastp', ';', 'd', '->', 'ext_payload', '=', 'd', '->', 'ext_phys_payload', ';', 'd', '->', 'ext_paylen', '=', 'd', '->', 'ext_phys_paylen', ';', 'exv', '->', 'opaque', '=', 'd', ';', 'exv', '->', 'ext_type', '=', 'EXT_XML', ';', 'exv', '->', 'ext_name', '=', 'NULL', ';', 'exv', '->', 'ext_token', '=', 'EXT_T_XML', ';', 'g_assert', '(', 'p', '-', 'lastp', '==', 'd', '->', 'ext_phys_len', ')', ';', 'if', '(', 'p', '!=', 'end', ')', 'return', '1', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1606,"['ide_acpi_exec_tfs', '(', 'ide_drive_t', '*', 'drive', ')', '{', 'int\t\tret', ';', 'unsigned', 'int\tgtf_length', ';', 'unsigned', 'long\tgtf_address', ';', 'unsigned', 'long\tobj_loc', ';', 'DEBPRINT', '(', '""""', ',', 'drive', '->', 'name', ',', 'drive', '->', 'dn', ')', ';', 'ret', '=', 'do_drive_get_GTF', '(', 'drive', ',', '&', 'gtf_length', ',', '&', 'gtf_address', ',', '&', 'obj_loc', ')', ';', 'if', '(', 'ret', '<', '0', ')', '{', 'DEBPRINT', '(', '""""', ',', 'ret', ')', ';', 'return', 'ret', ';', '}', 'DEBPRINT', '(', '""""', ',', 'drive', '->', 'name', ')', ';', 'ret', '=', 'do_drive_set_taskfiles', '(', 'drive', ',', 'gtf_length', ',', 'gtf_address', ')', ';', 'kfree', '(', '(', 'void', '*', ')', 'obj_loc', ')', ';', 'if', '(', 'ret', '<', '0', ')', '{', 'DEBPRINT', '(', '""""', ',', 'ret', ')', ';', '}', 'DEBPRINT', '(', '""""', ',', 'ret', ')', ';', 'return', 'ret', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1607,"['get_chip_type', '(', 'struct', 'pci_dev', '*', 'pdev', ',', 'u32', 'pl_rev', ')', '{', 'u16', 'device_id', ';', 'pci_read_config_word', '(', 'pdev', ',', 'PCI_DEVICE_ID', ',', '&', 'device_id', ')', ';', 'switch', '(', 'device_id', '>>', '12', ')', '{', 'case', 'CHELSIO_T4', ':', 'return', 'CHELSIO_CHIP_CODE', '(', 'CHELSIO_T4', ',', 'pl_rev', ')', ';', 'case', 'CHELSIO_T5', ':', 'return', 'CHELSIO_CHIP_CODE', '(', 'CHELSIO_T5', ',', 'pl_rev', ')', ';', 'case', 'CHELSIO_T6', ':', 'return', 'CHELSIO_CHIP_CODE', '(', 'CHELSIO_T6', ',', 'pl_rev', ')', ';', 'default', ':', 'dev_err', '(', '&', 'pdev', '->', 'dev', ',', '""""', ',', 'device_id', ')', ';', '}', 'return', '-', 'EINVAL', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1608,"['acl_create_entry', '(', 'acl_t', '*', 'acl_p', ',', 'acl_entry_t', '*', 'entry_p', ')', '{', 'acl_obj', '*', 'acl_obj_p', ';', 'acl_entry_obj', '*', 'entry_obj_p', ';', 'if', '(', '!acl_p', '||', '!entry_p', ')', '{', 'if', '(', 'entry_p', ')', '*', 'entry_p', '=', 'NULL', ';', 'errno', '=', 'EINVAL', ';', 'return', '-', '1', ';', '}', 'acl_obj_p', '=', 'ext2int', '(', 'acl', ',', '*', 'acl_p', ')', ';', 'if', '(', '!acl_obj_p', ')', 'return', '-', '1', ';', 'entry_obj_p', '=', '__acl_create_entry_obj', '(', 'acl_obj_p', ')', ';', 'if', '(', 'entry_obj_p', '==', 'NULL', ')', 'return', '-', '1', ';', '*', 'entry_p', '=', 'int2ext', '(', 'entry_obj_p', ')', ';', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1609,"['lgl_template_dup', '(', 'const', 'lglTemplate', '*', 'orig_template', ')', '{', 'lglTemplate', '*', 'template', ';', 'GList', '*', 'p', ';', 'lglTemplateFrame', '*', 'frame', ';', 'g_return_val_if_fail', '(', 'orig_template', ',', 'NULL', ')', ';', 'template', '=', 'lgl_template_new', '(', 'orig_template', '->', 'brand', ',', 'orig_template', '->', 'part', ',', 'orig_template', '->', 'description', ',', 'orig_template', '->', 'paper_id', ',', 'orig_template', '->', 'page_width', ',', 'orig_template', '->', 'page_height', ')', ';', 'template', '->', 'equiv_part', '=', 'g_strdup', '(', 'orig_template', '->', 'equiv_part', ')', ';', 'template', '->', 'product_url', '=', 'g_strdup', '(', 'orig_template', '->', 'product_url', ')', ';', 'for', '(', 'p', '=', 'orig_template', '->', 'category_ids', ';', 'p', '!=', 'NULL', ';', 'p', '=', 'p', '->', 'next', ')', '{', 'lgl_template_add_category', '(', 'template', ',', 'p', '->', 'data', ')', ';', '}', 'for', '(', 'p', '=', 'orig_template', '->', 'frames', ';', 'p', '!=', 'NULL', ';', 'p', '=', 'p', '->', 'next', ')', '{', 'frame', '=', '(', 'lglTemplateFrame', '*', ')', 'p', '->', 'data', ';', 'lgl_template_add_frame', '(', 'template', ',', 'lgl_template_frame_dup', '(', 'frame', ')', ')', ';', '}', 'return', 'template', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1610,"['elm_6node_triangle_shape_functions', '(', ')', '{', 'double', 'u', ',', 'v', ';', 'int', 'i', ',', 'j', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', '6', ';', 'i', '++', ')', '{', 'u', '=', 'NodeU', '[', 'i', ']', ';', 'v', '=', 'NodeV', '[', 'i', ']', ';', 'A', '[', 'i', ']', '[', '0', ']', '=', '1', ';', 'A', '[', 'i', ']', '[', '1', ']', '=', 'u', ';', 'A', '[', 'i', ']', '[', '2', ']', '=', 'v', ';', 'A', '[', 'i', ']', '[', '3', ']', '=', 'u', '*', 'v', ';', 'A', '[', 'i', ']', '[', '4', ']', '=', 'u', '*', 'u', ';', 'A', '[', 'i', ']', '[', '5', ']', '=', 'v', '*', 'v', ';', '}', 'lu_mtrinv', '(', '(', 'double', '*', ')', 'A', ',', '6', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', '6', ';', 'i', '++', ')', 'for', '(', 'j', '=', '0', ';', 'j', '<', '6', ';', 'j', '++', ')', 'N', '[', 'i', ']', '[', 'j', ']', '=', 'A', '[', 'j', ']', '[', 'i', ']', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1611,"['via_driver_load', '(', 'struct', 'drm_device', '*', 'dev', ',', 'unsigned', 'long', 'chipset', ')', '{', 'drm_via_private_t', '*', 'dev_priv', ';', 'int', 'ret', '=', '0', ';', 'dev_priv', '=', 'kzalloc', '(', 'sizeof', '(', 'drm_via_private_t', ')', ',', 'GFP_KERNEL', ')', ';', 'if', '(', 'dev_priv', '==', 'NULL', ')', 'return', '-', 'ENOMEM', ';', 'idr_init', '(', '&', 'dev_priv', '->', 'object_idr', ')', ';', 'dev', '->', 'dev_private', '=', '(', 'void', '*', ')', 'dev_priv', ';', 'dev_priv', '->', 'chipset', '=', 'chipset', ';', 'pci_set_master', '(', 'dev', '->', 'pdev', ')', ';', 'ret', '=', 'drm_vblank_init', '(', 'dev', ',', '1', ')', ';', 'if', '(', 'ret', ')', '{', 'kfree', '(', 'dev_priv', ')', ';', 'return', 'ret', ';', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1612,"['skeleton_open', '(', 'struct', 'net_device', '*', 'netdev', ')', '{', 'struct', 'skeleton_nic', '*', 'skel', '=', 'netdev', '->', 'priv', ';', 'DBGC', '(', 'skel', ',', '""""', ',', 'skel', ')', ';', 'return', '-', 'ENOTSUP', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1613,"['_dxfCopySearchGrid', '(', 'Grid', 'src', ')', '{', 'int', 'i', ';', 'Grid', 'dst', ';', 'dst', '=', '(', 'Grid', ')', 'DXAllocate', '(', 'sizeof', '(', 'struct', 'grid', ')', ')', ';', 'if', '(', '!', 'dst', ')', 'return', 'NULL', ';', 'memcpy', '(', '(', 'char', '*', ')', 'dst', ',', '(', 'char', '*', ')', 'src', ',', 'sizeof', '(', 'struct', 'grid', ')', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'MAXGRID', ';', 'i', '++', ')', 'if', '(', 'dst', '->', 'gridlevels', '[', 'i', ']', '.', 'bucketArray', ')', 'DXReference', '(', '(', 'Object', ')', 'dst', '->', 'gridlevels', '[', 'i', ']', '.', 'bucketArray', ')', ';', 'DXReference', '(', '(', 'Object', ')', 'dst', '->', 'itemArray', ')', ';', 'return', 'dst', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1614,"['add_chains', '(', 'const', 'std', ':', ':', 'vector', '<', 'string', '>', '&', 'new_chains', ')', '{', '/', '/', '--', '--', '--', '--', 'DBC_REQUIRE', '(', 'is_selected', '(', ')', '==', 'true', ')', ';', 'DBC_REQUIRE', '(', 'connected_chainsetup', '(', ')', '!=', 'selected_chainsetup', '(', ')', ')', ';', '/', '/', '--', '--', '--', '--', 'selected_chainsetup_repp', '->', 'add_new_chains', '(', 'new_chains', ')', ';', 'selected_chainsetup_repp', '->', 'select_chains', '(', 'new_chains', ')', ';', 'ECA_LOG_MSG', '(', 'ECA_LOGGER', ':', ':', 'info', ',', '""""', '+', 'kvu_vector_to_string', '(', 'new_chains', ',', '""""', ')', '+', '""""', ')', ';', '/', '/', '--', '--', '--', '--', 'DBC_ENSURE', '(', 'selected_chains', '(', ')', '.', 'size', '(', ')', '==', 'new_chains', '.', 'size', '(', ')', ')', ';', '/', '/', '--', '--', '--', '--', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1615,"['stoi', '(', 'unsigned', 'char', '*', 's', ',', 'int', 'len', ')', '{', 'unsigned', 'long', 'val', '=', '0', ';', 'unsigned', 'long', 'Cnt', '=', '0', ';', 'if', '(', 'len', '>', '4', ')', 'return', '0', ';', 'while', '(', 'Cnt', '<', 'len', ')', 'val', '=', '(', 'val', '<<', '8', ')', '+', 's', '[', 'Cnt', '++', ']', ';', 'return', 'val', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1616,"['entry_in_cache', '(', 'H5C_t', '*', 'cache_ptr', ',', 'int32_t', 'type', ',', 'int32_t', 'idx', ')', '{', 'test_entry_t', '*', 'base_addr', ';', 'test_entry_t', '*', 'entry_ptr', ';', 'H5C_cache_entry_t', '*', 'test_ptr', '=', 'NULL', ';', 'HDassert', '(', 'cache_ptr', ')', ';', 'HDassert', '(', '(', '0', '<=', 'type', ')', '&&', '(', 'type', '<', 'NUMBER_OF_ENTRY_TYPES', ')', ')', ';', 'HDassert', '(', '(', '0', '<=', 'idx', ')', '&&', '(', 'idx', '<=', 'max_indices', '[', 'type', ']', ')', ')', ';', 'base_addr', '=', 'entries', '[', 'type', ']', ';', 'entry_ptr', '=', '&', '(', 'base_addr', '[', 'idx', ']', ')', ';', 'HDassert', '(', 'entry_ptr', '->', 'index', '==', 'idx', ')', ';', 'HDassert', '(', 'entry_ptr', '->', 'type', '==', 'type', ')', ';', 'HDassert', '(', 'entry_ptr', '==', 'entry_ptr', '->', 'self', ')', ';', 'H5C_TEST__SEARCH_INDEX', '(', 'cache_ptr', ',', 'entry_ptr', '->', 'addr', ',', 'test_ptr', ')', 'if', '(', 'test_ptr', '!=', 'NULL', ')', '{', 'in_cache', '=', 'TRUE', ';', 'HDassert', '(', 'test_ptr', '==', '(', 'H5C_cache_entry_t', '*', ')', 'entry_ptr', ')', ';', 'HDassert', '(', 'entry_ptr', '->', 'addr', '==', 'entry_ptr', '->', 'header', '.', 'addr', ')', ';', '}', 'return', '(', 'in_cache', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
1617,"['isValidCV', '(', 'ConSeq', 'c', ',', 'VowelSeq', 'v', ')', '{', 'if', '(', 'c', '==', 'cs_nil', '||', 'v', '==', 'vs_nil', ')', 'return', 'true', ';', 'VowelSeqInfo', '&', 'vInfo', '=', 'VSeqList', '[', 'v', ']', ';', 'if', '(', '(', 'c', '==', 'cs_gi', '&&', 'vInfo', '.', 'v', '[', '0', ']', '==', 'vnl_i', ')', '||', '(', 'c', '==', 'cs_qu', '&&', 'vInfo', '.', 'v', '[', '0', ']', '==', 'vnl_u', ')', ')', 'return', 'false', ';', '/', '/', 'gi', ""doesn''t"", 'go', 'with', 'if', '(', 'c', '==', 'cs_k', ')', '{', '/', '/', 'k', 'can', 'only', 'go', 'with', 'the', 'following', 'vowel', 'static', 'VowelSeq', 'kVseq', '[', ']', '=', '{', 'vs_e', ',', 'vs_i', ',', 'vs_y', ',', 'vs_er', ',', 'vs_eo', ',', 'vs_eu', ',', 'vs_eru', ',', 'vs_ia', ',', 'vs_ie', ',', 'vs_ier', ',', 'vs_ieu', ',', 'vs_ieru', ',', 'vs_nil', '}', ';', 'int', 'i', ';', 'for', '(', 'i', '=', '0', ';', 'kVseq', '[', 'i', ']', '!=', 'vs_nil', '&&', 'kVseq', '[', 'i', ']', '!=', 'v', ';', 'i', '++', ')', ';', 'return', '(', 'kVseq', '[', 'i', ']', '!=', 'vs_nil', ')', ';', '}', '/', '/', 'More', 'return', 'true', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1618,"['system_get_full_string', '(', 'const', 'equation_system', '*', 'sys', ',', 'int', 'tex', ')', '{', 'static', 'char', 'sysstr', '[', '128', ']', ';', 'const', 'char', '*', 'lstr', '=', 'gretl_system_long_strings', '[', 'sys', '->', 'method', ']', ';', 'if', '(', 'sys', '->', 'flags', '&', 'SYSTEM_ITERATE', ')', '{', 'if', '(', 'tex', ')', '{', 'sprintf', '(', 'sysstr', ',', 'A_', '(', '""""', ')', ',', 'A_', '(', 'lstr', ')', ')', ';', '}', 'else', '{', 'sprintf', '(', 'sysstr', ',', '_', '(', '""""', ')', ',', '_', '(', 'lstr', ')', ')', ';', '}', '}', 'else', 'if', '(', 'tex', ')', '{', 'strcpy', '(', 'sysstr', ',', 'A_', '(', 'lstr', ')', ')', ';', '}', 'else', '{', 'strcpy', '(', 'sysstr', ',', '_', '(', 'lstr', ')', ')', ';', '}', 'return', 'sysstr', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1619,"['_tor_memdup', '(', 'const', 'void', '*', 'mem', ',', 'size_t', 'len', 'DMALLOC_PARAMS', ')', '{', 'char', '*', 'dup', ';', 'tor_assert', '(', 'len', '<', 'SIZE_T_CEILING', ')', ';', 'tor_assert', '(', 'mem', ')', ';', 'dup', '=', '_tor_malloc', '(', 'len', 'DMALLOC_FN_ARGS', ')', ';', 'memcpy', '(', 'dup', ',', 'mem', ',', 'len', ')', ';', 'return', 'dup', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1620,"['_dbus_string_insert_byte', '(', 'DBusString', '*', 'str', ',', 'int', 'i', ',', 'unsigned', 'char', 'byte', ')', '{', 'DBUS_STRING_PREAMBLE', '(', 'str', ')', ';', '_dbus_assert', '(', 'i', '<=', 'real', '->', 'len', ')', ';', '_dbus_assert', '(', 'i', '>=', '0', ')', ';', 'if', '(', '!open_gap', '(', '1', ',', 'real', ',', 'i', ')', ')', 'return', 'FALSE', ';', 'real', '->', 'str', '[', 'i', ']', '=', 'byte', ';', 'return', 'TRUE', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
1621,"['description', '(', ')', 'const', '{', 'ostringstream', 'ostr', ';', 'ostr', '<<', '_phimin', '<<', '""""', '<<', '_phimax', ';', 'return', 'ostr', '.', 'str', '(', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1622,"['is_valid', '(', 'void', ')', '{', 'if', '(', 'csetup_repp', '==', '0', '||', 'csetup_repp', '->', 'is_enabled', '(', ')', '!=', 'true', '||', 'csetup_repp', '->', 'is_valid', '(', ')', '!=', 'true', '||', 'chains_repp', '==', '0', '||', 'chains_repp', '->', 'size', '(', ')', '==', '0', '||', 'inputs_repp', '==', '0', '||', 'inputs_repp', '->', 'size', '(', ')', '==', '0', '||', 'outputs_repp', '==', '0', '||', 'outputs_repp', '->', 'size', '(', ')', '==', '0', ')', '{', 'return', 'false', ';', '}', 'return', 'true', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1623,"['init_masks', '(', ')', '{', 'for', '(', 'Square', 's', '=', 'SQ_A1', ';', 's', '<=', 'SQ_H8', ';', 's', '++', ')', '{', 'SetMaskBB', '[', 's', ']', '=', '(', '1ULL', '<<', 's', ')', ';', 'ClearMaskBB', '[', 's', ']', '=', '~SetMaskBB', '[', 's', ']', ';', '}', 'for', '(', 'Color', 'c', '=', 'WHITE', ';', 'c', '<=', 'BLACK', ';', 'c', '++', ')', 'for', '(', 'Square', 's', '=', 'SQ_A1', ';', 's', '<=', 'SQ_H8', ';', 's', '++', ')', '{', 'PassedPawnMask', '[', 'c', ']', '[', 's', ']', '=', 'in_front_bb', '(', 'c', ',', 's', ')', '&', 'this_and_neighboring_files_bb', '(', 's', ')', ';', 'OutpostMask', '[', 'c', ']', '[', 's', ']', '=', 'in_front_bb', '(', 'c', ',', 's', ')', '&', 'neighboring_files_bb', '(', 's', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1624,"['goo_canvas_set_adjustments', '(', 'GooCanvas', '*', 'canvas', ',', 'GtkAdjustment', '*', 'hadj', ',', 'GtkAdjustment', '*', 'vadj', ')', '{', 'gboolean', 'need_reconfigure', '=', 'FALSE', ';', 'g_return_if_fail', '(', 'GOO_IS_CANVAS', '(', 'canvas', ')', ')', ';', 'if', '(', 'hadj', ')', 'g_return_if_fail', '(', 'GTK_IS_ADJUSTMENT', '(', 'hadj', ')', ')', ';', 'else', 'if', '(', 'canvas', '->', 'hadjustment', ')', 'hadj', '=', 'GTK_ADJUSTMENT', '(', 'gtk_adjustment_new', '(', '0', '.', '0', ',', '0', '.', '0', ',', '0', '.', '0', ',', '0', '.', '0', ',', '0', '.', '0', ',', '0', '.', '0', ')', ')', ';', 'if', '(', 'vadj', ')', 'g_return_if_fail', '(', 'GTK_IS_ADJUSTMENT', '(', 'vadj', ')', ')', ';', 'else', 'if', '(', 'canvas', '->', 'vadjustment', ')', 'vadj', '=', 'GTK_ADJUSTMENT', '(', 'gtk_adjustment_new', '(', '0', '.', '0', ',', '0', '.', '0', ',', '0', '.', '0', ',', '0', '.', '0', ',', '0', '.', '0', ',', '0', '.', '0', ')', ')', ';', 'if', '(', 'canvas', '->', 'hadjustment', '&&', '(', 'canvas', '->', 'hadjustment', '!=', 'hadj', ')', ')', '{', 'g_signal_handlers_disconnect_by_func', '(', 'canvas', '->', 'hadjustment', ',', 'goo_canvas_adjustment_value_changed', ',', 'canvas', ')', ';', 'g_object_unref', '(', 'canvas', '->', 'hadjustment', ')', ';', '}', 'if', '(', 'canvas', '->', 'vadjustment', '&&', '(', 'canvas', '->', 'vadjustment', '!=', 'vadj', ')', ')', '{', 'g_signal_handlers_disconnect_by_func', '(', 'canvas', '->', 'vadjustment', ',', 'goo_canvas_adjustment_value_changed', ',', 'canvas', ')', ';', 'g_object_unref', '(', 'canvas', '->', 'vadjustment', ')', ';', '}', 'if', '(', 'canvas', '->', 'hadjustment', '!=', 'hadj', ')', '{', 'canvas', '->', 'hadjustment', '=', 'hadj', ';', 'g_object_ref_sink', '(', 'canvas', '->', 'hadjustment', ')', ';', 'g_signal_connect', '(', 'canvas', '->', 'hadjustment', ',', '""""', ',', 'G_CALLBACK', '(', 'goo_canvas_adjustment_value_changed', ')', ',', 'canvas', ')', ';', 'need_reconfigure', '=', 'TRUE', ';', '}', 'if', '(', 'canvas', '->', 'vadjustment', '!=', 'vadj', ')', '{', 'canvas', '->', 'vadjustment', '=', 'vadj', ';', 'g_object_ref_sink', '(', 'canvas', '->', 'vadjustment', ')', ';', 'g_signal_connect', '(', 'canvas', '->', 'vadjustment', ',', '""""', ',', 'G_CALLBACK', '(', 'goo_canvas_adjustment_value_changed', ')', ',', 'canvas', ')', ';', 'need_reconfigure', '=', 'TRUE', ';', '}', 'if', '(', 'need_reconfigure', ')', 'reconfigure_canvas', '(', 'canvas', ',', 'TRUE', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1625,"['terminaltypeok', '(', 'char', '*', 's', ')', '{', '#ifdef', 'char', 'buf', '[', '2048', ']', ';', 'if', '(', 'terminaltype', '==', 'NULL', ')', 'return', '1', ';', 'if', '(', 'tgetent', '(', 'buf', ',', 's', ')', '==', '0', ')', 'return', '0', ';', 'return', '1', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1626,"['gt_bsGetUInt64', '(', 'constBitString', 'str', ',', 'BitOffset', 'offset', ',', 'unsigned', 'numBits', ')', '{', 'unsigned', 'long', 'long', 'accum', '=', '0', ';', 'unsigned', 'bitsLeft', '=', 'numBits', ',', 'bitTop', '=', 'offset', '%', 'bitElemBits', ';', 'size_t', 'elemStart', '=', 'offset', '/', 'bitElemBits', ';', 'const', 'BitElem', '*', 'p', '=', 'str', '+', 'elemStart', ';', 'gt_assert', '(', 'str', ')', ';', '#ifndef', 'if', '(', 'numBits', '>', 'sizeof', '(', 'accum', ')', '*', 'CHAR_BIT', ')', 'fprintf', '(', 'stderr', ',', '""""', ',', 'numBits', ')', ';', 'gt_assert', '(', 'numBits', '<=', 'sizeof', '(', 'accum', ')', '*', 'CHAR_BIT', ')', ';', 'if', '(', 'bitTop', ')', '{', 'unsigned', 'long', 'long', 'mask', ';', 'unsigned', 'bits2Read', '=', 'MIN', '(', 'bitElemBits', '-', 'bitTop', ',', 'bitsLeft', ')', ';', 'unsigned', 'unreadRightBits', '=', '(', 'bitElemBits', '-', 'bitTop', '-', 'bits2Read', ')', ';', 'mask', '=', '(', '~', '(', '(', '~', '(', 'unsigned', 'long', 'long', ')', '0', ')', '<<', 'bits2Read', ')', ')', '<<', 'unreadRightBits', ';', 'accum', '=', '(', '(', '*', 'p', '++', ')', '&', 'mask', ')', '>>', 'unreadRightBits', ';', 'bitsLeft', '-=', 'bits2Read', ';', '}', 'while', '(', 'bitsLeft', '>=', 'bitElemBits', ')', '{', 'accum', '=', 'accum', '<<', 'bitElemBits', '|', '(', '*', 'p', '++', ')', ';', 'bitsLeft', '-=', 'bitElemBits', ';', '}', 'if', '(', 'bitsLeft', ')', '{', 'accum', '=', 'accum', '<<', 'bitsLeft', '|', '(', '(', '(', '*', 'p', ')', '&', '(', '(', '~', '(', 'unsigned', 'long', 'long', ')', '0', ')', '<<', '(', 'bitElemBits', '-', 'bitsLeft', ')', ')', ')', '>>', '(', 'bitElemBits', '-', 'bitsLeft', ')', ')', ';', '}', 'return', 'accum', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1627,"['hwi_post_async_buffers', '(', 'struct', 'beiscsi_hba', '*', 'phba', ',', 'unsigned', 'int', 'is_header', ',', 'uint8_t', 'ulp_num', ')', '{', 'struct', 'hwi_controller', '*', 'phwi_ctrlr', ';', 'struct', 'hwi_async_pdu_context', '*', 'pasync_ctx', ';', 'struct', 'async_pdu_handle', '*', 'pasync_handle', ';', 'struct', 'list_head', '*', 'pfree_link', ',', '*', 'pbusy_list', ';', 'struct', 'phys_addr', '*', 'pasync_sge', ';', 'unsigned', 'int', 'ring_id', ',', 'num_entries', ';', 'unsigned', 'int', 'host_write_num', ',', 'doorbell_offset', ';', 'unsigned', 'int', 'writables', ';', 'unsigned', 'int', 'i', '=', '0', ';', 'u32', 'doorbell', '=', '0', ';', 'phwi_ctrlr', '=', 'phba', '->', 'phwi_ctrlr', ';', 'pasync_ctx', '=', 'HWI_GET_ASYNC_PDU_CTX', '(', 'phwi_ctrlr', ',', 'ulp_num', ')', ';', 'num_entries', '=', 'pasync_ctx', '->', 'num_entries', ';', 'if', '(', 'is_header', ')', '{', 'writables', '=', 'min', '(', 'pasync_ctx', '->', 'async_header', '.', 'writables', ',', 'pasync_ctx', '->', 'async_header', '.', 'free_entries', ')', ';', 'pfree_link', '=', 'pasync_ctx', '->', 'async_header', '.', 'free_list', '.', 'next', ';', 'host_write_num', '=', 'pasync_ctx', '->', 'async_header', '.', 'host_write_ptr', ';', 'ring_id', '=', 'phwi_ctrlr', '->', 'default_pdu_hdr', '[', 'ulp_num', ']', '.', 'id', ';', 'doorbell_offset', '=', 'phwi_ctrlr', '->', 'default_pdu_hdr', '[', 'ulp_num', ']', '.', 'doorbell_offset', ';', '}', 'else', '{', 'writables', '=', 'min', '(', 'pasync_ctx', '->', 'async_data', '.', 'writables', ',', 'pasync_ctx', '->', 'async_data', '.', 'free_entries', ')', ';', 'pfree_link', '=', 'pasync_ctx', '->', 'async_data', '.', 'free_list', '.', 'next', ';', 'host_write_num', '=', 'pasync_ctx', '->', 'async_data', '.', 'host_write_ptr', ';', 'ring_id', '=', 'phwi_ctrlr', '->', 'default_pdu_data', '[', 'ulp_num', ']', '.', 'id', ';', 'doorbell_offset', '=', 'phwi_ctrlr', '->', 'default_pdu_data', '[', 'ulp_num', ']', '.', 'doorbell_offset', ';', '}', 'writables', '=', '(', 'writables', '/', '8', ')', '*', '8', ';', 'if', '(', 'writables', ')', '{', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'writables', ';', 'i', '++', ')', '{', 'pbusy_list', '=', 'hwi_get_async_busy_list', '(', 'pasync_ctx', ',', 'is_header', ',', 'host_write_num', ')', ';', 'pasync_handle', '=', 'list_entry', '(', 'pfree_link', ',', 'struct', 'async_pdu_handle', ',', 'link', ')', ';', 'WARN_ON', '(', '!pasync_handle', ')', ';', 'pasync_handle', '->', 'consumed', '=', '0', ';', 'pfree_link', '=', 'pfree_link', '->', 'next', ';', 'pasync_sge', '=', 'hwi_get_ring_address', '(', 'pasync_ctx', ',', 'is_header', ',', 'host_write_num', ')', ';', 'pasync_sge', '->', 'hi', '=', 'pasync_handle', '->', 'pa', '.', 'u', '.', 'a32', '.', 'address_lo', ';', 'pasync_sge', '->', 'lo', '=', 'pasync_handle', '->', 'pa', '.', 'u', '.', 'a32', '.', 'address_hi', ';', 'list_move', '(', '&', 'pasync_handle', '->', 'link', ',', 'pbusy_list', ')', ';', 'host_write_num', '++', ';', 'host_write_num', '=', 'host_write_num', '%', 'num_entries', ';', '}', 'if', '(', 'is_header', ')', '{', 'pasync_ctx', '->', 'async_header', '.', 'host_write_ptr', '=', 'host_write_num', ';', 'pasync_ctx', '->', 'async_header', '.', 'free_entries', '-=', 'writables', ';', 'pasync_ctx', '->', 'async_header', '.', 'writables', '-=', 'writables', ';', 'pasync_ctx', '->', 'async_header', '.', 'busy_entries', '+=', 'writables', ';', '}', 'else', '{', 'pasync_ctx', '->', 'async_data', '.', 'host_write_ptr', '=', 'host_write_num', ';', 'pasync_ctx', '->', 'async_data', '.', 'free_entries', '-=', 'writables', ';', 'pasync_ctx', '->', 'async_data', '.', 'writables', '-=', 'writables', ';', 'pasync_ctx', '->', 'async_data', '.', 'busy_entries', '+=', 'writables', ';', '}', 'doorbell', '|=', 'ring_id', '&', 'DB_DEF_PDU_RING_ID_MASK', ';', 'doorbell', '|=', '1', '<<', 'DB_DEF_PDU_REARM_SHIFT', ';', 'doorbell', '|=', '0', '<<', 'DB_DEF_PDU_EVENT_SHIFT', ';', 'doorbell', '|=', '(', 'writables', '&', 'DB_DEF_PDU_CQPROC_MASK', ')', '<<', 'DB_DEF_PDU_CQPROC_SHIFT', ';', 'iowrite32', '(', 'doorbell', ',', 'phba', '->', 'db_va', '+', 'doorbell_offset', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
1628,"['rc_input_new_inet', '(', 'const', 'char', '*', 'path', ',', 'int', 'type', ')', '{', 'char', '*', 's_addr', ',', '*', 's_port', ';', 'uint32_t', 'addr', ';', 'int', 'port', ';', 'struct', 'sockaddr_in', 'sin', ';', 'int', 'fd', ';', 'if', '(', '!', '(', 's_port', '=', 'strchr', '(', 'path', ',', ""''"", ')', ')', ')', '{', 'errno', '=', 'EINVAL', ';', 'return', '-', '1', ';', '}', 's_addr', '=', 'xstrndup', '(', 'path', ',', 's_port', '-', 'path', ')', ';', 'addr', '=', 'inet_addr', '(', 's_addr', ')', ';', 'port', '=', 'atoi', '(', 's_port', '+', '1', ')', ';', 'xfree', '(', 's_addr', ')', ';', 'sin', '.', 'sin_family', '=', 'AF_INET', ';', 'sin', '.', 'sin_port', '=', 'htons', '(', 'port', ')', ';', 'sin', '.', 'sin_addr', '.', 's_addr', '=', 'addr', ';', 'if', '(', '(', 'fd', '=', 'socket', '(', 'AF_INET', ',', 'type', ',', '0', ')', ')', '==', '-', '1', ')', 'return', '-', '1', ';', 'if', '(', 'connect', '(', 'fd', ',', '(', 'struct', 'sockaddr', '*', ')', '&', 'sin', ',', 'sizeof', '(', 'sin', ')', ')', ')', '{', 'int', 'err', '=', 'errno', ';', 'close', '(', 'fd', ')', ';', 'errno', '=', 'err', ';', 'return', '-', '1', ';', '}', 'return', 'fd', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1629,"['addVar', '(', 'const', 'Variable', '*', 'var', ',', 'VariableType', 'type', ',', 'bool', 'write_', ')', '{', 'if', '(', 'var', '->', 'declarationId', '(', ')', '>', '0', ')', '{', '_varAddedInScope', '.', 'back', '(', ')', '.', 'insert', '(', 'var', '->', 'declarationId', '(', ')', ')', ';', '_varUsage', '.', 'insert', '(', 'std', ':', ':', 'make_pair', '(', 'var', '->', 'declarationId', '(', ')', ',', 'VariableUsage', '(', 'var', ',', 'type', ',', 'false', ',', 'write_', ',', 'false', ')', ')', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1630,"['ast_lookup_path', '(', 'char', '*', 'path', ',', 'struct', 'gfs2_sbd', '*', 'sbd', ')', '{', 'int', 'err', '=', '0', ';', 'char', '*', 'c', ';', 'struct', 'gfs2_inode', '*', 'ip', ',', '*', 'iptmp', ';', 'char', '*', 'segment', ';', 'uint64_t', 'bn', '=', '0', ';', 'segment', '=', 'strtok_r', '(', 'path', ',', '""""', ',', '&', 'c', ')', ';', 'ip', '=', 'lgfs2_inode_read', '(', 'sbd', ',', 'sbd', '->', 'sd_sb', '.', 'sb_root_dir', '.', 'no_addr', ')', ';', 'while', '(', 'ip', '!=', 'NULL', ')', '{', 'if', '(', 'segment', '==', 'NULL', ')', '{', '/', '/', 'No', 'more', 'bn', '=', 'ip', '->', 'i_di', '.', 'di_num', '.', 'no_addr', ';', 'inode_put', '(', '&', 'ip', ')', ';', 'return', 'bn', ';', '}', 'ast_string_unescape', '(', 'segment', ')', ';', 'err', '=', 'gfs2_lookupi', '(', 'ip', ',', 'segment', ',', 'strlen', '(', 'segment', ')', ',', '&', 'iptmp', ')', ';', 'inode_put', '(', '&', 'ip', ')', ';', 'if', '(', 'err', '!=', '0', ')', '{', 'errno', '=', '-', 'err', ';', 'break', ';', '}', 'ip', '=', 'iptmp', ';', 'segment', '=', 'strtok_r', '(', 'NULL', ',', '""""', ',', '&', 'c', ')', ';', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1631,"['iso_date', '(', 'u8', '*', 'p', ',', 'int', 'flag', ')', '{', 'int', 'year', ',', 'month', ',', 'day', ',', 'hour', ',', 'minute', ',', 'second', ',', 'tz', ';', 'int', 'crtime', ';', 'year', '=', 'p', '[', '0', ']', ';', 'month', '=', 'p', '[', '1', ']', ';', 'day', '=', 'p', '[', '2', ']', ';', 'hour', '=', 'p', '[', '3', ']', ';', 'minute', '=', 'p', '[', '4', ']', ';', 'second', '=', 'p', '[', '5', ']', ';', 'else', 'tz', '=', '0', ';', 'if', '(', 'year', '<', '0', ')', '{', 'crtime', '=', '0', ';', '}', 'else', '{', 'crtime', '=', 'mktime64', '(', 'year', '+', '1900', ',', 'month', ',', 'day', ',', 'hour', ',', 'minute', ',', 'second', ')', ';', 'if', '(', 'tz', '&', '0x80', ')', 'tz', '|=', '(', '-', '1', '<<', '8', ')', ';', '/', '*', '*', 'The', 'timezone', 'offset', 'is', 'unreliable', 'on', 'some', 'disks', ',', '*', 'so', 'we', 'make', 'a', 'sanity', 'check', '.', 'In', 'no', 'case', 'is', 'it', '*', 'more', 'than', '13', 'hours', 'from', 'GMT', ',', 'which', 'is', '52', '*', '15min', '.', '*', 'The', 'time', 'is', 'always', 'stored', 'in', 'localtime', 'with', '*', 'timezone', 'offset', 'being', 'what', 'get', 'added', 'to', 'GMT', '*', 'get', 'to', 'localtime', '.', 'Thus', 'we', 'need', 'to', 'subtract', 'the', '*', 'to', 'get', 'to', 'true', 'GMT', ',', 'which', 'is', 'what', 'we', 'store', 'the', '*', 'as', 'internally', '.', 'On', 'the', 'local', 'system', ',', 'the', 'user', 'may', '*', 'their', 'timezone', 'any', 'way', 'they', 'wish', ',', 'of', 'course', ',', 'so', '*', 'gets', 'converted', 'back', 'to', 'localtime', 'on', 'the', '*', 'system', '.', '*', '*', 'NOTE', ':', 'mkisofs', 'in', 'versions', 'prior', 'to', 'mkisofs', '-', '1', '.', '10', '*', 'the', 'sign', 'wrong', 'on', 'the', 'timezone', 'offset', '.', 'This', 'has', '*', 'been', 'corrected', 'there', 'too', ',', 'but', 'if', 'you', 'are', 'getting', '*', 'results', 'this', 'may', 'be', 'the', 'explanation', '.', 'If', 'enough', '*', 'complain', ',', 'a', 'user', 'configuration', 'option', 'could', 'be', '*', 'to', 'add', 'the', 'timezone', 'offset', 'in', 'with', 'the', 'wrong', '*', 'for', ""''"", 'with', 'older', 'discs', ',', 'but', 'I', 'cannot', 'see', '*', 'it', 'will', 'matter', 'that', 'much', '.', '*', '*', 'Thanks', 'to', 'kuhlmav@elec', '.', 'canterbury', '.', 'ac', '.', 'nz', '(', 'Volker', 'Kuhlmann', ')', '*', 'for', 'pointing', 'out', 'the', 'sign', 'error', '.', 'if', '(', '-', '52', '<=', 'tz', '&&', 'tz', '<=', '52', ')', 'crtime', '-=', 'tz', '*', '15', '*', '60', ';', '}', 'return', 'crtime', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1632,"['ipmi_intf_session_set_username', '(', 'struct', 'ipmi_intf', '*', 'intf', ',', 'char', '*', 'username', ')', '{', 'if', '(', 'intf', '->', 'session', '==', 'NULL', ')', 'return', ';', 'memset', '(', 'intf', '->', 'session', '->', 'username', ',', '0', ',', '17', ')', ';', 'if', '(', 'username', '==', 'NULL', ')', 'return', ';', 'memcpy', '(', 'intf', '->', 'session', '->', 'username', ',', 'username', ',', '__min', '(', 'strlen', '(', 'username', ')', ',', '16', ')', ')', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1633,"['gee_hazard_pointer_get', '(', 'GeeHazardPointer', '*', 'self', ',', 'gboolean', 'other_thread', ')', '{', 'gconstpointer', 'result', '=', 'NULL', ';', 'GeeHazardPointerNode', '*', '_tmp0_', '=', 'NULL', ';', 'gboolean', '_tmp1_', '=', 'FALSE', ';', 'void', '*', '_tmp2_', '=', 'NULL', ';', 'g_return_val_if_fail', '(', 'self', '!=', 'NULL', ',', 'NULL', ')', ';', '_tmp0_', '=', 'self', '->', '_node', ';', '_tmp1_', '=', 'other_thread', ';', '_tmp2_', '=', 'gee_hazard_pointer_node_get', '(', '_tmp0_', ',', '_tmp1_', ')', ';', 'result', '=', '_tmp2_', ';', 'return', 'result', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1634,"['gftp_free_bookmark', '(', 'gftp_bookmarks_var', '*', 'entry', ',', 'int', 'free_node', ')', '{', 'gftp_bookmarks_var', '*', 'tempentry', ';', 'if', '(', 'entry', '->', 'path', ')', 'g_free', '(', 'entry', '->', 'path', ')', ';', 'if', '(', 'entry', '->', 'oldpath', ')', 'g_free', '(', 'entry', '->', 'oldpath', ')', ';', 'if', '(', 'entry', '->', 'hostname', ')', 'g_free', '(', 'entry', '->', 'hostname', ')', ';', 'if', '(', 'entry', '->', 'remote_dir', ')', 'g_free', '(', 'entry', '->', 'remote_dir', ')', ';', 'if', '(', 'entry', '->', 'local_dir', ')', 'g_free', '(', 'entry', '->', 'local_dir', ')', ';', 'if', '(', 'entry', '->', 'user', ')', 'g_free', '(', 'entry', '->', 'user', ')', ';', 'if', '(', 'entry', '->', 'pass', ')', 'g_free', '(', 'entry', '->', 'pass', ')', ';', 'if', '(', 'entry', '->', 'acct', ')', 'g_free', '(', 'entry', '->', 'acct', ')', ';', 'if', '(', 'entry', '->', 'protocol', ')', 'g_free', '(', 'entry', '->', 'protocol', ')', ';', 'if', '(', 'entry', '->', 'local_options_vars', '!=', 'NULL', ')', '{', 'gftp_config_free_options', '(', 'entry', '->', 'local_options_vars', ',', 'entry', '->', 'local_options_hash', ',', 'entry', '->', 'num_local_options_vars', ')', ';', 'entry', '->', 'local_options_vars', '=', 'NULL', ';', 'entry', '->', 'local_options_hash', '=', 'NULL', ';', 'entry', '->', 'num_local_options_vars', '=', '0', ';', '}', 'if', '(', 'free_node', ')', 'g_free', '(', 'entry', ')', ';', '{', 'tempentry', '=', 'entry', '->', 'children', ';', 'memset', '(', 'entry', ',', '0', ',', 'sizeof', '(', '*', 'entry', ')', ')', ';', 'entry', '->', 'children', '=', 'tempentry', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1635,"['afr_mark_child_as_source_by_uid', '(', 'int32_t', '*', 'sources', ',', 'struct', 'iatt', '*', 'bufs', ',', 'int32_t', '*', 'valid_children', ',', 'int', 'child_count', ',', 'uint32_t', 'uid', ')', '{', 'int', 'i', '=', '0', ';', 'int', 'nsources', '=', '0', ';', 'int', 'child', '=', '0', ';', 'GF_ASSERT', '(', 'bufs', ')', ';', 'GF_ASSERT', '(', 'valid_children', ')', ';', 'GF_ASSERT', '(', 'sources', ')', ';', 'GF_ASSERT', '(', 'child_count', '>', '0', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'child_count', ';', 'i', '++', ')', '{', 'if', '(', '-', '1', '==', 'valid_children', '[', 'i', ']', ')', 'continue', ';', 'child', '=', 'valid_children', '[', 'i', ']', ';', 'if', '(', 'uid', '==', 'bufs', '[', 'child', ']', '.', 'ia_uid', ')', '{', 'sources', '[', 'child', ']', '=', '1', ';', 'nsources', '++', ';', '}', '}', 'return', 'nsources', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
1636,"['processEndElement', '(', 'const', 'EndElementEvent', '&', 'event', ',', 'Allocator', '&', 'alloc', ')', '{', 'Boolean', 'wasArc', '=', '(', 'openElementFlags_', '.', 'back', '(', ')', '&', 'isArc', ')', ';', 'openElementFlags_', '.', 'resize', '(', 'openElementFlags_', '.', 'size', '(', ')', '-', '1', ')', ';', 'if', '(', 'wasArc', ')', '{', 'EndElementEvent', '*', '=', 'new', '(', 'alloc', ')', 'EndElementEvent', '(', 'currentElement', '(', ')', '.', 'type', '(', ')', ',', 'metaDtd_', ',', 'event', '.', 'location', '(', ')', ',', '0', ')', ';', 'if', '(', 'currentElement', '(', ')', '.', 'included', '(', ')', ')', 'genEvent', '->', 'setIncluded', '(', ')', ';', 'docHandler_', '->', 'endElement', '(', 'genEvent', ')', ';', 'if', '(', '!currentElement', '(', ')', '.', 'isFinished', '(', ')', ')', 'Messenger', ':', ':', 'message', '(', 'ArcEngineMessages', ':', ':', 'unfinishedElement', ',', 'StringMessageArg', '(', 'currentElement', '(', ')', '.', 'type', '(', ')', '->', 'name', '(', ')', ')', ')', ';', 'popElement', '(', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1637,"['addIndexedNormalRelatedWeight', '(', 'Function', '*', 'vsMain', ',', 'ParameterPtr', '&', 'pNormalParam', ',', 'ParameterPtr', '&', 'pNormalWorldRelatedParam', ',', 'int', 'index', ',', 'int', '&', 'funcCounter', ')', '{', 'FunctionInvocation', '*', 'curFuncInvocation', ';', 'Operand', ':', ':', 'OpMask', 'indexMask', '=', 'indexToMask', '(', 'index', ')', ';', '/', '/', 'multiply', 'position', 'with', 'world', 'matrix', 'and', 'put', 'into', 'temporary', 'curFuncInvocation', '=', 'OGRE_NEW', 'FunctionInvocation', '(', 'FFP_FUNC_TRANSFORM', ',', 'FFP_VS_TRANSFORM', ',', 'funcCounter', '++', ')', ';', 'curFuncInvocation', '->', 'pushOperand', '(', 'mParamInWorldMatrices', ',', 'Operand', ':', ':', 'OPS_IN', ',', 'Operand', ':', ':', 'OPM_ALL', ')', ';', 'curFuncInvocation', '->', 'pushOperand', '(', 'mParamInIndices', ',', 'Operand', ':', ':', 'OPS_IN', ',', 'indexMask', ',', '1', ')', ';', 'curFuncInvocation', '->', 'pushOperand', '(', 'pNormalParam', ',', 'Operand', ':', ':', 'OPS_IN', ')', ';', 'curFuncInvocation', '->', 'pushOperand', '(', 'mParamTempFloat3', ',', 'Operand', ':', ':', 'OPS_OUT', ')', ';', 'vsMain', '->', 'addAtomInstance', '(', 'curFuncInvocation', ')', ';', '/', '/', 'multiply', 'temporary', 'param', 'with', 'curFuncInvocation', '=', 'OGRE_NEW', 'FunctionInvocation', '(', 'FFP_FUNC_MODULATE', ',', 'FFP_VS_TRANSFORM', ',', 'funcCounter', '++', ')', ';', 'curFuncInvocation', '->', 'pushOperand', '(', 'mParamTempFloat3', ',', 'Operand', ':', ':', 'OPS_IN', ')', ';', 'curFuncInvocation', '->', 'pushOperand', '(', 'mParamInWeights', ',', 'Operand', ':', ':', 'OPS_IN', ',', 'indexMask', ')', ';', 'curFuncInvocation', '->', 'pushOperand', '(', 'mParamTempFloat3', ',', 'Operand', ':', ':', 'OPS_OUT', ')', ';', 'vsMain', '->', 'addAtomInstance', '(', 'curFuncInvocation', ')', ';', '/', '/', 'check', 'if', 'on', 'first', 'if', '(', 'index', '==', '0', ')', '{', '/', '/', 'set', 'the', 'local', 'param', 'as', 'the', 'value', 'of', 'the', 'world', 'curFuncInvocation', '=', 'OGRE_NEW', 'FunctionInvocation', '(', 'FFP_FUNC_ASSIGN', ',', 'FFP_VS_TRANSFORM', ',', 'funcCounter', '++', ')', ';', 'curFuncInvocation', '->', 'pushOperand', '(', 'mParamTempFloat3', ',', 'Operand', ':', ':', 'OPS_IN', ')', ';', 'curFuncInvocation', '->', 'pushOperand', '(', 'pNormalWorldRelatedParam', ',', 'Operand', ':', ':', 'OPS_OUT', ')', ';', 'vsMain', '->', 'addAtomInstance', '(', 'curFuncInvocation', ')', ';', '}', '{', '/', '/', 'add', 'the', 'local', 'param', 'as', 'the', 'value', 'of', 'the', 'world', 'curFuncInvocation', '=', 'OGRE_NEW', 'FunctionInvocation', '(', 'FFP_FUNC_ADD', ',', 'FFP_VS_TRANSFORM', ',', 'funcCounter', '++', ')', ';', 'curFuncInvocation', '->', 'pushOperand', '(', 'mParamTempFloat3', ',', 'Operand', ':', ':', 'OPS_IN', ')', ';', 'curFuncInvocation', '->', 'pushOperand', '(', 'pNormalWorldRelatedParam', ',', 'Operand', ':', ':', 'OPS_IN', ')', ';', 'curFuncInvocation', '->', 'pushOperand', '(', 'pNormalWorldRelatedParam', ',', 'Operand', ':', ':', 'OPS_OUT', ')', ';', 'vsMain', '->', 'addAtomInstance', '(', 'curFuncInvocation', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1638,"['pcxhr_update_r_buffer', '(', 'struct', 'pcxhr_stream', '*', 'stream', ')', '{', 'int', 'err', ',', 'is_capture', ',', 'stream_num', ';', 'struct', 'pcxhr_rmh', 'rmh', ';', 'struct', 'snd_pcm_substream', '*', 'subs', '=', 'stream', '->', 'substream', ';', 'struct', 'snd_pcxhr', '*', 'chip', '=', 'snd_pcm_substream_chip', '(', 'subs', ')', ';', 'is_capture', '=', '(', 'subs', '->', 'stream', '==', 'SNDRV_PCM_STREAM_CAPTURE', ')', ';', 'stream_num', '=', 'is_capture', '?', '0', ':', 'subs', '->', 'number', ';', 'dev_dbg', '(', 'chip', '->', 'card', '->', 'dev', ',', '""""', ',', 'is_capture', '?', ""''"", ':', ""''"", ',', 'chip', '->', 'chip_idx', ',', '(', 'void', '*', ')', '(', 'long', ')', 'subs', '->', 'runtime', '->', 'dma_addr', ',', 'subs', '->', 'runtime', '->', 'dma_bytes', ',', 'subs', '->', 'number', ')', ';', 'pcxhr_init_rmh', '(', '&', 'rmh', ',', 'CMD_UPDATE_R_BUFFERS', ')', ';', 'pcxhr_set_pipe_cmd_params', '(', '&', 'rmh', ',', 'is_capture', ',', 'stream', '->', 'pipe', '->', 'first_audio', ',', 'stream_num', ',', '0', ')', ';', 'snd_BUG_ON', '(', 'subs', '->', 'runtime', '->', 'dma_bytes', '>=', '0x200000', ')', ';', 'rmh', '.', 'cmd', '[', '1', ']', '=', 'subs', '->', 'runtime', '->', 'dma_bytes', '*', '8', ';', 'rmh', '.', 'cmd', '[', '2', ']', '=', 'subs', '->', 'runtime', '->', 'dma_addr', '>>', '24', ';', 'rmh', '.', 'cmd', '[', '2', ']', '|=', '1', '<<', '19', ';', 'rmh', '.', 'cmd', '[', '3', ']', '=', 'subs', '->', 'runtime', '->', 'dma_addr', '&', 'MASK_DSP_WORD', ';', 'rmh', '.', 'cmd_len', '=', '4', ';', 'err', '=', 'pcxhr_send_msg', '(', 'chip', '->', 'mgr', ',', '&', 'rmh', ')', ';', 'if', '(', 'err', ')', 'dev_err', '(', 'chip', '->', 'card', '->', 'dev', ',', '""""', ',', 'err', ')', ';', 'return', 'err', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1639,"['countMembers', '(', ')', '{', '/', '/', 'This', 'bit', 'counter', 'is', 'good', 'for', 'sparse', 'numbers', 'of', ""''s"", ',', 'which', '/', '/', 'very', 'much', 'the', 'case', 'that', 'we', 'will', 'usually', 'have', '.', 'int32_t', 'count', '=', '0', ';', 'for', '(', 'uint32_t', 'i', '=', '0', ';', 'i', '<', 'sizeof', '(', 'bits', ')', '/', 'sizeof', '(', 'uint32_t', ')', ';', 'i', '++', ')', '{', 'uint32_t', 'x', '=', 'bits', '[', 'i', ']', ';', 'while', '(', 'x', '>', '0', ')', '{', 'count', '++', ';', 'x', '&=', '(', 'x', '-', '1', ')', ';', '/', '/', 'and', 'off', 'the', 'least', 'significant', 'one', 'bit', '.', '}', '}', 'return', 'count', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1640,"['operator', '(', ')', '(', 'const', 'SurfacePoint', '&', 'sp', ')', '{', 'if', '(', 'DistanceSquared', '(', 'sp', '.', 'p', ',', 'p', ')', '<', 'maxDist2', ')', '{', 'failed', '=', 'true', ';', 'return', 'false', ';', '}', 'return', 'true', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1641,"['bnxt_hwrm_queue_pfc_cfg', '(', 'struct', 'bnxt', '*', 'bp', ',', 'struct', 'ieee_pfc', '*', 'pfc', ')', '{', 'struct', 'hwrm_queue_pfcenable_cfg_input', 'req', '=', '{', '0', '}', ';', 'struct', 'ieee_ets', '*', 'my_ets', '=', 'bp', '->', 'ieee_ets', ';', 'unsigned', 'int', 'tc_mask', '=', '0', ',', 'pri_mask', '=', '0', ';', 'u8', 'i', ',', 'pri', ',', 'lltc_count', '=', '0', ';', 'bool', 'need_q_recfg', '=', 'false', ';', 'int', 'rc', ';', 'if', '(', '!my_ets', ')', 'return', '-', 'EINVAL', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'bp', '->', 'max_tc', ';', 'i', '++', ')', '{', 'for', '(', 'pri', '=', '0', ';', 'pri', '<', 'IEEE_8021QAZ_MAX_TCS', ';', 'pri', '++', ')', '{', 'if', '(', '(', 'pfc', '->', 'pfc_en', '&', '(', '1', '<<', 'pri', ')', ')', '&&', '(', 'my_ets', '->', 'prio_tc', '[', 'pri', ']', '==', 'i', ')', ')', '{', 'pri_mask', '|=', '1', '<<', 'pri', ';', 'tc_mask', '|=', '1', '<<', 'i', ';', '}', '}', 'if', '(', 'tc_mask', '&', '(', '1', '<<', 'i', ')', ')', 'lltc_count', '++', ';', '}', 'if', '(', 'lltc_count', '>', 'bp', '->', 'max_lltc', ')', 'return', '-', 'EINVAL', ';', 'bnxt_hwrm_cmd_hdr_init', '(', 'bp', ',', '&', 'req', ',', 'HWRM_QUEUE_PFCENABLE_CFG', ',', '-', '1', ',', '-', '1', ')', ';', 'req', '.', 'flags', '=', 'cpu_to_le32', '(', 'pri_mask', ')', ';', 'rc', '=', 'hwrm_send_message', '(', 'bp', ',', '&', 'req', ',', 'sizeof', '(', 'req', ')', ',', 'HWRM_CMD_TIMEOUT', ')', ';', 'if', '(', 'rc', ')', 'return', 'rc', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'bp', '->', 'max_tc', ';', 'i', '++', ')', '{', 'if', '(', 'tc_mask', '&', '(', '1', '<<', 'i', ')', ')', '{', 'if', '(', '!BNXT_LLQ', '(', 'bp', '->', 'q_info', '[', 'i', ']', '.', 'queue_profile', ')', ')', 'need_q_recfg', '=', 'true', ';', '}', '}', 'if', '(', 'need_q_recfg', ')', 'rc', '=', 'bnxt_hwrm_queue_cfg', '(', 'bp', ',', 'tc_mask', ')', ';', 'return', 'rc', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1642,"['spl_display_checklimits', '(', 'GtkWidget', '*', 'spl_window', ')', '{', 'SPLWizard', '*', 'spl_wizard', ';', 'Playlist', '*', 'spl', ';', 'GtkWidget', '*', 'w', ';', 'spl_wizard', '=', 'get_spl_wizard', '(', ')', ';', 'g_return_if_fail', '(', 'spl_wizard', ')', ';', 'spl', '=', 'g_object_get_data', '(', 'G_OBJECT', '(', 'spl_wizard', '->', 'window', ')', ',', '""""', ')', ';', 'g_return_if_fail', '(', 'spl', ')', ';', 'if', '(', '(', 'w', '=', 'gtkpod_builder_xml_get_widget', '(', 'spl_wizard', '->', 'builder', ',', '""""', ')', ')', ')', '{', 'gtk_toggle_button_set_active', '(', 'GTK_TOGGLE_BUTTON', '(', 'w', ')', ',', 'spl', '->', 'splpref', '.', 'checklimits', ')', ';', 'g_signal_connect', '(', 'w', ',', '""""', ',', 'G_CALLBACK', '(', 'spl_checklimits_toggled', ')', ',', 'spl_wizard', '->', 'window', ')', ';', '}', 'if', '(', '(', 'w', '=', 'gtkpod_builder_xml_get_widget', '(', 'spl_wizard', '->', 'builder', ',', '""""', ')', ')', ')', '{', 'gchar', 'str', '[', 'WNLEN', ']', ';', 'snprintf', '(', 'str', ',', 'WNLEN', ',', '""""', ',', 'spl', '->', 'splpref', '.', 'limitvalue', ')', ';', 'gtk_entry_set_text', '(', 'GTK_ENTRY', '(', 'w', ')', ',', 'str', ')', ';', 'gtk_widget_set_sensitive', '(', 'w', ',', 'spl', '->', 'splpref', '.', 'checklimits', ')', ';', 'g_signal_connect', '(', 'w', ',', '""""', ',', 'G_CALLBACK', '(', 'spl_limitvalue_changed', ')', ',', 'spl_wizard', '->', 'window', ')', ';', '}', 'if', '(', '(', 'w', '=', 'gtkpod_builder_xml_get_widget', '(', 'spl_wizard', '->', 'builder', ',', '""""', ')', ')', ')', '{', 'spl_set_combobox', '(', 'GTK_COMBO_BOX', '(', 'w', ')', ',', 'limittype_comboentries', ',', 'spl', '->', 'splpref', '.', 'limittype', ',', 'G_CALLBACK', '(', 'spl_limittype_changed', ')', ',', 'spl_window', ')', ';', 'gtk_widget_set_sensitive', '(', 'w', ',', 'spl', '->', 'splpref', '.', 'checklimits', ')', ';', '}', 'if', '(', '(', 'w', '=', 'gtkpod_builder_xml_get_widget', '(', 'spl_wizard', '->', 'builder', ',', '""""', ')', ')', ')', '{', 'gtk_widget_set_sensitive', '(', 'w', ',', 'spl', '->', 'splpref', '.', 'checklimits', ')', ';', '}', 'if', '(', '(', 'w', '=', 'gtkpod_builder_xml_get_widget', '(', 'spl_wizard', '->', 'builder', ',', '""""', ')', ')', ')', '{', 'spl_set_combobox', '(', 'GTK_COMBO_BOX', '(', 'w', ')', ',', 'limitsort_comboentries', ',', 'spl', '->', 'splpref', '.', 'limitsort', ',', 'G_CALLBACK', '(', 'spl_limitsort_changed', ')', ',', 'spl_window', ')', ';', 'gtk_widget_set_sensitive', '(', 'w', ',', 'spl', '->', 'splpref', '.', 'checklimits', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1643,"['gnibbles_load_pixmap_file', '(', 'const', 'gchar', '*', 'pixmap', ',', 'gint', 'xsize', ',', 'gint', 'ysize', ')', '{', 'GdkPixbuf', '*', 'image', ';', 'gchar', '*', 'filename', ';', 'filename', '=', 'g_build_filename', '(', 'DATA_DIRECTORY', ',', '""""', ',', 'pixmap', ',', 'NULL', ')', ';', 'if', '(', '!filename', ')', '{', 'char', '*', 'message', '=', 'g_strdup_printf', '(', '_', '(', '""""', ')', ',', 'pixmap', ')', ';', 'gnibbles_error', '(', 'message', ')', ';', 'g_free', '(', 'message', ')', ';', '}', 'image', '=', 'gdk_pixbuf_new_from_file_at_scale', '(', 'filename', ',', 'xsize', ',', 'ysize', ',', 'TRUE', ',', 'NULL', ')', ';', 'g_free', '(', 'filename', ')', ';', 'return', 'image', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1644,"['getOpenUrl', '(', 'QWidget', '*', 'parent', ',', 'const', 'QString', '&', 'caption', ',', 'const', 'Url', '&', 'dir', ',', 'const', 'QString', '&', 'filter', ')', '{', 'const', 'QStringList', 'filterList', '=', 'filter', '.', 'split', '(', ""''"", ')', ';', 'QString', 'parsedFilter', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'filterList', '.', 'size', '(', ')', ';', '++', 'i', ')', '{', 'const', 'QStringList', 'filterItems', '=', 'filterList', '.', 'at', '(', 'i', ')', '.', 'split', '(', ""''"", ')', ';', 'if', '(', 'i', '>', '0', ')', 'parsedFilter', '+=', '""""', ';', 'parsedFilter', '+=', 'filterItems', '.', 'at', '(', '1', ')', '+', '""""', '+', 'filterItems', '.', 'at', '(', '0', ')', '+', ""''"", ';', '}', 'const', 'QString', 'openFileName', '=', 'QFileDialog', ':', ':', 'getOpenFileName', '(', 'parent', ',', 'caption', ',', 'dir', '.', 'path', '(', ')', ',', 'parsedFilter', ')', ';', 'if', '(', 'openFileName', '.', 'isEmpty', '(', ')', ')', 'return', 'Url', '(', ')', ';', 'return', 'Url', '(', 'openFileName', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1645,"['readFile', '(', 'const', 'char', '*', 'fileName', ')', '{', 'int', 'fd', '=', 'open', '(', 'fileName', ',', 'O_RDONLY', ')', ';', 'if', '(', 'fd', '<', '0', ')', '{', 'fprintf', '(', 'stderr', ',', '""""', ',', 'fileName', ')', ';', 'return', 'UString', '(', ')', ';', '}', 'struct', 'stat', 'buf', ';', 'if', '(', 'fstat', '(', 'fd', ',', '&', 'buf', ')', '==', '-', '1', ')', '{', 'fprintf', '(', 'stderr', ',', '""""', ',', 'fileName', ')', ';', 'close', '(', 'fd', ')', ';', 'return', 'UString', '(', ')', ';', '}', 'int', 'siz', '=', 'buf', '.', 'st_size', ';', 'char', '*', 'c', '=', 'new', 'char', '[', 'siz', '+', '1', ']', ';', 'int', 'dataRead', '=', 'read', '(', 'fd', ',', 'c', ',', 'siz', ')', ';', 'if', '(', 'dataRead', '==', '-', '1', ')', '{', 'fprintf', '(', 'stderr', ',', '""""', ',', 'fileName', ')', ';', 'delete', '[', ']', 'c', ';', 'close', '(', 'fd', ')', ';', 'return', 'UString', '(', ')', ';', '}', 'c', '[', 'dataRead', ']', '=', ""''"", ';', 'UString', 's', '=', 'c', ';', 'delete', '[', ']', 'c', ';', 'return', 's', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1646,"['vm_delta_from_interp_angle', '(', 'float', 'current_angle', ',', 'float', 'desired_angle', ')', '{', 'float', 'delta', ';', 'if', '(', 'desired_angle', '<', '0', '.', '0f', ')', 'desired_angle', '+=', 'PI2', ';', 'if', '(', 'desired_angle', '>', 'PI2', ')', 'desired_angle', '-=', 'PI2', ';', 'delta', '=', 'desired_angle', '-', 'current_angle', ';', 'if', '(', 'fl_abs', '(', 'delta', ')', '>', 'PI', ')', '\t', '{', 'if', '(', 'delta', '>', '0', '.', '0f', ')', '\t', '{', 'delta', '=', 'delta', '-', 'PI2', ';', '}', 'else', '{', 'delta', '=', 'PI2', '-', 'delta', ';', '}', '}', 'return', 'delta', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1647,"['gx_unit_frac', '(', 'float', 'fvalue', ')', '{', 'frac', 'f', '=', 'frac_0', ';', 'if', '(', 'is_fneg', '(', 'fvalue', ')', ')', 'f', '=', 'frac_0', ';', 'else', 'if', '(', 'is_fge1', '(', 'fvalue', ')', ')', 'f', '=', 'frac_1', ';', 'f', '=', 'float2frac', '(', 'fvalue', ')', ';', 'return', 'f', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1648,"['ajTrnSeqC', '(', 'const', 'AjPTrn', 'trnObj', ',', 'const', 'char', '*', 'str', ',', 'ajint', 'len', ',', 'AjPStr', '*', 'pep', ')', '{', 'ajint', 'i', ';', 'ajint', 'lenmod3', ';', 'const', 'char', '*', 'cp', '=', 'str', ';', 'AjPStr', 'transtr', '=', 'NULL', ';', 'char', '*', 'cq', ';', 'ajint', 'trnlen', ';', 'lenmod3', '=', 'len', '-', '(', 'len', '%', '3', ')', ';', 'trnlen', '=', 'lenmod3', '/', '3', ';', 'transtr', '=', 'ajStrNewRes', '(', 'trnlen', '+', '1', ')', ';', 'cq', '=', 'ajStrGetuniquePtr', '(', '&', 'transtr', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'lenmod3', ';', 'i', '+=', '3', ')', '{', '*', 'cq', '++', '=', 'trnObj', '->', 'GC', '[', 'trnconv', '[', '(', 'ajint', ')', '*', 'cp', ']', ']', '[', 'trnconv', '[', '(', 'ajint', ')', '*', '(', 'cp', '+', '1', ')', ']', ']', '[', 'trnconv', '[', '(', 'ajint', ')', '*', '(', 'cp', '+', '2', ')', ']', ']', ';', 'cp', '+=', '3', ';', '}', 'ajStrSetValidLen', '(', '&', 'transtr', ',', 'trnlen', ')', ';', 'ajStrAppendS', '(', 'pep', ',', 'transtr', ')', ';', 'ajStrDel', '(', '&', 'transtr', ')', ';', 'return', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1649,"['iscsi_handle_chap_c_value', '(', 'struct', 'iscsi_session', '*', 'iscsi', ',', 'const', 'char', '*', 'value', ')', '{', 'char', 'buf', '[', '3', ']', ';', 'char', '*', 'endp', ';', 'uint8_t', 'byte', ';', 'unsigned', 'int', 'i', ';', 'if', '(', '(', 'value', '[', '0', ']', '!=', ""''"", ')', '||', '(', 'value', '[', '1', ']', '!=', ""''"", ')', ')', '{', 'DBGC', '(', 'iscsi', ',', '""""', '%', 's\\""""', ',', 'iscsi', ',', 'value', ')', ';', 'return', '-', 'EPROTO', ';', '}', 'value', '+=', '2', ';', 'for', '(', ';', '(', 'value', '[', '0', ']', '&&', 'value', '[', '1', ']', ')', ';', 'value', '+=', '2', ')', '{', 'memcpy', '(', 'buf', ',', 'value', ',', '2', ')', ';', 'buf', '[', '2', ']', '=', '0', ';', 'byte', '=', 'strtoul', '(', 'buf', ',', '&', 'endp', ',', '16', ')', ';', 'if', '(', '*', 'endp', '!=', ""''"", ')', '{', 'DBGC', '(', 'iscsi', ',', '""""', '%', 's\\""""', ',', 'iscsi', ',', 'buf', ')', ';', 'return', '-', 'EPROTO', ';', '}', 'chap_update', '(', '&', 'iscsi', '->', 'chap', ',', '&', 'byte', ',', 'sizeof', '(', 'byte', ')', ')', ';', '}', 'DBGC', '(', 'iscsi', ',', '""""', ',', 'iscsi', ')', ';', 'chap_respond', '(', '&', 'iscsi', '->', 'chap', ')', ';', 'iscsi', '->', 'status', '|=', 'ISCSI_STATUS_STRINGS_CHAP_RESPONSE', ';', 'if', '(', 'iscsi', '->', 'target_username', ')', '{', 'iscsi', '->', 'status', '|=', 'ISCSI_STATUS_STRINGS_CHAP_CHALLENGE', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'sizeof', '(', 'iscsi', '->', 'chap_challenge', ')', ';', 'i', '++', ')', '{', 'iscsi', '->', 'chap_challenge', '[', 'i', ']', '=', 'random', '(', ')', ';', '}', '}', 'return', '0', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1650,"['parse_plugin_type', '(', 'const', 'gchar', '*', 'option_name', ',', 'const', 'gchar', '*', 'value', ',', 'gpointer', 'data', ',', 'GError', '*', '*', 'error', ')', '{', 'const', 'char', 'types', '[', 'TOTEM_PLUGIN_TYPE_LAST', ']', '[', '12', ']', '=', '{', '""""', ',', '""""', ',', '""""', ',', '""""', ',', '}', ';', 'TotemPluginType', 'type', ';', 'for', '(', 'type', '=', '0', ';', 'type', '<', 'TOTEM_PLUGIN_TYPE_LAST', ';', '++', 'type', ')', '{', 'if', '(', 'strcmp', '(', 'value', ',', 'types', '[', 'type', ']', ')', '==', '0', ')', '{', 'arg_plugin_type', '=', 'type', ';', 'return', 'TRUE', ';', '}', '}', 'g_print', '(', '""""', ',', 'value', ')', ';', 'exit', '(', '1', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1651,"['PrintSelf', '(', 'std', ':', ':', 'ostream', '&', 'os', ',', 'Indent', 'indent', ')', '{', 'Superclass', ':', ':', 'PrintSelf', '(', 'os', ',', 'indent', ')', ';', 'os', '<<', 'indent', '<<', '""""', '<<', 'this', '->', 'GetImageDimension', '(', ')', '<<', 'std', ':', ':', 'endl', ';', 'os', '<<', 'indent', '<<', '""""', ';', 'for', '(', 'ImageIORegion', ':', ':', 'IndexType', ':', ':', 'const_iterator', 'i', '=', 'this', '->', 'GetIndex', '(', ')', '.', 'begin', '(', ')', ';', 'i', '!=', 'this', '->', 'GetIndex', '(', ')', '.', 'end', '(', ')', ';', '++', 'i', ')', '{', 'os', '<<', '*', 'i', '<<', '""""', ';', '}', 'os', '<<', 'std', ':', ':', 'endl', ';', 'os', '<<', 'indent', '<<', '""""', ';', 'for', '(', 'ImageIORegion', ':', ':', 'SizeType', ':', ':', 'const_iterator', 'k', '=', 'this', '->', 'GetSize', '(', ')', '.', 'begin', '(', ')', ';', 'k', '!=', 'this', '->', 'GetSize', '(', ')', '.', 'end', '(', ')', ';', '++', 'k', ')', '{', 'os', '<<', '*', 'k', '<<', '""""', ';', '}', 'os', '<<', 'std', ':', ':', 'endl', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1652,"['flickcurl_build_tag_namespaces', '(', 'flickcurl', '*', 'fc', ',', 'xmlXPathContextPtr', 'xpathCtx', ',', 'const', 'xmlChar', '*', 'xpathExpr', ',', 'int', '*', 'namespace_count_p', ')', '{', 'flickcurl_tag_namespace', '*', '*', 'tag_namespaces', '=', 'NULL', ';', 'int', 'nodes_count', ';', 'int', 'tag_namespace_count', ';', 'int', 'i', ';', 'xmlXPathObjectPtr', 'xpathObj', '=', 'NULL', ';', 'xmlNodeSetPtr', 'nodes', ';', 'xpathObj', '=', 'xmlXPathEvalExpression', '(', 'xpathExpr', ',', 'xpathCtx', ')', ';', 'if', '(', '!xpathObj', ')', '{', 'flickcurl_error', '(', 'fc', ',', '""""', '%', 's\\""""', ',', 'xpathExpr', ')', ';', 'fc', '->', 'failed', '=', '1', ';', 'goto', 'tidy', ';', '}', 'nodes', '=', 'xpathObj', '->', 'nodesetval', ';', 'nodes_count', '=', 'xmlXPathNodeSetGetLength', '(', 'nodes', ')', ';', 'tag_namespaces', '=', '(', 'flickcurl_tag_namespace', '*', '*', ')', 'calloc', '(', 'sizeof', '(', 'flickcurl_tag_namespace', '*', ')', ',', 'nodes_count', '+', '1', ')', ';', 'for', '(', 'i', '=', '0', ',', 'tag_namespace_count', '=', '0', ';', 'i', '<', 'nodes_count', ';', 'i', '++', ')', '{', 'xmlNodePtr', 'node', '=', 'nodes', '->', 'nodeTab', '[', 'i', ']', ';', 'xmlAttr', '*', 'attr', ';', 'flickcurl_tag_namespace', '*', 'tn', ';', 'xmlNodePtr', 'chnode', ';', 'if', '(', 'node', '->', 'type', '!=', 'XML_ELEMENT_NODE', ')', '{', 'flickcurl_error', '(', 'fc', ',', '""""', ',', 'node', '->', 'type', ')', ';', 'fc', '->', 'failed', '=', '1', ';', 'break', ';', '}', 'tn', '=', '(', 'flickcurl_tag_namespace', '*', ')', 'calloc', '(', 'sizeof', '(', 'flickcurl_tag_namespace', ')', ',', '1', ')', ';', 'for', '(', 'attr', '=', 'node', '->', 'properties', ';', 'attr', ';', 'attr', '=', 'attr', '->', 'next', ')', '{', 'size_t', 'attr_len', '=', 'strlen', '(', '(', 'const', 'char', '*', ')', 'attr', '->', 'children', '->', 'content', ')', ';', 'const', 'char', '*', 'attr_name', '=', '(', 'const', 'char', '*', ')', 'attr', '->', 'name', ';', 'char', '*', 'attr_value', ';', 'attr_value', '=', '(', 'char', '*', ')', 'malloc', '(', 'attr_len', '+', '1', ')', ';', 'memcpy', '(', 'attr_value', ',', '(', 'const', 'char', '*', ')', 'attr', '->', 'children', '->', 'content', ',', 'attr_len', '+', '1', ')', ';', 'if', '(', '!strcmp', '(', 'attr_name', ',', '""""', ')', ')', '{', 'tn', '->', 'usage_count', '=', 'atoi', '(', 'attr_value', ')', ';', 'free', '(', 'attr_value', ')', ';', '}', 'else', 'if', '(', '!strcmp', '(', 'attr_name', ',', '""""', ')', ')', '{', 'tn', '->', 'predicates_count', '=', 'atoi', '(', 'attr_value', ')', ';', 'free', '(', 'attr_value', ')', ';', '}', 'free', '(', 'attr_value', ')', ';', '}', 'for', '(', 'chnode', '=', 'node', '->', 'children', ';', 'chnode', ';', 'chnode', '=', 'chnode', '->', 'next', ')', '{', 'if', '(', 'chnode', '->', 'type', '==', 'XML_TEXT_NODE', ')', '{', 'size_t', 'len', '=', 'strlen', '(', '(', 'const', 'char', '*', ')', 'chnode', '->', 'content', ')', ';', 'tn', '->', 'name', '=', '(', 'char', '*', ')', 'malloc', '(', 'len', '+', '1', ')', ';', 'memcpy', '(', 'tn', '->', 'name', ',', 'chnode', '->', 'content', ',', 'len', '+', '1', ')', ';', '}', '}', '#if', 'FLICKCURL_DEBUG', '>', 'fprintf', '(', 'stderr', ',', '""""', ',', 'tn', '->', 'name', ',', 'tn', '->', 'usage_count', ',', 'tn', '->', 'predicates_count', ')', ';', 'tag_namespaces', '[', 'tag_namespace_count', '++', ']', '=', 'tn', ';', 'if', '(', 'namespace_count_p', ')', '*', 'namespace_count_p', '=', 'tag_namespace_count', ';', 'tidy', ':', 'if', '(', 'xpathObj', ')', 'xmlXPathFreeObject', '(', 'xpathObj', ')', ';', 'return', 'tag_namespaces', ';', '}']",CWE-119  False,CWE-120  True,CWE-469  True,CWE-476  False,CWE-other  False
1653,"['modify_param', '(', 'int', 'narg', ',', 'char', '*', '*', 'arg', ')', '{', 'if', '(', 'strcmp', '(', 'arg', '[', '0', ']', ',', '""""', ')', '==', '0', ')', '{', 'if', '(', 'narg', '<', '2', ')', 'error', '->', 'all', '(', 'FLERR', ',', '""""', ')', ';', 'if', '(', 'strcmp', '(', 'arg', '[', '1', ']', ',', '""""', ')', '==', '0', ')', 'unwrap_flag', '=', '1', ';', 'else', 'if', '(', 'strcmp', '(', 'arg', '[', '1', ']', ',', '""""', ')', '==', '0', ')', 'unwrap_flag', '=', '0', ';', 'else', 'error', '->', 'all', '(', 'FLERR', ',', '""""', ')', ';', 'return', '2', ';', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1654,"['fetchUser', '(', 'int', 'user_id', ')', '{', 'ostringstream', 'userKey', ';', 'userKey', '<<', 'user_id', ';', 'return', 'Users', ':', ':', 'fetchUser', '(', 'userKey', '.', 'str', '(', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1655,"['hash_insert', '(', 'Hash_table', '*', 'table', ',', 'const', 'void', '*', 'entry', ')', '{', 'void', '*', 'data', ';', 'struct', 'hash_entry', '*', 'bucket', ';', 'if', '(', '!', 'entry', ')', 'abort', '(', ')', ';', 'if', '(', '(', 'data', '=', 'hash_find_entry', '(', 'table', ',', 'entry', ',', '&', 'bucket', ',', 'false', ')', ')', '!=', 'NULL', ')', 'return', 'data', ';', 'if', '(', 'bucket', '->', 'data', ')', '{', 'struct', 'hash_entry', '*', 'new_entry', '=', 'allocate_entry', '(', 'table', ')', ';', 'if', '(', 'new_entry', '==', 'NULL', ')', 'return', 'NULL', ';', 'new_entry', '->', 'data', '=', '(', 'void', '*', ')', 'entry', ';', 'new_entry', '->', 'next', '=', 'bucket', '->', 'next', ';', 'bucket', '->', 'next', '=', 'new_entry', ';', 'table', '->', 'n_entries', '++', ';', 'return', '(', 'void', '*', ')', 'entry', ';', '}', 'bucket', '->', 'data', '=', '(', 'void', '*', ')', 'entry', ';', 'table', '->', 'n_entries', '++', ';', 'table', '->', 'n_buckets_used', '++', ';', '/', '*', 'If', 'the', 'growth', 'threshold', 'of', 'the', 'buckets', 'in', 'use', 'has', 'been', 'reached', ',', 'the', 'table', 'size', 'and', 'rehash', '.', ""There's"", 'no', 'point', 'in', 'checking', 'the', 'number', 'entries', ':', 'if', 'the', 'hashing', 'function', 'is', 'ill', '-', 'conditioned', ',', 'rehashing', 'is', 'if', '(', 'table', '->', '>', 'table', '->', 'tuning', '->', 'growth_threshold', '*', 'table', '->', 'n_buckets', ')', '{', '/', '*', 'Check', 'more', 'fully', ',', 'before', 'starting', 'real', 'work', '.', 'If', 'tuning', 'check_tuning', '(', 'table', ')', ';', 'if', '(', 'table', '->', '>', 'table', '->', 'tuning', '->', 'growth_threshold', '*', 'table', '->', 'n_buckets', ')', '{', 'const', 'Hash_tuning', '*', 'tuning', '=', 'table', '->', 'tuning', ';', 'float', 'candidate', '=', '(', 'tuning', '->', '?', '(', 'table', '->', 'n_buckets', '*', 'tuning', '->', 'growth_factor', ')', ':', '(', 'table', '->', 'n_buckets', '*', 'tuning', '->', '*', 'tuning', '->', 'growth_threshold', ')', ')', ';', 'if', '(', 'SIZE_MAX', '<=', 'candidate', ')', 'return', 'NULL', ';', 'if', '(', '!hash_rehash', '(', 'table', ',', 'candidate', ')', ')', 'entry', '=', 'NULL', ';', '}', '}', 'return', '(', 'void', '*', ')', 'entry', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1656,"['X_productions', '(', 'VOID', ')', '{', 'switch', '(', 'pp', '->', 'cat', ')', '{', 'case', 'expr', ':', '{', 'if', '(', 'cat1', '==', 'expr', ')', 'SQUASH', '(', 'pp', ',', '2', ',', 'expr', ',', '0', ',', '5', ')', ';', 'else', 'if', '(', 'cat1', '==', 'semi', ')', '{', 'b_app1', '(', 'pp', ')', ';', 'REDUCE', '(', 'pp', ',', '2', ',', 'stmt', ',', '-', '1', ',', '6', ')', ';', '}', '}', 'break', ';', 'case', 'stmt', ':', '{', 'if', '(', 'cat1', '==', 'stmt', ')', '{', 'b_app1', '(', 'pp', ')', ';', 'b_app', '(', 'force', ')', ';', 'b_app1', '(', 'pp', '+', '1', ')', ';', 'REDUCE', '(', 'pp', ',', '2', ',', 'stmt', ',', '-', '1', ',', '250', ')', ';', '}', '}', 'break', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1657,"['setConfigMinMax', '(', 'eConfigFloatValues', 'index', ',', 'char', 'const', '*', 'fieldname', ',', 'float', 'defvalue', ',', 'float', 'minvalue', ',', 'float', 'maxvalue', ')', '{', 'setConfig', '(', 'index', ',', 'fieldname', ',', 'defvalue', ')', ';', 'if', '(', 'getConfig', '(', 'index', ')', '<', 'minvalue', ')', '{', 'sLog', '.', 'outError', '(', '""""', ',', 'fieldname', ',', 'getConfig', '(', 'index', ')', ',', 'minvalue', ',', 'maxvalue', ',', 'minvalue', ')', ';', 'setConfig', '(', 'index', ',', 'minvalue', ')', ';', '}', 'else', 'if', '(', 'getConfig', '(', 'index', ')', '>', 'maxvalue', ')', '{', 'sLog', '.', 'outError', '(', '""""', ',', 'fieldname', ',', 'getConfig', '(', 'index', ')', ',', 'minvalue', ',', 'maxvalue', ',', 'maxvalue', ')', ';', 'setConfig', '(', 'index', ',', 'maxvalue', ')', ';', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1658,"['FLAC__window_bartlett_hann', '(', 'FLAC__real', '*', 'window', ',', 'const', 'FLAC__int32', 'L', ')', '{', 'const', 'FLAC__int32', 'N', '=', 'L', '-', '1', ';', 'FLAC__int32', 'n', ';', 'for', '(', 'n', '=', '0', ';', 'n', '<', 'L', ';', 'n', '++', ')', 'window', '[', 'n', ']', '=', '(', 'FLAC__real', ')', '(', '0', '.', '62f', '-', '0', '.', '48f', '*', 'fabs', '(', '(', 'float', ')', 'n', '/', '(', 'float', ')', 'N', '+', '0', '.', '5f', ')', '+', '0', '.', '38f', '*', 'cos', '(', '2', '.', '0f', '*', 'M_PI', '*', '(', '(', 'float', ')', 'n', '/', '(', 'float', ')', 'N', '+', '0', '.', '5f', ')', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1659,"['H5Pset_obj_track_times', '(', 'hid_t', 'plist_id', ',', 'hbool_t', 'track_times', ')', '{', 'FUNC_ENTER_API', '(', 'H5Pset_obj_track_times', ',', 'FAIL', ')', 'H5TRACE2', '(', '""""', ',', '""""', ',', 'plist_id', ',', 'track_times', ')', ';', 'if', '(', 'NULL', '==', '(', 'plist', '=', 'H5P_object_verify', '(', 'plist_id', ',', 'H5P_OBJECT_CREATE', ')', ')', ')', 'HGOTO_ERROR', '(', 'H5E_ATOM', ',', 'H5E_BADATOM', ',', 'FAIL', ',', '""""', ')', 'if', '(', 'H5P_get', '(', 'plist', ',', 'H5O_CRT_OHDR_FLAGS_NAME', ',', '&', 'ohdr_flags', ')', '<', '0', ')', 'HGOTO_ERROR', '(', 'H5E_PLIST', ',', 'H5E_CANTGET', ',', 'FAIL', ',', '""""', ')', 'ohdr_flags', '&=', '(', 'uint8_t', ')', '~H5O_HDR_STORE_TIMES', ';', 'ohdr_flags', '|=', '(', 'uint8_t', ')', '(', 'track_times', '?', 'H5O_HDR_STORE_TIMES', ':', '0', ')', ';', 'if', '(', 'H5P_set', '(', 'plist', ',', 'H5O_CRT_OHDR_FLAGS_NAME', ',', '&', 'ohdr_flags', ')', '<', '0', ')', 'HGOTO_ERROR', '(', 'H5E_PLIST', ',', 'H5E_CANTSET', ',', 'FAIL', ',', '""""', ')', 'done', ':', 'FUNC_LEAVE_API', '(', 'ret_value', ')', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1660,"['r600_get_array_mode_alignment', '(', 'struct', 'array_mode_checker', '*', 'values', ',', 'u32', '*', 'pitch_align', ',', 'u32', '*', 'height_align', ',', 'u32', '*', 'depth_align', ',', 'u64', '*', 'base_align', ')', '{', 'u32', 'tile_width', '=', '8', ';', 'u32', 'tile_height', '=', '8', ';', 'u32', 'macro_tile_width', '=', 'values', '->', 'nbanks', ';', 'u32', 'macro_tile_height', '=', 'values', '->', 'npipes', ';', 'u32', 'tile_bytes', '=', 'tile_width', '*', 'tile_height', '*', 'values', '->', 'blocksize', '*', 'values', '->', 'nsamples', ';', 'u32', 'macro_tile_bytes', '=', 'macro_tile_width', '*', 'macro_tile_height', '*', 'tile_bytes', ';', 'switch', '(', 'values', '->', 'array_mode', ')', '{', 'case', 'ARRAY_LINEAR_GENERAL', ':', '*', 'depth_align', '=', '1', ';', '*', 'base_align', '=', '1', ';', 'break', ';', 'case', 'ARRAY_LINEAR_ALIGNED', ':', '*', 'pitch_align', '=', 'max', '(', '(', 'u32', ')', '64', ',', '(', 'u32', ')', '(', 'values', '->', 'group_size', '/', 'values', '->', 'blocksize', ')', ')', ';', '*', 'height_align', '=', '1', ';', '*', 'depth_align', '=', '1', ';', '*', 'base_align', '=', 'values', '->', 'group_size', ';', 'break', ';', 'case', 'ARRAY_1D_TILED_THIN1', ':', '*', 'pitch_align', '=', 'max', '(', '(', 'u32', ')', 'tile_width', ',', '(', 'u32', ')', '(', 'values', '->', 'group_size', '/', '(', 'tile_height', '*', 'values', '->', 'blocksize', '*', 'values', '->', 'nsamples', ')', ')', ')', ';', '*', 'height_align', '=', 'tile_height', ';', '*', 'depth_align', '=', '1', ';', '*', 'base_align', '=', 'values', '->', 'group_size', ';', 'break', ';', 'case', 'ARRAY_2D_TILED_THIN1', ':', '*', 'pitch_align', '=', 'max', '(', '(', 'u32', ')', 'macro_tile_width', '*', 'tile_width', ',', '(', 'u32', ')', '(', '(', 'values', '->', 'group_size', '*', 'values', '->', 'nbanks', ')', '/', '(', 'values', '->', 'blocksize', '*', 'values', '->', 'nsamples', '*', 'tile_width', ')', ')', ')', ';', '*', 'height_align', '=', 'macro_tile_height', '*', 'tile_height', ';', '*', 'depth_align', '=', '1', ';', '*', 'base_align', '=', 'max', '(', 'macro_tile_bytes', ',', '(', '*', 'pitch_align', ')', '*', 'values', '->', 'blocksize', '*', '(', '*', 'height_align', ')', '*', 'values', '->', 'nsamples', ')', ';', 'break', ';', 'default', ':', 'return', '-', 'EINVAL', ';', '}', 'return', '0', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1661,"['encode_ginst', '(', 'MonoAotCompile', '*', 'acfg', ',', 'MonoGenericInst', '*', 'inst', ',', 'guint8', '*', 'buf', ',', 'guint8', '*', '*', 'endbuf', ')', '{', 'guint8', '*', 'p', '=', 'buf', ';', 'int', 'i', ';', 'encode_value', '(', 'inst', '->', 'type_argc', ',', 'p', ',', '&', 'p', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'inst', '->', 'type_argc', ';', '++', 'i', ')', 'encode_klass_ref', '(', 'acfg', ',', 'mono_class_from_mono_type', '(', 'inst', '->', 'type_argv', '[', 'i', ']', ')', ',', 'p', ',', '&', 'p', ')', ';', '*', 'endbuf', '=', 'p', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1662,"['pairreplace', '(', 'VALUE_PAIR', '*', '*', 'first', ',', 'VALUE_PAIR', '*', 'replace', ')', '{', 'VALUE_PAIR', '*', 'i', ',', '*', 'next', ';', 'VALUE_PAIR', '*', '*', 'prev', '=', 'first', ';', 'if', '(', '*', 'first', '==', 'NULL', ')', '{', '*', 'first', '=', 'replace', ';', 'return', ';', '}', '/', '*', '*', '\tNot', 'an', 'empty', 'list', ',', 'so', 'find', 'item', 'if', 'it', 'is', 'there', ',', '*', '\treplace', 'it', '.', 'Note', ',', 'we', 'always', 'replace', 'the', 'first', 'one', ',', '*', '\twe', 'ignore', 'any', 'others', 'that', 'might', 'exist', '.', 'for', '(', 'i', '=', '*', 'first', ';', 'i', ';', 'i', '=', 'next', ')', '{', 'next', '=', 'i', '->', 'next', ';', '/', '*', '*', '\tFound', 'the', 'first', 'attribute', ',', 'replace', 'it', ',', '*', '\tand', 'return', '.', 'if', '(', '(', 'i', '->', 'attribute', '==', 'replace', '->', 'attribute', ')', '&&', '(', 'i', '->', 'vendor', '==', 'replace', '->', 'vendor', ')', ')', '{', '*', 'prev', '=', 'replace', ';', '/', '*', '*', '\tShould', 'really', 'assert', 'that', 'replace', '->', 'next', '==', 'replace', '->', 'next', '=', 'next', ';', 'pairbasicfree', '(', 'i', ')', ';', 'return', ';', '}', '/', '*', '*', '\tPoint', 'to', 'where', 'the', 'attribute', 'should', 'go', '.', 'prev', '=', '&', 'i', '->', 'next', ';', '}', '/', '*', '*', '\tIf', 'we', 'got', 'here', ',', 'we', ""didn't"", 'find', 'anything', 'to', 'replace', ',', '*', '\tstopped', 'at', 'the', 'last', 'item', ',', 'which', 'we', 'just', 'append', 'to', '.', '*', 'prev', '=', 'replace', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1663,"['{', 'struct', 'fnode', '*', 'e', ';', 'for', '(', 'e', '=', 'x', '->', 'next', ';', 'e', '!=', 'x', ';', 'e', '=', 'e', '->', 'next', ')', '{', 'if', '(', 'e', '->', 'is_dir', ')', '{', 'print_renames', '(', 'dir_children', '(', 'e', ')', ')', ';', '}', 'else', '{', 'if', '(', 'is_rename_file', '(', 'e', ')', ')', '{', 'printf', '(', '""""', ',', 'e', '->', 'path', ',', 'e', '->', 'x', '.', 'file', '.', 'content_peer', '->', 'path', ')', ';', '}', '}', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1664,"['skip_forwardCmd', '(', 'int', 'n', ')', '{', 'Require', '(', 'n', '>=', '0', ',', 'err', '(', '""""', ')', ')', ';', 'if', '(', '_dataFILE', '.', 'back', '(', ')', '.', 'get_type', '(', ')', '==', 'DataFile', ':', ':', 'from_cmdfile', ')', '{', 'warning', '(', '""""', ')', ';', 'return', 'true', ';', '}', 'while', '(', 'n', '--', '>', '0', ')', '{', 'if', '(', '_dataFILE', '.', 'back', '(', ')', '.', 'get_type', '(', ')', '!=', 'DataFile', ':', ':', 'ascii', ')', '{', '/', '/', 'type', '=', '0', 'ascii', ',', 'others', 'unsigned', 'char', 'tmpB', ';', 'if', '(', '1', '!=', 'fread', '(', '(', 'char', '*', ')', '&', 'tmpB', ',', 'sizeof', '(', 'tmpB', ')', ',', '1', ',', '_dataFILE', '.', 'back', '(', ')', '.', 'get_fp', '(', ')', ')', ')', '{', 'warning', '(', '""""', ')', ';', 'return', 'false', ';', '}', 'if', '(', 'feof', '(', '_dataFILE', '.', 'back', '(', ')', '.', 'get_fp', '(', ')', ')', ')', '{', 'set_eof_flag_on_data_file', '(', ')', ';', 'warning', '(', '""""', ',', '_dataFILE', '.', 'back', '(', ')', '.', 'get_name', '(', ')', ',', '""""', ',', '""""', ')', ';', 'break', ';', '}', '}', 'else', '{', '/', '/', 'Ascii', 'GriString', 'inLine', '(', '128', ')', ';', '/', '/', 'Start', 'if', '(', 'inLine', '.', 'line_from_FILE', '(', '_dataFILE', '.', 'back', '(', ')', '.', 'get_fp', '(', ')', ')', ')', '{', 'set_eof_flag_on_data_file', '(', ')', ';', 'warning', '(', '""""', ',', '_dataFILE', '.', 'back', '(', ')', '.', 'get_name', '(', ')', ',', '""""', ',', '""""', ')', ';', 'return', 'true', ';', '}', '_dataFILE', '.', 'back', '(', ')', '.', 'increment_line', '(', ')', ';', '}', '}', 'return', 'true', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1665,"['single', '(', 'int', 'i', ',', 'int', 'j', ',', 'int', 'itype', ',', 'int', 'jtype', ',', 'double', 'rsq', ',', 'double', 'factor_coul', ',', 'double', 'factor_lj', ',', 'double', '&', 'fforce', ')', '{', 'double', 'r2inv', ',', 'r', ',', 'egamma', ',', 'fgamma', ',', 'prefactor', ';', 'double', 'fraction', ',', 'table', ',', 'forcecoul', ',', 'phicoul', ';', 'int', 'itable', ';', 'r2inv', '=', '1', '.', '0', '/', 'rsq', ';', 'if', '(', '!ncoultablebits', '||', 'rsq', '<=', 'tabinnersq', ')', '{', 'r', '=', 'sqrt', '(', 'rsq', ')', ';', 'egamma', '=', '1', '.', '0', '-', '(', 'r', '/', 'cut_coul', ')', '*', 'force', '->', 'kspace', '->', 'gamma', '(', 'r', '/', 'cut_coul', ')', ';', 'fgamma', '=', '1', '.', '0', '+', '(', 'rsq', '/', 'cut_coulsq', ')', '*', 'force', '->', 'kspace', '->', 'dgamma', '(', 'r', '/', 'cut_coul', ')', ';', 'prefactor', '=', 'force', '->', 'qqrd2e', '*', 'atom', '->', 'q', '[', 'i', ']', '*', 'atom', '->', 'q', '[', 'j', ']', '/', 'r', ';', 'forcecoul', '=', 'prefactor', '*', 'fgamma', ';', 'if', '(', 'factor_coul', '<', '1', '.', '0', ')', 'forcecoul', '-=', '(', '1', '.', '0', '-', 'factor_coul', ')', '*', 'prefactor', ';', '}', 'else', '{', 'union_int_float_t', 'rsq_lookup', ';', 'rsq_lookup', '.', 'f', '=', 'rsq', ';', 'itable', '=', 'rsq_lookup', '.', 'i', '&', 'ncoulmask', ';', 'itable', '>>=', 'ncoulshiftbits', ';', 'fraction', '=', '(', 'rsq_lookup', '.', 'f', '-', 'rtable', '[', 'itable', ']', ')', '*', 'drtable', '[', 'itable', ']', ';', 'table', '=', 'ftable', '[', 'itable', ']', '+', 'fraction', '*', 'dftable', '[', 'itable', ']', ';', 'forcecoul', '=', 'atom', '->', 'q', '[', 'i', ']', '*', 'atom', '->', 'q', '[', 'j', ']', '*', 'table', ';', 'if', '(', 'factor_coul', '<', '1', '.', '0', ')', '{', 'table', '=', 'ctable', '[', 'itable', ']', '+', 'fraction', '*', 'dctable', '[', 'itable', ']', ';', 'prefactor', '=', 'atom', '->', 'q', '[', 'i', ']', '*', 'atom', '->', 'q', '[', 'j', ']', '*', 'table', ';', 'forcecoul', '-=', '(', '1', '.', '0', '-', 'factor_coul', ')', '*', 'prefactor', ';', '}', '}', 'fforce', '=', 'forcecoul', '*', 'r2inv', ';', 'if', '(', '!ncoultablebits', '||', 'rsq', '<=', 'tabinnersq', ')', 'phicoul', '=', 'prefactor', '*', 'egamma', ';', 'else', '{', 'table', '=', 'etable', '[', 'itable', ']', '+', 'fraction', '*', 'detable', '[', 'itable', ']', ';', 'phicoul', '=', 'atom', '->', 'q', '[', 'i', ']', '*', 'atom', '->', 'q', '[', 'j', ']', '*', 'table', ';', '}', 'if', '(', 'factor_coul', '<', '1', '.', '0', ')', 'phicoul', '-=', '(', '1', '.', '0', '-', 'factor_coul', ')', '*', 'prefactor', ';', 'return', 'phicoul', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1666,"['setGame', '(', 'KReversiGame', '*', 'game', ')', '{', '/', '/', 'disconnect', 'signals', 'from', 'previous', 'game', 'if', 'they', 'exist', ',', '/', '/', 'we', 'are', 'not', 'interested', 'in', 'them', 'if', '(', 'm_game', ')', '{', 'disconnect', '(', 'm_game', ',', 'SIGNAL', '(', 'boardChanged', '(', ')', ')', ',', 'this', ',', 'SLOT', '(', 'updateBoard', '(', ')', ')', ')', ';', 'disconnect', '(', 'm_game', ',', 'SIGNAL', '(', 'moveFinished', '(', ')', ')', ',', 'this', ',', 'SLOT', '(', 'gameMoveFinished', '(', ')', ')', ')', ';', 'disconnect', '(', 'm_game', ',', 'SIGNAL', '(', 'gameOver', '(', ')', ')', ',', 'this', ',', 'SLOT', '(', 'gameOver', '(', ')', ')', ')', ';', 'disconnect', '(', 'm_game', ',', 'SIGNAL', '(', 'whitePlayerCantMove', '(', ')', ')', ',', 'this', ',', 'SLOT', '(', 'whitePlayerCantMove', '(', ')', ')', ')', ';', 'disconnect', '(', 'm_game', ',', 'SIGNAL', '(', 'blackPlayerCantMove', '(', ')', ')', ',', 'this', ',', 'SLOT', '(', 'blackPlayerCantMove', '(', ')', ')', ')', ';', 'delete', 'm_game', ';', '}', 'm_game', '=', 'game', ';', 'if', '(', 'm_game', ')', '{', 'connect', '(', 'm_game', ',', 'SIGNAL', '(', 'boardChanged', '(', ')', ')', ',', 'this', ',', 'SLOT', '(', 'updateBoard', '(', ')', ')', ')', ';', 'connect', '(', 'm_game', ',', 'SIGNAL', '(', 'moveFinished', '(', ')', ')', ',', 'this', ',', 'SLOT', '(', 'gameMoveFinished', '(', ')', ')', ')', ';', 'connect', '(', 'm_game', ',', 'SIGNAL', '(', 'gameOver', '(', ')', ')', ',', 'this', ',', 'SLOT', '(', 'gameOver', '(', ')', ')', ')', ';', 'connect', '(', 'm_game', ',', 'SIGNAL', '(', 'whitePlayerCantMove', '(', ')', ')', ',', 'this', ',', 'SLOT', '(', 'whitePlayerCantMove', '(', ')', ')', ')', ';', 'connect', '(', 'm_game', ',', 'SIGNAL', '(', 'blackPlayerCantMove', '(', ')', ')', ',', 'this', ',', 'SLOT', '(', 'blackPlayerCantMove', '(', ')', ')', ')', ';', 'm_game', '->', 'setDelay', '(', 'm_delay', ')', ';', '}', 'm_hint', '=', 'KReversiMove', '(', ')', ';', 'updateBoard', '(', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1667,"['#ifdef', '(', 'ac_parameter_list', 'kc_p', ',', 'void', '(', '*', 'kc_printer', ')', '(', 'char', '*', ',', 'uview', ')', ',', 'uview', 'kc_current_view', ')', '(', 'kc_p', ',', 'kc_printer', ',', 'kc_current_view', ')', 'ac_parameter_list', 'kc_p', ';', 'void', '(', '*', 'kc_printer', ')', 'KC__P', '(', '(', 'char', '*', ',', 'uview', ')', ')', ';', 'uview', 'kc_current_view', ';', '{', 'assert_ac_parameter_list', '(', 'kc_p', ',', '""""', ')', ';', 'switch', '(', '(', 'int', ')', 'kc_current_view', ')', '{', 'case', '(', 'int', ')', 'view_gen_fnkdecls', ':', '{', 'if', '(', '(', 'kc_p', '->', 'prod_sel', '==', 'sel_Consac_parameter_list', ')', '&&', '(', 'kc_p', '->', 'u', '.', 'Consac_parameter_list', '.', 'ac_parameter_list_1', '->', 'prod_sel', '==', 'sel_Nilac_parameter_list', ')', ')', '{', '#line', '7620', 'ac_parameter_declaration', 'h', '=', 'kc_p', '->', 'u', '.', 'Consac_parameter_list', '.', 'ac_parameter_declaration_1', ';', 'unparse_ac_parameter_declaration', '(', 'h', ',', 'kc_printer', ',', 'kc_current_view', ')', ';', '{', '(', '*', 'kc_printer', ')', '(', '""""', ',', 'kc_current_view', ')', ';', '}', '}', 'if', '(', '(', 'kc_p', '->', 'prod_sel', '==', 'sel_Consac_parameter_list', ')', ')', '{', '#line', '7621', 'ac_parameter_declaration', 'h', '=', 'kc_p', '->', 'u', '.', 'Consac_parameter_list', '.', 'ac_parameter_declaration_1', ';', '#line', '7621', 'ac_parameter_list', 't', '=', 'kc_p', '->', 'u', '.', 'Consac_parameter_list', '.', 'ac_parameter_list_1', ';', 'unparse_ac_parameter_list', '(', 't', ',', 'kc_printer', ',', 'kc_current_view', ')', ';', '{', '(', '*', 'kc_printer', ')', '(', '""""', ',', 'kc_current_view', ')', ';', '}', 'unparse_ac_parameter_declaration', '(', 'h', ',', 'kc_printer', ',', 'kc_current_view', ')', ';', '{', '(', '*', 'kc_printer', ')', '(', '""""', ',', 'kc_current_view', ')', ';', '}', '}', 'goto', 'kc_unparsing_default', ';', 'break', ';', '}', 'default', ':', 'kc_unparsing_default', ':', 'case', '(', 'int', ')', 'base_uview', ':', '{', 'if', '(', '(', 'kc_p', '->', 'prod_sel', '==', 'sel_Consac_parameter_list', ')', '&&', '(', 'kc_p', '->', 'u', '.', 'Consac_parameter_list', '.', 'ac_parameter_list_1', '->', 'prod_sel', '==', 'sel_Nilac_parameter_list', ')', ')', '{', '#line', '7577', 'ac_parameter_declaration', 'h', '=', 'kc_p', '->', 'u', '.', 'Consac_parameter_list', '.', 'ac_parameter_declaration_1', ';', 'unparse_ac_parameter_declaration', '(', 'h', ',', 'kc_printer', ',', 'kc_current_view', ')', ';', '}', 'if', '(', '(', 'kc_p', '->', 'prod_sel', '==', 'sel_Consac_parameter_list', ')', ')', '{', '#line', '7578', 'ac_parameter_declaration', 'h', '=', 'kc_p', '->', 'u', '.', 'Consac_parameter_list', '.', 'ac_parameter_declaration_1', ';', '#line', '7578', 'ac_parameter_list', 't', '=', 'kc_p', '->', 'u', '.', 'Consac_parameter_list', '.', 'ac_parameter_list_1', ';', 'unparse_ac_parameter_list', '(', 't', ',', 'kc_printer', ',', 'kc_current_view', ')', ';', '{', '(', '*', 'kc_printer', ')', '(', '""""', ',', 'kc_current_view', ')', ';', '}', 'unparse_ac_parameter_declaration', '(', 'h', ',', 'kc_printer', ',', 'kc_current_view', ')', ';', '}', 'switch', '(', '(', 'int', ')', 'kc_p', '->', 'prod_sel', ')', '{', 'case', '(', 'int', ')', 'sel_Consac_parameter_list', ':', 'unparse_ac_parameter_declaration', '(', 'kc_p', '->', 'u', '.', 'Consac_parameter_list', '.', 'ac_parameter_declaration_1', ',', 'kc_printer', ',', 'kc_current_view', ')', ';', 'unparse_ac_parameter_list', '(', 'kc_p', '->', 'u', '.', 'Consac_parameter_list', '.', 'ac_parameter_list_1', ',', 'kc_printer', ',', 'kc_current_view', ')', ';', 'break', ';', 'default', ':', ';', '}', 'break', ';', '}', '}', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  True,CWE-other  True
1668,"['help_env', '(', 'void', ')', '{', 'char', '*', 'cp', ';', 'string_list_ty', 'manpath', ';', 'string_ty', '*', 's', ';', 'string_list_ty', 'lib', ';', 'size_t', 'j', ',', 'k', ';', '/', '/', '/', '/', 'Honour', 'any', 'existing', 'MANPATH', 'setting', 'by', 'appending', 'only', '.', '/', '/', 'Read', 'the', 'MANPATH', 'to', 'set', 'the', 'initial', 'path', '.', '/', '/', 'cp', '=', 'getenv', '(', '""""', ')', ';', 'if', '(', 'cp', ')', '{', 's', '=', 'str_from_c', '(', 'cp', ')', ';', 'manpath', '.', 'split', '(', 's', ',', '""""', ')', ';', 'str_free', '(', 's', ')', ';', '}', '{', 's', '=', 'str_from_c', '(', '""""', ')', ';', 'manpath', '.', 'push_back', '(', 's', ')', ';', 'str_free', '(', 's', ')', ';', '}', 's', '=', 'str_from_c', '(', 'configured_mandir', '(', ')', ')', ';', 'manpath', '.', 'push_back_unique', '(', 's', ')', ';', 'str_free', '(', 's', ')', ';', '/', '/', '/', '/', 'Read', 'the', 'AEGIS_PATH', 'environment', 'variable', 'for', 'the', 'list', '/', '/', 'places', 'to', 'look', 'for', 'Aegis', 'libraries', '.', '/', '/', 'gonzo_report_path', '(', '&', 'lib', ')', ';', '/', '/', '/', '/', 'Use', 'the', 'AEGIS_LIB', 'and', 'LANGUAGE', '(', 'or', 'LANG', ')', '/', '/', 'variables', 'to', 'know', 'which', 'languages', 'to', 'add', '.', '/', '/', 'Default', 'to', '""""', 'if', 'not', 'set', '.', '/', '/', 'string_list_ty', 'lang', ';', 'cp', '=', 'getenv', '(', '""""', ')', ';', 'if', '(', 'cp', ')', '{', 'string_list_ty', 'wl', ';', 's', '=', 'str_from_c', '(', 'cp', ')', ';', 'wl', '.', 'split', '(', 's', ',', '""""', ')', ';', 'str_free', '(', 's', ')', ';', 'lang', '.', 'push_back_unique', '(', 'wl', ')', ';', '}', 'cp', '=', 'getenv', '(', '""""', ')', ';', 'if', '(', 'cp', ')', '{', 'string_list_ty', 'wl', ';', 's', '=', 'str_from_c', '(', 'cp', ')', ';', 'wl', '.', 'split', '(', 's', ',', '""""', ')', ';', 'str_free', '(', 's', ')', ';', 'lang', '.', 'push_back_unique', '(', 'wl', ')', ';', '}', 'if', '(', 'lang', '.', 'empty', '(', ')', ')', '{', 's', '=', 'str_from_c', '(', '""""', ')', ';', 'lang', '.', 'push_back', '(', 's', ')', ';', 'str_free', '(', 's', ')', ';', '}', '/', '/', '/', '/', 'convolve', 'the', 'lib', 'and', 'lang', 'lists', 'and', 'append', 'them', 'to', 'the', '/', '/', 'for', '(', 'j', '=', '0', ';', 'j', '<', 'lib', '.', 'nstrings', ';', '++', 'j', ')', '{', 'manpath', '.', 'push_back_unique', '(', 'lib', '.', 'string', '[', 'j', ']', ')', ';', 'for', '(', 'k', '=', '0', ';', 'k', '<', 'lang', '.', 'nstrings', ';', '++', 'k', ')', '{', 's', '=', 'os_path_join', '(', 'lib', '.', 'string', '[', 'j', ']', ',', 'lang', '.', 'string', '[', 'k', ']', ')', ';', 'manpath', '.', 'push_back_unique', '(', 's', ')', ';', 'str_free', '(', 's', ')', ';', '}', '}', '/', '/', '/', '/', 'set', 'the', 'MANPATH', 'environment', '/', '/', 's', '=', 'manpath', '.', 'unsplit', '(', '""""', ')', ';', 'env_set', '(', '""""', ',', 's', '->', 'str_text', ')', ';', 'str_free', '(', 's', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1669,"['L5', '(', ')', '{', 'register', 'object', '*', 'base', '=', 'vs_base', ';', 'register', 'object', '*', 'sup', '=', 'base', '+', 'VM5', ';', 'vs_check', ';', 'vs_top', '=', 'sup', ';', 'goto', 'TTL', ';', 'TTL', ':', ';', 'V5', '=', '(', '(', 'object', ')', 'VV', '[', '22', ']', ')', ';', 'base', '[', '0', ']', '=', '(', '*', '(', 'LnkLI17', ')', ')', '(', '(', '(', 'object', ')', 'VV', '[', '9', ']', ')', ',', 'V5', ',', '(', '(', 'object', ')', 'VV', '[', '4', ']', ')', ',', '(', '(', 'object', ')', 'VV', '[', '11', ']', ')', ')', ';', 'vs_top', '=', '(', 'vs_base', '=', 'base', '+', '0', ')', '+', '1', ';', 'return', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1670,"['cmp', '(', 'char', 'const', '*', 'a', ',', 'size_t', 'a_len', ',', 'char', 'const', '*', 'b', ',', 'size_t', 'b_len', ')', '{', 'if', '(', 'a_len', '<', 'b_len', ')', 'return', '-', '1', ';', 'if', '(', 'b_len', '<', 'a_len', ')', 'return', '1', ';', 'return', '(', 'strcmp', '(', 'a', ',', 'b', ')', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1671,"['patch', '(', 'const', 'char', '*', 'str', ')', '{', 'char', '*', 'p', '=', 'strchr', '(', 'egg_version', ',', ""''"", ')', ';', 'if', '(', '!p', ')', 'p', '=', '&', 'egg_version', '[', 'strlen', '(', 'egg_version', ')', ']', ';', 'sprintf', '(', 'p', ',', '""""', ',', 'str', ')', ';', 'egg_numver', '++', ';', 'sprintf', '(', '&', 'egg_xtra', '[', 'strlen', '(', 'egg_xtra', ')', ']', ',', '""""', ',', 'str', ')', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
1672,"['store_remove_link', '(', 'struct', 'most_aim_obj', '*', 'aim_obj', ',', 'struct', 'most_aim_attribute', '*', 'attr', ',', 'const', 'char', '*', 'buf', ',', 'size_t', 'len', ')', '{', 'struct', 'most_c_obj', '*', 'c', ';', 'char', 'buffer', '[', 'STRING_SIZE', ']', ';', 'char', '*', 'mdev', ';', 'char', '*', 'mdev_ch', ';', 'int', 'ret', ';', 'size_t', 'max_len', '=', 'min_t', '(', 'size_t', ',', 'len', '+', '1', ',', 'STRING_SIZE', ')', ';', 'strlcpy', '(', 'buffer', ',', 'buf', ',', 'max_len', ')', ';', 'strlcpy', '(', 'aim_obj', '->', 'remove_link', ',', 'buf', ',', 'max_len', ')', ';', 'ret', '=', 'split_string', '(', 'buffer', ',', '&', 'mdev', ',', '&', 'mdev_ch', ',', 'NULL', ')', ';', 'if', '(', 'ret', ')', 'return', 'ret', ';', 'c', '=', 'get_channel_by_name', '(', 'mdev', ',', 'mdev_ch', ')', ';', 'if', '(', 'IS_ERR', '(', 'c', ')', ')', 'return', '-', 'ENODEV', ';', 'if', '(', 'c', '->', 'aim0', '.', 'ptr', '==', 'aim_obj', '->', 'driver', ')', 'c', '->', 'aim0', '.', 'ptr', '=', 'NULL', ';', 'if', '(', 'c', '->', 'aim1', '.', 'ptr', '==', 'aim_obj', '->', 'driver', ')', 'c', '->', 'aim1', '.', 'ptr', '=', 'NULL', ';', 'if', '(', 'aim_obj', '->', 'driver', '->', 'disconnect_channel', '(', 'c', '->', 'iface', ',', 'c', '->', 'channel_id', ')', ')', 'return', '-', 'EIO', ';', 'return', 'len', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1673,"['cavan_daemon_stop', '(', 'struct', 'cavan_daemon_description', '*', 'desc', ')', '{', 'pid_t', 'pid', ';', 'if', '(', 'desc', '==', 'NULL', ')', '{', 'pr_red_info', '(', '""""', ')', ';', 'return', '-', 'EINVAL', ';', '}', 'if', '(', 'desc', '->', 'pidfile', ')', '{', 'char', 'buff', '[', '1024', ']', ';', 'ssize_t', 'readlen', ';', 'readlen', '=', 'file_read', '(', 'desc', '->', 'pidfile', ',', 'buff', ',', 'sizeof', '(', 'buff', ')', ')', ';', 'if', '(', 'readlen', '<', '0', ')', '{', 'pr_red_info', '(', '""""', ',', 'desc', '->', 'pidfile', ')', ';', 'return', 'readlen', ';', '}', 'remove', '(', 'desc', '->', 'pidfile', ')', ';', 'pid', '=', 'text2value_unsigned', '(', 'buff', ',', 'NULL', ',', '10', ')', ';', '}', 'else', 'if', '(', 'desc', '->', 'command', ')', '{', 'pid', '=', 'process_find_by_cmdline', '(', 'NULL', ',', 'desc', '->', 'command', ')', ';', 'if', '(', 'pid', '<', '0', ')', '{', 'pr_red_info', '(', '""""', ')', ';', 'return', 'pid', ';', '}', '}', '{', 'pr_red_info', '(', '""""', ')', ';', 'return', '-', 'EINVAL', ';', '}', 'return', 'kill', '(', 'pid', ',', 'SIGTERM', ')', ';', '}']",CWE-119  True,CWE-120  True,CWE-469  False,CWE-476  False,CWE-other  False
1674,"['lpfc_bsg_handle_sli_cfg_mbox', '(', 'struct', 'lpfc_hba', '*', 'phba', ',', 'struct', 'fc_bsg_job', '*', 'job', ',', 'struct', 'lpfc_dmabuf', '*', 'dmabuf', ')', '{', 'struct', 'lpfc_sli_config_mbox', '*', 'sli_cfg_mbx', ';', 'uint32_t', 'subsys', ';', 'uint32_t', 'opcode', ';', 'int', 'rc', '=', 'SLI_CONFIG_NOT_HANDLED', ';', 'phba', '->', 'mbox_ext_buf_ctx', '.', 'state', '=', 'LPFC_BSG_MBOX_HOST', ';', 'sli_cfg_mbx', '=', '(', 'struct', 'lpfc_sli_config_mbox', '*', ')', 'dmabuf', '->', 'virt', ';', 'if', '(', '!bsg_bf_get', '(', 'lpfc_mbox_hdr_emb', ',', '&', 'sli_cfg_mbx', '->', 'un', '.', 'sli_config_emb0_subsys', '.', 'sli_config_hdr', ')', ')', '{', 'subsys', '=', 'bsg_bf_get', '(', 'lpfc_emb0_subcmnd_subsys', ',', '&', 'sli_cfg_mbx', '->', 'un', '.', 'sli_config_emb0_subsys', ')', ';', 'opcode', '=', 'bsg_bf_get', '(', 'lpfc_emb0_subcmnd_opcode', ',', '&', 'sli_cfg_mbx', '->', 'un', '.', 'sli_config_emb0_subsys', ')', ';', 'if', '(', 'subsys', '==', 'SLI_CONFIG_SUBSYS_FCOE', ')', '{', 'switch', '(', 'opcode', ')', '{', 'case', 'FCOE_OPCODE_READ_FCF', ':', 'case', 'FCOE_OPCODE_GET_DPORT_RESULTS', ':', 'lpfc_printf_log', '(', 'phba', ',', 'KERN_INFO', ',', 'LOG_LIBDFC', ',', '""""', ',', 'opcode', ')', ';', 'rc', '=', 'lpfc_bsg_sli_cfg_read_cmd_ext', '(', 'phba', ',', 'job', ',', 'nemb_mse', ',', 'dmabuf', ')', ';', 'break', ';', 'case', 'FCOE_OPCODE_ADD_FCF', ':', 'case', 'FCOE_OPCODE_SET_DPORT_MODE', ':', 'case', 'LPFC_MBOX_OPCODE_FCOE_LINK_DIAG_STATE', ':', 'lpfc_printf_log', '(', 'phba', ',', 'KERN_INFO', ',', 'LOG_LIBDFC', ',', '""""', ',', 'opcode', ')', ';', 'rc', '=', 'lpfc_bsg_sli_cfg_write_cmd_ext', '(', 'phba', ',', 'job', ',', 'nemb_mse', ',', 'dmabuf', ')', ';', 'break', ';', 'default', ':', 'lpfc_printf_log', '(', 'phba', ',', 'KERN_INFO', ',', 'LOG_LIBDFC', ',', '""""', ',', 'opcode', ')', ';', 'rc', '=', '-', 'EPERM', ';', 'break', ';', '}', '}', 'else', 'if', '(', 'subsys', '==', 'SLI_CONFIG_SUBSYS_COMN', ')', '{', 'switch', '(', 'opcode', ')', '{', 'case', 'COMN_OPCODE_GET_CNTL_ADDL_ATTRIBUTES', ':', 'case', 'COMN_OPCODE_GET_CNTL_ATTRIBUTES', ':', 'case', 'COMN_OPCODE_GET_PROFILE_CONFIG', ':', 'lpfc_printf_log', '(', 'phba', ',', 'KERN_INFO', ',', 'LOG_LIBDFC', ',', '""""', ',', 'opcode', ')', ';', 'rc', '=', 'lpfc_bsg_sli_cfg_read_cmd_ext', '(', 'phba', ',', 'job', ',', 'nemb_mse', ',', 'dmabuf', ')', ';', 'break', ';', 'default', ':', 'lpfc_printf_log', '(', 'phba', ',', 'KERN_INFO', ',', 'LOG_LIBDFC', ',', '""""', ',', 'opcode', ')', ';', 'rc', '=', '-', 'EPERM', ';', 'break', ';', '}', '}', 'else', '{', 'lpfc_printf_log', '(', 'phba', ',', 'KERN_INFO', ',', 'LOG_LIBDFC', ',', '""""', ',', 'subsys', ',', 'opcode', ')', ';', 'rc', '=', '-', 'EPERM', ';', '}', '}', 'else', '{', 'subsys', '=', 'bsg_bf_get', '(', 'lpfc_emb1_subcmnd_subsys', ',', '&', 'sli_cfg_mbx', '->', 'un', '.', 'sli_config_emb1_subsys', ')', ';', 'opcode', '=', 'bsg_bf_get', '(', 'lpfc_emb1_subcmnd_opcode', ',', '&', 'sli_cfg_mbx', '->', 'un', '.', 'sli_config_emb1_subsys', ')', ';', 'if', '(', 'subsys', '==', 'SLI_CONFIG_SUBSYS_COMN', ')', '{', 'switch', '(', 'opcode', ')', '{', 'case', 'COMN_OPCODE_READ_OBJECT', ':', 'case', 'COMN_OPCODE_READ_OBJECT_LIST', ':', 'lpfc_printf_log', '(', 'phba', ',', 'KERN_INFO', ',', 'LOG_LIBDFC', ',', '""""', ',', 'opcode', ')', ';', 'rc', '=', 'lpfc_bsg_sli_cfg_read_cmd_ext', '(', 'phba', ',', 'job', ',', 'nemb_hbd', ',', 'dmabuf', ')', ';', 'break', ';', 'case', 'COMN_OPCODE_WRITE_OBJECT', ':', 'lpfc_printf_log', '(', 'phba', ',', 'KERN_INFO', ',', 'LOG_LIBDFC', ',', '""""', ',', 'opcode', ')', ';', 'rc', '=', 'lpfc_bsg_sli_cfg_write_cmd_ext', '(', 'phba', ',', 'job', ',', 'nemb_hbd', ',', 'dmabuf', ')', ';', 'break', ';', 'default', ':', 'lpfc_printf_log', '(', 'phba', ',', 'KERN_INFO', ',', 'LOG_LIBDFC', ',', '""""', ',', 'opcode', ')', ';', 'rc', '=', 'SLI_CONFIG_NOT_HANDLED', ';', 'break', ';', '}', '}', 'else', '{', 'lpfc_printf_log', '(', 'phba', ',', 'KERN_INFO', ',', 'LOG_LIBDFC', ',', '""""', ',', 'subsys', ',', 'opcode', ')', ';', 'rc', '=', 'SLI_CONFIG_NOT_HANDLED', ';', '}', '}', 'if', '(', 'rc', '!=', 'SLI_CONFIG_HANDLED', ')', 'phba', '->', 'mbox_ext_buf_ctx', '.', 'state', '=', 'LPFC_BSG_MBOX_IDLE', ';', 'return', 'rc', ';', '}']",CWE-119  False,CWE-120  False,CWE-469  False,CWE-476  False,CWE-other  False
